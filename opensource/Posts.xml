<?xml version="1.0" encoding="utf-8"?>
<posts>
  <row Id="1" PostTypeId="1" CreationDate="2015-06-23T17:33:09.110" Score="30" ViewCount="345" Body="&lt;p&gt;Given two open source projects, each with different licenses, are there metrics or resources I can use to determine if it is legitimate to copy code from one of the projects to the other?&lt;/p&gt;&#xA;" OwnerUserId="19" LastEditorUserId="174" LastEditDate="2015-06-26T13:29:15.007" LastActivityDate="2015-07-02T13:44:35.767" Title="How can I determine if two open source licenses are compatible with each other?" Tags="&lt;license-compatibility&gt;" AnswerCount="3" CommentCount="5" FavoriteCount="3" />
  <row Id="3" PostTypeId="2" ParentId="1" CreationDate="2015-06-23T17:42:35.057" Score="39" Body="&lt;p&gt;I always look at the schema drawn by David Wheeler: &lt;a href=&quot;http://www.dwheeler.com/essays/floss-license-slide.html&quot;&gt;Essay: FLOSS licenses&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/k1G9Z.jpg&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The arrows show which license you can use in the context of another license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For instance: you can use software distributed as ASL 2.0 inside an LGPLv3 project and (a fortiori) inside a GPLv3 or AGPLv3 project. You can't use LGPLv3 software inside an ASL 2.0 project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Just follow the arrows as a rule of thumb and double-check when in doubt.&lt;/p&gt;&#xA;" OwnerUserId="27" LastActivityDate="2015-06-23T17:42:35.057" CommentCount="3" />
  <row Id="4" PostTypeId="2" ParentId="1" CreationDate="2015-06-23T17:42:42.840" Score="5" Body="&lt;p&gt;&quot;Compatible&quot; in this case means that you can satisfy the terms of both licenses. So the only general approach is to read the licences, understand your obligations under all of them, and then determine if you can satisfy all of them.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For some common licenses, other people have already done that work. For example, the Free Software Foundation maintains a page called &lt;a href=&quot;http://www.gnu.org/licenses/license-list.en.html&quot;&gt;“Various Licenses and Comments about Them”&lt;/a&gt; where they say if they believe a license is GPL-compatible. &lt;/p&gt;&#xA;" OwnerUserId="17" LastActivityDate="2015-06-23T17:42:42.840" CommentCount="0" />
  <row Id="5" PostTypeId="1" CreationDate="2015-06-23T17:42:48.173" Score="1" ViewCount="76" Body="&lt;p&gt;I'm in academia and I think that as a matter of principle, my code should be open source.  It's not likely to have a lot of users.  It might have none other than myself.  I have it published on github, even if it might be just for the convenience of using the github interface.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now, how do I choose a suitable license?&lt;/p&gt;&#xA;" OwnerUserId="33" LastActivityDate="2015-06-23T17:57:04.187" Title="How do I choose a suitable license for my academic software?" Tags="&lt;licensing&gt;&lt;software&gt;" AnswerCount="1" CommentCount="1" ClosedDate="2015-06-23T17:45:31.113" />
  <row Id="6" PostTypeId="1" CreationDate="2015-06-23T17:43:35.870" Score="13" ViewCount="88" Body="&lt;p&gt;I've been told that I should not use some format because it's patented (gif, mp3, h264). I'm not a U.S. citizen but from E.U.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Do these patents apply to me? Are they global? U.S. specific? Or is it more complicated?&lt;/p&gt;&#xA;" OwnerDisplayName="user38" LastEditorUserId="30" LastEditDate="2015-06-23T17:52:44.437" LastActivityDate="2015-06-23T18:12:04.267" Title="Do software patents for common formats (gif, mp3, h264) apply globally?" Tags="&lt;patents&gt;" AnswerCount="2" CommentCount="1" ClosedDate="2015-06-24T00:48:20.413" />
  <row Id="8" PostTypeId="2" ParentId="5" CreationDate="2015-06-23T17:45:03.767" Score="2" Body="&lt;p&gt;choose a license is an easy to use site that walks users through the selection process:&lt;br&gt;&#xA;&lt;a href=&quot;http://choosealicense.com/&quot; rel=&quot;nofollow&quot;&gt;http://choosealicense.com/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Quoting from the site, If you really don't want to hold any patent or you just want to hold a simple licence you can go ahead with MIT licence.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The MIT License is a permissive license that is short and to the point. It lets people do anything they want with your code as long as they provide attribution back to you and don’t hold you liable.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;If you want to hold any rights to your code you can use the Apache Licence.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The Apache License is a permissive license similar to the MIT License, but also provides an express grant of patent rights from contributors to users.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;If you think anyone can improve your code and distribute the newly created work, you can select the GPL licence.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The GPL (V2 or V3) is a copyleft license that requires anyone who distributes your code or a derivative work to make the source available under the same terms. V3 is similar to V2, but further restricts use in hardware that forbids software alterations.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;There are more licenses available such as Creative Commons etc. &lt;/p&gt;&#xA;" OwnerUserId="30" LastEditorUserId="51" LastEditDate="2015-06-23T17:57:04.187" LastActivityDate="2015-06-23T17:57:04.187" CommentCount="8" />
  <row Id="9" PostTypeId="1" AcceptedAnswerId="16" CreationDate="2015-06-23T17:46:50.093" Score="6" ViewCount="125" Body="&lt;p&gt;Codehaus shut down earlier this year. Many projects that were hosted there, including JIRA pages like &lt;a href=&quot;https://jira.codehaus.org/browse/MASPECTJ-131&quot;&gt;this one&lt;/a&gt;, are now broken.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What can I do to access all the lost content of projects that were hosted in Codehaus, such as bug reports? Was it uploaded/dumped somewhere?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Further, since Google Code is also shutting down, a similar problem will probably show up soon. What can be done to prevent the loss of important information like bug reports and wiki pages?&lt;/p&gt;&#xA;" OwnerUserId="34" LastEditorUserId="20" LastEditDate="2015-06-23T23:09:37.770" LastActivityDate="2015-06-23T23:11:15.620" Title="How can I recover content from an open source project host that has shut down?" Tags="&lt;codehaus&gt;&lt;project-management&gt;&lt;google-code&gt;" AnswerCount="1" CommentCount="2" />
  <row Id="10" PostTypeId="1" CreationDate="2015-06-23T17:50:11.627" Score="8" ViewCount="142" Body="&lt;p&gt;When I work on new libraries and tools I potentially would like them to get contributors and activity. However, I'm not sure what I could to in order to encourage more participation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As a project owner, how can I make my open source project more accessible to new participants?&lt;/p&gt;&#xA;" OwnerUserId="49" LastActivityDate="2015-06-23T20:15:38.190" Title="How do I structure my project in an inviting way?" Tags="&lt;project-management&gt;&lt;contributor&gt;&lt;collaboration&gt;" AnswerCount="3" CommentCount="1" FavoriteCount="1" ClosedDate="2015-06-24T00:28:17.773" />
  <row Id="11" PostTypeId="2" ParentId="6" CreationDate="2015-06-23T17:51:04.447" Score="8" Body="&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/GIF&quot;&gt;All relevant GIF patents expired in 2004&lt;/a&gt;. Use freely.&lt;/li&gt;&#xA;&lt;li&gt;MP3 is patented in the united states, so &lt;strong&gt;theoretically&lt;/strong&gt; you can use it in an open source... if it won't be published in the USA. TL;DR - Don't use freely.&lt;/li&gt;&#xA;&lt;li&gt;H264 - Also patented in the US. Same as MP3 above.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;In short, patents are national affairs, but if you want people of that country to be able to really utilize the open-sourceness of your application, do not use patented formats or software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That applies to anything with patent, anything with a licence that doesn't permit distribution/modification (basically, only use MIT and forms of GPL), and anything else that might prevent someone from legally downloading, modifying and distributing your application, under the laws of any country.&lt;/p&gt;&#xA;" OwnerUserId="40" LastEditorUserId="40" LastEditDate="2015-06-23T18:00:06.457" LastActivityDate="2015-06-23T18:00:06.457" CommentCount="2" />
  <row Id="12" PostTypeId="1" AcceptedAnswerId="58" CreationDate="2015-06-23T17:51:13.500" Score="11" ViewCount="123" Body="&lt;p&gt;Suppose I am developing a commercial product, but one heavily based on open source software. Further suppose one of the open source projects I use has a permissive license (such as Apache 2).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;At some point, I realize I need to make significant changes to that open source component. I have two choices:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Work with the upstream team to get my changes accepted into the open source version of the component.&lt;/li&gt;&#xA;&lt;li&gt;Create an internal fork of the component and make my changes there.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;The first option is obviously ideal, but there are considerations which may lead me to the second option. Some that I see are:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The changes may not be acceptable/desirable to the people managing the upstream.&lt;/li&gt;&#xA;&lt;li&gt;The timeframe for getting changes into the upstream project and available for use may not fit within my own schedule.&lt;/li&gt;&#xA;&lt;li&gt;I may wish to implement some proprietary features within the project.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;At what point does it become desirable/practical to take the second path, and what are seen as the major drawbacks to doing so?&lt;/p&gt;&#xA;" OwnerUserId="29" LastActivityDate="2015-06-23T18:39:14.697" Title="When should I consider creating a private fork of a suitably licensed project for commercial use?" Tags="&lt;forking&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="1" />
  <row Id="13" PostTypeId="1" CreationDate="2015-06-23T17:51:30.943" Score="22" ViewCount="335" Body="&lt;p&gt;The well-known MIT (or &quot;X11/MIT&quot; license reads):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Do I really need the long &quot;shouting&quot; warranty disclaimer at the end? And does it &lt;em&gt;have&lt;/em&gt; to be in all-caps? Or can I trim/lowercase it?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For many of my projects I lowercase it:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The software prodided &quot;as is&quot; [...]&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;but I would prefer to just replace it with something like:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The software is provided &quot;as is&quot;, without warranty of any kind. In no event shall the authors or copyright holders be liable for any claim.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;But I'm not sure if it is &quot;safe&quot; enough to do so ...&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note: I am from the E.U. (Netherlands).&lt;/p&gt;&#xA;" OwnerDisplayName="user38" LastEditorUserId="69" LastEditDate="2015-06-30T00:54:07.330" LastActivityDate="2015-06-30T00:54:07.330" Title="Can I change the caps to lowercase in licenses?" Tags="&lt;law&gt;&lt;license-file&gt;&lt;warranty&gt;" AnswerCount="2" CommentCount="1" FavoriteCount="3" />
  <row Id="14" PostTypeId="5" CreationDate="2015-06-23T17:53:46.380" Score="0" Body="&lt;p&gt;&quot;Forking&quot; is the process of creating either a private version of an open source project, or creating a competing version. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;A classic example of the latter is OpenOffice vs LibreOffice.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;In software engineering, a project fork happens when developers take a copy of source code from one software package and start independent development on it, creating a distinct and separate piece of software. The term often implies not merely a development branch, but a split in the developer community, a form of schism. -- &lt;a href=&quot;https://en.wikipedia.org/wiki/Fork_(software_development)&quot; rel=&quot;nofollow&quot;&gt;wikipedia&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The word &quot;fork&quot; is used to reflect that such an event often represents a &quot;fork in a road&quot; where an existing project begins to take two (often diverging) development paths.&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="29" LastEditDate="2015-06-26T13:40:00.930" LastActivityDate="2015-06-26T13:40:00.930" CommentCount="0" />
  <row Id="15" PostTypeId="4" CreationDate="2015-06-23T17:53:46.380" Score="0" Body="Use this tag for questions about creating either a private or competing version of an existing open project." OwnerUserId="29" LastEditorUserId="69" LastEditDate="2015-07-22T09:01:49.100" LastActivityDate="2015-07-22T09:01:49.100" CommentCount="0" />
  <row Id="16" PostTypeId="2" ParentId="9" CreationDate="2015-06-23T17:54:21.860" Score="6" Body="&lt;p&gt;You can recover that specific link via the way back machine:&lt;br&gt;&#xA;&lt;a href=&quot;http://web.archive.org/web/20150507060802/http://jira.codehaus.org/browse/MASPECTJ-131&quot; rel=&quot;nofollow&quot;&gt;http://web.archive.org/web/20150507060802/http://jira.codehaus.org/browse/MASPECTJ-131&lt;/a&gt;  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;codehaus says from their termination page that you can redirect your projects:  &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If you would like your projects links redirected then please see our redirector repository - create a sane squashed pull request and it will be added to the redirection system - you may add some 302s initially, but ultimately all redirects will be amended to 301s over time.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://www.codehaus.org/termination/&quot; rel=&quot;nofollow&quot;&gt;https://www.codehaus.org/termination/&lt;/a&gt;  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;In regards to google code shutting down, as well as codehaus, short term solution would be to switch to GitHub; however that poses the same problem(s)/risk(s) that you are running into now.  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'm a believer in owning your data - I would suggest setting up your repos on servers and domains that you own.&lt;/p&gt;&#xA;" OwnerUserId="30" LastEditorUserId="51" LastEditDate="2015-06-23T19:08:13.847" LastActivityDate="2015-06-23T19:08:13.847" CommentCount="7" />
  <row Id="18" PostTypeId="1" CreationDate="2015-06-23T17:56:12.417" Score="18" ViewCount="173" Body="&lt;p&gt;I'm a collaborator in a pretty popular open source project hosted on GitHub. We have a problem where people constantly show up in the issue tracker and post questions about the library.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Dealing with these questions is time consuming, it pings a lot of people and is generally annoying.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;How can I easily direct people to the right support channels?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;We already have a contributing.md file that suggests the right channels and that hasn't been working out too well for us.&lt;/p&gt;&#xA;" OwnerUserId="49" LastActivityDate="2015-06-24T09:22:23.530" Title="How do I stop people from opening questions in the issue tracker?" Tags="&lt;issue-tracking&gt;&lt;support&gt;" AnswerCount="4" CommentCount="2" />
  <row Id="19" PostTypeId="1" AcceptedAnswerId="26" CreationDate="2015-06-23T17:57:20.350" Score="14" ViewCount="160" Body="&lt;p&gt;I'm about to launch my current project as Open Source. People should feel free to do with the code whatever they want and luckily there are quite a few licensing options to choose from.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So I'm looking for something very permissive. I've heard of &lt;a href=&quot;https://en.wikipedia.org/wiki/WTFPL&quot;&gt;WTFPL&lt;/a&gt; and that sounds about right. There are other variants around as well though.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Should I care? I mean, people should do with the code whatever they want. What would be the difference between not putting any copyright on it and putting such a very permissive copyright on it?&lt;/p&gt;&#xA;" OwnerUserId="39" LastEditorUserId="61" LastEditDate="2015-06-23T18:23:43.000" LastActivityDate="2015-06-23T22:47:11.147" Title="Very permissive license" Tags="&lt;licensing&gt;&lt;permissive&gt;" AnswerCount="4" CommentCount="5" />
  <row Id="20" PostTypeId="2" ParentId="10" CreationDate="2015-06-23T17:59:13.163" Score="5" Body="&lt;p&gt;I can think of a few points&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Documentation is key&lt;/strong&gt; - Not just usage documentation, but also development documentation! How do I build your project? How do I run tests? How do the internal APIs work? Github has the wiki feature for that, although you can just create a directory with a bunch of .md files.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Make your directory structure predictable&lt;/strong&gt; - Look at how other successful projects did it. Make it clear what's the source code, what are the tests, where is the entry point, etc.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Making an attractive website helps&lt;/strong&gt; - With GitHub, just create a branch called &lt;code&gt;gh-pages&lt;/code&gt; and your project's website is instantly live.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Make it clear how contributions are expected to arrive&lt;/strong&gt; - Don't be afraid to ask for things before accepting a PR. If you have tests, require a successful build. If you have a coding style, ask contributors to adhere to it (some languages offer style enforcement for that). Also, make it clear that not just PRs are considered contributions, opening issues, asking (and answering) questions, writing documentations, are all equally helpful.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Be active&lt;/strong&gt; - You got an issue? Respond to it! Someone asked a question? Answer! The better you respond, the better people will feel about participating.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Make it fun, be helpful, not annoying&lt;/strong&gt; - Things that may seem obvious to you, as the core developer, will not be obvious to newcomers. Encourage people to contribute when they find bugs, support them on the way, make the journey fun for them.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Remain professional&lt;/strong&gt; - No bad humor, no racist jokes, no annoying comments. Please.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;As it turns out, many people will be willing to put the time and submit a pull request when guided and assisted properly. It makes them feel good, as well as making valuable contributions to your project.&lt;/p&gt;&#xA;" OwnerUserId="40" LastActivityDate="2015-06-23T17:59:13.163" CommentCount="0" />
  <row Id="21" PostTypeId="1" AcceptedAnswerId="42" CreationDate="2015-06-23T17:59:28.637" Score="13" ViewCount="188" Body="&lt;p&gt;I've heard both terms thrown around, but I'm a bit unclear as to how the licenses differ. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;How is Copyleft different to a permissive license? Is Copyleft just the standard for open source licenses?&lt;/p&gt;&#xA;" OwnerUserId="35" LastEditorUserId="69" LastEditDate="2015-07-24T23:06:57.000" LastActivityDate="2015-07-26T21:01:17.223" Title="What's the difference between permissive and copyleft licenses?" Tags="&lt;licensing&gt;&lt;copyleft&gt;&lt;permissive&gt;" AnswerCount="4" CommentCount="0" />
  <row Id="22" PostTypeId="2" ParentId="10" CreationDate="2015-06-23T18:00:32.237" Score="4" Body="&lt;p&gt;Where are some points you can do:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Create a website&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is a no-brainer: a website can inform about your project and can be the gathering point. You haven't host a website yourself, if you have the information in the web on some point (for instance on the main site for your project on a project hosting site like github), then it works too.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Have a public readable version control&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This way it is easy to access your source code and therefore makes it easier for others to join.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Have a clear policy on submits&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This makes it easy for possible contributors to understand what to do to participate. This could include stuff on how the code has to be formatted, which quality you expects and many other things.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Create good documentation&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As you look for contributors, this primarily means developer-doc. That includes source-code-documentation, but also some documentation with entry-points for beginning contributors.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Have automatic build-scripts and automated tests&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;An automated build-script makes it easier to get from source to a running program. Document which tools (compiler for instance) are expected for the buildscript to work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Having automated tests makes it easier for potential contributors to check, if they break anything with their changes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Have a clear goal&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Define a goal of your software, so contributors can check if they want to go in the same direction.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Provide communication channels&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That not only includes communication channels to you, but to each other in the forming community around your project. So this includes mailinglist, forum, irc-channel, ...&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-23T18:07:37.673" LastActivityDate="2015-06-23T18:07:37.673" CommentCount="4" />
  <row Id="23" PostTypeId="1" CreationDate="2015-06-23T18:02:52.313" Score="10" ViewCount="113" Body="&lt;p&gt;Some projects have a &lt;a href=&quot;https://en.wikipedia.org/wiki/Contributor_License_Agreement&quot; rel=&quot;nofollow&quot;&gt;Contributor License Agreement&lt;/a&gt; (as example the &lt;a href=&quot;http://www.apache.org/licenses/icla.txt&quot; rel=&quot;nofollow&quot;&gt;CLA of the Apache foundation&lt;/a&gt;).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What is it for? What are the consequences when I don't have one?&lt;/p&gt;&#xA;" OwnerUserId="64" LastEditorUserId="55" LastEditDate="2015-07-05T12:06:22.137" LastActivityDate="2015-07-06T12:21:05.513" Title="What are the advantages of adding a Contributor License Agreement to a project?" Tags="&lt;contributor-agreements&gt;" AnswerCount="3" CommentCount="1" FavoriteCount="3" />
  <row Id="24" PostTypeId="2" ParentId="10" CreationDate="2015-06-23T18:02:54.233" Score="5" Body="&lt;p&gt;Well this is my personal opinion. I think there is no really perfect way for this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'm participating in many open source projects, often on GitHub and sometimes on &quot;private&quot; hosted repositories. Due to this participation, I have some things I've always check before participating.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Are there clean &lt;a href=&quot;https://en.wikipedia.org/wiki/Coding_conventions&quot;&gt;Coding Guidelines&lt;/a&gt;? &lt;/li&gt;&#xA;&lt;li&gt;Is there a team structure behind the project? Can I see those team structure? It's very important for me, as if there is some serious issue or a bug which tends to be exploitable, I need someone who could be consulted and someone who feels responsible for it. If the project is unstructured, it may fail in a short time. If I have this feeling, I won't waste my precious time for this project. &lt;/li&gt;&#xA;&lt;li&gt;Is there a good documentation of all the things which already exist? Most developer tend to leave the documentation out until a certain state is achieved. If I would like to join in the first days, this may stop me. As I don't want to spend hours or days reading through one or two classes to find their reason for being. This is just awful. If you document it right from the start, it will help you to get (fast) new participants.&lt;/li&gt;&#xA;&lt;li&gt;And my last reason, and maybe the most important. Can I commit on my own in branches or forks? Or do I have to put a diff to an issue tracker. This isn't the hardest thing. But a diff in an issue tracker tends to lie around for days or maybe months. After some months the patch may be obsolete and needs to be refactored at all. This means, my work was just for the garbage can. If I could push it to an fork or a seperate branch and generate a pull-request, it will be collected and may be merged faster. No one loves to waste his work. :-)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Hopefully this will help you.&lt;/p&gt;&#xA;" OwnerUserId="52" LastActivityDate="2015-06-23T18:02:54.233" CommentCount="2" />
  <row Id="25" PostTypeId="2" ParentId="21" CreationDate="2015-06-23T18:04:07.410" Score="5" Body="&lt;p&gt;Copyleft emphasises that you can not do &lt;em&gt;everything&lt;/em&gt; with the source. The usual example is GPL-style restrictions, which do not allow using the code in a closed-source project&lt;sup&gt; &lt;sub&gt;&lt;a href=&quot;http://programmers.stackexchange.com/questions/220742/using-full-gpl-libraries-in-software-as-a-service-saas-models&quot;&gt;except as SAAS&lt;/a&gt;&lt;/sub&gt;&lt;/sup&gt;. (The “left” is sometimes interpreted as: you have to give your own code &lt;em&gt;back&lt;/em&gt; if you want to have the benefits of somebody else's open-source project.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Permissive licenses do allow this kind of reuse; their main requirement is that of attribution. (But I suppose public-domain / CC0, where not even attribution is necessary, would also be considered permissive.)&lt;/p&gt;&#xA;" OwnerUserId="56" LastEditorUserId="56" LastEditDate="2015-07-24T21:26:14.443" LastActivityDate="2015-07-24T21:26:14.443" CommentCount="7" />
  <row Id="26" PostTypeId="2" ParentId="19" CreationDate="2015-06-23T18:04:45.547" Score="14" Body="&lt;p&gt;If you are looking for something very permissive then you do have to use a license. Quoting &lt;a href=&quot;https://help.github.com/articles/open-source-licensing/&quot;&gt;GitHub's help page about licensing&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Generally speaking, the absence of a license means that the default copyright laws apply. This means that you retain all rights to your source code and that nobody else may reproduce, distribute, or create derivative works from your work.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;You might like the &lt;a href=&quot;http://opensource.org/licenses/MIT&quot;&gt;MIT license&lt;/a&gt;, which is a permissive, popular and OSI-approved license.&lt;/p&gt;&#xA;" OwnerUserId="18" LastActivityDate="2015-06-23T18:04:45.547" CommentCount="4" />
  <row Id="27" PostTypeId="1" AcceptedAnswerId="41" CreationDate="2015-06-23T18:06:49.023" Score="10" ViewCount="109" Body="&lt;p&gt;Suppose I have published a project under the Apache 2.0 (or similarly permissive license). Internally I have another version of the same project, which provides significantly extended functionality and is intended to be sold commercially.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The commercial version obviously is heavily based on the open source code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What license must I apply to the commercial version? Does it apply to all the code, or only the original open source files?&lt;/p&gt;&#xA;" OwnerUserId="29" LastActivityDate="2015-07-06T19:17:02.923" Title="What license must I use on a commercial version of an open source project?" Tags="&lt;licensing&gt;&lt;apache-2.0&gt;" AnswerCount="1" CommentCount="3" FavoriteCount="1" />
  <row Id="28" PostTypeId="2" ParentId="19" CreationDate="2015-06-23T18:10:02.393" Score="2" Body="&lt;p&gt;There's an excellent site that explains license types in plain English. &lt;a href=&quot;https://tldrlegal.com/&quot; rel=&quot;nofollow&quot;&gt;https://tldrlegal.com/&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The TL;DR version to that, that if you want a permissive license, go with either &lt;a href=&quot;http://opensource.org/licenses/MIT&quot; rel=&quot;nofollow&quot;&gt;MIT&lt;/a&gt; or &lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot; rel=&quot;nofollow&quot;&gt;Apache License&lt;/a&gt;, the main difference being that Apache License requires modifiers to keep a disclaimer and copyright line untouched.&lt;/p&gt;&#xA;" OwnerUserId="40" LastActivityDate="2015-06-23T18:10:02.393" CommentCount="0" />
  <row Id="30" PostTypeId="2" ParentId="19" CreationDate="2015-06-23T18:10:18.037" Score="10" Body="&lt;p&gt;&lt;a href=&quot;http://choosealicense.com/licenses/&quot;&gt;http://choosealicense.com/licenses/&lt;/a&gt; also has a listing of licenses as well as comprehensive listings of what they are capable of. For your purposes, &lt;a href=&quot;https://en.wikipedia.org/wiki/WTFPL&quot;&gt;WTFPL&lt;/a&gt; and &lt;a href=&quot;http://unlicense.org/&quot;&gt;The Unlicense&lt;/a&gt; provides an ultimately high freedom for your code to be reused.&lt;/p&gt;&#xA;" OwnerUserId="61" LastActivityDate="2015-06-23T18:10:18.037" CommentCount="2" />
  <row Id="31" PostTypeId="1" CreationDate="2015-06-23T18:10:51.180" Score="2" ViewCount="28" Body="&lt;p&gt;To clarify, since I don't know if &quot;platform&quot; is the right word: I'm talking about things like GitHub or the late Google Code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What features should I look for in a code publishing platform so that people can suggest patches as easily as possible, and preferably have them approved as easily as possible?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note that I'm &lt;em&gt;not&lt;/em&gt; talking about publicizing it, attracting developers, or anything like that.&lt;/p&gt;&#xA;" OwnerUserId="10" LastEditorUserId="10" LastEditDate="2015-06-23T18:18:48.130" LastActivityDate="2015-06-23T18:18:48.130" Title="What should I look for in a platform to make my project easy to edit?" Tags="&lt;contributor&gt;&lt;software&gt;&lt;accessibility&gt;" AnswerCount="0" CommentCount="4" ClosedDate="2015-06-23T18:27:01.020" />
  <row Id="32" PostTypeId="2" ParentId="6" CreationDate="2015-06-23T18:12:04.267" Score="-1" Body="&lt;p&gt;Patents generally are regional, so US-patents don't work in the EU and vice versa. But in general, most big companies claim their patent in most jurisdictions worldwide, especially US, EU and Japan.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-23T18:12:04.267" CommentCount="5" />
  <row Id="33" PostTypeId="1" CreationDate="2015-06-23T18:12:32.313" Score="27" ViewCount="244" Body="&lt;p&gt;I've found out that the license I picked for my project does not quite do what I wanted it do (bad research).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now I want to change the license. Is it as simple as changing the &lt;code&gt;LICENSE.txt&lt;/code&gt; in the root?&lt;/p&gt;&#xA;" OwnerUserId="64" LastEditorUserId="64" LastEditDate="2015-06-30T10:58:09.993" LastActivityDate="2015-07-18T10:16:54.387" Title="How can a project be relicensed?" Tags="&lt;licensing&gt;&lt;relicensing&gt;" AnswerCount="3" CommentCount="7" FavoriteCount="1" />
  <row Id="34" PostTypeId="2" ParentId="19" CreationDate="2015-06-23T18:12:38.750" Score="2" Body="&lt;p&gt;I would go with the &lt;a href=&quot;https://tldrlegal.com/license/mit-license&quot; rel=&quot;nofollow&quot;&gt;MIT&lt;/a&gt; or &lt;a href=&quot;https://tldrlegal.com/license/bsd-2-clause-license-%28freebsd%29&quot; rel=&quot;nofollow&quot;&gt;BDS 2-Clause&lt;/a&gt; license, because they're for one thing well known (as stated by Carpetsmoker), because they can't hold you liable when something goes wrong and because (as well stated by Carpetsmoker) is some people might get all funky about the &lt;a href=&quot;https://tldrlegal.com/license/do-wtf-you-want-to-public-license-v2-%28wtfpl-2.0%29&quot; rel=&quot;nofollow&quot;&gt;Do What The F*ck You Want&lt;/a&gt; license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You're not restricted to a license that's already out there; you can make your own license if you want to. The PHP Group uses their &lt;a href=&quot;https://tldrlegal.com/license/php-license-3.0-%28php%29&quot; rel=&quot;nofollow&quot;&gt;own license&lt;/a&gt;. You could make it so that people can do what the hell they would want to do with it, but can't hold you liable.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The downside to having your own license is that it won't be recognized as much as the &lt;a href=&quot;https://tldrlegal.com/license/php-license-3.0-%28php%29&quot; rel=&quot;nofollow&quot;&gt;PHP License&lt;/a&gt; or &lt;a href=&quot;https://tldrlegal.com/license/mit-license&quot; rel=&quot;nofollow&quot;&gt;MIT License&lt;/a&gt; would be.&lt;/p&gt;&#xA;" OwnerUserId="53" LastEditorUserId="37" LastEditDate="2015-06-23T22:47:11.147" LastActivityDate="2015-06-23T22:47:11.147" CommentCount="0" />
  <row Id="35" PostTypeId="1" AcceptedAnswerId="39" CreationDate="2015-06-23T18:13:12.587" Score="17" ViewCount="229" Body="&lt;p&gt;I have scientific software that I would like to release under the BSD 3-clause licence, but it includes some old code that was released under GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Can I still package it all and release as BSD?&lt;/p&gt;&#xA;" OwnerUserId="72" LastEditorUserId="190" LastEditDate="2015-06-30T10:32:42.567" LastActivityDate="2015-06-30T10:32:42.567" Title="If I include some GPL code in my project, can I release it as BSD?" Tags="&lt;gpl&gt;&lt;bsd&gt;&lt;relicensing&gt;" AnswerCount="4" CommentCount="1" />
  <row Id="36" PostTypeId="2" ParentId="13" CreationDate="2015-06-23T18:13:42.343" Score="18" Body="&lt;p&gt;Programmers.SE has a similar question: &lt;a href=&quot;http://programmers.stackexchange.com/questions/30329/can-i-remove-all-caps-and-shorten-the-disclaimer-on-my-license&quot;&gt;Can I remove all-caps and shorten the disclaimer on my License?&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Tim Post's answer (which he says was derived from advice from a lawyer) says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;&lt;p&gt;The caps allow you to say 'no way could they have missed the disclaimer, it is hardly fine print!' This is important in a license or EULA that non-lawyers must read and accept.&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;p&gt;There is a difference between 'express' and 'implied'. Some areas have laws that allow people to 'imply' a warranty, even though one was not explicitly offered, unless you make certain specifications.&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;  &#xA;  &lt;p&gt;He suggested not making any changes to existing licenses, as that basically creates a whole new (and likely weaker) license...&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Changing the text of a disclaim is certainly risky business. Your proposed change, for example, merely says the software is &quot;provided... without warranty of any kind&quot;. It is unclear whether that disclaims &lt;a href=&quot;https://en.wikipedia.org/wiki/Implied_warranty&quot;&gt;implicit warranties&lt;/a&gt; or only claims the absence of explicit warranties. Implicit warranties are automatically attached to qualifying transactions performed under a jurisdiction that applies them, so you saying, &quot;I don't offer any warranties on this good/service,&quot; doesn't clearly &quot;turn off&quot; the automatic implicit warranties that may apply.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As for the caps, there's a bit more hope. &lt;a href=&quot;http://www.adamsdrafting.com/all-capitals/&quot;&gt;This post, apparently by a contract writer&lt;/a&gt; says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;For example, section 2-316(2) [&lt;em&gt;of the Uniform Commercial Code (U.C.C.)&lt;/em&gt;] states that a disclaimer of the implied warranty of merchantability must be conspicuous. But section 1-201(10) of the U.C.C. specifies that &quot;language in the body of a form is 'conspicuous' if it is in larger or other contrasting type or color&quot;; it doesn’t say anthing about all capitals.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;And Amercian General Finance, Inc. v. Bassett, 285 F.3d 882 (9th Cir. 2002), debunked the notion that text needs to be in all caps to be conspicuous. I particularly like this sentence from that case: &quot;Lawyers who think their caps lock keys are instant 'make conspicuous' buttons are deluded.&quot;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;As a practical example of a non-caps disclaimer, Mozilla is ready to stand by their normal-cased bold-text disclaimer as sufficiently &quot;conspicuous&quot; in &lt;a href=&quot;https://www.mozilla.org/en-US/about/legal/terms/firefox/&quot;&gt;their terms of service&lt;/a&gt;. That said, I don't see how a plain-text license document (without rich-text formatting) could contain differently-sized or differently-colored text, so capital letters appear to be the best we can do in plain text.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I would also have grave concerns about altering a license document you received from someone else. If you plan to do this, absolutely consult a lawyer. (Actually, if you plan to do &lt;em&gt;anything&lt;/em&gt; detailed in this post, consult a lawyer.)&lt;/p&gt;&#xA;" OwnerUserId="50" LastActivityDate="2015-06-23T18:13:42.343" CommentCount="2" />
  <row Id="37" PostTypeId="2" ParentId="23" CreationDate="2015-06-23T18:15:39.037" Score="10" Body="&lt;p&gt;&lt;strong&gt;What is it for?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Many companies that open source their code want to keep control over the software. The CLA helps for that. Also it can be used for some legal issues. Usually it demands, that you guarantee you violate no rights of others if you contribute to the project and that you transfer the rights to the project-owner, while you get the guarantee your contribution is open-source is given in return.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What are the consequences when I don't have one?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As you don't own the code of other contributors, you cannot go against the OS-license under which the code was contributed to you. So you might not be able to switch the license (at least if it isn't a compatible switch) later on without removing that code. You also might be liable for any rights violated by this contribution. Also you can enforce violations against the license only for the parts you hold the copyright for.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Do I need one?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This depends. Usually for smaller projects i wouldn't bother, it is a hurdle for potential contributors. If the project gets bigger it might be useful though. Formulating a good CLA is difficult though and might be a job for a lawyer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Upsides:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Might secure against possible problems with the law (assuming your contributors do bad stuff).&lt;/li&gt;&#xA;&lt;li&gt;Can give you more control over the codebase.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Downsides:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Can be a hurdle for potential contributors.&lt;/li&gt;&#xA;&lt;li&gt;Can lead to a rift in the community, if many of your contributors disagree.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-26T20:07:54.240" LastActivityDate="2015-06-26T20:07:54.240" CommentCount="2" />
  <row Id="38" PostTypeId="2" ParentId="35" CreationDate="2015-06-23T18:17:22.583" Score="8" Body="&lt;p&gt;If you wrote the code, you can do whatever you want with it. You own the code, you own the copyright. A license is  you granting others certain rights, but as the author you have not given up any of your own.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What you (probably) can't do is then turn around and take legal action against someone who's still using your code under the terms of the old license (though this hardly matters as you're going to a more permissive license). They'd probably be &quot;grandfathered in&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you don't own all the code, you can not relicense code that others wrote (obviously). It was hard to tell from your question if you owned everything or not; if you're talking about bundling libraries with it that are GPL licensed (and not written by you), you may be in violation of the GPL if you distribute them (and you certainly can't re-license them). This would require a lot more information, however, and is probably deserving of its own question.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;TL;DR — If you're the copyright holder, you determine the license and can do whatever you want.&lt;/p&gt;&#xA;" OwnerUserId="67" LastActivityDate="2015-06-23T18:17:22.583" CommentCount="0" />
  <row Id="39" PostTypeId="2" ParentId="35" CreationDate="2015-06-23T18:17:29.690" Score="15" Body="&lt;p&gt;Not with the license as it is. You will need to contact all the licensors of the GPL code, and request that they release it to you in a license that is compatible with the BSD license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Alternatively, you can release your code as GPL too.&lt;/p&gt;&#xA;" OwnerUserId="80" LastActivityDate="2015-06-23T18:17:29.690" CommentCount="0" />
  <row Id="40" PostTypeId="2" ParentId="35" CreationDate="2015-06-23T18:20:42.510" Score="12" Body="&lt;p&gt;No, you cannot. By including GPL-code, you are including a dependency of GPL-protected code, and therefore your code is only derived work from it. The terms of GPL requires that derived work is also published under GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;From the GPL faq:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;If a library is released under the GPL (not the LGPL), does that mean that any program which uses it has to be under the GPL?&lt;/strong&gt;&lt;br&gt;&#xA;  Yes, because the program as it is actually run includes the library.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="61" LastEditorUserId="61" LastEditDate="2015-06-23T18:32:41.317" LastActivityDate="2015-06-23T18:32:41.317" CommentCount="6" />
  <row Id="41" PostTypeId="2" ParentId="27" CreationDate="2015-06-23T18:22:18.017" Score="12" Body="&lt;p&gt;First of all: if you or your company are the only contributors to the commercial project and you don't use contributions made by thirds to the OS-part, you can do whatever you like.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you use contributions made to the OS-version of your software you are bound to the license it is under (or you have an Contributors license agreement, but let's assume you have not). That means in the case of Apache 2.0 not much: you have to credit the original contributors mostly. As long as you keep these conditions inflicted by the OSS-license, you can create a license for the commercial version as you like.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-06T19:17:02.923" LastActivityDate="2015-07-06T19:17:02.923" CommentCount="0" />
  <row Id="42" PostTypeId="2" ParentId="21" CreationDate="2015-06-23T18:22:33.473" Score="14" Body="&lt;p&gt;The &lt;a href=&quot;http://copyfree.org/policy/copyleft&quot;&gt;Free Software Foundation&lt;/a&gt; invented the term Copyleft. Here's what they have to say about it:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Copyleft is a general method for making a program or other work free, and requiring all modified and extended versions of the program to be free as well. &lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The simplest way to make a program free software is to put it in the public domain, uncopyrighted. This allows people to share the program and their improvements, if they are so minded. But it also allows uncooperative people to convert the program into proprietary software. They can make changes, many or few, and distribute the result as a proprietary product. People who receive the program in that modified form do not have the freedom that the original author gave them; the middleman has stripped it away.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So copyleft implies a stronger set of restrictions in the license than the terms &quot;Free software&quot; or &quot;Open Source&quot; imply. Copyleft licenses &lt;em&gt;are&lt;/em&gt; both free and open source licenses, but not all licenses that are free software or open source licenses are Copyleft.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Copyleft denotes a type of FOSS license that prevents, through license terms, the &quot;proprietization&quot; of FOSS code. If a license is not Copyleft, but it is FOSS, the user may (depending on the exact terms of the license), be able to release binary-only copies of the software, with limited distribution (e.g. license fees and criminal penalties for those who distribute the binaries without authorization from the developers), and without providing the modified source code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;According to the FSF, the Four Freedoms are:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The freedom to run the program as you wish, for any purpose (freedom 0).&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The freedom to study how the program works, and change it so it does your computing as you wish (freedom 1). Access to the source code is a precondition for this.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The freedom to redistribute copies so you can help your neighbor (freedom 2).&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The freedom to distribute copies of your modified versions to others (freedom 3). By doing this you can give the whole community a chance to benefit from your changes. Access to the source code is a precondition for this.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;A copyleft license ensures that anyone who receives the binary version of the software is entitled to the source version (including any source modifications that went into any binaries they received), &lt;strong&gt;and&lt;/strong&gt; that person, in turn, is also &lt;strong&gt;required&lt;/strong&gt; to pass down the four freedoms to anyone else that &lt;em&gt;they&lt;/em&gt; pass said binaries/code on to.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A non-copyleft FOSS license could allow one person to receive the four freedoms as part of obtaining a copy of the code, but then that person can &lt;em&gt;choose&lt;/em&gt; whether they want to give the four freedoms (or any individual one of the freedoms) to someone else that they give the software to.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is important to note that, based on the way the copyleft was defined, a license that &lt;strong&gt;requires&lt;/strong&gt; a recipient of the source or binaries to respect &lt;em&gt;some&lt;/em&gt; freedoms, but not all of them, &lt;strong&gt;is not a copyleft license&lt;/strong&gt;. It is only copyleft if each recipient of the software must grant &lt;strong&gt;all four&lt;/strong&gt; freedoms to &lt;em&gt;everyone&lt;/em&gt; they give a copy to.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, consider these simplistic licenses:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;(1) &lt;strong&gt;You&lt;/strong&gt; are given the four freedoms with respect to this software. It's up to you if you want to give others any of the freedoms or not when you distribute it further.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;(2) &lt;strong&gt;You&lt;/strong&gt; are given the four freedoms with respect to this software. In addition, if you distribute this software to anyone else, you &lt;strong&gt;must&lt;/strong&gt; grant them Freedom 0 and Freedom 1. It's up to you if you want to give them Freedom 2, and you &lt;strong&gt;may not&lt;/strong&gt; give them Freedom 3.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;(3) &lt;strong&gt;You&lt;/strong&gt; are given the four freedoms with respect to this software. In addition, if you distribute this software to anyone else, you &lt;strong&gt;must&lt;/strong&gt; grant them &lt;strong&gt;all four Freedoms&lt;/strong&gt;; otherwise, you violate this license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The first license is a standard permissive license (similar to the BSD license), and is &lt;em&gt;not&lt;/em&gt; copyleft because it does not &lt;em&gt;require&lt;/em&gt; all four freedoms to be passed on.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The second license is a weird license (I've never seen one quite like this in practice) that &lt;em&gt;prohibits&lt;/em&gt; the passing-on of one freedom; &lt;em&gt;allows&lt;/em&gt; (optionally) another; and &lt;em&gt;requires&lt;/em&gt; two. But the requiring of the first two isn't enough to make it copyleft. It may be free software for the person receiving a copy initially, but it cannot be free software after that, because freedom 3 is prohibited from that point onwards in the distribution chain.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The third license is a standard, copyleft-compliant license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It's important to keep in mind that non-copyleft licenses can transform from being free/open source software to non-free, non-open source software licenses, because the enforcement of the preservation of the freedoms is &lt;em&gt;not&lt;/em&gt; in place. Consider this distribution chain, where each letter is a person, and &quot;A&quot; is the person who originally wrote the first copy of the software and determined its license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A -&gt; B -&gt; C -&gt; D -&gt; E&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If this is a non-copyleft FOSS license, the only person guaranteed to have all four freedoms is &lt;strong&gt;A&lt;/strong&gt; (well, technically, if he distributed it as FOSS, then &lt;strong&gt;B&lt;/strong&gt; should have gotten all four freedoms, too).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If this is licensed under copyleft, then if every person, all the way down to &lt;strong&gt;E&lt;/strong&gt;, does &lt;em&gt;not&lt;/em&gt; have all four freedoms in respect to the software, then someone violated the license terms set forth by &lt;strong&gt;A&lt;/strong&gt;, and is liable for copyright infringement!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Thus, when we talk about non-copyleft FOSS licenses, we have to ask the question, &lt;em&gt;free for &lt;strong&gt;whom&lt;/em&gt;&lt;/strong&gt;? -- but in the case of copyleft licensed software, the answer is, &lt;em&gt;free for &lt;strong&gt;everyone&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;&#xA;" OwnerUserId="68" LastEditorUserId="68" LastEditDate="2015-06-23T18:46:42.903" LastActivityDate="2015-06-23T18:46:42.903" CommentCount="0" />
  <row Id="43" PostTypeId="5" CreationDate="2015-06-23T18:22:34.037" Score="0" Body="&lt;p&gt;Licenses state the allowed uses, permissions and methods of operation within an area of interest. They state what actions are allowed to take place, and what actions are forbidden. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Licenses normally take controls of issues such as intellectual property, monetary rights, as well as attribution and modification rights.&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-06-23T19:08:40.513" LastActivityDate="2015-06-23T19:08:40.513" CommentCount="0" />
  <row Id="44" PostTypeId="4" CreationDate="2015-06-23T18:22:34.037" Score="0" Body="Licenses help define the allowed uses and methods of operation within a given area of interest." OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-06-23T19:08:29.273" LastActivityDate="2015-06-23T19:08:29.273" CommentCount="0" />
  <row Id="45" PostTypeId="2" ParentId="35" CreationDate="2015-06-23T18:23:40.513" Score="8" Body="&lt;p&gt;If you wrote the code yourself, then you're the licensor and can use the code as you see fit, &lt;em&gt;however&lt;/em&gt;:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;GPL does not allow sublicensing;&lt;/li&gt;&#xA;&lt;li&gt;If you used code from other sources (for example, &lt;a href=&quot;http://stackoverflow.com&quot;&gt;Stack Overflow&lt;/a&gt;), you'll need to attribute the code used, and review the license the code uses if the author/owner needs to give their express permission;&lt;/li&gt;&#xA;&lt;li&gt;If you released your code under a licence then change the license used, the &lt;em&gt;previous&lt;/em&gt; licence &lt;strong&gt;still applies&lt;/strong&gt; to those who use the code under that license. You will be unable to take any legal action against them&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;You (very obviously) can't 'pinch' code from somewhere and then relicense it (as your own creation).&lt;/p&gt;&#xA;" OwnerUserId="82" LastActivityDate="2015-06-23T18:23:40.513" CommentCount="2" />
  <row Id="46" PostTypeId="2" ParentId="33" CreationDate="2015-06-23T18:27:21.120" Score="18" Body="&lt;p&gt;As long as you are the only contributor: You can do it, without further problem.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Otherwise: It is difficult.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If others contributed to your project, you have to respect their rights. So you can only assume the rights given to you by the open source license. Your options are:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;contact all contributors and ask for their permission&lt;/li&gt;&#xA;&lt;li&gt;switch to a compatible license (this means, if your original license is permissive, it might have a lot compatible options, if it is copyleft, the compatible options may be limited)&lt;/li&gt;&#xA;&lt;li&gt;remove contributions of others before switching&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;As a note: your old version of the software released under the old license can still be used under the terms of the old license. If that license is pretty permissive that may include the relicensing under some other licenses.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-18T10:16:54.387" LastActivityDate="2015-07-18T10:16:54.387" CommentCount="1" />
  <row Id="47" PostTypeId="2" ParentId="23" CreationDate="2015-06-23T18:27:23.717" Score="0" Body="&lt;p&gt;You need one if you plan to re license your open source project under a different license. E.g. a commercial license. The agreement gives you full control of the contributed code so that you don't need contributor's permission later if you want to sell commercial closed source license for your open source project&lt;/p&gt;&#xA;" OwnerUserId="84" LastActivityDate="2015-06-23T18:27:23.717" CommentCount="0" />
  <row Id="48" PostTypeId="2" ParentId="33" CreationDate="2015-06-23T18:28:25.953" Score="15" Body="&lt;p&gt;As the copyright holder you can choose to re-license your code as you see fit. What you cannot do is revoke a license if it was given in perpetuity or before the term of the license expires. What does this mean?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You are able to license your code to different people using different licenses. You can even let them choose which license to use. You can sell the license, give it away, and whatever else you want to do with it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Once someone has been granted a license then they are free to use the code in the terms of that license, though. Many open source licenses have provisions for the license being &quot;perpetual&quot;, lasting forever. So, if you offer your code, for example, using the GPL license, then the people who use that license to use the code have perpetual rights to continue doing that. You cannot revoke those rights.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What you can do, is release a new version with a different license, then people using that new version will need to have new terms in place (or they could &quot;fork&quot; the project and continue using and maintaining the older, licensed version, them selves).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Summary: No, you cannot revoke a license, but you can change it for new users, and you can have multiple options for licensing.&lt;/p&gt;&#xA;" OwnerUserId="80" LastActivityDate="2015-06-23T18:28:25.953" CommentCount="0" />
  <row Id="49" PostTypeId="2" ParentId="23" CreationDate="2015-06-23T18:30:02.260" Score="7" Body="&lt;p&gt;A contributor license agreement can do several things:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;A CLA can &lt;strong&gt;require contributors to transfer copyright&lt;/strong&gt; of all contributions to the legal entity (person or corporation) responsible for your project. For example, the GNU project requires all contributions to have the copyrights transferred to the FSF. Without this provision, &lt;strong&gt;you cannot enforce copyright over all of your project&lt;/strong&gt;, since you don't own it. For example, if Alice writes module X for your project, and then Bob starts distributing module X in an unlawful way (e.g., your project is GPL-licensed and he's violating the GPL), you may not have legal standing to sue if Alice never transferred copyright of module X to you.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;A CLA can grant you the necessary rights to &lt;strong&gt;re-license the project&lt;/strong&gt; under a new license. By default, only a copyright holder can re-license a work, so a project with no CLA and hundreds of contributors needs to do a lot of legwork to have past contributors to agree to re-license their code. If you own all the copyrights (by authorship or transfer) or have a CLA that grants you generous re-licensing rights, you can re-license the whole project very easily.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;A CLA can &lt;strong&gt;protect you from copyright infringement performed by your contributors&lt;/strong&gt;. If Alice contributes some code, but then later it turns out she didn't have the legal write to give you that code. Bob actually wrote that code in a proprietary project and Alice just contributed it to your project without Bob's permission. You're committing copyright infringement by distributing Bob's code, and now Bob wants to sue you. If Alice contractually agreed, via a well-written CLA, that none of her contributions were infringing, you can more easily shift the blame back to her.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Note that a CLA may scare off potential contributors:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;They may not wish to assign copyright to you, either because they are uncomfortable with losing their copyright or because they are afraid you may re-license to project to a license they dislike.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;They may find the task of reading and signing a legal document onerous and uncomfortable.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="50" LastEditorUserId="50" LastEditDate="2015-07-06T12:21:05.513" LastActivityDate="2015-07-06T12:21:05.513" CommentCount="2" />
  <row Id="50" PostTypeId="2" ParentId="33" CreationDate="2015-06-23T18:31:09.183" Score="6" Body="&lt;p&gt;If you are not the sole author then it's more complicated. All contributors must agree to the license change explicitly. This agreement can be under the form of a Contributor License Agreement which states that the project owner is allowed to change the license or the previous license itself which grants the rights to distribute under a compatible license. If you don't have that then you will need to track down all the contributors and get them to agree. If any refuse the change then you are out of luck.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;If you are the only person who wrote the content in the project then you own the rights to relicense as much as you want. With the caveat that you can't revoke previous licenses the project was released under unless that license specifically has has a clause for revoking it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This means that for example, if the project was ever released under GPL then that version will forever be licensed under the GPL license which grants its rights to everyone who can get a version, and there is &lt;em&gt;nothing&lt;/em&gt; you can do to revoke that as specified in the GPL license.&lt;/p&gt;&#xA;" OwnerUserId="64" LastActivityDate="2015-06-23T18:31:09.183" CommentCount="0" />
  <row Id="51" PostTypeId="1" AcceptedAnswerId="90" CreationDate="2015-06-23T18:32:23.873" Score="12" ViewCount="117" Body="&lt;p&gt;Put simply, is there any way to find out how widely used a given open source project is? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Say, for example, I am looking for a serialization library. I can imagine various metrics to help choose among the many available, but a major one would be, &quot;How widely used is this?&quot;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Wide adoption tends to suggest either a very mature project, or one with a very active community.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For Python, &lt;a href=&quot;https://pypi.python.org/pypi&quot;&gt;PyPI&lt;/a&gt; at least provides download statistics. On GitHub you can see the number of forks as a guideline.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For a developer embarking on a new project, and wanting to leverage an OSP, this type of information is very valuable in making their choice.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The open source movement is not just about publishers, but consumers as well.&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="20" LastEditDate="2015-06-23T22:45:38.870" LastActivityDate="2015-08-06T19:46:55.283" Title="How can I find usage statistics for an open source project?" Tags="&lt;development&gt;" AnswerCount="6" CommentCount="5" FavoriteCount="1" />
  <row Id="52" PostTypeId="1" AcceptedAnswerId="86" CreationDate="2015-06-23T18:32:47.097" Score="23" ViewCount="443" Body="&lt;p&gt;Some years ago, I was working on a software company that used some copyrighted JAR dependencies that they had bought from a medium-size obscure private company for a very expensive price.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;After some time using their JARs, I figured out that most of the content was a GPL'd software that they repackaged, obfuscated, encrypted and started to sell as if they made it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is clearly a violation of the GPL terms (don't remember if it was GPL v2 or v3, but it is still a violation regardless of that). However, no one seems to care and I never heard about some lawyer suing somebody who is not a giant global player like Microsoft or Google due to GPL violation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Further, how to prove that there was a GPL violation, since the software was obfuscated, encrypted and can't be legally acquired easily? Further, who should/could sue them and how? Since I can't answer those positively, I might sadly conclude that GPL restrictions can't be enforced in practice and thus are just empty words.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I know that this question deeply depends on the country and regional laws, but I expect that answers might give some light about what may happen in practice in most place of the world about this.&lt;/p&gt;&#xA;" OwnerUserId="34" LastEditorUserId="98" LastEditDate="2015-07-08T21:17:16.697" LastActivityDate="2015-07-08T21:17:16.697" Title="What can/should I do when I see a violation to GPL restrictions?" Tags="&lt;licensing&gt;&lt;law&gt;&lt;gpl&gt;&lt;enforcement&gt;" AnswerCount="3" CommentCount="2" FavoriteCount="2" />
  <row Id="53" PostTypeId="1" AcceptedAnswerId="62" CreationDate="2015-06-23T18:33:47.053" Score="14" ViewCount="187" Body="&lt;p&gt;Can a project be licensed as &quot;open source&quot;, yet place a restriction on who can utilize the software?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, if my software falls under software export controls, can I continue to license it as &quot;open&quot;?&lt;/p&gt;&#xA;" OwnerUserId="22" LastEditorUserId="69" LastEditDate="2015-06-30T02:02:00.877" LastActivityDate="2015-06-30T02:02:00.877" Title="Can I restrict who can utilize my software?" Tags="&lt;licensing&gt;&lt;restrictions&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="1" />
  <row Id="54" PostTypeId="1" AcceptedAnswerId="78" CreationDate="2015-06-23T18:34:56.170" Score="17" ViewCount="320" Body="&lt;p&gt;I am working on a project, currently by myself. It's a side project, I'm not expecting to make money on it. It's posted on GitHub, and I'm going to be building a project page for it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Once it's built, how do I get other programmers to want to contribute? I am checking in code constantly, but no other contributors makes it hard to continue on my own. The whole purpose of me releasing it as Open Source was to get other contributors who know more about programming than I do.&lt;/p&gt;&#xA;" OwnerUserId="94" LastEditorDisplayName="user38" LastEditDate="2015-06-23T19:03:09.863" LastActivityDate="2015-06-25T16:13:37.197" Title="How do I attract new programmers?" Tags="&lt;collaboration&gt;" AnswerCount="5" CommentCount="3" FavoriteCount="1" />
  <row Id="55" PostTypeId="1" AcceptedAnswerId="66" CreationDate="2015-06-23T18:35:57.153" Score="28" ViewCount="489" Body="&lt;p&gt;According to Google, Open Source is...&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;denoting software for which the original source code is made freely available and may be redistributed and modified.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;It seems to be that the product seems to be available without restrictions to the public, as you can redistribute and modify it at will. It sounds like open source is like throwing something into the public domain?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So is there a difference between works classified as open source, and works in the public domain? What's the difference between the two?&lt;/p&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-07-13T14:01:11.320" Title="Does open source qualify as being part of the public domain?" Tags="&lt;law&gt;&lt;public-domain&gt;" AnswerCount="8" CommentCount="3" FavoriteCount="3" />
  <row Id="56" PostTypeId="2" ParentId="18" CreationDate="2015-06-23T18:38:31.600" Score="8" Body="&lt;p&gt;Closing them on sight should give a clear signal that asking in the wrong places is not appreciated. From there, it is possible to guide the users making an honest effort to look in the &lt;code&gt;contributing.md&lt;/code&gt; file.&lt;/p&gt;&#xA;" OwnerUserId="61" LastActivityDate="2015-06-23T18:38:31.600" CommentCount="0" />
  <row Id="57" PostTypeId="2" ParentId="12" CreationDate="2015-06-23T18:39:07.267" Score="6" Body="&lt;p&gt;There is a third option:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Create a fork and publish it under the same license as the original&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Your changes might not be desirable to the original upstream but that doesn't mean somebody else couldn't find use for them.&lt;/p&gt;&#xA;" OwnerUserId="95" LastActivityDate="2015-06-23T18:39:07.267" CommentCount="1" />
  <row Id="58" PostTypeId="2" ParentId="12" CreationDate="2015-06-23T18:39:14.697" Score="9" Body="&lt;p&gt;The main problem with a private fork is that you now have to do the maintenance work of merging any changes made on the upstream version. This work will become more and more the further your forks diverge because you will encounter more and more conflicts (including some non-obvious ones). There are, however, still situations where you might still want to do a fork:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The upstream project is practically dead and you don't expect many future updates from them anyway.&lt;/li&gt;&#xA;&lt;li&gt;The software already fulfills all your requirements (except those they won't implement) and so you believe you won't need any further updates from them anyway (even when security related).&lt;/li&gt;&#xA;&lt;li&gt;You need to make changes to the software which are so significant that future updates won't apply to you anyway (but then why aren't you developing from scratch?).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;By the way: When you use the software only internally, you don't even need a permissive license. Most copyleft licenses (like the GPL) only require you to give away your sourcecode when you give away the binary. When you keep it to yourself, nobody can force you to license anything.&lt;/p&gt;&#xA;" OwnerUserId="14" LastActivityDate="2015-06-23T18:39:14.697" CommentCount="2" />
  <row Id="59" PostTypeId="2" ParentId="55" CreationDate="2015-06-23T18:39:36.210" Score="3" Body="&lt;p&gt;Open source does not mean without restrictions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example the GPL license does not allow you to distribute the project without the source also being available.&lt;/p&gt;&#xA;" OwnerUserId="64" LastActivityDate="2015-06-23T18:39:36.210" CommentCount="0" />
  <row Id="60" PostTypeId="2" ParentId="55" CreationDate="2015-06-23T18:40:02.677" Score="6" Body="&lt;p&gt;Open source usually adds some restrictions. Common restrictions are the question of attribution of the original author, advertise with the software or relicense the software or modifications of it.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-23T18:40:02.677" CommentCount="0" />
  <row Id="61" PostTypeId="2" ParentId="55" CreationDate="2015-06-23T18:42:18.287" Score="1" Body="&lt;p&gt;No, in places that have a concept of &quot;public domain&quot; that normally means &quot;without copyright&quot;. However, Open Source Software generally means software which is licensed in such a way that it may be used freely (free as in freedom / libre, monetary cost has nothing to do with it). However, for something to be licensed it must still be under copyright (the license is just a limited grant of rights, but does not give you full rights to do whatever you want).&lt;/p&gt;&#xA;" OwnerUserId="67" LastActivityDate="2015-06-23T18:42:18.287" CommentCount="0" />
  <row Id="62" PostTypeId="2" ParentId="53" CreationDate="2015-06-23T18:42:18.360" Score="24" Body="&lt;p&gt;From the &lt;a href=&quot;http://opensource.org/osd&quot;&gt;Open Source Definition&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The license must not discriminate against any person or group of persons.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;and&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The license must not restrict anyone from making use of the program in&#xA;  a specific field of endeavor. For example, it may not restrict the&#xA;  program from being used in a business, or from being used for genetic&#xA;  research.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So a license restricting who can use your software isn't open source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;About the question regarding export restrictions: yes you can license it as OSS, even if it falls under export restrictions. Your license allow the usage, but laws might restrict it. That doesn't mean your license isn't open source.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="64" LastEditDate="2015-06-23T19:13:09.170" LastActivityDate="2015-06-23T19:13:09.170" CommentCount="1" />
  <row Id="64" PostTypeId="2" ParentId="13" CreationDate="2015-06-23T18:43:00.087" Score="2" Body="&lt;p&gt;Yes, you need a strictly noticeable presentation of the disclaimer paragraph in order for it to fulfill the legal definition of &quot;conspicuous&quot; text. For plaintext, this means &lt;code&gt;YOUR ONLY WAY IS ALL CAPS&lt;/code&gt;, but if your license is not in plain text, you can learn / copy from the &lt;a href=&quot;http://bandcamp.com/terms_of_use&quot; rel=&quot;nofollow&quot;&gt;Bandcamp Terms of use&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;[...] you won't find any 8-point type, or long sections of TOTALLY UNREADABLE ALL-CAPS intended to fulfill the legal definition of &quot;conspicuous&quot; (we're pretty sure Your Honor will accept &lt;strong&gt;&lt;code&gt;yellow, bold text&lt;/code&gt;&lt;/strong&gt; instead)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="61" LastActivityDate="2015-06-23T18:43:00.087" CommentCount="1" />
  <row Id="66" PostTypeId="2" ParentId="55" CreationDate="2015-06-23T18:43:49.193" Score="27" Body="&lt;p&gt;In a copyright context, &lt;a href=&quot;https://en.wikipedia.org/wiki/Public_domain&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;&lt;em&gt;public domain&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt; is a term which means the set of creative works not under copyright, because the work's copyright has either expired, never existed (such as U.S. government works), or been forfeited&lt;sup&gt;1&lt;/sup&gt;. Generally, no special restrictions apply to the reuse of public domain works, and they can be freely modified and redistributed without limitation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Open source software&lt;/em&gt;&lt;/strong&gt;, as defined by the Open Source Initiative's &lt;a href=&quot;http://opensource.org/osd-annotated&quot; rel=&quot;nofollow&quot;&gt;Open Source Definition&lt;/a&gt;, means software whose source code is available and can be freely modified and distributed. Open source software is typically still under copyright (i.e., typically &lt;em&gt;not&lt;/em&gt; in the public domain), but the author grants rights to users via a copyright license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Open source software and public domain software are by no means the same thing, but there is some overlap. Open source software &lt;em&gt;can&lt;/em&gt; be in the public domain, and public domain software &lt;em&gt;can&lt;/em&gt; satisfy the open source definition.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/UwnNO.png&quot; alt=&quot;Venn diagram showing intersection of Open Source and Public Domain&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The primary differences in definitions are:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Public domain software might not include source code.&lt;/strong&gt; Since public domain software automatically allows redistribution and modification, it satisfies &lt;em&gt;almost&lt;/em&gt; all of the open source criteria automatically, but not quite. It is notably missing the requirement that the program's source code be publicly available. It is therefore possible to have a piece of software in public domain that fails to satisfy the open source definition because its corresponding source code is unavailable.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Open source software can grant a more limited set of rights than public domain.&lt;/strong&gt; Like public domain works, open source software grants the right to modify and redistribute the work. However, an open source license may impose other restrictions that do not exist on public domain works. For example, the GNU GPL requires &lt;a href=&quot;https://en.wikipedia.org/wiki/Copyleft&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;copyleft&lt;/em&gt;&lt;/a&gt;: any derived work that uses GPL-licensed material may only be distributed under the terms of the GPL. Such a restriction does not violate the open source definition, but it is certainly far stricter than the public domain.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Open source software can be released under different licenses by the author.&lt;/strong&gt; The author of a copyrighted open source program can &lt;a href=&quot;https://en.wikipedia.org/wiki/Multi-licensing&quot; rel=&quot;nofollow&quot;&gt;issue multiple licenses&lt;/a&gt; on the work. A common case of this is when an author licenses a program under a copyleft license, but will also issue individual proprietary licenses for a fee. Users can either get the software free of charge under copyleft rules, or pay money to get the software under another license. (See OSS Watch's article &quot;&lt;a href=&quot;http://oss-watch.ac.uk/resources/duallicence2&quot; rel=&quot;nofollow&quot;&gt;Dual-Licensing as a Business Model&lt;/a&gt;&quot;.) Such a scheme is impossible with public domain software, because it relies on the author licensing the work's copyright in different ways. Since public domain software has no copyright, there is nothing to license.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Open source licenses &lt;em&gt;may&lt;/em&gt; grant patent rights.&lt;/strong&gt; Public domain software does not have any &lt;em&gt;copyright&lt;/em&gt; on it, but its reuse may still be restricted by &lt;a href=&quot;https://en.wikipedia.org/wiki/Patent&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;patents&lt;/em&gt;&lt;/a&gt;, if it contains an implementation of a patented mechanism. If you redistributed such patent-encumbered public domain software, you would not be liable for copyright infringement but may be liable for patent infringement. Some open source licenses, however, expressly grant you patent rights. For example, an author who releases software under the &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; rel=&quot;nofollow&quot;&gt;Apache Public License&lt;/a&gt; or &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.en.html&quot; rel=&quot;nofollow&quot;&gt;GNU GPL (version 3)&lt;/a&gt; expressly grants recipients the right to use any of the authors' patents that apply to the software, so there is no risk of violating the author's patents.&lt;sup&gt;2&lt;/sup&gt; &lt;em&gt;Not all open source licenses do this&lt;/em&gt;, but it is an option for open source software under a license, whereas it is not an option for license-free non-copyrighted public domain software.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;&lt;sub&gt;&lt;sup&gt;1&lt;/sup&gt; Note that it is unclear if premature dedication to the public domain is truly possible in most jurisdictions.&lt;/sub&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;sub&gt;&lt;sup&gt;2&lt;/sup&gt; If the author illegally used &lt;em&gt;someone else's&lt;/em&gt; patented mechanism without permission in the software, a downstream redistributor could be legally liable for that infringement.&lt;/sub&gt;&lt;/p&gt;&#xA;" OwnerUserId="50" LastEditorUserId="50" LastEditDate="2015-07-12T18:01:19.047" LastActivityDate="2015-07-12T18:01:19.047" CommentCount="8" />
  <row Id="67" PostTypeId="2" ParentId="55" CreationDate="2015-06-23T18:45:01.613" Score="28" Body="&lt;p&gt;The Public Domain in the US means the copyright of something is owned by nobody, and cannot be owned by anybody.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Open source is a license model. The creator of the software holds the copyright, and grants others a license to use it, under some conditions. The differences are&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;Ownership. When something is in the Public Domain, nobody has intellectual property rights to it. When something is made available under some open source license, the creator keeps the copyright.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Terms. When something is in the public domain, there are no license terms to follow because there is no license. You are permitted to use the work whichever way you see fit without one. When something is licensed under an open source license, each license sets its own set of conditions, which can differ drastically.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="97" LastEditorUserId="37" LastEditDate="2015-06-23T22:18:09.457" LastActivityDate="2015-06-23T22:18:09.457" CommentCount="3" />
  <row Id="68" PostTypeId="1" CreationDate="2015-06-23T18:49:11.633" Score="5" ViewCount="100" Body="&lt;p&gt;I've been provided a &lt;a href=&quot;http://www.sourcemod.net/&quot; rel=&quot;nofollow&quot;&gt;SourceMod&lt;/a&gt; plugin for a community game server. I was provided the compiled plugin, but not the source code. The &lt;a href=&quot;https://svn.alliedmods.net/viewvc.cgi/trunk/public/licenses/LICENSE.txt?revision=2255&amp;amp;root=sourcemod&quot; rel=&quot;nofollow&quot;&gt;license&lt;/a&gt; and &lt;a href=&quot;http://www.sourcemod.net/license.php&quot; rel=&quot;nofollow&quot;&gt;explanation&lt;/a&gt; provided describes all SourceMod plugins as derivatives, meaning I should also receive a copy of the source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;How does one enforce such a requirement?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To be clearer, this is not about the SourceMod source code. That is available at the links I provided. This is about source code from the derived plugins made by a third party. The plugin is not listed on the SourceMod page, thus the source code is not available via their forums. &lt;/p&gt;&#xA;" OwnerUserId="22" LastEditorUserId="69" LastEditDate="2015-06-30T02:02:19.200" LastActivityDate="2015-06-30T02:02:19.200" Title="How does one enforce aspects of a license?" Tags="&lt;licensing&gt;&lt;enforcement&gt;" AnswerCount="3" CommentCount="8" />
  <row Id="69" PostTypeId="2" ParentId="55" CreationDate="2015-06-23T18:49:40.413" Score="4" Body="&lt;p&gt;Public domain implies that the author &lt;em&gt;waives all rights&lt;/em&gt;, possibly including personal rights.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is not necessarily applicable to open-source (though it can be) - open-source software can be licensed, which removes it from public domain. Open source software can also be explicitly declared as public domain (which, technically, is a requirement to be considered as such - work without an obvious copyright notice or license is assumed to be proprietary and non-copyable).&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-23T18:49:40.413" CommentCount="0" />
  <row Id="70" PostTypeId="2" ParentId="54" CreationDate="2015-06-23T18:49:59.953" Score="4" Body="&lt;ul&gt;&#xA;&lt;li&gt;Attract a community of users&lt;/li&gt;&#xA;&lt;li&gt;Insert some bugs&lt;/li&gt;&#xA;&lt;li&gt;Wait for the pull requests&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;The above is only partly in jest - the second step will happen by accident without you planning for it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You need to find a way to build a community and get people using the product, just as for any piece of commercial software. &lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Visit forums where likely users hang out, and sell it a little&lt;/li&gt;&#xA;&lt;li&gt;Develop some whizbang app based on your library which will attract people&lt;/li&gt;&#xA;&lt;li&gt;Blog about it&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Even if you don't expect to make money, you still need to sell it.&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="95" LastEditDate="2015-06-23T19:39:19.967" LastActivityDate="2015-06-23T19:39:19.967" CommentCount="3" />
  <row Id="71" PostTypeId="1" AcceptedAnswerId="72" CreationDate="2015-06-23T18:50:14.020" Score="16" ViewCount="115" Body="&lt;p&gt;I've &lt;a href=&quot;http://opensource.stackexchange.com/a/26/65&quot;&gt;heard&lt;/a&gt; an open source license described as &quot;popular and OSI-approved&quot;. To that, &lt;a href=&quot;http://opensource.stackexchange.com/questions/19/very-permissive-license#comment23_26&quot;&gt;someone asks&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Is OSI approval important?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;which is a great — and important — question in its own right. So, is OSI approval important, and if so, why? &lt;/p&gt;&#xA;" OwnerUserId="65" LastEditorUserId="69" LastEditDate="2015-06-30T02:03:02.730" LastActivityDate="2015-06-30T02:03:02.730" Title="Is OSI approval important for a license?" Tags="&lt;licensing&gt;&lt;osi&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="4" />
  <row Id="72" PostTypeId="2" ParentId="71" CreationDate="2015-06-23T18:50:14.020" Score="18" Body="&lt;p&gt;It's not that OSI (the &lt;a href=&quot;http://opensource.org/&quot;&gt;Open Source Initiative&lt;/a&gt;) is particularly magical or their blessing &lt;em&gt;required&lt;/em&gt;, but that license proliferation is a problem, and the list of &lt;a href=&quot;http://opensource.org/licenses&quot;&gt;OSI-approved licenses&lt;/a&gt; helps solve this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The OSI themselves released a &lt;a href=&quot;http://opensource.org/proliferation-report&quot;&gt;proliferation report&lt;/a&gt; about a decade ago, describing three main issues.&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Too many options make it hard to choose a license.&lt;/strong&gt; As we see &lt;a href=&quot;http://opensource.stackexchange.com/questions/19/&quot;&gt;here&lt;/a&gt;, choosing a license &lt;em&gt;is&lt;/em&gt; important, and an intimidating list may increase the barrier to choosing one at all.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Licenses interfere with each other.&lt;/strong&gt; Not all licenses are compatible. This makes it hard to mix and match code, and this scales badly as more licenses are added.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;It's hard to understand the overall combination of multiple licenses.&lt;/strong&gt; In some ways, this is an extension of #2. Even if you do figure out how all of the licenses work together for &lt;em&gt;your&lt;/em&gt; project, it's hard to communicate the total impact to your users. &lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;#2 and #3 are the big deals to me (partly coming from my perspective working in the Fedora Project, and partly coming as a long-time user of open source). Fedora tries to be very careful that our users can trust that the software we distribute is licensed correctly and can, in fact, be distributed. Every new license adds to the very real expense of analyzing the interactions. Take a look, for example, at Fedora's &lt;a href=&quot;https://fedoraproject.org/wiki/Packaging:LicensingGuidelines&quot;&gt;packaging guidelines regarding licensing&lt;/a&gt;, and then at the &lt;a href=&quot;https://fedoraproject.org/wiki/Licensing:Main&quot;&gt;main licensing &#xA;page for Fedora&lt;/a&gt;. Maintaining this documentation is a considerable effort and expense — let alone actually &lt;em&gt;applying&lt;/em&gt; it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To this, I would add: &lt;strong&gt;writing a license is hard&lt;/strong&gt;. While they may seem to be written in English, licenses are actually written in &lt;em&gt;legal code&lt;/em&gt;, and various clauses which may seem clever to a  programmer may in fact present problems. Perhaps most famously, the clause &quot;The Software shall be used for Good, not Evil&quot; in the JSON license sends lawyers into a tizzy, and fair enough, because who gets to decide? — if my daughter were to be asked, she might include testing software under &quot;evil&quot;. Check out &lt;a href=&quot;https://fedoraproject.org/wiki/Licensing:Main?rd=Licensing#Bad_Licenses&quot;&gt;Fedora's list of &quot;bad&quot; licenses&lt;/a&gt; for more examples.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The OSI list is quite large, and &lt;em&gt;something&lt;/em&gt; from the list should cover all reasonable open source situations.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And finally, while &quot;open source&quot; does not enjoy trademark protection, if the open source community sticks to a reasonably strong definition, it helps prevent companies from calling software which does not respect user freedoms in a meaningful way by this label.&lt;/p&gt;&#xA;" OwnerUserId="65" LastActivityDate="2015-06-23T18:50:14.020" CommentCount="0" />
  <row Id="74" PostTypeId="2" ParentId="68" CreationDate="2015-06-23T18:53:07.610" Score="1" Body="&lt;p&gt;Enforcement is difficult.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;First step would be to politely ask. The last step would be to bring it to court. The difficulty is to chose wisely the escalation steps in between and to decide when to stop.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-23T18:53:07.610" CommentCount="0" />
  <row Id="75" PostTypeId="2" ParentId="52" CreationDate="2015-06-23T18:55:29.880" Score="11" Body="&lt;p&gt;When you release your software under the GPL, it means you give anyone a license to use your software under some terms and agreements. If somebody violates the agreement, they are in breach of contract with you.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This means you can sue them in a court of law. Depending on how principled you are this may or may not be worth it. Damages rewarded are typically low. Few start actual lawsuits, though for example busybox has been known to persue their copyrights.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can contact the owners of the copyright who originally licensed the software under the GPL, and whatever action they choose to pursue further is their prerogative. They might take action, or they might allow them to go ahead and use their product in the way it is used now. They own the copyright, they get to decide what happens.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If the owners of the copyright happen to be the Free Software Foundation, &lt;a href=&quot;http://www.gnu.org/licenses/gpl-violation.en.html&quot; rel=&quot;nofollow&quot;&gt;you can contact them here&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The link also holds some additional information of concrete good ideas in case you want to contact the copyright holder.&lt;/p&gt;&#xA;" OwnerUserId="97" LastEditorUserId="8" LastEditDate="2015-06-23T22:46:22.763" LastActivityDate="2015-06-23T22:46:22.763" CommentCount="2" />
  <row Id="76" PostTypeId="2" ParentId="54" CreationDate="2015-06-23T18:56:51.990" Score="7" Body="&lt;p&gt;This works in much the same way that attracting users/a community for other things does.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You might want to look at, as suggested in the comments, &lt;a href=&quot;http://communitybuilding.stackexchange.com/&quot;&gt;Community Building&lt;/a&gt;, which has some advice about drawing and keeping communities.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The essential part is to be seen to be engaged: if you're not interested in your own project, why should anyone else be? Keep contributing your own commits and new features to your codebase, and others will see that it's active.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You should also promote it wherever possible: if you can, use social media to reach other people. There are groups for programming related topics on many platforms, including Google+ and Reddit. Always be mindful of their community rules though - if they don't want you recruiting, don't do it.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-23T18:56:51.990" CommentCount="0" />
  <row Id="77" PostTypeId="1" CreationDate="2015-06-23T18:56:56.603" Score="10" ViewCount="65" Body="&lt;p&gt;I publish photos under multiple Creative Commons licenses and often want to indicate the licensing in a short caption or comment on the photo online or in print. If one of them is dual licensed, how can I represent that in a way that will be recognized by as many people as possible?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;My naive approach has been to simply concatenate the license names with &lt;code&gt;||&lt;/code&gt; as a separator (example: &lt;code&gt;CC-BY-SA || CC-BY-NC&lt;/code&gt;), which indicates a logical OR to me, but might mean nothing to non-programmers.&lt;/p&gt;&#xA;" OwnerUserId="19" LastEditorUserId="190" LastEditDate="2015-06-30T09:00:32.250" LastActivityDate="2015-06-30T09:00:32.250" Title="What is the most concise unambiguous way to represent dual licensing of a work?" Tags="&lt;licensing&gt;&lt;multi-licensing&gt;" AnswerCount="3" CommentCount="0" FavoriteCount="1" />
  <row Id="78" PostTypeId="2" ParentId="54" CreationDate="2015-06-23T18:57:43.750" Score="15" Body="&lt;p&gt;There are a lot of things that you can do to get other programmers contributing to your open source project.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Make the project useful for others&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;I think most programmers would like to contribute to and improve a project that involves something that is useful to them. It doesn't have to be something for only programmers, but if the project is something that would only be useful to a few people, then other programmers who it isn't useful to probably won't want to contribute to it.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Write good, well-structured code&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Messy code might deter programmers away from contributing. They can probably understand most of it pretty quickly, but actually adding to and improving it is a lot harder. Of course, this is something you should always do, but I think it is especially important if you are trying to work with others.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Ask others to contribute&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;It can never hurt to ask specific people you might know to contribute. There has been a number of times when I've asked someone here on Stack Exchange (usually Stack Overflow) if they want to work with me on a project. Many times, a project will catch fire as more and more programmers start contributing. You can start that with just asking one or two people to help.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Advertise your project&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;There are many ways that you can advertise your project to try to get others interested in it. This can be done many different ways. If you have a blog, blog about it. Post it on Google+ or Twitter or some other type of social media platform. Talk about it on websites like SE or sites similar to it.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Build a community&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Eventually, you're gonna want to have your open source project become a community. As mentioned in other answers and in the comments, &lt;a href=&quot;http://communitybuilding.stackexchange.com/&quot;&gt;Community Building SE&lt;/a&gt; is a great place for questions on how to build a community. As the first programmers start to contribute to your project, you'll probably need to be the leader of your community (improve the project, fix bugs, etc.), but as more and more contributors come along, the community will start to build itself. You can also use the project page you mentioned as a forum for the community. I would also suggest possibly doing a chat room. Who knows, maybe if the community is big enough, it will build those stuff itself.&lt;/p&gt;&#xA;" OwnerUserId="46" LastEditorUserId="46" LastEditDate="2015-06-23T19:06:36.923" LastActivityDate="2015-06-23T19:06:36.923" CommentCount="0" />
  <row Id="80" PostTypeId="2" ParentId="77" CreationDate="2015-06-23T19:00:32.487" Score="9" Body="&lt;p&gt;You're correct in your last paragraph at least: the &lt;code&gt;||&lt;/code&gt; symbol will mean nothing to people who have no programming knowledge.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you know that the only people visiting your project will be programmers, that's OK, but there are still less ambiguous ways to represent it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In fact, the simplest way may be to simply say it:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;This project is dual-licensed under &amp;lt;X&gt; and &amp;lt;Y&gt;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;For a short caption, you can simply shorten the text:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;dual-licensed under &amp;lt;X&gt; &amp;lt;Y&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;And for a longer explanation, perhaps on the project website, you can expand it:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;This project is dual-licensed, using licenses &amp;lt;X&gt; and &amp;lt;Y&gt;. You may choose to use either license when using any of this work.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;(Substitute the second sentence for the relevant condition. If it's their option which license to use, tell them.)&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-06-30T08:21:02.153" LastActivityDate="2015-06-30T08:21:02.153" CommentCount="0" />
  <row Id="81" PostTypeId="2" ParentId="77" CreationDate="2015-06-23T19:02:25.387" Score="2" Body="&lt;p&gt;It is usually sufficient to state that the project is dual licensed under two licenses and list them in the format of a list.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;// This software (The source code, executables compiled from the&#xA;// source and attached documentation files within the repository)&#xA;// is dual licensed under:&#xA;// - The GNU General Public License (GPL) version 2.0; and&#xA;// - The Apache Software License (ASL) Version 2.0.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="61" LastActivityDate="2015-06-23T19:02:25.387" CommentCount="0" />
  <row Id="82" PostTypeId="2" ParentId="77" CreationDate="2015-06-23T19:03:05.903" Score="5" Body="&lt;p&gt;If you can spare words and it doesn't have to be language neutral, for example&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;You may use this work under the terms of either CC-BY-SA, or (at your option) CC-BY-NC&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;or&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;Your choice of CC-BY-SA or CC-BY-NC&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;The former is similar to what the GNU project uses in their GPL versioning to allow using the current or any later versions (&lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;http://www.gnu.org/licenses/gpl-3.0.html&lt;/a&gt;, under &quot;How to Apply These Terms to Your New Programs&quot;). The latter is by me, so use at your own risk.&lt;/p&gt;&#xA;" OwnerUserId="95" LastActivityDate="2015-06-23T19:03:05.903" CommentCount="0" />
  <row Id="84" PostTypeId="2" ParentId="68" CreationDate="2015-06-23T19:09:15.353" Score="7" Body="&lt;p&gt;Enforcing any restrictions imposed is difficult, and ultimately you may have to bring it to legal proceedings.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The first step for any project, yours or someone else's, is to notify: if you spot something that doesn't comply, you should notify the project's author. They can deal with their own restrictions - you don't know if they've made an exception for this case or not. If you're the owner, your job is to notify the non-compliant: a polite email, simply saying you've noticed they don't do X and would they please do so, will suffice.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you need to take it on further, there are various legal proceedings. Ultimately, the courts have your back because it's your work and someone is using it in a way they aren't permitted to. You may also be able to issue a DMCA takedown request, which is a legally-backed way of telling someone to remove something you don't want there. Assuming you have permission to do so.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-23T19:09:15.353" CommentCount="1" />
  <row Id="85" PostTypeId="2" ParentId="52" CreationDate="2015-06-23T19:13:11.530" Score="12" Body="&lt;p&gt;The first step in any legal issues is to notify relevant people. Initially, you should notify the copied project's owner. Since you weren't part of the team, you don't know whether the owner made an exception for this case or not. The theory is that the owner should deal with their own copyright.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If the owner completely ignores you, then after a reasonable period of time you could send a &lt;em&gt;polite&lt;/em&gt; email to the offending party, stating that you've noticed they're doing X which is against the license terms and asking if there's some reason you haven't noticed. This achieves the effect of telling the offender that someone &lt;em&gt;has&lt;/em&gt; noticed they're doing something wrong (if they are), and gives them a chance to stop; or it gives them the chance to explain that actually, what they're doing is perfectly legitimate.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If the software isn't yours, it's not your job to initiate any legal proceedings against the offending party, so leave that battle for those who should do it.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-23T19:13:11.530" CommentCount="1" />
  <row Id="86" PostTypeId="2" ParentId="52" CreationDate="2015-06-23T19:14:04.017" Score="14" Body="&lt;p&gt;&lt;strong&gt;If you do not own the copyright on the software whose license is being infringed:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is not up to you to prove there was a GPL violation. It is not up to you to enforce the license of software for which you do not own the copyright. None of your rights are being infringed, so you have no standing to take legal action against the copyright infringement. As a practical matter, how can you be sure that the owner of the GPL-license software did not allow this other software to use it under a separate agreement? It is possible that the other software vendor could have purchased a separate license from the owner.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The best thing you can do is to bring the issue to the attention of the copyright holder, who has the legal standing to take legal action. If they want to take legal action, they can; if they don't want to, that's their decision to make.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In this case, since the seller took unfair advantage by &lt;em&gt;lying about the authorship of the software&lt;/em&gt; during the sale, your company may be able to take legal action for fraud. (But I'm not a lawyer and couldn't say for sure.) Note that this is different from legal action for the GPL violation itself: you would take legal action for the seller's &lt;em&gt;deceit&lt;/em&gt; that caused you harm, rather than the seller's &lt;em&gt;infringement&lt;/em&gt; of the original author's copyright (which has harmed only the author, not you). This is no different from how it would work for any other software, open or proprietary.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;If you &lt;em&gt;do&lt;/em&gt; own the copyright on the software whose license is being infringed:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Your copyright is being infringed, and you are entitled to take legal action. You should contact the Free Software Foundation with details about the infringement. They state on their page about &lt;a href=&quot;http://www.gnu.org/licenses/gpl-violation.en.html&quot; rel=&quot;nofollow&quot;&gt;Violations of the GNU Licenses&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The FSF acts on all GPL violations reported on FSF copyrighted code, and &lt;strong&gt;we offer assistance to any other copyright holder who wishes to do the same&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Since the FSF has a social interest in teaching people to respect free software licenses (especially the GPL, which they authored), they offer some degree of assistance in taking legal action against offenders. There may, of course, still be significant cost to you, depending on how much aid the FSF can afford to give, but the FSF is far and away your best starting point.&lt;/p&gt;&#xA;" OwnerUserId="50" LastEditorUserId="50" LastEditDate="2015-07-08T15:21:42.097" LastActivityDate="2015-07-08T15:21:42.097" CommentCount="7" />
  <row Id="87" PostTypeId="2" ParentId="51" CreationDate="2015-06-23T19:20:00.957" Score="2" Body="&lt;p&gt;I haven't come across any single, centralized place where all usage statistics for open-source projects are combined.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, all is not lost: many software download sites have a download counter. Instead of looking centrally, try going to the software's download page and looking for any stats it might have there.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Similarly, I haven't seen any libraries that do the job for you, but if you were to write your own (and release it as open-source!) then you could take the download location as an input and scan through it for statistics to return.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-23T19:20:00.957" CommentCount="0" />
  <row Id="88" PostTypeId="1" AcceptedAnswerId="210" CreationDate="2015-06-23T19:20:57.047" Score="28" ViewCount="366" Body="&lt;p&gt;Many open source projects I see involve having  dedicated servers, as well as the expensive infrastructure that powers it. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;How are these projects monetized to cover the costs introduced during development and deployment?&lt;/p&gt;&#xA;" OwnerUserId="61" LastEditorUserId="29" LastEditDate="2015-06-29T02:36:44.517" LastActivityDate="2015-06-29T02:36:44.517" Title="How can large open source projects be monetized?" Tags="&lt;monetization&gt;" AnswerCount="6" CommentCount="1" FavoriteCount="6" />
  <row Id="89" PostTypeId="2" ParentId="53" CreationDate="2015-06-23T19:22:56.440" Score="4" Body="&lt;p&gt;Yes and no.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Referring to Mnementh's answer, the official definition of open source dictates that you can't, because you can't discriminate (laws excepted: export restrictions don't count).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, it all depends how strict you want to be with your open-source licensing. You could quite easily license your project in the &lt;em&gt;spirit&lt;/em&gt; rather than the letter of open source: making the source code available, making it easy to use and reuse, etc.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; Technically no, but yes if you're flexible.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-23T19:22:56.440" CommentCount="0" />
  <row Id="90" PostTypeId="2" ParentId="51" CreationDate="2015-06-23T19:25:18.520" Score="7" Body="&lt;p&gt;There's no way of actually tracking down usage statistics without compromising the privacy of its users. Hence why it is impossible to properly see which Linux distribution is the most popular one (using this as an example).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You could use some analytics like the number of downloads, the number of stars on GitHub, or the number of contributors to the project, but those analytics can in no way properly determine how broadly is the open source project actually used.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But it might be possible to do so for the corporate environment in some cases. Open source projects could theoretically keep a list of organizations using their product. Also, if the project is mentioned multiple times in the media, there's a higher chance that there are many users using it.&lt;/p&gt;&#xA;" OwnerUserId="123" LastEditorUserId="37" LastEditDate="2015-06-24T15:54:56.630" LastActivityDate="2015-06-24T15:54:56.630" CommentCount="0" />
  <row Id="91" PostTypeId="2" ParentId="51" CreationDate="2015-06-23T19:25:48.630" Score="2" Body="&lt;p&gt;Every platform has its own metrics and indications.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;npm for example, shows download statistics. GitHub has stars, which is a good rough indication.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The fact is, I don't need to host the file on some fancy VCS host for it to be considered open. I can host it on a server I control, and distribute my git URL for you and the public to clone and use. In which case, you will never have any sort of statistics unless I specifically make some. &lt;/p&gt;&#xA;" OwnerUserId="40" LastActivityDate="2015-06-23T19:25:48.630" CommentCount="0" />
  <row Id="92" PostTypeId="2" ParentId="51" CreationDate="2015-06-23T19:27:11.503" Score="4" Body="&lt;p&gt;It depends what you mean by usage statistics, but the website &lt;a href=&quot;http://www.openhub.net&quot; rel=&quot;nofollow&quot;&gt;www.openhub.net&lt;/a&gt; (formerly known as Ohloh) gives you:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;the number of commit per months&lt;/li&gt;&#xA;&lt;li&gt;the number of contributors per month&lt;/li&gt;&#xA;&lt;li&gt;a community rating&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="128" LastEditorUserId="1181" LastEditDate="2015-08-06T19:46:55.283" LastActivityDate="2015-08-06T19:46:55.283" CommentCount="1" />
  <row Id="93" PostTypeId="2" ParentId="1" CreationDate="2015-06-23T19:27:44.547" Score="4" Body="&lt;p&gt;To be absolutely sure of what you're doing, it would be necessary to read through the legalese of the licenses to check what is and isn't allowed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, many licenses have human-readable pages, which &lt;em&gt;should&lt;/em&gt; be sufficient for this: read through them, determine what the restrictions are on using code. You should check that:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;You're allowed to reuse code snippets from the project you plan to copy from;&lt;/li&gt;&#xA;&lt;li&gt;The project you're adding to allows you to use code from other licensed projects.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;The second point there won't be a problem most of the time, but it is possible.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Of course, if both projects are yours there's no problem at all: you don't have to follow the terms of either license because you own the copyright. Licenses are simply there to give some rights to others (otherwise, technically, nobody would be able to do anything with your software).&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-23T19:27:44.547" CommentCount="0" />
  <row Id="94" PostTypeId="5" CreationDate="2015-06-23T19:28:06.540" Score="0" Body="&lt;p&gt;Github is a project-hosting website with git as base version control. It allows easy forking and contributing changes.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-23T22:45:08.110" LastActivityDate="2015-06-23T22:45:08.110" CommentCount="0" />
  <row Id="95" PostTypeId="4" CreationDate="2015-06-23T19:28:06.540" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-23T19:28:06.540" LastActivityDate="2015-06-23T19:28:06.540" CommentCount="0" />
  <row Id="96" PostTypeId="2" ParentId="88" CreationDate="2015-06-23T19:28:13.940" Score="15" Body="&lt;p&gt;There are a huge number of ways earning money with free software -- but none of them is guaranteed. Just a few examples:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Donations: Many users are willing to give a few coins each month for a project they like. If a huge number of people are doing it, your servers are paid for. Payment methods could be e.g. Flattr, Patreon, Paypal, Bitcoin or any other micro-payment service&lt;/li&gt;&#xA;&lt;li&gt;Custom developments: A feature is missed by somebody who likes to spend money for it? Great. Go for it.&lt;/li&gt;&#xA;&lt;li&gt;Education and Support: Many software projects lack good documentation. Therefore education and giving support can be a way to earn some money&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="132" LastEditorUserId="29" LastEditDate="2015-06-23T20:28:50.530" LastActivityDate="2015-06-23T20:28:50.530" CommentCount="0" />
  <row Id="97" PostTypeId="5" CreationDate="2015-06-23T19:29:46.120" Score="0" Body="&lt;p&gt;Project managements refers to the management of content within a project, or the manage of resource that are available for use in an area of interest. It normally includes, but is not limited to, the following components:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Planning&lt;/li&gt;&#xA;&lt;li&gt;Organizing&lt;/li&gt;&#xA;&lt;li&gt;Motivating&lt;/li&gt;&#xA;&lt;li&gt;Controlling Resources&lt;/li&gt;&#xA;&lt;li&gt;Designing&lt;/li&gt;&#xA;&lt;li&gt;Creating Procedures&lt;/li&gt;&#xA;&lt;li&gt;Creating Protocols&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-06-23T22:45:36.213" LastActivityDate="2015-06-23T22:45:36.213" CommentCount="0" />
  <row Id="98" PostTypeId="4" CreationDate="2015-06-23T19:29:46.120" Score="0" Body="For questions about the management of content or resources within a project." OwnerUserId="69" LastEditorUserId="98" LastEditDate="2015-06-25T14:02:10.817" LastActivityDate="2015-06-25T14:02:10.817" CommentCount="0" />
  <row Id="99" PostTypeId="5" CreationDate="2015-06-23T19:30:56.993" Score="0" Body="&lt;p&gt;Most successful open development projects are the result of contributions from multiple people. Often these contributors are from varied countries and cultures. This can bring benefits and problems.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Managing the project to maximize the benefits, and minimize the problems, is a source of many questions and one that can best be answered by experienced developers.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Care should be taken using this tag not to ask &lt;em&gt;primarily opinion based&lt;/em&gt; questions, but to ask for specific examples.&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="29" LastEditDate="2015-07-02T18:00:34.883" LastActivityDate="2015-07-02T18:00:34.883" CommentCount="0" />
  <row Id="100" PostTypeId="4" CreationDate="2015-06-23T19:30:56.993" Score="0" Body="Use for questions about the collaboration aspects of developing open projects" OwnerUserId="29" LastEditorUserId="69" LastEditDate="2015-07-22T01:32:04.883" LastActivityDate="2015-07-22T01:32:04.883" CommentCount="0" />
  <row Id="101" PostTypeId="2" ParentId="88" CreationDate="2015-06-23T19:31:33.093" Score="5" Body="&lt;p&gt;There is no general guide for making money using open source projects because it highly depends on what the project is about.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some projects are combining open source + premium features (that are mostly sold to the companies) like GitHub is doing. Some projects might depend solely on the donations like elementary OS is. Other projects might be paying for the full time support for their product.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For further reference, I highly suggest you the book called &lt;a href=&quot;http://opensource.com/resources/what-open-organization&quot;&gt;The Open Source Organization: Igniting Passion and Performance&lt;/a&gt; written by Red Hat's CEO Jim Whitehurst.&lt;/p&gt;&#xA;" OwnerUserId="123" LastActivityDate="2015-06-23T19:31:33.093" CommentCount="2" />
  <row Id="102" PostTypeId="5" CreationDate="2015-06-23T19:31:43.627" Score="0" Body="&lt;p&gt;A contributor is anyone who made a modification, or addition to any open project. &lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-07-22T07:55:38.697" LastActivityDate="2015-07-22T07:55:38.697" CommentCount="0" />
  <row Id="103" PostTypeId="4" CreationDate="2015-06-23T19:31:43.627" Score="0" Body="For questions about contributors, and their resources and conditions. Use the collaboration tag if your question is specific to interaction between contributors." OwnerUserId="37" LastEditorUserId="69" LastEditDate="2015-07-22T07:57:56.793" LastActivityDate="2015-07-22T07:57:56.793" CommentCount="0" />
  <row Id="104" PostTypeId="2" ParentId="88" CreationDate="2015-06-23T19:34:25.493" Score="13" Body="&lt;p&gt;There are several methods, often dependent on the type of software you've produced.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If you have space in a GUI, you could consider adding some adverts to it. There are plenty of services that provide you with money in return for taking some adverts.&lt;/li&gt;&#xA;&lt;li&gt;Generosity. Users who genuinely like your product can be persuaded to give you some small donation in return. In general, the easier you make it the better - a Donate button on your distribution page is a good idea.&lt;/li&gt;&#xA;&lt;li&gt;Monetization of features. Offer some features for a premium 'account' (or whatever the alternative is)&lt;/li&gt;&#xA;&lt;li&gt;Further generosity. Some people may be willing to donate equipment or time instead of money. These people are useful, because they usually end up donating more value than the actual money - perhaps they're willing to host something, or monitor your servers for a while each week.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Often, it depends heavily on how much you're willing to let it impact the software experience: ads are invasive but effective, whereas a donation button is almost invisible but as such less effective.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There's a good video about this &lt;a href=&quot;https://www.youtube.com/watch?v=O2tvsY3yUqY&quot;&gt;on YouTube&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-23T19:34:25.493" CommentCount="0" />
  <row Id="105" PostTypeId="2" ParentId="88" CreationDate="2015-06-23T19:34:35.910" Score="7" Body="&lt;p&gt;Large projects like MariaDB or some of the many under the Apache Foundation umbrella rely on sponsorship from big companies who benefit from using the software. Others sell support/training services of their software or make alternative versions with restricted features.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Take a look at &lt;a href=&quot;https://www.apache.org/foundation/contributing.html#how-to-donate&quot;&gt;Apache Foundation&lt;/a&gt; and &lt;a href=&quot;https://mariadb.org/en/supporters/&quot;&gt;MariaDB&lt;/a&gt; for examples, among many others.&lt;/p&gt;&#xA;" OwnerUserId="124" LastActivityDate="2015-06-23T19:34:35.910" CommentCount="0" />
  <row Id="106" PostTypeId="1" AcceptedAnswerId="109" CreationDate="2015-06-23T19:35:15.557" Score="0" ViewCount="41" Body="&lt;p&gt;There are plenty of open source licenses out there. What should a person especially keep in mind while they're selecting a license for their project?&lt;/p&gt;&#xA;" OwnerUserId="123" LastEditorUserId="123" LastEditDate="2015-06-23T19:40:58.873" LastActivityDate="2015-06-24T00:02:43.850" Title="What should I keep a close attention to when selecting a license for my project?" Tags="&lt;licensing&gt;" AnswerCount="1" CommentCount="5" ClosedDate="2015-06-23T19:43:41.240" />
  <row Id="107" PostTypeId="2" ParentId="54" CreationDate="2015-06-23T19:37:45.200" Score="6" Body="&lt;p&gt;Supposing your app is nice and could be some day a popular one, I recommend the followings:&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Choose a nice name and description&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Choose a name which has not been taken by anyone else before. The shorter it is, easier to remember. Also, it should describe somehow what your app does. Same goes for description: short, good, easy to remember and describe what the project does.&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Write a nice README file&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;The user saw your project somewhere and the name was interesting for him/her.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now, the next thing the user sees is the readme file. Write a &lt;em&gt;good&lt;/em&gt; &lt;a href=&quot;https://github.com/github/markup&quot;&gt;README.your_favorite_markup&lt;/a&gt; (e.g. README.md, for markdown).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;From my experience I saw that making a nice heading image attracts the people.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;a href=&quot;https://github.com/IonicaBizau/node-typpy&quot;&gt;Typpy&lt;/a&gt; -- nothing new: just a tiny library to get the type of a value in JavaScript. In this moment it has 10 stars on GitHub. That means that people liked it.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&lt;a href=&quot;https://github.com/IonicaBizau/node-typpy&quot;&gt;&lt;img src=&quot;http://i.stack.imgur.com/4Jw9L.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h3&gt;Create your own documentation format to write apps&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;I recently wrote an article on my blog about how to &lt;a href=&quot;http://ionicabizau.net/blog/25-increasing-productivity-using-blah-2-0-0&quot;&gt;increase the productivity by using Blah&lt;/a&gt; -- a tool I have written. &lt;a href=&quot;https://github.com/IonicaBizau/node-blah&quot;&gt;Blah&lt;/a&gt; generates documentation based on templates and project files.&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Make the contributing steps clear&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Here, &lt;em&gt;Blah&lt;/em&gt; helps you again. You can write your user-level template for &lt;code&gt;CONTRIBUTING.md&lt;/code&gt; and using &lt;code&gt;blah -c&lt;/code&gt; you generate the &lt;code&gt;CONTRIBUTING.md&lt;/code&gt; file.&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Tell the world what you did&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Share your work on websites like Twitter, Hacker News, Reddit etc. It really helps. Got retweeted by a bot? Cool. Don't worry. Real persons will find your tweet anyway.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;These are some tips I observed &lt;a href=&quot;https://github.com/IonicaBizau&quot;&gt;developing projects and publishing them on GitHub&lt;/a&gt;. These tips are not primary-focused on the project quality but on how people will &lt;em&gt;see&lt;/em&gt; it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Sure, if you want to get popular, build something great. Something that didn't exist before. Build tools you need. Do you need an artificial intelligence to do some stuff? Cool. Probably others need that too. Do it. Publish it. Share it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You will get stars, you will get issues, pull requests, contributions!&lt;/p&gt;&#xA;" OwnerUserId="110" LastActivityDate="2015-06-23T19:37:45.200" CommentCount="0" />
  <row Id="108" PostTypeId="1" AcceptedAnswerId="114" CreationDate="2015-06-23T19:38:08.707" Score="6" ViewCount="48" Body="&lt;p&gt;What legal pitfalls should be considered when (re)selling OS bases solutions? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;As you can't ask any fee for the Open Source code itself this seems a sensitive area to me.&lt;/p&gt;&#xA;" OwnerUserId="111" LastEditorUserId="69" LastEditDate="2015-06-30T02:03:35.087" LastActivityDate="2015-06-30T02:03:35.087" Title="Legal pitfalls when (re)selling OS solutions?" Tags="&lt;licensing&gt;&lt;law&gt;&lt;monetization&gt;" AnswerCount="4" CommentCount="1" />
  <row Id="109" PostTypeId="2" ParentId="106" CreationDate="2015-06-23T19:43:51.237" Score="0" Body="&lt;p&gt;Mainly you want to decide if you license it permissive or not. Other than that, some licenses are matured more and are tested better in courts. &lt;a href=&quot;http://choosealicense.com/&quot; rel=&quot;nofollow&quot;&gt;Choose a license&lt;/a&gt; should be helpful in picking a license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Basically it recommends MIT if you want a permissive license, Apache if you want to consider software patents and GPL if you want to keep the project open source.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-24T00:02:43.850" LastActivityDate="2015-06-24T00:02:43.850" CommentCount="0" />
  <row Id="110" PostTypeId="2" ParentId="108" CreationDate="2015-06-23T19:44:04.457" Score="0" Body="&lt;p&gt;You should ask a lawyer about the specific solution you wish to re-sell. There should be no pitfalls, since re-selling is allowed in most of the FLOSS licences. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Besides, who said you can't charge for the code itself? It is no etical to do so, but that is a different matter.&lt;/p&gt;&#xA;" OwnerUserId="124" LastActivityDate="2015-06-23T19:44:04.457" CommentCount="1" />
  <row Id="111" PostTypeId="2" ParentId="54" CreationDate="2015-06-23T19:44:14.487" Score="-2" Body="&lt;p&gt;I want to add couple of points&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Make a &quot;How to contribute&quot; page.&lt;/li&gt;&#xA;&lt;li&gt;Nurture the community right from the beginning. You start attracting even when the project is WIP.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="129" LastActivityDate="2015-06-23T19:44:14.487" CommentCount="0" />
  <row Id="112" PostTypeId="2" ParentId="108" CreationDate="2015-06-23T19:46:27.210" Score="1" Body="&lt;p&gt;First off, you can sell your code. From the Open Source Initatives &lt;a href=&quot;http://opensource.org/faq#profit&quot; rel=&quot;nofollow&quot;&gt;website&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You can sell services based on the code (i.e., sell your time), sell warranties and other assurances, sell customization and maintenance work, license the trademark, etc. The only kind of profit strategy that is incompatible with Open Source is monopoly-based sales, also known as &quot;royalties&quot;. See this article for how to think about business strategies that make money from Open Source.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-06-23T19:46:27.210" CommentCount="1" />
  <row Id="113" PostTypeId="1" AcceptedAnswerId="123" CreationDate="2015-06-23T19:48:19.067" Score="4" ViewCount="47" Body="&lt;p&gt;I've developed a small and useful library at work, I have permission from legal department, what are the steps I should take before, during and after open sourcing the project?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;How would I transform a proprietary product to an open source project?&lt;/p&gt;&#xA;" OwnerUserId="40" LastEditorUserId="83" LastEditDate="2015-06-23T20:19:56.353" LastActivityDate="2015-06-23T20:19:56.353" Title="How should I approach open sourcing a library from work?" Tags="&lt;commercial&gt;" AnswerCount="1" CommentCount="4" />
  <row Id="114" PostTypeId="2" ParentId="108" CreationDate="2015-06-23T19:48:50.503" Score="4" Body="&lt;p&gt;You should follow the license, that's all.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Your question hints at a common misunderstanding. Freedom and price are orthogonal, they are not related. Think about two axes:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;free &amp;lt;--&gt; proprietary&lt;/li&gt;&#xA;&lt;li&gt;gratis &amp;lt;--&gt; comes with a price tag&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;You can have any combination of values from both axes, for example:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;free software with a price tag&lt;/li&gt;&#xA;&lt;li&gt;free software that is distributed gratis&lt;/li&gt;&#xA;&lt;li&gt;proprietary software that is distributed &quot;for free&quot; (but is not free)&lt;/li&gt;&#xA;&lt;li&gt;proprietary software sold for money&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;The first axis is what Free Sofware and Open Source are about.&lt;/p&gt;&#xA;" OwnerDisplayName="user114" LastActivityDate="2015-06-23T19:48:50.503" CommentCount="0" />
  <row Id="115" PostTypeId="1" AcceptedAnswerId="138" CreationDate="2015-06-23T19:52:18.027" Score="8" ViewCount="40" Body="&lt;p&gt;The prime example being &lt;a href=&quot;https://iojs.org/en/index.html&quot;&gt;iojs&lt;/a&gt; as a fork of &lt;a href=&quot;https://nodejs.org/&quot;&gt;nodejs&lt;/a&gt;, where the main difference being (aside from the obvious advancement in technology versioning and being more up-to-date), is that iojs has an &lt;em&gt;Open Governance Model&lt;/em&gt;, which nodejs does not.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What does that mean exactly? How are the two different?&lt;/p&gt;&#xA;" OwnerUserId="40" LastActivityDate="2015-06-24T16:36:56.017" Title="What is the Open Governance Model? How is it different from other models?" Tags="&lt;open-governance-model&gt;" AnswerCount="2" CommentCount="2" />
  <row Id="116" PostTypeId="2" ParentId="108" CreationDate="2015-06-23T19:55:51.873" Score="2" Body="&lt;p&gt;This depends on the license of the solution you want to sell, and the obligations it places on you for allowing you to redistribute the solution.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For some of the licenses, you can get a rather comprehensive amount of additional information from the organizations behind them.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, the Free Software Foundation got many GNU-GPL-specific topics covered in their Frequently Asked Questions: &lt;a href=&quot;https://www.gnu.org/licenses/gpl-faq.en.html&quot; rel=&quot;nofollow&quot;&gt;https://www.gnu.org/licenses/gpl-faq.en.html&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The Open Source Initiative has a less license-specific FAQ section as well: &lt;a href=&quot;http://opensource.org/faq&quot; rel=&quot;nofollow&quot;&gt;http://opensource.org/faq&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="83" LastActivityDate="2015-06-23T19:55:51.873" CommentCount="0" />
  <row Id="117" PostTypeId="1" CreationDate="2015-06-23T20:00:23.390" Score="8" ViewCount="143" Body="&lt;p&gt;&lt;strong&gt;A common misunderstanding is that free software&lt;/strong&gt; (replace the terms with &quot;open source software&quot; as you wish) &lt;strong&gt;will never involve costs.&lt;/strong&gt; While this might be indeed true regarding you don't need to pay for licenses, they often don't understand&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;you might have to pay for actually getting access&lt;/li&gt;&#xA;&lt;li&gt;the learning curve might be steeper (which means more costs)&lt;/li&gt;&#xA;&lt;li&gt;you might have to pay for support, and are surprised if &quot;customer&quot; service will not help out for free&lt;/li&gt;&#xA;&lt;li&gt;you might want to pay somebody to extend the software&lt;/li&gt;&#xA;&lt;li&gt;developers generally need something to eat and live from.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;I'd love to make them understand them the freedoms involved&lt;/strong&gt;, how to benefit from those, that they are (or should be) part of a community and if possible return something to the community (for example, pay somebody to develop new features and put them back into the original product).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;How to make customer understand free software might involve costs, but brings advantage beyond licensing costs?&lt;/strong&gt;&lt;/p&gt;&#xA;" OwnerUserId="139" LastEditorUserId="29" LastEditDate="2015-06-23T20:09:52.157" LastActivityDate="2015-06-23T21:59:22.790" Title="How can I make a customer understand that free software involves some costs?" Tags="&lt;monetization&gt;&lt;commercial&gt;&lt;freedoms&gt;&lt;customer&gt;&lt;community&gt;" AnswerCount="1" CommentCount="4" FavoriteCount="1" ClosedDate="2015-06-23T22:06:15.687" />
  <row Id="118" PostTypeId="5" CreationDate="2015-06-23T20:01:02.237" Score="0" Body="&lt;p&gt;&lt;a href=&quot;https://creativecommons.org/&quot; rel=&quot;nofollow&quot;&gt;Creative Commons&lt;/a&gt; is &quot;a non-profit organization that enables the sharing and use of creativity and knowledge through free legal tools.&quot;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The organization is widely known for its set of &lt;a href=&quot;https://creativecommons.org/licenses/&quot; rel=&quot;nofollow&quot;&gt;licenses&lt;/a&gt;. Not all are open-source, but many are:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CC0&lt;/li&gt;&#xA;&lt;li&gt;CC-BY&lt;/li&gt;&#xA;&lt;li&gt;CC-BY-SA&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Furthermore, many Creative Commons licenses are not intended for use within software contexts and applications, instead intended for application and implementation within the creative works. For example, works of writing, art, photography, graphic design and the like.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is a good summary of the licenses' status &lt;a href=&quot;http://meta.opensource.stackexchange.com/q/76/98&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="69" LastEditDate="2015-07-22T07:56:10.323" LastActivityDate="2015-07-22T07:56:10.323" CommentCount="0" />
  <row Id="119" PostTypeId="4" CreationDate="2015-06-23T20:01:02.237" Score="0" Body="For questions about the Creative Commons licenses and the organization behind them." OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-06-25T14:01:09.830" LastActivityDate="2015-06-25T14:01:09.830" CommentCount="0" />
  <row Id="120" PostTypeId="1" AcceptedAnswerId="128" CreationDate="2015-06-23T20:03:18.007" Score="3" ViewCount="112" Body="&lt;p&gt;Recognized graphic designers usually charge a fee for their work, but what if this project isn't expecting any funds and is expected to run purely off the community?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;How would I attract a graphic designer (or designers) to create logos, web site graphics and other artistic/graphical works? &lt;/p&gt;&#xA;" OwnerUserId="144" LastEditorUserId="98" LastEditDate="2015-08-04T23:16:45.753" LastActivityDate="2015-08-04T23:16:45.753" Title="How do I recruit a graphic designer to help on a project with no funding involved?" Tags="&lt;project-management&gt;&lt;community&gt;" AnswerCount="2" CommentCount="5" ClosedDate="2015-06-23T20:52:23.757" />
  <row Id="121" PostTypeId="5" CreationDate="2015-06-23T20:04:53.873" Score="0" Body="&lt;p&gt;The public domain is the place for all works which are free to the public. They do normally restrict use. They may have been brought to the public domain through multiple ways, including but not limited to:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Expiry of intellectual property&lt;/li&gt;&#xA;&lt;li&gt;Forfeited rights&lt;/li&gt;&#xA;&lt;li&gt;Inapplicable rights&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Furthermore, depending by countries, works automatically fall into the public domain after a certain period of time.&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-06-23T22:46:35.467" LastActivityDate="2015-06-23T22:46:35.467" CommentCount="0" />
  <row Id="122" PostTypeId="4" CreationDate="2015-06-23T20:04:53.873" Score="0" Body="The public domain contains works that have no copyright on them. Either because the author dedicated it to the public domain or because copyright has expired." OwnerUserId="168" LastEditorUserId="168" LastEditDate="2015-07-13T14:45:32.107" LastActivityDate="2015-07-13T14:45:32.107" CommentCount="0" />
  <row Id="123" PostTypeId="2" ParentId="113" CreationDate="2015-06-23T20:05:20.853" Score="5" Body="&lt;p&gt;There is a full book on the topic of making a project open-source: &lt;a href=&quot;http://producingoss.com/en/index.html&quot; rel=&quot;nofollow&quot;&gt;Producing Open Source Software&lt;/a&gt; by Karl Fogel. For your specific problem a chapter talks about &lt;a href=&quot;http://producingoss.com/en/opening-closed-projects.html&quot; rel=&quot;nofollow&quot;&gt;Opening a Formerly Closed Project&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;First you have to check, if something still shouldn't be released. Is some proprietary library used that needs to be replaced? Contains the buildfile the password to the FTP-server to upload the distribution? Contains the test-data private information? You should also check if older version in the version-control contain such information and maybe you want to start a new revision 1 to get rid of older revisions with stuff that doesn't need to be released.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Next would be some decisions. Which license do you want to use? &lt;a href=&quot;http://choosealicense.com/&quot; rel=&quot;nofollow&quot;&gt;Choose a license&lt;/a&gt; might help here. Add a file with the license to your code. You also need to add a file naming the author(s) of the code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Add also a README or a similar file, explaining how to build the project. Add other explanations as needed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Next would be the infrastructure. Do the project need a website? Do you create a public readable repository of the version control? Set up what is needed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Finally announce the open source release.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-23T20:12:22.183" LastActivityDate="2015-06-23T20:12:22.183" CommentCount="0" />
  <row Id="124" PostTypeId="5" CreationDate="2015-06-23T20:05:35.283" Score="0" Body="&lt;p&gt;Google Code was a project hosting environment provided by Google, offering a free collaborative development environment for open source projects. It can be found at the link: &lt;a href=&quot;http://code.google.com&quot; rel=&quot;nofollow&quot;&gt;code.google.com&lt;/a&gt;.  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Began in 2006, Google Code announced it was shuttering in 2015; Google Code will be read only 2015-08-24 and will close 2016-01-25, according to &lt;a href=&quot;http://%20http://google-opensource.blogspot.com/2015/03/farewell-to-google-code.html&quot; rel=&quot;nofollow&quot;&gt;their blogpost&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="30" LastEditorUserId="69" LastEditDate="2015-07-20T19:29:34.940" LastActivityDate="2015-07-20T19:29:34.940" CommentCount="0" />
  <row Id="125" PostTypeId="4" CreationDate="2015-06-23T20:05:35.283" Score="0" Body="Google code is a development environment for open source projects." OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-06-23T22:46:41.597" LastActivityDate="2015-06-23T22:46:41.597" CommentCount="0" />
  <row Id="126" PostTypeId="5" CreationDate="2015-06-23T20:06:24.287" Score="0" Body="&lt;p&gt;Open Source software is basically 'given away' to users for free. But a large successful project will usually need a revenue stream to pay for the servers running the websites.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Consider the infrastructure that must exist simply for the distribution of Ubuntu, let alone support sites.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Monetization in the context of this site concerns questions about generating a revenue stream to support distribution and ongoing development of an open source project.&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="190" LastEditDate="2015-07-02T10:41:55.837" LastActivityDate="2015-07-02T10:41:55.837" CommentCount="0" />
  <row Id="127" PostTypeId="4" CreationDate="2015-06-23T20:06:24.287" Score="0" Body="For questions about generating revenue from an open project" OwnerUserId="29" LastEditorUserId="69" LastEditDate="2015-07-22T12:34:56.470" LastActivityDate="2015-07-22T12:34:56.470" CommentCount="0" />
  <row Id="128" PostTypeId="2" ParentId="120" CreationDate="2015-06-23T20:07:01.610" Score="2" Body="&lt;p&gt;Visibly crediting their work on the site/product could be seen by some as &quot;payments through advertising&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some graphics design crowdsourcing sites &lt;em&gt;might&lt;/em&gt; accept a &quot;volunteer/for free&quot; project category. Contributors would be interested to contribute to such projects to increase their visible portfolios, exposure, reputation and ultimately their chances of participating/winning in paid projects.&lt;/p&gt;&#xA;" OwnerUserId="15" LastEditorUserId="15" LastEditDate="2015-06-23T20:27:46.867" LastActivityDate="2015-06-23T20:27:46.867" CommentCount="0" />
  <row Id="130" PostTypeId="2" ParentId="120" CreationDate="2015-06-23T20:16:08.217" Score="3" Body="&lt;p&gt;You could try a fundraising area that asks your audiences to donate to help pay for the costs. Aside from that, you would generally want to try some volunteering initiatives. You could also consider the nature of the project, and attempt to market it to be more attractive to graphic designers.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Like always, give them credit for their work. It's their work that's making your software look pretty at first glance anyways. :)&lt;/p&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-06-23T20:16:08.217" CommentCount="1" />
  <row Id="132" PostTypeId="1" CreationDate="2015-06-23T20:20:36.430" Score="3" ViewCount="77" Body="&lt;p&gt;Free software evangelists often advertise free and open source software to be more secure than proprietary alternatives.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Is this true, and why?&lt;/li&gt;&#xA;&lt;li&gt;Are there security reasons &lt;em&gt;not to use&lt;/em&gt; free and open source software?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="139" LastEditorUserId="199" LastEditDate="2015-06-25T09:36:13.477" LastActivityDate="2015-06-25T09:36:13.477" Title="Is open source software less or more secure than proprietary software?" Tags="&lt;security&gt;" AnswerCount="2" CommentCount="6" ClosedDate="2015-06-23T21:26:16.647" />
  <row Id="133" PostTypeId="1" CreationDate="2015-06-23T20:22:57.863" Score="16" ViewCount="152" Body="&lt;p&gt;Creative Commons defines a &lt;a href=&quot;https://creativecommons.org/about/cc0&quot;&gt;CC0 license type&lt;/a&gt; (here's the &lt;a href=&quot;https://creativecommons.org/publicdomain/zero/1.0/legalcode&quot;&gt;full legal code&lt;/a&gt;) that claims to allow creators to release their works into the public domain by waiving &quot;all their copyright and related rights in their works to the fullest extent allowed by law.&quot;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://wiki.creativecommons.org/wiki/CC0_FAQ#May_I_apply_CC0_to_computer_software.3F_If_so.2C_is_there_a_recommended_implementation.3F&quot;&gt;They claim in their FAQ&lt;/a&gt; (and &lt;a href=&quot;http://www.gnu.org/licenses/license-list.html#CC0&quot;&gt;the FSF confirms&lt;/a&gt;) that CC0 is compatible with the GPL, which is approved by the Open Source Initiative (OSI) for use with software. However, OSI has not approved CC0 and &lt;a href=&quot;http://opensource.org/faq#cc-zero&quot;&gt;does not recommend its use as an OSS license&lt;/a&gt; (emphasis mine):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The most serious of the concerns raised had to do with the effects of&#xA;  clause 4(a), which reads: &quot;No ... patent rights held by Affirmer are&#xA;  waived, abandoned, surrendered, licensed or otherwise affected by this&#xA;  document.&quot;. While many open source licenses simply do not mention&#xA;  patents, it is exceedingly rare for open source licenses to explicitly&#xA;  disclaim any conveyance of patent rights, and the Committee felt that&#xA;  approving such a license would set a dangerous precedent, and&#xA;  &lt;strong&gt;possibly even weaken patent infringement defenses available to users of software released under CC0&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I'm not sure I understand the basis for concern here (or why CC0 includes this clause to begin with, but that's another issue). I understand that you can't make &lt;em&gt;someone else's patents&lt;/em&gt; available by putting code that utilizes those patents into the public domain, but the clause specifically refers to the &quot;Affirmer's&quot; patent rights (the person who decided to release the code in the first place). &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What evidence is there to support the idea that using code released under CC0 would ever result in infringement of the author's own patents?&lt;/strong&gt; I'm looking for a specific example to illustrate when and how this could ever be a problem.&lt;/p&gt;&#xA;" OwnerUserId="20" LastEditorUserId="138" LastEditDate="2015-07-28T18:08:59.613" LastActivityDate="2015-07-29T21:45:25.533" Title="How could using code released under CC0 infringe on the author's patents?" Tags="&lt;licensing&gt;&lt;creative-commons&gt;&lt;patents&gt;&lt;cc0&gt;" AnswerCount="3" CommentCount="3" FavoriteCount="1" />
  <row Id="134" PostTypeId="2" ParentId="88" CreationDate="2015-06-23T20:23:03.690" Score="6" Body="&lt;p&gt;Some projects sell the right to companies to use their code under a proprietary license. This is covered by Wikipedia in the Multi-licensing page.&#xA;From&#xA;&lt;a href=&quot;https://en.wikipedia.org/wiki/Multi-licensing#Business_models&quot;&gt;Multi-licensing: Business models&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Multi-licensing is commonly done to support free software business&#xA;  models in a commercial environment. In this scenario, one option is a&#xA;  proprietary software license, which allows the possibility of creating&#xA;  proprietary applications derived from it, while the other license is a&#xA;  copyleft free software/open-source license, thus requiring any derived&#xA;  work to be released under the same license. The copyright holder of&#xA;  the software then typically provides the free version of the software&#xA;  at little or no cost, and profits by selling proprietary licenses to&#xA;  commercial operations looking to incorporate the software into their&#xA;  own business. This model can be compared to shareware.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;As described in that article, a well known example is MySQL.&lt;/p&gt;&#xA;" OwnerUserId="149" LastActivityDate="2015-06-23T20:23:03.690" CommentCount="1" />
  <row Id="135" PostTypeId="2" ParentId="115" CreationDate="2015-06-23T20:24:06.203" Score="2" Body="&lt;p&gt;I can't really tell what nodejs looks like (aside from being some javascript tool thingy), but the two projects appear to be very similar in nature.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;According to iojs, it looks like Open Source Governance is a fancy way of calling something open source and indulges in its principles. I could be wrong in interpreting this, but here's what the project says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;What is open source governance?&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Open source governance advocates the application of the philosophies of the open source and open content movements in order to enable any interested party to add to the creation of the end product, as with a wiki document. Legislation is democratically opened to the general citizenry, employing their collective wisdom to benefit the decision-making process and improve democracy.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Nodejs says that they have over 300 contributors, as well as some 15 people on a &quot;technical steering committee.&quot; &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Bottom line, open source governance is implementing the open source concept and placing it into action. Both sites seems to have this, except iojs seems to talk about it more...&lt;/p&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-06-23T20:24:06.203" CommentCount="2" />
  <row Id="136" PostTypeId="1" CreationDate="2015-06-23T20:25:06.107" Score="-1" ViewCount="63" Body="&lt;p&gt;As a project grows from a single developer to a dedicated group to a large community, what are best practices for setting up the project hierarchy to encourage high quality contributions across all aspects of the project (code, tests, documentation, graphic assets)?&lt;/p&gt;&#xA;" OwnerUserId="22" LastActivityDate="2015-06-23T20:43:22.977" Title="Hierarchy of an open source project" Tags="&lt;project-management&gt;&lt;contributor&gt;&lt;community&gt;" AnswerCount="1" CommentCount="2" FavoriteCount="0" ClosedDate="2015-06-23T21:07:58.010" />
  <row Id="137" PostTypeId="1" AcceptedAnswerId="1279" CreationDate="2015-06-23T20:25:55.140" Score="6" ViewCount="188" Body="&lt;p&gt;My knowledge of licensing is somewhat fuzzy, it's something I wish I would have looked into more when I got into making open source projects...&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That being stated, are there licenses that will ensure forks of my project will stay open source?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If someone takes my project(s), and adapts it or makes it better in some way, what licenses can I choose from that are already well designed that require they keep it open source, even with their edits.&lt;/p&gt;&#xA;" OwnerUserId="144" LastEditorUserId="69" LastEditDate="2015-06-30T02:03:48.377" LastActivityDate="2015-07-22T15:55:00.087" Title="What license(s) ensures that forks of my project will stay open source?" Tags="&lt;licensing&gt;&lt;forking&gt;" AnswerCount="3" CommentCount="0" />
  <row Id="138" PostTypeId="2" ParentId="115" CreationDate="2015-06-23T20:26:03.917" Score="6" Body="&lt;p&gt;The reason that io.js forked from node.js in the first place was that those originally involved in the forked project wanted the community using the fork to be able to give feedback to the design and add improvements. In &lt;a href=&quot;http://www.infoworld.com/article/2855057/application-development/why-iojs-decided-to-fork-nodejs.html&quot; rel=&quot;nofollow&quot;&gt;the words of team member Mikeal Rogers&lt;/a&gt;,&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;We've been working with Joyent since July to try and move the project to a structure where the contributors and community can step in and effectively solve the problems facing Node.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;. . .&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;In my opinion, the best way to move Node forward is to get the community organized around solving problems and putting out releases, so that's what we're doing. &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Open-source_governance&quot; rel=&quot;nofollow&quot;&gt;Open-source governance&lt;/a&gt; has been applied to a wide range of things, just as the open source movement has spread to many fields.&lt;/p&gt;&#xA;" OwnerUserId="145" LastEditorUserId="145" LastEditDate="2015-06-24T16:36:56.017" LastActivityDate="2015-06-24T16:36:56.017" CommentCount="0" />
  <row Id="139" PostTypeId="2" ParentId="132" CreationDate="2015-06-23T20:27:41.697" Score="6" Body="&lt;p&gt;&lt;strong&gt;Is open source software more secure than proprietary software?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It depends. There can be secure proprietary software and insecure Open source software and it can be the other way. It depends on knowledge and involvement of the developers.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Are there reasons why Open Source Software can be more secure than proprietary software?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;The source code is visible to everyone. That means everyone can check for security problems and report them. That doesn't mean the software is checked, but it is possible. If the project in question is used often it might happen.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;It is easier to deduct, if the developers do something about security. You can look at the source and the changes that are applied and learn if the developers actively working on resolving issues. That isn't that easy for proprietary software.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="55" LastEditorUserId="139" LastEditDate="2015-06-23T20:30:32.323" LastActivityDate="2015-06-23T20:30:32.323" CommentCount="0" />
  <row Id="140" PostTypeId="1" CreationDate="2015-06-23T20:28:16.543" Score="7" ViewCount="101" Body="&lt;p&gt;How can I keep people involved and motivated to work on a project that doesn't involve direct monetary benefit?&#xA;What specific strategies do open source projects tend to use to keep core developers involved?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Partly this is a general &quot;what strategies reliably motivate most open-source developers&quot;, but it's also about &quot;how can you prevent people from forgetting they're involved at all? What specific tactics do project leaders use to remind people that they're part of something?&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;At least in my own case, my largest problem with projects is that I have hundreds of barely started, and tens of half-finished things that I just completely forget about / put off, but that I do really want to see completed. While this arguably isn't specific to open source, to me at least it's the largest impediment.&lt;/p&gt;&#xA;" OwnerUserId="148" LastActivityDate="2015-06-23T21:48:11.457" Title="How can I keep a project from losing momentum?" Tags="&lt;project-management&gt;&lt;human-resources&gt;" AnswerCount="2" CommentCount="2" FavoriteCount="1" ClosedDate="2015-06-30T07:42:17.560" />
  <row Id="141" PostTypeId="2" ParentId="133" CreationDate="2015-06-23T20:31:04.277" Score="-2" Body="&lt;p&gt;First off, to answer your main question, the Open Source Initative says that they did not reach a consensus and that Creative Commons withdrew their application.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;In February 2012, Creative Commons submitted CC0 to the OSI for approval as an open source license, requesting that the OSI evaluate the public license fallback section, since the rest of the text is a waiver of rights rather than a license. An unexpectedly intense and detailed discussion followed — search for &quot;CC0&quot; and &quot;Creative Commons Zero&quot; in the subject headers of the February 2012 and March 2012 archives of the OSI License Review mailing list.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;CC0 was not explicitly rejected, but the License Review Committee was unable to reach consensus that it should be approved, and Creative Commons eventually withdrew the application.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;With that, it seems that there was discomfort for the affirmer to release information under this license that could possibly conflict with anything that was included. To make this more clear, it looks like possible legal conflicts due to the inclusion of something could potentially wind up disastrous for the affirmer, as it may be interpreted that the patent had been released into the public domain. I don't know of any examples, but this might be a fear.&lt;/p&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-06-23T20:31:04.277" CommentCount="2" />
  <row Id="142" PostTypeId="1" AcceptedAnswerId="1081" CreationDate="2015-06-23T20:33:14.763" Score="18" ViewCount="162" Body="&lt;p&gt;Most of us know open-source and open-source concepts from software. Code is easily distributable. We have various licences that help us legalize and regulate how people use our code, and we have various services that help us reach out and show-off.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;How (and how well) do these concepts apply to hardware? How do I open-source a hardware product?&lt;/p&gt;&#xA;" OwnerUserId="40" LastActivityDate="2015-07-16T12:37:31.040" Title="How do open-source concepts apply to hardware?" Tags="&lt;hardware&gt;" AnswerCount="7" CommentCount="2" FavoriteCount="4" />
  <row Id="143" PostTypeId="2" ParentId="137" CreationDate="2015-06-23T20:33:50.200" Score="2" Body="&lt;p&gt;This are &lt;a href=&quot;https://en.wikipedia.org/wiki/Copyleft&quot; rel=&quot;nofollow&quot;&gt;copyleft&lt;/a&gt;-licenses. The most commonly used and known are &lt;a href=&quot;https://www.gnu.org/licenses/gpl.html&quot; rel=&quot;nofollow&quot;&gt;GPL&lt;/a&gt; and &lt;a href=&quot;https://www.gnu.org/licenses/agpl.html&quot; rel=&quot;nofollow&quot;&gt;AGPL&lt;/a&gt;. Also the &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/&quot; rel=&quot;nofollow&quot;&gt;Creative Commons Share Alike&lt;/a&gt; license works this way.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-23T20:33:50.200" CommentCount="0" />
  <row Id="145" PostTypeId="2" ParentId="140" CreationDate="2015-06-23T20:35:03.177" Score="5" Body="&lt;p&gt;One of the biggest incentives is to create well defined goals. With that, people will want to work towards something. With goals, people will understand their job, as well as what they would like to accomplish.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now, this one may sound slightly ironic, but to not lose momentum, you need to keep activity from a fair number of contributors. If someone feels as if they are the only one working on something, and they don't understand what they're doing, their objective, their audience... it might be discouraging.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another option, could be to gamify it a little bit, similar to how we run here within the Stack Exchange community.&lt;/p&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-06-23T20:35:03.177" CommentCount="0" />
  <row Id="146" PostTypeId="2" ParentId="137" CreationDate="2015-06-23T20:35:18.403" Score="10" Body="&lt;p&gt;The general term for this type of license is &lt;a href=&quot;https://en.wikipedia.org/wiki/Copyleft&quot;&gt;copyleft&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Share-alike&quot;&gt;share-alike&lt;/a&gt; or (pejoratively) &lt;a href=&quot;https://en.wikipedia.org/wiki/Viral_license&quot;&gt;viral licenses&lt;/a&gt;. The two best-known examples of such licenses are the &lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_General_Public_License&quot;&gt;GNU General Public License&lt;/a&gt; (for source code) and the &lt;a href=&quot;https://creativecommons.org/licenses/&quot;&gt;Creative Commons ShareAlike licenses&lt;/a&gt; (for any creative content). Note that these licenses &lt;a href=&quot;https://creativecommons.org/compatiblelicenses&quot;&gt;sometimes allow you&lt;/a&gt; to use an alternate, compatible license inside of the exact license you used.&lt;/p&gt;&#xA;" OwnerUserId="121" LastActivityDate="2015-06-23T20:35:18.403" CommentCount="1" />
  <row Id="148" PostTypeId="2" ParentId="142" CreationDate="2015-06-23T20:41:02.273" Score="2" Body="&lt;p&gt;One option would be to make it easy to manufacture the product, e.g. by supplying blueprints or AutoCAD designs/files online. With the rise of 3D printers, it's much easier for people to use readily-available designs to make hardware. It's not cheap enough for the typical person to buy a 3D printer or CNC mill, but makerspaces/hackerspaces are becoming decently prolific, and it's easier (and sometimes free) for people to join one.&lt;/p&gt;&#xA;" OwnerUserId="145" LastEditorUserId="145" LastEditDate="2015-06-23T20:46:35.190" LastActivityDate="2015-06-23T20:46:35.190" CommentCount="0" />
  <row Id="149" PostTypeId="2" ParentId="142" CreationDate="2015-06-23T20:42:53.243" Score="2" Body="&lt;p&gt;The concepts of Open source can be applied to other fields, with some minor modifications. Well known is creative commons adapting open source for the arts.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Open-source_hardware&quot; rel=&quot;nofollow&quot;&gt;Open source hardware&lt;/a&gt; also exists. It usually involves, that the blueprints to build the hardware are available under a license that follows the ideas of open source. Actually many projects choose an open source license to distribute their designs.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Examples of open hardware include Novena, Arduino or RepRap.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-23T20:42:53.243" CommentCount="0" />
  <row Id="150" PostTypeId="2" ParentId="136" CreationDate="2015-06-23T20:43:22.977" Score="1" Body="&lt;p&gt;I'm going to lead you to one of the projects from another question I answered, nodejs. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;From their site, they have contributors (and over 300 of them!) as well as a &quot;technical steering committee&quot;. &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The Node.js project is sponsored by the Node.js Foundation and maintained by individual Collaborators. The Technical Steering Committee (TSC) membership consists of key Collaborators who have demonstrated both technical expertise critical to the ongoing maintenance and evolution of the project and a long term commitment to driving the project and community forward.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Essentially, you could create an &quot;executive&quot; team, with different team leaders to foster certain components of a large project, similar to nodejs.&lt;/p&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-06-23T20:43:22.977" CommentCount="3" />
  <row Id="151" PostTypeId="2" ParentId="142" CreationDate="2015-06-23T20:44:25.150" Score="13" Body="&lt;p&gt;You'll have to start by defining what your 'source' is.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Data-sheets are usually not restricted, but only the author contributes to it. If you make your data-sheets a shared effort, you are already well on your way. Of-course, you can expand this to all documentation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Second would be the actual hardware. Do you want your contributors to have a say in what chips to use and how to route your lanes? What colours should be used? What should be the features of the next board? Those are all questions which could be handled in an Open Source way.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The problem with hardware relative to software is the production cost. Software can be shared without cost. Schematics and documentation can as well, but the actual product it results in always needs to be produced. Ergo, it's difficult to completely Open Source hardware projects.&lt;/p&gt;&#xA;&#xA;&lt;h1&gt;But wait!&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;What if only the theory behind the hardware should be freely available? Well, that's where sites like &lt;a href=&quot;http://www.instructables.com/&quot;&gt;Instructables&lt;/a&gt; come in (there are probably better examples around). Somebody states how he build something, uploads some pictures and the next person comes around. He rebuilds it, tweaks it a little, uploads some pictures, etc..&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is it doable? &lt;strong&gt;Yes&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is it more difficult than open-sourcing software? &lt;strong&gt;Usually&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;How? WIRED recently wrote an &lt;a href=&quot;http://archive.wired.com/techbiz/startups/magazine/16-11/ff_openmanufacturing&quot;&gt;article&lt;/a&gt; about whether or not open source hardware can work. One of their examples is the Arduino team (do note this may turn out to be a bad example as well, since the Arduino team is currently involved in a &lt;a href=&quot;http://hackaday.com/2015/03/28/arduino-srl-to-distributors-were-the-real-arduino/&quot;&gt;naming conflict&lt;/a&gt;). The basic idea behind their approach is 'We built something, please copy this!', which doesn't happen often in the hardware business.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A quote from the article (page 2):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Sure enough, that's what happened. Within months, geeks suggested wiring changes and improvements to the programming language.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Another example from the article is the Linksys WRT54G router. It probably wasn't intended as an open source project. Since the firmware was running Linux, hackers took it upon themselves to modify it anyway. Their efforts boosted the sale of that router (and other routers in that series later).&lt;/p&gt;&#xA;" OwnerUserId="39" LastEditorUserId="39" LastEditDate="2015-06-24T08:27:30.263" LastActivityDate="2015-06-24T08:27:30.263" CommentCount="1" />
  <row Id="152" PostTypeId="2" ParentId="132" CreationDate="2015-06-23T20:44:55.080" Score="5" Body="&lt;p&gt;This principle is sometimes referred to as &lt;a href=&quot;https://en.wikipedia.org/wiki/Linus%27s_Law&quot;&gt;Linus' Law&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Given a large enough beta-tester and co-developer base, almost every problem will be characterized quickly and the fix will be obvious to someone.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Coverity &lt;a href=&quot;http://techcrunch.com/2012/02/23/with-many-eyeballs-all-bugs-are-shallow/&quot;&gt;published a study&lt;/a&gt; that &quot;found that open source code quality is on par with proprietary code quality for codebases of similar size&quot;; however, the Wikipedia page I quoted above points out that the &lt;a href=&quot;https://en.wikipedia.org/wiki/Heartbleed&quot;&gt;Heartbleed bug&lt;/a&gt; was inserted into the &lt;a href=&quot;https://en.wikipedia.org/wiki/OpenSSL&quot;&gt;OpenSSL&lt;/a&gt; code base on December 31, 2011, and -- despite OpenSSL being widely used piece of system software -- was not discovered until April 1, 2014, almost three years later.&lt;/p&gt;&#xA;" OwnerUserId="121" LastActivityDate="2015-06-23T20:44:55.080" CommentCount="1" />
  <row Id="153" PostTypeId="2" ParentId="142" CreationDate="2015-06-23T20:49:58.717" Score="1" Body="&lt;p&gt;The Verilog, VHDL or any other hw specification language code for (digital) designs can be open sourced just like any sw code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You could publish the design as libraries for various FPGA families (in a similar manner in which the FPGA manuafacturers share sample designs/code/libraries for their evaluation boards, for example).&lt;/p&gt;&#xA;" OwnerUserId="15" LastActivityDate="2015-06-23T20:49:58.717" CommentCount="0" />
  <row Id="154" PostTypeId="1" CreationDate="2015-06-23T21:02:26.340" Score="6" ViewCount="51" Body="&lt;p&gt;Working in an open source project has the result that sometimes developers with no experience in the codebase attempt to &lt;em&gt;&quot;learn the code&quot;&lt;/em&gt; on their own.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is a reoccurring trap I've seen, where new developers try to:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;understand &lt;em&gt;everything&lt;/em&gt; before doing &lt;em&gt;anything&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;These tend to be developers who only ever worked on their own projects, or at least smaller codebases, where this may work out OK.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;My impression is that they try to read the code a bit like it's a book, hoping that somewhere near the end they will have an &lt;em&gt;&quot;ahah&quot;&lt;/em&gt; moment where they will understand it and start writing new code and being productive.&lt;br&gt;&#xA;&lt;em&gt;(I'm simplifying a bit here)&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This always seems to end badly.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Rather than questioning their approach, they complain the code is confusing and needs more comments.&lt;br&gt;&lt;em&gt;(Whether or not to include comments is a big topic. For purpose of discussion we can assume the code is reasonably well-commented.)&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Not to suggest the code is perfect either, but &lt;em&gt;some&lt;/em&gt; developers manage to learn it and become productive.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;To me the approach is flawed to begin with, but asking since this is such a common assumption/mistake.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;When developers have already tried and failed to enter a large codebase by reading over the code:&lt;br&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What steps might an open-source project take to help new developers avoid common pitfalls based on (often poor) assumptions?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;h3&gt;Note on the &lt;em&gt;&quot;volunteers for open source&quot;&lt;/em&gt; aspect (added for clarification)&lt;/h3&gt;&#xA;  &#xA;  &lt;p&gt;You might think that the volunteer part of the question isn't important and that &lt;em&gt;any&lt;/em&gt; new developer on a large codebase would run into these problems.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;While this may be true in some cases, there is a difference that volunteers aren't employed by the organization, they can do what they like, how they like - and may do a significant amount of work on their own without asking for guidance, further, they are free to ignore all advice too. &lt;em&gt;Even if their work is rejected for example, they may continue to develop it, start a fork etc...&lt;/em&gt;.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;This typically isn't the case a developer employed to work on closed source software.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="160" LastEditorUserId="160" LastEditDate="2015-06-23T21:52:12.237" LastActivityDate="2015-06-23T21:54:50.570" Title="Guiding new volunteers learning a large codebase" Tags="&lt;volunteer&gt;&lt;best-practice&gt;" AnswerCount="1" CommentCount="7" FavoriteCount="1" ClosedDate="2015-06-23T23:10:07.160" />
  <row Id="156" PostTypeId="1" AcceptedAnswerId="276" CreationDate="2015-06-23T21:18:25.807" Score="4" ViewCount="87" Body="&lt;p&gt;Is there a way to analyze my code I want to release as opensource to see if it is / or has parts that are already licensed or proprietary?  &lt;/p&gt;&#xA;" OwnerUserId="161" LastEditorUserId="190" LastEditDate="2015-06-24T15:59:24.970" LastActivityDate="2015-06-24T16:09:37.387" Title="How can I determine if some code I want to release as opensource is already licensed or proprietary?" Tags="&lt;licensing&gt;&lt;proprietary-code&gt;" AnswerCount="4" CommentCount="3" FavoriteCount="3" />
  <row Id="157" PostTypeId="1" CreationDate="2015-06-23T21:26:13.853" Score="-4" ViewCount="65" Body="&lt;p&gt;Sourceforge was once the number one in project hosting for open source projects. But things have changed. And &lt;a href=&quot;http://blog.gluster.org/2013/08/how-far-the-once-mighty-sourceforge-has-fallen/&quot; rel=&quot;nofollow&quot;&gt;some things&lt;/a&gt; Sourceforge does are worrying. The adware injected into binaries of Open-Source-projects is indeed not worthy of an OSS-hoster.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now github or Google Code seem like good alternatives. The question I ask myself is: can I trust these sites, that down the line they not may resort to similar measures to squeeze money out of the users?&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-24T15:55:13.780" Title="Can I trust project-hosting websites after Sourceforge?" Tags="&lt;project-hoster&gt;" AnswerCount="2" CommentCount="3" ClosedDate="2015-06-23T22:05:27.237" />
  <row Id="158" PostTypeId="2" ParentId="157" CreationDate="2015-06-23T21:37:22.483" Score="0" Body="&lt;p&gt;You can (could, for Google Code) trust these sites, although that's primarily based on a user's experience with these sites.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As far as GitHub goes, they don't try to &lt;em&gt;squeeze&lt;/em&gt; money out of you... Git/GitHub is an elaborate system that's great for open source hosting, managing, collaberation, and also contributing to other's code.  GitHub also provides a community, in which you basically get free promotion (if your project is interesting enough to the community). &lt;/p&gt;&#xA;&#xA;&lt;p&gt;But in the case that you need a private repository (proprietary project hosting) is when they'll charge month, based on the amount of repositories you want.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;(&lt;a href=&quot;https://github.com/pricing&quot; rel=&quot;nofollow&quot;&gt;You can see their price table here&lt;/a&gt; for their private hosting, although that really goes against the terms of open source...  Just some extra information).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As far as Google Code goes, &lt;a href=&quot;http://google-opensource.blogspot.com/2015/03/farewell-to-google-code.html&quot; rel=&quot;nofollow&quot;&gt;they're officially shutting down&lt;/a&gt;, so you should no longer use them.&lt;/p&gt;&#xA;" OwnerUserId="144" LastEditorUserId="197" LastEditDate="2015-06-24T15:55:13.780" LastActivityDate="2015-06-24T15:55:13.780" CommentCount="0" />
  <row Id="159" PostTypeId="2" ParentId="156" CreationDate="2015-06-23T21:41:37.347" Score="8" Body="&lt;p&gt;If you do not know where your code came from (you did not write it, or you did not buy or license it), then there is no way for you to know its heritage. As a result, you cannot then open source it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is no way that I know of to analyse the code, and determine it's heritage unless you have already pre-analysed the code it may have come from (i.e. you can do a 'diff', but you need the baseline to compare to).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is important when working with any code (open or not) to keep track of where the code comes from so that you can more easily make these determinations later.&lt;/p&gt;&#xA;" OwnerUserId="80" LastActivityDate="2015-06-23T21:41:37.347" CommentCount="4" />
  <row Id="160" PostTypeId="2" ParentId="140" CreationDate="2015-06-23T21:48:11.457" Score="2" Body="&lt;p&gt;One aspect about keeping momentum is to always keep current on the latest features, and to ensure you support the people who are most dynamic in the areas of interest.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I found this with JDOM (Java XML library - it is unfortunately a good example of how to stifle the momentum). A lesson learned there is that you have to ensure you keep reasonably relevant with the latest systems.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;JDOM ensured that it kept compatibility with legacy systems, including Java all the way back to Java 1.2. This makes sense from a code maturity and legacy support basis, but it made adopters of Java 1.5 with generics a real problem. JDOM was too late to support the newer Java versions, and as a result, it lost momentum.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Keep your code relevant, watch trends, and attract people who are developing things, not using things.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This means continuously building and supporting new features, probably while maintaining older versions to support legacy folk too.&lt;/p&gt;&#xA;" OwnerUserId="80" LastActivityDate="2015-06-23T21:48:11.457" CommentCount="1" />
  <row Id="161" PostTypeId="2" ParentId="154" CreationDate="2015-06-23T21:54:50.570" Score="3" Body="&lt;h3&gt;Write a wiki / documentation on the code that's already developed.&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Considering you have a large amount of code, document it.  If I were looking to volunteer, the first thing I'd do is learn the structure of the code and how to use it if I don't already.&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Write a short guideline on what you're expecting from contributes.&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;More simply, just write guidelines.  It's a common practice on platforms like GitHub to create a &lt;code&gt;CONTRIBUTING.md&lt;/code&gt; file, which outlines some expectations and guides the user to how to contribute.&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Have the code-base commented where it's need.&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Comment your code to help incoming contributes understand each individual bits that may appear confusing.  Comments in their name are pretty much self explanatory.&lt;/p&gt;&#xA;" OwnerUserId="144" LastActivityDate="2015-06-23T21:54:50.570" CommentCount="0" />
  <row Id="162" PostTypeId="2" ParentId="133" CreationDate="2015-06-23T21:55:59.467" Score="5" Body="&lt;p&gt;Suppose that I patent an algorithm, X. Then I develop and release an implementation of that algorithm, Y. I release Y with an open source license, granting permission for others to use and distribute Y. Generally speaking, it has always been assumed that my granting of permission to use and distribute Y has also been a grant to use and distribute X. However, CC0 makes the very unusual decision to explicitly not make that grant. So, if I release Y under CC0 and you use Y in your project, then you have violated my patent rights in X.&lt;/p&gt;&#xA;" OwnerUserId="19" LastEditorUserId="19" LastEditDate="2015-06-23T22:16:07.813" LastActivityDate="2015-06-23T22:16:07.813" CommentCount="2" />
  <row Id="163" PostTypeId="2" ParentId="117" CreationDate="2015-06-23T21:59:22.790" Score="2" Body="&lt;p&gt;There are two aspects to this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;First, the costs: you already enumerate several of these. I am not sure that this needs to be explained, because the majority of organizations that purchase software understand that there will be bug fixes, security updates, etc. They need some IT staff to manage this, and support may cost money via a support contract. If an organization does not &quot;get&quot; this then put it this way: not paying for support also has a cost when it is midnight on Saturday, the network is down due to a DDOS or security issue, and nobody is on call to fix it. Money is no longer coming in to the company because an IT system is nonfunctional. No revenue means no profit: that is an easy sell.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Next, the benefits. &lt;em&gt;Whatever your feelings are, business suits do not typically care about the benevolence of giving back to the community&lt;/em&gt;. Unless there are some serious brownie points to be earned (e.g. a fracking company helping to clean up the environment is a good example), the political capital is ephemeral.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Instead, focus on the benefits to the company. With open source, &lt;em&gt;you have the source&lt;/em&gt;. You can modify it and it does not cost anything. Be careful, however, as it may interfere with the support contract mentioned previously. At the very least, you can help the vendor fix bugs quicker when your own IT staff can audit the code, follow stack traces, understand core dumps, etc. You &lt;em&gt;may&lt;/em&gt; be able to extend the code, write plugins, etc. that have minimal impact on support and provide business value to the company.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And that right there is the key: what is the &lt;em&gt;business value?&lt;/em&gt; Think dollars and cents, and throw out any notion of the greater good. The people signing your paycheck probably do not care.&lt;/p&gt;&#xA;" OwnerUserId="166" LastActivityDate="2015-06-23T21:59:22.790" CommentCount="0" />
  <row Id="164" PostTypeId="2" ParentId="157" CreationDate="2015-06-23T22:02:15.083" Score="3" Body="&lt;p&gt;Your trust level of any service is up to you. Do you trust GitHub? Do you trust your ISP? Do you trust your own machine?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you do not trust GitHub, where do you host your code? An alternative like BitBucket? Do you trust them? Your own private server? Do you trust the company you rented the server from? It never ends.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;GitHub appears to be a pretty good choice, they don't appear to be doing much evil in the form of user mistrust (although there was a bit of drama with regards to claims of sexual harassment within the company). &lt;/p&gt;&#xA;" OwnerUserId="40" LastActivityDate="2015-06-23T22:02:15.083" CommentCount="2" />
  <row Id="165" PostTypeId="1" AcceptedAnswerId="170" CreationDate="2015-06-23T22:45:05.703" Score="9" ViewCount="86" Body="&lt;p&gt;Let's say I'm selling a device with my software pre installed whose license is GPL v3. I want to prevent an unauthorized OS from being installed. According to GPL v3, I will have to share the private key with the user that can sign the image that will be accepted by the device. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;My question is, when am I required to share the key? Can I share the key only when the user requests it? Can I stop sending updates and stop providing phone support if the user asks for the signing key? (Assuming it's already part of terms and conditions)&lt;/p&gt;&#xA;" OwnerUserId="84" LastEditorUserId="29" LastEditDate="2015-07-12T19:02:47.127" LastActivityDate="2015-07-13T08:30:20.897" Title="What restrictions can I place on a device whose software is licensed using GPL v3?" Tags="&lt;gpl-3&gt;" AnswerCount="1" CommentCount="0" FavoriteCount="1" />
  <row Id="167" PostTypeId="2" ParentId="71" CreationDate="2015-06-23T22:53:56.613" Score="3" Body="&lt;p&gt;In addition to mattdm's excellent writeup of OSI and the issues with license proliferation, I think there are simple, succinct reasons for using OSI licenses and getting new licenses approved by them:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;OSI is the go-to site for choosing a license, comparing licenses, reading the license text all in one place.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;OSI is a neutral organization: just the facts, ma'am. No spin or bias.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;OSI-approved licenses meet an arbitrary set of criteria as set forth by the ill-defined &quot;free and open source software&quot; community.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;In other words, OSI is a &lt;em&gt;really good&lt;/em&gt; repository of licenses that are heavily used by the community.&lt;/p&gt;&#xA;" OwnerUserId="166" LastActivityDate="2015-06-23T22:53:56.613" CommentCount="1" />
  <row Id="168" PostTypeId="2" ParentId="156" CreationDate="2015-06-23T22:55:04.220" Score="5" Body="&lt;p&gt;I think you're under a slight misunderstanding of what a license is. A license is merely a grant of permission subject to certain conditions to use something that you otherwise couldn't, in this case under copyright law. Copyright law tells you who make grant that permission (the copyright holder, basically).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So in order to determine if you can grant permission to use the code under an open source license, you need to determine if you hold the copyright(s) to the code, or have been given permission by those who do.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you wrote the code yourself, not based on someone else's code, and not as part of employment, then you probably own the copyright. As long as you haven't transferred the copyright to someone else (or given them an exclusive license, or otherwise agreed not to release the code), you can release it as open source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If parts of the code were written by other people, then you probably need their permission to release the code (or to do much anything with it). If you downloaded it from somewhere, the license likely accompanied it, and may give you that permission. You will have to read its terms.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Otherwise, you need to contact all the authors and get each author's permission.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I've heard there are products that are used by large companies to scan their source code automatically, comparing portions against a large corpus of open-source code. They're intended to prevent one of their thousands of employees from copying open-source code into their proprietary apps (as that can give rise to a lot of liability for the company). But for a project with only a few developers, you can hopefully just trace all the code.&lt;/p&gt;&#xA;" OwnerUserId="17" LastEditorUserId="17" LastEditDate="2015-06-23T23:08:08.563" LastActivityDate="2015-06-23T23:08:08.563" CommentCount="0" />
  <row Id="170" PostTypeId="2" ParentId="165" CreationDate="2015-06-23T23:20:17.620" Score="13" Body="&lt;p&gt;&lt;a href=&quot;https://gnu.org/licenses/gpl-3.0&quot; rel=&quot;nofollow&quot;&gt;GPLv3&lt;/a&gt; §6 calls the&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;methods, procedures, authorization keys, or other information required to install….&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;the &lt;em&gt;Installation Information&lt;/em&gt;. The next paragraph requires that when you (paraphrasing) sell a device with the software installed, you must accompany it with the Installation Information. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, the answer to &lt;em&gt;when&lt;/em&gt; is: it must accompany the device.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The next paragraph explicitly says you do not need to&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So you do not need to provide updates or support.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, you could probably have some &quot;unlock&quot; procedure the user must go through, that would indicate the device is no longer supported. But you must not &quot;break&quot; the device just because it's unlocked, GPLv3 prohibits that. Talk to a lawyer to review your specific plans.&lt;/p&gt;&#xA;" OwnerUserId="17" LastEditorDisplayName="user490" LastEditDate="2015-07-13T08:30:20.897" LastActivityDate="2015-07-13T08:30:20.897" CommentCount="2" />
  <row Id="171" PostTypeId="2" ParentId="156" CreationDate="2015-06-23T23:27:11.547" Score="1" Body="&lt;p&gt;I don't see how just by looking at a piece of code you can figure out what license it uses. You wouldn't see this, for example:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;// You'll never know the (license goes here) that I've made super secret from the world&#xA;// and is hidden in this code. No one shall ever know, unless they come here of course...&#xA;// Mua ha ha ha ha!&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Concerning code, there are two ways that I see to determine the license it uses:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Find the origin of the code:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;Understanding the origin of the code will allow you to trace it to its roots, thereby connecting you to the original contributors or organization who wrote it. They would likely have the answer for you.&lt;/p&gt;&#xA;&#xA;&lt;ol start=&quot;2&quot;&gt;&#xA;&lt;li&gt;Look at the documentation&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;Since documentation is code in english (at least in my eyes it is), there will likely be a mention of it there. &lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-06-23T23:32:46.540" LastActivityDate="2015-06-23T23:32:46.540" CommentCount="0" />
  <row Id="173" PostTypeId="1" AcceptedAnswerId="277" CreationDate="2015-06-23T23:40:08.713" Score="14" ViewCount="116" Body="&lt;p&gt;&lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;CC-BY-SA&lt;/a&gt; is a Creative Commons license with a copyleft clause - if you derive something from it, you must also provide the derivative under the same license if you distribute it. The relevant clause is here:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;ShareAlike&lt;/strong&gt; — If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;In the &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/legalcode&quot;&gt;actual license&lt;/a&gt;, it refers to derivation as &lt;em&gt;adapted material&lt;/em&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Adapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So does inclusion in a software package turn the software into &lt;em&gt;adapted material&lt;/em&gt;?&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If I include a CC-BY-SA licensed image in the software, do I need to share just the image or does the entire software come under CC-BY-SA?&lt;/li&gt;&#xA;&lt;li&gt;What if I make modifications to this image, what do I need to share?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="175" LastEditorUserId="69" LastEditDate="2015-07-05T14:09:20.760" LastActivityDate="2015-07-05T14:09:20.760" Title="What do I need to share if I include CC-BY-SA artwork in my software?" Tags="&lt;creative-commons&gt;&lt;copyleft&gt;&lt;cc-by-sa&gt;" AnswerCount="2" CommentCount="1" FavoriteCount="2" />
  <row Id="174" PostTypeId="1" CreationDate="2015-06-24T00:06:05.447" Score="15" ViewCount="120" Body="&lt;p&gt;Most Windows installers for FOSS software make the user agree to the licence during installation: there'll be a page where the text is shown and a little tick box, you must have seen it before.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But most FOSS licences put zero restrictions on how you can use licensed software; the licences are all about redistribution. The &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.en.html&quot; rel=&quot;nofollow&quot;&gt;GPL3&lt;/a&gt; says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;This License explicitly affirms your unlimited permission to run the unmodified Program.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.html&quot; rel=&quot;nofollow&quot;&gt;FSF's Free Software Definition&lt;/a&gt; says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The freedom to run the program as you wish, for any purpose (freedom 0).&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;And the &lt;a href=&quot;http://opensource.org/osd&quot; rel=&quot;nofollow&quot;&gt;OSI's Open Source Definition&lt;/a&gt; says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ol start=&quot;6&quot;&gt;&#xA;  &lt;li&gt;No Discrimination Against Fields of Endeavor&lt;br&gt;&#xA;  The license must not restrict anyone from making use of the program in a specific field of endeavor. For example, it may not restrict the program from being used in a business, or from being used for genetic research.&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So why do so many installers not just tell you about the licence, not just show you the licence, but require you to &lt;em&gt;agree&lt;/em&gt; to it before proceeding? 90% of such users will never distribute the software in any form, of those who do most won't do anything other than share the installer on a USB drive. Are there reasons to make the user agree to it, other than it just being what most installers do now?&lt;/p&gt;&#xA;" OwnerUserId="190" LastEditorUserId="98" LastEditDate="2015-07-19T19:30:44.010" LastActivityDate="2015-07-19T19:30:44.010" Title="For what reasons should you make the user agree to a FOSS licence during installation?" Tags="&lt;licensing&gt;&lt;distribution&gt;&lt;installers&gt;&lt;software-use&gt;" AnswerCount="2" CommentCount="2" />
  <row Id="175" PostTypeId="1" CreationDate="2015-06-24T00:10:18.900" Score="12" ViewCount="113" Body="&lt;p&gt;&lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot; rel=&quot;nofollow&quot;&gt;CC-BY&lt;/a&gt; 4.0 (and the related licenses with &quot;BY&quot; in their names, like CC-BY-SA, CC-BY-NC) includes a clause that says I must not place &quot;additional restrictions&quot; on the work:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;No additional restrictions — You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;In that text, &quot;technological measures&quot; is hyperlinked to this:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The license prohibits application of effective technological measures, defined with reference to Article 11 of the WIPO Copyright Treaty.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;More info.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;And &quot;More info&quot; links to this:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;All CC license versions prohibit licensees (as opposed to licensors) from using effective technological measures such as “&lt;strong&gt;digital rights management&lt;/strong&gt;” software to restrict the ability of those who receive a CC-licensed work to exercise rights granted under the license. To be clear, encryption or an access limitation is not necessarily a technical protection measure prohibited by the licenses. For example, content sent via email and encrypted with the recipient's public key does not restrict use of the work by the recipient. Likewise, limiting recipients to a set of users (e.g., with a username and password) does not restrict use of the work by the recipients. In the cases above, encryption or an access limitation does not violate the prohibition on technological measures because the recipient is not prevented from exercising all rights granted by the license (including rights of further redistribution).&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;(bold is mine)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Does that mean that I cannot include a CC-BY licensed work, like a sound effect or clip art, in software that I distribute in DRM-protected app stores, like the iOS App Store and Steam?&lt;/p&gt;&#xA;" OwnerUserId="175" LastEditorUserId="606" LastEditDate="2015-08-01T05:07:23.420" LastActivityDate="2015-08-01T15:45:14.760" Title="Can I redistribute CC-BY works in DRM-protected app stores?" Tags="&lt;creative-commons&gt;&lt;cc-by&gt;&lt;drm&gt;" AnswerCount="2" CommentCount="1" FavoriteCount="2" />
  <row Id="176" PostTypeId="1" CreationDate="2015-06-24T00:23:28.643" Score="18" ViewCount="278" Body="&lt;p&gt;The &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.en.html&quot;&gt;GPL3&lt;/a&gt;, for example, says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ol start=&quot;4&quot;&gt;&#xA;  &lt;li&gt;Conveying Verbatim Copies.&lt;br&gt;&#xA;  &lt;strong&gt;You may convey verbatim copies of the Program's source code&lt;/strong&gt; as you receive it, in any medium, &lt;strong&gt;provided that you&lt;/strong&gt; conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and &lt;strong&gt;give all recipients a copy of this License along with the Program&lt;/strong&gt;.&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The licence goes on to say that distribution of binaries is allowed as long as they are distributed under the terms of sections 4 and 5, i.e., with a copy of the licence text.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In practice is this really necessary? On a FOSS-aficionado's computer they must have hundreds of copies of each licence, and even on a regular proprietary-filled Windows machine there are probably a dozen copies. And if I wanted to look at the licence of the GPL or MIT I wouldn't go digging for the copy that's included in the program, I'd find the text of the licence online.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This looks to me like it would be a technical violation of the licence, though it is exceedingly common. Debian packages do not include the common licences, and many npm packages don't either. So do we need to, and if we don't, would it impact the enforceability of the licence later on?&lt;/p&gt;&#xA;" OwnerUserId="190" LastEditorUserId="190" LastEditDate="2015-06-30T13:06:34.590" LastActivityDate="2015-07-10T11:29:43.907" Title="Do I really need to include a licence file for common licences like GPL or MIT?" Tags="&lt;licensing&gt;&lt;gpl&gt;&lt;distribution&gt;&lt;license-file&gt;" AnswerCount="3" CommentCount="1" />
  <row Id="177" PostTypeId="2" ParentId="175" CreationDate="2015-06-24T00:27:06.247" Score="7" Body="&lt;p&gt;Your analysis seems to be sound except:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;You &lt;em&gt;may&lt;/em&gt; be able get around this by&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Referring to the CC media rather than including it (downloaded from the web)&lt;/li&gt;&#xA;&lt;li&gt;Publishing a link (inside the app) to the CC media in an approved non-drm mechanism.&lt;/li&gt;&#xA;&lt;li&gt;Including the CC media in a form that is unprotected.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Note: You &lt;strong&gt;CAN&lt;/strong&gt; use DRM, you just cannot &lt;strong&gt;restrict the rights&lt;/strong&gt;.&lt;/p&gt;&#xA;" OwnerUserId="185" LastActivityDate="2015-06-24T00:27:06.247" CommentCount="0" />
  <row Id="178" PostTypeId="2" ParentId="174" CreationDate="2015-06-24T00:27:42.257" Score="10" Body="&lt;p&gt;I can think of a few reasons:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Conflation with EULAs&lt;/strong&gt;. As you mentioned, copyright licenses deal with &lt;em&gt;redistribution&lt;/em&gt;, not &lt;em&gt;usage&lt;/em&gt;. EULAs, as their name implies (End User License Agreement), are contracts that restrict your rights as a &lt;em&gt;user&lt;/em&gt;, and are therefore something the user &lt;em&gt;must&lt;/em&gt; agree to &lt;em&gt;before&lt;/em&gt; using the software, and naturally belong in places like the installer.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Attribution&lt;/strong&gt;. Many licenses require that the license text itself is reproduced in redistributions; some licenses also require attributing the original authors. The requirements vary, but many are quite flexible in &lt;em&gt;where&lt;/em&gt; the license text appears. For examples, they could be placed in an About dialog, a Readme file, on the Download web page, in the Credits. The installer is just another place to mention those licenses.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Convenience&lt;/strong&gt;. Most software that build installers include a way to embed a custom text file as a step in the installation. For example, &lt;a href=&quot;https://en.wikipedia.org/wiki/Nullsoft_Scriptable_Install_System&quot;&gt;NSIS&lt;/a&gt; has the function &lt;code&gt;MUI_PAGE_LICENSE textfile&lt;/code&gt; in its macro language. This is a much easier way of showing a license than other methods like building an About dialog.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Evangelism&lt;/strong&gt;. Many software developers using FOSS licenses are proud of doing so, and would like to loudly advertise this fact. Making users read this when installing is a good way of doing this.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;But ultimately, copyright licenses (like the FOSS ones) &lt;strong&gt;do not require &quot;agreeing&quot;&lt;/strong&gt;, only that some require the user be able to read about them somewhere.&lt;/p&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-06-24T00:27:42.257" CommentCount="0" />
  <row Id="180" PostTypeId="2" ParentId="176" CreationDate="2015-06-24T00:40:53.950" Score="18" Body="&lt;p&gt;GPL licenses are legal documents, so you modify them or ignore their terms at your own risk!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;GNU.org has an &lt;a href=&quot;http://www.gnu.org/licenses/gpl-faq.en.html#WhyMustIInclude&quot;&gt;FAQ addressing this&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Why does the GPL require including a copy of the GPL with every copy of the program? (#WhyMustIInclude)&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Including a copy of the license with the work is vital so that everyone who gets a copy of the program can know what his rights are.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;It might be tempting to include a URL that refers to the license, instead of the license itself. But you cannot be sure that the URL will still be valid, five years or ten years from now. Twenty years from now, URLs as we know them today may no longer exist.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The only way to make sure that people who have copies of the program will continue to be able to see the license, despite all the changes that will happen in the network, is to include a copy of the license in the program.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This does mean that, a sufficiently paranoid user will avoid your software because it does not include the full license, and they don't trust that whatever you linked to, or that when you mention &quot;GPL3&quot; it's a different license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;MIT, BSD licenses are also quite clear on this matter; you &lt;em&gt;must&lt;/em&gt; reproduce those licenses, otherwise you are not fully complying with the license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Just a note, not all licenses require reproducing the full text. Some like the Creative Commons licenses are ok with including a link. See some &lt;a href=&quot;https://wiki.creativecommons.org/wiki/Best_practices_for_attribution&quot;&gt;examples here&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-06-24T00:40:53.950" CommentCount="7" />
  <row Id="181" PostTypeId="2" ParentId="176" CreationDate="2015-06-24T00:41:14.667" Score="4" Body="&lt;p&gt;Yes. It is not fair to ask the user to search for the license terms and hoping he picked the right one, as he has to follow this license.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-24T00:41:14.667" CommentCount="0" />
  <row Id="182" PostTypeId="2" ParentId="142" CreationDate="2015-06-24T00:48:13.600" Score="6" Body="&lt;p&gt;If you mean computer hardware, then &lt;a href=&quot;http://opencores.com/&quot;&gt;yes, communities exist&lt;/a&gt;. The problem is that writing hardware is not nearly as intuitive as writing software, debugging is a much more involved process, and writing comprehensive test suites is far more important.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Essentially, the problem is that most of the people writing open source hardware have only a software background, and treat hardware the same way, despite the fact that the hardware paradigm is fundamentally different. They can even get away with this in simulation, because HDLs generally contain constructs that would never actually work or make sense in hardware, but which are necessary for simulation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, while the community exists, it is smaller and less reliable. Partly because it's slightly more expensive (because to test on hardware you need an oscope, or at least a logic analyzer), and partly because, in order for it to be at all useful, it must be very thoroughly tested, and written by someone with some formal training.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Although, really, expense is &lt;em&gt;not&lt;/em&gt; the primary issue. Because in a very real sense you don't need to actually produce hardware; you can just program an FPGA or CPLD and in the overwhelming majority of cases you don't need to actually test by fabbing an ASIC. You can get an FPGA + JTAG programmer for under $100.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In theory it could work, and in practice I'm sure there are some projects where it does work, but overall I wouldn't trust most open source hardware in stuff I write. I'd need to be sure the people writing it were actually qualified computer engineers. Because, otherwise, I might have a thing that simulates completely fine, but causes my FPGA to burst into flame as soon as it's programmed; in hardware it's not as easy as simply running untrusted code in a VM.&lt;/p&gt;&#xA;" OwnerUserId="148" LastEditorUserId="148" LastEditDate="2015-06-24T00:54:01.270" LastActivityDate="2015-06-24T00:54:01.270" CommentCount="1" />
  <row Id="183" PostTypeId="1" AcceptedAnswerId="185" CreationDate="2015-06-24T01:13:10.853" Score="11" ViewCount="207" Body="&lt;p&gt;Take this into consideration:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I post one of my software projects that I had written for school, and give it an open source license, and place it online for people to evaluate and contribute their thoughts. I do this in hopes that other more experienced developers will be able to optimize or add new features to my already existing program.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But how would I prevent malicious people from tampering with that code? If my project is the victim of multiple, continuous attacks and vandalism, it wouldn't be efficient on my part to &quot;rollback&quot; to earlier revisions. Not only would this be an annoyance, but it could make the project look less attractive to prospective contributors.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Can I restrict or &quot;approve&quot; contributors to help me improve the project? I'm nervous that doing so would violate the Open Source concept. As seen on the Open Source &lt;a href=&quot;http://opensource.org/faq#restrict&quot;&gt;page&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Can I stop &quot;evil people&quot; from using my program?&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;No. The Open Source Definition specifies that Open Source licenses may not discriminate against persons or groups. Giving everyone freedom means giving evil people freedom, too. Fortunately, there are other laws that constrain the behavior of evil people.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Does this apply only to the audiences of my program, or would it apply to people who try to contribute to it as well?&lt;/p&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-07-02T14:33:23.430" Title="Can I select who can contribute to my Open Source Project?" Tags="&lt;contributor&gt;&lt;community&gt;&lt;malicious-uses&gt;" AnswerCount="5" CommentCount="5" />
  <row Id="184" PostTypeId="1" AcceptedAnswerId="190" CreationDate="2015-06-24T01:17:39.390" Score="11" ViewCount="71" Body="&lt;p&gt;Many software developing companies use open source tools or open source libraries. Sometimes they even tweak this software for their needs. So, one might argue that this tweaks should be given back to the OSS-project. That means, contributions of that company will become public.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But what are the advantages for a company doing so? Are there any at all? Are there disadvantages?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-06T15:00:14.970" LastActivityDate="2015-07-06T15:00:14.970" Title="What are the upsides for a company to contribute to an open-source software they use?" Tags="&lt;contributor&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="1" />
  <row Id="185" PostTypeId="2" ParentId="183" CreationDate="2015-06-24T01:17:52.100" Score="18" Body="&lt;p&gt;You, as the maintainer, can decide what you merge into your project. That doesn't prevent others from forking and maintaining their own version of the code though.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you post the code to some place like GitHub or other code sharing service, you are given a set of permissions that determines who can merge changes to your master branch. It is not something that is open to the world. Others can submit pull requests (in the case of GitHub), but you are free to reject them as you see fit.&lt;/p&gt;&#xA;" OwnerUserId="22" LastActivityDate="2015-06-24T01:17:52.100" CommentCount="3" />
  <row Id="186" PostTypeId="2" ParentId="183" CreationDate="2015-06-24T01:21:48.437" Score="12" Body="&lt;p&gt;I think you're mixing up two concepts here. The quote you provided is for people using your software. If you want your software to be open source, you have to accept that everyone is permitted to use it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Accepting contributions is a completely different cup of tea. As a maintainer you can accept or reject whichever patch you like. Look how Linus does that constantly with Linux.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Still, other people get a right to fork (open source per definition always allows that). So you can't forbid them to release their patches to your software, but you can reject them for your version of the program.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="69" LastEditDate="2015-07-02T14:33:23.430" LastActivityDate="2015-07-02T14:33:23.430" CommentCount="0" />
  <row Id="187" PostTypeId="2" ParentId="184" CreationDate="2015-06-24T01:30:03.813" Score="6" Body="&lt;p&gt;One major advantage is that by sending changes upstream, a company no longer has to maintain their set of downstream changes.  Suppose I add a compression feature to Gizmo 1.0.  If I don't share my patch, when version 1.1 is released, I have to port my patch to the new version.  And every subsequent version.  By contributing upstream, the changes are likely  to be merged (assuming they align with the project's goals), and you save yourself the effort of all the patching.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;An indirect advantage is that by contributing to a project, you are influencing it's future path.  You might be simply providing a capability that someone else also wants, or you may be opening up the project to a whole new use - either way, you are now influencing the path taken.&lt;/p&gt;&#xA;" OwnerUserId="197" LastActivityDate="2015-06-24T01:30:03.813" CommentCount="0" />
  <row Id="188" PostTypeId="2" ParentId="183" CreationDate="2015-06-24T01:37:38.007" Score="5" Body="&lt;p&gt;Carefully selecting which changes are accepted, and which are rejected is one way that you control the direction of your project.  Accept all submissions, and you'll end up with a mess, or at the very least, something you didn't envision.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Of course, if you document the vision and goals of the project, it becomes easier for you to select submissions, and it becomes easier for contributors to submit changes that align with your goals.&lt;/p&gt;&#xA;" OwnerUserId="197" LastActivityDate="2015-06-24T01:37:38.007" CommentCount="0" />
  <row Id="189" PostTypeId="2" ParentId="51" CreationDate="2015-06-24T01:46:29.813" Score="0" Body="&lt;p&gt;You can build a website that hosts your project's online documentation, latest news, etc.  You can then track the &lt;em&gt;relative&lt;/em&gt; popularity over time, based on traffic.  You can use this to indicate increasing popularity, or trends for certain OSes or browsers - typical web traffic analysis.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But regardless of any specific download-tracking mechanism, you are treading on your user's privacy, and that's not likely to be well received in the open source community.&lt;/p&gt;&#xA;" OwnerUserId="197" LastActivityDate="2015-06-24T01:46:29.813" CommentCount="0" />
  <row Id="190" PostTypeId="2" ParentId="184" CreationDate="2015-06-24T01:50:00.817" Score="9" Body="&lt;p&gt;&lt;strong&gt;Advantages&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Reduced maintenance.&lt;/strong&gt; If a company uses custom patches, every time upstream changes, the company has to re-apply those patches when they update their custom version. This gets worse when upstream undergoes major refactors or changes in interfaces.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Publicity.&lt;/strong&gt; By having its name included in the project's contributor list, other users become aware of the company. This could mean potential hires who are interested in the project, but through the project apply for employment. There's also a lot of goodwill associated with open source software; Microsoft for example earned lots of kudos when it began contributing significant code to prominent open source software like Linux.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Employee perks.&lt;/strong&gt; Most software developers at companies are work-for-hire; every line of code they write is owned by the company. This means that when they go elsewhere, they cannot easily show the work they've done. But open source contributions are open for all, so they can point to specific projects and commits, improving their hireability and their market value. Also, some employees simply like contributing to open source projects for its own sake.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Competition against a market leader.&lt;/strong&gt; A major reason why lots of companies work on open source software is they can pool resources on an open project that is in competition with a dominant, closed rival. Open source allows them to share the workload. For example, OpenStack is a collaboration by hundreds of companies to compete against market leaders like Amazon.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Disadvantages&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Competitive advantage.&lt;/strong&gt; If a certain type of software is a company's competitive advantage, it is exceedingly unlikely that they'll share it, because obviously, their competitors can then take advantage of it. For this reason, most if not all corporate open source contributions are in software that is not part of their core business. Google for example does a lot of open source work with Android and WebKit, but that's because free and better mobile platforms and browsers helps point people to their bread-and-butter: viewing ads. There is almost no way that Google will open their search engine or ad serving software, without a major change in business models.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Risk of losing intellectual property.&lt;/strong&gt; Even if a piece of software isn't a company's competitive advantage, critical pieces of code could accidentally sneak into the open. A careless developer could accidentally contribute an advanced algorithm, for example. Because of this, most companies run their open contributions through their legal department first. Most don't bother with this because it's more trouble than it's worth.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Risk of legal trouble.&lt;/strong&gt; Not all code a company uses is fully owned by the company; there could be third party licensed code or code under NDAs and so forth. Accidentally opening these opens the company to legal problems. Again, most companies run through legal, and again most don't bother with the trouble.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-06-24T01:50:00.817" CommentCount="3" />
  <row Id="191" PostTypeId="5" CreationDate="2015-06-24T02:04:50.170" Score="0" Body="&lt;p&gt;The CC BY license is the most permissive of the Creative Commons family of licenses, with the simple requirement that any further modification or distribution of the licensed work credits the original author.&lt;/p&gt;&#xA;" OwnerUserId="-1" LastEditorUserId="98" LastEditDate="2015-08-15T21:58:47.330" LastActivityDate="2015-08-15T21:58:47.330" CommentCount="0" />
  <row Id="192" PostTypeId="4" CreationDate="2015-06-24T02:04:50.170" Score="0" Body="For questions relating to Creative Commons' Attribution (CC-BY) license." OwnerUserId="69" LastEditorUserId="98" LastEditDate="2015-08-15T21:58:47.330" LastActivityDate="2015-08-15T21:58:47.330" CommentCount="0" />
  <row Id="193" PostTypeId="5" CreationDate="2015-06-24T02:06:05.733" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-24T02:06:05.733" LastActivityDate="2015-06-24T02:06:05.733" CommentCount="0" />
  <row Id="194" PostTypeId="4" CreationDate="2015-06-24T02:06:05.733" Score="0" Body="The Apache 2.0 license is a license created by the Apache Software Foundation. Use this tag when the item in question relates to this license." OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-06-24T18:19:25.450" LastActivityDate="2015-06-24T18:19:25.450" CommentCount="0" />
  <row Id="195" PostTypeId="5" CreationDate="2015-06-24T02:07:12.017" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-24T02:07:12.017" LastActivityDate="2015-06-24T02:07:12.017" CommentCount="0" />
  <row Id="196" PostTypeId="4" CreationDate="2015-06-24T02:07:12.017" Score="0" Body="For questions about the no longer functioning hosting platform, Codehaus." OwnerUserId="69" LastEditorUserId="98" LastEditDate="2015-08-05T15:13:57.433" LastActivityDate="2015-08-05T15:13:57.433" CommentCount="0" />
  <row Id="197" PostTypeId="5" CreationDate="2015-06-24T02:08:59.377" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-24T02:08:59.377" LastActivityDate="2015-06-24T02:08:59.377" CommentCount="0" />
  <row Id="198" PostTypeId="4" CreationDate="2015-06-24T02:08:59.377" Score="0" Body="Copyleft licenses require future versions of the work to be published under a compatible license, ensuring the work will always be free/open" OwnerUserId="69" LastEditorUserId="190" LastEditDate="2015-06-30T11:33:59.440" LastActivityDate="2015-06-30T11:33:59.440" CommentCount="0" />
  <row Id="199" PostTypeId="5" CreationDate="2015-06-24T02:10:11.367" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-24T02:10:11.367" LastActivityDate="2015-06-24T02:10:11.367" CommentCount="0" />
  <row Id="200" PostTypeId="4" CreationDate="2015-06-24T02:10:11.367" Score="0" Body="The General Public License, offered by GNU. Use this tag if the question involves version 3 of the license." OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-06-24T18:19:18.810" LastActivityDate="2015-06-24T18:19:18.810" CommentCount="0" />
  <row Id="201" PostTypeId="2" ParentId="18" CreationDate="2015-06-24T02:10:43.477" Score="4" Body="&lt;p&gt;It sounds like you need to provide an outlet - some acceptable place - for questions to be asked.  That could be a mailing list, online group, IRC and so on.&lt;/p&gt;&#xA;" OwnerUserId="197" LastActivityDate="2015-06-24T02:10:43.477" CommentCount="3" />
  <row Id="202" PostTypeId="1" AcceptedAnswerId="203" CreationDate="2015-06-24T02:27:54.717" Score="24" ViewCount="214" Body="&lt;p&gt;Many licenses, such as Apache 2.0, have both a long and a short form. Typically, the long form is included in the repository as a single LICENSE file, and the short form is used in the actual source code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But, if you include the LICENSE file, is it actually necessary to include another copy (short or long) in every source file?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What about files which do not actually have a way to add comments (such as conformant JSON files)?&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="69" LastEditDate="2015-07-25T15:00:37.573" LastActivityDate="2015-07-25T15:00:37.573" Title="Should I include license text in a single file or all source files?" Tags="&lt;license-file&gt;&lt;license-notice&gt;&lt;apache-2.0&gt;" AnswerCount="3" CommentCount="5" FavoriteCount="4" />
  <row Id="203" PostTypeId="2" ParentId="202" CreationDate="2015-06-24T02:49:44.367" Score="15" Body="&lt;p&gt;For the Apache 2.0 License, there is both the legal code, and what you need to &quot;apply&quot; the license to the work in question.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Having a license file provides the legal code. That's great, but it doesn't tell me the specifics... does that license really apply here? When did the license take effect? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The Apache page goes on to instruct you how to place it in your work, that you need to place the information to &quot;apply&quot; the license, and continues providing details and even a template.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same &quot;printed page&quot; as the copyright notice for easier identification within third-party archives.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;For pages which don't have commenting support, I think it should be fine to even have the information in a basic &lt;code&gt;.txt&lt;/code&gt; file, as long as people know what it is. If it helps, give it a filename such as &lt;code&gt;json-license.txt&lt;/code&gt; It may help to have additional information in that file (e.g. Why the license... Probably not that but you get what I mean)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Ecelis also points out two links that provide some more information about where to place the licenses:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://www.gnu.org/licenses/gpl-howto.html&quot;&gt;How to use GNU Licenses for your own Software&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://opensource.org/faq#apply-license&quot;&gt;How do I apply [some open source license] to software I'm releasing?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-06-24T13:26:40.337" LastActivityDate="2015-06-24T13:26:40.337" CommentCount="2" />
  <row Id="204" PostTypeId="1" CreationDate="2015-06-24T04:22:57.787" Score="10" ViewCount="139" Body="&lt;p&gt;If I compose a piece of music using instruments and sound effects that I don't own the copyright to (but am licensed to use), can I release my composition under a free/open license that allows derivatives, without violating one of the two:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The free license that allows derivations, or&lt;/li&gt;&#xA;&lt;li&gt;My license to the instruments / sound effects?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;To elaborate: most closed music composition software provides collections of sound files for different instruments, called &lt;em&gt;sound banks&lt;/em&gt;, which they retain the copyright to. Under their user licenses, they often state that you are not allowed to redistribute those sound files, but it is implied that you own the copyright to any music that you compose &lt;em&gt;with&lt;/em&gt; those sound files. An example from &lt;a href=&quot;https://www.propellerheads.se/agreements&quot;&gt;Propellerhead&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The sound samples and musical examples connected to the Software may NOT be reformatted, mixed, filtered, re-synthesized, or otherwise edited or altered for use in any kind of commercial sampling product/package or software- this is strictly prohibited without the express written consent of Propellerhead Software.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;An example from &lt;a href=&quot;https://soundation.com/licensing-agreement&quot;&gt;Soundation&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The sounds can be used royalty free by the purchaser of the downloads in any context except:&lt;/p&gt;&#xA;  &#xA;  &lt;ol&gt;&#xA;  &lt;li&gt;&lt;p&gt;To make another sample/sound effect CD or database, even if the material has been manipulated.&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;p&gt;To upload the individual sounds to a sound database to be used by others&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;p&gt;Any sound file CD/database or multimedia sound library.&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;p&gt;Any multimedia or game product DVD/CD or web game that includes isloated sounds from PowerFX.&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;But here's the problem: free/open licenses allow derivation, so if I release under such a license, technically end users can take a portion of my music and redistribute it. For example, they can &lt;a href=&quot;https://en.wikipedia.org/wiki/Sampling_(music)&quot;&gt;sample&lt;/a&gt; it and release their own track with those samples.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Does this mean that they can sample isolated sounds, like drum beats, and release a drum beat pack? If yes doesn't this violate the sound license? If no doesn't this contradict the free license?&lt;/li&gt;&#xA;&lt;li&gt;Is this affected by how well I mix the sound effects and make it harder to extract the original sound effects? What if I make a piece of &quot;music&quot; that is solely comprised of isolated sounds?&lt;/li&gt;&#xA;&lt;li&gt;Do these licenses fundamentally conflict, i.e. am I forced to look for a license with a no-derivatives clause, or a free sound bank?&lt;/li&gt;&#xA;&lt;li&gt;Or, can I include a clause prohibiting extracting individual sounds from my music?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="175" LastEditorUserId="69" LastEditDate="2015-06-30T02:04:37.387" LastActivityDate="2015-06-30T02:04:37.387" Title="Can I open source my music which includes copyrighted sound effects?" Tags="&lt;licensing&gt;" AnswerCount="1" CommentCount="3" FavoriteCount="1" />
  <row Id="205" PostTypeId="2" ParentId="18" CreationDate="2015-06-24T04:38:04.833" Score="-1" Body="&lt;p&gt;Your real problem is that GitHub issues is a lightweight issue tracker that doesn't allow fine-grained access control, and it is being used as &lt;em&gt;both&lt;/em&gt; a public Q&amp;amp;A forum and a development issue tracker. Fundamentally, you need to &lt;em&gt;separate the two&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here are some options:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Use a &lt;em&gt;real&lt;/em&gt; issue tracker&lt;/strong&gt;. One that restricts public access, or has things like approval, selective notifications etc.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Use a separate, private repo for issues.&lt;/strong&gt; This repo only contains issues for your project and is accessible to the project collaborators only. If the public questions are still bothering you, you can then disable issues in the main project.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-06-24T04:38:04.833" CommentCount="1" />
  <row Id="206" PostTypeId="2" ParentId="204" CreationDate="2015-06-24T04:45:23.337" Score="5" Body="&lt;p&gt;As stated by the propellerhead license, you can't use any of the examples or sound samples included, those are aren't yours. But you can bring your own samples to create your music and distribute as you like.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the soundation's case, the music you create with those samples is your own, even if you redistribute it with a derivatives license, it will hardly be the isolated sounds for a library or collection, any derivative music would be based on your own creation which soundation allows.&lt;/p&gt;&#xA;" OwnerUserId="124" LastActivityDate="2015-06-24T04:45:23.337" CommentCount="2" />
  <row Id="207" PostTypeId="1" CreationDate="2015-06-24T05:03:15.077" Score="10" ViewCount="60" Body="&lt;p&gt;Correct me if I'm wrong but since the cryptographic algorithm is open source, doesn't it mean that everyone who can access the code would be able to crack it? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'm probably wrong since there are many successful open source algorithms but &lt;strong&gt;how&lt;/strong&gt; does this prevent attackers from cracking the algorithm? Could anyone go over this concept for me?&lt;/p&gt;&#xA;" OwnerUserId="212" LastActivityDate="2015-06-24T07:46:16.767" Title="How is open source encryption safe?" Tags="&lt;cryptography&gt;&lt;encryption&gt;" AnswerCount="4" CommentCount="1" FavoriteCount="2" />
  <row Id="208" PostTypeId="2" ParentId="207" CreationDate="2015-06-24T05:23:15.973" Score="8" Body="&lt;p&gt;Many encryption systems in the 20th century used to rely on &lt;a href=&quot;https://en.wikipedia.org/wiki/Security_through_obscurity&quot;&gt;obscurity&lt;/a&gt; of the algorithm. This was a bad approach, as you have to keep the whole program secret, which is technically impossible if you want to distribute the program. If someone obtains a copy of the program, then you have to rewrite the program.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In 21st century encryption, &lt;a href=&quot;https://en.wikipedia.org/wiki/Kerckhoffs%27s_principle&quot;&gt;the only secret is your password&lt;/a&gt;. Even non-open source programs use algorithms that are public. The strength of encryption lies in the ability to protect data &lt;strong&gt;using only your password&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Cryptographer &lt;a href=&quot;https://en.wikipedia.org/wiki/Bruce_Schneier&quot;&gt;Bruce Schneier&lt;/a&gt; explains:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Every secret creates a potential failure point. Secrecy, in other words, is a prime cause of brittleness—and therefore something likely to make a system prone to catastrophic collapse. Conversely, openness provides ductility.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Open source encryption is thus often &lt;strong&gt;more secure&lt;/strong&gt; than non-open source encryption.&lt;/p&gt;&#xA;" OwnerUserId="199" LastEditorUserId="199" LastEditDate="2015-06-24T06:02:48.947" LastActivityDate="2015-06-24T06:02:48.947" CommentCount="1" />
  <row Id="209" PostTypeId="2" ParentId="207" CreationDate="2015-06-24T06:46:46.410" Score="0" Body="&lt;p&gt;It's not only about OSS crypto is safe than non-opensource crypto, it's about the algorithm you are using. It's very easy to build up an encryption algorithm at your own and it's very easy to fail complete while doing it. A good example is Mifare Classic. So using a public and proofed algorithm can save you some headage. Good algorithm splitting up the logic and the key for it, so you don't have to worry about. Let's make an example: Everybody is knowing how a lock is working, but without the correct key you most likely won't be able to enter. It's the same on good crypto. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, it's also quiet easy to implement a good standard in a very poor way or with failures. This is what we have seen recently with openssl. It might be a simple failure or while acting in bad faith. Here opensource can help to find bugs and fix them faster than hiding your code. &lt;/p&gt;&#xA;" OwnerUserId="132" LastActivityDate="2015-06-24T06:46:46.410" CommentCount="0" />
  <row Id="210" PostTypeId="2" ParentId="88" CreationDate="2015-06-24T07:16:09.770" Score="10" Body="&lt;p&gt;Whether or not you can make money with an open source project, depends on many things. Based on experience, I see three factors that are important:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Which license did you choose? Take a look at the schema in &lt;a href=&quot;http://opensource.stackexchange.com/a/3/27&quot;&gt;this answer&lt;/a&gt; and you'll see that on one end, you have &lt;em&gt;permissive licenses&lt;/em&gt; and on the other hand you have licenses with a &lt;em&gt;strong copyleft&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Which type of product are you offering? There's a huge difference between offering a tool for consumers (something they can just download, run and use) and offering a library in a B2B context, for instance: a piece of software that parses XML, but that doesn't work unless you write some code around it.&lt;/li&gt;&#xA;&lt;li&gt;What is your business? Are you in the business of &lt;em&gt;selling software&lt;/em&gt; (e.g. you sell a game that can be downloaded and that can be played off line) or are you in the business of &lt;em&gt;selling a service&lt;/em&gt; (e.g. a game that can't be downloaded and that is played on line).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;When to use a license with strong copyleft?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Although it was different in the past, I see that small &quot;developer-driven&quot; companies, wanting to create a &lt;em&gt;software&lt;/em&gt; business in a B2B context, often benefit from a license such as the AGPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Warning:&lt;/em&gt; the original authors of the AGPL consider what I am going to write next as &lt;em&gt;nefarious use&lt;/em&gt; of the AGPL, but this is the way companies such as &lt;a href=&quot;http://blog.mongodb.org/post/103832439/the-agpl&quot;&gt;MongoDB&lt;/a&gt;, &lt;a href=&quot;http://developer.sugarcrm.com/tag/agpl/&quot;&gt;SugarCRM&lt;/a&gt;, and others make money.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I have my open source project of my own, and in the past 15 years I have tried making money in the following ways:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Donations&lt;/strong&gt;: In the early years, users of my software would buy my kids Lego. I would receive books for my birth day. Somebody even sent me cookies. While this was certainly appreciated. That doesn't make a business. Also: I live in Belgium: when somebody sent me a DVD from the US, (1) I had to pay taxes on it (customs could be excessive), (2) I couldn't play it because the DVD could not be played in my region (unless I fiddled with my DVD player).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Making money with ads&lt;/strong&gt;: I was an early adopter of Google AdSense. In 2004, I made $8,900 with ads, in 2005 $14,500, but the revenue dropped to $6,200 in 2006, $2,350 in 2007 and $1,900,... I had more content, more clicks, but less revenue. I noticed two things: (1) most of the people advertising on my site, were competitors, (2) if you want to make money with ads, you need to specialize in making money with ads. As a result, I removed all ads. Ads as a business model are dead. See for instance what &lt;a href=&quot;http://www.codehaus.org/&quot;&gt;Codehaus&lt;/a&gt; wrote when they shut down their business: the hosting cost was exceeding the cost of the revenue from ads. You can also see that &lt;a href=&quot;http://arstechnica.com/information-technology/2015/05/sourceforge-grabs-gimp-for-windows-account-wraps-installer-in-bundle-pushing-adware/&quot;&gt;SourceForge has taken the wrong path&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Writing documentation:&lt;/strong&gt; I wrote two books for Manning Publications about my project. Manning sold about 11,600 copies of the first edition and almost 9,200 of the second edition. Illegal copies of the book were already available before FedEx had the chance to deliver me my first paper copies. As an author, I received 10% on the profits. I made approximately $33K with the first book and approximately $30K with the second book. I used this money as seed funding for my company. Writing documentation is hard work and when you compare the time you spend on writing such a book versus the money you make selling the book, you soon understand that this is not a sustainable source of money.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Selling support and maintenance:&lt;/strong&gt; this works, but it's hard. It's not something you can do on your own, because it's not scalable: the more customers you have, the more employees you need to answer support tickets. Also: you face competition of professional players who offer support for a stack of open source products. By supporting more than one product, such a company can afford hiring more employees. In my case: I couldn't compete with &lt;a href=&quot;http://www.openlogic.com/&quot;&gt;OpenLogic&lt;/a&gt; when I first started doing business with my product. I had to find a different business model.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Offering professional services:&lt;/strong&gt; you offer the software for free, but you sell professional services to install the software and to integrate your product into a tailor-made project. This is even harder than offering support, because you have to compete against all the large software integrators who have more money, more employees, more everything than you. Your business will even be less scalable than support and worse: all the time you spend on projects for customers is time you don't spend on further developing your product. The &lt;a href=&quot;http://www.openhealthnews.com/articles/2014/heartbleed-apache-license-business-model-failure&quot;&gt;Heartbleed disaster&lt;/a&gt; is an example of how that can go wrong.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;If you are a single developer looking to start a business, making money with open source &lt;em&gt;software&lt;/em&gt;, your best chance at being successful, is by offering the software under a dual license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Which license? Well, you have to avoid &lt;a href=&quot;http://programmers.stackexchange.com/questions/253925/how-to-avoid-being-forked-into-oblivion-by-a-more-powerful-contributor&quot;&gt;Being forked into oblivion by a more powerful contributor&lt;/a&gt;, so only a license with a strong copyleft makes sense. You'll understand what this means when you read the &lt;a href=&quot;http://zguide.zeromq.org/page:all#header-136&quot;&gt;Eat me&lt;/a&gt; section of the &lt;a href=&quot;http://zguide.zeromq.org/page:all#header-136&quot;&gt;ZeroMQ guide&lt;/a&gt;. I quote:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;In the software industry, there are friends, foes, and food. BSD makes most people see us as lunch. Closed source makes most people see us as enemies. GPL, however, makes most people our allies.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;How does one make money with a copyleft license? That's explained in &lt;a href=&quot;https://youtu.be/QHF3xcWnSD4&quot;&gt;this video&lt;/a&gt;. You offer the software as free, open source software free of charge for every one who obeys the rules of the license. Companies who don't want to follow those rules, can still use the software, provided that they buy the software under another, commercial license. This model is called dual licensing. The weaker the copyleft of the license, the harder it will be to sell your product.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;When to use a license with a permissive license?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you are not a developer and you want to start a business offering a service. Or if you work a large corporation (say Google, Amazon,...), then you probably won't like what I wrote in the previous section.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You want to use software and do whatever you want with it. You don't like GPL-style licenses, because those limit what you can do with the software. You may even have to &lt;em&gt;pay&lt;/em&gt; for the software you're using! The horror!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In this case, it is in your best interest to brainwash developers into thinking that open source software should be free as in free beer, that the GPL is bad and that open source software should not be offered commercially. You'll sponsor the most radical zealots that are popular among developers looking for a role model. As a result, these developers will start producing software under a permissive license that you can use any way you want to.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Your task will be to make choices: to separate the wheat from the chaff. It is not your business to sell software:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;You are offering software as a service (e.g. Google)&lt;/li&gt;&#xA;&lt;li&gt;You have a totally different business that relies on software (e.g. Amazon)&lt;/li&gt;&#xA;&lt;li&gt;You sell closed source, proprietary products and you make a lot of money in professional services (e.g. HP and IBM)&lt;/li&gt;&#xA;&lt;li&gt;Your main business is ads; your users are your product (e.g. Facebook)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Once you are successful enough in one of the above, you can afford giving away your software for free (as in free beer). As you have gained a monopoly, it doesn't matter if competitors can also use your software. If they are peers, they may improve the code and redistribute it, in which case you benefit too. If they are contenders just starting a new business, you either crush them (because your brand is king and your marketing budget is bigger) or buy them (and possibly kill them afterwards).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is a great way to make money with open source software, but I see some disadvantages. The moment a large corporation decides that the value created by a project doesn't justify the investment, the &lt;em&gt;&quot;charity&quot;&lt;/em&gt; will stop. Oracle &lt;a href=&quot;http://www.tomitribe.com/blog/2013/11/feed-the-fish/&quot;&gt;dropped GlassFish&lt;/a&gt;, IBM &lt;a href=&quot;http://www-01.ibm.com/common/ssi/cgi-bin/ssialias?infotype=AN&amp;amp;subtype=CA&amp;amp;htmlfid=897/ENUS913-081&amp;amp;appname=USN&quot;&gt;backed away from Geronimo&lt;/a&gt;, Pivotal &lt;a href=&quot;http://java.dzone.com/articles/total-bummer-pivotal-drops&quot;&gt;left Groovy&lt;/a&gt;,... Only when disaster strikes (like was the case with Heartbleed), these companies suddenly start raising money to &quot;save the developers.&quot;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That's not a sustainable model for open source, is it?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I don't know if there are any numbers about this, but it wouldn't surprise me if you'd see that most of the software distributed under a permissive license is written by &lt;em&gt;employees&lt;/em&gt; (people working for a large corporation), whereas most of the software distributed under a copyleft license are &lt;em&gt;entrepreneurs&lt;/em&gt; (people owning or working for a small to medium-sized company).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Has it always been this way?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;No, free and open source software has undergone an enormous change. Large companies used to distribute FUD about software that was offered &lt;em&gt;for free&lt;/em&gt;. Often these are the same companies who are now claiming that open source software should be free as in free beer. If you want to know how it was in the early days, I recommend watching &lt;a href=&quot;https://www.youtube.com/watch?v=fxjElWL8igo&quot;&gt;OS Revolution&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;How am I making money today?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you want to read more about my history in open source, I recommend reading the &lt;a href=&quot;http://itextpdf.com/press/one-million-by-one-million-interview&quot;&gt;1M/1M blog by Sramana Mitra&lt;/a&gt;. I founded my first open source company in 2008, 8 years after the first open source release of my product. In 2014, the group was profitable with a revenue of 5 million euro and an EBITDA of 43%. The company ranked 28th place in Deloitte's Technology Fast 500 in the EMEA region and it won first place as the fastest growing technology company in Belgium in the period 2009-2014.&lt;/p&gt;&#xA;" OwnerUserId="27" LastEditorUserId="27" LastEditDate="2015-06-24T07:42:00.630" LastActivityDate="2015-06-24T07:42:00.630" CommentCount="0" />
  <row Id="211" PostTypeId="2" ParentId="207" CreationDate="2015-06-24T07:22:06.387" Score="1" Body="&lt;p&gt;Even if your algorithm is in the open, each user keeps a secret: the password (or other secret that is used as key to en- and decryption). You want that the algorithm works safe, even if it is known. Because it is always possible through decompiling to get the algorithm.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Why is the algorithm safe even if it is known? Because it works with mathematics, that need to much time decrypting it without the personal secret it was encrypted with. How that works in detail is out of the scope here, you should ask that on crypto.se or security.se.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So having the implementation (and thus the algorithm) out in the open is no downside. But it is even an upside. Many algorithms people came up with over time are flawed or easy to break with current technology (Cesar-cipher for example). If you use that even closed source, it is easy to detect it and break it. Even more: if you use a well-known and good algorithm, there are many points at which you can fail at implementation and make the whole software unsecure. Look at the details of the &lt;a href=&quot;https://lists.debian.org/debian-security-announce/2008/msg00152.html&quot; rel=&quot;nofollow&quot;&gt;Debian-OpenSSL-bug&lt;/a&gt; for an example. So, having your code in the open allows experts to analyze it, and they usually make it public if they find bugs in the implementation. If they can't access the code, they cannot do that. So I would trust an Open-Source crypto that has no known bugs or is broadly criticized more than an Closed source program that might or might not have a good implementation. Naturally you should avoid both open source and closed source crypto with known problems.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-24T07:46:16.767" LastActivityDate="2015-06-24T07:46:16.767" CommentCount="0" />
  <row Id="212" PostTypeId="2" ParentId="207" CreationDate="2015-06-24T07:22:12.993" Score="2" Body="&lt;p&gt;The reason open cryptography is considered safer than its closed alternatives is because open cryptography is open to reviews and auditing from security experts all over the world.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Closed algorithms are subject to internal company reviews, and paid experts reviews only. Which, by definition, is a small set than &quot;security experts all over the world&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The old notion was that the more secrecy you have in your application, the safer it is. &quot;If an attacker can't see my code, he won't be able to attack me&quot; or &quot;If an attacker doesn't know which algorithms I'm using, he won't be able to brute force against me&quot;. Both of these have been proven wrong with timing attacks and rainbow tables.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A good algorithm is &lt;strong&gt;public and open&lt;/strong&gt;, the only secret thing is the  &lt;strong&gt;private key&lt;/strong&gt; or the &lt;strong&gt;shared secret&lt;/strong&gt; (like a password).&lt;/p&gt;&#xA;" OwnerUserId="40" LastActivityDate="2015-06-24T07:22:12.993" CommentCount="0" />
  <row Id="213" PostTypeId="1" AcceptedAnswerId="214" CreationDate="2015-06-24T07:27:02.043" Score="7" ViewCount="218" Body="&lt;p&gt;I know GPL can be used as an open-source license for source code etc. But what if the source code released has very few lines and has a lot of probability that it might also have been written already or someone might write an almost identical code without being aware of the original code?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A code like Hello World for example&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;&#xA;&#xA;using namespace std;&#xA;&#xA;int main(){&#xA;    cout &amp;lt;&amp;lt; &quot;Hello World, with a smile :-)&quot; &amp;lt;&amp;lt; endl;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;And furthermore, what if he releases the code under some other license, say the BSD license?&lt;/p&gt;&#xA;" OwnerUserId="228" LastEditorUserId="98" LastEditDate="2015-06-24T17:23:55.260" LastActivityDate="2015-06-24T21:06:42.253" Title="What happens if very common code is released under GPL?" Tags="&lt;licensing&gt;&lt;gpl&gt;" AnswerCount="2" CommentCount="0" />
  <row Id="214" PostTypeId="2" ParentId="213" CreationDate="2015-06-24T07:33:48.427" Score="7" Body="&lt;p&gt;German law has something named 'Schöpfungshöhe', which Wikipedia refers to as '&lt;a href=&quot;https://en.wikipedia.org/wiki/Threshold_of_originality&quot; rel=&quot;nofollow&quot;&gt;Threshold of originality&lt;/a&gt;'. If no sufficient level of originality or effort is reached for the works, it cannot be copyrighted. That means, everyone can probably implement a copy-command, even if it will look pretty similar as the underlying mechanic is simple enough. Still, you shouldn't copy such lines directly but implement it yourself. But coming up with the same solution for similar problems is somewhat expected. When to draw the line? That's up for the courts in cases of disagreement.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note: As I wrote I know this concept for German law, and Wikipedia indicates Anglo-American law also has this concept. But I don't know to which other jurisdictions this concept applies.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="98" LastEditDate="2015-06-24T21:06:42.253" LastActivityDate="2015-06-24T21:06:42.253" CommentCount="1" />
  <row Id="215" PostTypeId="1" AcceptedAnswerId="216" CreationDate="2015-06-24T07:38:48.620" Score="3" ViewCount="36" Body="&lt;p&gt;I really don't know much about licensing. All I know is there are a hell of a lot of licenses out there.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I suppose there are so many, because each one exists for a specific use.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is there a list of open source licenses with its corresponding usages available?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To be specific, I'm looking for an open source license for a mobile app. I'm pretty sure I'll have to adapt to the licenses of the framework(s) I be potentially using.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Please let me know, if this still is too broad.&lt;/p&gt;&#xA;" OwnerUserId="226" LastEditorUserId="69" LastEditDate="2015-06-30T02:05:18.553" LastActivityDate="2015-06-30T02:05:18.553" Title="What licenses can be used for open source projects?" Tags="&lt;licensing&gt;&lt;software&gt;" AnswerCount="2" CommentCount="2" ClosedDate="2015-06-24T08:31:48.357" />
  <row Id="216" PostTypeId="2" ParentId="215" CreationDate="2015-06-24T07:40:35.480" Score="2" Body="&lt;p&gt;A basic list of licenses can be found here: &lt;a href=&quot;http://opensource.org/licenses&quot; rel=&quot;nofollow&quot;&gt;http://opensource.org/licenses&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The site &lt;a href=&quot;http://choosealicense.com/&quot; rel=&quot;nofollow&quot;&gt;Choose a license&lt;/a&gt; is designed to help you pick a license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Generally: most modern licences (look at the popular licenses at opensource.org) are good for most software. But if you use libraries or frameworks by others, the license of these may have influence on the licenses you can choose. for instance the &lt;a href=&quot;https://www.gnu.org/licenses/gpl.html&quot; rel=&quot;nofollow&quot;&gt;GNU GPL (GNU General Public License)&lt;/a&gt; demands, that every derivate code (and that includes code linked if it is a library) to be put under the same license. To know in detail we have to know the libraries/frameworks in question.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So your first step should be to research in which way the stuff you use restricts you on the choice of license. If you are clear about that, you have basically to decide, if you want a permissive license, or one that demands derivates to be open source again (like before mentioned GPL).&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorDisplayName="user114" LastEditDate="2015-06-24T08:08:17.550" LastActivityDate="2015-06-24T08:08:17.550" CommentCount="0" />
  <row Id="217" PostTypeId="1" AcceptedAnswerId="582" CreationDate="2015-06-24T07:46:01.010" Score="8" ViewCount="51" Body="&lt;p&gt;There are many articles out there which cover the topic in length and breadth but so far I haven't found a nice concise answer to the question. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;What are the most important differences between the BSD and MIT license and in what way do their intended use specifically differ?&lt;/p&gt;&#xA;" OwnerUserId="21" LastEditorUserId="168" LastEditDate="2015-06-27T14:23:24.967" LastActivityDate="2015-06-28T14:05:50.333" Title="What are the essential differences between BSD and MIT licences?" Tags="&lt;licensing&gt;&lt;bsd&gt;&lt;mit&gt;" AnswerCount="1" CommentCount="2" FavoriteCount="1" />
  <row Id="218" PostTypeId="2" ParentId="215" CreationDate="2015-06-24T07:47:20.790" Score="2" Body="&lt;p&gt;Any license approved by the Open Source Initiative is technically an open source license. They have a list on their website, at &lt;a href=&quot;http://opensource.org/licenses&quot; rel=&quot;nofollow&quot;&gt;http://opensource.org/licenses&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Picking a license &lt;em&gt;is&lt;/em&gt; difficult. Generally, you need to look at the following things:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;licenses of code you've used from other places (some licenses require you to use the same license)&lt;/li&gt;&#xA;&lt;li&gt;what you want other people to be able to do with your code&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;The more you want people to be able to do with your stuff, the more permissive your license needs to be. Apache and public domain are permissive; GPL is more restrictive.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-24T07:47:20.790" CommentCount="0" />
  <row Id="220" PostTypeId="2" ParentId="202" CreationDate="2015-06-24T07:49:40.680" Score="2" Body="&lt;p&gt;It is recommended in many places, including by the license writers, to include the license header as well as the license file. Some reasons for this are:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;it clearly demonstrates what the license applies to&lt;/li&gt;&#xA;&lt;li&gt;it points to the full license&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;The license file itself can then contain solely the license, without having to list everything it applies to.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-24T07:49:40.680" CommentCount="0" />
  <row Id="221" PostTypeId="1" AcceptedAnswerId="222" CreationDate="2015-06-24T07:52:55.630" Score="16" ViewCount="204" Body="&lt;p&gt;If I have put my code in one of the online repositories and have made it public but haven't licensed it... (to which the policy is that you retain the copyright). &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is it enough to just commit a licence text file along with the license header in every source file, in order to &quot;license&quot; the project? Or do I have to create a new project which has those from the very beginning, in which case what should I do with the old one?&lt;/p&gt;&#xA;" OwnerUserId="21" LastEditorUserId="55" LastEditDate="2015-06-30T12:36:38.373" LastActivityDate="2015-06-30T12:36:38.373" Title="Can I license a project which I have already released without a license?" Tags="&lt;relicensing&gt;&lt;unlicensed-code&gt;" AnswerCount="2" CommentCount="4" FavoriteCount="1" />
  <row Id="222" PostTypeId="2" ParentId="221" CreationDate="2015-06-24T07:57:04.123" Score="19" Body="&lt;p&gt;As long as you are the only contributor to a codebase, you can switch the license as you like. So yes, you can change the license, as long as you didn't use code of others. Check the answers to &lt;a href=&quot;http://opensource.stackexchange.com/q/33/55&quot;&gt;this question&lt;/a&gt; about relicensing, if you want to know under which circumstances you can change the license. Basically the same applies here, as you practically you change from an implicit copyright (license without giving any permissions) to an explicit license.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-24T08:14:47.427" LastActivityDate="2015-06-24T08:14:47.427" CommentCount="3" />
  <row Id="223" PostTypeId="1" CreationDate="2015-06-24T08:03:52.053" Score="6" ViewCount="42" Body="&lt;p&gt;I have some old projects that I personally consider close to worthless at this stage, if there's any user-base they are likely to have their own forks and while there's some nifty tricks in them the majority of the project is unsuitable for learning.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I've no longer got any intention of continuing working on these projects and I've got my own archive of them, so I'm wondering, for the sake of the community, what should I do with them?&lt;/p&gt;&#xA;" OwnerUserId="231" LastEditorUserId="231" LastEditDate="2015-06-24T08:11:30.877" LastActivityDate="2015-06-24T08:52:08.320" Title="Should I archive/delete old projects of questionable quality" Tags="&lt;project-management&gt;" AnswerCount="3" CommentCount="0" ClosedDate="2015-06-24T11:36:29.687" />
  <row Id="224" PostTypeId="2" ParentId="223" CreationDate="2015-06-24T08:06:29.127" Score="0" Body="&lt;p&gt;Basically it is up to you. I would probably make an archive and offer an download with the source for anyone that might be interested but do nothing else. You should clearly note, that you don't support this anymore.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-24T08:06:29.127" CommentCount="0" />
  <row Id="225" PostTypeId="2" ParentId="223" CreationDate="2015-06-24T08:06:35.950" Score="1" Body="&lt;p&gt;There is no clear answer. Deleting on the internet is not making a huge sense, as it's nearly unlimited. However, you should consider adding a &quot;out of maintenace, do not use&quot; node. &lt;/p&gt;&#xA;" OwnerUserId="132" LastActivityDate="2015-06-24T08:06:35.950" CommentCount="0" />
  <row Id="226" PostTypeId="1" CreationDate="2015-06-24T08:18:01.257" Score="16" ViewCount="235" Body="&lt;p&gt;I have found on StackOverflow a 10-lines block of code that does exactly what I want.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is no license information in the post nor on the answerer's profile page, so the CC BY-SA 3.0 license of StackOverflow applies.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To separate concerns, let's suppose the answerer has written the code by themselves, not copy-pasted from somewhere else.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;QUESTION:&lt;/strong&gt; Can I copy/paste this snippet into my GNU-GPLv3-licensed project?&lt;/p&gt;&#xA;" OwnerUserId="199" LastEditorUserId="190" LastEditDate="2015-06-30T10:21:37.727" LastActivityDate="2015-07-07T09:09:51.547" Title="Can I copy-paste a snippet from StackOverflow into my GNU-GPL project?" Tags="&lt;license-compatibility&gt;&lt;gpl-3&gt;&lt;cc-by-sa&gt;" AnswerCount="5" CommentCount="0" FavoriteCount="1" />
  <row Id="228" PostTypeId="2" ParentId="223" CreationDate="2015-06-24T08:24:34.910" Score="4" Body="&lt;p&gt;If you remove those projects: fine, that's your decision.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you don't remove them: make sure you mark them in the sense that you add a visible note saying &quot;THIS PROJECT IS NO LONGER SUPPORTED&quot;, so that a visitor who stumbles upon your code knows that he's spending time on a dead project when he decides to use your code (he can have very good reasons to do so, for instance if he wants to revive the project).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Not removing your code can make sense if you ever intend to revisit your project. You never know what happens with your own archives (crashed disk drives, DVDs that are no longer legible,...) Keeping the code where it is now, can make sense.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Not removing your code can result in you being contacted about that code. For instance: I once made the mistake to add my phone number on a tutorial page (which was very stupid of me). Years after the project was discontinued, people still called me for support. If you live in Europe and people call you from the US during their business hours, this is a pain. Changing your phone number is the only option you have in that case. The same goes for mail addresses: make sure that you remove your priority mail address because people are going to contact you when they think they need your code, when they've tried it and when it doesn't work for them.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Finally: the internet never forgets. Even if you remove your project, there is a chance that other copies of your code are still out there somewhere. Again: I once left my phone number on a tutorial page, and even after I removed that page, people still called me because the page was copied on another site.&lt;/p&gt;&#xA;" OwnerUserId="27" LastEditorUserId="27" LastEditDate="2015-06-24T08:52:08.320" LastActivityDate="2015-06-24T08:52:08.320" CommentCount="0" />
  <row Id="229" PostTypeId="2" ParentId="226" CreationDate="2015-06-24T08:25:02.297" Score="13" Body="&lt;p&gt;Stack Overflow contributions (and all of Stack Exchange's too) are licensed under &lt;strong&gt;&lt;a href=&quot;https://creativecommons.org/licenses/by-sa/3.0/&quot;&gt;CC-BY-SA 3.0&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That basically means that &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;h2&gt;You are free to&lt;/h2&gt;&#xA;  &#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;Share — copy and redistribute the material in any medium or format&lt;/li&gt;&#xA;  &lt;li&gt;Adapt — remix, transform, and build upon the material for any purpose, even commercially. The licensor cannot revoke these freedoms&#xA;  as long as you follow the license terms.&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;  &#xA;  &lt;h2&gt;Under the following terms:&lt;/h2&gt;&#xA;  &#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;Attribution — You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any&#xA;  reasonable manner, but not in any way that suggests the licensor&#xA;  endorses you or your use.&lt;/li&gt;&#xA;  &lt;li&gt;&lt;strong&gt;ShareAlike — If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the&#xA;  original.&lt;/strong&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The problematic bit is the ShareAlike clause. You have to release your work under the same license as the original.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That means that, assuming the work is original enough (depends on the laws in your country), you will not be able to add it as is to your project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Nothing is stopping you from understanding the snippet and writing one on your own, that has nothing to do with the original one.&lt;/p&gt;&#xA;" OwnerUserId="40" LastEditorUserId="8" LastEditDate="2015-06-24T14:18:38.867" LastActivityDate="2015-06-24T14:18:38.867" CommentCount="1" />
  <row Id="230" PostTypeId="1" AcceptedAnswerId="252" CreationDate="2015-06-24T08:26:14.050" Score="14" ViewCount="125" Body="&lt;p&gt;I'm taking the following Stack Overflow question and its answers into consideration: &lt;a href=&quot;http://stackoverflow.com/questions/7883179/can-you-create-your-own-software-license&quot;&gt;Can you create your one software license?&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;My question here however is not creating a completely new license from scratch (as I am not a lawyer and wouldn't know where to start), but rather slightly modifying an existing one and saving it under a new name.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is this possible? Are licenses licensed themselves? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Does a new 'custom' license need to be approved by official organizations?&lt;/p&gt;&#xA;" OwnerUserId="21" LastEditorUserId="69" LastEditDate="2015-07-02T20:29:42.053" LastActivityDate="2015-07-28T08:46:44.823" Title="Can I create my own license by modifying an existing one?" Tags="&lt;licensing&gt;&lt;license-creation&gt;" AnswerCount="4" CommentCount="4" FavoriteCount="2" />
  <row Id="231" PostTypeId="2" ParentId="226" CreationDate="2015-06-24T08:27:24.297" Score="10" Body="&lt;p&gt;The CC-BY-SA 3.0 &lt;a href=&quot;https://www.gnu.org/licenses/license-list.html#ccbysa&quot;&gt;is not compatible with the GNU GPL&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are two options under which you &lt;em&gt;can&lt;/em&gt; use code from SO in your GNU GPL licensed code:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The SO member has licensed the code under an additional license that is compatible with the GNU GPL. One such license is the &lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;Apache License 2.0&lt;/a&gt;. (I do this, see my profile).&lt;/li&gt;&#xA;&lt;li&gt;The code is trivial enough to not be covered by copyright.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerDisplayName="user114" LastActivityDate="2015-06-24T08:27:24.297" CommentCount="0" />
  <row Id="232" PostTypeId="2" ParentId="230" CreationDate="2015-06-24T08:29:55.203" Score="1" Body="&lt;p&gt;&lt;strong&gt;Can I create my own license by modifying an existing one? Is that possible?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Basically, yes. It was done in the past. You should give it a different name though, to avoid confusion.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Are licenses licensed themselves?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I don't know of any examples where that is the case.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Does a new 'custom' license need to be approved by official organs?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;No, you can put your works under any license you seem fit. Approval isn't required. A recommendation by the &lt;a href=&quot;http://opensource.org/&quot; rel=&quot;nofollow&quot;&gt;OSI&lt;/a&gt; or the &lt;a href=&quot;http://www.fsf.org/&quot; rel=&quot;nofollow&quot;&gt;FSF&lt;/a&gt; might be helpful to popularize your license though. Also the checkup with the two organizations might reveal some problem with your license.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-24T08:40:17.190" LastActivityDate="2015-06-24T08:40:17.190" CommentCount="7" />
  <row Id="233" PostTypeId="1" AcceptedAnswerId="235" CreationDate="2015-06-24T08:54:52.293" Score="16" ViewCount="186" Body="&lt;p&gt;What will the licence of the code be? If this is jurisdiction / country based what is relevant in this case? The place of origin of the poster, the host where the code lives, or the one who tries to view and reuse the unlicensed code?&lt;/p&gt;&#xA;" OwnerUserId="180" LastEditorUserId="69" LastEditDate="2015-06-30T11:55:30.183" LastActivityDate="2015-06-30T11:55:30.183" Title="What happens if I share code online without any licence declaration?" Tags="&lt;licensing&gt;&lt;law&gt;" AnswerCount="3" CommentCount="1" />
  <row Id="234" PostTypeId="2" ParentId="230" CreationDate="2015-06-24T08:57:25.433" Score="7" Body="&lt;p&gt;The main problem you may find if you change an existing license is &lt;strong&gt;&lt;em&gt;enforcement&lt;/em&gt;&lt;/strong&gt;. The mainstream licenses have been carefully drafted with enforceability in mind - and some courts have now ruled on those licenses.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you modify an existing license with your own wording, you may introduce some language that makes your license unenforceable - even if your new wording is fine, you won't be able to fully benefit from previous rulings and increase your risk of a ruling going against you.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But what you suggest has been done in the past. For example Bloomberg have open sourced &lt;a href=&quot;http://www.bloomberglabs.com/api/libraries/&quot;&gt;a proprietary API&lt;/a&gt; under a “free-use” MIT-style license (differences emphasised). These changes have certainly gone through the hands of a number of legal experts before being applied.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining&#xA;  a copy of &lt;strong&gt;this proprietary software&lt;/strong&gt; and associated documentation files&#xA;  (the &quot;Software&quot;), to use, publish, or distribute copies of the&#xA;  Software, and to permit persons to whom the Software is furnished to&#xA;  do so.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&lt;strong&gt;Any other use, including modifying, adapting, reverse engineering,&#xA;  decompiling, or disassembling, is not permitted.&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;[... - rest is the same]&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Original License:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a&#xA;  copy of &lt;strong&gt;this software&lt;/strong&gt; and associated documentation files (the&#xA;  &quot;Software&quot;), &lt;strong&gt;to deal in the Software without restriction, including&#xA;  without limitation the rights&lt;/strong&gt; to use, &lt;strong&gt;copy, modify, merge&lt;/strong&gt;, publish,&#xA;  distribute, &lt;strong&gt;sublicense, and/or sell&lt;/strong&gt; copies of the Software, and to&#xA;  permit persons to whom the Software is furnished to do so, subject to&#xA;  the following conditions:&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;[... - rest is the same]&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="91" LastActivityDate="2015-06-24T08:57:25.433" CommentCount="0" />
  <row Id="235" PostTypeId="2" ParentId="233" CreationDate="2015-06-24T09:00:15.690" Score="16" Body="&lt;p&gt;In that case copyright applies. In most countries, certainly in Europe, this is an automatic process: you publish something, and even without you adding the copyright symbol, you get the copyright.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Software is no different than literature. As a developer, you are considered being the author of your work. When you publish, you are the copyright owner. Copyright law allows an author to prohibit others from reproducing, adapting, or distributing copies of the author's work. In spite of the fact that people can read your source code, your code isn't &quot;free, open source software&quot;!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In short: if you don't add any license information, your code is protected, but make sure you add your name and document when you wrote/published it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Extra comment:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am not a lawyer, but I have faced a situation where a code contribution was done publicly and anonymously. I did a huge effort to track down the author (and documented my search), but I couldn't find the contributor. The lawyer told me that, in that case, it was safe to assume that the code was in the public domain, as there was nobody to claim ownership (even after me asking the author to make himself public in a comment section). It's always safe to consult a lawyer in cases like this. And document! document! document!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Update based on a comment:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;So it doesn't matter on what site it's published?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Yes, it does. When you register on a site, when you publish something on a site, you agree with the terms of agreement of that site.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some of these terms may not be legal in the country where you reside, in which case the terms are void. For instance: a site can claim that it owns the IP of every picture you upload. In some European countries, companies such as Facebook risk litigation if they do so, because that term is considered illegal.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, you should take into account that the terms and agreements &lt;em&gt;can be&lt;/em&gt; valid, because the internet doesn't have any borders and you can't assume that people in other countries know what the law says in the country you live in.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There was another question that explains what happens if you post code on StackOverflow: &lt;a href=&quot;http://opensource.stackexchange.com/a/229/27&quot;&gt;Can I copy-paste a snippet from StackOverflow into my GNU-GPL project?&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When you post code or an answer on StackOverflow, every one is free to use it, provided that the rules are obeyed. For instance: I wrote a book &lt;a href=&quot;http://pages.itextpdf.com/ebook-stackoverflow-questions.html&quot;&gt;The Best iText Questions on StackOverflow&lt;/a&gt; which bundles questions and answers that were posted on StackOverflow. I can do so, because I allow people to redistribute the content and I give credit to the people who wrote the questions and answers (actually, I am the author of most of the answers).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is taken from the &lt;a href=&quot;http://stackexchange.com/legal&quot;&gt;Terms of Service&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;In the event that You post or otherwise use Subscriber Content outside of the Network or Services, with the exception of content entirely created by You, You agree that You will follow the attribution rules of the Creative Commons Attribution Share Alike license as follows:&lt;/p&gt;&#xA;  &#xA;  &lt;ol&gt;&#xA;  &lt;li&gt;You will ensure that any such use of Subscriber Content visually displays or otherwise indicates the source of the Subscriber Content as coming from the Stack Exchange Network. This requirement is satisfied with a discreet text blurb, or some other unobtrusive but clear visual indication.&lt;/li&gt;&#xA;  &lt;li&gt;You will ensure that any such Internet use of Subscriber Content includes a hyperlink directly to the original question on the source site on the Network (e.g., &lt;a href=&quot;http://stackoverflow.com/questions/12345&quot;&gt;http://stackoverflow.com/questions/12345&lt;/a&gt;)&lt;/li&gt;&#xA;  &lt;li&gt;You will ensure that any such use of Subscriber Content visually display or otherwise clearly indicate the author names for every question and answer so used.&lt;/li&gt;&#xA;  &lt;li&gt;You will ensure that any such Internet use of Subscriber Content Hyperlink each author name directly back to his or her user profile page on the source site on the Network (e.g., &lt;a href=&quot;http://stackoverflow.com/users/12345/username&quot;&gt;http://stackoverflow.com/users/12345/username&lt;/a&gt;), directly to the Stack Exchange domain, in standard HTML (i.e. not through a Tinyurl or other such indirect hyperlink, form of obfuscation or redirection), without any “nofollow” command or any other such means of avoiding detection by search engines, and visible even with JavaScript disabled.&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;If you look at my book, you'll see that there's a link to the full question on StackOverflow under every question, as well as a link to the profile of the person who posted the question. I didn't provide such a link for the answers in case I am the author of the answer, because I have the choice to do with my own content what I want. However, I can't prevent that a third party takes my answer and copies it (that wouldn't be fair, but it has happened before and there's very little one can do about it).&lt;/p&gt;&#xA;" OwnerUserId="27" LastEditorUserId="27" LastEditDate="2015-06-24T09:45:34.950" LastActivityDate="2015-06-24T09:45:34.950" CommentCount="2" />
  <row Id="236" PostTypeId="2" ParentId="233" CreationDate="2015-06-24T09:00:22.797" Score="6" Body="&lt;p&gt;If you share code without any license declaration, the general assumption is you apply normal copyrights. That means copying it, modifying it or anything else might be risky. A court may judge, that the way you shared it implied some usage, but to depend on that is highly risky.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And code without clear license declaration isn't open source.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-24T09:00:22.797" CommentCount="0" />
  <row Id="237" PostTypeId="2" ParentId="18" CreationDate="2015-06-24T09:03:16.870" Score="1" Body="&lt;p&gt;When people start abusing your issue tracker to get support, then obviously your other support channels are not accessible enough.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Make sure you have a separate support system which is both easy to find and easy to use.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When I would have a problem with your software, a text file called &lt;code&gt;contributing.md&lt;/code&gt; would not be the first place to look. In fact I would likely not look at it at all, because I don't want to contribute. I want to ask a question. When you are lucky, I might look at a text file called &lt;code&gt;FAQ&lt;/code&gt; or &lt;code&gt;README&lt;/code&gt; or whatever documents I find in a sub-directory called &lt;code&gt;/doc/&lt;/code&gt;. But very likely the first place I would look would be your website, and when the only interactive feature I find there is the issue tracker, I would see no other choice.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Mailing lists and IRC channels are nice, but they don't help when they aren't accessible from the web browser. With either medium I have no idea if they are even active. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Do you have a mailing list archive which is searchable from the web and which can be easily found? That would allow people to see if the mailing list is active and if support questions are welcome there. They could also use the search function to check if their question is already answered which saves you a lot of time handling duplicate questions (a problem with a medium like IRC which has no persistence at all).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What about a web-based support forum? Did you consider creating one?&lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-06-24T09:22:23.530" LastActivityDate="2015-06-24T09:22:23.530" CommentCount="0" />
  <row Id="238" PostTypeId="1" AcceptedAnswerId="240" CreationDate="2015-06-24T09:24:26.020" Score="7" ViewCount="82" Body="&lt;p&gt;Sometimes, I'll start writing some code with no actual expectations about where it will end up or how useful it will be.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is there any point in releasing the code for a small project, mainly done for myself, which will likely never be finished? Or is it better to keep that code private?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'm looking for answers that take into account both the benefit for the general public as well as the potential future of the project.&lt;/p&gt;&#xA;" OwnerUserId="168" LastEditorUserId="168" LastEditDate="2015-06-29T13:08:00.313" LastActivityDate="2015-06-29T13:08:00.313" Title="Are there good reasons to open source &quot;trivial&quot; projects?" Tags="&lt;benefits&gt;&lt;publishing&gt;&lt;release&gt;" AnswerCount="1" CommentCount="3" />
  <row Id="239" PostTypeId="2" ParentId="233" CreationDate="2015-06-24T09:27:03.363" Score="2" Body="&lt;p&gt;Your code will be &lt;strong&gt;unlicensed&lt;/strong&gt; and no one would be allowed to use it. However, by posting it on services like GitHub, you are granting them [non-exclusive, permanent, irrevocable, unlimited] rights to publish your content in connection with the service. Unless the terms of the service requires otherwise and you accepted, you will retain copyright over the content and reserve all other rights.&lt;/p&gt;&#xA;" OwnerUserId="61" LastActivityDate="2015-06-24T09:27:03.363" CommentCount="1" />
  <row Id="240" PostTypeId="2" ParentId="238" CreationDate="2015-06-24T09:35:11.650" Score="8" Body="&lt;p&gt;Open sourcing a project is never evil. You can open source small scripts to full scale applications if you want, and be assured that among the millions of programmers out there, even if it is useful to a few of them, you've succeeded. You have essentially helped someone reduce his/her work by using your code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Regarding the future of your project, well, I'm sure if you do something useful, and it is something that can potentially help out several others like you, people would want to contribute.&lt;/p&gt;&#xA;" OwnerUserId="66" LastActivityDate="2015-06-24T09:35:11.650" CommentCount="6" />
  <row Id="241" PostTypeId="2" ParentId="226" CreationDate="2015-06-24T10:03:51.887" Score="7" Body="&lt;p&gt;The answer is that it depends.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;According the just the licensing: no, you can't, the licenses aren't compatible. But that's not the entirety of the story.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That only applies if the snippet itself is eligible to be copyrighted in the first place. When that applies differs from country to country. Some take in to account the effort that was needed to create something - the &quot;sweat of the brow&quot; doctrine, as is used for example in the UK, but not in the US.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In other places the threshold is originality and creativity. This is rather vague, and it can only be tested in a court of law if the snippet meets the requirements.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In Google vs Oracle, Google was found to have infringed on Oracles copyright through a 9 line method &lt;code&gt;rangeCheck&lt;/code&gt; that was as follows:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;private static void rangeCheck(int arrayLen, int fromIndex, int toIndex {&#xA;     if (fromIndex &amp;gt; toIndex)&#xA;          throw new IllegalArgumentException(&quot;fromIndex(&quot; + fromIndex +&#xA;               &quot;) &amp;gt; toIndex(&quot; + toIndex+&quot;)&quot;);&#xA;     if (fromIndex &amp;lt; 0) &#xA;          throw new ArrayIndexOutOfBoundsException(fromIndex);&#xA;     if (toIndex &amp;gt; arrayLen) &#xA;          throw new ArrayIndexOutOfBoundsException(toIndex);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;so apparently a snippet like that is sufficient to satisfy that criterion. I think there are few code snippets that demonstrate &lt;em&gt;less&lt;/em&gt; originality and creativity than this snippet does, but the details is eventually for a court to decide.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You do have the option however to ask the original creator to license the snippet to you under your preferred license. Or you could take the presented algorithm, and re-implement it yourself. Ideas, and algorithms are ideas, are not eligible for copyright.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;tl;dr. According to the license: no. Unless the work doesn't meet the threshold of originality, which based on precedent seems to be very low for software in the US. It's probably not worth the legal minefield to try it out. But you can re-implement the algorithm yourself.&lt;/p&gt;&#xA;" OwnerUserId="97" LastEditorUserId="97" LastEditDate="2015-06-24T10:15:55.133" LastActivityDate="2015-06-24T10:15:55.133" CommentCount="4" />
  <row Id="242" PostTypeId="2" ParentId="221" CreationDate="2015-06-24T10:15:28.233" Score="10" Body="&lt;p&gt;A common misunderstanding is that if you put something online without a license text to accompany it, anyone is free to do with it whatever they want. This isn't true.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Whatever you create is copyrighted to you, and can't be re-used without receiving a license from you allowing them to do so. Claims like &quot;all rights reserved&quot;, icons like ©, etc. don't mean much: they are all already implied for anything that doesn't have additional license terms.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So where many think that if something doesn't come with a license you may pretty much do anything with it, the truth it that if something doesn't come with a license you may pretty much do nothing with it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Of things you own the copyright on, you can do pretty much whatever you want. You may release it under an additional license, or you may stop distributing it under some license - though many (all?) open source license don't allow you to revoke a license. That means people who already obtained the software under those licenses retain the right to use it under such a license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Long story short, it is generally enough to just add a licence text file, and add a license header in every file the license applies to.&lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-06-24T10:15:28.233" CommentCount="0" />
  <row Id="243" PostTypeId="5" CreationDate="2015-06-24T10:16:47.900" Score="0" Body="&lt;p&gt;Software refers to any executable computer program that is not embedded into the hardware of the host device. Software is programmed and then released for others to use via various distribution methods. Common open-source distribution platforms include GitHub, SourceForge, and the soon-to-close Google Code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This tag should be used on questions about the open-source aspects of software. Open-source does not only refer to software, so if you &lt;em&gt;are&lt;/em&gt; asking about software you should use this tag. Take care that your question is about the open-source aspects of the software, rather than details about the software itself.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-06-26T13:39:06.067" LastActivityDate="2015-06-26T13:39:06.067" CommentCount="0" />
  <row Id="244" PostTypeId="4" CreationDate="2015-06-24T10:16:47.900" Score="0" Body="For questions about software in an open-source context; its uses and limitations." OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-06-26T13:39:26.860" LastActivityDate="2015-06-26T13:39:26.860" CommentCount="0" />
  <row Id="245" PostTypeId="1" AcceptedAnswerId="260" CreationDate="2015-06-24T10:16:57.293" Score="7" ViewCount="46" Body="&lt;p&gt;Are there any other applications of Open Source other than on software/code?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I guess you could apply the same idea to any other intellectual property (creations of the mind/intellect). But are there any real life examples outside the software industry and community?&lt;/p&gt;&#xA;" OwnerUserId="111" LastActivityDate="2015-06-24T14:22:24.917" Title="Are there any other applications of Open Source other than on software/code?" Tags="&lt;software&gt;&lt;intellectual-property&gt;" AnswerCount="4" CommentCount="1" />
  <row Id="246" PostTypeId="2" ParentId="245" CreationDate="2015-06-24T10:28:11.193" Score="11" Body="&lt;p&gt;In the 3D graphics world, there are free-licensed models, textures, and the like.  When building a 3D graphical work, they're the rough equivalents of code libraries and the like.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There's also the &lt;a href=&quot;https://en.wikipedia.org/wiki/Open-source_hardware&quot;&gt;open-source hardware&lt;/a&gt; movement (OpenCores, RepRap, etc.), though particularly in computing hardware, the line between &quot;software&quot; and &quot;not software&quot; gets a bit fuzzy.&lt;/p&gt;&#xA;" OwnerUserId="240" LastActivityDate="2015-06-24T10:28:11.193" CommentCount="0" />
  <row Id="247" PostTypeId="2" ParentId="245" CreationDate="2015-06-24T10:31:37.063" Score="3" Body="&lt;p&gt;Simply, yes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Software is the industry in which the open source industry is strongest, but other industries or arts can also be licensed openly.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A related industry is hardware. Some microcomputers are open-source licensed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;DIY is one such industry: when you make a product, you can release the documents you used to help make it under an open source license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A lot of computer-related arts are also open source-able: video editing, animation, copywriting, etc.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-24T10:31:37.063" CommentCount="0" />
  <row Id="248" PostTypeId="1" CreationDate="2015-06-24T10:34:03.410" Score="11" ViewCount="85" Body="&lt;p&gt;The term &lt;strong&gt;Free Software&lt;/strong&gt; is typically associated with software licensed under an &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_Software_Foundation&quot; rel=&quot;nofollow&quot;&gt;FSF&lt;/a&gt;-approved license (&lt;a href=&quot;https://en.wikipedia.org/wiki/The_Free_Software_Definition&quot; rel=&quot;nofollow&quot;&gt;The Free Software Definition&lt;/a&gt;), and the term &lt;strong&gt;Open Source (Software)&lt;/strong&gt; is typically associated with software licensed under an &lt;a href=&quot;https://en.wikipedia.org/wiki/Open_Source_Initiative&quot; rel=&quot;nofollow&quot;&gt;OSI&lt;/a&gt;-approved license (&lt;a href=&quot;https://en.wikipedia.org/wiki/The_Open_Source_Definition&quot; rel=&quot;nofollow&quot;&gt;The Open Source Definition&lt;/a&gt;).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Most of the applicable licenses are both, FSF- and OSI-approved. But &lt;a href=&quot;http://opensource.stackexchange.com/a/383/138&quot;&gt;there are exceptions&lt;/a&gt;. So &lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;not all &lt;em&gt;Free Software&lt;/em&gt; is &lt;em&gt;Open Source (Software)&lt;/em&gt;, &lt;/li&gt;&#xA;&lt;li&gt;not all &lt;em&gt;Open Source (Software)&lt;/em&gt; is &lt;em&gt;Free Software&lt;/em&gt;. &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Is there a term that includes both sets?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/Alternative_terms_for_free_software&quot; rel=&quot;nofollow&quot;&gt;alternative term&lt;/a&gt; &lt;strong&gt;FOSS&lt;/strong&gt;, which stands for &quot;free (and) open-source software&quot;, is, &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_and_open-source_software&quot; rel=&quot;nofollow&quot;&gt;according to its Wikipedia article&lt;/a&gt;, for software that&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;can be classified as both free software and open-source software.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I guess that this applies also to &lt;strong&gt;FLOSS&lt;/strong&gt;, which stands for &quot;free/libre (and) open-source software&quot;.&lt;/p&gt;&#xA;" OwnerUserId="138" LastEditorUserId="69" LastEditDate="2015-06-30T02:05:34.757" LastActivityDate="2015-06-30T02:05:34.757" Title="Is there a term that means &quot;Free Software and/*or* Open Source (Software)&quot;?" Tags="&lt;software&gt;&lt;osi&gt;&lt;terminology&gt;&lt;fsf&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="1" />
  <row Id="249" PostTypeId="2" ParentId="226" CreationDate="2015-06-24T10:35:36.060" Score="1" Body="&lt;p&gt;No. Code on StackOverflow is licensed under CC-BY-SA (which, incidentally, is a bad choice of license for any software or code). The problem with this is the SA part - the Share-Alike clause.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This means that any &lt;strong&gt;direct copies&lt;/strong&gt; of the work have to be released under the same license as the original. Thus, you cannot use the GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, you don't have to directly copy the snippet. Instead, use it to understand the principles behind why the author has done that, then write your own snippet that does the same thing. You get the same benefit out of it, and can use your own choice of license.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-24T10:35:36.060" CommentCount="1" />
  <row Id="250" PostTypeId="2" ParentId="248" CreationDate="2015-06-24T10:40:13.890" Score="5" Body="&lt;p&gt;Just about the best term for it you have already mentioned.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;FLOSS&lt;/strong&gt; is a fairly widely-used acronym for software that is both free and open-source. You can also use &lt;strong&gt;FOSS&lt;/strong&gt;, but there is an important note about &lt;strong&gt;FLOSS&lt;/strong&gt;:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Libre&lt;/em&gt;, in French or Spanish, refers to 'free' in the way that we refer to it when saying 'free as in speech'. It means liberty, not lack of cost. Thus, if you use FLOSS as the acronym, you are technically implying that you could still charge for the software. FOSS could imply either. This is, however, a technicality.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I haven't found any single &lt;em&gt;word&lt;/em&gt; that shows both free and open source.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-24T10:40:13.890" CommentCount="4" />
  <row Id="251" PostTypeId="2" ParentId="245" CreationDate="2015-06-24T11:14:29.177" Score="5" Body="&lt;p&gt;On the surface not, as the source is an integral part (every OSS license is demanding release of source code, not binaries). That is obviously not directly applicable to other copyrighted works, like for example stories.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But the ideas of freedom, permission for everyone to copy, modify, redistribute and remix has arrived in other areas. Namely the Creative Commons licenses are heavily influenced by the idea of Open Source. But also many people also simply use OSS-licenses for other stuff than software, although it isn't a perfect fit. And there were developed also licenses in this spirit for other areas, for instance for open hardware.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-24T11:14:29.177" CommentCount="0" />
  <row Id="252" PostTypeId="2" ParentId="230" CreationDate="2015-06-24T11:21:32.907" Score="14" Body="&lt;p&gt;Licenses themselves are often licensed under separate terms which don't have much to do with their own. The &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html&quot; rel=&quot;nofollow&quot;&gt;GPLv3&lt;/a&gt;, for example is licensed under the following terms:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Copyright © 2007 Free Software Foundation, Inc. &lt;a href=&quot;http://fsf.org/&quot; rel=&quot;nofollow&quot;&gt;http://fsf.org/&lt;/a&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Which is definitely &lt;em&gt;not&lt;/em&gt; a free-as-in-freedom license.  You need to check for each license separately which conditions apply to the license text itself. In the worst case the license text is not licensed at all, which implies &lt;em&gt;All Rights Reserved&lt;/em&gt; which means you are not allowed to use it for your own project, because that would be an illegal reproduction of the copyrighted license text.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But even when the license of the license allows modification: &lt;strong&gt;Unless you are a lawyer specialized in copyright law you should not modify an existing license&lt;/strong&gt;. A license is a legal document, and writing legal documents should be left to the professionals. Otherwise you risk writing something which doesn't actually say what you want it to say.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another reason to not invent your own license is to &lt;strong&gt;prevent license proliferation&lt;/strong&gt;. There are already lots and lots of open source licenses with very similar terms, but yet they are often incompatible just because they say so. Inventing a new license even though an existing one would do makes it harder for all of us to keep track of all the licenses available and is a hinderance to developers who would like to combine code licensed under different licenses in one project. So unless you are &lt;em&gt;sure&lt;/em&gt; your new license fills an important niche not yet covered, please try to use one which already exists.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Regarding &quot;approval for new licenses&quot;: A license is a legal agreement between you and your users. Nobody needs to approve it except for you and your users for it to be legally valid (except when it contradicts local laws - that's another reason why you should let a lawyer write them). However, when you want others to use your license for their FOSS project, you might seek approval from a quasi-official organization like the Free Software Foundation or Open Source Initiative. Their recommendation might not have any &lt;em&gt;legal&lt;/em&gt; weight, but it confirms that your terms are in agreement with their definitions of Free Software / Open Source Software.&lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-07-28T08:46:44.823" LastActivityDate="2015-07-28T08:46:44.823" CommentCount="0" />
  <row Id="253" PostTypeId="1" AcceptedAnswerId="254" CreationDate="2015-06-24T11:51:46.173" Score="16" ViewCount="121" Body="&lt;p&gt;The &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;text of the GPLv3&lt;/a&gt; starts with the following disclaimer:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Everyone is permitted to copy and distribute verbatim copies of this&#xA;  license document, but changing it is not allowed.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;What does this mean? The text of the GPL itself isn't open source? Will the FSF sue me in court if I change the text of the GPL and release it as Mnementh's Public License? What is the intention of this paragraph?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="111" LastEditDate="2015-06-24T12:57:13.267" LastActivityDate="2015-06-24T12:57:13.267" Title="What are the licensing terms of the text of the GPL?" Tags="&lt;licensing&gt;&lt;gpl&gt;&lt;gpl-3&gt;" AnswerCount="1" CommentCount="0" FavoriteCount="1" />
  <row Id="254" PostTypeId="2" ParentId="253" CreationDate="2015-06-24T11:59:02.097" Score="19" Body="&lt;p&gt;The sentence at the top of the GPL, &quot;&lt;em&gt;...changing it is not allowed,&lt;/em&gt;&quot; does not give you permission to make a derived license from the text of the GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-faq.en.html#ModifyGPL&quot;&gt;FSF's GPL FAQ item on modifying the GPL&lt;/a&gt; &lt;em&gt;does&lt;/em&gt; give you that permission (emphasis mine):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Can I modify the GPL and make a modified license?&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;It is possible to make modified versions of the GPL, but it tends to have practical consequences.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;You can legally use the GPL terms (possibly modified) in another license provided that you &lt;strong&gt;call your license by another name&lt;/strong&gt; and &lt;strong&gt;do not include the GPL preamble&lt;/strong&gt;, and provided you modify the instructions-for-use at the end enough to make it clearly different in wording and &lt;strong&gt;not mention GNU&lt;/strong&gt; (though the actual procedure you describe may be similar).&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;If you want to use our preamble in a modified license, please write to &amp;lt;licensing@gnu.org&amp;gt; for permission. For this purpose we would want to check the actual license requirements to see if we approve of them.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Although &lt;strong&gt;we will not raise legal objections to your making a modified license&lt;/strong&gt; in this way, we hope you will think twice and not do it...&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;It appears that the FSF (who is the author of the GPL) is explicitly allowing you to make and redistribute a derivative version of the GNU GPL, provided you:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;change the name of the license&lt;/li&gt;&#xA;&lt;li&gt;not reuse any part of the GPL preamble (this requires separate specific permission)&lt;/li&gt;&#xA;&lt;li&gt;remove mentions of GNU that appear in the how-to-use instructions&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;That said, the FSF advises that you make use of the license's capability for exceptions instead of writing your own. That will allow you to make the license more permissive but also enjoy the legally-vetted and GPL-compatible verbatim text of the license:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Such a modified license is almost certainly incompatible with the GNU GPL, and that incompatibility blocks useful combinations of modules. The mere proliferation of different free software licenses is a burden in and of itself.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Rather than modifying the GPL, please use the exception mechanism offered by GPL version 3.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;For more information about GPL exceptions, see the FAQ:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.gnu.org/licenses/gpl-faq.en.html#GPLIncompatibleLibs&quot;&gt;What legal issues come up if I use GPL-incompatible libraries with GPL software?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.gnu.org/licenses/gpl-faq.en.html#LinkingOverControlledInterface&quot;&gt;How can I allow linking of proprietary modules with my GPL-covered library under a controlled interface only?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.gnu.org/licenses/gpl-faq.en.html#FontException&quot;&gt;How does the GPL apply to fonts?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.gnu.org/licenses/gpl-faq.en.html#WMS&quot;&gt;I am writing a website maintenance system (called a “content management system” by some), or some other application which generates web pages from templates. What license should I use for those templates?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="50" LastEditorUserId="50" LastEditDate="2015-06-24T12:15:51.527" LastActivityDate="2015-06-24T12:15:51.527" CommentCount="0" />
  <row Id="255" PostTypeId="2" ParentId="183" CreationDate="2015-06-24T12:38:14.963" Score="4" Body="&lt;p&gt;I believe &lt;a href=&quot;http://haacked.com/archive/2012/02/22/spirit-of-open-source.aspx/&quot; rel=&quot;nofollow&quot;&gt;the article &lt;em&gt;What Is The Spirit of Open Source?&lt;/em&gt; by Phil Haack&lt;/a&gt; is relevant here:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;There were those who felt that it was was disingenuous for me to use the term “open source software” to describe a Microsoft project that doesn’t accept contributions and is developed under a closed model, even if it is licensed under an open source license.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Technically, publishing your code under an open source license is all you need to be an open source project. You don't need to accept any contributions at all. That's because anyone else can fork your project and use that.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;While some would argue that this may not be in &quot;the spirit of open source&quot;, that's not really the right term to use:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;But Miguel [de Icaza] thought a better term is “open and collaborative development.” That’s the process that is so closely associated with developing open source software that it’s become synonymous with open source in the minds of many people. But it’s not the same thing because it’s possible to conduct open and collaborative development on a non-open source project.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="8" LastActivityDate="2015-06-24T12:38:14.963" CommentCount="1" />
  <row Id="256" PostTypeId="5" CreationDate="2015-06-24T13:30:43.607" Score="0" Body="&lt;p&gt;A license is any notice that governs and rules a set of terms and conditions, outlining the rights of the licensee and licensor towards a certain area of interest or work.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Licensing refers to applying a license to a creative work, be it software, images, hardware, or any other licensable object.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;A software license is a legally binding agreement that specifies the terms of use for an application and defines the rights of the software producer and of the end-user. -- &lt;a href=&quot;https://its.uncg.edu/Software/Licensing/&quot; rel=&quot;nofollow&quot;&gt;source&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Generally speaking, a license defines the terms and conditions under which a third party can make use of the licensor's intellectual property.&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="69" LastEditDate="2015-07-22T01:30:18.053" LastActivityDate="2015-07-22T01:30:18.053" CommentCount="0" />
  <row Id="257" PostTypeId="4" CreationDate="2015-06-24T13:30:43.607" Score="0" Body="Licensing refers to applying a license to an area of software. Only use this tag if your question concerns the application of a license to an area of interest. If your question concerns a specific license, use the tag that corresponds to your license. For more general questions, use this tag." OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-08-15T13:37:01.163" LastActivityDate="2015-08-15T13:37:01.163" CommentCount="0" />
  <row Id="258" PostTypeId="5" CreationDate="2015-06-24T13:59:19.407" Score="0" Body="&lt;p&gt;The &lt;a href=&quot;http://opensource.org/&quot; rel=&quot;nofollow&quot;&gt;Open Source Initiative&lt;/a&gt; released the definition of the term &quot;Open Source&quot; and keeps a list of conforming licenses with a selection of recommended ones.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="111" LastEditDate="2015-06-26T14:47:54.680" LastActivityDate="2015-06-26T14:47:54.680" CommentCount="0" />
  <row Id="259" PostTypeId="4" CreationDate="2015-06-24T13:59:19.407" Score="0" Body="For questions about the Open Source Initiative and its relation to free and open projects." OwnerUserId="111" LastEditorUserId="98" LastEditDate="2015-08-15T22:04:01.627" LastActivityDate="2015-08-15T22:04:01.627" CommentCount="0" />
  <row Id="260" PostTypeId="2" ParentId="245" CreationDate="2015-06-24T14:17:00.407" Score="3" Body="&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Open_source#Applications&quot; rel=&quot;nofollow&quot;&gt;Wikipedia&lt;/a&gt; notes that there are loads of uses, from &lt;a href=&quot;http://en.wikipedia.org/wiki/Hyperloop&quot; rel=&quot;nofollow&quot;&gt;transportation&lt;/a&gt; to &lt;a href=&quot;http://en.wikipedia.org/wiki/Open-source_robotics&quot; rel=&quot;nofollow&quot;&gt;robots&lt;/a&gt; to &lt;a href=&quot;http://en.wikipedia.org/wiki/Free_Beer&quot; rel=&quot;nofollow&quot;&gt;beer&lt;/a&gt;. Some fall under the umbrella of &lt;a href=&quot;http://en.wikipedia.org/wiki/Open-source_hardware&quot; rel=&quot;nofollow&quot;&gt;open source hardware&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;My favorite of these is the &lt;a href=&quot;http://en.wikipedia.org/wiki/Hyperloop#Open-source_design_evolution&quot; rel=&quot;nofollow&quot;&gt;Hyperloop&lt;/a&gt;, first pushed forward by Elon Musk, the co-founder of PayPal and founder of SpaceX and Tesla Motors (some of the latter's ideas are open-source). Numerous groups have done studies and simulations on the design, allowing more progress to be made than any one group could make. &lt;a href=&quot;http://www.theregister.co.uk/2013/07/16/elon_musk_to_release_open_source_hyperloop_plans_in_august/&quot; rel=&quot;nofollow&quot;&gt;Said Musk&lt;/a&gt;,&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&quot;I really hate patents unless critical to company survival. Will publish Hyperloop as open source,&quot; he &lt;a href=&quot;http://twitter.com/elonmusk/statuses/356776740409974785&quot; rel=&quot;nofollow&quot;&gt;wrote&lt;/a&gt; on Twitter.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="145" LastEditorUserId="145" LastEditDate="2015-06-24T14:22:24.917" LastActivityDate="2015-06-24T14:22:24.917" CommentCount="0" />
  <row Id="261" PostTypeId="1" CreationDate="2015-06-24T14:33:40.750" Score="6" ViewCount="27" Body="&lt;p&gt;Say I create a system similar to &lt;a href=&quot;http://en.wikipedia.org/wiki/Arduino&quot;&gt;Arduino&lt;/a&gt;. I haven't yet developed much more than a basic version, and so the hardware is only compatible with the software I created, so it makes sense for them both to be open source. For simplicity's sake, I would like to distribute them under the same license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Can I do this?&lt;/p&gt;&#xA;" OwnerUserId="145" LastActivityDate="2015-06-24T15:11:11.647" Title="Can I distribute related software and hardware under the same license?" Tags="&lt;licensing&gt;&lt;hardware&gt;" AnswerCount="1" CommentCount="2" />
  <row Id="262" PostTypeId="1" AcceptedAnswerId="264" CreationDate="2015-06-24T14:51:05.630" Score="13" ViewCount="159" Body="&lt;p&gt;FOSS stands for &quot;Free and Open Source Software&quot;, whereas FLOSS stands for &quot;Free/Libre/Open Source Software&quot;. The use of &lt;em&gt;libre&lt;/em&gt; denotes the idea that the software is &quot;free as in free speech, not free beer,&quot; as Richard Stallman put it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What is the practical difference between FOSS and FLOSS? Does the inclusion of &lt;em&gt;libre&lt;/em&gt; denote fewer restrictions in FLOSS, or is the difference subtler?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I found &lt;a href=&quot;http://www.gnu.org/philosophy/floss-and-foss.html&quot;&gt;a longer explanation by Stallman&lt;/a&gt;, but it seems to indicate that FLOSS merely emphasizes the way the software is &quot;free&quot;.&lt;/p&gt;&#xA;" OwnerUserId="145" LastEditorUserId="138" LastEditDate="2015-06-24T15:39:40.533" LastActivityDate="2015-06-25T17:08:51.543" Title="What is the difference between FOSS and FLOSS?" Tags="&lt;terminology&gt;&lt;floss&gt;" AnswerCount="3" CommentCount="1" FavoriteCount="3" />
  <row Id="263" PostTypeId="2" ParentId="262" CreationDate="2015-06-24T15:00:53.557" Score="4" Body="&lt;p&gt;I've partially covered this in &lt;a href=&quot;http://opensource.stackexchange.com/a/250/98&quot;&gt;another answer&lt;/a&gt;, which might be worth a read.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Libre&lt;/em&gt; is from the French and/or Spanish (there may be other languages too, but those come to mind). In said languages, &quot;libre&quot; implies, as you say, free speech not free beer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The first difference, then, is that FLOSS is actually implied to be a bit &lt;em&gt;more&lt;/em&gt; restrictive &lt;strong&gt;to the creator&lt;/strong&gt;: i.e. categorising your software as FLOSS implies you will not charge for it. FOSS, on the other hand, doesn't specify what &quot;free&quot; it means, so you can charge for it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Your users, on the other hand, won't see much of a difference apart from cost: whether software is FLOSS or FOSS, they will be able to use it in much the same way. This is as opposed to sourcing differences: the difference between open- and visible-source is large, whereas the difference between FOSS and FLOSS is small.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It seems this is the only major distinction between the two.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Stallman has also written &lt;a href=&quot;http://www.gnu.org/philosophy/open-source-misses-the-point.en.html&quot; rel=&quot;nofollow&quot;&gt;this article&lt;/a&gt;, which mentions FOSS and FLOSS briefly, among other discussion of the principles of &quot;free&quot; software. (Thanks to Pandya for bringing this up &lt;a href=&quot;http://chat.stackexchange.com/transcript/message/22385502#22385502&quot;&gt;in chat&lt;/a&gt;).&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-06-25T17:08:51.543" LastActivityDate="2015-06-25T17:08:51.543" CommentCount="6" />
  <row Id="264" PostTypeId="2" ParentId="262" CreationDate="2015-06-24T15:07:19.150" Score="13" Body="&lt;p&gt;French Skills to the test!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Libre -&gt; Free as in Freedom. I'm Free as a bird!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Gratuit -&gt; Free as in Free Food. The Food is Free!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;People started using the term FLOSS to help make the vision that the software is &lt;em&gt;libre&lt;/em&gt;, and not free. FLOSS meant Free/Libre Open Source Software, whereas FOSS would mean Free and Open Source Software. This is less clear, as FOSS may not be interpreted with freedom. If you want to accept both, you should use FLOSS.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For More Info: &lt;a href=&quot;https://fsfe.org/freesoftware/basics/comparison.en.html&quot;&gt;Free Software, Open Source, FOSS, FLOSS - same same but different&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Source: &lt;a href=&quot;http://www.gnu.org/philosophy/floss-and-foss.en.html&quot;&gt;FLOSS and FOSS&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-06-24T15:10:47.077" LastActivityDate="2015-06-24T15:10:47.077" CommentCount="3" />
  <row Id="265" PostTypeId="2" ParentId="261" CreationDate="2015-06-24T15:11:11.647" Score="3" Body="&lt;p&gt;The essential principles of open-sourcing hardware and software remain the same: primarily, to ensure everyone has the right to use and reuse what you've created.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You do, however, need to pick (or make - though that's not recommended) a license that will apply well to both software and hardware. Hardware has the difference of being rather, well, &lt;em&gt;physical&lt;/em&gt;, and as such has different considerations to note. Specifically, there are two parts to the hardware: the documents you used to create it, and the product itself.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As with all licensing, consider what you want users to be able to do with what you've made. If you're licensing so that people can modify and redistribute your software, do you want them hacking away at your hardware too and redistributing that? There's a different type and level of effort in creating hardware and software: are you more protective of one than the other?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; There's nothing stopping you, but consider what you want to happen with your creation.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-24T15:11:11.647" CommentCount="0" />
  <row Id="266" PostTypeId="2" ParentId="262" CreationDate="2015-06-24T15:12:48.483" Score="8" Body="&lt;p&gt;I think &lt;em&gt;FOSS&lt;/em&gt; and &lt;em&gt;FLOSS&lt;/em&gt; are synonyms. (The &lt;a href=&quot;http://www.gnu.org/philosophy/floss-and-foss.en.html&quot;&gt;FSF agrees&lt;/a&gt;, but recommends to use &lt;em&gt;FLOSS&lt;/em&gt;.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&quot;Free Software&quot; refers to &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Free_Software_Definition&quot;&gt;The Free Software Definition&lt;/a&gt;, &quot;Open Source&quot; refers to the &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Open_Source_Definition&quot;&gt;The Open Source Definition&lt;/a&gt;. The terms &lt;em&gt;FOSS&lt;/em&gt; and &lt;em&gt;FLOSS&lt;/em&gt; are used to refer to software that is licensed under a license that the &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_Software_Foundation&quot;&gt;FSF&lt;/a&gt; and &lt;a href=&quot;http://opensource.stackexchange.com/q/248/138&quot;&gt;(not or)&lt;/a&gt; the &lt;a href=&quot;https://en.wikipedia.org/wiki/Open_Source_Initiative&quot;&gt;OSI&lt;/a&gt; approved.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In both cases, the &quot;F&quot; stands for &quot;free&quot;, and in both cases this &quot;free&quot; refers to the concept of freedom, not to gratis. FOSS &lt;em&gt;and&lt;/em&gt; FLOSS may cost money.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Adding &quot;L&quot; for &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Libre_%28word%29&quot;&gt;libre&lt;/a&gt;&quot; helps to clarify this, because &quot;free&quot; is ambiguous in the English language. (After all, it says &quot;free/libre&quot;, not &quot;free and libre&quot;.)&lt;/p&gt;&#xA;" OwnerUserId="138" LastEditorUserId="138" LastEditDate="2015-06-24T15:19:39.103" LastActivityDate="2015-06-24T15:19:39.103" CommentCount="0" />
  <row Id="267" PostTypeId="2" ParentId="230" CreationDate="2015-06-24T15:26:25.107" Score="2" Body="&lt;p&gt;Yes, as long as you check.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some licenses allow you to do this. Notably, the GPL &lt;em&gt;does&lt;/em&gt;, though the note indicates otherwise: see &lt;a href=&quot;http://opensource.stackexchange.com/a/254/98&quot;&gt;this answer&lt;/a&gt; for a full explanation. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;It should simply be a matter of checking around the license creator's website or distribution mechanism to see whether they'd allow you to use their license to create a new one.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If there is nothing saying you can (explicitly giving you permission), &lt;em&gt;you may not&lt;/em&gt;. It is a common misconception that if no license terms are available, you can do anything you like with it: this is not true. Instead, if no licenses is visible, you can do almost nothing with it (excepting fair use). So, if they don't give permission, you can't use the license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You should also note that creating your own license is discouraged by many, notably GNU (creators of the GPL). They say that although you may use the GPL to create a new license, the new license will almost certainly be incompatible with the GPL. This reason sticks as a good reason not to write your own license based off any other. Additionally, the big-name accepted licenses like Apache, MIT, and GPL are legally vetted for you and you can be sure that there aren't (m)any holes. Your own license, unless you are a lawyer, likely will.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-24T15:26:25.107" CommentCount="0" />
  <row Id="268" PostTypeId="5" CreationDate="2015-06-24T15:27:46.307" Score="0" Body="&lt;p&gt;The GPL, or General Public License is a basic software license offered by GNU, which is sponsored by the Free Software Foundation. There are currently three major version of the license: 1, 2, and 3.&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-07-22T07:41:52.007" LastActivityDate="2015-07-22T07:41:52.007" CommentCount="0" />
  <row Id="269" PostTypeId="4" CreationDate="2015-06-24T15:27:46.307" Score="0" Body="The GNU's General Public License, a commonly-used free software license. The GPL has various versions, v1-v3, so use this tag only for questions talking about overarching issues of the licenses or shared characteristics. For example, for a question about a unique section on version 3, use the [tag:gpl-3] tag." OwnerUserId="145" LastEditorUserId="145" LastEditDate="2015-06-25T14:00:37.317" LastActivityDate="2015-06-25T14:00:37.317" CommentCount="0" />
  <row Id="270" PostTypeId="1" AcceptedAnswerId="272" CreationDate="2015-06-24T15:29:30.847" Score="25" ViewCount="395" Body="&lt;p&gt;If yes, what are the consequences of Open Source projects being discontinued, if it's done by a large organization?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As per &lt;a href=&quot;http://opensource.stackexchange.com/questions/33/how-to-relicense-a-project&quot;&gt;this post&lt;/a&gt;,&#xA;the older version of project can still be used under the same old open source license. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is there a way to make it so that the project can't be used under the old license?&lt;/p&gt;&#xA;" OwnerUserId="11" LastEditorUserId="190" LastEditDate="2015-07-06T02:10:38.813" LastActivityDate="2015-07-06T02:10:38.813" Title="Is it possible to close an open source project?" Tags="&lt;distribution&gt;&lt;relicensing&gt;&lt;proprietary-code&gt;" AnswerCount="6" CommentCount="5" FavoriteCount="2" />
  <row Id="271" PostTypeId="2" ParentId="270" CreationDate="2015-06-24T15:44:09.523" Score="19" Body="&lt;p&gt;Yes, and no.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As per the question you linked, if you're the only contributor, you can do whatever you want with the project. You can take it off GitHub or whatever platform you decided, you can compile and sell it, and whatnot.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;However&lt;/h2&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;You cannot do that if you aren't the sole contributor. You are no longer the only rights holder, and thus, the decision has to be shared amongst all contributors (Or alternatively, remove all contributions not made by you).&lt;/li&gt;&#xA;&lt;li&gt;You cannot prevent someone who forked your projects when it was open source of continuing to distribute the application under the old license. You gave them a license to remix and redistribute your project, and cannot realistically revoke it. And what if their fork had forks? etc. This of course, depends on the license you've released your open source project with, and it is theoretically possible to add a revocation clause. &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="40" LastEditorUserId="29" LastEditDate="2015-06-24T15:54:36.857" LastActivityDate="2015-06-24T15:54:36.857" CommentCount="1" />
  <row Id="272" PostTypeId="2" ParentId="270" CreationDate="2015-06-24T15:48:25.613" Score="11" Body="&lt;p&gt;Much would depend on the initial license chosen when creating the OS project. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;If the OSP was originally published under a copyleft license such as GPL, then the answer is clearly no. They can not continue development under a more restrictive license without violating the terms of the original license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A permissive license, such as Apache, allows the original publisher to effectively fork the project internally and abandon the open source version, making no more commits.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, if the project was ever used (or even downloaded) by someone, even deleting the 'authorative' source repository will not stop it reappearing under a different guise.&lt;/p&gt;&#xA;" OwnerUserId="29" LastActivityDate="2015-06-24T15:48:25.613" CommentCount="3" />
  <row Id="273" PostTypeId="2" ParentId="213" CreationDate="2015-06-24T15:54:15.027" Score="7" Body="&lt;p&gt;Copyright protection only comes into play when an actual &lt;em&gt;copy&lt;/em&gt; has been made of a work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If two people write a &quot;hello world&quot; program independently of each other, then both programs are protected by copyright and can be published with any license that the author wants.&lt;br&gt;&#xA;But as both worked independently of each other, neither can claim that the other infringed on his copyright because no copies were made.&lt;br&gt;&#xA;It doesn't even matter here if one has published his work before the other even started, to claim a copyright infringement, you have to prove that someone made a copy of your work.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;There is one grey area here: If person A has read the code from person B and then creates something very similar, then there might be cases where person B could successfully argue that person A has effectively made a copy.&lt;br&gt;&#xA;For such a claim to be successful, most likely the code of person B has to be of enough originality that it would be unlikely that person A had come up with his solution without seeing the work from person B. This would not be the case with a &quot;hello world&quot; type of program.&lt;/p&gt;&#xA;" OwnerUserId="258" LastActivityDate="2015-06-24T15:54:15.027" CommentCount="0" />
  <row Id="274" PostTypeId="2" ParentId="270" CreationDate="2015-06-24T15:57:57.330" Score="9" Body="&lt;p&gt;Technically yes, but practically no.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Technically yes&lt;/strong&gt; - if you're the sole contributor, or you can get agreement with your co-contributors, you can do anything you like. It doesn't matter how you've distributed the software before: the original copyright is yours and you have permanent rights to do anything you like with it, unless you deliberately waive them. Thus, you can remove distributions, binaries, source, etc, from everywhere you've put it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Practically no&lt;/strong&gt; - if your project was any sort of popular, people will have copies of it that they are allowed to keep. Most (all?) licenses say that you can't revoke the right to use the software, as long as license terms are followed. If someone's got the software, tough. It may also have been forked and developed: you can't tell these people to stop either.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-06-24T22:55:33.927" LastActivityDate="2015-06-24T22:55:33.927" CommentCount="0" />
  <row Id="276" PostTypeId="2" ParentId="156" CreationDate="2015-06-24T16:09:37.387" Score="0" Body="&lt;p&gt;Yes, there are (paid) services such as &lt;strong&gt;&lt;a href=&quot;https://www.blackducksoftware.com/audits/open-source-audits&quot; rel=&quot;nofollow&quot;&gt;Black Duck &lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href=&quot;http://www.openlogic.com/products-services/services/application-audit&quot; rel=&quot;nofollow&quot;&gt;Open Logic&lt;/a&gt;&lt;/strong&gt; that will audit your code, and report all of the licensed pieces of software found.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;They will even find snippets in your code which are copy/pasted or too closely resemble snippets found on the internet which are shared with an unfavorable license.&lt;/p&gt;&#xA;" OwnerUserId="40" LastActivityDate="2015-06-24T16:09:37.387" CommentCount="2" />
  <row Id="277" PostTypeId="2" ParentId="173" CreationDate="2015-06-24T16:16:47.867" Score="6" Body="&lt;p&gt;In the large majority of cases, the software of a program and the artwork used by a program are not related to each other where copyright is concerned.&lt;br&gt;&#xA;An exception might be an image that was created by a program from a fixed formula and the source code of that program.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For a work to be considered a derived work, there must be a way to go from the original work to the target work. There is no such conversion path between the source code of a program and the artwork of a program. For that reason, the two are considered to be independent works as far as copyright is concerned.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If two works are independent works for copyright, then their copyright licenses also don't affect each other. This means that you can perfectly combine artwork under a free (CC-SA) license with software under a closed-source license.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;If you made changes to the artwork under the CC-SA license, then you must share your modified artwork under the same (or a compatible) license.&lt;/p&gt;&#xA;" OwnerUserId="258" LastActivityDate="2015-06-24T16:16:47.867" CommentCount="0" />
  <row Id="278" PostTypeId="2" ParentId="173" CreationDate="2015-06-24T16:28:57.993" Score="6" Body="&lt;p&gt;You only need to share the image under CC-BY-SA. This means your project will be multi-licensed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The important part is that &lt;em&gt;only the image&lt;/em&gt; is currently under BY-SA. Since the only requirement of the license is that if you share, modify or redistribute the image, you have to license &lt;em&gt;it&lt;/em&gt; under BY-SA. The license of the image can have no bearing on the rest of your project, as long as the rest of your project isn't a derivative work of the image.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It may be wise, as in many cases, to include a Licensing file with your project, giving details of the project's licenses:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The majority of this project is licensed under X. This includes the codebase and many assets. A list of exceptions is provided below, along with the license for each one. When using these assets, please be mindful that you are using the correct license.&lt;/p&gt;&#xA;  &#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;image-name.jpg is licensed under CC-BY-SA&lt;/li&gt;&#xA;  &lt;li&gt;other-image.png is licensed under Y&lt;/li&gt;&#xA;  &lt;li&gt;other exceptions&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-24T16:28:57.993" CommentCount="0" />
  <row Id="279" PostTypeId="1" AcceptedAnswerId="531" CreationDate="2015-06-24T16:51:46.290" Score="13" ViewCount="110" Body="&lt;p&gt;I want to use open source software for my business, and it is dual licensed. If I choose the paid license which provides support for any changes we require, will this mean that we are unable to change to a different support provider in future?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In &lt;a href=&quot;http://www.pcadvisor.co.uk/news/software/analysis-the-big-problems-with-open-source-3224021/&quot;&gt;this article&lt;/a&gt; I was concerned by the following suggestion:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Some vendors operate on a 'dual-licence' business model, in which customers can buy a license to get access to the vendor's support team or to extra features and extensions for the core software, such as management tools.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;According to Mark Driver, an analyst at Gartner, the overwhelming majority of commercial open-source efforts today are based on a dual-licence model.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Customers should know, he says, that with this option, &quot;the open-source-ness of the product comes into question&quot;.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;While open-source software licences cost less than commercial software licences, they include terms and conditions that restrict your use and lock you into a vendor.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Was this a valid concern at the time the article was written (2010) and does it still apply to dual licensed software today?&lt;/p&gt;&#xA;" OwnerUserId="37" LastEditorUserId="190" LastEditDate="2015-07-08T10:59:24.920" LastActivityDate="2015-07-08T10:59:24.920" Title="Will a dual license lock me in to a provider?" Tags="&lt;licensing&gt;&lt;multi-licensing&gt;" AnswerCount="1" CommentCount="4" FavoriteCount="1" />
  <row Id="280" PostTypeId="1" AcceptedAnswerId="318" CreationDate="2015-06-24T16:54:30.940" Score="9" ViewCount="38" Body="&lt;p&gt;Some OSS projects include CA certificates and claims that they are subject to a particular OSS license. For example the certificates in &lt;a href=&quot;https://mxr.mozilla.org/mozilla/source/security/nss/lib/ckfw/builtins/certdata.txt&quot;&gt;https://mxr.mozilla.org/mozilla/source/security/nss/lib/ckfw/builtins/certdata.txt&lt;/a&gt; are said to be &quot;subject to the terms of the Mozilla Public License, v. 2.0.&quot;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However the certs themselves are mere large random numbers, which are &quot;mechanically generated&quot; and not  &quot;an original expression of an idea&quot;. Hence they might be considered as not copyrightable, and hence the OSS license cannot be applied. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is that a reasonable interpretation?&lt;/p&gt;&#xA;" OwnerUserId="243" LastEditorUserId="98" LastEditDate="2015-06-24T17:21:28.220" LastActivityDate="2015-06-25T00:13:28.900" Title="Do we need to follow the license for CA certs?" Tags="&lt;licensing&gt;&lt;restrictions&gt;&lt;copyright&gt;" AnswerCount="2" CommentCount="1" />
  <row Id="281" PostTypeId="1" CreationDate="2015-06-24T17:10:33.217" Score="12" ViewCount="48" Body="&lt;p&gt;The &lt;a href=&quot;http://creativecommons.org/licenses/by-sa/4.0/legalcode&quot;&gt;Creative Commons Attribution-ShareAlike 4.0 International Public License&lt;/a&gt; states&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ol&gt;&#xA;  &lt;li&gt;&lt;p&gt;If You Share the Licensed Material (including in modified form), You must:&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;A. retain the following if it is supplied by the Licensor with the Licensed Material:&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;. . .&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;v. a URI or hyperlink to the Licensed Material to the extent reasonably practicable&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;If, for my use of the license, I provide a direct link to the original material and the link rots or the page otherwise becomes inaccessible (for reasons which are not my fault), am I responsible for replacing it?&lt;/p&gt;&#xA;" OwnerUserId="145" LastEditorUserId="138" LastEditDate="2015-07-06T16:54:55.480" LastActivityDate="2015-07-06T18:03:49.223" Title="Am I responsible for fixing broken links under a Creative Commons Attribution-ShareAlike license?" Tags="&lt;creative-commons&gt;&lt;attribution&gt;" AnswerCount="3" CommentCount="1" />
  <row Id="282" PostTypeId="2" ParentId="281" CreationDate="2015-06-24T17:14:20.763" Score="3" Body="&lt;p&gt;If the link rots, and the original work cannot be found, you are not liable to fix it. If the original work however, had moved projects (from the closing Google Code to GitHub, for example), and this transition is public and well known, it's likely that you must change the link to reflect that, yes.&lt;/p&gt;&#xA;" OwnerUserId="40" LastEditorUserId="8" LastEditDate="2015-06-24T18:42:18.330" LastActivityDate="2015-06-24T18:42:18.330" CommentCount="4" />
  <row Id="283" PostTypeId="1" AcceptedAnswerId="389" CreationDate="2015-06-24T17:26:14.127" Score="11" ViewCount="77" Body="&lt;p&gt;Free software licences such as GPL depend on copyright law in order to be legally enforcable.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Are there jurisdictions in which the law does not enforce such licenses, allowing the license to be ignored? If so are there any steps that can be taken to preserve the freedom of software in such jurisdictions?&lt;/p&gt;&#xA;" OwnerUserId="37" LastActivityDate="2015-06-27T08:21:09.553" Title="Jurisdictions without compatible copyright law" Tags="&lt;copyright&gt;&lt;copyleft&gt;" AnswerCount="2" CommentCount="5" FavoriteCount="1" />
  <row Id="284" PostTypeId="1" AcceptedAnswerId="525" CreationDate="2015-06-24T17:35:03.673" Score="8" ViewCount="128" Body="&lt;p&gt;I want to create a dynamically loadable module (.dll or .so) for a closed source program, but I would like to make the source code of this module available, and I'd like it to be (A)GPL licensed, so others could use my module, but I also want to make sure their code would also be open sourced. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;My questions are:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Since the whole project would be one executable at the end would the closed source program count as &quot;derivative work&quot;, thereby it would need to be GPL as well?&lt;/li&gt;&#xA;&lt;li&gt;If yes, can I add some kind of additional permission to the GPL licence of my code to explicitly allow this linkage to occur, so it could actually be distributed with the app?&lt;/li&gt;&#xA;&lt;li&gt;If yes, where and how should I put these additional permissions in the licence file?&lt;/li&gt;&#xA;&lt;li&gt;Would this modified licence still be GPL (compatible)? What kind of open source code could I use within my module?&lt;/li&gt;&#xA;&lt;li&gt;If the resulting licence would not be GPL compatible are there any other licences that are better sutied for this situation, but are still similar in essence to GPL (e.g. reusing the code is only possible in case it's source is also released)?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="180" LastEditorUserId="180" LastEditDate="2015-06-24T18:19:15.013" LastActivityDate="2015-06-27T08:59:08.563" Title="GPL licenced code for a module of a closed source program" Tags="&lt;licensing&gt;&lt;gpl&gt;" AnswerCount="2" CommentCount="8" FavoriteCount="0" />
  <row Id="285" PostTypeId="1" CreationDate="2015-06-24T19:14:15.047" Score="8" ViewCount="93" Body="&lt;p&gt;I am developing a piece of software. The software is based on a piece of open source software. My question is how much must be changed / edited before I can call it my own? Also how do you classify how much is changed?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The code I'm building on is &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-nd/3.0/&quot; rel=&quot;nofollow&quot; title=&quot;Attribution - Non Commercial - No Derivatives&quot;&gt;BY-NC-ND&lt;/a&gt; but if the code is still not technically my own (I did not write it) morally do you think I should provide some credit?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="29" LastEditDate="2015-06-25T08:57:17.250" LastActivityDate="2015-06-25T08:57:17.250" Title="When does code become my own?" Tags="&lt;licensing&gt;&lt;creative-commons&gt;&lt;cc-by&gt;" AnswerCount="1" CommentCount="2" />
  <row Id="286" PostTypeId="2" ParentId="285" CreationDate="2015-06-24T19:28:12.097" Score="9" Body="&lt;p&gt;The code you're building on in BY-NC-ND, which requires attribution, forbids commercial use, and disallowed derivatives.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you build on that code, it's a derivative, which is not allowed by the license. Even if you gradually replace everything, it is still a derivative.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Anything you change you can call your own, but the resulting work will always be a combined work of the original work and your changes, even if none of the original code remains.&lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-06-24T19:28:12.097" CommentCount="5" />
  <row Id="287" PostTypeId="1" CreationDate="2015-06-24T19:50:23.357" Score="8" ViewCount="58" Body="&lt;p&gt;If code has a licence that allows sharing of modifications, is it possible to prevent it being hosted on a site that uses third party advertising? Do licences with this intent exist, or is it not possible to prevent advertising without losing the ability to share modifications?&lt;/p&gt;&#xA;" OwnerUserId="37" LastEditorUserId="175" LastEditDate="2015-06-30T02:54:51.047" LastActivityDate="2015-06-30T12:40:21.787" Title="Are there open source licences that prevent advertising?" Tags="&lt;licensing&gt;&lt;advertising&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="1" />
  <row Id="288" PostTypeId="2" ParentId="287" CreationDate="2015-06-24T20:00:58.863" Score="6" Body="&lt;p&gt;Maybe such a license exists. But it would not be an Free Software or Open Source license. A FLOSS license must not discriminate or forbid any form of usage. That includes the way in which the software is distributed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The question of making or sharing modifications is conceptually unrelated to the question of usage restrictions.&lt;/p&gt;&#xA;" OwnerDisplayName="user114" LastEditorUserId="37" LastEditorDisplayName="user114" LastEditDate="2015-06-30T12:40:21.787" LastActivityDate="2015-06-30T12:40:21.787" CommentCount="4" />
  <row Id="289" PostTypeId="1" CreationDate="2015-06-24T20:06:25.357" Score="10" ViewCount="36" Body="&lt;p&gt;&lt;a href=&quot;http://www.pcworld.com/article/2938017/why-big-open-source-projects-are-fleeing-sourceforges-free-software-hub.html&quot;&gt;This article&lt;/a&gt; describes a problem with a particular online software hub:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The download-hosting site retreated after public outcry, removing the junkware it inserted into downloads of the popular GIMP image editing tool without the developers’ permission.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;In this case it was &quot;public outcry&quot; that caused this behaviour to stop. Are there any open source licences that preclude such behaviour? Is there a way of licensing that prevents legally adding junkware to software and then offering it for download?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Does this depend on whether it is claimed to be the original software, and whether it uses any protected trademarks?&lt;/p&gt;&#xA;" OwnerUserId="37" LastEditorUserId="69" LastEditDate="2015-06-30T02:07:18.490" LastActivityDate="2015-06-30T02:07:18.490" Title="Junkware and permission to redistribute modified versions" Tags="&lt;licensing&gt;&lt;bundling&gt;&lt;junkware&gt;" AnswerCount="1" CommentCount="1" />
  <row Id="290" PostTypeId="2" ParentId="289" CreationDate="2015-06-24T20:14:12.947" Score="3" Body="&lt;p&gt;If the &quot;junkware&quot; was licensed as the license required, including it may not have been nice. But it was a legal thing to do.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Any license that would prohibit any form of modification or usage would not be a Free Software or Open Source license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A license which specifically prohibits adding bundled 3rd party software with a commercial goal would not be a Free Software or Open Source license.&lt;/p&gt;&#xA;" OwnerDisplayName="user114" LastEditorDisplayName="user114" LastEditDate="2015-06-24T20:19:56.827" LastActivityDate="2015-06-24T20:19:56.827" CommentCount="2" />
  <row Id="292" PostTypeId="1" AcceptedAnswerId="300" CreationDate="2015-06-24T20:38:48.827" Score="15" ViewCount="104" Body="&lt;p&gt;This is similar to my &lt;a href=&quot;http://opensource.stackexchange.com/questions/202/should-i-include-license-text-in-a-single-file-or-all-source-files&quot;&gt;other question&lt;/a&gt;, but specifically about Copyright rather than Licensing.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Typically, each source file contains a line of the form&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;Copyright 2010-2015, Me&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Is this strictly necessary, or would a single COPYRIGHT file at the root of the repository cover all files within the project?&lt;/li&gt;&#xA;&lt;li&gt;Do I need a separate COPYRIGHT file as well, to cover the entire project as a collection, rather than individual files?&lt;/li&gt;&#xA;&lt;li&gt;If I have a copyright line in each source file, should they all reflect the same year range? Or should each file's line reflect the year-range from creation to the year it was last modified?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="29" LastActivityDate="2015-06-25T07:32:31.760" Title="Should I include a copyright line in every file?" Tags="&lt;copyright&gt;" AnswerCount="3" CommentCount="3" FavoriteCount="1" />
  <row Id="293" PostTypeId="2" ParentId="292" CreationDate="2015-06-24T21:10:56.177" Score="0" Body="&lt;p&gt;This is partially based on preference. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you are distributing / publishing something as a package with one license included there is no need to put the licence on every page. However if you are making a website you may want to reference the license / put the copyright notice on every page to make people aware of the licence your work is published under.&lt;/p&gt;&#xA;" OwnerUserId="271" LastActivityDate="2015-06-24T21:10:56.177" CommentCount="1" />
  <row Id="294" PostTypeId="5" CreationDate="2015-06-24T21:12:41.850" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-24T21:12:41.850" LastActivityDate="2015-06-24T21:12:41.850" CommentCount="0" />
  <row Id="295" PostTypeId="4" CreationDate="2015-06-24T21:12:41.850" Score="0" Body="For questions about the legal aspects of open source. Questions asking for legal advice are off-topic." OwnerUserId="98" LastEditorUserId="190" LastEditDate="2015-06-30T11:01:43.133" LastActivityDate="2015-06-30T11:01:43.133" CommentCount="0" />
  <row Id="296" PostTypeId="2" ParentId="292" CreationDate="2015-06-24T21:27:23.067" Score="1" Body="&lt;p&gt;I'm just going to add to Trevor's answer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If the license that you're using says something by this, then by all means you should follow it. Otherwise, I think a single file that explains that the copyright applies to all files in the repository should suffice.&lt;/p&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-06-24T21:27:23.067" CommentCount="0" />
  <row Id="297" PostTypeId="1" AcceptedAnswerId="301" CreationDate="2015-06-24T21:31:13.570" Score="10" ViewCount="56" Body="&lt;h2&gt;Preamble&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;There are two other questions, specifically related to &lt;a href=&quot;http://opensource.stackexchange.com/questions/202/should-i-include-license-text-in-a-single-file-or-all-source-files&quot;&gt;Licensing&lt;/a&gt; and &lt;a href=&quot;http://opensource.stackexchange.com/questions/292/should-i-include-a-copyright-line-in-every-file&quot;&gt;Copyright&lt;/a&gt;. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;In reviewing the answers and comments, I get the feeling that people generally consider the two to be the roughly same thing. If this is true, why do we worry about both?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It seems to me that they are very different things:&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;For copyright&lt;/h2&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;It exists, without me doing anything to assert it, from the moment of creation.&lt;/li&gt;&#xA;&lt;li&gt;Unless explicitly assigned, or surrendered, it persists regardless of licence chosen for the software.&lt;/li&gt;&#xA;&lt;li&gt;It grants the &lt;strong&gt;creator&lt;/strong&gt; very specific legal rights and remedies (although, these may vary by jurisdiction).&lt;/li&gt;&#xA;&lt;li&gt;Most forms of copyright have a defined duration (usually life + 'n' years).&lt;/li&gt;&#xA;&lt;li&gt;In an open source project, every contributor retains copyright in their own contributions.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h2&gt;For the Licence&lt;/h2&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;It is a legal document&lt;/li&gt;&#xA;&lt;li&gt;I have to explicitly choose, or create, the license. It does not apply automatically.&lt;/li&gt;&#xA;&lt;li&gt;It grants &lt;strong&gt;users&lt;/strong&gt; of the software specific, and limited, rights.&lt;/li&gt;&#xA;&lt;li&gt;Unless stated in the Licence itself, or until it is revoked, it remains enforceable in perpetuity.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h2&gt;Question&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Are they aspects of the same thing, or do they actually serve two different populations (producers and consumers)?&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="29" LastEditDate="2015-06-24T22:29:42.813" LastActivityDate="2015-06-24T22:29:42.813" Title="What's the difference between Copyright and Licensing?" Tags="&lt;licensing&gt;&lt;copyright&gt;" AnswerCount="2" CommentCount="2" FavoriteCount="2" />
  <row Id="298" PostTypeId="5" CreationDate="2015-06-24T21:33:19.457" Score="0" Body="&lt;p&gt;The F&lt;a href=&quot;http://www.fsf.org/&quot; rel=&quot;nofollow&quot;&gt;ree Software Foundation&lt;/a&gt; defined the term Free Software and is owner of the GNU-licenses.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-25T14:01:48.757" LastActivityDate="2015-06-25T14:01:48.757" CommentCount="0" />
  <row Id="299" PostTypeId="4" CreationDate="2015-06-24T21:33:19.457" Score="0" Body="The Free Software Foundation defined the term Free Software and is owner of the GNU-licenses." OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-25T14:02:18.847" LastActivityDate="2015-06-25T14:02:18.847" CommentCount="0" />
  <row Id="300" PostTypeId="2" ParentId="292" CreationDate="2015-06-24T21:35:58.323" Score="12" Body="&lt;p&gt;I think it's important to include both copyright and licensing information in all files: it ensures that everyone's rights are perfectly clear, regardless of what happens to the code in the future. Your project may be small and self-contained initially, but it often happens that interesting code ends up copied into multiple projects, or that projects get adopted by various people down the line. In both cases it's much easier to keep track of licenses and copyright information if it's specified in every file.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you consider large projects nowadays, many of them include code from a huge variety of other projects, some large, some small, and in some cases single files copied from various sources (including sometimes old Usenet posts!). Firefox is a good example of this; it includes files from many different projects, &lt;a href=&quot;https://github.com/jhford/tooltool&quot;&gt;some quite small&lt;/a&gt; (included in Firefox &lt;a href=&quot;http://hg.mozilla.org/mozilla-central/file/7b0df70e27ea/build/unix/build-clang/tooltool.py&quot;&gt;here&lt;/a&gt;), and it can be quite hard to keep track of all the copyright holders and license information. Having it in every single file makes license auditors' jobs much easier.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There have been cases in the past of projects which couldn't be included in Linux distributions because of a couple of files whose licenses or copyright information wasn't clear... (I don't remember specifics off the top of my head, I could find them if necessary.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Luis Villa wrote an &lt;a href=&quot;http://lu.is/blog/2012/03/17/on-the-importance-of-per-file-license-information/&quot;&gt;interesting blog post&lt;/a&gt; on the topic.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As far as the difference between copyright and licensing goes, they are different, but licensing depends on copyright: a license is only valid inasmuch as it was originally given by the copyright holder. This reinforces the importance of including copyright information: it allows future users of your code to know who wrote it, and who to contact with any copyright-related queries (including licensing questions).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Concerning copyright years, I'll defer to the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-howto.html&quot;&gt;GPL howto&lt;/a&gt; (I don't know the reasoning behind this rule but it's probably applicable beyond just the GPL): according to the FSF, copyright statements are supposed to list the years in which the project was released, not the years in which modifications occurred. So any file which is part of a release should have its copyright statement updated on release; there are a number of tools which can automate this (&lt;code&gt;copyright-update-directory&lt;/code&gt; in Emacs to name one). You can end up with different year ranges in your source files, but based on the first release they were part of.&lt;/p&gt;&#xA;" OwnerUserId="118" LastEditorUserId="118" LastEditDate="2015-06-25T07:32:31.760" LastActivityDate="2015-06-25T07:32:31.760" CommentCount="1" />
  <row Id="301" PostTypeId="2" ParentId="297" CreationDate="2015-06-24T21:36:43.103" Score="7" Body="&lt;p&gt;Copyright is the legal term used to declare and prove who owns the intellectual property (the code, text, etc.).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Licensing is the legal term used to describe the terms under which people are allowed to use the copyrighted material.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can think of it in terms of physical property, if you want, the copyright is like the &quot;deed&quot; to a house. It says you own the house. If you want, you can rent the house out to someone, and that rental agreement is the 'license'.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Copyright is different to a &quot;deed&quot; in that it is possible to license the material in different ways, to different people, all at the same time.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Like a &quot;deed&quot;, though, you can sell ownership of the code to someone else, and that would be called a copyright transfer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Only the copyright owner (or their agent) can enter in to a license agreement.&lt;/p&gt;&#xA;" OwnerUserId="80" LastActivityDate="2015-06-24T21:36:43.103" CommentCount="0" />
  <row Id="302" PostTypeId="5" CreationDate="2015-06-24T21:36:55.967" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-24T21:36:55.967" LastActivityDate="2015-06-24T21:36:55.967" CommentCount="0" />
  <row Id="303" PostTypeId="4" CreationDate="2015-06-24T21:36:55.967" Score="0" Body="an online hosting platform for git repositories" OwnerUserId="97" LastEditorUserId="97" LastEditDate="2015-06-25T14:00:27.867" LastActivityDate="2015-06-25T14:00:27.867" CommentCount="0" />
  <row Id="304" PostTypeId="1" AcceptedAnswerId="305" CreationDate="2015-06-24T21:59:58.933" Score="10" ViewCount="222" Body="&lt;p&gt;Or in more general terms: Can I take code which is licensed under a permissive open source license (like the BSD license) and distribute it under a copyleft free software license (like the GPL)?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Microsoft and Apple seem to be allowed to take BSD (or similar) licensed code and distribute it under a proprietary license.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;In addition, the permissive nature of the BSD license has allowed many other operating systems, both free and proprietary, to incorporate BSD code. For example, Microsoft Windows has used BSD-derived code in its implementation of TCP/IP and bundles recompiled versions of BSD's command-line networking tools since Windows 2000. Also Darwin, the system on which Apple's Mac OS X is built, is a derivative of 4.4BSD-Lite2 and FreeBSD. Various commercial Unix operating systems, such as Solaris, also contain varying amounts of BSD code.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&quot;http://en.wikipedia.org/w/index.php?title=Berkeley_Software_Distribution&amp;amp;oldid=664036786&quot;&gt;Wikipedia&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But then there is this story from 2007 where some BSD people got mighty mad at linux kernel developers who took BSD licensed code and &quot;relicensed&quot; it under GPL.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;KernelTrap has an interesting article in which Theo de Raadt discusses the legal implications of the recent relicensing of OpenBSD's BSD licensed Atheros driver under the GPL. De Raadt says, &quot;it has been like pulling teeth since (most) Linux wireless guys and the SFLC do not wish to admit fault. I think that the Linux wireless guys should really think hard about this problem, how they look, and the legal risks they place upon the future of their source code bodies.&quot; He stressed that the theory that BSD code can simply be relicensed to the GPL without making significant changes to the code is false, adding, &quot;'in their zeal to get the code under their own license, some of these Linux wireless developers have broken copyright law repeatedly. But to even get to the point where they broke copyright law, they had to bypass a whole series of ethical considerations too.&quot;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;&lt;a href=&quot;http://undeadly.org/cgi?action=article&amp;amp;sid=20070913014315&quot;&gt;OpenBSD Journal&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I have to admit that I do not fully understand the legal implication of some of the terms. For example: incorporate, derive/derivative, bundle, recompile, relicense.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note that I used the term &quot;distribute&quot; in my question. A term which is not used in both the wikipedia and the undeadly.org article. Note also that I specifically am not asking whether I can &lt;em&gt;relicense&lt;/em&gt; the code. As far as I know I can only relicense the code if I own the copyright of the code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What I mean with &quot;distribute&quot; is roughly as follows:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Download BSD licensed code.&lt;/li&gt;&#xA;&lt;li&gt;Put GPL license file in root of project and GPL header in every relevant file and add note in README that the code is also licensed under GPL. Note that the BSD license is not removed.&lt;/li&gt;&#xA;&lt;li&gt;???&lt;/li&gt;&#xA;&lt;li&gt;Upload the code to some website for everyone to download.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;As far as I understand a downloader now has the option to take the code under the terms of the BSD license or under the terms of the GPL license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If that is not allowed then please explain what Microsoft and Apple are doing.&lt;/p&gt;&#xA;" OwnerUserId="115" LastEditorUserId="145" LastEditDate="2015-06-25T07:23:57.193" LastActivityDate="2015-07-07T08:57:23.663" Title="Can I take BSD licensed code and distribute it under GPL?" Tags="&lt;gpl&gt;&lt;copyleft&gt;&lt;permissive&gt;&lt;bsd&gt;" AnswerCount="4" CommentCount="1" FavoriteCount="2" />
  <row Id="305" PostTypeId="2" ParentId="304" CreationDate="2015-06-24T22:10:58.450" Score="6" Body="&lt;p&gt;I think you're technically allowed to do it, but you couldn't really enforce it: anyone who obtained a copy of the code you're distributing could re-use the BSD-licensed code under the provisions of the BSD license only, and the GPL wouldn't apply. (The GPL would apply to anything you hold the copyright for, and to the agregate; &lt;em&gt;i.e.&lt;/em&gt; resulting binaries would be GPL. But for that to be meaningful you'd have to add code of your own...)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What Microsoft and Apple are doing is complying with the BSD license.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Redistributions of source code must retain the above copyright&#xA;      notice, this list of conditions and the following disclaimer.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;If they don't redistribute source code then that doesn't apply. (Nothing forces them to redistribute source code; that's why the BSD license is called a permissive license.)&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Redistributions in binary form must reproduce the above copyright&#xA;      notice, this list of conditions and the following disclaimer in&#xA;      the documentation and/or other materials provided with the&#xA;      distribution.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;You'll find that Microsoft and Apple products which incorporate BSD code do satisfy this, either in the documentation, or typically in the &quot;About&quot; box.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The name of the author may not be used to&#xA;      endorse or promote products derived from this software without&#xA;      specific prior written permission.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Somehow I doubt Microsoft or Apple would be interested in doing this anyway.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The final clause is the lack of warranty, which everyone disclaims anyway, so there's no change there either.&lt;/p&gt;&#xA;" OwnerUserId="118" LastActivityDate="2015-06-24T22:10:58.450" CommentCount="1" />
  <row Id="306" PostTypeId="2" ParentId="297" CreationDate="2015-06-24T22:20:56.860" Score="4" Body="&lt;p&gt;A notable exception to your &quot;every contributor retains copyright in their own contributions&quot;:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Many large projects use a &lt;a href=&quot;https://en.wikipedia.org/wiki/Contributor_License_Agreement&quot; rel=&quot;nofollow&quot;&gt;Contributor License Agreement&lt;/a&gt; that specifies that copyright for contributed code is transferred from the code's author to the project/organization.&lt;/p&gt;&#xA;" OwnerUserId="19" LastActivityDate="2015-06-24T22:20:56.860" CommentCount="1" />
  <row Id="307" PostTypeId="1" AcceptedAnswerId="317" CreationDate="2015-06-24T22:27:04.963" Score="8" ViewCount="74" Body="&lt;p&gt;If I publish something on my website is a form of copyright automatically placed on that text? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example I know if you specifically say &quot;This is published under [insert some cc license here]&quot; then the copyright / usage rights are changed based on the terms of the license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However what I don't know is what kind of copyright / usage rights are automatically applied to text?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="29" LastEditDate="2015-06-24T22:46:28.243" LastActivityDate="2015-06-24T23:57:23.613" Title="Is copyright automatic?" Tags="&lt;copyright&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="2" />
  <row Id="309" PostTypeId="2" ParentId="280" CreationDate="2015-06-24T22:35:01.430" Score="0" Body="&lt;p&gt;While the random numbers can't be copyrighted, the use in which they were intended can. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example someone might copyright a piece of text: &quot;Hello my name is Trevor&quot;. While you can't use those words as me or in my place, someone by the name of Trevor is still allowed to use those words in that order. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Nobody can take those numbers and use them as CA Certificates. However, you can still use those numbers in that order, as long as you're not using the number for the purpose used on that page.&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="98" LastEditDate="2015-06-24T23:01:38.663" LastActivityDate="2015-06-24T23:01:38.663" CommentCount="1" />
  <row Id="310" PostTypeId="1" AcceptedAnswerId="314" CreationDate="2015-06-24T22:44:19.393" Score="8" ViewCount="114" Body="&lt;p&gt;Is Open Source Software a subset of free software?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I was recently asked this and realized I was unsure the exact answer. I understand that free software is not a type of open source software, but I am unsure if the reverse is true or not.&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="190" LastEditDate="2015-06-30T13:34:45.920" LastActivityDate="2015-07-01T04:15:13.393" Title="Is Open Source Software a subset of free software?" Tags="&lt;terminology&gt;&lt;philosophy&gt;" AnswerCount="3" CommentCount="2" FavoriteCount="1" />
  <row Id="311" PostTypeId="2" ParentId="307" CreationDate="2015-06-24T22:50:25.733" Score="4" Body="&lt;p&gt;Copyright exists from the moment you put 'pen to paper' (figuratively speaking). The means of publication does not generally determine your copyright rights.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The actual rules and rights of Copyright vary based on jurisdiction, but in general:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Anything you create is subject to copyright laws&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;This post&lt;/li&gt;&#xA;&lt;li&gt;Every email you send&lt;/li&gt;&#xA;&lt;li&gt;A letter to your friend&lt;/li&gt;&#xA;&lt;li&gt;The menu at your favorite restaurant&lt;/li&gt;&#xA;&lt;li&gt;At the extreme, the shopping list you just wrote&lt;/li&gt;&#xA;&lt;li&gt;The doodles on your notepad&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;You may also want to look at &lt;a href=&quot;http://opensource.stackexchange.com/questions/297/whats-the-difference-between-copyright-and-licensing&quot;&gt;this question&lt;/a&gt; for the differences between Copyright and Licensing&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Text of any kind generally gains the same copyright protections as a full length novel.&lt;/p&gt;&#xA;" OwnerUserId="29" LastActivityDate="2015-06-24T22:50:25.733" CommentCount="0" />
  <row Id="312" PostTypeId="1" AcceptedAnswerId="316" CreationDate="2015-06-24T23:00:18.897" Score="8" ViewCount="47" Body="&lt;p&gt;I was reading a previously asked question, &lt;a href=&quot;http://opensource.stackexchange.com/questions/261/can-i-distribute-related-software-and-hardware-under-the-same-license&quot;&gt;Can I distribute related software and hardware under the same license?&lt;/a&gt;, and then it occurred to me that hardware have patents. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Does this mean that you cant release hardware under lets say a Creative Commons license?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="145" LastEditDate="2015-06-25T08:40:40.667" LastActivityDate="2015-06-25T08:40:40.667" Title="Can hardware have a license?" Tags="&lt;licensing&gt;&lt;hardware&gt;" AnswerCount="1" CommentCount="1" />
  <row Id="314" PostTypeId="2" ParentId="310" CreationDate="2015-06-24T23:11:11.457" Score="7" Body="&lt;p&gt;From &lt;a href=&quot;http://opensource.org/faq#free-software&quot; rel=&quot;nofollow&quot;&gt;Open Source Initiatives FAQ&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&quot;Free software&quot; and &quot;open source software&quot; are two terms for the same thing: software released under licenses that guarantee a certain, specific set of freedoms.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Open Source arose from people who supported the FSF, but later branched out over the decision of philosophy and marketing. There are differences, of course, such as the FSF has a 4-point definition for software freedom, while the OSI has 10. The FSF is sort of like a parent to the OSI.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Generally, we refer to software that is with Free Software and Open Source to be FOSS (Free and Open Source Software), or FLOSS (Free/Libre/Open Source Software)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Pandya raised &lt;a href=&quot;https://www.gnu.org/philosophy/open-source-misses-the-point.en.html&quot; rel=&quot;nofollow&quot;&gt;this&lt;/a&gt; in chat: Looks like something where the FSF doesn't agree with Open Source.&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-06-25T18:06:47.977" LastActivityDate="2015-06-25T18:06:47.977" CommentCount="4" />
  <row Id="315" PostTypeId="1" AcceptedAnswerId="319" CreationDate="2015-06-24T23:42:39.620" Score="5" ViewCount="59" Body="&lt;p&gt;I was wondering, are there rules regarding putting a license onto a license, for example if I had a license and I applied it with a license, in many cases this would cause a loop hole. Is there any way to fix this?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-06-30T02:09:40.090" LastActivityDate="2015-06-30T02:09:40.090" Title="Can you apply a license to a license?" Tags="&lt;licensing&gt;" AnswerCount="1" CommentCount="1" />
  <row Id="316" PostTypeId="2" ParentId="312" CreationDate="2015-06-24T23:52:39.693" Score="8" Body="&lt;p&gt;&lt;strong&gt;Yes.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Examples include:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Chumby HDK&lt;sup&gt;1&lt;/sup&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.tapr.org/ohl.html&quot;&gt;The TAPR Open Hardware License&lt;/a&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/li&gt;&#xA;&lt;li&gt;The MIT License&lt;sup&gt;2&lt;/sup&gt;&lt;/li&gt;&#xA;&lt;li&gt;Various BSD licenses&lt;sup&gt;2&lt;/sup&gt;&lt;/li&gt;&#xA;&lt;li&gt;Creative Commons Attribution 3.0 and Creative Commons Attribution ShareAlike 3.0&lt;sup&gt;2&lt;/sup&gt;&lt;/li&gt;&#xA;&lt;li&gt;GPL&lt;sup&gt;2&lt;/sup&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Note that the last four can also be used for software. None of the examples given are exclusively for hardware, with the exception of the TAPR Open Hardware License.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So you can, in fact, release hardware under a Creative Commons license!&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;1 This was given as an example &lt;a href=&quot;http://www.ladyada.net/library/openhardware/license.html&quot;&gt;here&lt;/a&gt;, though not necessarily endorsed.&lt;/sup&gt;&#xA;&lt;br&gt;&#xA;&lt;sup&gt;2 These were described and compared &lt;a href=&quot;http://www.inmojo.com/licenses/&quot;&gt;here&lt;/a&gt;.&lt;/sup&gt;&lt;/p&gt;&#xA;" OwnerUserId="145" LastEditorUserId="145" LastEditDate="2015-06-25T00:25:13.053" LastActivityDate="2015-06-25T00:25:13.053" CommentCount="0" />
  <row Id="317" PostTypeId="2" ParentId="307" CreationDate="2015-06-24T23:57:23.613" Score="16" Body="&lt;p&gt;Copyright is automatic in all countries that have ratified the &lt;a href=&quot;https://en.wikipedia.org/wiki/Berne_Convention&quot;&gt;Berne convention&lt;/a&gt;. That's most of them. Copyright applies to any creative work. The interpretation of creative work is pretty broad. For example a mugshot isn't creative work but any photo that involves even the slightest attention to posing, light, choice of subject, etc. is a creative work. A shopping list is generally not creative work, but as soon as there are multiple ways to convey the same idea, a text expressing that idea is a creative work (the idea itself, however, is not subject to copyright). Copyright exists whether the author of the work is identified or not, and whether a copyright notice is present or not.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Copyright&quot;&gt;Copyright&lt;/a&gt; is not a right to copy — in fact it's pretty much the opposite: it's a form of exclusive control that the author has over their work. &lt;strong&gt;Copyright forbids anyone other than the author from making copies of the work&lt;/strong&gt;, except in ways that the author has chosen to permit, and except in some very narrow ways that vary somewhat between jurisdiction and are called &lt;a href=&quot;https://en.wikipedia.org/wiki/Fair_use&quot;&gt;fair use&lt;/a&gt; in the United States.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A &lt;a href=&quot;https://en.wikipedia.org/wiki/License&quot;&gt;license&lt;/a&gt; is basically a way in which the author of a work authorizes others to make copies of the work and deal with them in a certain way. A license is a type of legal contract (&lt;a href=&quot;http://www.law.washington.edu/lta/swp/law/contractvlicense.html&quot;&gt;more or less&lt;/a&gt;). Typically a license may allow dealing with the work in ways that are not allowed by default, in particular making multiple copies. Conversely a license may forbid dealing with the work in ways that are allowed by default, such as modifying the work¹.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Certain ways of distributing a work effectively carry an implicit license. For example, when you buy a book, you get the right to use that book, to resell it, to write annotations in the margin, etc. When a work is displayed on a web page, this allows anyone to view it in a web browser and (in most jurisdictions, though jurisprudence may still not be fully settled) to download it for offline perusal and edit that offline copy (but not to redistribute the downloaded copy to someone else). Details may vary depending on the type of work and the jurisdiction.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is why contributing to an open source work always requires an explicit license grant. In the absence of a license, a creative work or a derivative of it cannot legally be redistributed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;¹ &lt;sub&gt; In the absence of a license, modifying a work may or may not be allowed depending on the type of work, the type of modification and the jurisdiction. &lt;/sub&gt;  &lt;/p&gt;&#xA;" OwnerUserId="60" LastActivityDate="2015-06-24T23:57:23.613" CommentCount="6" />
  <row Id="318" PostTypeId="2" ParentId="280" CreationDate="2015-06-25T00:13:28.900" Score="3" Body="&lt;p&gt;A certificate is not a creative work. It is a strictly codified representation of a piece of information. Copyright does not apply.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In some jurisdictions, there is a form of copyright for databases, i.e. collections of items which on their own may not be (and usually are not) subject to copyright. This is sometimes known as &lt;a href=&quot;https://en.wikipedia.org/wiki/Sui_generis_database_right&quot; rel=&quot;nofollow&quot;&gt;database right&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In US law, database right is distinct from copyright, and databases are not legally protected — anyone can copy them. In the EU, databases are legally protected.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;At the European Union level, the &lt;a href=&quot;https://en.wikipedia.org/wiki/Database_Directive&quot; rel=&quot;nofollow&quot;&gt;database directive&lt;/a&gt; declares that collections that are an “intellectual creation” where the author made a selection are protected by copyright (but with somewhat different rules for the European equivalent of fair use). Mozilla's list of CA certificates falls under this category. Databases that aim to be complete are protected by a distinct database right.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Thus you can legally ignore any licensing terms if you obtain the Mozilla CA certificate database in a US jurisdiction. If you obtain it in an EU jurisdiction, Mozilla is entitled to prevent you from redistributing the database. They could restrict who had access to the database by not allowing everybody on the Internet to download it, if they so wanted. Since the database is provided with a license notice, if you download it, you are entitled to deal with the database only in ways that are allowed by this license. In other jurisdictions, consult the applicable laws.&lt;/p&gt;&#xA;" OwnerUserId="60" LastActivityDate="2015-06-25T00:13:28.900" CommentCount="0" />
  <row Id="319" PostTypeId="2" ParentId="315" CreationDate="2015-06-25T00:16:26.513" Score="10" Body="&lt;p&gt;A license is copyrightable since it is a substantial piece of text, so yes of course a copyright license can be applied to it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As an example, this is how the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;GPL 3 license text&lt;/a&gt; is licensed (taken from &lt;a href=&quot;http://programmers.stackexchange.com/q/241583/81527&quot;&gt;this question&lt;/a&gt; on Programmers.SE):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Copyright © 2007 Free Software Foundation, Inc. &lt;a href=&quot;http://fsf.org/&quot;&gt;http://fsf.org/&lt;/a&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;You might notice that this license is &lt;em&gt;less free&lt;/em&gt; than the terms of the GPL itself, but this is understandable as they want to protect the brand of GPL, and prevent people from changing this license and keep calling it GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'm not sure why you think being able to change the license is a loophole; the license is a legal text that if you modify unilaterally, you void the license agreement between yourself and whoever you received it from. Sure you can use the modified license elsewhere, but it doesn't mean you can unilaterally change the terms of the original license.&lt;/p&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-06-25T00:16:26.513" CommentCount="1" />
  <row Id="320" PostTypeId="2" ParentId="270" CreationDate="2015-06-25T00:37:50.527" Score="4" Body="&lt;p&gt;In practice, no. When someone obtains a copy of an open source work from the author, the license is effectively a contract where the author allows the recipient to deal with the work in many ways including use, redistribution and modification. The author is not allowed to unilaterally terminate this contract.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The author is of course allowed to stop doing any maintenance, to pull down their servers, and generally stop supporting anyone still using or wishing to obtain the work. They're also allowed to make a derivative of the original work and to not distribute the derivative under an open source license¹. But as long as someone else has a copy of the open source version and is willing to redistribute it, the author cannot prevent that.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In theory, some jurisdictions allow the author of a work to rescind their work. This is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Moral_rights&quot; rel=&quot;nofollow&quot;&gt;moral right&lt;/a&gt;, alongside the right to be recognized as the author and a few others, distinct from the economic rights (which are basically the right to control who may have copies of the work). US law has no moral rights. French law does, and in France, moral rights, unlike economic rights, cannot be contracted away (any contractual clause to this effect would be automatically void). For example, the author of a book may demand that the publisher stop distributing copies (though they cannot demand that buyers of the book turn their copies in). A painter may demand their painting back to destroy it. Of course the author must then compensate the publisher or the buyer of the painting for their loss, which makes rescinding difficult in practice. Continuing on French law, for software, unlike other forms of copyrighted works, there is no right to rescind unless explicitly mentioned in a contract.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The absence of a practical possibility of rescinding a work is one of the important aspects of open source licenses. The fact that the source code (i.e. the prefered form of modification) will always be available means that a user of the work will always be able to continue maintenance if the original author stops doing so under satisfactory conditions. This is sometimes known as the “fork test” for open source licenses: they guarantee that no matter what the original author does, someone else can adopt the project and maintain their own version of it.&lt;/p&gt;&#xA;" OwnerUserId="60" LastActivityDate="2015-06-25T00:37:50.527" CommentCount="0" />
  <row Id="321" PostTypeId="2" ParentId="281" CreationDate="2015-06-25T00:49:41.310" Score="2" Body="&lt;p&gt;You are responsible for replacing it, as the license states, “to the extent reasonably practicable”.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Since the law and the contract do not provide any other indication, the only way to formally understand what “reasonably practicable” means is to study existing jurisprudence. In other words, it's up to judges to decide. I'm not aware of any existing jurisprudence on this particular topic.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, if you distribute printed flyers with the old URL, you are clearly not expected to fix the flyers that you handed out before the URL changed. But if you print a new batch where you've modified other parts of the text, and you were aware of the URL change, it's plausible that you could be required to update the URL.&lt;/p&gt;&#xA;" OwnerUserId="60" LastActivityDate="2015-06-25T00:49:41.310" CommentCount="0" />
  <row Id="322" PostTypeId="2" ParentId="202" CreationDate="2015-06-25T01:08:22.507" Score="3" Body="&lt;p&gt;I'm not aware of any jurisdiction that has a law that explicitly states that a license notice must be included in each file, or conversely that it need not be included in each file.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In all countries that have ratified the &lt;a href=&quot;https://en.wikipedia.org/wiki/Berne_Convention&quot; rel=&quot;nofollow&quot;&gt;Berne convention&lt;/a&gt;, all works are subject to copyright, whether they include a copyright notice or not. (A copyright notice may help, especially when seeking damages, but it is not required.) Absent a license, someone holding a legitimate copy of the work may deal with it in most ways (use it, modify it, etc.) but may not redistribute it. So if the license cannot be found, that's to the detriment of the recipient, not of the author.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The main risk if a file has no license notice is that the author A provides a user B with a complete multi-file work including a file stating the license terms, and B redistributes (lawfully, assuming an open source license) a single file to C without conveying the license terms to C. In this case, assuming a license that requires further distribution to be under the terms of the same license (which is the case for many open source licenses), C has not received a lawful copy of the work, since B's distribution to C would be a violation of the license. This is to the detriment of C, because they would then in principle not allowed to use the work in any way, lacking a lawful copy.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Including a reference to the license in each file makes it more likely that in such circumstances, C will be properly informed of the provenance and the license of the collection of files. It's a good idea, but there is no strict legal requirement.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Including a copyright notice in each file is also not required, since copyright is automatic as explained above. However it can be a good idea because a copyright notice can, in some cases, be circumstantial evidence of authorship and may allow the author to claim more damages in case of copyright violation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One more bit that is often lumped with the license is a warranty disclaimer. That one's of a different nature, because unlike the bulk of the license, the warranty disclaimer protects the author. Warranty on works covered by copyright (such as software) is a bit of a strange beast — traditional law considers works covered by copyright to be artistic, not functional, and thus not subject to warranties. I'm not aware of jurisprudence regarding warranty statements on software, but it'll have to happen sooner or later. It's not even clear that typical warranty statements on software (whether open source or not) have any legal effect. However, if in doubt, this is one that you should include, since it protects the author if it's at all valid.&lt;/p&gt;&#xA;" OwnerUserId="60" LastActivityDate="2015-06-25T01:08:22.507" CommentCount="0" />
  <row Id="323" PostTypeId="1" CreationDate="2015-06-25T01:12:43.793" Score="5" ViewCount="47" Body="&lt;p&gt;If GPL and BSD code are combined in a piece of software, the entire work comes under GPL but its BSD portions can still be obtained under that license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What if the size of the GPL portion is exactly 0? If I take an existing BSD software, and without including any GPL code, can I then redistribute the software under GPL? Or am I required to add a copyrightable portion of GPL code, thereby turning the entire work into GPL?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To be clear, I am &lt;strong&gt;not interested in concealing the BSD origin&lt;/strong&gt;. Users will be fully aware that the software is also available under BSD, and its copyright text will be available.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you're wondering, there are some weird places that accept GPL but not BSD, despite the fact that BSD is GPL-compatible, and I was wondering if and how this restriction can be overcome.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Related questions:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://opensource.stackexchange.com/q/304/175&quot;&gt;Can I take BSD licensed code and distribute it under GPL?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://opensource.stackexchange.com/q/35/175&quot;&gt;If I have GPL code included in my project, can I release it as BSD?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-06-25T09:12:47.497" Title="Can I redistribute BSD software under GPL with no changes?" Tags="&lt;licensing&gt;&lt;distribution&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="324" PostTypeId="1" CreationDate="2015-06-25T01:28:05.583" Score="8" ViewCount="55" Body="&lt;p&gt;Permissive licenses like MIT only require that you include the license text if you redistribute.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;CC licenses that have the BY part require that the original authors are attributed, but in flexible ways.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Is it possible to combine e.g. MIT with CC-BY, and redistribute under CC-BY?&lt;/strong&gt; That is, with a custom attribution requirement that the MIT license must be retained.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The CC licenses have a list of &lt;a href=&quot;https://wiki.creativecommons.org/wiki/License_Versions#Detailed_attribution_comparison_chart&quot;&gt;attribution types here&lt;/a&gt;; versions 1 through 4 require &quot;Copyright notice if supplied&quot;. Do permissive license texts constitute a &quot;copyright notice&quot;? If not, are there other items in that list that license texts can fall under?&lt;/p&gt;&#xA;" OwnerUserId="175" LastEditorUserId="174" LastEditDate="2015-06-26T13:30:39.983" LastActivityDate="2015-06-26T15:30:30.990" Title="Are permissive licenses (MIT/BSD/zlib) compatible with CC-BY?" Tags="&lt;creative-commons&gt;&lt;license-compatibility&gt;" AnswerCount="2" CommentCount="0" />
  <row Id="325" PostTypeId="2" ParentId="183" CreationDate="2015-06-25T01:30:04.447" Score="4" Body="&lt;p&gt;You can definitely select who contributes to your project. This violates neither the letter nor the spirit of any of the common definitions of free/libre/open-source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Anyone may &lt;em&gt;use&lt;/em&gt; your open source project, even if you don't like what they do with it. That's freedom 0 in the &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.en.html&quot; rel=&quot;nofollow&quot;&gt;FSF definition&lt;/a&gt;, clause 1 in the &lt;a href=&quot;http://opensource.org/osd-annotated&quot; rel=&quot;nofollow&quot;&gt;Open Source Definition&lt;/a&gt;, guideline 1 in the &lt;a href=&quot;https://www.debian.org/social_contract#guidelines&quot; rel=&quot;nofollow&quot;&gt;DFSG&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Anyone may make a copy of your open source project and modify it in any way they like, even if you don't like the way they modify it. That's freedom 1, clause 3, guideline 3.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You do retain the right to manage your project as you see fit. All open source projects, even the ones that have a publicly visible source repository and an address to submit patches, validate what modifications are accepted, and reject modifications that they don't like. Not all open source projects do accept patches — some just release a new version now and then and do all their development behind closed doors. Public repositories are common nowadays, but this wasn't always the case — in the 1990s, even GNU software was developed behind closed doors, only new releases were open source!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note in particular that you retain the right to be identified as the author of what you wrote, and conversely of not being identified as the author of what you didn't write. Many common licenses and common definitions of free/libre/open-source allow the original author to make reasonable requirements on attribution, for example:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;blockquote&gt;&#xA;  &lt;p&gt;rules about how to package a modified version are acceptable (…). Thus, it is acceptable for the license to require that you change the name of the modified version, remove a logo, or identify your modifications as yours. (&lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.en.html&quot; rel=&quot;nofollow&quot;&gt;FSD&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Clause 4 (“Integrity of The Author's Source Code”) of the &lt;a href=&quot;https://www.debian.org/social_contract#guidelines&quot; rel=&quot;nofollow&quot;&gt;DFSG&lt;/a&gt; and the &lt;a href=&quot;http://opensource.org/osd-annotated&quot; rel=&quot;nofollow&quot;&gt;OSD&lt;/a&gt;. This clause allows the practice that is common in some circles to require that modified versions of a work carry a different name. For example, the &lt;a href=&quot;http://www.latex-project.org/lppl.txt&quot; rel=&quot;nofollow&quot;&gt;LaTeX Project Public License&lt;/a&gt; requires third-party modified versions of packages to have a different name unless they are compatible with the original (§6.a).&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;blockquote&gt;&#xA;  &lt;p&gt;You may convey a work based on the Program (…) provided that (…) the work must carry prominent notices stating that you modified it (&lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.en.html&quot; rel=&quot;nofollow&quot;&gt;GNU GPL&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Independently of copyright law, laws about &lt;a href=&quot;https://en.wikipedia.org/wiki/Defamation&quot; rel=&quot;nofollow&quot;&gt;libel&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Fraud&quot; rel=&quot;nofollow&quot;&gt;fraud&lt;/a&gt; would generally prevent someone else from claiming that their modified version is your project.&lt;/p&gt;&#xA;" OwnerUserId="60" LastActivityDate="2015-06-25T01:30:04.447" CommentCount="0" />
  <row Id="326" PostTypeId="1" AcceptedAnswerId="327" CreationDate="2015-06-25T03:05:02.430" Score="1" ViewCount="33" Body="&lt;p&gt;Suppose I place work I publish under two licenses.&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;If the two have conflicting attributes which property should be used.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Can you specify which properties you want two be applied from the two licenses?&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="271" LastEditorUserId="190" LastEditDate="2015-06-30T09:00:36.323" LastActivityDate="2015-06-30T09:00:36.323" Title="Dual license compatibility" Tags="&lt;licensing&gt;&lt;license-compatibility&gt;&lt;multi-licensing&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="327" PostTypeId="2" ParentId="326" CreationDate="2015-06-25T03:27:00.220" Score="4" Body="&lt;p&gt;&lt;strong&gt;No, the two licenses don't have to be compatible&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you are legally allowed to dual license something, usually because you are the copyright holder, you can pick any two licenses, even if they conflict. As a matter of fact, dual licensing is usually used to &lt;em&gt;get around license conflicts&lt;/em&gt;, that is, by offering something under two conflicting licenses. One of the most notable examples is Mozilla Firefox, which is &lt;a href=&quot;https://en.wikipedia.org/wiki/Firefox#Licensing&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;tri-licensed&lt;/em&gt; under MPL, GPL and LGPL&lt;/a&gt;. This was done because MPL, the original license it used, is incompatible with GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When you dual license, it doesn't mean users must follow both licenses, especially if the licenses conflict, this would be impossible to do anyway. Instead, you may choose the license under which to receive the software. When you redistribute in turn, it is courteous (although not legally required) to pass on that dual licensing, as doing so does not limit the options of your users.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also, you cannot &quot;pick and choose&quot; clauses within the two licenses, as you are creating a third license that the original author never agreed to.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is a different situation to &lt;em&gt;sublicensing&lt;/em&gt; or &lt;em&gt;relicensing&lt;/em&gt;.&lt;/p&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-06-25T03:27:00.220" CommentCount="0" />
  <row Id="328" PostTypeId="5" CreationDate="2015-06-25T03:41:07.873" Score="0" Body="&lt;p&gt;Copyrighting is the principle of assigning automatic rights over their work to content creators. These rights are in place to prevent work being stolen and used without permission for uses which perhaps the author doesn't want it to be used for.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is very relevant to open-sourcing, because the principle of adding an open-source license is to give back to the community many of the freedoms (though not all) that they would enjoy without copyright.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="29" LastEditDate="2015-06-27T18:51:37.627" LastActivityDate="2015-06-27T18:51:37.627" CommentCount="0" />
  <row Id="329" PostTypeId="4" CreationDate="2015-06-25T03:41:07.873" Score="0" Body="Use this tag on questions about the copyrighting process and principles. Questions solely pertaining to general copyright are off topic." OwnerUserId="29" LastEditorUserId="69" LastEditDate="2015-07-21T17:37:34.547" LastActivityDate="2015-07-21T17:37:34.547" CommentCount="0" />
  <row Id="330" PostTypeId="1" CreationDate="2015-06-25T04:20:51.657" Score="13" ViewCount="65" Body="&lt;p&gt;If I suddenly die, my small open source project will survive (after all, the source code is open), but it can be hurt quite badly: The project's web domain is owned by me and it could become cybersquatted.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;We are just a bunch of individuals who have never met. There is no overall organization/foundation. Patches get submitted by companies and individuals who have their own agenda that might or might not include openness.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Is there a commonly established practice to handle this?&lt;/li&gt;&#xA;&lt;li&gt;For instance, is there a kind of open source foundation that would accept to handle domain ownership/fallback in some way? In normal times it would do nothing, but when I die it would identify the core developers, contact them and established a transfer strategy.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="199" LastActivityDate="2015-06-25T21:32:50.870" Title="How to make my open source project's web domain bus-proof?" Tags="&lt;sustainability&gt;&lt;website&gt;" AnswerCount="1" CommentCount="5" FavoriteCount="0" />
  <row Id="331" PostTypeId="5" CreationDate="2015-06-25T05:08:13.707" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-25T05:08:13.707" LastActivityDate="2015-06-25T05:08:13.707" CommentCount="0" />
  <row Id="332" PostTypeId="4" CreationDate="2015-06-25T05:08:13.707" Score="0" Body="For questions about technology for delivering voice communications and multimedia sessions over Internet Protocol (IP) networks.&#xD;&#xA;" OwnerUserId="211" LastEditorUserId="211" LastEditDate="2015-07-04T08:02:44.947" LastActivityDate="2015-07-04T08:02:44.947" CommentCount="0" />
  <row Id="333" PostTypeId="2" ParentId="330" CreationDate="2015-06-25T05:21:27.953" Score="5" Body="&lt;p&gt;&lt;strong&gt;You might be able to try one of the following.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use a shared repository like GitHub or Google Code or SourceForge and then your domain name is not required for the project to continue i.e. graceful degradation of service.&lt;/li&gt;&#xA;&lt;li&gt;Try gifting the domain name to SourceForge or something (might need to pay for a few years domain ownership first).&lt;/li&gt;&#xA;&lt;li&gt;Don't rely on the domain name at all.&lt;/li&gt;&#xA;&lt;li&gt;Gift the code to Apache or Eclipse if you can.&lt;/li&gt;&#xA;&lt;li&gt;Gift the code to FSF if GPLv3 or LGPL is OK.&lt;/li&gt;&#xA;&lt;li&gt;Put it in your will / talk to your next of kin about it.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;This is a real issue, but it also applies to company-backed open source and proprietary code, I have tracked down code that is supported by companies that don't exist / bought by Medical Device Manufacturers (experience talking), Open Source that is now off the web (yes it can happen) and similar.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And does it really matter in the end?&lt;/p&gt;&#xA;" OwnerUserId="185" LastEditorUserId="98" LastEditDate="2015-06-25T21:32:50.870" LastActivityDate="2015-06-25T21:32:50.870" CommentCount="6" />
  <row Id="334" PostTypeId="1" CreationDate="2015-06-25T06:03:52.597" Score="6" ViewCount="187" Body="&lt;p&gt;Are there any legal consequences that I could encounter with?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If it's possible, what should I keep a close attention to while I'm doing it?&lt;/p&gt;&#xA;" OwnerUserId="123" LastEditorUserId="98" LastEditDate="2015-07-08T06:58:28.873" LastActivityDate="2015-07-08T06:58:28.873" Title="Can I develop closed source software with an open source development environment?" Tags="&lt;licensing&gt;&lt;development&gt;&lt;law&gt;&lt;proprietary-code&gt;" AnswerCount="3" CommentCount="4" ClosedDate="2015-06-25T12:11:59.167" />
  <row Id="335" PostTypeId="1" CreationDate="2015-06-25T06:09:36.623" Score="1" ViewCount="40" Body="&lt;p&gt;Lets say that I want to use Linux kernel, but I want to create some proprietary code on top of it (like create a Linux distribution) and later on sell it combined with the Linux kernel (like Mac did on top of FreeBSD). Is it possible to do so?&lt;/p&gt;&#xA;" OwnerUserId="123" LastActivityDate="2015-06-25T06:22:41.530" Title="How can I build proprietary software on top of open source software?" Tags="&lt;proprietary-code&gt;&lt;programming&gt;" AnswerCount="1" CommentCount="1" ClosedDate="2015-06-25T08:07:42.420" />
  <row Id="336" PostTypeId="2" ParentId="334" CreationDate="2015-06-25T06:11:20.040" Score="3" Body="&lt;p&gt;Assuming you are simply using the development environment, and are not using any code samples or libraries, yes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The only sticky situation could be the compiler, especially if it links your code to a standard library.  Check to make sure the compiler is either purely transformative (ie. turns your source code directly into object code), or has an explicit exemption for this (eg. &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html&quot; rel=&quot;nofollow&quot;&gt;GCC's exemption for libstdc++&lt;/a&gt;) permitting the standard library to be linked with closed-source software.&lt;/p&gt;&#xA;" OwnerUserId="240" LastActivityDate="2015-06-25T06:11:20.040" CommentCount="0" />
  <row Id="337" PostTypeId="2" ParentId="335" CreationDate="2015-06-25T06:16:53.220" Score="3" Body="&lt;p&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/Linux_kernel&quot; rel=&quot;nofollow&quot;&gt;Linux kernel&lt;/a&gt; was released under the &lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_General_Public_License&quot; rel=&quot;nofollow&quot;&gt;GNU General Public License&lt;/a&gt; version 2 (GPLv2). This means that you can build code on top of it, but as soon as you distribute it (e.g. you distribute software combined with the Linux kernel), your software needs to be distributed under the GPLv2 too (or &lt;a href=&quot;http://opensource.stackexchange.com/questions/1/how-can-i-determine-if-two-open-source-licenses-are-compatible-with-each-other/3#3&quot;&gt;a license compatible with GPLv2&lt;/a&gt;, such as GPLv3 or AGPLv3).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can charge money for support, for packaging your software (back in the old days, people charged money to put the distribution on a CD), for maintenance,... but all of this excludes distributing your software as closed source, proprietary code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Your comparison &quot;like Mac did on top of FreeBSD&quot; isn't correct. You're comparing &lt;a href=&quot;http://opensource.stackexchange.com/questions/88/how-can-large-open-source-projects-be-monetized/210#210&quot;&gt;a permissive license versus a copyleft license&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; I interpret &quot;create on top&quot; as:  your code doesn't merely &lt;em&gt;use&lt;/em&gt; the kernel. Your code is linked to the kernel. Your code doesn't work without the kernel.&lt;/p&gt;&#xA;" OwnerUserId="27" LastEditorUserId="27" LastEditDate="2015-06-25T06:22:41.530" LastActivityDate="2015-06-25T06:22:41.530" CommentCount="4" />
  <row Id="339" PostTypeId="2" ParentId="284" CreationDate="2015-06-25T07:46:39.403" Score="3" Body="&lt;p&gt;If you're the owner of both sets of code, you can do as you wish with it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That includes licensing the code to others as you wish, meaning you can license the module and not the program itself. You have all the rights relating to the code; the purpose of a license is to grant others some of those rights, according to specific conditions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can use this fact to add a GPL license to the module and not the program. You should not need to grant extra permissions, since the DLL is a separate entity. Even if you want to incorporate the code into the executable, you can apply a &quot;visible source&quot; principle and only release some of the code under GPL.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-06-26T15:07:59.743" LastActivityDate="2015-06-26T15:07:59.743" CommentCount="2" />
  <row Id="340" PostTypeId="2" ParentId="334" CreationDate="2015-06-25T07:50:37.530" Score="1" Body="&lt;p&gt;It depends how the IDE is licensed. You will need to read the license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When you produce software with it, you're not relying on the code of the IDE when you release your software, so the GPL same license condition doesn't apply to your program. However, the IDE license may stipulate that any program you produce must be open source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Read and check first.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-25T07:50:37.530" CommentCount="3" />
  <row Id="341" PostTypeId="2" ParentId="334" CreationDate="2015-06-25T08:56:56.770" Score="6" Body="&lt;p&gt;Generally yes, though there are some exceptions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you use a tool  (like an IDE, an buildtool, a continuous integration system, a version control) open source licenses put no restrictions on you, as the open source definition makes clear that nobody is discriminated because of the usage. So you can use the tools to create every software you wish, included closed source software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Compilers can be a different case and libraries and frameworks surely are. Still, you can use it for whatever. But, a compiler often links some runtime library to your code. If you use a library or framework, you directly link code. This has effects, as your work now counts as a derivate. With many permissive licenses (BSD, MIT, Apache) this is still no problem, but copyleft-licenses like GPL would would impose that you release your derivate under the GPL too (except it is never released to public and only privately used).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Real world example: GCC is GPL licensed, but use a &lt;a href=&quot;https://www.gnu.org/licenses/gcc-exception.html&quot; rel=&quot;nofollow&quot;&gt;runtime library exception&lt;/a&gt;, so you can still develop closed source software with GCC. But the exception is needed in this case.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-07T15:50:27.387" LastActivityDate="2015-07-07T15:50:27.387" CommentCount="2" />
  <row Id="342" PostTypeId="2" ParentId="323" CreationDate="2015-06-25T09:12:47.497" Score="1" Body="&lt;p&gt;BSD is a very permissive license. It allows many things, including redistributing it under different conditions, including as closed source. The only thing to respect, are the conditions of the BSD.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To dive into this, there are different variants of the BSD-license. The original 4-clause-BSD, a three-clause-BSD without the advertisement-clause and a two-clause-variant that only keeps the first two clauses. The original BSD reads as follows:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ol&gt;&#xA;  &lt;li&gt;&lt;p&gt;Redistributions of source code must retain the above copyright notice,&#xA;  this list of conditions and the following disclaimer.&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;p&gt;Redistributions&#xA;  in binary form must reproduce the above copyright notice, this list of&#xA;  conditions and the following disclaimer in the documentation and/or&#xA;  other materials provided with the distribution.&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;p&gt;All advertising&#xA;  materials mentioning features or use of this software must display the&#xA;  following acknowledgement: “This product includes software developed&#xA;  by the University of California, Berkeley and its contributors.”&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;p&gt;Neither the name of the University nor the names of its contributors&#xA;  may be used to endorse or promote products derived from this software&#xA;  without specific prior written permission.&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So you need: to keep the original copyright-notice (including the authors of the original work), include the BSD-license with your distribution and the disclaimer about Warranty (that I omitted) for clause one and two (that only decide this for source and binary form). Clause 3 asks that all advertisement material includes this notice and clause four simply asks not to misuse the name of the university. This has to be followed. The variants simply omit clause 3, or clause 3 and 4.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The second thing: are these conditions compatible with the GPL. The result is: the &lt;a href=&quot;http://www.gnu.org/licenses/license-list.html#OriginalBSD&quot; rel=&quot;nofollow&quot;&gt;original BSD isn't&lt;/a&gt; because of the advertisement-clause. The two variants omitting said clause &lt;a href=&quot;http://www.gnu.org/licenses/license-list.html#ModifiedBSD&quot; rel=&quot;nofollow&quot;&gt;are compatible&lt;/a&gt; .&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Tl;DR: You cannot with original BSD, but can with 3-clause- and 2-clause-BSD.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-25T09:12:47.497" CommentCount="0" />
  <row Id="343" PostTypeId="2" ParentId="304" CreationDate="2015-06-25T09:22:35.397" Score="3" Body="&lt;p&gt;First of all: There are three different BSD-licenses. The original BSD-license has four clauses, including a advertisement-clause. This advertisement-clause is &lt;a href=&quot;http://www.gnu.org/licenses/license-list.html#OriginalBSD&quot; rel=&quot;nofollow&quot;&gt;incompatible with the GPL&lt;/a&gt;, so you cannot redistribute it as GPL, the same as you cannot combine it with GPL-code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The modified BSD-licenses drop this clause and make BSD compatible with GPL. This technically means you can redistribute it as GPL, as long as you follow the terms of the original license. That includes to put the text of the BSD-license with your product.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-25T09:22:35.397" CommentCount="0" />
  <row Id="344" PostTypeId="2" ParentId="324" CreationDate="2015-06-25T09:28:16.117" Score="3" Body="&lt;p&gt;Yes, but you still have to follow all licenses included. So that usually means you have to include all license-texts with your resulting product and attribute all authors.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To be precise:&#xA;Say you have taken Part A from something with MIT-license and part B from something with CC-BY. If you combine the two, part A is still licensed MIT, part B is CC-BY and anything you added is licensed whatever you like. But the license of part A doesn't impose any restrictions on part B and vice versa, that's what permissive licenses do (in difference to copyleft-licenses).&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-25T09:28:16.117" CommentCount="0" />
  <row Id="345" PostTypeId="1" AcceptedAnswerId="349" CreationDate="2015-06-25T09:45:22.683" Score="8" ViewCount="93" Body="&lt;p&gt;Sometimes in regards to open source/free software I read about a 'right to &lt;a href=&quot;https://en.wikipedia.org/wiki/Fork_(software_development)&quot;&gt;fork'&lt;/a&gt;. What does it mean? Why is it relevant? Does all open source support this right?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-25T09:51:56.170" LastActivityDate="2015-06-25T15:44:05.253" Title="What does the 'right to fork' mean?" Tags="&lt;forking&gt;&lt;philosophy&gt;" AnswerCount="3" CommentCount="3" />
  <row Id="346" PostTypeId="2" ParentId="345" CreationDate="2015-06-25T10:03:34.423" Score="4" Body="&lt;p&gt;Being allowed to fork a piece of software simply means that you're allowed to redistribute a version of the software with changes you made, even if they're not merged back into the original piece of software. All free/open source software allows this: a free software license allows you to redistribute the software, even if you change it. As the Wikipedia page you linked mentioned, this can also happen with proprietary software: all you need is an appropriate license from the original authors.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In effect, any time you distribute software with a change you made, you're forking it, even if the intent of the fork is to be short-lived. This happens quite a lot: think of someone fixing a bug and asking other people to test the fix, or distributions shipping backported security fixes which aren't released as separate releases by upstream...&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For most people though forking would mean creating a new project based on the old one, with separate hosting etc. and an explicit intent to diverge if necessary. All free/open source software allows this.&lt;/p&gt;&#xA;" OwnerUserId="118" LastActivityDate="2015-06-25T10:03:34.423" CommentCount="2" />
  <row Id="347" PostTypeId="2" ParentId="248" CreationDate="2015-06-25T11:08:49.517" Score="0" Body="&lt;p&gt;The FSF has a process to approve licenses they consider free. OSI has a process to approve licenses that they consider open.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A requirement for the FSF to consider a license free is that it is open, so all free licenses are open source licenses.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But not all licenses that have been approved by the FSF have also be approved by OSI. Usually this is because they haven't sought out OSI approval. Does no OSI approval make it less open sourcy? I wouldn't say so. But it's difficult to be exact around vaguely defined concepts.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'd say that in general, saying Open Source Software includes all Free/Libre software and more, so the term you're looking for is open source software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you only consider that software open source that has a license that has been approved by the OSI, this doesn't hold anymore.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is no singular term for software that is licensed under a license approved by the OSI other than &quot;software licensed under an OSI approved license&quot;. Nor is there a singular term for software licensed under a license approved by the FSF other than &quot;software licensed under a FSF approved license&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So if you want the &quot;fuzzy&quot; definition (like F(L)OSS in itself is a fuzzy definition) just use open source software or OSS.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you want to mean only licenses approved by the FSF or OSI, you'll have to go with the more cumbersome &quot;Software under a FSF or OSI approved license&quot;&lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-06-25T11:08:49.517" CommentCount="0" />
  <row Id="348" PostTypeId="1" AcceptedAnswerId="376" CreationDate="2015-06-25T11:20:23.520" Score="13" ViewCount="150" Body="&lt;p&gt;Technically &lt;a href=&quot;http://opensource.org/osd&quot;&gt;open source&lt;/a&gt; and &lt;a href=&quot;https://www.gnu.org/philosophy/free-sw.html&quot;&gt;free software&lt;/a&gt; more or less mean the same thing. They have different definitions, but they result basically in the same thing. So why was  the Open Source Initiative founded and why did they coin the term open source? What are the differences they intended to make? How do the philosophies behind the two camps differ?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="98" LastEditDate="2015-06-28T14:39:14.013" LastActivityDate="2015-06-28T14:39:14.013" Title="Why was open source as a term created, although free software was already established?" Tags="&lt;philosophy&gt;&lt;free-software&gt;&lt;history&gt;" AnswerCount="2" CommentCount="11" FavoriteCount="3" />
  <row Id="349" PostTypeId="2" ParentId="345" CreationDate="2015-06-25T11:26:51.277" Score="6" Body="&lt;p&gt;The right to fork refers to &lt;a href=&quot;https://en.wikipedia.org/wiki/Fork_(software_development)&quot;&gt;forking&lt;/a&gt; as in taking a software project and maintaining it separately from the original. Having the right to fork a work means having the right to modify your own copy. In the context of freely distributable works, the right to fork means having the right to redistribute modified copies.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The practical importance of the right to fork is that is you don't like the way the original author maintains the work (not fixing the bugs that bother you, not adding the features you wany, etc.) then you can do what you like with your own copy. Having the source (i.e. the prefered form of modification) is critical there, since it is the only practical way to fork a work. A right to fork without having the practical means to make use of it, i.e. having the source, would not be very useful.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The combination of being allowed to and able to modify the source and the right to redistribute allows anyone who's interested to take up maintenance. This is a guarantee that free software and other open source works won't die as long as someone somewhere, anywhere, is willing and able to take up maintenance. It's also a guarantee that if someone dislikes the way the project is maintained, they can make their own version if they're willing and able to invest the requisite effort or get someone to do it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;All libre/free/open-source licenses grant the right to fork. This is sometimes known as the “fork test” for software license. It is freedom 1 in the &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.en.html&quot;&gt;Free Software Definition&lt;/a&gt;, guideline 1 in the &lt;a href=&quot;https://www.debian.org/social_contract#guidelines&quot;&gt;DFSG&lt;/a&gt;, clause 1 in the &lt;a href=&quot;http://opensource.org/osd-annotated&quot;&gt;Open Source Definition&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="60" LastActivityDate="2015-06-25T11:26:51.277" CommentCount="0" />
  <row Id="350" PostTypeId="2" ParentId="348" CreationDate="2015-06-25T11:27:33.580" Score="8" Body="&lt;p&gt;The Open Source Initiative can sort of be thought of the branch of Free Software that became its own tree.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The term &quot;free software&quot; is older, and is reflected in the name of the Free Software Foundation (FSF), an organization founded in 1985 to protect and promote free software. The term &quot;open source&quot; was coined in 1998 by a group of people — the founders of the Open Source Initiative (OSI) — who also supported the development and distribution of free software, but who disagreed with the FSF about how to promote it, and who felt that software freedom was primarily a practical matter rather than an ideological one... &lt;a href=&quot;http://opensource.org/faq#free-software&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So those involved with Open Source supported the development and distribution of the software. They branched out because they disagree with the idea that software freedom is ideological; they thought that software freedom was primarily a practical matter.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The page goes on to say that they had differences in why they should promote the software, and how to promote it, even though the ideas were incredibly similar.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;[Not] surprisingly, one of the biggest concerns was the use of the word &quot;Free.&quot; For this reason, we see a lot of French in our English. :) Je suis libre!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Bottom line, Open Source originated from people who supported the Free Software Movement, but disagreed with promotion and overall philosophy.&lt;/p&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-06-25T11:27:33.580" CommentCount="0" />
  <row Id="352" PostTypeId="1" CreationDate="2015-06-25T11:31:05.113" Score="10" ViewCount="162" Body="&lt;p&gt;This branched out from my previous question: &lt;a href=&quot;http://opensource.stackexchange.com/questions/183/can-i-select-who-can-contribute-to-my-open-source-project&quot;&gt;Can I select who can contribute to my Open Source Project?&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Having never worked on open source software before, and developing my own mini applications that I hope to release to the App Store sometimes this summer, I'm quite unfamiliar with the way most open source development structures are set up (forks, main repositories...).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One thing that popped up was the mention of a pull request. What exactly is a pull request?&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-06-26T17:27:56.007" LastActivityDate="2015-06-26T17:27:56.007" Title="What exactly is a pull request?" Tags="&lt;development&gt;&lt;terminology&gt;&lt;pull-request&gt;" AnswerCount="3" CommentCount="0" />
  <row Id="353" PostTypeId="2" ParentId="352" CreationDate="2015-06-25T11:49:12.320" Score="9" Body="&lt;p&gt;If you have &lt;a href=&quot;https://en.wikipedia.org/wiki/Distributed_revision_control&quot;&gt;distributed version control&lt;/a&gt; systems, every developer has a copy of the full repository. If you change something to the software, you commit your changes to your local repository. If different repositories should have these changes, you can push the changes (moving changes to another repository you have the right to write to) or pull the changes (copy revision from other repositories to your own). As many project have a main repository, a pull-request is the request that the maintainer pulls your changes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Reading up &lt;a href=&quot;http://oss-watch.ac.uk/resources/pullrequest&quot;&gt;a bit on it&lt;/a&gt;, it seems the term is used also on non-distributed version-control, if one user ask for inclusion of his patches in the main branch of the project. Another read especially for github: &lt;a href=&quot;https://help.github.com/articles/using-pull-requests/&quot;&gt;https://help.github.com/articles/using-pull-requests/&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-25T12:13:39.740" LastActivityDate="2015-06-25T12:13:39.740" CommentCount="0" />
  <row Id="354" PostTypeId="1" AcceptedAnswerId="355" CreationDate="2015-06-25T11:51:15.170" Score="4" ViewCount="38" Body="&lt;p&gt;Wikipedia seems to imply that &lt;a href=&quot;https://en.wikipedia.org/wiki/Turbolinux&quot; rel=&quot;nofollow&quot;&gt;Turbolinux&lt;/a&gt; bundles proprietary codecs.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;More generally, under what conditions is it OK to mix proprietary and GNU-GPLv3 software into an operating system, and distribute it on a DVD?&lt;/p&gt;&#xA;" OwnerUserId="199" LastActivityDate="2015-06-25T17:28:22.000" Title="Distributing an operating system DVD bundling proprietary and GNU-GPL software?" Tags="&lt;gpl-3&gt;&lt;distribution&gt;&lt;bundling&gt;&lt;operating-system&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="0" />
  <row Id="355" PostTypeId="2" ParentId="354" CreationDate="2015-06-25T11:59:02.527" Score="4" Body="&lt;p&gt;It is OK, as long as no derivate software (or other product) derives from both. Distributing them together is another matter, and to be precise in the &lt;a href=&quot;http://opensource.org/osd&quot; rel=&quot;nofollow&quot;&gt;Open Source Definition&lt;/a&gt; it is clearly stated, that open source licenses cannot restrict bundling:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;1. Free Redistribution&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The license shall not restrict any party from selling or giving away the software as a component of an aggregate&#xA;  software distribution containing programs from several different&#xA;  sources. The license shall not require a royalty or other fee for such&#xA;  sale.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Some frown upon such distributions although it is conforming to the licenses involved. It doesn't only is true for TurboLinux, nearly every Linux-distribution has unfree parts. The FSF &lt;a href=&quot;https://www.gnu.org/distros/free-distros.html&quot; rel=&quot;nofollow&quot;&gt;lists completely free Linux distributions&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-25T12:03:50.380" LastActivityDate="2015-06-25T12:03:50.380" CommentCount="4" />
  <row Id="356" PostTypeId="2" ParentId="68" CreationDate="2015-06-25T12:16:14.657" Score="2" Body="&lt;p&gt;Generally, in order to pursue legal action against someone, you need to have &lt;em&gt;standing&lt;/em&gt; — that is, be a directly involved party. While there might be some legal theories that users of GPL-licensed software are intended beneficiaries of the license and therefore could make a case, I'm not aware of this ever having been tested anywhere. Lawsuits like those brought by &lt;a href=&quot;https://en.wikipedia.org/wiki/Gpl-violations.org&quot; rel=&quot;nofollow&quot;&gt;gpl-violations.org&lt;/a&gt; work because they directly involved a copyright holder — one of the people who granted use to their code via the GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'm not a lawyer, but you don't have to take my word for it; here is Eben Moglen writing for the Free Software Foundation:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;[...] despite the broad right of distribution conveyed by the GPL, enforcement of copyright is generally not possible for distributors: only the copyright holder or someone having assignment of the copyright can enforce the license.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Here, &quot;distribution&quot; is just one of the freedoms granted by the GPL, but the same basic concept applies to the others as well.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So that means that in this case, your best course of action is to contact the SourceMod authors and make them aware of the violation, and ask them to ask the module authors to comply. &lt;/p&gt;&#xA;" OwnerUserId="65" LastEditorUserId="65" LastEditDate="2015-06-25T12:22:42.710" LastActivityDate="2015-06-25T12:22:42.710" CommentCount="0" />
  <row Id="357" PostTypeId="1" AcceptedAnswerId="358" CreationDate="2015-06-25T12:44:17.333" Score="10" ViewCount="93" Body="&lt;p&gt;&lt;a href=&quot;https://creativecommons.org/licenses/by-nd/4.0/&quot; rel=&quot;nofollow&quot;&gt;CC BY-ND&lt;/a&gt; (&lt;a href=&quot;https://creativecommons.org/licenses/by-nd/4.0/legalcode&quot; rel=&quot;nofollow&quot;&gt;Creative Commons Attribution No Derivatives&lt;/a&gt;) is a fairly restrictive license. It does not allow derivative works.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The Wikipedia article on &lt;a href=&quot;https://en.wikipedia.org/wiki/Creative_Commons_license#Six_regularly_used_licenses&quot; rel=&quot;nofollow&quot;&gt;Creative Commons licenses&lt;/a&gt; says that it is not a free/libre license:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;Description                    Acronym    Free/Libre&#xA;====================================================&#xA;Attribution + NoDerivatives    BY-ND      No&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;However, the Free Software Foundation does include it on their &lt;a href=&quot;http://www.gnu.org/licenses/license-list.html#ccbynd&quot; rel=&quot;nofollow&quot;&gt;list of Free &quot;Licenses for Works stating a Viewpoint (e.g., Opinion or Testimony)&quot;&lt;/a&gt;. In fact, they use it themselves.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;This is the license used throughout the GNU and FSF web sites. This license provides much the same permissions as our verbatim copying license, but it's much more detailed. We particularly recommend it for audio and/or video works of opinion.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The full &lt;a href=&quot;http://opensource.org/licenses/alphabetical&quot; rel=&quot;nofollow&quot;&gt;list of licenses on the OSI site&lt;/a&gt; does not mention &lt;em&gt;any&lt;/em&gt; Creative Commons license, though the site itself is licensed under CC BY.&lt;/p&gt;&#xA;" OwnerUserId="235" LastEditorUserId="190" LastEditDate="2015-06-30T10:20:55.973" LastActivityDate="2015-06-30T10:20:55.973" Title="Is the CC BY-ND an Open license?" Tags="&lt;creative-commons&gt;&lt;cc-by-nd&gt;&lt;open-source-definition&gt;&lt;free-software-definition&gt;" AnswerCount="3" CommentCount="0" FavoriteCount="1" />
  <row Id="358" PostTypeId="2" ParentId="357" CreationDate="2015-06-25T12:46:41.300" Score="7" Body="&lt;p&gt;No, CC-BY-ND isn't Open Source. It violates rule 3 of the &lt;a href=&quot;http://opensource.org/osd&quot;&gt;Open Source Definition&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ol start=&quot;3&quot;&gt;&#xA;  &lt;li&gt;Derived Works&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;  &#xA;  &lt;p&gt;The license must allow modifications and derived works, and must allow&#xA;  them to be distributed under the same terms as the license of the&#xA;  original software.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;It also violates the freedom 3 of the &lt;a href=&quot;https://www.gnu.org/philosophy/free-sw.html&quot;&gt;Free Software Definition&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The freedom to distribute copies of your modified versions to others&#xA;  (freedom 3)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The FSF doesn't list it as free license. The link you provide not only has free licenses, it has sections for free (compatible with GPL), free (incompatible with GPL) and nonfree licenses. For instance is the Sun Community Source license listed in the unfree section. CC-BY-ND is listed in their &lt;a href=&quot;http://www.gnu.org/licenses/license-list.en.html#CC-BY-ND&quot;&gt;nonfree documentation license section&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;They list it again though, in their section for Viewpoints. The FSF claims that these opinions should be copied unchanged. The sections starts the following:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Licenses for Works stating a Viewpoint (e.g., Opinion or Testimony)&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Works that express someone's opinion—memoirs, editorials, and so&#xA;  on—serve a fundamentally different purpose than works for practical&#xA;  use like software and documentation. Because of this, we expect them&#xA;  to provide recipients with a different set of permissions: just the&#xA;  permission to copy and distribute the work verbatim. Richard Stallman&#xA;  discusses this frequently in his speeches.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;That means the license is nonfree, but useful for a different purpose.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-25T12:50:37.217" LastActivityDate="2015-06-25T12:50:37.217" CommentCount="1" />
  <row Id="359" PostTypeId="2" ParentId="357" CreationDate="2015-06-25T12:51:21.587" Score="3" Body="&lt;p&gt;The FSF lists the CC BY-ND license under a different category: &lt;a href=&quot;http://www.gnu.org/licenses/license-list.en.html#OpinionLicenses&quot; rel=&quot;nofollow&quot;&gt;Licenses for Works stating a Viewpoint (e.g., Opinion or Testimony)&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The introduction says (bold emphasis mine):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Because of this, we expect them to provide recipients with &lt;strong&gt;a different set of permissions&lt;/strong&gt;: just the permission to copy and distribute the work verbatim.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So it’s &lt;em&gt;not&lt;/em&gt; a license that conforms to &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.en.html&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;The Free Software Definition&lt;/em&gt;&lt;/a&gt;, as &quot;freedom 3&quot; is missing: &quot;The freedom to distribute copies of your modified versions to others&quot;&lt;/p&gt;&#xA;" OwnerUserId="138" LastActivityDate="2015-06-25T12:51:21.587" CommentCount="0" />
  <row Id="360" PostTypeId="2" ParentId="357" CreationDate="2015-06-25T12:57:44.457" Score="3" Body="&lt;p&gt;The CC BY-ND is not compatible with either the OSI's Open Source definition or the FSF's Free Software Definition.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That said, the FSF still considers it to have an appropriate use that is compatible with their movement: to licence opinions and testimonies. The licence shouldn't be used for documentation or project assets, but they do consider it to be appropriate for works which represent the thoughts of a single person and which it would be misleading to change. To quote &lt;a href=&quot;http://www.gnu.org/philosophy/copyright-and-globalization.html#opinions&quot; rel=&quot;nofollow&quot;&gt;Richard Stallman&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The second class of work is works whose purpose is to say what certain people think. Talking about those people is their purpose. This includes, say, memoirs, essays of opinion, scientific papers, offers to buy and sell, catalogues of goods for sale. The whole point of those works is that they tell you what somebody thinks or what somebody saw or what somebody believes. To modify them is to misrepresent the authors; so modifying these works is not a socially useful activity. And so verbatim copying is the only thing that people really need to be allowed to do.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This is contentious and I doubt there's any agreement over it. I can see the merit of the argument, but I also think there's more reuse value than verbatim copying - sometimes quoting an excerpt is more appropriate than reproducing an entire work. Which makes me think: I'm not sure if the BY-ND allows you to make excerpts or not...&lt;/p&gt;&#xA;" OwnerUserId="190" LastActivityDate="2015-06-25T12:57:44.457" CommentCount="2" />
  <row Id="361" PostTypeId="1" CreationDate="2015-06-25T13:13:33.420" Score="6" ViewCount="48" Body="&lt;p&gt;It is not uncommon for the source code of projects to be released, but not the assets. Examples include Doom and Quake and many other games.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now there are many good reasons to do this for the benefit of others (allowing new uses of the core engine, unofficial ports etc.) but what benefits are there for the rights holder? If the assets are not included and others can't build the project then the potential for community bug testing and review etc will be significantly reduced, right?&lt;/p&gt;&#xA;" OwnerUserId="190" LastEditorUserId="190" LastEditDate="2015-06-25T13:18:34.313" LastActivityDate="2015-06-26T02:23:22.363" Title="What benefits would there be *for me* to freely license the code of my project but not the assets?" Tags="&lt;benefits&gt;&lt;assets&gt;" AnswerCount="3" CommentCount="1" FavoriteCount="0" />
  <row Id="362" PostTypeId="2" ParentId="361" CreationDate="2015-06-25T13:21:29.377" Score="1" Body="&lt;p&gt;Generally open-source MMOs follow this model, they keep the assets as their own (because of the considerable amount of work involved) and release the code freely, this way they keep control of the assets and are able to received patches from other projects using the same engine.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/PlaneShift_(video_game)&quot; rel=&quot;nofollow&quot;&gt;PlaneShift&lt;/a&gt; follows this model and there's some games that are based on their engine (but use none of their assets).&lt;/p&gt;&#xA;" OwnerUserId="231" LastEditorUserId="55" LastEditDate="2015-06-25T13:34:39.710" LastActivityDate="2015-06-25T13:34:39.710" CommentCount="2" />
  <row Id="363" PostTypeId="1" AcceptedAnswerId="367" CreationDate="2015-06-25T14:26:20.033" Score="4" ViewCount="38" Body="&lt;p&gt;Let's say I am reading an article published under the writers own license. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;What do I do if the license is not available? For example the link is broken.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What rules do I follow?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="271" LastEditDate="2015-06-25T14:45:37.140" LastActivityDate="2015-06-25T15:36:40.890" Title="License not available" Tags="&lt;licensing&gt;" AnswerCount="2" CommentCount="2" ClosedDate="2015-06-25T16:04:07.877" />
  <row Id="364" PostTypeId="2" ParentId="363" CreationDate="2015-06-25T14:35:13.790" Score="6" Body="&lt;p&gt;Bad situation. You can't conform to a license that isn't available in text to you. So basically you have to assume, that it falls back into the status of being not licensed, so normal copyright applies and you can do basically nothing.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is a way to make the situation better. You could ask the author to repair the situation. If the author is unavailable the problem persists, you cannot guess which terms he dictates.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-25T14:35:13.790" CommentCount="0" />
  <row Id="365" PostTypeId="1" CreationDate="2015-06-25T14:53:36.207" Score="5" ViewCount="82" Body="&lt;p&gt;Let's say I have a blog post, and I want to release it under a Creative Commons license. I later publish this post to my blog.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;How do I apply a license to my blogpost?&lt;/li&gt;&#xA;&lt;li&gt;Do I need to state how it is licensed at the bottom of the post?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="271" LastEditorUserId="98" LastEditDate="2015-08-05T23:00:27.123" LastActivityDate="2015-08-06T07:28:36.973" Title="How can I license my content in a blogpost?" Tags="&lt;licensing&gt;&lt;creative-commons&gt;" AnswerCount="1" CommentCount="12" />
  <row Id="367" PostTypeId="2" ParentId="363" CreationDate="2015-06-25T15:36:40.890" Score="3" Body="&lt;p&gt;You can always try searching the license. If the text at the bottom of the article states what license it's under (which it should do), search that. If there are multiple results that are similar if not identical, you should be able to assume that's the correct one. &lt;em&gt;Please note: this method is not legally sound. Only do this for things you're very unlikely to get sued for.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Your only alternative is to ask the author: contact them, tell them the link's broken, and ask them to reply with a link to the correct license. This &lt;em&gt;is&lt;/em&gt; legally sound, since the link comes directly from the author.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If nothing works, you must assume the work has no license and therefore is totally copyrighted. You can't use it.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-25T15:36:40.890" CommentCount="0" />
  <row Id="368" PostTypeId="2" ParentId="345" CreationDate="2015-06-25T15:44:05.253" Score="1" Body="&lt;p&gt;The right to fork is essentially the same as the right to derive. They both grant the user a right to develop your work further.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The right to &lt;em&gt;fork&lt;/em&gt; specifically has come about from hosting platforms like GitHub, whose primary deriving mechanism is forking. It's simply a different version of &lt;em&gt;right to derive&lt;/em&gt; that makes more sense for our current ways of distributing.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;All&lt;/strong&gt; open source licenses must grant this right to be considered open and/or free. One of the essential parts of the definition is that other people must be allowed to use your creation: this is the right to derive, or right of derivation, right to fork, right to develop, etc. Denying this right means your project can no longer be officially considered open source.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-25T15:44:05.253" CommentCount="0" />
  <row Id="369" PostTypeId="2" ParentId="361" CreationDate="2015-06-25T15:57:58.330" Score="2" Body="&lt;h3&gt;Benefits of open-sourcing the code&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;are the same as those of any other open source project. The primary benefit to you is your contribution to the open source and programming communities: you have released new code into them which other people can find and make use of. Think: you've just saved someone a lot of time writing up their own flob-detection system. They can just use yours. There are also the points about bug detection, patches and security: many eyes make light (and quick) work.&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Benefits of keeping your assets&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;The assets are usually the bit that takes most effort to come up with. That gives a feeling of personal investment in them, and that you want to be the sole user of them. Beyond that, there's also:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Branding&lt;/strong&gt;&lt;br&gt;&#xA;If you release your assets for everyone else to use, then someone else can copy you. That major new game you just made? Someone can come along, take the code and assets, improve it a bit, merely credit you someone inconspicuous, and have a better version. You lose users and money. And there's nothing you can do about it&lt;sup&gt;1&lt;/sup&gt;, because they followed the license.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Originality&lt;/strong&gt;&lt;br&gt;&#xA;Slightly related to the last point, you want to be original. If you've created something visual, then it seems right that it's yours to use and yours alone: other people should make their own versions of it. Of course they can use yours as inspiration, but they'd have to &lt;em&gt;make&lt;/em&gt; them themselves.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Of course, you could also release your assets under a non-open/free license, and charge royalties for their use.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt; Besides going into hefty expensive lawsuits, that is. Or relying on the public's morals (ha ha good joke).&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-25T15:57:58.330" CommentCount="1" />
  <row Id="370" PostTypeId="1" AcceptedAnswerId="372" CreationDate="2015-06-25T16:00:52.253" Score="5" ViewCount="56" Body="&lt;p&gt;I am working on an open source collaborative project with numerous other people.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Often many people are working on it at once. This creates problems with multiple versions of the same file.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is there any program (like google drive) that allows lots of people to edit code, and keep everything in one version?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="98" LastEditDate="2015-06-25T16:33:36.410" LastActivityDate="2015-06-25T17:48:02.860" Title="How to keep open source projects up to date" Tags="&lt;community&gt;&lt;development&gt;" AnswerCount="3" CommentCount="13" ClosedDate="2015-06-25T22:19:15.707" />
  <row Id="371" PostTypeId="2" ParentId="370" CreationDate="2015-06-25T16:16:42.113" Score="3" Body="&lt;p&gt;The answer is: &lt;a href=&quot;https://en.wikipedia.org/wiki/Revision_control&quot; rel=&quot;nofollow&quot;&gt;version control system&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Usual choices are:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://git-scm.com/&quot; rel=&quot;nofollow&quot;&gt;git&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://subversion.apache.org/&quot; rel=&quot;nofollow&quot;&gt;SVN&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://bazaar.canonical.com/en/&quot; rel=&quot;nofollow&quot;&gt;Bazaar&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://mercurial.selenic.com/&quot; rel=&quot;nofollow&quot;&gt;Mercurial&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-25T16:16:42.113" CommentCount="0" />
  <row Id="372" PostTypeId="2" ParentId="370" CreationDate="2015-06-25T16:20:18.780" Score="10" Body="&lt;p&gt;What you're describing is called a &lt;a href=&quot;https://en.wikipedia.org/wiki/Revision_control&quot;&gt;Version Control System&lt;/a&gt; or revision control system. It essentially stores one canonical copy in a central place, which can be downloaded, edited, and committed back there. If someone else changes it in the time you do, you must review those changes and incorporate them into your code before recommitting.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some major version control systems are:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Git, of which the main proponent is &lt;a href=&quot;http://github.com&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;SVN&lt;/li&gt;&#xA;&lt;li&gt;Mercurial&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;among many others. You should try more than one out and work out which one is best for your project.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-25T16:20:18.780" CommentCount="0" />
  <row Id="373" PostTypeId="2" ParentId="352" CreationDate="2015-06-25T17:05:11.223" Score="4" Body="&lt;p&gt;A pull request is related to version control systems. You may have several sets of users:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Administrators/Owners&lt;/li&gt;&#xA;&lt;li&gt;Contributors&lt;/li&gt;&#xA;&lt;li&gt;Testers&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;You want each of these people to be able to do different things:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Administrators/Owners&lt;/strong&gt;&lt;br&gt;&#xA;These people can be trusted. They might have full access to the repository in question, including full rights to commit what they want when they want.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Contributors&lt;/strong&gt;&lt;br&gt;&#xA;These might be random people from the Internet; they might be lesser people in a company. Either way, you probably don't want them to be able to commit straight to the codebase - you want to review their changes first.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;This is where pull requests come in. Instead of allowing straight changes to the codebase from your contributors, they will instead &lt;em&gt;fork&lt;/em&gt; the repository, creating a copy on their local machine, and develop that. When they're done, they can create a pull request containing their updated code. Someone in the higher group can then review their changes for correctness and complicity with standards, and &lt;em&gt;merge&lt;/em&gt; their changes if they comply.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-25T17:05:11.223" CommentCount="1" />
  <row Id="374" PostTypeId="2" ParentId="354" CreationDate="2015-06-25T17:28:22.000" Score="4" Body="&lt;p&gt;Merely aggregating different works on the same media is not an action that is covered by copyright. There is no copyright for the aggregation. Copyright only comes into play if the works are meshed together in a way that displays some originality — this is known as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Derivative_work&quot; rel=&quot;nofollow&quot;&gt;derivative work&lt;/a&gt;. Bundling software on a single CD does not display any originality and is thus not subject to copyright: only the copyright and license of the individual pieces of software apply.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Inasmuch as a distribution selects which software is included on the CD, the selection and arrangement may be covered by &lt;a href=&quot;http://en.wikipedia.org/wiki/Sui_generis_database_right&quot; rel=&quot;nofollow&quot;&gt;database right&lt;/a&gt;. Database right is somewhat similar to copyright in that it restricts what others can do with the database. Database right is defined by the Berne convention, but is implemented differently in different distributions, e.g. in the US there is no such legal category (the provisions of the Berne convention are spread around other bodies of law) while in France database right is part of copyright but with many differences. In any case, database right applies only to the collection as a whole, individual copyright and licenses of aggregated components still apply.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Restricting software from being bundled with other software is generally considered to be an unacceptable restriction on its use and distribution. For example, the &lt;a href=&quot;http://opensource.org/osd-annotated&quot; rel=&quot;nofollow&quot;&gt;Open Source Definition&lt;/a&gt; explicitly states that “the license shall not restrict any party from selling or giving away the software as a component of an aggregate software distribution containing programs from several different sources”. The GNU GPL explicitly states that “inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.”&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Running a mixture of software with different licenses on the same system is not covered by copyright, again because it is mere aggregation. Linking software with different licenses (i.e. running a program that uses various code libraries, or loading a plug-in) is not clear-cut. Linking itself is a mechanical process, not a creative one. However the process is more than mere aggregation. Opinions vary on the legal status; for example, the &lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0.en.html&quot; rel=&quot;nofollow&quot;&gt;GNU GPL&lt;/a&gt; explicitly includes “shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work” in the requirement to provide source code, thus forbidding to link GPL-covered code with code whose source is not available under the GPL. Only “system libraries” are excluded from this requirement. Not all free software practitioners agree with this interpretation; for example, Linus Torvalds, main author of the Linux kernel, has explicitly stated that he allows closed-source drivers to be linked into the GPL-licensed Linux kernel.&lt;/p&gt;&#xA;" OwnerUserId="60" LastActivityDate="2015-06-25T17:28:22.000" CommentCount="0" />
  <row Id="375" PostTypeId="2" ParentId="370" CreationDate="2015-06-25T17:48:02.860" Score="3" Body="&lt;p&gt;Version control systems are one way of allowing multiple people to work on the same files, but they don't support real-time collaborative editing of a single common version.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are FLOSS editors which support shared editing of documents in a manner similar to Google Drive; I've found that &lt;a href=&quot;https://gobby.github.io/&quot; rel=&quot;nofollow&quot;&gt;Gobby&lt;/a&gt; works quite well for this. It's used extensively during Debian conferences in particular.&lt;/p&gt;&#xA;" OwnerUserId="118" LastActivityDate="2015-06-25T17:48:02.860" CommentCount="0" />
  <row Id="376" PostTypeId="2" ParentId="348" CreationDate="2015-06-25T18:54:54.383" Score="9" Body="&lt;p&gt;One of the most helpful analogies I've ever heard compares software development to government:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Lots of people like democratic governance. Some people like democracy because it produces the &lt;em&gt;best results&lt;/em&gt; that maximize happiness of its citizens. Other people like democracy because they believe people have a &lt;em&gt;moral right&lt;/em&gt; to have their voices be part of their own government (regardless of the results). The first group is like open source; the second group is like free software.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Richard Stallman coined the term &quot;Free Software&quot; to mean freely-shareable and freely-modifiable software that complies with his &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.en.html&quot;&gt;four freedoms&lt;/a&gt;. The Free Software Foundation has always been an ethically-driven organization. In the documentary &lt;a href=&quot;https://www.youtube.com/watch?v=GsHh2wfy_-4#t=595&quot;&gt;&lt;em&gt;Revolution OS&lt;/em&gt;, Richard Stallman, founder of the FSF, says of the GNU project&lt;/a&gt;, (emphasis mine):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;And to me, [a non-disclosure agreement] was essentially a promise to be a &lt;strong&gt;bad person&lt;/strong&gt;... to cut myself off from... a cooperating community. [...] [By developing GNU,] not only could I give myself a way to keep using computers without &lt;strong&gt;betraying other people&lt;/strong&gt;, but I'd give to everybody else, too. Everybody else would have a way out of that &lt;strong&gt;moral dilemma&lt;/strong&gt;...&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The term &quot;Open Source Software&quot; was invented later, in a meeting between Eric S. Raymond, some employees of VA Linux Systems, and a few others. There's &lt;a href=&quot;https://www.youtube.com/watch?v=GsHh2wfy_-4#t=2766&quot;&gt;an interview with Eric S. Raymond in &lt;em&gt;Revolution OS&lt;/em&gt;&lt;/a&gt; in which he recalls the original effort to develop and popularize the term:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;[Y]ou walk into an executive's office and say &quot;Free Software&quot;... Okay, if you're lucky, the response is something like, &quot;Hmm, Free Software, must be cheap, shoddy, worthless.&quot; And if you're not lucky, it has associations with the Free Software Foundation's wholesale attack on intellectual property rights, which -- regardless of what you think about the ethics of that -- it's lousy marking. It's not something businesses want to hear.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;There's a following clip from Larry Augustin, CEO of VA Linux Systems:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;We'd been calling this &quot;Free Software&quot; but people took the term &quot;Free&quot; and associated with &quot;free of charge&quot;. They thought they couldn't make money or couldn't sell. We wanted to get across the idea that the software was open and that the source code was available. Very important pieces.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;It is clear from these interviews, &quot;open source&quot; was intended to capture the idea of freely-modifiable and shareable software in a business-centered way, rather than as an ethical concern. In addition, the confusion over &quot;free in cost&quot; was a point of concern for business adoption as well.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For Stallman (and by extension, the whole FSF, which he founded), the freedom to modify and share software has always been a moral issue. The Open Source movement began as an attempt to capitalize on the practical benefits of freely-shareable and modifiable software without the ethical concerns that have always been at the core of the Free Software movement.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In practical terms, &quot;open source software&quot; means &quot;software complying with the &lt;a href=&quot;http://opensource.org/osd-annotated&quot;&gt;OSI's Open Source Definition&lt;/a&gt;,&quot; while &quot;free software&quot; means &quot;software complying with the &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.en.html&quot;&gt;FSF's four freedoms&lt;/a&gt;.&quot; The two definitions are not perfectly equivalent, but they are &lt;em&gt;very&lt;/em&gt; close.&lt;/p&gt;&#xA;" OwnerUserId="50" LastEditorUserId="50" LastEditDate="2015-06-26T02:57:26.720" LastActivityDate="2015-06-26T02:57:26.720" CommentCount="1" />
  <row Id="378" PostTypeId="1" AcceptedAnswerId="379" CreationDate="2015-06-25T19:27:06.583" Score="2" ViewCount="38" Body="&lt;p&gt;&lt;strong&gt;Scenario&lt;/strong&gt;&lt;br&gt;&#xA;I am building off of a project that was released under the Creative Commons BY license. Now that my project is done, I want to release my version of the product under my own license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&#xA;Is this possible? &lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;If yes do I need permission?&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;If no what limitation do I have?&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="271" LastEditorUserId="190" LastEditDate="2015-06-30T10:32:50.153" LastActivityDate="2015-06-30T10:32:50.153" Title="Can I license a project that I have built on if it already has a license?" Tags="&lt;cc-by&gt;&lt;relicensing&gt;" AnswerCount="1" CommentCount="5" FavoriteCount="0" />
  <row Id="379" PostTypeId="2" ParentId="378" CreationDate="2015-06-25T20:16:58.137" Score="4" Body="&lt;p&gt;Yes. The CC-BY license is one of their more permissive licenses: it simply requires attributing the original author.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So: &lt;strong&gt;no&lt;/strong&gt; you don't need permission. You simply need to include, somewhere in your finished product (perhaps an about or credits screen) the name of the author and preferably a link back to where you found it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is &lt;strong&gt;no Share Alike&lt;/strong&gt; restriction on the CC-BY license, so you are not forced to keep the same license: you can thus choose to relicense your product as you wish.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="69" LastEditDate="2015-06-25T20:22:25.263" LastActivityDate="2015-06-25T20:22:25.263" CommentCount="0" />
  <row Id="380" PostTypeId="2" ParentId="352" CreationDate="2015-06-25T21:07:30.077" Score="3" Body="&lt;p&gt;The term &quot;pull request&quot; comes from &lt;code&gt;git&lt;/code&gt;, where the &lt;code&gt;git pull&lt;/code&gt; command is used to merge a different repository into your local one. So if someone else has a copy of your &lt;code&gt;git&lt;/code&gt; repository, and makes changes to it that they would like you to incorporate, they can ask you to &lt;code&gt;pull&lt;/code&gt; the changes from their repository; they're requesting a &lt;code&gt;pull&lt;/code&gt;, hence the term &quot;pull request&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Nowadays for most users this tends to be hidden behind a graphical interface of some sort, on Github or Bitbucket or via Gerrit for example; but the principle remains the same: someone copies your repository, makes changes and requests them to be merged into your own copy, presumably after you've reviewed them.&lt;/p&gt;&#xA;" OwnerUserId="118" LastActivityDate="2015-06-25T21:07:30.077" CommentCount="0" />
  <row Id="381" PostTypeId="5" CreationDate="2015-06-25T21:29:44.623" Score="0" Body="&lt;p&gt;Behind the idea of open source or free software exists a strong philosophy about the rights of people using the creations of others.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Use this tag for questions about the philosophy behind open source and free software.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-26T13:40:13.810" LastActivityDate="2015-06-26T13:40:13.810" CommentCount="0" />
  <row Id="382" PostTypeId="4" CreationDate="2015-06-25T21:29:44.623" Score="0" Body="Use this tag for questions about the philosophy behind open source and free software." OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-26T13:40:26.117" LastActivityDate="2015-06-26T13:40:26.117" CommentCount="0" />
  <row Id="383" PostTypeId="2" ParentId="310" CreationDate="2015-06-25T21:31:23.093" Score="7" Body="&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; No.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It depends on the definitions of the terms &quot;Open Source Software&quot; and &quot;Free Software&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A common definition (and in my opinion it’s the one that should be used, otherwise the scope of the terms will be subjective):&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Free Software&lt;/strong&gt; is software licensed under an &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_Software_Foundation&quot;&gt;FSF&lt;/a&gt;-approved software license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;(on the basis of  &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Free_Software_Definition&quot;&gt;&lt;em&gt;The Free Software Definition&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Open Source Software&lt;/strong&gt; is software licensed under an &lt;a href=&quot;https://en.wikipedia.org/wiki/Open_Source_Initiative&quot;&gt;OSI&lt;/a&gt;-approved software license. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;(on the basis of &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Open_Source_Definition&quot;&gt;&lt;em&gt;The Open Source Definition&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;In most cases, a Free Software license is also an Open Source Software license, and vice versa. But there are exceptions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For a definite and up-to-date answer, you should use the original sources and compare if both organizations, the FSF and the OSI, have approved each license:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;FSF-approved licenses: &lt;a href=&quot;https://www.gnu.org/licenses/license-list&quot;&gt;https://www.gnu.org/licenses/license-list&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;OSI-approved licenses: &lt;a href=&quot;http://opensource.org/licenses&quot;&gt;http://opensource.org/licenses&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;In the Wikipedia article &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Comparison_of_free_software_licences&quot;&gt;Comparison of free and open-source software licenses&lt;/a&gt;&quot;, there is an &lt;a href=&quot;https://en.wikipedia.org/wiki/Comparison_of_free_and_open-source_software_licenses#Approvals&quot;&gt;&quot;Approvals&quot; table&lt;/a&gt; where you can see this at a glance (but this information might not be accurate).&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Example 1: &lt;em&gt;Free Software&lt;/em&gt;, but not &lt;em&gt;Open Source Software&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Netscape’s early versions of &lt;a href=&quot;https://en.wikipedia.org/wiki/Mozilla_Application_Suite&quot;&gt;Mozilla&lt;/a&gt; were released under the &lt;a href=&quot;https://www.mozilla.org/MPL/NPL/1.0/&quot;&gt;&lt;em&gt;Netscape Public License version 1.0&lt;/em&gt;&lt;/a&gt; (see &lt;a href=&quot;https://en.wikipedia.org/wiki/Netscape_Public_License&quot;&gt;its Wikipedia article&lt;/a&gt;).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This license is &lt;a href=&quot;https://www.gnu.org/licenses/license-list#NPL&quot;&gt;approved by the FSF&lt;/a&gt;, but it is &lt;a href=&quot;http://opensource.org/licenses/alphabetical&quot;&gt;not&lt;/a&gt; approved by the OSI.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;↳ So these early versions of Mozilla are Free Software, but not Open Source Software.&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Example 2: &lt;em&gt;Open Source Software&lt;/em&gt;, but not &lt;em&gt;Free Software&lt;/em&gt;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Active_Agenda&quot;&gt;Active Agenda&lt;/a&gt; is licensed under the &lt;a href=&quot;https://en.wikipedia.org/wiki/Reciprocal_Public_License&quot;&gt;&lt;em&gt;Reciprocal Public License&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This license is &lt;a href=&quot;http://opensource.org/licenses/RPL-1.5&quot;&gt;approved by the OSI&lt;/a&gt; (currently in version 1.5), but it is &lt;a href=&quot;https://www.gnu.org/licenses/license-list&quot;&gt;not&lt;/a&gt; approved by the FSF (it’s &lt;a href=&quot;https://www.gnu.org/licenses/license-list#RPL&quot;&gt;listed as unfree&lt;/a&gt;, linking to version 1.3).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;↳ So Active Agenda is Open Source Software, but not Free Software.&lt;/p&gt;&#xA;" OwnerUserId="138" LastActivityDate="2015-06-25T21:31:23.093" CommentCount="0" />
  <row Id="384" PostTypeId="5" CreationDate="2015-06-25T21:32:00.050" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-25T21:32:00.050" LastActivityDate="2015-06-25T21:32:00.050" CommentCount="0" />
  <row Id="385" PostTypeId="4" CreationDate="2015-06-25T21:32:00.050" Score="0" Body="For questions about works whose authors retain the ability to control derivates or distribution as given to them by copyright law" OwnerUserId="37" LastEditorUserId="69" LastEditDate="2015-07-04T21:52:17.093" LastActivityDate="2015-07-04T21:52:17.093" CommentCount="0" />
  <row Id="387" PostTypeId="5" CreationDate="2015-06-25T21:51:23.230" Score="0" Body="&lt;p&gt;For questions about applying open source principles to hardware design, including schematics, &lt;a href=&quot;https://en.wikipedia.org/wiki/Hardware_description_language&quot; rel=&quot;nofollow&quot;&gt;HDL&lt;/a&gt; source code and integrated circuit layout data.&lt;/p&gt;&#xA;" OwnerUserId="190" LastEditorUserId="190" LastEditDate="2015-07-04T00:54:47.367" LastActivityDate="2015-07-04T00:54:47.367" CommentCount="0" />
  <row Id="388" PostTypeId="4" CreationDate="2015-06-25T21:51:23.230" Score="0" Body="For questions about applying open source principles to hardware design, including schematics, HDL source code and integrated circuit layout data." OwnerUserId="37" LastEditorUserId="190" LastEditDate="2015-07-04T00:55:52.870" LastActivityDate="2015-07-04T00:55:52.870" CommentCount="0" />
  <row Id="389" PostTypeId="2" ParentId="283" CreationDate="2015-06-25T22:16:34.487" Score="5" Body="&lt;p&gt;In general, international recognition of copyright is governed by the &lt;a href=&quot;https://en.wikipedia.org/wiki/Berne_Convention&quot;&gt;Berne Convention&lt;/a&gt;: if you publish your work in a country that has signed the Berne Convention, it's protected in all other signatory countries.  There are other treaties (&lt;a href=&quot;https://en.wikipedia.org/wiki/Universal_Copyright_Convention&quot;&gt;Universal Copyright Convention&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/TRIPS_Agreement&quot;&gt;TRIPS&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/WIPO_Copyright_Treaty&quot;&gt;WIPO Copyright Treaty&lt;/a&gt;), but in general, a signatory to one of these is also a signatory to Berne.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Specific cases I'm aware of where you can't enforce the GPL:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Intellectual_property_in_Iran#International_conventions&quot;&gt;Iran does not recognize anybody else's copyrights&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://commons.wikimedia.org/wiki/Commons:Copyright_rules_by_territory#Somalia&quot;&gt;Somalia does not have a working copyright regime&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;There may be others; see &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_parties_to_international_copyright_agreements&quot;&gt;Wikipedia's list of parties to international copyright agreements&lt;/a&gt; for countries that haven't signed any of the large-scale agreements.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the case of Iran, you may be able to get your software protected by having an Iranian contributor copyright it locally, but doing so may expose you to other legal issues you'd rather avoid.&lt;/p&gt;&#xA;" OwnerUserId="240" LastActivityDate="2015-06-25T22:16:34.487" CommentCount="0" />
  <row Id="390" PostTypeId="1" CreationDate="2015-06-25T22:27:41.163" Score="1" ViewCount="25" Body="&lt;p&gt;Are there established guidelines or best practices for checking open source software for security flaws prior to using it in a business environment?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is this down to the individual business to decide for themselves or are there approaches that apply universally?&lt;/p&gt;&#xA;" OwnerUserId="37" LastActivityDate="2015-06-26T02:36:14.823" Title="Assessing potential security flaws in open source software" Tags="&lt;security&gt;" AnswerCount="2" CommentCount="3" />
  <row Id="392" PostTypeId="1" CreationDate="2015-06-25T22:46:40.793" Score="4" ViewCount="45" Body="&lt;p&gt;Most open source projects provide precompiled binaries for a variety of platforms in addition to the source code. How important is it to download the source code and compile it yourself?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Are there security risks or performance problems with using downloaded binaries? Are they significant enough to worry about for non-business users?&lt;/p&gt;&#xA;" OwnerUserId="37" LastActivityDate="2015-06-26T08:00:39.953" Title="Source code or binaries? How important is this?" Tags="&lt;binaries&gt;" AnswerCount="1" CommentCount="8" ClosedDate="2015-06-26T07:29:35.107" />
  <row Id="393" PostTypeId="2" ParentId="392" CreationDate="2015-06-25T22:48:46.590" Score="4" Body="&lt;p&gt;Well, without source code it isn't open source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The availability of source code allows for others to change the code, one of the main reasons to have open source in the first place. Without source code it isn't longer possible.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you only intend to use the software, the differences between using precompiled binaries and compiling yourself are:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;You can check the source code for unwanted code and compile it to be sure it has no backdoors. You can't be sure with the binary.&lt;/li&gt;&#xA;&lt;li&gt;Compiled specifically to your platform (CPU, OS-version etc.) the code might perform a bit better than a generic binary.&lt;/li&gt;&#xA;&lt;li&gt;You can apply patches from sources other than the maintainer.&lt;/li&gt;&#xA;&lt;li&gt;You can fix minor bugs that affect your usage.&lt;/li&gt;&#xA;&lt;li&gt;You can remove parts you don't need and complicate usage, add security risks or hamper performance.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;The last points already go in the area that you change the code, but still under the premise that you want to use the software. It seems if the code is available for change the line between using software and working on software can become unclear.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-26T08:00:39.953" LastActivityDate="2015-06-26T08:00:39.953" CommentCount="3" />
  <row Id="394" PostTypeId="2" ParentId="390" CreationDate="2015-06-25T23:12:27.743" Score="2" Body="&lt;p&gt;Obviously you can apply all the checks that you can also apply to proprietary software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But there are a few advantages you can use to check the software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You have access to the source code. That allows you to check the source: Make an audit. Also you can use tools for static code analysis with patterns for security related flaws. You can add logging of metrics to the source and use that in your test-environment to gain more insight into possible problems.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-25T23:12:27.743" CommentCount="0" />
  <row Id="395" PostTypeId="1" AcceptedAnswerId="417" CreationDate="2015-06-25T23:18:10.927" Score="9" ViewCount="184" Body="&lt;p&gt;From time to time, an open source project will attract contributors who have a lot of enthusiasm, but lack skill, knowledge (or patience to know the project). These contributors can cause clutter, put off other contributors or sometimes directly harm the project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Presuming that this contributor is actually harming the project in some way (which might not always be the case), what is the best way to deal with them. Preferably in a way that doesn't hurt anyone's feelings, appears professional and benefits everyone involved (if at all possible).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'd like any answer to this question to discuss projects with different ways of contributing. (Direct commits, pull requests, ...)&lt;/p&gt;&#xA;" OwnerUserId="168" LastEditorUserId="14" LastEditDate="2015-06-28T11:20:20.237" LastActivityDate="2015-06-28T11:20:20.237" Title="How do I deal with (enthusiastic) contributors who damage more than they help?" Tags="&lt;contributor&gt;&lt;human-resources&gt;&lt;problem-contributor&gt;" AnswerCount="2" CommentCount="4" FavoriteCount="4" />
  <row Id="397" PostTypeId="1" AcceptedAnswerId="399" CreationDate="2015-06-26T00:08:15.660" Score="6" ViewCount="50" Body="&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt;&#xA;Lets say I have a software I have been developing. I am about to release it but I first have to apply some licenses. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&#xA;Suppose I want to release part of the software (the code) under one license and the other part, such as pictures, under another licence, can I do this?&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;If yes, how?&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;If no, what other things can I do to get this result?&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-06-26T00:37:50.720" LastActivityDate="2015-06-26T00:37:50.720" Title="Can I have one license cover part of a software and another covering the other half?" Tags="&lt;license-compatibility&gt;" AnswerCount="2" CommentCount="0" />
  <row Id="398" PostTypeId="2" ParentId="395" CreationDate="2015-06-26T00:13:29.747" Score="1" Body="&lt;p&gt;The best way to deal with people who are ultimately being more of a bother than a help is to:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;First&lt;/strong&gt;&#xA;Talk to them. &#xA;They may not know what they are doing wrong, talking to them may help solve the problem.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Second&lt;/strong&gt;&#xA;If they still have not improved you may need to remove them from the project. Although this may be difficult, it may be the only thing to save your project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Tip (another idea)&lt;/strong&gt; If they are new, try to suggest they learn more of that language, and become more knowledgeable, explain this could help them (and the project) in the long run. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;*Warning&lt;/strong&gt; Depending on how much they contributed they may have legal ownership (or co ownership) over the project. Try to work out a deal with them. To prevent legal issues if you publish the project!&lt;/p&gt;&#xA;" OwnerUserId="271" LastActivityDate="2015-06-26T00:13:29.747" CommentCount="0" />
  <row Id="399" PostTypeId="2" ParentId="397" CreationDate="2015-06-26T00:18:11.673" Score="9" Body="&lt;p&gt;&lt;strong&gt;Yes you can.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One example: the &lt;a href=&quot;https://github.com/id-Software/DOOM-3&quot;&gt;source code for the video game Doom 3&lt;/a&gt; is released as GPL, but this release does not include the game data, which is still covered by the game's original release EULA.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The answer is obvious when you realise there's a misconception that seems to be quite common: &lt;strong&gt;if you are the copyright holder, you can license in whatever way you want. The license doesn't affect yourself.&lt;/strong&gt; Software licenses can't magically take away rights that &lt;strong&gt;you already have.&lt;/strong&gt;&lt;/p&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-06-26T00:18:11.673" CommentCount="1" />
  <row Id="400" PostTypeId="2" ParentId="397" CreationDate="2015-06-26T00:20:36.793" Score="4" Body="&lt;p&gt;&lt;strong&gt;You can do it.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The best way to think about it is from the perspective of &lt;a href=&quot;http://en.wikipedia.org/wiki/License_compatibility&quot; rel=&quot;nofollow&quot;&gt;license compatibility&lt;/a&gt; (see also &lt;a href=&quot;http://opensource.stackexchange.com/questions/1/how-can-i-determine-if-two-open-source-licenses-are-compatible-with-each-other&quot;&gt;How can I determine if two open source licenses are compatible with each other?&lt;/a&gt;). In &lt;a href=&quot;http://fsfe.org/campaigns/gplv3/fisl-rms-transcript#licence-compatibility&quot; rel=&quot;nofollow&quot;&gt;the words of Richard Stallman&lt;/a&gt;,&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Suppose we have two or three programs and each one has its own licence and you would like to merge them or link them together. Can you do that? Well, each of these licences might make a condition about the licence of the combination. So, the question is: is there anyway you can satisfy both of these licences at once? If there is, then the licences are compatible, you can make a combination because there is a way to licence the combination that satisfies both of these licences. &lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;But if there's no way to licence the combination so as to satisfy both of these requirements together, the combination can't be released. That means the licences are incompatible.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Two aspects of the same software can be used together if they are compatible. But choose wisely.&lt;/p&gt;&#xA;" OwnerUserId="145" LastEditorUserId="145" LastEditDate="2015-06-26T00:34:59.553" LastActivityDate="2015-06-26T00:34:59.553" CommentCount="0" />
  <row Id="402" PostTypeId="1" AcceptedAnswerId="403" CreationDate="2015-06-26T00:38:31.450" Score="2" ViewCount="41" Body="&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am building a website with my business partner. This website is going to contain information that we do not want to be reused. To do this I am going to release it under a creative commons license. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the event someone uses our content without our permission, would I be able to take action against this person?&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If yes, to what extent?&lt;/li&gt;&#xA;&lt;li&gt;If no, why not?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-06-26T02:08:53.530" LastActivityDate="2015-06-26T02:08:53.530" Title="Are Creative Commons licenses enforceable in the event of a breach?" Tags="&lt;licensing&gt;&lt;creative-commons&gt;&lt;enforcement&gt;" AnswerCount="1" CommentCount="2" />
  <row Id="403" PostTypeId="2" ParentId="402" CreationDate="2015-06-26T00:44:32.233" Score="4" Body="&lt;p&gt;Yes, there have been several cases where violations of a CC licence have been taken to court, and the rights holders have won. &lt;a href=&quot;https://en.wikipedia.org/wiki/Creative_Commons_license#Legal_aspects&quot; rel=&quot;nofollow&quot;&gt;Wikipedia lists just a few&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note that the Creative Commons organisation would not be a legal party if this happened to you, and you would have to cover all of your own legal costs.&lt;/p&gt;&#xA;" OwnerUserId="190" LastActivityDate="2015-06-26T00:44:32.233" CommentCount="0" />
  <row Id="404" PostTypeId="1" CreationDate="2015-06-26T00:48:44.730" Score="1" ViewCount="19" Body="&lt;p&gt;&lt;strong&gt;Edited&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Say I was building a truck, and I wanted others to be able to help with the design. Assuming I applied a CC license to it. Could I release it as an open sourced truck? How would this work? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is different because I have already released it under a CC license, that does not mean it is open sourced.&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="271" LastEditDate="2015-06-26T00:59:45.563" LastActivityDate="2015-06-26T00:59:45.563" Title="Can you make an open source piece of hardware?" Tags="&lt;licensing&gt;&lt;hardware&gt;" AnswerCount="0" CommentCount="2" ClosedDate="2015-06-26T01:31:23.893" />
  <row Id="405" PostTypeId="1" CreationDate="2015-06-26T00:58:12.340" Score="1" ViewCount="29" Body="&lt;p&gt;I have been writing a blog for a number of years, and it occurred to me that I never released any of my writing under a license. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;My question is, how do I determine whether or not I should use a license with my work? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Why would this be better than any copyright? &lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-06-30T02:12:16.350" LastActivityDate="2015-06-30T02:12:16.350" Title="How do I determine if I should use a license for my writing?" Tags="&lt;licensing&gt;" AnswerCount="1" CommentCount="2" ClosedDate="2015-07-01T07:15:57.153" />
  <row Id="407" PostTypeId="2" ParentId="405" CreationDate="2015-06-26T01:05:38.750" Score="6" Body="&lt;p&gt;The only reason you would need to associate a licence with your blog is if you want others to be able to take and use your material on other sites.&#xA;Without a licence, it falls under the copyright laws of one of:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The country in which you reside&lt;/li&gt;&#xA;&lt;li&gt;The country where the server you publish on resides&lt;/li&gt;&#xA;&lt;li&gt;The home country of the company that &lt;strong&gt;owns&lt;/strong&gt; that server&lt;/li&gt;&#xA;&lt;li&gt;The country where the person who takes your content resides&lt;/li&gt;&#xA;&lt;li&gt;Somewhere else&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Resolving that needs the services of one or more lawyers, but most countries are signatories to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Berne_Convention&quot;&gt;Berne Convention&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Licenses are about about relaxing your copyright protection in a way that you control.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The other thing to consider, unless you publish on your own server, is that the blog service you use may stipulate a licence in its terms and conditions.&lt;/p&gt;&#xA;" OwnerUserId="29" LastActivityDate="2015-06-26T01:05:38.750" CommentCount="0" />
  <row Id="408" PostTypeId="1" AcceptedAnswerId="409" CreationDate="2015-06-26T01:12:10.490" Score="1" ViewCount="42" Body="&lt;p&gt;Suppose I upload an image to my website under no license or copyright notice. But then I decide that I want to license it under specific open source CC attributes. Can I simply just add the license? Or am I no longer able to do this (because I already published it).&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If yes, what would happen to someone that has already taken and used this image, but is now breaking the license since I changed it?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="271" LastEditorUserId="190" LastEditDate="2015-07-06T02:07:41.347" LastActivityDate="2015-07-06T02:07:41.347" Title="Can I place a license on something that I already published?" Tags="&lt;relicensing&gt;&lt;unlicensed-code&gt;" AnswerCount="1" CommentCount="1" ClosedDate="2015-06-26T05:09:43.147" />
  <row Id="409" PostTypeId="2" ParentId="408" CreationDate="2015-06-26T01:13:44.233" Score="2" Body="&lt;p&gt;If you are the sole copyright holder of a work* you can at any time change the licence of the work. This includes adding, removing or switching licences. But doing this will not retroactively remove the rights of anyone who acquired a copy of the work while it was licensed under the old licence.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;*(If you are not the sole copyright holder then you need to get all collaborators to agree to a licence change.)&lt;/p&gt;&#xA;" OwnerUserId="190" LastActivityDate="2015-06-26T01:13:44.233" CommentCount="4" />
  <row Id="410" PostTypeId="1" CreationDate="2015-06-26T01:23:52.147" Score="5" ViewCount="38" Body="&lt;p&gt;Inspired by &lt;a href=&quot;http://opensource.stackexchange.com/questions/392/source-code-or-binaries-how-important-is-this&quot;&gt;Source code or binaries? How important is this?&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Many of the larger, more widely used, FLOSS projects provide both source distributions and ready-to-install binary images. This seems especially common when one of the target operating systems is Windows (presumably on the assumption most users don't have a compiler installed).&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;What are the advantages to doing so?&lt;/li&gt;&#xA;&lt;li&gt;What are the disadvantages?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="29" LastEditorUserId="69" LastEditDate="2015-06-26T02:07:43.203" LastActivityDate="2015-06-28T19:52:51.303" Title="Should my project provide precompiled binaries?" Tags="&lt;distribution&gt;&lt;binaries&gt;" AnswerCount="2" CommentCount="3" FavoriteCount="2" />
  <row Id="411" PostTypeId="2" ParentId="410" CreationDate="2015-06-26T02:05:58.223" Score="4" Body="&lt;p&gt;There are several reasons to provide binaries, some stronger than others:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;First a passive reason - &lt;strong&gt;&quot;Why not?&quot;&lt;/strong&gt; : if you have any users on a given target platform, the code will need to be tested on that platform, which requires creating binaries. So you will already have the binaries.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now active reasons:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Convenience:&lt;/strong&gt; if you make it easier for people to use your code, it will become more widely used, in turn making it more likely to have useful contributions. Note that even users with no software experience can spot bugs and request features.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Reputation:&lt;/strong&gt; If you expect some of your users to be disinclined to use a compiler, then they can be expected to use precompiled binaries. If you don't provide these, they are likely to get them from somewhere else, which may be somewhere unscrupulous that provides them will malware or junkware. So providing binaries reduces the risk of ill-will being unfairly directed towards your project.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="37" LastActivityDate="2015-06-26T02:05:58.223" CommentCount="3" />
  <row Id="412" PostTypeId="1" CreationDate="2015-06-26T02:21:37.767" Score="9" ViewCount="143" Body="&lt;p&gt;I have found a Java library that can be used under the GPL licence (not the LGPL licence).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Can I embed the library in my program without the requirement of using the GPL licence?&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I have no requirement to change the java library myself. &lt;/li&gt;&#xA;&lt;li&gt;It is actually a library to process pdf files.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Essentially I believe this is a question about if this a derivative work, or independent work with another component.&lt;/p&gt;&#xA;" OwnerUserId="185" LastActivityDate="2015-06-26T16:05:11.603" Title="Do I have to release my code as GPL when a Java Library is GPL" Tags="&lt;gpl&gt;" AnswerCount="2" CommentCount="5" FavoriteCount="1" />
  <row Id="413" PostTypeId="2" ParentId="361" CreationDate="2015-06-26T02:23:22.363" Score="3" Body="&lt;p&gt;Commercial projects often do this when the assets are the valuable parts. Games are a good example: often what makes a game worth purchasing is not the engine, but the level design, the graphics, etc. Another category of examples is having an open source reader for closed content; in this case the content may be distributed in a standard format for which open source readers are already available, such as PDF or EPUB.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The benefit of not making the asset open source is of course to make money by charging per user.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The advantage of making the engine open source is that you can get others to do maintenance for you. A bug occurs? Some of your tech-savvy users will send a debug trace or even a patch, so it's less work for you to fix it. A new platform comes out? Someone may do the job of porting the engine to that platform. Your engine might be picked up by some free software distributions: free advertising.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Usually some assets are available to everyone, e.g. demo levels. But in any case the people who will be most motivated to work on the open source engine are the ones who have purchased the assets. People can test their modifications on the demo levels or on the commercial levels.&lt;/p&gt;&#xA;" OwnerUserId="60" LastActivityDate="2015-06-26T02:23:22.363" CommentCount="0" />
  <row Id="414" PostTypeId="2" ParentId="390" CreationDate="2015-06-26T02:36:14.823" Score="1" Body="&lt;p&gt;Having the source code available makes it easier to review it for security problems. However, this is mostly of theoretical interest in the context of a business (or a non-profit) deciding to use a piece of software. In practice, reviewing code for security is a long process requiring rare expertise, so people don't do it. When an organization wants to have an assessment of the security of the software, they typically get professionals to do it; mid- to high-assurance assessments tend to require that the assessor has access to the source code (by special contract with the author, if the source code is not normally available). Typical prices charged by professionals are in the $10k–1m range for a few months spent to review and test a medium-sized project with a few security objectives.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Having the development history and the review history is actually more valuable than having the source code. Seeing that a project follows good development practices and has a good review process gives confidence in its security, and that's relatively easy to assess, compared with directly assessing the security of the software. Professional security assessment schemes typically verify that the development process followed good practices, in addition to the source review and penetration testing.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Having the source available makes it easier to explore &lt;em&gt;specific&lt;/em&gt; potential security issues. If you worry about, say, the way a program generates cryptographic keys, then having the source code can give you an answer in a few minutes, whereas this particular topic is hard to assess without the source.&lt;/p&gt;&#xA;" OwnerUserId="60" LastActivityDate="2015-06-26T02:36:14.823" CommentCount="0" />
  <row Id="415" PostTypeId="2" ParentId="412" CreationDate="2015-06-26T02:42:15.527" Score="6" Body="&lt;p&gt;Yes, your program must also be GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;GPL is quite clear on this matter: if your program links to a GPL library, no matter the type of linking, then your program also comes under the GPL (when you distribute). &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-java.html&quot;&gt;LGPL adds a dynamic linking exception&lt;/a&gt;, but this doesn't apply in your case.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;With Java it's no different; if your program links with a GPL .jar, it is considered a derivative as far as the GPL is concerned. LGPL also works as intended with Java.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The typical arrangement for Java is that each library an application uses is distributed as a separate JAR (Java Archive) file. Applications use Java's “import” functionality to access classes from these libraries. When the application is compiled, function signatures are checked against the library, creating a link. The application is then generally a derivative work of the library. So, the copyright holder for the library must authorize distribution of the work. The LGPL permits this distribution.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So in your Java project, if it ever includes a .jar that is GPL, or you type in &quot;import foobar&quot; where foobar is GPL, then your program is also affected.&lt;/p&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-06-26T02:42:15.527" CommentCount="2" />
  <row Id="417" PostTypeId="2" ParentId="395" CreationDate="2015-06-26T03:54:17.053" Score="6" Body="&lt;p&gt;Linus Torvalds has talked about his experience on this subject; the book &lt;a href=&quot;http://producingoss.com/&quot;&gt;Producing Open Source Software&lt;/a&gt; also has &lt;a href=&quot;http://producingoss.com/en/difficult-people.html&quot;&gt;a section that deals with difficult people&lt;/a&gt;, which is mostly related. If you want to read more, look these up.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Maintain control.&lt;/strong&gt; How is it possible that contributors can do damage in the first place? Did you give them commit privileges without them demonstrating trustworthiness and aptitude beforehand?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Open source doesn't mean you give away all the keys to the world; that's an invitation to disaster. You are still responsible for nurturing a community and directing the project in right directions. The most successful open source projects are very authoritarian at the topmost levels, as this makes decision making faster and easier, especially for the difficult decisions for the greater good that hurt a minority in the process.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is a term called &lt;a href=&quot;http://producingoss.com/en/social-infrastructure.html#benevolent-dictator&quot;&gt;&lt;em&gt;Benevolent Dictator&lt;/em&gt;&lt;/a&gt; which is an example of this fact. This is where an individual wields final decision-making power over the entire project, much like a dictator. The reason why this often works is that open source projects are perpetually under threat of being superseded by a superior fork, so the dictator often acts in a manner that is beneficial to the project as a whole, hence the &quot;benevolent&quot; part.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Just because your project may be large and has lots of contributors, doesn't mean you give them all commit privileges. Take a look at the &lt;a href=&quot;https://github.com/torvalds/linux/commits&quot;&gt;linux commits&lt;/a&gt;; although hundreds of people contribute code, they are being merge-committed by a handful of people only.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So don't give out privileges willy-nilly, keep the means to limit disruptive behaviour like spamming and being rude in forums.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the &lt;a href=&quot;http://producingoss.com/en/difficult-people.html#difficult-people-case-study&quot;&gt;case study of the producingoss book&lt;/a&gt;, a loquacious mailing list poster backed down after being threatened with being filtered. Method matters a lot but the important point is that you need to be able to control and limit problematic people's actions.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Set expectations, communicate early and often.&lt;/strong&gt; When a project starts, many things are ambiguous or only known by the founders. When you start getting outside contributions, you will inevitably run into issues like coding style, naming conventions, testing procedures and so on. If there are differences, you should have conversations about these early, and set up policies and guidelines if necessary. This is not so much about having something to bash over the heads of people, but more about &lt;em&gt;setting expectations&lt;/em&gt; for contributors.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Be open to communications, and be proactive. If someone wishes to contribute, talk to them to make sure they understand what the expectations are, and how to improve the chances of their contribution being accepted. One of the worst things that can happen is that this is not made clear, and a contributor works in the dark for months, to contribute a giant changeset that is broken and unsalvageable. This is a big waste of time and leads to hurt feelings all around. Linus talks about having a similar experience in &lt;a href=&quot;https://www.youtube.com/watch?feature=player_detailpage&amp;amp;v=MShbP3OpASA#t=2141&quot;&gt;this video here&lt;/a&gt;; it shapes why he is so blunt and rude.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&quot;...I've literally had developers who were working on things that I didn't really like, but I didn't shut down early enough. They worked on it for a long time; they felt that it was ready, they submitted it to me, and I said &quot;no this was horrible&quot; because at that point I had to make a decision. And at least in one of those cases I had some other friends basically email me later and saying &quot;the guy is suicidal&quot;.&quot;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Hopefully you will encounter much less drama than this, but you should still keep an eye out for what contributors are doing. If they go dark check up on them, make sure they are not going down the wrong path.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-06-26T03:54:17.053" CommentCount="0" />
  <row Id="418" PostTypeId="1" AcceptedAnswerId="419" CreationDate="2015-06-26T04:13:17.057" Score="6" ViewCount="83" Body="&lt;p&gt;I am working on an open sourced project with some developers.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It occurred to me that I was not sure (legally) who the owner actually is due to it being an open source project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is the ownership spit equally between us contributors? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;If no, how is it calculated?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="199" LastEditDate="2015-06-26T07:28:06.873" LastActivityDate="2015-06-26T07:28:06.873" Title="In an open sourced project who is the owner?" Tags="&lt;development&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="419" PostTypeId="2" ParentId="418" CreationDate="2015-06-26T05:00:48.833" Score="8" Body="&lt;p&gt;In general, &lt;strong&gt;if you write the code, you own the copyright.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You may have written module A, or the file B, or the function C, or the line D. Doesn't matter who else worked on those parts, the parts you write are your own, and the parts you didn't write aren't.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The only difference is that, since this is an open source project, your co-contributors have the same rights as users of the software - they have access to the source, and can freely use, derive, and redistribute the source code to the extent allowed by the license. What they can't do is claim parts they didn't write as their own.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One notable exception is if you explicitly assign the copyright away. This is done so that the project can relicense in the future without having to bother the original authors. A common method of doing so is via &lt;a href=&quot;https://en.wikipedia.org/wiki/Contributor_License_Agreement&quot;&gt;Contributor License Agreements&lt;/a&gt;. Also, if you are writing code for compensation, check the terms because you're most likely working as a for-hire programmer, where your code is owned by whoever is paying you.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As for &lt;strong&gt;who owns the whole&lt;/strong&gt;, that's a difficult question to answer. Usually this is agreed upon or fought out in court, where one method may be to estimate the number of man-hours each author spent on the project, and multiply by some expected compensation rate. This is no different than how to split assets when a business partnership splits.&lt;/p&gt;&#xA;" OwnerUserId="175" LastEditorUserId="175" LastEditDate="2015-06-26T05:10:01.843" LastActivityDate="2015-06-26T05:10:01.843" CommentCount="1" />
  <row Id="420" PostTypeId="1" AcceptedAnswerId="429" CreationDate="2015-06-26T05:27:04.790" Score="10" ViewCount="104" Body="&lt;p&gt;Is there a mechanism or service that allows me to offer my work under non-free terms, but guarantee that some time in the future, the work automatically becomes open source?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, could I release something under license A, but also under a free, irrevocable license B that only takes effect after the year 20XX?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Or is there a well-known service, who will distribute my work under a free license of my choosing after an agreed date?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are a few motivations for doing so:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Perhaps I want to monetise my work in the short term, but would like the work to become free at a date sooner than copyright limits&lt;/li&gt;&#xA;&lt;li&gt;I want to add value to users by guaranteeing that the work eventually becomes free and maintainable by volunteers, even if I get hit by a bus or I go bankrupt&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-06-26T15:49:54.770" Title="Can I force my work to be open sourced in the future?" Tags="&lt;licensing&gt;" AnswerCount="3" CommentCount="0" FavoriteCount="2" />
  <row Id="421" PostTypeId="1" CreationDate="2015-06-26T07:51:05.870" Score="7" ViewCount="86" Body="&lt;p&gt;What would be a good licence for computable data models? Technically they're source code, but they're always constrained and transformed to other artefacts before being used in actual software. At the moment we're using CC-BY-SA, which industry is wary about because of the -SA clause. CC is also not quite right because it's geared towards free works rather than free software. We've been thinking about Apache 2, MIT and BSD, but we're not sure about their merits for this particular purpose.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The data models in question are so-called &lt;em&gt;archetypes&lt;/em&gt; made using the &lt;a href=&quot;http://openehr.org&quot; rel=&quot;nofollow&quot;&gt;openEHR&lt;/a&gt; specifications and the ISO-standard Archetype Definition Language (ADL; ISO 13606-2).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;We'd like to allow sharing, forking/derivative works, and the use of derived artifacts &lt;em&gt;in software&lt;/em&gt; with no licence restrictions. We're unsure if we'd like to allow re-licensing of archetypes that have not been converted to code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;We'd prefer a well-known licence, as we're in a market where vendors are very risk averse and generally skittish about open source.&lt;/p&gt;&#xA;" OwnerUserId="59" LastEditorUserId="29" LastEditDate="2015-07-02T17:45:45.873" LastActivityDate="2015-07-02T21:05:26.080" Title="What would be a good licence for computable data models?" Tags="&lt;creative-commons&gt;&lt;licensing&gt;&lt;license-recommendation&gt;" AnswerCount="1" CommentCount="11" FavoriteCount="1" />
  <row Id="422" PostTypeId="2" ParentId="420" CreationDate="2015-06-26T07:53:53.327" Score="1" Body="&lt;p&gt;What you need here is a lawyer who can help you draft a license agreement.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The license agreement would give the buyer a propriety license to use your product, and also the right to receive an open license of your choosing at some point in the future.&lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-06-26T07:53:53.327" CommentCount="0" />
  <row Id="423" PostTypeId="1" AcceptedAnswerId="428" CreationDate="2015-06-26T08:36:06.810" Score="5" ViewCount="35" Body="&lt;p&gt;If I want something I have written release as open source, for instance a novel, is that possible? A novel does not have a source, the work itself is all that is needed to recreate the work. In cases of software I need the source code to create a changed version of the software, but in case of a novel all I need is the novel itself? So does the written text works as it's own source? Or are written text impossible to open source?&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-26T11:12:06.390" Title="Can a novel be open source, although it does not have a source?" Tags="&lt;source&gt;&lt;writing&gt;" AnswerCount="2" CommentCount="0" />
  <row Id="424" PostTypeId="5" CreationDate="2015-06-26T08:53:11.780" Score="0" Body="&lt;p&gt;The first formal definition of free software was published by FSF in February 1986. That definition, written by Richard Stallman, is still maintained today and states that software is free software if user who receive a copy of the software have the following four freedoms.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The freedom to run the program as you wish, for any purpose (freedom 0).&lt;/li&gt;&#xA;&lt;li&gt;The freedom to study how the program works, and change it so it does your computing as you wish (freedom 1). Access to the source code is a precondition for this.&lt;/li&gt;&#xA;&lt;li&gt;The freedom to redistribute copies so you can help your neighbor (freedom 2).&lt;/li&gt;&#xA;&lt;li&gt;The freedom to distribute copies of your modified versions to others (freedom 3). By doing this you can give the whole community a chance to benefit from your changes. Access to the source code is a precondition for this.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;For more information visit wikipedia article on &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_software&quot; rel=&quot;nofollow&quot;&gt;Free Software&lt;/a&gt;, Also visit GNU philosophy on &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.html&quot; rel=&quot;nofollow&quot;&gt;What is Free Software?&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="296" LastEditorUserId="296" LastEditDate="2015-07-04T10:02:41.893" LastActivityDate="2015-07-04T10:02:41.893" CommentCount="0" />
  <row Id="425" PostTypeId="4" CreationDate="2015-06-26T08:53:11.780" Score="0" Body="Use this tag for free software, defined as computer software that gives users the freedom to run the software for any purpose as well as to study, modify, and distribute the original software and the adapted versions. (consider free as in freedom ; don't confuse with freeware)" OwnerUserId="296" LastEditorUserId="55" LastEditDate="2015-07-04T09:38:24.437" LastActivityDate="2015-07-04T09:38:24.437" CommentCount="0" />
  <row Id="426" PostTypeId="2" ParentId="423" CreationDate="2015-06-26T08:57:47.637" Score="8" Body="&lt;p&gt;Novels and other written works do have source code: it's the &quot;preferred form for modification&quot;, so basically the files you need if you want to edit the &quot;work&quot;, whatever it is. If you write your novel in LibreOffice, it's the &lt;code&gt;.odt&lt;/code&gt; file, plus any external files you may need (images, diagrams etc.). If you write it in LaTeX, it's the &lt;code&gt;.tex&lt;/code&gt; file, plus any external files required. Don't forget any files you may use to prepare the final output (the cover, etc.). For images, ideally you'd keep the &lt;code&gt;.xcf&lt;/code&gt; files for example if you're using the Gimp, as well as the PNGs or JPEGs you use in the document.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you work directly on paper (handwriting or using a typewriter or whatever), then the preferred form for modification is the manuscript because that's all there is. You can still use a free / open source license on the text though; it's just that the effort required is greater... (This is pretty much the same reasoning as allowing JPEGs of photos as the preferred form for modification, rather than everything that was photographed!)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So yes, you can open source written text.&lt;/p&gt;&#xA;" OwnerUserId="118" LastEditorUserId="118" LastEditDate="2015-06-26T09:07:53.820" LastActivityDate="2015-06-26T09:07:53.820" CommentCount="2" />
  <row Id="427" PostTypeId="1" AcceptedAnswerId="433" CreationDate="2015-06-26T10:13:32.027" Score="3" ViewCount="31" Body="&lt;p&gt;Teaching materials like textbooks or work sheets can be opened up to free redistribution and free change for everyone. What risks does the publisher face, then deciding to do so? Are there legal consequences?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="14" LastEditDate="2015-06-28T21:10:07.070" LastActivityDate="2015-06-28T21:10:07.070" Title="What risks are involved for a publisher, if he decides to release teaching materials as open source?" Tags="&lt;publishing&gt;&lt;educational-resources&gt;" AnswerCount="1" CommentCount="1" FavoriteCount="1" />
  <row Id="428" PostTypeId="2" ParentId="423" CreationDate="2015-06-26T11:12:06.390" Score="3" Body="&lt;p&gt;Novels, unlike software, don't have the large transformation between source code and binary that is usually the case with software. You can study and &quot;tinker&quot; with novels, but you cannot do the same (without great difficulty) with software without source code. Source code is important for software since it is a prerequisite for modification and sharing derivations. Therefore terms like &quot;source code&quot; are mostly irrelevant for novels, or things like visual art and documentation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is for this reason that, although you can apply software licenses to them, there are much better options. This is a big reason why the Creative Commons licenses were created; they, unlike software licenses, contain no mention of &quot;source code&quot; and are designed for creative works in general. GFDL may also be a suitable free license for such works.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When referring to such licenses, it may be less appropriate to refer to them as &quot;free software&quot; or &quot;open source&quot;. Instead, people usually refer to these as &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Free_culture_movement&quot; rel=&quot;nofollow&quot;&gt;free culture&lt;/a&gt;&quot;. Even though there is no source code, the goals and ethoses have large overlaps, and focus on user freedoms such as &lt;strong&gt;the freedom to use for any purpose&lt;/strong&gt;, &lt;strong&gt;the freedom to redistribute&lt;/strong&gt;, and &lt;strong&gt;the freedom to share your modifications&lt;/strong&gt;. If you compare this to &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.en.html&quot; rel=&quot;nofollow&quot;&gt;FSF's definition of free software&lt;/a&gt;, this is almost the same with the exception of freedom 1 which is inapplicable. Those licenses that do not grant these freedoms are &quot;not free culture licenses&quot;, or just &quot;non-free&quot; for short. For example, &lt;a href=&quot;https://creativecommons.org/freeworks&quot; rel=&quot;nofollow&quot;&gt;CC-BY-NC is &quot;not approved for free cultural works&quot;&lt;/a&gt; because it restricts commercial use.&lt;/p&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-06-26T11:12:06.390" CommentCount="1" />
  <row Id="429" PostTypeId="2" ParentId="420" CreationDate="2015-06-26T11:30:54.993" Score="4" Body="&lt;p&gt;As has been stated, you would need legal advice before making a final decision.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Bear in mind that in addition to the possibility of using a licence conditional on date, there is also the possibility of using a licence based on other conditions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Qt_%28software%29#Licensing&quot; rel=&quot;nofollow&quot; title=&quot;Qt licensing history&quot;&gt;Early in its history&lt;/a&gt;, Qt was available under a commercial licence, but with conditions to ensure that it would be made available under the BSD license should no free/open source version of Qt be released during 12 months&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Many commercial companies use source code escrow to ensure that they will gain access to source code of closed source software if the company providing the software fails to maintain and update the software for any reason. Similarly &lt;a href=&quot;https://en.wikipedia.org/wiki/Source_code_escrow#Free_software&quot; rel=&quot;nofollow&quot; title=&quot;free software applications of escrow&quot;&gt;source code escrow&lt;/a&gt; can be used to ensure source code will be released under an open source licence under such circumstances.&lt;/p&gt;&#xA;" OwnerUserId="37" LastActivityDate="2015-06-26T11:30:54.993" CommentCount="0" />
  <row Id="430" PostTypeId="1" CreationDate="2015-06-26T12:07:13.147" Score="4" ViewCount="33" Body="&lt;p&gt;The authors of a free/libre work can change the license of their work any time, and they can even make it non-free again. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;This does not affect copies that were made before that change (and any further copies from that &quot;branch&quot;), so I may still use/modify/distribute it according the original license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Let’s assume the authors remove the license as well as all mentions that their work once was published under this license (and they forbid the &lt;a href=&quot;http://web.archive.org/&quot; rel=&quot;nofollow&quot;&gt;Wayback Machine&lt;/a&gt; to publish older versions of their website).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I’m distributing their work (according to the terms of the original license). &lt;strong&gt;How can I &lt;em&gt;prove&lt;/em&gt; that the work really was published under this license?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;(I hope it will never be necessary to prove this, but better be safe than sorry.)&lt;/p&gt;&#xA;" OwnerUserId="138" LastActivityDate="2015-06-26T12:51:04.750" Title="How can I prove that a work was free/libre at some point?" Tags="&lt;distribution&gt;&lt;relicensing&gt;" AnswerCount="1" CommentCount="1" />
  <row Id="431" PostTypeId="2" ParentId="430" CreationDate="2015-06-26T12:51:04.750" Score="2" Body="&lt;p&gt;By the license declaration they originally had bundled with their work. In &lt;a href=&quot;http://opensource.stackexchange.com/a/366/55&quot;&gt;this answer&lt;/a&gt; I said that the license declaration at least has to define which work is licensed and with which license. As you copy the work, you copy the license declaration.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now, anyone can claim that digital data is easily tampered with, so to be secure you should take measures to document that the work was licensed that way at the moment you copy this. This documentation can be used in the worst case in court, but probably helps already to prohibit it goes that far.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you used that so far, didn't document and the source now does the silent change it is far more difficult. If you know about the change beforehand, you can use that for documentation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;How far you go with the documentation is up to you.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-26T12:51:04.750" CommentCount="0" />
  <row Id="432" PostTypeId="1" CreationDate="2015-06-26T13:44:17.413" Score="4" ViewCount="29" Body="&lt;p&gt;Music can be shared under open source principles that allow remixing, for instance under matching Creative Commons licenses and on platforms like Soundcloud. It is common sense, that a release as open source makes the piece more attractive, it can gain through word-of-mouth advertising and can become more popular than non-free pieces.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Does anyone had measured the positive effect on popularity for music? Or, if such a thing for music don't exist, how is it with other forms of work? How useful is opening up the work as a tool for marketing?&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-26T15:57:13.227" Title="Do numbers/studies exist that show, how much music is popularized by releasing it as Open Source?" Tags="&lt;popularity&gt;&lt;marketing&gt;" AnswerCount="1" CommentCount="2" FavoriteCount="2" />
  <row Id="433" PostTypeId="2" ParentId="427" CreationDate="2015-06-26T14:12:08.553" Score="2" Body="&lt;p&gt;When open sourcing material, a commercial publisher faces the economical risk that anyone can offer the same material for a lower price. Another publisher would not have any cost for creating the content, only the cost of production, distribution and marketing (when they distribute electronically, the first two are very low). That would certainly allow them to underbid the original publisher and drive them off the market.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When the publisher has no economical interests, there is no particular risk in open-sourcing their work, except maybe hurting their reputation when the material is bad.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Possible legal consequences should be discussed with a lawyer who is familiar with the jurisdiction where the material is distributed.&lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-06-26T14:26:02.577" LastActivityDate="2015-06-26T14:26:02.577" CommentCount="1" />
  <row Id="434" PostTypeId="1" AcceptedAnswerId="439" CreationDate="2015-06-26T14:35:10.160" Score="4" ViewCount="67" Body="&lt;p&gt;Upon choosing a license at the Creative Commons page, Creative Commons tells you if the license is a &quot;Free Culture License&quot;, or whether it isn't.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What is a Free Cultural Work?&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-08-09T13:45:21.997" LastActivityDate="2015-08-09T13:45:21.997" Title="What is a Creative Commons Free Cultural Work?" Tags="&lt;creative-commons&gt;&lt;cc-cultural-work&gt;" AnswerCount="3" CommentCount="0" FavoriteCount="0" />
  <row Id="435" PostTypeId="1" AcceptedAnswerId="437" CreationDate="2015-06-26T14:42:25.587" Score="8" ViewCount="226" Body="&lt;p&gt;This is not a real world issue, at least for me. It is more about a thought experiment from a talk that I once had with a friend:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Let's say that Acme develops closed source software for their own business and there are some sort of industrial secret on that code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;At Acme, one of their staff members, Han Solo, is about to be fired. Knowing that, he grabs some of the Acme's code and saves it in a pen-drive or something like that.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;After leaving the company, he decides to publish Acme's code at some Open Source hosting (like GitHub or SourceForge), adding some Open Source license with the intent of damaging Acme's business. Acme does not notices this soon enough, and many people then have downloaded the code, modified it, forked it and improved it as any successfully Open Source software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some day, Han's plan starts to work, and Acme starts to lose money and customers who do not want to pay for their software anymore, since there is an Open Source alternative that does exactly the same as Acme's code does and it is easily found in the internet for free.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Acme would likely sue Han Solo, and Han Solo would be found guilty. But now we come to the question: &lt;strong&gt;What would happen with the now Open Source leaked code?&lt;/strong&gt; The Open Source project is the fruit of a crime, and it is in fact stolen software that was Open Sourced. Should/could Acme try to hunt down wherever it is hosted and close it again (which is very unlikely to work)? What Acme could/would/should do to the community that uses the project?&lt;/p&gt;&#xA;" OwnerUserId="34" LastEditorUserId="34" LastEditDate="2015-06-26T19:15:56.497" LastActivityDate="2015-08-04T20:08:03.490" Title="What happens if stolen software is published as Open Source?" Tags="&lt;copyright&gt;&lt;proprietary-code&gt;&lt;intellectual-property&gt;" AnswerCount="3" CommentCount="0" FavoriteCount="2" />
  <row Id="436" PostTypeId="1" CreationDate="2015-06-26T14:46:43.917" Score="4" ViewCount="24" Body="&lt;p&gt;There are applications that are widely used out there (just think of PHP, MySQL, etc...). What would happen if the organisations behind them pull this software back into closed source?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;On what grounds can these companies bring (parts of) Open Source projects into closed source?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, parts of MySQL now under management of Oracle, have become close source. How is this justified and isn't this against the OS licences?&lt;/p&gt;&#xA;" OwnerUserId="111" LastActivityDate="2015-06-26T15:07:50.703" Title="On what grounds can companies bring OS projects into CS (MySQL/Oracle)?" Tags="&lt;law&gt;&lt;software&gt;&lt;community&gt;&lt;closed-source&gt;" AnswerCount="1" CommentCount="1" FavoriteCount="0" />
  <row Id="437" PostTypeId="2" ParentId="435" CreationDate="2015-06-26T14:49:28.710" Score="11" Body="&lt;p&gt;I have done a thorough IP review on my own project in 2007. You can find some info about this project in this slide deck: &lt;a href=&quot;http://www.slideshare.net/blowagie/startup-legal-and-ip&quot;&gt;Startup Legal and IP&lt;/a&gt;. I encountered many situations that are similar to what you describe, although none of them were &quot;criminal.&quot; These are some examples.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt; code that was proprietary to SUN, later open source by SUN under a friendly license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In my project, I was using code originally developed at SUN. Some classes of th source code contained comments sections saying &lt;em&gt;This code is confidential and proprietary information of Sun Microsystems, Inc.&lt;/em&gt; etc. The code as a whole was released, also by SUN, under a friendly sample license. In short: the code was released with the best of intents, but it accidentally contained conflicting information referring to the original, more strict license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Verdict of the IP lawyers:&lt;/em&gt; it's better to be safe than sorry. I had to remove the code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt; The RC4 algorithm used to be a trade secret. Then it was anonymously published.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I used the code that implemented the algorithm that was anonymously published. It was considered as part of the public domain, so I was allowed to continue to use it. However, I used a parameter named &lt;code&gt;RC4_ENCRYPTION&lt;/code&gt;, and although it was OK to use the code, I was not allowed to use the name RC4 in a parameter name because the name RC4 was trademarked.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Verdict of the IP lawyers:&lt;/em&gt; as I was using the &lt;em&gt;Alleged RC4&lt;/em&gt; algorithm, I had to change the name of the parameter to &lt;code&gt;ARC4_ENCRYPTION&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Example 3:&lt;/strong&gt; &lt;code&gt;IntHashtable&lt;/code&gt; by ACME versus &lt;code&gt;IntHashtable&lt;/code&gt; from Apache.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I was using the &lt;code&gt;IntHashtable&lt;/code&gt; class from &lt;a href=&quot;http://acme.com/&quot;&gt;ACME.com&lt;/a&gt;. This class mentioned: &lt;em&gt;This class is 90% based on JavaSoft's java.util.Hashtable&lt;/em&gt;. Because JavaSoft's class wasn't available under a friendly license, I was not allowed to use that class. However, I found an &lt;code&gt;IntHashtable&lt;/code&gt; class in Apache-commons that was 99% similar to ACME's &lt;code&gt;IntHashtable&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Verdict of the IP lawyers:&lt;/em&gt; as the &lt;code&gt;IntHashtable&lt;/code&gt; class from Apache was available under the ASL, I was allowed to use it. I replaced the ACME class by the Apache class. It was 99% similar, but the former wasn't acceptable from a legal point of view, whereas the second got the approval from the lawyers.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Example 4:&lt;/strong&gt; I used a Quick-and-Dirty XML Parser example from a JavaWorld article.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I didn't read the fineprint that said:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;All contents of JavaWorld, including text, programs, applets, source code, and images are copyrighted and owned by IDG or the copyright holder specified, all rights reserved. No material may be reproduced electronically or in print without written permission.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;In this situation, JavaWorld was like your ACME company, and I was like your Han, although I had no criminal intentions: I was just ignorant. I took copyrighted code from a magazine example, and I released it as open source software. I should have asked permission before I did this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Verdict of the IP lawyers:&lt;/em&gt; ask and get permission. This was a no-brainer. Permission was granted immediately, both by JavaWorld and the author of the article and the code sample.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Summarized:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In your example, Han is doing something that is not allowed: he is publishing copyrighted work as if it were open source software. He can be sued and he will have to pay for all the damages that arise from distributing the code as open source software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If somebody else, for instance Luke, downloads that software and starts using it, he is doing so in good faith. Usually, Luke won't be sued (or if he's sued, he'll win because he can prove that he didn't know he was doing anything wrong), but &lt;strong&gt;this doesn't mean that Luke can continue using that software. Acme can demand that he either stops using the software, or that he gets a license.&lt;/strong&gt; I'm pretty sure that Luke can also sue Han for the damages, for instance if Luke suddenly has to start paying Acme for his use of the software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In my case, I removed some code from my code base entirely (see example 1), I made small adjustments (see example 2), I refactored my code (see example 3) or I asked and received permission (see example 4). There is no general rule. It depends from case to case.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Morale:&lt;/strong&gt; Don't use open source software of which the origin is shady. Try to establish a business relationship with the open source vendor distributing the code. That way, you are protected against situations like this.&lt;/p&gt;&#xA;" OwnerUserId="27" LastEditorUserId="27" LastEditDate="2015-06-26T16:26:00.543" LastActivityDate="2015-06-26T16:26:00.543" CommentCount="5" />
  <row Id="438" PostTypeId="2" ParentId="435" CreationDate="2015-06-26T14:49:54.983" Score="4" Body="&lt;p&gt;Han never had copyright on the code. He was unable to license it to anybody. He claimed he gave people a license anyway, but this wasn't true, since he couldn't.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;All derivative works who thought they had a license to do what they were doing, didn't have a license to do so at all. Han said he gave them a license to the work, but he was lying.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The copyright is owned by Acme, and nobody else. You can't license software you don't own. You can't sub-license software you don't have a license for in the first place (even though you thought you had).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also, he shot first.&lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-06-26T14:49:54.983" CommentCount="0" />
  <row Id="439" PostTypeId="2" ParentId="434" CreationDate="2015-06-26T14:50:47.547" Score="4" Body="&lt;p&gt;The main idea is, &lt;a href=&quot;http://freedomdefined.org/Definition&quot; rel=&quot;nofollow&quot;&gt;Free Culture&lt;/a&gt; allows the covered work to be part of an ecosystem of reuse and improvement.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;This document defines &quot;Free Cultural Works&quot; as works or expressions which can be freely studied, applied, copied and/or modified, by anyone, for any purpose.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;There are four freedoms &lt;a href=&quot;http://freedomdefined.org/Definition&quot; rel=&quot;nofollow&quot;&gt;which define a Free Cultural License&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;the freedom to use the work and enjoy the benefits of using it&lt;/li&gt;&#xA;  &lt;li&gt;the freedom to study the work and to apply knowledge acquired from it&lt;/li&gt;&#xA;  &lt;li&gt;the freedom to make and redistribute copies, in whole or in part, of the information or expression&lt;/li&gt;&#xA;  &lt;li&gt;the freedom to make changes and improvements, and to distribute derivative works&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;And four attributes which additionally make a particular work a Free Cultural Work, beyond the license.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;Availability of source data: Where a final work has been obtained through the compilation or processing of a source file or multiple source files, all underlying source data should be available alongside the work itself under the same conditions. This can be the score of a musical composition, the models used in a 3D scene, the data of a scientific publication, the source code of a computer application, or any other such information.&lt;/li&gt;&#xA;  &lt;li&gt;Use of a free format: For digital files, the format in which the work is made available should not be protected by patents, unless a world-wide, unlimited and irrevocable royalty-free grant is given to make use of the patented technology. While non-free formats may sometimes be used for practical reasons, a free format copy must be available for the work to be considered free.&lt;/li&gt;&#xA;  &lt;li&gt;No technical restrictions: The work must be available in a form where no technical measures are used to limit the freedoms enumerated above.&lt;/li&gt;&#xA;  &lt;li&gt;No other restrictions or limitations: The work itself must not be covered by legal restrictions (patents, contracts, etc.) or limitations (such as privacy rights) which would impede the freedoms enumerated above. A work may make use of existing legal exemptions to copyright (in order to cite copyrighted works), though only the portions of it which are unambiguously free constitute a free work.&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="109" LastActivityDate="2015-06-26T14:50:47.547" CommentCount="0" />
  <row Id="440" PostTypeId="1" AcceptedAnswerId="448" CreationDate="2015-06-26T15:03:10.730" Score="5" ViewCount="56" Body="&lt;p&gt;Suppose I want to release a software program to the App Store, under an open source license. As I want to increase the number of downloads, I want to advertise that the software is an Open Source Project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I would like to use the logo of the Open Source Initiative, to help me do this. Assuming that I would use the logo correctly, without misleading anything in my previews, would I be allowed to do this?&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-08-04T00:59:20.373" LastActivityDate="2015-08-04T00:59:20.373" Title="Can I use the OSI logo to help me advertise my project?" Tags="&lt;marketing&gt;&lt;osi&gt;&lt;trademark&gt;" AnswerCount="3" CommentCount="0" FavoriteCount="0" />
  <row Id="441" PostTypeId="2" ParentId="436" CreationDate="2015-06-26T15:07:50.703" Score="5" Body="&lt;p&gt;An open source license is a grant from the copyright holder to someone else, giving them additional rights.  If I give you the rights to version 2 of my work, I don't have to give you rights to use version 3 of my work, because it's mine.  If version 2 is GPL, version 3 can be BSD licensed, closed source, or only available to Martians, that's up to me.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now, if I have code in my work that belongs to other people that they have given to me under the GPL, I can't unilaterally change the license, because that would involve someone else's stuff.  But other licenses, such as BSD, would allow that.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The concept of &lt;a href=&quot;https://en.wikipedia.org/wiki/Copyleft&quot;&gt;Copyleft&lt;/a&gt; is relevant to your question - for non copyleft or &lt;a href=&quot;https://en.wikipedia.org/wiki/Permissive_free_software_licence&quot;&gt;permissive&lt;/a&gt; open source licenses, the fact that a derived work can disappear behind a closed source license is considered to be a feature, not a bug.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Both sets of free software licences offer the same freedoms in terms of how the software can be used, studied, and privately modified. A major difference is that when the software is being redistributed (either modified or unmodified), permissive licences permit the redistributor to restrict access to the modified source code, while copyleft licenses do not allow this restriction.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="109" LastActivityDate="2015-06-26T15:07:50.703" CommentCount="0" />
  <row Id="442" PostTypeId="2" ParentId="440" CreationDate="2015-06-26T15:11:24.140" Score="-1" Body="&lt;p&gt;It depends on your exact use, but probably not.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The OSI logo is a trademark of the OSI.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://opensource.org/logo-usage-guidelines&quot; rel=&quot;nofollow&quot;&gt;The logo usage guidelines&lt;/a&gt; implore that you may only use the logo if (among other things) it doesn't imply sponsorship, association with or endorsement of the OSI. It sounds like you want to use the logo to associate yourself with the OSI, which is one of the things that is disallowed.&lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-06-26T15:11:24.140" CommentCount="0" />
  <row Id="443" PostTypeId="2" ParentId="440" CreationDate="2015-06-26T15:18:06.170" Score="2" Body="&lt;p&gt;Yes, under certain conditions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The bottom of the OSI website says that website materials are licensed under CC-BY. This generally means you can use them, including the logo. However, there are special considerations for the logo because it is also a trademark.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In general, if you're using the logo in good faith for a reasonable purpose, you &lt;em&gt;should&lt;/em&gt; be OK (because this falls under the definition of fair use, you probably shouldn't rely on it though). You should not use the logo in any way that could imply endorsement or affiliation with the OSI. Thus you &lt;em&gt;can&lt;/em&gt; say that &quot;this project is open source, as defined by the [logo] OSI&quot;. You can &lt;em&gt;not&lt;/em&gt; say &quot;this project has been approved by the OSI&quot;.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-06-26T15:23:18.103" LastActivityDate="2015-06-26T15:23:18.103" CommentCount="11" />
  <row Id="444" PostTypeId="2" ParentId="324" CreationDate="2015-06-26T15:30:30.990" Score="0" Body="&lt;p&gt;If you're combining the licenses from two different projects into one project while applying the licenses to different things, yes. That is, as Mnementh says, if image A is licensed under CC BY and code B is licensed under MIT, you could redistribute both together, multi-licensed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you're trying to combine the licenses on one product in some strange mishmash, it gets more complicated. Technically, yes, since the only requirement of CC BY is to attribute, but you would have to add extra stipulations to ensure that both licenses are kept, which may introduce incompatibilities in one or other licenses. If this is your aim, I suggest check with a lawyer.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-26T15:30:30.990" CommentCount="0" />
  <row Id="445" PostTypeId="1" CreationDate="2015-06-26T15:45:15.930" Score="3" ViewCount="33" Body="&lt;p&gt;Teaching materials like textbooks or work sheets can be opened up to free redistribution and the option to change it for everyone. What are the arguments for doing this, with respect to how it can benefit the quality of education? Are there examples or is there evidence of it having the effect?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="14" LastEditDate="2015-06-28T21:10:18.210" LastActivityDate="2015-06-28T21:10:18.210" Title="What is the rationale behind open sourcing teaching material to help improve education?" Tags="&lt;educational-resources&gt;" AnswerCount="1" CommentCount="8" FavoriteCount="0" ClosedDate="2015-06-26T19:27:55.963" />
  <row Id="446" PostTypeId="2" ParentId="420" CreationDate="2015-06-26T15:49:54.770" Score="1" Body="&lt;p&gt;It's surprising really, how many times &quot;you're the owner so yes&quot; is the correct answer...&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You're the owner, so you can do pretty much as you wish with it. That does include adding conditions to ensure open source release in the future. However, as always, the advisability of this comes into question.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'd strongly advise you not to do this alone. Although you may think it's easy enough to just add more text saying &quot;after 20XX you may assume Y license instead&quot;, you actually need a lawyer to ensure you're writing legally sound text.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You also want an automated system to release the source code after that date, preferably. This requires careful thought and a security expert: I haven't seen any premade solutions, so you'd be baking your own. And you'd need to make sure that it will only release the code to you, or after the date.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-26T15:49:54.770" CommentCount="0" />
  <row Id="447" PostTypeId="2" ParentId="432" CreationDate="2015-06-26T15:57:13.227" Score="2" Body="&lt;p&gt;I believe the biggest difference releasing music under an open license makes is that the music can be used in other works (like videos) and become popular through them.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As an anecdotal example, consider &lt;a href=&quot;https://en.wikipedia.org/wiki/Kevin_MacLeod_%28musician%29&quot; rel=&quot;nofollow&quot;&gt;Kevin MacLeod&lt;/a&gt;. He is known primarily thanks to the huge library of CC BY-licensed music he created, which was featured in a huge number of works.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But this would also mean that for music that's not very suitable for use as soundtrack, open license might not help.&lt;/p&gt;&#xA;" OwnerUserId="8" LastActivityDate="2015-06-26T15:57:13.227" CommentCount="0" />
  <row Id="448" PostTypeId="2" ParentId="440" CreationDate="2015-06-26T16:02:26.537" Score="4" Body="&lt;p&gt;Yes, if&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;the software uses a &lt;a href=&quot;http://opensource.org/licenses&quot; rel=&quot;nofollow&quot;&gt;license that is approved by the OSI&lt;/a&gt;,&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;you follow the rules &quot;regarding the logo’s appearance&quot; from OSI’s &lt;a href=&quot;http://opensource.org/logo-usage-guidelines&quot; rel=&quot;nofollow&quot;&gt;Logo Usage Guidelines&lt;/a&gt;, and&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;you follow OSI’s &lt;a href=&quot;http://opensource.org/trademark-guidelines&quot; rel=&quot;nofollow&quot;&gt;Trademark Guidelines&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Source: the &lt;a href=&quot;http://opensource.org/logo-usage-guidelines#The_OSI_Logo:_Usage_Guidelines&quot; rel=&quot;nofollow&quot;&gt;first section&lt;/a&gt; of their &lt;em&gt;Logo Usage Guidelines&lt;/em&gt; says (bold emphasis mine):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The OSI logo is a trademark of Open Source Initiative. In order to protect and grow the OSI brand, we have a distinguishable logo that &lt;strong&gt;can be used to mark software licensed under an OSI Approved License&lt;/strong&gt;. […]&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;It depends on the exact nature of the app store which guideline from the &lt;em&gt;Trademark Guidelines&lt;/em&gt; section &quot;&lt;a href=&quot;http://opensource.org/trademark-guidelines#Distributing_software_under_a_license_approved_by_OSI&quot; rel=&quot;nofollow&quot;&gt;Distributing software under a license approved by OSI&lt;/a&gt;&quot; applies in your case.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It’s probably &quot;&lt;a href=&quot;http://opensource.org/trademark-guidelines#Software_distributed_under_OSI_Approved_Licenses_and_software_not_licensed_OSI_Approved_Licenses_separately_on_same_website&quot; rel=&quot;nofollow&quot;&gt;Software distributed under OSI Approved Licenses and software not licensed OSI Approved Licenses separately on same website&lt;/a&gt;&quot;.&lt;br&gt;&#xA;If you intend to use the logo, you should of course always read the mentioned documents. In the &quot;tl;dr&quot; variant this section says:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;Use one of &lt;a href=&quot;http://opensource.org/logo-usage-guidelines#Logo_Usage&quot; rel=&quot;nofollow&quot;&gt;their logos&lt;/a&gt; without editing it (unless it’s explicitly noted to be allowed). (It might also be required to state something like: &quot;The OSI logo trademark is the trademark of Open Source Initiative.&quot;.)&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Make sure that users won’t get the false impression that the other software available from this app store would also be licensed under an OSI-approved license.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Right after publishing it, send the URL with your use of the logo (e.g., your app’s page) &lt;a href=&quot;http://opensource.org/contact&quot; rel=&quot;nofollow&quot;&gt;to the OSI&lt;/a&gt; (using the category &quot;Trademark enquiries&quot;).&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="138" LastEditorUserId="138" LastEditDate="2015-08-04T00:15:04.920" LastActivityDate="2015-08-04T00:15:04.920" CommentCount="2" />
  <row Id="449" PostTypeId="2" ParentId="412" CreationDate="2015-06-26T16:05:11.603" Score="5" Body="&lt;p&gt;Absolutely yes. The GPL is very strict on this: any type of (code) linking to a GPL-licensed library is considered derivative and must also come under GPL. In Java, this means a single import statement can change your licensing options. In C#, if you &lt;code&gt;use&lt;/code&gt; a GPL library, you must choose the GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It's not clear whether this only applies to code or any library that helped you out. &lt;em&gt;Technically&lt;/em&gt;, if you stared developing based off some GPL code then your work is a derivative even if you replace every bit of the original code. (Of course, nobody'll &lt;em&gt;know&lt;/em&gt; in this case, but morals? No?)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Worth also noting that the LGPL (linkable GPL) is more lax: you can dynamically link a library and keep your license. This includes DLLs and external JARs for Java.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-26T16:05:11.603" CommentCount="0" />
  <row Id="450" PostTypeId="1" AcceptedAnswerId="1058" CreationDate="2015-06-26T17:07:47.090" Score="4" ViewCount="39" Body="&lt;p&gt;If open source robotics parts can be manufactured and sold by anyone, is it realistic to make a profit from selling them, or are they only sold at cost price with some other business model for making money?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are a number of open source robotics projects, but I cannot see a way of telling how they are funded/make money.&lt;/p&gt;&#xA;" OwnerUserId="37" LastEditorUserId="190" LastEditDate="2015-07-11T13:17:27.237" LastActivityDate="2015-07-11T13:17:27.237" Title="How can a profitable business selling open source robotics parts be run if anyone can produce their own?" Tags="&lt;monetization&gt;&lt;hardware&gt;&lt;robotics&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="2" />
  <row Id="451" PostTypeId="2" ParentId="450" CreationDate="2015-06-26T17:19:30.900" Score="1" Body="&lt;p&gt;Many open source products are often crowd  funded. This means making a profit from selling it is not the goal of the company.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Although if they do want to make money selling parts, they could do this by manufacturing difficult parts that the average manufacturer could not make.&lt;/p&gt;&#xA;" OwnerUserId="271" LastActivityDate="2015-06-26T17:19:30.900" CommentCount="0" />
  <row Id="452" PostTypeId="1" AcceptedAnswerId="454" CreationDate="2015-06-26T17:24:33.350" Score="-2" ViewCount="41" Body="&lt;p&gt;Often when I see open source companies I notice one of their sources of funding is crowd funding? My question is why is this? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Are there not any better methods of income that they could use?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="55" LastEditDate="2015-06-26T20:18:15.510" LastActivityDate="2015-06-28T22:09:56.503" Title="Why might open source companies use crowd funding?" Tags="&lt;project-management&gt;&lt;finance&gt;" AnswerCount="2" CommentCount="3" FavoriteCount="0" />
  <row Id="454" PostTypeId="2" ParentId="452" CreationDate="2015-06-26T17:44:46.847" Score="1" Body="&lt;p&gt;Why is crowdsourcing used? It works pretty well. Open sourcing something nearly always means a community that is interested in it. So it can work that the community is enthusiastic enough to fund the open sourced thing through crowdfunding.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But there are a lot of other methods for making money. My examples for these methods are non-companies, but companies can make money with these methods as organization or persons can.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Most open source projects have a donate button or something similar. That is not far from actual organized crowdfunding. Some project make fundraisers at some times, Wikipedia does from time to time for instance.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some classic open source projects release the open sourced software, but offer paid services around it: support, documentation, installation and configuration help and so on.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some projects sell premium versions of the product. That is common for open books or music, digital is free, a printed version or a CD cost something. A way Cory Doctorow makes his money.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Merchandise is another way of income for an open-source-project. Selling coffee-cups, T-shirts, Posters, mousepads and so on with the logo of the project can bring a lot of money. XKCD finances itself mostly with merchandise.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-28T22:09:56.503" LastActivityDate="2015-06-28T22:09:56.503" CommentCount="4" />
  <row Id="455" PostTypeId="1" AcceptedAnswerId="457" CreationDate="2015-06-26T17:48:47.387" Score="2" ViewCount="13" Body="&lt;p&gt;The software I am developing has been closed source. Recently my friend suggested that I make it open sourced. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is why I would like to know:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What benefits do I have to making my software open sourced?&lt;/p&gt;&#xA;" OwnerUserId="271" LastActivityDate="2015-06-26T18:04:16.457" Title="What are the benefits of having an open sourced software?" Tags="&lt;software&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="456" PostTypeId="1" AcceptedAnswerId="458" CreationDate="2015-06-26T18:01:59.557" Score="6" ViewCount="161" Body="&lt;p&gt;I was trying to get a program when I found out that you had to pay for it. After some time I noticed that it was also open sourced. This confused me! After a bit more digging I found that I could download a non compiled version (for free) and compile it myself. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;I did this and the program worked fine!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question is:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What are the advantages to having an open sourced free product?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="98" LastEditDate="2015-07-14T21:40:23.567" LastActivityDate="2015-07-16T04:33:12.770" Title="What are the advantages of making an open source project free?" Tags="&lt;software&gt;&lt;commercial&gt;" AnswerCount="3" CommentCount="3" FavoriteCount="0" />
  <row Id="457" PostTypeId="2" ParentId="455" CreationDate="2015-06-26T18:04:16.457" Score="2" Body="&lt;p&gt;The benefits of open sourcing your project include:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;can reach more people (as it can be freely redistributed)&lt;/li&gt;&#xA;&lt;li&gt;more people trusting it (as code can be inspected)&lt;/li&gt;&#xA;&lt;li&gt;may attract external contributors (hopefully making the software better)&lt;/li&gt;&#xA;&lt;li&gt;good karma ;-)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;There may also downsides (depends on how you see it):&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;you cannot longer forbid usage in some fields (military, genetics, secret services) or for some people (North Koreans, murderers)&lt;/li&gt;&#xA;&lt;li&gt;it may be more difficult to monetize your software&lt;/li&gt;&#xA;&lt;li&gt;someone may take your code and produce a changed variant and distributes it&lt;/li&gt;&#xA;&lt;li&gt;people may complain about the quality of your source code&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-26T18:04:16.457" CommentCount="0" />
  <row Id="458" PostTypeId="2" ParentId="456" CreationDate="2015-06-26T18:09:04.090" Score="6" Body="&lt;p&gt;You can pay for open source software. With Open Source, the source code must be made available, and provide options for forking and the like. Compiled versions can be paid for.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Like many other programs, open source software is generally similar to proprietary software. For developers, they can get their hands on code, and fork and experiment. For consumers, many might not see much of a difference, except that they may see it as open information.&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="60" LastEditDate="2015-07-14T10:35:13.577" LastActivityDate="2015-07-14T10:35:13.577" CommentCount="0" />
  <row Id="459" PostTypeId="1" CreationDate="2015-06-26T18:13:14.787" Score="10" ViewCount="69" Body="&lt;p&gt;Stack Exchange applies &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/3.0/&quot;&gt;CC-BY-SA&lt;/a&gt; to all posts. How does this interact with free or open source licences? If someone wants to ask a question about a piece of open source software can they post code snippets into their question or would some licences prevent code being posted under CC-BY-SA?&lt;/p&gt;&#xA;" OwnerUserId="37" LastActivityDate="2015-06-27T00:26:24.560" Title="The Stack Exchange licence: Can I post open source code here?" Tags="&lt;licensing&gt;&lt;cc-by-sa&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="0" />
  <row Id="460" PostTypeId="1" AcceptedAnswerId="464" CreationDate="2015-06-26T18:16:01.577" Score="2" ViewCount="45" Body="&lt;p&gt;While most operating systems have a closed source nature, from the beginning Linux / Ubuntu has remain open sourced. This has allowed it to become quite popular. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;How has it used open source to its advantage? And what has keeping it open sourced allowed it to do, that it otherwise wouldn't?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="29" LastEditDate="2015-06-26T19:49:28.697" LastActivityDate="2015-06-26T20:51:13.210" Title="How does Linux use Open Source to its advantage?" Tags="&lt;software&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="0" />
  <row Id="461" PostTypeId="2" ParentId="460" CreationDate="2015-06-26T18:25:59.253" Score="1" Body="&lt;p&gt;From &lt;a href=&quot;http://www.storagecraft.com/blog/linux-advantages-disadvantages-open-source-technology/&quot; rel=&quot;nofollow&quot;&gt;a blog post by Jennifer Marsh&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;With Linux being open-source, several distributions are available to the end-user. Debian, Fedora, Ubuntu and Mint are just a few of the distributions available to end users, and these distributions are completely free to download.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Security is the other main advantage. Several whitehat hackers have contributed to the overall security of Linux, and by making the source available to anyone, security experts can help identify any main security flaws in the operating system. The advantage over operating systems such as Windows is that security flaws are caught before they become an issue for the public.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Keeping it open sourced allowed us to have so many choices in a wide variety of events.&lt;/p&gt;&#xA;" OwnerUserId="11" LastEditorUserId="60" LastEditDate="2015-06-26T20:51:13.210" LastActivityDate="2015-06-26T20:51:13.210" CommentCount="2" />
  <row Id="462" PostTypeId="1" AcceptedAnswerId="465" CreationDate="2015-06-26T18:27:02.130" Score="2" ViewCount="25" Body="&lt;p&gt;If I release my software under certain Contributor Agreements, can I give the software the same effect as if I released it under an Open source license? My business partner and I are unsure which to use!&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;If yes, Great!&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;If no, why not? And what other options do I have?&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-06-26T18:31:42.150" LastActivityDate="2015-06-26T18:55:23.280" Title="What are &quot;contributor agreements&quot;? Are they similar to open source licenses?" Tags="&lt;contributor&gt;&lt;contributor-agreements&gt;" AnswerCount="2" CommentCount="2" FavoriteCount="0" />
  <row Id="463" PostTypeId="1" AcceptedAnswerId="466" CreationDate="2015-06-26T18:31:16.323" Score="5" ViewCount="79" Body="&lt;p&gt;This person has a piece of open source code which is released under a copyleft license. They are required to give me this code, but numerous times they have refused. I am stuck because I need this code....&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is there anything I can do to make them give me the code?&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If yes, how?&lt;/li&gt;&#xA;&lt;li&gt;If no, what else can I do?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-06-26T18:35:55.133" LastActivityDate="2015-06-26T19:48:01.407" Title="Someone is violating the copyleft license, they are refusing to give me the source code even though they are required to!" Tags="&lt;copyleft&gt;&lt;enforcement&gt;" AnswerCount="4" CommentCount="1" FavoriteCount="0" />
  <row Id="464" PostTypeId="2" ParentId="460" CreationDate="2015-06-26T18:32:43.920" Score="3" Body="&lt;p&gt;As Linus Torvalds developed a simple Unix-kernel for his home PC he decided to make it open source under the GPL-license, because he used GNU-software in making it and wanted to say thanks this way. GNU was building a free Unix-like OS by replacing step by step every program in System V Unix. They were already pretty far, but they still missed a kernel. Linux was that kernel.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This decision had some consequences. As many people already followed the effort of the GNU-project to build an OS, Linux was very interesting. Linux making the kernel GPL resulted in many of them starting to be interested into Linux and many of them started to contribute to the project. Also Linux completed the GNU-system. So finally GNU could release a completely free system - with Linux as the kernel. This lead to a lot of buzz among the free-software-aficionados and started to make Linux popular.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="29" LastEditDate="2015-06-26T19:51:20.007" LastActivityDate="2015-06-26T19:51:20.007" CommentCount="0" />
  <row Id="465" PostTypeId="2" ParentId="462" CreationDate="2015-06-26T18:35:27.063" Score="2" Body="&lt;p&gt;Contributor agreements aren't licenses for your software. They are instead like contracts between the main project managers and contributors. It's like the rules of being with us. So, they aren't software licenses. These agreements generally govern things such as:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Intellectual Property&lt;/li&gt;&#xA;&lt;li&gt;Ownership&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-06-26T18:40:37.520" LastActivityDate="2015-06-26T18:40:37.520" CommentCount="2" />
  <row Id="466" PostTypeId="2" ParentId="463" CreationDate="2015-06-26T18:46:50.560" Score="2" Body="&lt;p&gt;Enforcing can be difficult, and you would likely have to go through the courts, in order to enforce. Be sure to make sure that they have to do it under the terms of the license as well. Make sure that you notify the project's author, as they may be able to help you in this case as well. &lt;/p&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-06-26T18:46:50.560" CommentCount="0" />
  <row Id="467" PostTypeId="2" ParentId="463" CreationDate="2015-06-26T18:47:05.153" Score="5" Body="&lt;p&gt;Yes there is. Legally challenge them in the courts and force them to back down.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Somehow, I suspect this is not the answer you are looking for (reference not intended).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Really, the only non-legal thing you can do is communication: send numerous emails. Always be polite, and start out by realising that they might not be doing it deliberately. So, if you haven't already, point out that he's licensed his product under X, which requires the source code to be made available.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can also ask other interested people to do the same: get your friends and fellow &lt;s&gt;Romans&lt;/s&gt; developers to email him as well, pointing out the same thing.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Beyond that, you go to elevating the issue to higher authority. Report it to the hosting platform: although they may not be able to do anything legally or force him to provide the code, they are a greater authority than you (and many TOSes say they can delete your stuff at any time for any reason).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Last resort is of course, legal challenges. If you really want to go that far.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-26T18:47:05.153" CommentCount="0" />
  <row Id="468" PostTypeId="1" AcceptedAnswerId="476" CreationDate="2015-06-26T18:55:05.613" Score="4" ViewCount="19" Body="&lt;p&gt;While I know that some (most) copyleft focused businesses often don't get the opportunity to choose the business model that they want.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For my business I want to be able to choose exactly what business model that I want. By choosing an open source license, will this enable me to choose? Or will it be like copyleft businesses that are not free to choose?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="37" LastEditDate="2015-06-29T01:22:50.443" LastActivityDate="2015-06-29T01:22:50.443" Title="Will open source licenses enable me to choose the businesses model I want?" Tags="&lt;business&gt;" AnswerCount="1" CommentCount="0" FavoriteCount="1" />
  <row Id="469" PostTypeId="2" ParentId="462" CreationDate="2015-06-26T18:55:23.280" Score="1" Body="&lt;p&gt;Contributor agreements and licenses are both exactly what they say on the tin. Thus, you cannot license a project under a contributor agreement, and you cannot conduct relations with your contributors under a license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A &lt;em&gt;license&lt;/em&gt; defines the terms under which people are allowed to &lt;em&gt;use&lt;/em&gt; your product. A contributor agreement defines the terms under which people are allowed to &lt;em&gt;contribute&lt;/em&gt;  to your product. Of course, as the owner you can accept or reject any changes you like, but the CA defines the accepted baseline by which all contributors are treated, so nobody complains of mistreatment.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-26T18:55:23.280" CommentCount="1" />
  <row Id="470" PostTypeId="2" ParentId="463" CreationDate="2015-06-26T19:01:16.543" Score="4" Body="&lt;p&gt;Generally speaking only the copyright holder can instigate legal action in these kinds of circumstances, since they're the party whose license is being violated. So it's not up to you to enforce the license, all you can do is inform the copyright holder about the violation, try to convince the violator, and (as a last resort) communicate more widely about the violation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Bradley M. Kuhn has a &lt;a href=&quot;http://ebb.org/bkuhn/blog/2009/11/08/gpl-enforcement.html&quot; rel=&quot;nofollow&quot;&gt;great blog post on GPL enforcement&lt;/a&gt; which you'd probably find relevant.&lt;/p&gt;&#xA;" OwnerUserId="118" LastActivityDate="2015-06-26T19:01:16.543" CommentCount="0" />
  <row Id="471" PostTypeId="2" ParentId="459" CreationDate="2015-06-26T19:02:01.597" Score="3" Body="&lt;p&gt;It depends on the license and the owner, but likely no.&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;License&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;If the code you want to post is licensed under GPL, don't even think about it. GPL has strict share-alike restrictions, so you must reshare under the same license. Posting to SE shares under CC BY SA, so violates these terms. Other licenses may have similar; I don't know them all.&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Owner&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Obviously, if you're the owner then ignore the whole lot of this and do as you like. If you're not, but you can contact the owner, you should consider doing so. You can ask them to relicense the work &lt;em&gt;solely to you&lt;/em&gt; because you want to post it to SE (add details about SE and why this is a good purpose), or to make an exception. This relies on their generosity, but many devs will be happy with this.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-26T19:02:01.597" CommentCount="1" />
  <row Id="472" PostTypeId="2" ParentId="456" CreationDate="2015-06-26T19:02:08.290" Score="20" Body="&lt;p&gt;Nothing prevents charging for open source software. In fact, if a license forbids charging for the software, it is not free/open-source, because it violates the freedom to distribute.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Charging for open source software may seem pointless, because once the author has sold it to someone, they can't prevent the buyer from making as many copies as they like and giving them out for free. However there are cases where it makes sense.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some companies make money by writing custom software, tailored for a client's very specific needs. The resulting software may be open source, either because the client requires it, or the company prefers it this way, or the software is derived from some generic software with a license that doesn't allow closed-source derivatives. In such cases, the customer pays because they want this software that's purpose-built for their needs, that nobody would bother to write if they didn't pay. Typically there wouldn't be many other people who'd be interested in having a copy anyway, and even if there are, the customer could be paying just to be the first to have the software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some companies charge for their packaging of the software. People may be prepared to pay to get nice installers, or even just binaries for their platform. If the software has a permissive license that allows non-free derivatives, the seller may put a restrictive license on the binaries that doesn't limits the number of copies the driver may make and forbids redistribution. If the software has a copyleft license, the buyer is allowed to redistribute the binary, so it's a small market.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the days before cheap Internet bandwidth, most people got their open source software on CDs. The CD distributors obviously charge for their work of pressing CDs, shipping them, etc. The CD itself may or may not be copied for free, depending on whether it also contains non-free software and whether the collection may count as a legally protected database (see &lt;a href=&quot;http://opensource.stackexchange.com/questions/354/distributing-an-operating-system-dvd-bundling-proprietary-and-gnu-gpl-software&quot;&gt;Distributing an operating system DVD bundling proprietary and GNU-GPL software?&lt;/a&gt;).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Paying to install an open source program on a platform where deploying an application requires a fee is a more modern equivalent. iOS is a famous example: you need Xcode to make a package that you can install on your device, and you need a Mac to run Xcode; until recently you also needed a developer account with a yearly fee. Here the buyer is paying not because they can't obtain the software otherwise, but because they can't install the software otherwise.&lt;/p&gt;&#xA;" OwnerUserId="60" LastEditorUserId="60" LastEditDate="2015-07-15T23:48:14.520" LastActivityDate="2015-07-15T23:48:14.520" CommentCount="5" />
  <row Id="473" PostTypeId="1" CreationDate="2015-06-26T19:04:33.277" Score="1" ViewCount="50" Body="&lt;p&gt;Say you're a writer and you've wrote a lot of books. You release them all for no cost as download on your website (and some shops), but you also sell printed copies. You keep copyrights, but everyone can download the digital version for free.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And now you decide it is better to make the book open. That involves:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;everyone can redistribute it, not only the shops you authorized&lt;/li&gt;&#xA;&lt;li&gt;everyone can use it to make money without asking you&lt;/li&gt;&#xA;&lt;li&gt;everyone can change it or remix and distribute or sell the derivate&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;How does that impact the financials?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To be clear, in both cases the book can be downloaded without costs involved, I want to know if there is such impact if price is no issue. Also it would be good if you have examples or even better studies to substantiate your answer.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-28T22:15:28.940" LastActivityDate="2015-06-28T22:15:28.940" Title="What financial impact does opening up a book have?" Tags="&lt;finance&gt;&lt;books&gt;" AnswerCount="1" CommentCount="2" FavoriteCount="0" />
  <row Id="474" PostTypeId="1" AcceptedAnswerId="478" CreationDate="2015-06-26T19:09:50.837" Score="4" ViewCount="35" Body="&lt;p&gt;When downloading software I often see open source alternatives. Many of these look quite similar but never quite the same. I continue to buy the paid version. Recently, I started to wonder if the open source versions may be better.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;What benefits are there to using open source products?&lt;/li&gt;&#xA;&lt;li&gt;Are there any downsides to using open source products?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="271" LastEditorUserId="37" LastEditDate="2015-06-26T19:20:03.647" LastActivityDate="2015-06-26T22:48:39.520" Title="What is the benefit to using open source alternatives?" Tags="&lt;software&gt;&lt;paid-software&gt;&lt;cost&gt;" AnswerCount="4" CommentCount="0" FavoriteCount="1" />
  <row Id="475" PostTypeId="2" ParentId="445" CreationDate="2015-06-26T19:15:54.427" Score="1" Body="&lt;p&gt;&lt;strong&gt;Sure it can but...&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&lt;p&gt;It would not necessarily be better than regular materials. School boards often spend money getting customized programs / information. This may not always happen if all the information is open sourced.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some examples of this:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The catholic school board in Toronto has used companies to get custom software for its students:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.konverge.com/Custom-Software-Design-Clients/&quot; rel=&quot;nofollow&quot;&gt;http://www.konverge.com/Custom-Software-Design-Clients/&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="271" LastActivityDate="2015-06-26T19:15:54.427" CommentCount="1" />
  <row Id="476" PostTypeId="2" ParentId="468" CreationDate="2015-06-26T19:18:25.073" Score="5" Body="&lt;p&gt;Start by looking  at this from the other direction. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Choosing the &lt;strong&gt;wrong&lt;/strong&gt; license can definitely prevent you from adopting the business model you want.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you want to sell your software, then any open license is likely to prevent you doing so .. because anyone can get the software for free. So you need a closed license in that case.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you want to make money by selling support, then a closed license might mean you can't create a large enough customer base quickly enough to survive until the revenue stream is sufficient.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Coming from a different direction again, back in the 70's and 80's people would ask me what computer they should get for their business. My answer was always a different question: &quot;What software do you want to run?&quot; or &quot;What do you want to do with it?&quot;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The best approach is to clearly define your business model .. and let that then guide you in your choice of license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If your model is to sell services around your software (support, education, custom programming), you need to build up a large base of users so that, if only 'x' percent of them buy the service, you have sufficient revenue. That needs a license which encourages wide adoption and usage, while perhaps reducing the number of competing implementations that spring up.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;These are the issues that all new startups face when putting together their business plan. If you hope to make money from open source, then ironically you have to treat it as a business from the outset and plan accordingly.&lt;/p&gt;&#xA;" OwnerUserId="29" LastActivityDate="2015-06-26T19:18:25.073" CommentCount="0" />
  <row Id="477" PostTypeId="2" ParentId="473" CreationDate="2015-06-26T19:19:17.160" Score="2" Body="&lt;p&gt;I see a major key issue here: &lt;em&gt;Everyone can redistribute it&lt;/em&gt;. That, mixed with &lt;em&gt;Everyone can use it to make money without asking you&lt;/em&gt; really looks like fancy wording for taking your work and selling it for free. Please don't do this.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;How does that impact the financials?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Well, if people can sell it for free, it's like asking...&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Would you like a free delicious apple?&lt;/li&gt;&#xA;&lt;li&gt;or Would you like an expensive delicious apple?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Clearly, everyone will ask of it for free.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'm no economist or anything, but your sales and revenue will decrease ridiculously, as you'll only get money from people loyal to getting something directly from authors, people who feel free is &quot;sketchy&quot;, and hardcover sales in your approved stores.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://the-digital-reader.com/2014/12/01/author-discontent-grows-kindle-unlimited-enters-fifth-month/&quot; rel=&quot;nofollow&quot;&gt;For example: The significant lack of income from Kindle Unlimited has seriously affected authors.&lt;/a&gt; I understand it's not the same as opening the book, but it demonstrates the lack of income that can affect people.&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-06-26T20:51:44.013" LastActivityDate="2015-06-26T20:51:44.013" CommentCount="4" />
  <row Id="478" PostTypeId="2" ParentId="474" CreationDate="2015-06-26T19:23:05.470" Score="0" Body="&lt;h3&gt;Benefits&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Benefits of open source are numerous. The most often quoted are:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Giving something to the community&lt;/li&gt;&#xA;&lt;li&gt;More eyes on code (easier to spot bugs)&lt;/li&gt;&#xA;&lt;li&gt;Free development (people submit patches for your bugs)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;There are also some less recognised:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;It's fun. This is never quoted because we're serious developers and we don't have fun.&lt;/li&gt;&#xA;&lt;li&gt;it's a learning experience. Also rare because we obviously know everything.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h3&gt;Disadvantages&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Yes, they do exist. Look at OpenSSL: Heartbleed, Poodle, Freak... If your open source software is popular, then the attackers can see the bugs in your code too and exploit them. And a lot of people use it, so a lot of people to defraud.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It also takes up time: unless you have a dedicated team of maintainers and helpers, you need to manually review patches and pull requests, and check that your license is being followed. That can take up a lot of time.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-26T19:23:05.470" CommentCount="3" />
  <row Id="479" PostTypeId="2" ParentId="474" CreationDate="2015-06-26T19:23:39.067" Score="0" Body="&lt;p&gt;The benefits for users include:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;avoid vendor lock-in: You have to stay with one vendor, because all your data is in his format. With open-source it is always possible to decode the data-format from inspecting the code and deduct the format. Also it's always possible to fork the software to create alternatives.&lt;/li&gt;&#xA;&lt;li&gt;better survivability of the project: If a proprietary program generates no longer money for the company they often stop developing it. The developers of open source projects may also lose interest, but as the code is available and it is allowed to change it, someone with interest might be picking it up.&lt;/li&gt;&#xA;&lt;li&gt;bugfixing capability: Does a simple small bug drives you crazy with a software you otherwise love? Open Source allows you to find and smash this bug.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-26T19:23:39.067" CommentCount="0" />
  <row Id="481" PostTypeId="2" ParentId="474" CreationDate="2015-06-26T19:32:02.660" Score="3" Body="&lt;p&gt;Sure they are!&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;You don't have to worry about the product getting discontinued (in most of the cases). If the project is popular, somebody's going to continue developing it no matter what.&lt;/li&gt;&#xA;&lt;li&gt;You will always get an upgrade.&lt;/li&gt;&#xA;&lt;li&gt;The upgrade will not cost you anything.&lt;/li&gt;&#xA;&lt;li&gt;You can suggest new features and even work on them.&lt;/li&gt;&#xA;&lt;li&gt;You don't have to worry about vendor lockins.&lt;/li&gt;&#xA;&lt;li&gt;You can get the software for free.&lt;/li&gt;&#xA;&lt;li&gt;You don't have to worry about junkware being shipped with it.&lt;/li&gt;&#xA;&lt;li&gt;The main developers are usually easier to reach if you need to do so.&lt;/li&gt;&#xA;&lt;li&gt;The community is usually there to help you out to make the transition.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;Disadvantages:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The community is usually spread out to various products and they will often suggest you to switch to some other open source project to resolve your issues.&lt;/li&gt;&#xA;&lt;li&gt;Different open source softwares don't usually work well with each other (as an example, there's no Adobe-like all in one pack).&lt;/li&gt;&#xA;&lt;li&gt;The support is kind of hard to get until know where to look for it.&lt;/li&gt;&#xA;&lt;li&gt;You're expected to give back to the community in some way.&lt;/li&gt;&#xA;&lt;li&gt;Open source projects are usually not as popular as proprietary solutions so it's a bit trickier to find tips and tricks.&lt;/li&gt;&#xA;&lt;li&gt;The documentation for the product can get outdated pretty quickly since new features are being introduced all of the time.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;My suggestion is: Instead of paying $200 for a proprietary software, try using open source software and donating $100 to the developers. It will benefit you, its developers and probably everyone else using the product.&lt;/p&gt;&#xA;" OwnerUserId="123" LastEditorUserId="123" LastEditDate="2015-06-26T22:48:39.520" LastActivityDate="2015-06-26T22:48:39.520" CommentCount="2" />
  <row Id="484" PostTypeId="2" ParentId="463" CreationDate="2015-06-26T19:48:01.407" Score="5" Body="&lt;p&gt;You may have a couple of options&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The first, as mentioned elsewhere, is to approach the authors of the open source software at issue, and get them to initiate an Intellectual Property suit. They are the only ones who can do this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Beyond that, there seem to be a number of License Enforcement bodies who are acting on behalf of open source projects.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One example is the &lt;a href=&quot;https://sfconservancy.org/about/&quot;&gt;Software Freedom Conservancy&lt;/a&gt;. Their model implies that they act on behalf of member projects to defend their rights. So it would behoove you to determine if the project at issue resides under the roof of one of these organizations.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The FSF has a &lt;a href=&quot;http://www.gnu.org/licenses/gpl-violation.en.html&quot;&gt;clear and detailed page&lt;/a&gt; listing the steps to take if you suspect a violation. If the copyleft license is one of theirs, and they own the copyright, they say they will take action.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I would have thought that the groups who create the licenses (FSF, Apache, OSI, etc) would have an interest in helping enforce them generally. It seems it should work a little like trademark law: if you don't protect your trademark, you lose it. In the case of the FSF, for example, if they allow GPL violations to stand simply because they don't hold the copyright on a particular piece of code, then they weaken their license.&lt;/p&gt;&#xA;" OwnerUserId="29" LastActivityDate="2015-06-26T19:48:01.407" CommentCount="0" />
  <row Id="485" PostTypeId="2" ParentId="474" CreationDate="2015-06-26T20:14:22.247" Score="0" Body="&lt;p&gt;Look at this from a business's point of view, rather than a software developer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Say I run a small business, perhaps a lawyer's office. No one in the company writes software. But my company needs a lot of software to make money. IT costs are a major issue for smaller companies, consider the basic infrastructure&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A PC of some kind for every employer, and the operating system for it&lt;/li&gt;&#xA;&lt;li&gt;An office suite (word processor, spreadsheet, and probably presentation software)&lt;/li&gt;&#xA;&lt;li&gt;File servers and some collaboration software.&lt;/li&gt;&#xA;&lt;li&gt;Other productivity software (time keeping, for example)&lt;/li&gt;&#xA;&lt;li&gt;Accounting and payroll systems&lt;/li&gt;&#xA;&lt;li&gt;Regular upgrades for all the software&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Not that long ago, a new business had only one realistic option. The OS came with the computer, and everything else followed. But today there are widely used open source alternatives for everything in the list above. Even more interestingly, if it's a Linux based solution, you can often get away with lower spec'd (i.e. cheaper) PC's.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So going with Linux, Open/Libre Office, and other open source packages will save my company a lot of money each year. Possibly enough to hire another employee to help generate revenue. That's more jobs and more businesses feeding the economy. That may mean more clients and more revenue.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The biggest downside, of course, is the lack of a one-stop-support organization ... and anyone who's ever listened to the hold-jockeys at a certain company for hours can talk to you about just how well that works out.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The other is simply the difficulty for a non-savvy user to know which software to use, or even what exists. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;But these actually open up scope for a new business: consultants who, for a fee, help set up the office for new businesses. They identify the right software, and set it up. They might even provide the ongoing support.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;On a much smaller scale, my entire household is moving away from Windows to Macs as the old laptops die. I used to have multiple licenses of Office etc. Today, the only software I regularly buy is Turbotax once a year and every few years I update Quicken. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Apple doesn't even charge for major OS upgrades any more. And a Mac is close enough to Linux for me to be able to do full OS development on it with all my favorite libraries and tools.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;My development desktop at work runs Ubuntu and there isn't a single piece of paid-for software on it. My employer has hundreds of these.&lt;/p&gt;&#xA;" OwnerUserId="29" LastActivityDate="2015-06-26T20:14:22.247" CommentCount="0" />
  <row Id="486" PostTypeId="2" ParentId="452" CreationDate="2015-06-26T21:17:16.343" Score="4" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Why might open source companies use crowd funding?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h2&gt;1. Open Source company&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;First, what is an open source company? In this context, I presume it means a company that develops and distributes open source software. Red Hat is considered to be a well know Open Source company, right? Canonical (of ubuntu fame) is another. But, does it end there? Google is an open source company by that definition (android, angular, and thousands of other things are open source... right?) So is IBM (eclipse, OSGi, parts of Java, parts of it's Z-OS code, IBM donated much code to Apache, etc.). Microsoft is Open Source - it's opening the .net platform, etc.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I presume, at this point, that you are starting to disagree with me.... how can Oracle be an open source company - it does own MySQL and distribute it, though... so, it qualifies - even Java is open - and that's Oracle.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This concept of an open source company is broken.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Should the concept be narrowed? An open source company cannot sell closed-source products? Well, there goes RedHat, Pentaho, Mandriva, SuSE, Canonical, etc. All the posterchilds are gone... leaving things like.... Apache, Eclipse, hmmm, not much else.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Then again, those are not companies, they are non-profits, or foundations...&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;2. Crowd Funding&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;What is crowd funding? Kickstarting is crowd-funding, but, it is actually an investment, and a contract. A kickstart campaign is a pre-order with a specified delivery, and a penalty if it fails. It is not exactly a donation. This sort of seed money is a common thing to do, and is a form of distributed venture-capital. A lot of people invest, and they have preferential returns on that investment (early/cheap access to cool things).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Kickstarting is crowdfunding, but it is almost always associated with something tangible, a book, a device, a bowl-of-soup, or whatever. Not software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Further, companies have complicated rules about accepting donations (but not so complicated when accepting investments or pre-orders). Companies are not charitable organisations, so they can't just say &quot;donate here&quot; without first making it clear that they are &quot;for profit&quot;, and they cannot (in the US, at least) issue tax benefits, etc.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;On the other hand, individuals, and not-for-profit charitable organizations can accept donations (like Mediawiki, EFF, OSI, Apache, Eclipse, etc.). Then again, they are not companies.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;3. The Common case&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Most companies who's primary business is related to open source software distribution (like RedHat, Pentaho, SuSE, Canonica, Elastic, etc.) make their money (and profits) from value-add - whether it be support, a premium experience, an enhanced management system, better scalability, or whatever.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Where they don't make their money primarily from that, they make it from advertising, selling space on their pages.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;4. So, who does use crowd-funding for software?&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Individuals and non-profits. It is easy to throw up a &quot;donate&quot; paypal button. But, you should be aware, that most of those people get good value from advertising too, and also from esoteric things like &quot;wishlists&quot;, commissions, contract-work, and so on. If you are the lead developer on an open source project, you will likely be the person contracted to apply a custom hack for some company, or train people, etc. It is not a direct payment, but indirect.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Or, you become an &quot;evangelist&quot; at Google, etc.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;5. Conclusion&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;No company makes significant money from crowd funding.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Individuals and non-profits may, but there is no reason to believe it is significant... the bulk of value comes in from being able to put it on your resume, and selling your knowledge and skills, not your product.&lt;/p&gt;&#xA;" OwnerUserId="80" LastEditorUserId="80" LastEditDate="2015-06-26T21:30:54.650" LastActivityDate="2015-06-26T21:30:54.650" CommentCount="0" />
  <row Id="489" PostTypeId="1" CreationDate="2015-06-26T23:19:43.750" Score="8" ViewCount="48" Body="&lt;p&gt;If I want to license my work under a Creative Commons 3.0 license, I could use:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;the international/unported version&lt;/li&gt;&#xA;&lt;li&gt;the version ported for my jurisdiction&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;(For example, in case of CC BY-SA 3.0: &lt;a href=&quot;http://creativecommons.org/licenses/by-sa/3.0/&quot;&gt;CC BY-SA 3.0&lt;/a&gt; vs. &lt;a href=&quot;http://creativecommons.org/licenses/by-sa/3.0/de/&quot;&gt;CC BY-SA 3.0 DE&lt;/a&gt;)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What would be possible reasons for choosing the ported version?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I would have guessed that I should always prefer the ported version (if available for my jurisdiction), but then I noticed that there are no more ported versions available for the CC 4.0 licenses, and there &lt;a href=&quot;https://wiki.creativecommons.org/wiki/CC_Affiliate_Network&quot;&gt;don’t seem to&lt;/a&gt; be planned any (&quot;Version 4.0 will not be ported absent compelling circumstances&quot;), so using the international version seems to be fine – but does this also apply to version 3.0?&lt;/p&gt;&#xA;" OwnerUserId="138" LastActivityDate="2015-07-02T21:15:39.210" Title="When to use a ported (instead of an international) CC 3.0 license?" Tags="&lt;creative-commons&gt;" AnswerCount="2" CommentCount="1" FavoriteCount="2" />
  <row Id="490" PostTypeId="1" AcceptedAnswerId="495" CreationDate="2015-06-26T23:42:38.780" Score="2" ViewCount="14" Body="&lt;p&gt;From previous experience I know that when making an open source piece of software you often have documentation that moves with the file. Some of these files include:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Readme&lt;/li&gt;&#xA;&lt;li&gt;License&lt;/li&gt;&#xA;&lt;li&gt;Changes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;While these things are good for digital files, when building hardware you don't have a folder with files.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;How do you keep documentation for an open sourced project, if it is a piece of hardware?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="55" LastEditDate="2015-06-27T01:36:23.310" LastActivityDate="2015-06-27T01:36:23.310" Title="When building an open sourced hardware project what documentation do I need?" Tags="&lt;hardware&gt;&lt;documentation&gt;" AnswerCount="2" CommentCount="1" FavoriteCount="0" />
  <row Id="491" PostTypeId="1" AcceptedAnswerId="492" CreationDate="2015-06-26T23:49:03.410" Score="2" ViewCount="7" Body="&lt;p&gt;When building a digital open sourced project it is very easy to apply the licence. You can do this by putting it anywhere in the product in places such as:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The bottom of a blog post&lt;/li&gt;&#xA;&lt;li&gt;In the code itself&lt;/li&gt;&#xA;&lt;li&gt;In the documentation&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;How do I apply a licence to a piece of hardware? Do I physically write the license to the bottom of the object?&lt;/p&gt;&#xA;" OwnerUserId="271" LastActivityDate="2015-06-27T00:07:54.633" Title="When making a piece of hardware how do I apply a license to it?" Tags="&lt;hardware&gt;" AnswerCount="1" CommentCount="0" FavoriteCount="0" />
  <row Id="492" PostTypeId="2" ParentId="491" CreationDate="2015-06-26T23:54:17.563" Score="2" Body="&lt;p&gt;Let's go over the ways you can create files to make an open source hardware design spread:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;AutoCAD files (and other files usable for 3D printing and related manufacturing, e.g. CNC machines)&lt;/li&gt;&#xA;&lt;li&gt;Blueprints&lt;/li&gt;&#xA;&lt;li&gt;Data sheets&lt;/li&gt;&#xA;&lt;li&gt;Materials lists&lt;/li&gt;&#xA;&lt;li&gt;Assembly guides&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;You should apply the license to the AutoCAD files and blueprints.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You don't spread open source hardware by making physical objects available. You spread it by making the &lt;em&gt;design&lt;/em&gt; available. Apply the license to the documents/files behind the design.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, you &lt;em&gt;can&lt;/em&gt;, if you want, add the license to the physical object (and sometimes it is required for some objects; see below).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here's a specific case. From a page about &lt;a href=&quot;http://www.tapr.org/ohl.html&quot; rel=&quot;nofollow&quot;&gt;the TAPR Open Hardware License&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If you create a design that you want to license under the OHL, you should:&lt;/p&gt;&#xA;  &#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;Include the OHL document in a file named LICENSE.TXT (or LICENSE.PDF) that is included in the documentation package.&lt;/li&gt;&#xA;  &lt;li&gt;If the file format allows, include a notice like &quot;Licensed under the TAPR Open Hardware License (www.tapr.org/OHL)&quot; in each documentation file. &lt;strong&gt;While not required, you should also include this notice on printed circuit board artwork and the product itself;&lt;/strong&gt; if space is limited the notice can be shortened or abbreviated.&lt;/li&gt;&#xA;  &lt;li&gt;Include a copyright notice in each file &lt;strong&gt;and on printed circuit board artwork.&lt;/strong&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="145" LastEditorUserId="145" LastEditDate="2015-06-27T00:07:54.633" LastActivityDate="2015-06-27T00:07:54.633" CommentCount="0" />
  <row Id="493" PostTypeId="1" AcceptedAnswerId="519" CreationDate="2015-06-26T23:55:58.420" Score="9" ViewCount="43" Body="&lt;p&gt;Suppose I have a design for a truck. Simple enough. Possibly in a .CAD file or some such program. I publish this design on my website under a &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-nd/3.0/&quot;&gt;BY-NC-ND&lt;/a&gt; licence. Someone on the web finds my design and builds it using wood or a 3d printer. Now we have a phyical object. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My Question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now that we have this object does the licence from the design carry over onto the object that was created based on the design?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="37" LastEditDate="2015-06-27T00:06:38.607" LastActivityDate="2015-06-27T19:09:06.673" Title="Does a license apply to both the design AND the physical object (if it is made)?" Tags="&lt;hardware&gt;" AnswerCount="1" CommentCount="0" FavoriteCount="0" />
  <row Id="494" PostTypeId="2" ParentId="490" CreationDate="2015-06-26T23:56:46.907" Score="2" Body="&lt;p&gt;Open sourcing generally means releasing the format that you designed the hardware in. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;For hardware this would be circuit diagrams, trace design, blueprints. Things like that. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you previously took out a patent on it then you would provide the patent as well along with a license for people to use the patent freely.&lt;/p&gt;&#xA;" OwnerUserId="64" LastActivityDate="2015-06-26T23:56:46.907" CommentCount="0" />
  <row Id="495" PostTypeId="2" ParentId="490" CreationDate="2015-06-26T23:58:01.807" Score="3" Body="&lt;p&gt;Open source hardware means that the designs and specifications (shape, size, materials, contruction methods) are open source. This could be one or several of various available formats:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;technical drawings&lt;/li&gt;&#xA;&lt;li&gt;written instructions&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Hardware_description_language&quot; rel=&quot;nofollow&quot;&gt;HDL source code&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Circuit_diagram&quot; rel=&quot;nofollow&quot;&gt;circuit diagrams/schematics&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Integrated_circuit&quot; rel=&quot;nofollow&quot;&gt;integrated circuit&lt;/a&gt; layout data&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;In the case of hardware, open source means that the instructions for making the hardware are available to everyone. Similarly to how in the case of software, open source means that the source code (instructions for making the compiled software) are available to everyone.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Hardware open source can include both instructions for manufacturers on how to construct fundamental parts, and instructions on how to put these parts together into composite parts or whole mechanisms.&lt;/p&gt;&#xA;" OwnerUserId="37" LastActivityDate="2015-06-26T23:58:01.807" CommentCount="0" />
  <row Id="496" PostTypeId="5" CreationDate="2015-06-27T00:08:49.513" Score="0" Body="&lt;p&gt;Creating an open source item is half the battle. The next step is getting it to your users and consumers.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Distribution in the sense of open source refers to the process of sharing an item amongst many people, groups, or organizations. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Typical questions under this tag might cover source vs binary packaging, notification of updates, how and where to post images, and so on .&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="29" LastEditDate="2015-06-27T01:05:17.507" LastActivityDate="2015-06-27T01:05:17.507" CommentCount="0" />
  <row Id="497" PostTypeId="4" CreationDate="2015-06-27T00:08:49.513" Score="0" Body="Use this tag if the question concerns the distribution of an object, package or notice to the developer or public community.&#xD;&#xA;" OwnerUserId="29" LastEditorUserId="69" LastEditDate="2015-07-21T20:52:35.247" LastActivityDate="2015-07-21T20:52:35.247" CommentCount="0" />
  <row Id="498" PostTypeId="1" AcceptedAnswerId="609" CreationDate="2015-06-27T00:12:39.213" Score="5" ViewCount="41" Body="&lt;p&gt;&lt;strong&gt;What I know:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;From what I have read ported licenses are for specific locations while non-ported licenses have been customized to work in as many places as possible.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Even though I license my work under a ported license does that mean it won't work in other locations EVER or does it just mean that depending on the locations laws it may not fully be compatible?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-07-31T21:15:21.060" LastActivityDate="2015-07-31T21:15:21.060" Title="What is the difference between a ported and non-ported licenses?" Tags="&lt;licensing&gt;&lt;creative-commons&gt;&lt;law&gt;&lt;jurisdictions&gt;" AnswerCount="1" CommentCount="1" FavoriteCount="3" />
  <row Id="499" PostTypeId="1" AcceptedAnswerId="513" CreationDate="2015-06-27T00:17:20.380" Score="4" ViewCount="26" Body="&lt;p&gt;&lt;strong&gt;Background:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;While writing an article on Wikipedia I needed to include text that is licensed under a CC-BY license. After a bit of digging I found that Wikipedia uses a CC BY-SA license.  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Despite Wikipedia using a CC-BY-SA license, will I run into problems if I include CC-BY licensed text?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-06-27T00:23:54.013" LastActivityDate="2015-06-28T20:16:28.033" Title="In a Wikipedia article am I able to insert information licensed with CC BY even though they use a CC BY-SA license?" Tags="&lt;creative-commons&gt;&lt;license-compatibility&gt;&lt;cc-by&gt;&lt;cc-by-sa&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="500" PostTypeId="1" AcceptedAnswerId="527" CreationDate="2015-06-27T00:18:28.563" Score="11" ViewCount="114" Body="&lt;p&gt;Suppose &lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I have created an open source application&lt;/li&gt;&#xA;&lt;li&gt;I have also created a snazzy logo to go with the application (for example, the Eclipse logo)&lt;/li&gt;&#xA;&lt;li&gt;I released my application's source code under a permissive license&lt;/li&gt;&#xA;&lt;li&gt;I have not trademarked my logo&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;The web pages on which my Logo appears may be covered by copyright, or a more restrictive license than the source code itself. But the source code distribution also contains an image file for the logo (so I can display it when the program is running).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Does this mean that my logo is covered by the permissive license, and hence available for others to take and use for other purposes?&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="326" LastEditDate="2015-06-27T12:13:25.770" LastActivityDate="2015-06-30T13:34:59.770" Title="Does being open sourced mean others can use my logo?" Tags="&lt;licensing&gt;&lt;copyright&gt;&lt;trademark&gt;" AnswerCount="3" CommentCount="3" FavoriteCount="0" />
  <row Id="501" PostTypeId="1" AcceptedAnswerId="586" CreationDate="2015-06-27T00:24:02.563" Score="2" ViewCount="28" Body="&lt;p&gt;&lt;strong&gt;Background:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Suppose I am developing an open source project. I am at the stage where I need to license my software. After doing research I find out that I live in a place where there is no ported CC license.  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What do I do if the CC license I want to use has not yet been ported in my country?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-06-28T17:13:53.987" LastActivityDate="2015-06-28T17:13:53.987" Title="What can I do if there is no CC ported license in my country?" Tags="&lt;licensing&gt;&lt;creative-commons&gt;&lt;ported&gt;&lt;non-ported&gt;" AnswerCount="1" CommentCount="0" FavoriteCount="0" />
  <row Id="502" PostTypeId="2" ParentId="459" CreationDate="2015-06-27T00:26:24.560" Score="6" Body="&lt;p&gt;If it's just small snippets, then that likely falls under &lt;a href=&quot;https://en.wikipedia.org/wiki/Fair_use&quot;&gt;fair use&lt;/a&gt;. In that case, the license doesn't matter and you are allowed to post them.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Though how small exactly would the snippets have to be is not specified, so you should be really careful about keeping them really small.&lt;/p&gt;&#xA;" OwnerUserId="8" LastActivityDate="2015-06-27T00:26:24.560" CommentCount="1" />
  <row Id="503" PostTypeId="1" AcceptedAnswerId="507" CreationDate="2015-06-27T00:32:49.827" Score="3" ViewCount="58" Body="&lt;p&gt;&lt;strong&gt;Background&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Suppose I am working on a piece of open sourced software. Suppose I am unsure whether or not I want to sell it in future versions. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Would using a permissive license make it easier for me to sell my product in later versions?&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If yes, why so?&lt;/li&gt;&#xA;&lt;li&gt;If no, what can I do to make it easier?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="271" LastEditorUserId="175" LastEditDate="2015-06-30T02:50:50.707" LastActivityDate="2015-06-30T08:53:15.993" Title="Should I use a permissive license if I might charge for my product later?" Tags="&lt;licensing&gt;&lt;permissive&gt;" AnswerCount="3" CommentCount="0" FavoriteCount="0" />
  <row Id="504" PostTypeId="1" AcceptedAnswerId="538" CreationDate="2015-06-27T00:39:10.117" Score="23" ViewCount="398" Body="&lt;p&gt;On many sites, especially Stack Overflow, I can't help but notice such amazing code snippets. However, they come with a &quot;catch&quot; designed by the author.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;With user contributions being licensed with the &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/3.0/&quot;&gt;Creative Commons ShareAlike 3.0 License&lt;/a&gt;, many users try and &quot;override&quot; this by stating how they license the work on their profile page. For example:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;All contributions that I make to this site shall be licensed under the Apache 2.0 License&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This surprises me, because it seems to violate the policy of licensing, if not the Terms of Use that are present as well.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/bDTed.png&quot; alt=&quot;Stack Exchange User Contribution Policy&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Is this acceptable? Are users allowed to essentially &quot;override&quot; and decide their own licenses, against what has been standardized by the organization?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-07-06T22:21:33.970" LastActivityDate="2015-07-06T22:21:33.970" Title="Can I &quot;Override&quot; a licensing policy?" Tags="&lt;licensing&gt;&lt;enforcement&gt;&lt;multi-licensing&gt;" AnswerCount="3" CommentCount="5" FavoriteCount="3" />
  <row Id="506" PostTypeId="1" CreationDate="2015-06-27T01:04:59.623" Score="7" ViewCount="37" Body="&lt;p&gt;The Patent system works on the premise that the community benefits from the information shared, and rewards the innovators by granting them a period to capitalize on it without others grabbing a free ride.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Most of the FLOSS and FSF licenses preclude many of the most lucrative ways to monetize a creative idea. So, although the strong copyright protections remain, you effectively grant very broad rights to use your product. This includes the right for others to make money from it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Does the open-source/free-software approach to sharing ideas and creations impede innovation by removing much of the financial incentive?&lt;/strong&gt;&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="29" LastEditDate="2015-06-27T02:50:55.850" LastActivityDate="2015-06-27T13:21:59.847" Title="Does a seeming lack of strong protection for IP discourage innovation?" Tags="&lt;monetization&gt;&lt;philosophy&gt;" AnswerCount="3" CommentCount="1" FavoriteCount="3" />
  <row Id="507" PostTypeId="2" ParentId="503" CreationDate="2015-06-27T01:15:15.927" Score="1" Body="&lt;p&gt;&quot;I am not a lawyer&quot; but this is generally a good idea. Apache is actually &lt;strong&gt;very&lt;/strong&gt; good for this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;From experience (including legal discussions) such as license allows you to  push out an open source version, and then develop a much more capable &lt;strong&gt;closed&lt;/strong&gt; version based on the same code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Using an appropriate  CLA also ensures that all community contributions can be used in the same way.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Of course, as the original author you can do what you want with your code at all times.&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="29" LastEditDate="2015-06-27T01:18:56.470" LastActivityDate="2015-06-27T01:18:56.470" CommentCount="3" />
  <row Id="508" PostTypeId="2" ParentId="506" CreationDate="2015-06-27T01:27:20.100" Score="3" Body="&lt;h3&gt;I don't believe that either the free or the open source approach to software or to anything else has any detrimental effect on innovation.&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Some people innovate motivated by financial gain. Other people innovate with motives other than financial. The patent system and the copyright system provide the financial gain for those people who are motivated by it, leading to innovation. Free and open source projects provide a way for people who are not financially motivated to innovate collaboratively and hence more than they could individually. The copyright system provides the legal protection for free and open source licences.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;At present, strong intellectual property protection is supporting both types of innovation (financially motivated and non-financially motivated).&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Grey areas&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Of course, the situation is not this simple, and many people work on proprietary projects for reasons other than financial, and many people working in free and open source projects have at least some financial incentive (whether direct or indirect). However, the point stands - both types of innovation and all the grey areas in between are protected by intellectual property law.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This doesn't necessarily mean that current intellectual property law is the best way of doing things, or that it provides the most innovative environment, but until it is improved it does provide strong motivation for innovation, for both types of motive.&lt;/p&gt;&#xA;" OwnerUserId="37" LastActivityDate="2015-06-27T01:27:20.100" CommentCount="0" />
  <row Id="509" PostTypeId="1" AcceptedAnswerId="517" CreationDate="2015-06-27T01:27:43.823" Score="10" ViewCount="165" Body="&lt;p&gt;&lt;strong&gt;Background:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Suppose I want to licence a project I have been working on for quite some time. The goals for this license are:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Open Source&lt;/li&gt;&#xA;&lt;li&gt;Free to use&lt;/li&gt;&#xA;&lt;li&gt;Never to be sold&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What license would best suit my needs in this situation?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-06-30T02:13:06.133" LastActivityDate="2015-07-15T14:43:32.953" Title="How can I start an open source project and keep people from taking it and selling it? I want to keep it free, open and never be sold" Tags="&lt;licensing&gt;&lt;license-recommendation&gt;" AnswerCount="3" CommentCount="4" FavoriteCount="1" />
  <row Id="510" PostTypeId="1" AcceptedAnswerId="563" CreationDate="2015-06-27T01:30:13.000" Score="4" ViewCount="22" Body="&lt;p&gt;There are many open source solutions that are supported by an organisation, and that helps a lot when considering trainings and consultants.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But when the point is contracts, for a database or an ESB for example, some companies don't consider open source solutions, as there is no legal responsibilities for impacts on the adoption of the respective solution.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;How can we present open source solutions to larger organizations, and how would we deal with these responsibilities?&lt;/p&gt;&#xA;" OwnerUserId="320" LastEditorUserId="69" LastEditDate="2015-06-27T01:34:42.790" LastActivityDate="2015-06-29T07:36:37.150" Title="How to deal with support of open source solutions in bigger projects?" Tags="&lt;marketing&gt;&lt;contracts&gt;&lt;organisation-support&gt;" AnswerCount="1" CommentCount="0" FavoriteCount="1" />
  <row Id="511" PostTypeId="1" AcceptedAnswerId="518" CreationDate="2015-06-27T01:30:49.990" Score="6" ViewCount="72" Body="&lt;p&gt;I am trying to choose the perfect license for my project....&lt;/p&gt;&#xA;&#xA;&lt;p&gt;After doing research I ran into a question which I could not find an answer to:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What's the difference between bazaar-style and cathedral-style open source projects? Could someone please explain the difference?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-06-30T02:13:29.740" LastActivityDate="2015-06-30T02:13:29.740" Title="What's the difference between bazaar-style and cathedral-style open source projects?" Tags="&lt;project-management&gt;" AnswerCount="1" CommentCount="0" FavoriteCount="0" />
  <row Id="512" PostTypeId="2" ParentId="509" CreationDate="2015-06-27T01:38:53.260" Score="1" Body="&lt;p&gt;I believe that &lt;strong&gt;GNU Affero GPL v3.0&lt;/strong&gt; might serves you well. As described bellow:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;h2&gt;GPL&lt;/h2&gt;&#xA;  &#xA;  &lt;p&gt;GPL is the most widely used free software license and has a strong&#xA;  copyleft requirement. When distributing derived works, the source code&#xA;  of the work must be made available under the same license. There are&#xA;  multiple variants of the GPL, each with different requirements.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I will not avoid the Never be sold, but forces who uses to open its source too.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For more details, pay a visit to &lt;a href=&quot;http://choosealicense.com/licenses/&quot; rel=&quot;nofollow&quot;&gt;this site from GitHub&lt;/a&gt; that was the source of previous quote.&lt;/p&gt;&#xA;" OwnerUserId="320" LastActivityDate="2015-06-27T01:38:53.260" CommentCount="3" />
  <row Id="513" PostTypeId="2" ParentId="499" CreationDate="2015-06-27T01:40:01.853" Score="4" Body="&lt;p&gt;Yes, you can merge information from CC-BY sources into a CC-BY-SA work (but not the other way). That is because CC-BY-SA still includes all conditions of CC-BY.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note, as suggested by Martijn in the comments: It is still important to correctly attribute the changes to their respective author (as bot CC-BY and CC-BY-SA demand). Also Wikipedia can have it's own guidelines for using tests from different sources, that extend over what the license demands.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-28T20:16:28.033" LastActivityDate="2015-06-28T20:16:28.033" CommentCount="2" />
  <row Id="514" PostTypeId="1" CreationDate="2015-06-27T01:40:54.973" Score="2" ViewCount="14" Body="&lt;p&gt;Would it be possible to develop a software in a open sourced environment. Then one the software is complete change it to a closed source software?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If yes, are there any issues with this?&#xA;If no, why not, what alternatives are there?&lt;/p&gt;&#xA;" OwnerUserId="271" LastActivityDate="2015-06-27T01:40:54.973" Title="Can I develop closed source software with opensource development environment?" Tags="&lt;development&gt;" AnswerCount="0" CommentCount="0" ClosedDate="2015-06-27T01:45:28.337" />
  <row Id="515" PostTypeId="1" CreationDate="2015-06-27T01:56:39.070" Score="5" ViewCount="41" Body="&lt;p&gt;This is a question that stems out from here: &lt;a href=&quot;http://opensource.stackexchange.com/questions/412/do-i-have-to-release-my-code-as-gpl-when-a-java-library-is-gpl#comment544_412&quot;&gt;Do I have to release my code as GPL when a Java Library is GPL&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It seems that the Java System libraries are licensed with a class path exception. After [attempting] to read what the class path exception is, it remains very unclear.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What is a class path exception?&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="98" LastEditDate="2015-06-28T06:59:02.427" LastActivityDate="2015-06-28T06:59:02.427" Title="What is a class path exception?" Tags="&lt;licensing&gt;&lt;exceptions&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="0" />
  <row Id="516" PostTypeId="2" ParentId="506" CreationDate="2015-06-27T02:02:54.860" Score="0" Body="&lt;p&gt;There is a wrong premise in your question: That open-source cannot offer monetary incentives. If you do it right, money can be made. That's the reason why a lot of companies are making money with or around open source projects: RedHat, Canonical, Google, IBM or Sun (now Oracle).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another premise is unproved: That monetary incentives even benefit innovation. I have no data in either direction.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Track record&lt;/strong&gt;:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But we can take a look at how much innovation comes from Open Source. Many basic functions of Internet or modern Operating Systems came from BSD. The X-Window-System was a MIT-project. The UMN Mapserver shaping modern GIS-systems is and was open source. The Apache Webserver was involved creating the modern internet. OpenSSH was an important driver of modern security standards.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So overall I would say that Open Source is not less innovative than proprietary development.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-27T02:02:54.860" CommentCount="0" />
  <row Id="517" PostTypeId="2" ParentId="509" CreationDate="2015-06-27T02:14:23.097" Score="16" Body="&lt;p&gt;It's impossible, if you keep it Open Source, you can always sell it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;a href=&quot;http://www.gnu.org/philosophy/selling.en.html&quot; rel=&quot;nofollow&quot;&gt;Free Software Foundation&lt;/a&gt; says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Actually, we encourage people who redistribute free software to charge&#xA;  as much as they wish or can. If a license does not permit users to&#xA;  make copies and sell them, it is a nonfree license.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;and&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Since free software is not a matter of price, a low price doesn't make&#xA;  the software free, or even closer to free. So if you are&#xA;  redistributing copies of free software, you might as well charge a&#xA;  substantial fee and make some money. Redistributing free software is a&#xA;  good and legitimate activity; if you do it, you might as well make a&#xA;  profit from it.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The &lt;a href=&quot;http://opensource.org/faq#commercial&quot; rel=&quot;nofollow&quot;&gt;Open Source Initiative&lt;/a&gt; says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Can Open Source software be used for commercial purposes?&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Absolutely. All Open Source software can be used for commercial&#xA;  purpose; the Open Source Definition guarantees this. You can even sell&#xA;  Open Source software.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;However, there is a catch. As open source guarantees that everyone can freely redistributes it, everyone else can also redistribute the original software at no price. Or people get it directly from you. So probably selling it at an unreasonable price is not a working business model. You can make that sure by offering the software in as much channels as possible. Selling for a reasonable price though - is exactly what many commercial Linux distributions do.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-15T14:43:32.953" LastActivityDate="2015-07-15T14:43:32.953" CommentCount="3" />
  <row Id="518" PostTypeId="2" ParentId="511" CreationDate="2015-06-27T02:23:35.023" Score="8" Body="&lt;p&gt;The idea of the Cathedral and the Bazaar is a metaphor from the book named surprisingly &lt;a href=&quot;http://www.catb.org/~esr/writings/cathedral-bazaar/&quot;&gt;'The Cathedral and the Bazaar'&lt;/a&gt; from open-source avangelist Eric S. Raymond.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The metaphor describes two different development-models for projects (not necessarily open source).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The cathedral is a centralized effort. A defined group of developers (or even only a single one) is developing the software. Nobody else is involved and ideas or patches from the outside will be ignored. Usually proprietary software is developed that way, but this is not exclusively.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The Bazaar makes the development open. Many people are tinkering with the source code without central control. Many are contributing.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In reality many OSS-projects are in between the two models.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-27T02:23:35.023" CommentCount="0" />
  <row Id="519" PostTypeId="2" ParentId="493" CreationDate="2015-06-27T06:22:21.473" Score="7" Body="&lt;h1&gt;TL;DR&lt;/h1&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The .CAD model would be characterized as artistic, even if it is not exactly what people would expect as &quot;art&quot;.&lt;/li&gt;&#xA;&lt;li&gt;The act of 3D-printing the object would be characterized as a Reproduction in the terms of the license.&lt;/li&gt;&#xA;&lt;li&gt;Yes, the license to the design does carry over onto the object that was created based on the design. But it barely manages to do that.&lt;/li&gt;&#xA;&lt;li&gt;The license is inadequate to be applied to a .CAD file that could be 3D-printed.&lt;/li&gt;&#xA;&lt;li&gt;The license has some holes that can be exploited for someone with the intent of circumventing it.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;h1&gt;Detailed long explanation&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;I am not an specialist on the subject, but I will try to answer based on the best knowledge that I have.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The license is somewhat lengthy to analyze in detail, so I will summarize the relevant points from the &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-nd/3.0/legalcode&quot; rel=&quot;nofollow&quot;&gt;full text&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;First, it is applied to a &quot;Work&quot;. What exactly is a work on this license?&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;1(f) &lt;strong&gt;&quot;Work&quot;&lt;/strong&gt; means the literary and/or artistic work offered under the terms of this License including without limitation any production in the literary, scientific and artistic domain, [...]&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Literary? Nope.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Scientific? Neither.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Artistic? Possibly, so lets try to grab on this. Even if a truck is not exactly what people would normally wait from the word &quot;artistic&quot;.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;[...] whatever may be the mode or form of its expression including digital form, such as a book, pamphlet and other writing; a lecture, address, sermon or other work of the same nature; a dramatic or dramatico-musical work; a choreographic work or entertainment in dumb show; a musical composition with or without words; a cinematographic work to which are assimilated works expressed by a process analogous to cinematography; a work of drawing, painting, architecture, sculpture, engraving or lithography; a photographic work to which are assimilated works expressed by a process analogous to photography; a work of applied art; an illustration, map, plan, sketch or three-dimensional work relative to geography, topography, architecture or science; a performance; a broadcast; a phonogram; a compilation of data to the extent it is protected as a copyrightable work; or a work performed by a variety or circus performer to the extent it is not otherwise considered a literary or artistic work.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The relevant parts are &lt;strong&gt;architecture&lt;/strong&gt;, &lt;strong&gt;sculpture&lt;/strong&gt;, &lt;strong&gt;a work of applied art&lt;/strong&gt; and &lt;strong&gt;three-dimensional work relative to geography, topography, architecture or science&lt;/strong&gt;. So, clearly the Work is the 3D representation of the truck encoded in the file. It is not a sculpture, since the .CAD file nor the model represented there are physical entities. It could be a three-dimensional work, although a truck is not geography or topography, but it is possibly (although hardly defensible) architecture or science. It could be a work of applied art (let's grab on that then).&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;1(c). &lt;strong&gt;&quot;Distribute&quot;&lt;/strong&gt; means to make available to the public the original and copies of the Work through sale or other transfer of ownership.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;1(h). &lt;strong&gt;&quot;Publicly Perform&quot;&lt;/strong&gt; means to perform public recitations of the Work and to communicate to the public those public recitations, by any means or process, including by wire or wireless means or public digital performances; to make available to the public Works in such a way that members of the public may access these Works from a place and at a place individually chosen by them; to perform the Work to the public by any means or process and the communication to the public of the performances of the Work, including by public digital performance; to broadcast and rebroadcast the Work by any means including signs, sounds or images.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;1(i). &lt;strong&gt;&quot;Reproduce&quot;&lt;/strong&gt; means to make copies of the Work by any means including without limitation by sound or visual recordings and the right of fixation and reproducing fixations of the Work, including storage of a protected performance or phonogram in digital form or other electronic medium.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Reproduction and distribution are not clearly differentiated in those terms, but in general what the license tried to say is that playing a song in public is publicly performing, putting it inside a CD is a reproduction and giving or selling the CD is a distribution. In your case, &lt;strong&gt;3D-printing it would be a reproduction and giving or selling it would be a distribution.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To prove that, lets focus on &lt;strong&gt;to make copies of the Work by any means [...]&lt;/strong&gt;, clearly 3D-printing is that, so it is reproduction.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Public performing a 3D-printed truck is unclear. The 3D-printed truck is clearly not something being communicated, recited, broadcasted or rebroadcasted. So the part that might apply is &lt;strong&gt;to make available to the public Works in such a way that members of the public may access these Works from a place -AND- at a place individually chosen by them&lt;/strong&gt;. In my interpretation, exposing the 3D-printed truck on a museum or in an event would be something like that. But... what if you are just selling the 3D-printed objects in a shop and they are not closed inside a box? Would be this be a public perform? I don't know, but it would be at least an overly-stretch of the intended purpose of that (which should be distribution, not public performance). And this could apply even if you are selling something like a painting or a map.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;1(b). &quot;Adaptation&quot; means a work based upon the Work, or upon the Work and other pre-existing works, such as a translation, adaptation, derivative work, arrangement of music or other alterations of a literary or artistic work, or phonogram or performance and includes cinematographic adaptations or any other form in which the Work may be recast, transformed, or adapted including in any form recognizably derived from the original, except that a work that constitutes a Collection will not be considered an Adaptation for the purpose of this License. For the avoidance of doubt, where the Work is a musical work, performance or phonogram, the synchronization of the Work in timed-relation with a moving image (&quot;synching&quot;) will be considered an Adaptation for the purpose of this License.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The 3D-printed object is clearly an unexpected outlier here, but I tend to interpret &quot;adaptation&quot; as &quot;alterations&quot;, &quot;changes&quot; or &quot;derivation&quot;. Simply 3D-printing out the object is not an adaptation in that way. But if you say, change its color or change the position of the truck doors or add an extra pair of wheels, then you are adapting.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ol start=&quot;3&quot;&gt;&#xA;  &lt;li&gt;License Grant. Subject to the terms and conditions of this License, Licensor hereby grants You a worldwide, royalty-free, non-exclusive, perpetual (for the duration of the applicable copyright) license to exercise the rights in the Work as stated below:&lt;br&gt;&lt;br&gt;&#xA;  a. to Reproduce the Work, to incorporate the Work into one or more Collections, and to Reproduce the Work as incorporated in the Collections; and,&lt;br&gt;&lt;br&gt;&#xA;  b. to Distribute and Publicly Perform the Work including as incorporated in Collections.&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So you might 3D-print it freely (reproduce), give or sell it freely (distribute) and expose it freely (publicly perform).&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The above rights may be exercised in all media and formats whether now known or hereafter devised. The above rights include the right to make such modifications as are technically necessary to exercise the rights in other media and formats, but otherwise you have no rights to make Adaptations. Subject to 8(f), all rights not expressly granted by Licensor are hereby reserved, including but not limited to the rights set forth in Section 4(d).&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Let's focus on this: &quot;&lt;strong&gt;The above rights include the right to make such modifications as are technically necessary to exercise the rights in other media and formats, but otherwise you have no rights to make Adaptations.&lt;/strong&gt;&quot; This means that you can't print it modified, except if required for some technical requirement (like adding supports to the 3D model to ensure that it would not break during the print process).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Section 4(d) says about royalties (so it is irrelevant here). And about 8(f), well... There is no section 8(f) there (WTF?). There is 8(a), 8(b), 8(c), 8(d) and 8(e), but no 8(f). Well, let's just move on then...&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Let's see section 4(a):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ol start=&quot;4&quot;&gt;&#xA;  &lt;li&gt;&lt;strong&gt;Restrictions.&lt;/strong&gt; The license granted in Section 3 above is expressly made subject to and limited by the following restrictions:&lt;br&gt;&lt;br&gt; a. You may Distribute or Publicly Perform the Work only under the terms of this License. You must include a copy of, or the Uniform Resource Identifier (URI) for, this License with every copy of the Work You Distribute or Publicly Perform. [...]&lt;br&gt;&lt;br&gt;b. You may not exercise any of the rights granted to You in Section 3 above in any manner that is primarily intended for or directed toward commercial advantage or private monetary compensation. [...]&lt;br&gt;&lt;br&gt;c. If You Distribute, or Publicly Perform the Work or Collections, You must, unless a request has been made pursuant to Section 4(a), keep intact all copyright notices for the Work and provide, reasonable to the medium [...]&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;You may distribute but not change it. Adding a URI or a copy of the license to a physical 3D-printed object is strange, but I guess that this is doable with a small piece of paper with the URI given or distributed together with the object.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;At this point it is clear to me that the 3D-printed object will be subject to the same license that the .CAD file was, mainly because 3D-printing it would be a reproduction. To finish with that:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;8(a) Each time You Distribute or Publicly Perform the Work or a Collection, the Licensor offers to the recipient a license to the Work on the same terms and conditions as the license granted to You under this License.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I.E., if the 3D-printing process creates a reproduction, then the 3D-printed truck is subject to the license. &lt;strong&gt;So, your answer is YES, the license to the design carry over onto the object that was created based on the design.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Finally, if you intend to 3D-print it and sell the produced item:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;4(b) You may not exercise any of the rights granted to You in Section 3 above in any manner that is primarily intended for or directed toward commercial advantage or private monetary compensation. The exchange of the Work for other copyrighted works by means of digital file-sharing or otherwise shall not be considered to be intended for or directed toward commercial advantage or private monetary compensation, provided there is no payment of any monetary compensation in connection with the exchange of copyrighted works.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Which basically means that you cannot sell or rent it for profit. You can only borrow or give it for free, or no more than sell it just by its production and shipping price. However, if you are intending to sell it for profit, it is really easy to circumvent this (don't know if this is a good or a bad thing). If you want to sell the 3D-printed truck for say $ 10.00, you might sell something else that costs $ 1.00 (e.g., a candy) for $ 11.00 and &quot;give&quot; the 3D-printed object as a gift to whoever buys the (overpriced) candy. As long as the government don't impose crazy taxes or regulations about the distribution of the 3D-printed object (like what would happen to a weapon), nothing on the license stops you from this type of circumvention.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To finish the interpretation of the license, I don't think that the remaining sections of the license are relevant to your question.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;That license were clearly written with something in mind that can be represented and transmitted as bits and bytes and be realized in the real world as text, sounds and images. It was designed mostly for text, music and video, but the 3D-printed object clearly is not that. In my opinion, putting the BY-NC-ND license into a .CAD object that could be 3D-printed is a bad idea, since the license was not really designed for things like that. The result is the need to apply some overly-stretched interpretations to make sense from the license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Finally, I think that the license is somewhat shaky in its legalese:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The fact that there is no section 8(f) is a blunder, or at least an epic failed typo.&lt;/li&gt;&#xA;&lt;li&gt;The fact that restriction 4(b) can be circumvented is a failure also.&lt;/li&gt;&#xA;&lt;li&gt;The fact that the license fails to clearly define &quot;Reproduction&quot; and &quot;Distribution&quot; is also bad.&lt;/li&gt;&#xA;&lt;li&gt;The fact that it might need overly-stretched interpretations to make sense in some cases shows that a review in its terms is needed.&lt;/li&gt;&#xA;&lt;li&gt;If the Work was to be classified as a three-dimensional work of geography, topography, architecture or science, but suddenly a reproduction transforms it also in a sculpture without characterizing an adaptation. So, the work changed in its nature when it was not expected to do so. This will probably lead to unexpected consequences. BTW, 3D-scanning an physical object and creating a .CAD file from it also works as the inverse process.&lt;/li&gt;&#xA;&lt;li&gt;Finally, this only applies if the &lt;em&gt;Work&lt;/em&gt; is something &quot;artistic&quot;. If you can somehow demonstrate that there is no art in the 3D-printed object, you might be able to escape this. However, to demonstrate that something is or is not artistic, is something hard because the term &quot;art&quot; is inherently fuzzy and opinative. A model of Mona Lisa or of the Eiffel Tower is clearly artistic. A model of a truck is very debatable and unconclusive if it is artistic.&lt;/li&gt;&#xA;&lt;li&gt;If you can/could circumvent the license with the 3D-print process and make the physical object not protected by the license, by 3D-scanning the 3D-printed object back to a .CAD file you would be able to completely circumvent the license. Oops!&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="34" LastEditorUserId="34" LastEditDate="2015-06-27T19:09:06.673" LastActivityDate="2015-06-27T19:09:06.673" CommentCount="3" />
  <row Id="521" PostTypeId="2" ParentId="515" CreationDate="2015-06-27T07:44:51.390" Score="3" Body="&lt;p&gt;Some of the OpenJDK code is covered by the classpath exception, documented as follows (the second paragraph constitutes the exception):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Linking this library statically or dynamically with other modules is making&#xA;      a combined work based on this library.  Thus, the terms and conditions of&#xA;      the GNU General Public License cover the whole combination.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;As a special exception, the copyright holders of this library give you&#xA;      permission to link this library with independent modules to produce an&#xA;      executable, regardless of the license terms of these independent modules,&#xA;      and to copy and distribute the resulting executable under terms of your&#xA;      choice, provided that you also meet, for each linked independent module,&#xA;      the terms and conditions of the license of that module.  An independent&#xA;      module is a module which is not derived from or based on this library.  If&#xA;      you modify this library, you may extend this exception to your version of&#xA;      the library, but you are not obligated to do so.  If you do not wish to do&#xA;      so, delete this exception statement from your version.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The exception means that you can link the relevant code with other code and use the license you wish, as long as you respect the license of code (modules, libraries etc.) which &lt;em&gt;isn't&lt;/em&gt; covered by the classpath exception. As I understand it this effectively means that the license covering the code placed under the classpath exception has no effect on its use (and redistribution once linked), only on its modification.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The classpath exception is just a way of allowing users of this implementation of the Java platform (compiler, VM and libraries) to use it for projects without affecting the resulting licenses. This is typical of compilers and platforms, since most compiler and platform authors don't want their use to restrict the licenses which can apply to projects using them.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The OpenJDK itself is covered by the OpenJDK assembly exception:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Linking this OpenJDK Code statically or dynamically with other code&#xA;      is making a combined work based on this library.  Thus, the terms&#xA;      and conditions of GPL2 cover the whole combination.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;As a special exception, Sun gives you permission to link this&#xA;      OpenJDK Code with certain code licensed by Sun as indicated at&#xA;      &lt;a href=&quot;http://openjdk.java.net/legal/exception-modules-2007-05-08.html&quot; rel=&quot;nofollow&quot;&gt;http://openjdk.java.net/legal/exception-modules-2007-05-08.html&lt;/a&gt;&#xA;      (&quot;Designated Exception Modules&quot;) to produce an executable,&#xA;      regardless of the license terms of the Designated Exception Modules,&#xA;      and to copy and distribute the resulting executable under GPL2,&#xA;      provided that the Designated Exception Modules continue to be&#xA;      governed by the licenses under which they were offered by Sun.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This just means that you can use the OpenJDK under the terms of the GPL version 2, including code in the OpenJDK which isn't covered by the GPL.&lt;/p&gt;&#xA;" OwnerUserId="118" LastActivityDate="2015-06-27T07:44:51.390" CommentCount="0" />
  <row Id="522" PostTypeId="2" ParentId="283" CreationDate="2015-06-27T08:21:09.553" Score="1" Body="&lt;p&gt;Mark's good answer already covers the Berne Convention and non-signatories to it. There is only one thing to note: even signatories to the Berne Convention have small differences. That may not matter in the grand scheme of things, but the &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_countries&amp;#39;_copyright_lengths&quot; rel=&quot;nofollow&quot;&gt;duration in which the copyright is valid is different in different countries&lt;/a&gt;. Most notably Canada only enforces the Berne minimum of 50 years after authors death, while europe and the US have a term of 70 years after authors death.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-27T08:21:09.553" CommentCount="0" />
  <row Id="525" PostTypeId="2" ParentId="284" CreationDate="2015-06-27T08:59:08.563" Score="3" Body="&lt;p&gt;&lt;strong&gt;Since the whole project would be one executable at the end would the closed source program count as &quot;derivative work&quot;, thereby it would need to be GPL as well?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The basic understanding of the GPL and it's intention saying: yes, the program must be GPL too, as through the linking you create a derivative work. That is the position of the FSF. &lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_General_Public_License#Linking_and_derived_works&quot; rel=&quot;nofollow&quot;&gt;But it is not shared by everyone.&lt;/a&gt; Some interpretations say, only static linking make it a derived work, not dynamic linking (which it would be, you saying it is a DLL). There are even angles, that differ even more. &lt;a href=&quot;http://www.linuxjournal.com/article/6366&quot; rel=&quot;nofollow&quot;&gt;Lawrence Rosen&lt;/a&gt; (from the OSI) says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The primary indication of whether a new program is a derivative work&#xA;  is whether the source code of the original program was used [in a&#xA;  copy-paste sense], modified, translated or otherwise changed in any&#xA;  way to create the new program. If not, then I would argue that it is&#xA;  not a derivative work&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So, there are different interpretations. As far as I know this dispute wasn't put to test in the courts yet. The GPL was enforced multiple times in courts, but as far as I know it was always about violations in using the GPL-program, not because of linking.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;If yes, can I add some kind of additional permission to the GPL licence of my code to explicitly allow this linkage to occur, so it could actually be distributed with the app?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Yes. Many projects use a &lt;a href=&quot;https://en.wikipedia.org/wiki/GPL_linking_exception&quot; rel=&quot;nofollow&quot;&gt;linking exception&lt;/a&gt; to the GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;If yes, where and how should I put these additional permissions in the licence file?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I found no clear guidance of this, but in my understanding it must be clear that an exception is applied and which part is the original GPL. So I would have the copyright statement saying it is GPL with your exception and put both in the license file, but with clear distinction (new header or so).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Would this modified licence still be GPL (compatible)? What kind of open source code could I use within my module?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As far as I understand, the code of your module can be used in other GPL-projects, but different GPL-code cannot be used in your module without the author consenting to your exception. Other than that, more permissive licenses still should work, as long as they are conforming with the terms of the GPL and your exception.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;If the resulting licence would not be GPL compatible are there any other licences that are better sutied for this situation, but are still similar in essence to GPL (e.g. reusing the code is only possible in case it's source is also released)?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_Lesser_General_Public_License&quot; rel=&quot;nofollow&quot;&gt;LGPL&lt;/a&gt; doesn't count linking as creating a derived work, but still applies copyleft to the code of your module. That would imply your module can be linked to different programs without making them Open Source, but modifying your module still demands making that changes LGPL.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-27T08:59:08.563" CommentCount="0" />
  <row Id="526" PostTypeId="2" ParentId="515" CreationDate="2015-06-27T09:13:34.570" Score="1" Body="&lt;p&gt;That is an exception used for the GPL. The GPL is pretty strict and demands that even linked code is put under the GPL. That also applies to compiler or programming languages released under the GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For instance the GCC, the GNU Classpath project and OpenJDK use the GPL as license. Unmodified it would mean, every program developed with these tools would be subject to the GPL, as they link to the GCC runtime library or the Java classpath. To avoid that, these projects use a &lt;a href=&quot;https://en.wikipedia.org/wiki/GPL_linking_exception&quot; rel=&quot;nofollow&quot;&gt;linking exception&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the case of the &lt;a href=&quot;http://www.gnu.org/software/classpath/license.html&quot; rel=&quot;nofollow&quot;&gt;GNU Classpath project&lt;/a&gt; and OpenJDK these linking exceptions are called classpath exceptions, as they make an exception regarding linking the classpath.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-27T09:13:34.570" CommentCount="0" />
  <row Id="527" PostTypeId="2" ParentId="500" CreationDate="2015-06-27T09:31:50.660" Score="6" Body="&lt;p&gt;Logos are a special case that reside in the creative domain covered by copyright, and the domain of trademarks related to identity. The logo itself, the style, colour, etc are usually a result of a creative process. This is usually what you can copyright. The logo denominating your product, company, etc, is what you can trademark.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So to prevent someone from using your logo to do anything besides use it as an identification tool, you would need a copyright for it. To prevent them to use it as an identifier you would need to register a trademark.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;While it may seem that having a copyright would suffice, in my experience a copyright would not cover the case where they would use the logo to promote a product based on your original product (which held the logo). Some copyright licenses permit this but I would suggest you carefully pick one that does allow exactly what you want to allow.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note that I assumed you can actually copyright your logo which may not be possible as the creative process might not be unique enough. If for some reason a copyright is not applicable to your logo, you should at least register the trademark to prevent reuse.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To sum up and answer your final point; even with a copyright, should it apply to your logo, others can use it for other purposes, likely even purposes that are completely unrelated to your activity.&lt;/p&gt;&#xA;" OwnerUserId="326" LastActivityDate="2015-06-27T09:31:50.660" CommentCount="0" />
  <row Id="528" PostTypeId="1" AcceptedAnswerId="545" CreationDate="2015-06-27T09:55:45.783" Score="2" ViewCount="35" Body="&lt;p&gt;For several years now, I've replied to CFPs from OSCON, submitting different open source topics. Unfortunately, year after year I receive the same boiler-plate reply:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The response to our Call for Proposals was overwhelming this year. We &#xA;  received over X proposals, a record number for us and far more than &#xA;  we can possibly accommodate in the program.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;We had intense competition for speaking slots, and we unfortunately have &#xA;  to turn away many strong proposals. We take this as an exciting signal of &#xA;  the demand for OSCON, but it also means we had some hard decisions to make &#xA;  in putting together the program.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;We're still working out a few loose ends in the program, but unfortunately &#xA;  this proposal was not selected for inclusion.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I have tried finding the criteria for selection, but I'm at a loss:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Quality of the proposal:&lt;/strong&gt; I always posted an original proposal for OSCON. After it was refused, I reused the proposal for other events, such as Tech Startup Days, Java One, Devoxx,... More often than not the &lt;em&gt;same proposal&lt;/em&gt; was accepted at that other event.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Seasoned speaker:&lt;/strong&gt; I am a mentor at the Founder Institute (about IP and Legal). I presented talks at Java One, Devoxx, T-DOSE, Startups.be, PDF Days, PDF Technical Conference,... I know how to entertain an audience.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Open Source Champion:&lt;/strong&gt; I am the original developer of iText, a successful open source PDF library. I accrued &lt;a href=&quot;http://stackoverflow.com/users/1622493/bruno-lowagie&quot;&gt;29K+ reputation points on StackOverflow&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Expert:&lt;/strong&gt; I wrote two books for Manning publications. I am a member of the ISO committees for PDF. I've won Deloitte's Fast 50 competition in Belgium (ranking 28th place in the EMEA region),...&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Experience:&lt;/strong&gt; I wrote my first open source library in 1998. I founded 5 companies, 4 of which still exist. I succeeded in creating a profitable open source business.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Granted: this list doesn't exactly sound modest, but I'd expect that all of these &quot;achievements&quot; are relevant in the context of choosing a speaker. Would I have a better chance at being selected for a talk at OSCON if I submitted a talk anonymously?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Being a speaker at OSCON is one of those items that I just don't succeed in checking off from my bucket list.&lt;/p&gt;&#xA;" OwnerUserId="27" LastEditorUserId="14" LastEditDate="2015-06-28T11:25:55.560" LastActivityDate="2015-06-28T11:25:55.560" Title="What could be criteria to be accepted as a speaker at OSCON?" Tags="&lt;oscon&gt;&lt;speaker&gt;&lt;events&gt;" AnswerCount="1" CommentCount="11" FavoriteCount="0" ClosedDate="2015-06-27T14:13:21.320" />
  <row Id="529" PostTypeId="1" AcceptedAnswerId="535" CreationDate="2015-06-27T10:23:48.417" Score="15" ViewCount="175" Body="&lt;p&gt;I know that &lt;a href=&quot;https://www.gnu.org/philosophy/free-sw.html&quot;&gt;Free Software&lt;/a&gt; (this means the concept of free as in freedom, not software that does not cost anything) and &lt;a href=&quot;http://opensource.org/osd&quot;&gt;Open Source&lt;/a&gt; have two distinct definitions. In practice though, they turn out to be mostly the same. But I was asking myself, if the minor differences can lead to a software license that is conforming to one definition but not the other? Does such an example exist? And what are the points in either definition, that make them different?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="190" LastEditDate="2015-06-30T12:48:11.347" LastActivityDate="2015-07-10T09:55:25.553" Title="Can a software license meet one of the FSF's and OSI's definitions without meeting the other?" Tags="&lt;terminology&gt;&lt;open-source-definition&gt;&lt;free-software-definition&gt;" AnswerCount="3" CommentCount="4" FavoriteCount="3" />
  <row Id="530" PostTypeId="2" ParentId="529" CreationDate="2015-06-27T11:55:32.460" Score="5" Body="&lt;h2&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Comparison_of_free_and_open-source_software_licenses#Approvals&quot; rel=&quot;nofollow&quot;&gt;Comparison of free and open-source software licenses &gt; Approvals&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Example:-&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://ti.arc.nasa.gov/opensource/nosa/&quot; rel=&quot;nofollow&quot;&gt;NASA Open Source Agreement&lt;/a&gt; is open source but not free software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Quoted from: &lt;a href=&quot;http://www.gnu.org/licenses/license-list.html#NASA:-&quot; rel=&quot;nofollow&quot;&gt;http://www.gnu.org/licenses/license-list.html#NASA:-&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The NASA Open Source Agreement, version 1.3, is not a free software license because it includes a provision requiring changes to be your “original creation”. Free software development depends on combining code from third parties, and the NASA license doesn't permit this.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;We urge you not to use this license. In addition, if you are a United States citizen, please write to NASA and call for the use of a truly free software license.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Also visit &lt;a href=&quot;https://en.wikipedia.org/wiki/NASA_Open_Source_Agreement&quot; rel=&quot;nofollow&quot;&gt;wikipedia&lt;/a&gt; article in which you can see OSI approved : yes, FSF approved : no&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Points to be noted:-&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.gnu.org/philosophy/categories.html&quot; rel=&quot;nofollow&quot;&gt;Categories of free and nonfree software&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/2m4UM.png&quot; alt=&quot;catagories&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The term “open source” software is used by some people to mean more or less the same category as free software. It is not exactly the same class of software: &lt;strong&gt;they accept some licenses that we consider too restrictive, and there are free software licenses they have not accepted&lt;/strong&gt;. However, the differences in extension of the category are small: nearly all free software is open source, and nearly all open source software is free.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;You can see reason is approval by different foundations and their ideas (bold added).&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.gnu.org/philosophy/free-open-overlap.html&quot; rel=&quot;nofollow&quot;&gt;How Free Software and Open Source Relate as Categories of Programs&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&#xA;    /----------------------------------------------\&#xA;   / |                                            | \&#xA;  /  |                                            |  \&#xA; /   |                                            |   \&#xA;     |                                            |&#xA;     |       Source license is GNU *GPL, Apache,  |&#xA;     |        original BSD, modified BSD,         |&#xA;free |        X11, expat, Python, MPL, etc.,      |&#xA;     |        and executable is not tivoized      |   open source&#xA;     |                                            | &#xA;     |                                            |&#xA; \   |                                            |&#xA;  \  |                                            |&#xA;   \ |                                            |   /&#xA;    \----------------------------------------------  /&#xA;     |     tivoized (tyrant) devices          | O | /&#xA;     ----------------------------------------------/&#xA;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;From &lt;a href=&quot;http://www.gnu.org/philosophy/open-source-misses-the-point.html&quot; rel=&quot;nofollow&quot;&gt;open-source-misses-the-point&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;...Even if the executable is made from free source code, the users cannot run modified versions of it, so the executable is &lt;strong&gt;nonfree&lt;/strong&gt;.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&lt;strong&gt;The criteria for open source do not recognize this issue&lt;/strong&gt;; they are concerned solely with the licensing of the source code. Thus, these unmodifiable executables, when made from source code such as Linux that is open source &lt;strong&gt;and&lt;/strong&gt; free, are open source but &lt;strong&gt;not&lt;/strong&gt; free.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Note:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;quoted from &lt;a href=&quot;http://www.gnu.org/philosophy/open-source-misses-the-point.html&quot; rel=&quot;nofollow&quot;&gt;fear of freedom&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The philosophy of open source, with its purely practical values, impedes understanding of the deeper ideas of free software; it brings many people into our community, &lt;strong&gt;but does not teach them to defend it&lt;/strong&gt;. That is good, as far as it goes, but &lt;strong&gt;it is not enough to make freedom secure&lt;/strong&gt;. Attracting users to free software takes them just part of the way to becoming defenders of their own freedom.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;emphasis mine&lt;/sup&gt; &lt;/p&gt;&#xA;" OwnerUserId="296" LastEditorUserId="296" LastEditDate="2015-07-10T09:55:25.553" LastActivityDate="2015-07-10T09:55:25.553" CommentCount="0" />
  <row Id="531" PostTypeId="2" ParentId="279" CreationDate="2015-06-27T12:18:09.733" Score="6" Body="&lt;p&gt;When you use the open source version, you can ask any 3rd party vendor you consider qualified for support. The original licensor can't prevent anyone from offering advise, and the right to fork gives 3rd parties the right to make any changes you want.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, be aware that:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Trademark laws might make it difficult for 3rd parties to advertise their support services, so you might have issues finding a provider even though they are on the market.&lt;/li&gt;&#xA;&lt;li&gt;Nobody knows the software as well as those people who developed it, so you &lt;em&gt;might&lt;/em&gt; get higher quality support from the original company (your mileage may vary).&lt;/li&gt;&#xA;&lt;li&gt;Bugfixes and features you request from the original vendor might find their way into the mainline of the product, so there won't be any issues with them in future versions. But any modifications on your private fork made by a 3rd party contractor likely won't. That means your private fork will diverge and the maintenance overhead to apply the updates from upstream will increase.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Another issue which might prevent you from switching to the free version in the first place is when the proprietary version comes with extra features not included in the free version, and you grow too dependent on these tools.&lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-06-27T12:25:19.743" LastActivityDate="2015-06-27T12:25:19.743" CommentCount="0" />
  <row Id="532" PostTypeId="1" AcceptedAnswerId="546" CreationDate="2015-06-27T12:25:17.210" Score="7" ViewCount="36" Body="&lt;p&gt;With conventional copyright, N years after the author's death the copyright expires (where N varies from country to country). Since free and open source licences are supported legally by copyright law, what happens N years after the original author's death? Does the project move from being free or open source to being public domain?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Does the result depend on who else contributed (since their copyright contributions will also be part of the overall project)? Do continuing contributions prevent the project from becoming public domain, or will those parts of the project contributed by people who have since died over N years ago become public domain, leaving the free or open source licence only applying to the more recent contributions?&lt;/p&gt;&#xA;" OwnerUserId="37" LastEditorUserId="69" LastEditDate="2015-06-27T12:37:15.777" LastActivityDate="2015-06-28T20:51:54.177" Title="What happens to an open source project when the copyright expires?" Tags="&lt;copyright&gt;&lt;public-domain&gt;" AnswerCount="2" CommentCount="0" />
  <row Id="533" PostTypeId="1" AcceptedAnswerId="559" CreationDate="2015-06-27T12:35:50.143" Score="4" ViewCount="69" Body="&lt;p&gt;In many open source projects, there are normally many contributors. Ownership of the code is generally clarified during the process of creating the contributor agreements.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, who owns the intellectual property? While I'm sure that this &lt;strong&gt;&lt;em&gt;may&lt;/em&gt;&lt;/strong&gt; be rectified in these contributor agreements, is it ever made clear? Does the intellectual property fall on who made the plan for the program in the start?&lt;/p&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-08-10T22:10:37.513" Title="Who owns the intellectual property?" Tags="&lt;contributor&gt;&lt;intellectual-property&gt;" AnswerCount="2" CommentCount="6" />
  <row Id="534" PostTypeId="2" ParentId="500" CreationDate="2015-06-27T12:39:53.923" Score="5" Body="&lt;p&gt;It is quite common for commercial open source projects to trademark their name, logo and corporate design.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As a result, any forks can use the sourcecode, but must use a different name. This is the reason why Debian-based Linux distributions usually come with a web browser called &quot;Iceweasel&quot; which is essentially Mozilla Firefox.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But when you don't trademark your projects identity, then others are free to use the name. When you don't state otherwise, your license terms also apply to your project logo.&lt;/p&gt;&#xA;" OwnerUserId="14" LastActivityDate="2015-06-27T12:39:53.923" CommentCount="0" />
  <row Id="535" PostTypeId="2" ParentId="529" CreationDate="2015-06-27T12:43:12.907" Score="10" Body="&lt;p&gt;Yes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;See the examples from &lt;a href=&quot;http://opensource.stackexchange.com/a/383/138&quot;&gt;my answer to the question &quot;Is Open Source Software a subset of free software?&quot;&lt;/a&gt;: &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;h3&gt;Example 1: &lt;em&gt;Free Software&lt;/em&gt;, but not &lt;em&gt;Open Source Software&lt;/em&gt;&lt;/h3&gt;&#xA;  &#xA;  &lt;p&gt;Netscape’s early versions of &lt;a href=&quot;https://en.wikipedia.org/wiki/Mozilla_Application_Suite&quot;&gt;Mozilla&lt;/a&gt; were released under the &lt;a href=&quot;https://www.mozilla.org/MPL/NPL/1.0/&quot;&gt;&lt;em&gt;Netscape Public License version 1.0&lt;/em&gt;&lt;/a&gt; (see &lt;a href=&quot;https://en.wikipedia.org/wiki/Netscape_Public_License&quot;&gt;its Wikipedia article&lt;/a&gt;).&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;This license is &lt;a href=&quot;https://www.gnu.org/licenses/license-list#NPL&quot;&gt;approved by the FSF&lt;/a&gt;, but it is &lt;a href=&quot;http://opensource.org/licenses/alphabetical&quot;&gt;not&lt;/a&gt; approved by the OSI.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;↳ So these early versions of Mozilla are Free Software, but not Open Source Software.&lt;/p&gt;&#xA;  &#xA;  &lt;h3&gt;Example 2: &lt;em&gt;Open Source Software&lt;/em&gt;, but not &lt;em&gt;Free Software&lt;/em&gt;&lt;/h3&gt;&#xA;  &#xA;  &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Active_Agenda&quot;&gt;Active Agenda&lt;/a&gt; is licensed under the &lt;a href=&quot;https://en.wikipedia.org/wiki/Reciprocal_Public_License&quot;&gt;&lt;em&gt;Reciprocal Public License&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;This license is &lt;a href=&quot;http://opensource.org/licenses/RPL-1.5&quot;&gt;approved by the OSI&lt;/a&gt; (currently in version 1.5), but it is &lt;a href=&quot;https://www.gnu.org/licenses/license-list&quot;&gt;not&lt;/a&gt; approved by the FSF (it’s &lt;a href=&quot;https://www.gnu.org/licenses/license-list#RPL&quot;&gt;listed as unfree&lt;/a&gt;, linking to version 1.3).&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;↳ So Active Agenda is Open Source Software, but not Free Software.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;There are various reasons why OSI could approve a license that FSF doesn’t, and vice versa.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/Comparison_of_free_and_open-source_software_licenses#Approvals&quot;&gt;&quot;Approvals&quot; table in the Wikipedia article 'Comparison of free and open-source software licenses'&lt;/a&gt; lists cases where only one of FSF and OSI approved a license, and sometimes links to a source that explains why the other organization didn’t approve it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, the &lt;a href=&quot;http://www.wtfpl.net/&quot;&gt;&lt;em&gt;Do What the Fuck You Want to Public License&lt;/em&gt; (WTFPL)&lt;/a&gt; is &lt;a href=&quot;https://www.gnu.org/licenses/license-list#WTFPL&quot;&gt;approved by the FSF&lt;/a&gt;, but not by the OSI. In &lt;a href=&quot;http://opensource.org/minutes20090304&quot;&gt;OSI’s Board Meeting Minutes&lt;/a&gt;, where this license was discussed, it says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Mr. Nelson's report includes the following licenses to be discussed and approved/disapproved by the Board.&lt;/p&gt;&#xA;  &#xA;  &lt;ol&gt;&#xA;  &lt;li&gt;&lt;p&gt;[…]&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;p&gt;Title: WTFPL Submission: &lt;a href=&quot;http://crynwr.com/cgi-bin/ezmlm-cgi?17:mss:634:200902:aglgcgbhmfcheffmdgon&quot;&gt;http://crynwr.com/cgi-bin/ezmlm-cgi?17:mss:634:200902:aglgcgbhmfcheffmdgon&lt;/a&gt; License: &lt;a href=&quot;http://sam.zoy.org/wtfpl/&quot;&gt;http://sam.zoy.org/wtfpl/&lt;/a&gt; Comments: It's no different from dedication to the public domain. Author has submitted license approval request -- author is free to make public domain dedication. Although he agrees with the recommendation, Mr. Michlmayr notes that public domain doesn't exist in Europe. Recommend: Reject&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;They decided to &quot;reject the WFTPL as redundant to the Fair License&quot;.&lt;/p&gt;&#xA;" OwnerUserId="138" LastActivityDate="2015-06-27T12:43:12.907" CommentCount="5" />
  <row Id="536" PostTypeId="2" ParentId="504" CreationDate="2015-06-27T12:59:44.377" Score="8" Body="&lt;p&gt;Yes and no.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can make a claim like that, but it does not override the site policy, it adds to it. In effect, it means that your code is now dual-licensed under both the CC BY-SA and the Apache license and I can choose which of the two to apply when reusing your code.&lt;/p&gt;&#xA;" OwnerUserId="8" LastActivityDate="2015-06-27T12:59:44.377" CommentCount="0" />
  <row Id="538" PostTypeId="2" ParentId="504" CreationDate="2015-06-27T13:10:08.600" Score="16" Body="&lt;p&gt;It depends. For Stack Exchange: yes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When you write something, you own the copyright, and have the right to do whatever you want with it (from a copyright perspective at least).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When you post something to some site, you usually give a license to use that material on that site, through the terms and services, or you transfer the copyright to them.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If the terms are to transfer the copyright to them, you no longer own the copyright, and you can't grant additional licenses.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you grant them a license, it's either an exclusive license, or a non-exclusive license. If it is an exclusive license, you can't grant anyone else a license anymore.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If it is a non-exclusive license, you may still dual license your content, and make it available under some other license as well.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the case of Stack Exchange, the terms read&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You agree that all Subscriber Content that You contribute to the&#xA;  Network is perpetually and irrevocably licensed to Stack Exchange&#xA;  under the Creative Commons Attribution Share Alike license.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This means it is a non-exclusive license, and you can release your content to others under a different license as well. This seems to be the most common scenario for other sites as well, but you should always double check.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note that this doesn't &lt;em&gt;override&lt;/em&gt; the license. You are dual licensing your content. Per the terms and services, you have no choice but to license your work under CC-BY-SA. But you have no restriction to &lt;em&gt;also&lt;/em&gt; license it under a different license of your choosing.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;These licenses don't have to be compatible. Anyone can choose under which license they use your work, the standard StackExchange one (CC-BY-SA), or another you offer personally.&lt;/p&gt;&#xA;" OwnerUserId="97" LastEditorUserId="97" LastEditDate="2015-06-29T12:56:56.690" LastActivityDate="2015-06-29T12:56:56.690" CommentCount="0" />
  <row Id="539" PostTypeId="2" ParentId="506" CreationDate="2015-06-27T13:21:59.847" Score="0" Body="&lt;p&gt;The open source approach does discourage some kinds of innovation but at the same time, it encourages other kinds of innovation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The pure commercial approach is to work on something by &lt;em&gt;yourself&lt;/em&gt;, or in a group of people that you pay. You then sell what you created to your customers, but you try to make sure others can't duplicate your process. (In the case of software, that means closed source, patents and proprietary formats.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The pure open approach is to &lt;em&gt;collaborate&lt;/em&gt; on something with a large group of other people (of varying degrees of engagement) and to make sure anyone can help in whatever way they wish. (In the case of software this means open source, open development and open standards.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This means that the pure commercial approach is highly centralized, while the pure open approach is highly decentralized. Both lead to innovation, but that innovation is achieved in different ways and for different reasons.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is also a lot of ground between the two extremes. For example, a mostly commercial-focused company can base their products on open standards. And a mostly open company can keep some of their code closed, or they may not be open to outside contributions.&lt;/p&gt;&#xA;" OwnerUserId="8" LastActivityDate="2015-06-27T13:21:59.847" CommentCount="0" />
  <row Id="540" PostTypeId="1" AcceptedAnswerId="542" CreationDate="2015-06-27T13:27:27.810" Score="4" ViewCount="62" Body="&lt;p&gt;&lt;strong&gt;Background:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;While I know that copyrights on open source products expire. I have never come across anything regarding licenses, this lead me to ask this question:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My Question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Can licenses expire?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If yes, under what conditions? Is there a time limit?&#xA;If no, why do copyrights expire but not licenses?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-06-30T02:13:50.787" LastActivityDate="2015-06-30T02:13:50.787" Title="Can a license on a open source product expire?" Tags="&lt;licensing&gt;&lt;copyright&gt;" AnswerCount="2" CommentCount="0" />
  <row Id="541" PostTypeId="1" AcceptedAnswerId="544" CreationDate="2015-06-27T13:28:06.057" Score="4" ViewCount="42" Body="&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Mozilla_Corporation_software_rebranded_by_the_Debian_project#IceWeasel&quot; rel=&quot;nofollow&quot;&gt;Iceweasel&lt;/a&gt; is a fork of Firefox which was made by the Debian project because the license conditions of the Firefox name and logo violate the Debian Free Software Guidelines.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Did Debian do any other changes to Firefox which were not just cosmetic?&lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="98" LastEditDate="2015-06-28T07:21:27.020" LastActivityDate="2015-06-28T07:21:27.020" Title="Differences between Firefox and Iceweasel" Tags="&lt;forking&gt;&lt;dfsg&gt;" AnswerCount="1" CommentCount="5" />
  <row Id="542" PostTypeId="2" ParentId="540" CreationDate="2015-06-27T13:39:38.803" Score="6" Body="&lt;p&gt;Licenses exist to specify rights that the copyright-holder gives to license-holders; they only have meaning within the context of copyright legislation. So when copyright expires, the limitations linked to copyright expire as well, and the need for a license disappears. You could view this as meaning that a license expires when all the copyrights on the work it licenses expire themselves.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Once a work is in the public domain you don't need a license; you can do anything you like with it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is possible to specify termination clauses in licenses, but that's not quite the same as expiration. You could write a license with an end date (but that wouldn't qualify as a free / open source license, unless upon termination it reverted to another free / open source license). The &lt;a href=&quot;http://www.gnu.org/licenses/gpl.html&quot;&gt;GPL v3&lt;/a&gt; includes a termination clause (section 8), but it only terminates the license for people who violate the license terms (so it's not expiration).&lt;/p&gt;&#xA;" OwnerUserId="118" LastActivityDate="2015-06-27T13:39:38.803" CommentCount="0" />
  <row Id="543" PostTypeId="2" ParentId="532" CreationDate="2015-06-27T13:43:05.567" Score="2" Body="&lt;p&gt;This depends widely on what is losing its copyright. But no matter what it is put into,  people call the Public Domain. The public domain is just a fancy way of saying &quot;it is now available to the public as a whole, and therefore not subject to copyright&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If the project was already open sourced basically nothing changes, except for whatever license was on it. Now ANYONE can do WHATEVER they want to it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So technically the Open Source is lost but also it is still there because now ANYONE can build and improve upon it.&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-06-28T20:51:54.177" LastActivityDate="2015-06-28T20:51:54.177" CommentCount="2" />
  <row Id="544" PostTypeId="2" ParentId="541" CreationDate="2015-06-27T13:45:31.360" Score="7" Body="&lt;p&gt;There are some non-cosmetic differences; you can see all the patches &lt;a href=&quot;http://anonscm.debian.org/cgit/pkg-mozilla/iceweasel.git/tree/debian/patches&quot;&gt;here&lt;/a&gt;. You'll find changes which disable &quot;phone-home&quot; features (Firefox health report), change the way plugins and extensions are handled to work better in the context of a distribution with packaged plugins and extensions... There are also a series of bug fixes backported from work-in-progress upstream versions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Apart from the branding changes, these are the kinds of changes you could find in any package in Debian. The Chromium package for example also disables various &quot;phone-home&quot; features; many packages include backported bug fixes, and changes to integrate the software into the distribution.&lt;/p&gt;&#xA;" OwnerUserId="118" LastActivityDate="2015-06-27T13:45:31.360" CommentCount="1" />
  <row Id="545" PostTypeId="2" ParentId="528" CreationDate="2015-06-27T13:49:04.327" Score="5" Body="&lt;p&gt;I understand the situation you must be going through however...&lt;/p&gt;&#xA;&#xA;&lt;p&gt;By the announcement they released it sounds like no matter how good you are at the topic it may not make a difference. Where they said &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;a record number for us and far more than we can possibly accommodate &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;It made it sound like they had an overflow of applicants and they couldn't have fully read / accepted all of the good ones.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Recommendation:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I would continue to submit your application every year, and complete it to the best of your abilities (a good application would approve your chances if they do read it). Other than that just keep trying, eventually they will get your application, read it, and be amazed!&lt;/p&gt;&#xA;" OwnerUserId="271" LastActivityDate="2015-06-27T13:49:04.327" CommentCount="1" />
  <row Id="546" PostTypeId="2" ParentId="532" CreationDate="2015-06-27T13:51:28.110" Score="4" Body="&lt;p&gt;The copyright on the combined work expires when the most recent part of the individual copyrights expires (in the US generally life + 70 years of the last author) and the project would enter the public domain.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Older parts of the project enter the public domain before the newer parts, and with that, the combined work do. It's possible for a combined work to have its older parts in the public domain, while its newer parts are still under copyright. In that case, you could use the older version as a public domain version.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For most software projects this is somewhat of a non-starter. life + 70 years is effectively forever. I don't have my crystal ball with me at the moment, but I don't suspect much software written now will still have applications in the year 2085.&lt;/p&gt;&#xA;" OwnerUserId="97" LastEditorUserId="97" LastEditDate="2015-06-28T20:49:39.167" LastActivityDate="2015-06-28T20:49:39.167" CommentCount="2" />
  <row Id="548" PostTypeId="2" ParentId="540" CreationDate="2015-06-27T13:59:44.380" Score="6" Body="&lt;p&gt;In general, a license can be for a limited time.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;All open source licenses are perpetual licenses. Neither the FSF nor the OSI consider non-perpetual licenses for certification.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When the copyright expires, the license is redundant, as it can't enforce any conditions anymore. &lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-06-27T13:59:44.380" CommentCount="0" />
  <row Id="549" PostTypeId="1" AcceptedAnswerId="558" CreationDate="2015-06-27T14:23:12.657" Score="13" ViewCount="117" Body="&lt;p&gt;&lt;strong&gt;Background:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;While looking for open source projects I stumbled across a very interesting one. After further digging I found that it was also abandoned. PERFECT!! I can take over I thought, this led me to ask the question:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If a project is abandoned and I take over, does the owner of the project / license become mine?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If no, why not? How could I do this?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-07-03T17:27:48.303" LastActivityDate="2015-07-03T17:27:48.303" Title="Are you legally allowed to use abandoned projects?" Tags="&lt;ownership&gt;" AnswerCount="2" CommentCount="4" />
  <row Id="550" PostTypeId="1" CreationDate="2015-06-27T14:26:33.627" Score="3" ViewCount="46" Body="&lt;p&gt;&lt;strong&gt;Background:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;From other posts I have learned that copyrights expire some amount of time after the owner's death. But from what I know ownership can be passed on after death. If the owner of a copyright hands over the ownership (through a will or other means) does that mean that the copyright will now expire after the aforementioned amount of time after this person's death?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="327" LastEditDate="2015-06-27T17:10:03.047" LastActivityDate="2015-06-27T17:10:03.047" Title="Can copyright of an open sourced product be passed down through generations?" Tags="&lt;copyright&gt;&lt;ownership&gt;" AnswerCount="1" CommentCount="4" ClosedDate="2015-06-27T17:54:18.250" />
  <row Id="551" PostTypeId="1" CreationDate="2015-06-27T14:32:18.127" Score="6" ViewCount="30" Body="&lt;p&gt;Assume a standard server-side Web application. Database, backend, frontend. It's basic knowledge that one should check the licences of the libraries used before deciding on the license for the final product. For example, if there is a GPL library used in the backend, the whole thing has to be made GPL. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;But my question is: if the application runs on a database management system with a copyleft license, does this make the whole application copyleft? On the other hand, if the application runs on a closed source DBMS like Microsoft SQL server, does this mean that making the whole application open source is impossible, because it would be required of the authors to also give the Microsoft SQL server along with the rest of the code? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;If it depends on how exactly the connection to the database is made, or how the product is distributed (e.g. does it have an installation file which installs a DBMS automatically), then what condition is important for the final judgment?&lt;/p&gt;&#xA;" OwnerUserId="221" LastActivityDate="2015-06-28T21:19:38.513" Title="Does the licence of the database used have an influence on the final licence of the product?" Tags="&lt;copyleft&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="2" />
  <row Id="552" PostTypeId="2" ParentId="550" CreationDate="2015-06-27T14:35:26.810" Score="4" Body="&lt;p&gt;No, the copyright term is x year after the creators death, not after the current owners death.&lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-06-27T14:35:26.810" CommentCount="2" />
  <row Id="553" PostTypeId="1" AcceptedAnswerId="556" CreationDate="2015-06-27T15:02:45.220" Score="11" ViewCount="109" Body="&lt;p&gt;Google Chrome and Chromium look very similar and seem related.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;How exactly do Google Chrome and Chromium relate to each other, and why are they separate products?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-06-27T18:22:08.567" LastActivityDate="2015-06-27T18:22:08.567" Title="How do Chromium and Chrome relate to each other?" Tags="&lt;forking&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="555" PostTypeId="2" ParentId="529" CreationDate="2015-06-27T15:10:14.913" Score="-2" Body="&lt;p&gt;Yes, it exists, even if you don't count unor's examples of recognized/nonrecognized licenses. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Free but not open source&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Legally, offering a service over the Internet already means that you are distributing your software to users. So in this definition, there are tons of examples, for example Google. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;But even if this is not the definition you had in mind, there are installable programs which are free to use but not open source. I don't have an exact name in my head, I think Treesheets used to be closed source once, so was the .NET framework and there are probably more, mostly historical, examples. Also many device drivers are available for free but the code is closed. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Open source but not free&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you have a very stringent definition of &quot;not free&quot;, this is of course impossible, because open source licenses prohibit you to charge for the source code, so there is always at least one method to obtain the software for free. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;But if you change the definition to &quot;the product is generally sold for money, but the code is available under an open source license&quot;, then this is available. A prominent example is CrossOver, a gaming platform allowing to run Windows games for Mac and Linux. They have a paid model, I even think that it was a subscription. Their code is &lt;a href=&quot;https://www.codeweavers.com/products/faq/source/&quot; rel=&quot;nofollow&quot;&gt;GPL licensed&lt;/a&gt;, and available for free. Still, there are many people who pay the price, either for the convenience of having the easy install + support, or out of a &quot;support the guys who write the software I use&quot; consideration. I have seen the second one happening in other cases with games, such as people paying high Humble Bundle prices for open sourced games, although sometimes I think the games were open sourced after the sale (sometimes as a direct result of the sale). &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The bottom line is that the basic assumption of &quot;nobody will pay for it if they can have it for free&quot; is empirically shown to be as false as many other simplistic assumptions of standard economic theory. We are not Chicago's &lt;em&gt;homo oeconomicus&lt;/em&gt;. And we happen to have examples for free-but-not-open as well as open-but-not-free software products. But they are somewhat rare, because 1) people who want to do free prefer the benefits of open source, and 2) people (and especially institutions) who want to do non free are still afraid of monetary disadvantages under open source models (and may be right, if they choose the wrong model). &lt;/p&gt;&#xA;" OwnerUserId="221" LastActivityDate="2015-06-27T15:10:14.913" CommentCount="4" />
  <row Id="556" PostTypeId="2" ParentId="553" CreationDate="2015-06-27T15:16:35.703" Score="18" Body="&lt;p&gt;It would be more correct to state that Chrome is a fork of Chromium.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://www.chromium.org/&quot;&gt;Chromium&lt;/a&gt; is an open source web browser available under many different licenses. Many of them are permissive and allow to use it as part of a closed source application.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;Google Chrome&lt;/a&gt; is a closed source web browser based on Chromium. However, Google is the driving force between both Chromium and Chrome.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;By open-sourcing the core of their web browser, Google allows it to be used as part of pure open-source operating systems. This leads to a wider propagation of their Blink rendering engine which has various strategic advantages for the company. It also opens them up to contributions from the community which saves them development work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But by having their actual flagship browser a closed source application based on it, they can put additional features into it which would not be allowed in a pure open source application, like inclusion of proprietary plugins (like Adobe Flash) or add features which would be frowned upon in an open source application (like those which submit usage data to Google).&lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-06-27T15:23:23.567" LastActivityDate="2015-06-27T15:23:23.567" CommentCount="6" />
  <row Id="557" PostTypeId="2" ParentId="549" CreationDate="2015-06-27T15:33:46.033" Score="13" Body="&lt;p&gt;An open source license which fulfills the &lt;a href=&quot;http://opensource.org/osd&quot;&gt;open source definition&lt;/a&gt; gives you the right to fork a project, make modifications, and distribute this derived work, even in exchange for money. These should be all the rights you need to take over and keep the project alive.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But that does not make you the copyright owner. The original copyright still belongs to the original author(s). Although you are the copyright owner of any modifications you make. This results in a work of mixed copyright. The old parts are copyrighted by the old author(s) and the new parts are copyrighted by you.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When the project is under a permissive open source license, it might allow you to distribute the software under a different license, as long as some conditions are fulfilled (usually leaving the copyright message and license of the original authors intact). A share-alike license, however, forces you to release the new work under the same terms you received it. Consult the license terms of the project for details.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When you want to gain complete copyright of the work, including the right to get rid of those license texts and the full right to release it under any license conditions you want without any strings attached, you need to contact the original author(s) and ask them to transfer the copyright to you. Keep in mind that when it was a collaborative project, you need the permission of &lt;strong&gt;all&lt;/strong&gt; contributors, unless they explicitly transfered their copyright to the project maintainer by signing a contributors agreement with a copyright transfer clause. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also keep in mind that you will have to give them a reason to transfer the copyright to you. As stated above, the open source license they implicitly gave you should give you all the freedoms you need to continue the project. What they give you with the copyright is the permission to &lt;em&gt;change&lt;/em&gt; the license to something they don't want. So some persuasion will be required.&lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-06-27T15:52:09.203" LastActivityDate="2015-06-27T15:52:09.203" CommentCount="3" />
  <row Id="558" PostTypeId="2" ParentId="549" CreationDate="2015-06-27T16:42:09.853" Score="7" Body="&lt;p&gt;There are a number of issues to consider.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;First, to answer the main question: you are legally allowed to use any abandoned open source project, the fact that it's abandoned doesn't change your rights.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Second, the fact that it's abandoned doesn't change its owners rights; in particular, copyright remains with the creators. But for an open source project that isn't particularly important, unless you wish to change the license. (Note too that in some jurisdictions copyright is non-transferable, or not fully transferable.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Third, there's the issue of continued maintenance. Of course you can fork an open source project; in the vast majority of cases you can continue using the same name etc. What will be more difficult is recovering the original web sites if any, source code repositories etc. If the original maintainer(s) is/are still reachable, you can try asking them; if they haven't disappeared off the face of the earth there's a fair chance they'll be happy to pass the maintenance on to you! If they're not, and the hosting company (Sourceforge, Github etc.) don't have a process in place, things will be a bit more complicated: you'll need to contact various sites and organisations where the software you're taking over is mentioned, and tell them about the change. Generally speaking once you've proven you're a worthy maintainer, the transition will happen, and your new web site or code repository will end up being considered the authoritative source for the project. This becomes much easier once your new versions of the project are adopted by downstream distributions...&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I did this a while ago for &lt;a href=&quot;https://sourceforge.net/projects/linuxconsole/&quot; rel=&quot;nofollow&quot;&gt;the Linux console project&lt;/a&gt;; it was dormant upstream, and I was maintaining the package in Debian, adding more and more patches as time went by. At that time Sourceforge had a process in place for requesting a maintenance change; they contacted the original maintainer who OK'd the transition, and I became administrator of the Sourceforge project. No copyrights were changed: the original copyrights remain in place on the pre-existing code; but given that I had (and have) no plans to change the license, that's not an issue.&lt;/p&gt;&#xA;" OwnerUserId="118" LastEditorUserId="118" LastEditDate="2015-06-29T07:59:39.347" LastActivityDate="2015-06-29T07:59:39.347" CommentCount="0" />
  <row Id="559" PostTypeId="2" ParentId="533" CreationDate="2015-06-27T19:08:15.270" Score="5" Body="&lt;p&gt;Intellectual property, while not the same thing as copyright, tends to follow similar patterns.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In a single-owner project, the copyright is entirely theirs, and so is the IP. In a project with multiple contributors and no contributor agreement, the copyright is distributed: each contributor owns the copyright on any contributions he makes. The same applies to the intellectuals. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Lastly, in a project with multiple contributors and a contributor agreement, it depends entirely on the agreement. There may be a copyright transfer and/or a IP transfer clause, or there may be neither. It requires reading the license agreement to know.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Of course, it is also possible to assign the property rights to an entity instead of a person: I'm not sure whether you can simply assign them to the project, but it is certainly possible to create a skeleton company for the project and assign the rights to it. This way, no single person can direct what happens with the property, and no group of people can allow some to be used but not other stuff. Either the company's CEO directs, or the company's board directs.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-27T19:08:15.270" CommentCount="0" />
  <row Id="560" PostTypeId="5" CreationDate="2015-06-27T19:36:46.693" Score="0" Body="&lt;p&gt;The &quot;Debian Free Software Guidelines&quot; is part of the &quot;Debian Free Software Contract&quot; and is a set of commitments and rules used to define what constitutes a Debian component as Free Software. Those guidelines were adopted with minimal modifications and small adictions by the Open Source Initiative (OSI) to &lt;a href=&quot;http://opensource.org/docs/osd&quot; rel=&quot;nofollow&quot;&gt;define what is Free Software&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The guidelines are published in &lt;a href=&quot;http://www.debian.org/social_contract.html#guidelines&quot; rel=&quot;nofollow&quot;&gt;Debian's site&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;h1&gt;The Debian Free Software Guidelines (DFSG)&lt;/h1&gt;&#xA;  &#xA;  &lt;ol&gt;&#xA;  &lt;li&gt;&lt;strong&gt;Free Redistribution&lt;/strong&gt;&lt;br&gt;&#xA;  The license of a Debian component may not restrict any party from selling or giving away the software as a component of an aggregate software distribution containing programs from several different sources. The license may not require a royalty or other fee for such sale.&#xA;  &lt;br&gt;&lt;br&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;strong&gt;Source code&lt;/strong&gt;&lt;br&gt;&#xA;  The program must include source code, and must allow distribution in source code as well as compiled form.&#xA;  &lt;br&gt;&lt;br&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;strong&gt;Derived Works&lt;/strong&gt;&lt;br&gt;&#xA;  The license must allow modifications and derived works, and must allow them to be distributed under the same terms as the license of the original software.&#xA;  &lt;br&gt;&lt;br&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;strong&gt;Integrity of The Author's Source Code&lt;/strong&gt;&lt;br&gt;&#xA;  The license may restrict source-code from being distributed in modified form &lt;strong&gt;only&lt;/strong&gt; if the license allows the distribution of &quot;&lt;em&gt;&lt;code&gt;patch files&lt;/code&gt;&lt;/em&gt;&quot; with the source code for the purpose of modifying the program at build time. The license must explicitly permit distribution of software built from modified source code. The license may require derived works to carry a different name or version number from the original software. (&lt;em&gt;This is a compromise. The Debian group encourages all authors not to restrict any files, source or binary, from being modified.&lt;/em&gt;)&#xA;  &lt;br&gt;&lt;br&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;strong&gt;No Discrimination Against Persons or Groups&lt;/strong&gt;&lt;br&gt;&#xA;  The license must not discriminate against any person or group of persons.&#xA;  &lt;br&gt;&lt;br&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;strong&gt;No Discrimination Against Fields of Endeavor&lt;/strong&gt;&lt;br&gt;&#xA;  The license must not restrict anyone from making use of the program in a specific field of endeavor. For example, it may not restrict the program from being used in a business, or from being used for genetic research.&#xA;  &lt;br&gt;&lt;br&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;strong&gt;Distribution of License&lt;/strong&gt;&lt;br&gt;&#xA;  The rights attached to the program must apply to all to whom the program is redistributed without the need for execution of an additional license by those parties.&#xA;  &lt;br&gt;&lt;br&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;strong&gt;License Must Not Be Specific to Debian&lt;/strong&gt;&lt;br&gt;&#xA;  The rights attached to the program must not depend on the program's being part of a Debian system. If the program is extracted from Debian and used or distributed without Debian but otherwise within the terms of the program's license, all parties to whom the program is redistributed should have the same rights as those that are granted in conjunction with the Debian system.&#xA;  &lt;br&gt;&lt;br&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;strong&gt;License Must Not Contaminate Other Software&lt;/strong&gt;&lt;br&gt;&#xA;  The license must not place restrictions on other software that is distributed along with the licensed software. For example, the license must not insist that all other programs distributed on the same medium must be free software.&#xA;  &lt;br&gt;&lt;br&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;strong&gt;Example Licenses&lt;/strong&gt;&lt;br&gt;&#xA;  The &quot;&lt;strong&gt;&lt;em&gt;&lt;a href=&quot;http://www.gnu.org/copyleft/gpl.html&quot; rel=&quot;nofollow&quot;&gt;GPL&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&quot;, &quot;&lt;strong&gt;&lt;em&gt;&lt;a href=&quot;http://www.debian.org/misc/bsd.license&quot; rel=&quot;nofollow&quot;&gt;BSD&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&quot;, and &quot;&lt;strong&gt;&lt;em&gt;&lt;a href=&quot;http://perldoc.perl.org/perlartistic.html&quot; rel=&quot;nofollow&quot;&gt;Artistic&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&quot; licenses are examples of licenses that we consider &quot;&lt;em&gt;free&lt;/em&gt;&quot;.&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;As already mentioned before, those guidelines are very similar to the &lt;a href=&quot;http://opensource.org/docs/osd&quot; rel=&quot;nofollow&quot;&gt;definition of Free Software by the Open Source Initiative&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="34" LastEditorUserId="34" LastEditDate="2015-06-28T20:22:19.677" LastActivityDate="2015-06-28T20:22:19.677" CommentCount="0" />
  <row Id="561" PostTypeId="4" CreationDate="2015-06-27T19:36:46.693" Score="0" Body="The &quot;Debian Free Software Guidelines&quot; (DFSG) is part of the &quot;Debian Free Software Contract&quot; and is a set of commitments and rules used to define what constitutes a Debian component as Free Software. Those guidelines were adopted with minimal modifications and small adictions by the Open Source Initiative (OSI) to define what is Free Software." OwnerUserId="34" LastEditorUserId="34" LastEditDate="2015-06-27T23:15:49.360" LastActivityDate="2015-06-27T23:15:49.360" CommentCount="0" />
  <row Id="562" PostTypeId="2" ParentId="551" CreationDate="2015-06-27T21:56:12.213" Score="2" Body="&lt;p&gt;The question is a bit hard to answer directly. A software project can have both open source and closed source requirements and still be an open source project.  The trick is, only the files that are open source can be distributed and modified.  Other programs that are required for the project can be included with permission or simply not included with the source at all. If a project has dependencies that cannot be included with source code, it may just be part of the environment setup that must be taken on by the one who is using said package.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In short, the Microsoft database will not make the rest of the projected any less open source. &lt;/p&gt;&#xA;" OwnerUserId="340" LastActivityDate="2015-06-27T21:56:12.213" CommentCount="0" />
  <row Id="563" PostTypeId="2" ParentId="510" CreationDate="2015-06-27T22:01:49.787" Score="4" Body="&lt;p&gt;This is a tough issue that has prevented lots of large companies to move to a more open source business model. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Most companies don't understand that just because your code is free doesn't mean you wont make as much money.&#xA;&lt;strong&gt;Options:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you are a sales representative or just a large supporter of open source material. Some things you could do are:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;explain the benefits to using open source. These are things such as: Better code / More usable interface. Customized software and hardware. Less bugs and issues.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Explain to the company that open source does not mean less money. Often when people think of open source they think that the code is free so therefore no money. This is not the case.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Explain the helpful community that they could be apart of.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This will not work for all people or companies. Despite your efforts to convince them it still may not work. Some people may be scared of the idea or even confused. The best way is to try your best.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Educating people about stuff they don't  know about can often lead them to like the idea.&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="55" LastEditDate="2015-06-29T07:36:37.150" LastActivityDate="2015-06-29T07:36:37.150" CommentCount="0" />
  <row Id="564" PostTypeId="1" CreationDate="2015-06-28T00:36:32.580" Score="7" ViewCount="42" Body="&lt;p&gt;On sites like Stack Overflow and Wikipedia (both use CC BY-SA 3.0), users can collaboratively create/edit a work. If I distribute such a work, I have to attribute all contributing users.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;But what if I only want to distribute a part of the work?&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Do I have to attribute&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;only the user(s) that created/edited the part in question, or&lt;/li&gt;&#xA;&lt;li&gt;all users that edited the whole work, even if they had nothing to do with the specific part?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h3&gt;Example&lt;/h3&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;Bob creates an answer to a question on Stack Overflow:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You can solve it by adding a &lt;code&gt;.&lt;/code&gt; to the foo.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Alice edits Bob‘s answer by adding a sentence:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You can solve it by adding a &lt;code&gt;.&lt;/code&gt; to the foo. Adding dots is fun.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Carl edits Bob’s answer by changing the first, but not the second, sentence:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You can only solve it by adding a &lt;code&gt;.&lt;/code&gt; to the foo. Adding dots is fun.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;I want to use/distribute the second sentence (&quot;Adding dots is fun.&quot;).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Whom do I have to attribute?&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Alice (because it’s only about her contribution?)&lt;/li&gt;&#xA;&lt;li&gt;Bob and Alice (because Alice’s sentence only exists in the context of Bob‘s answer?)&lt;/li&gt;&#xA;&lt;li&gt;Bob and Alice and Carl (because every contributor is relevant, not only the first author and the direct contributor?)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="138" LastActivityDate="2015-07-31T08:47:45.760" Title="Using only a part of a collaboratively created work – whom to attribute?" Tags="&lt;creative-commons&gt;&lt;attribution&gt;" AnswerCount="2" CommentCount="2" />
  <row Id="565" PostTypeId="1" AcceptedAnswerId="573" CreationDate="2015-06-28T01:49:22.650" Score="4" ViewCount="60" Body="&lt;p&gt;I would like to know if someone could explain to me how to go about working on an open source project. I know that you can use git and other types of programs to commit code, but is there some sort of process in which to officially begin to add to a project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also, how do open source projects guard against crappy code commits or bugs&lt;/p&gt;&#xA;" OwnerUserId="340" LastEditorUserId="14" LastEditDate="2015-06-28T11:25:38.750" LastActivityDate="2015-06-28T11:25:38.750" Title="What are the best ways to get involved with open source projects?" Tags="&lt;project-management&gt;&lt;community&gt;&lt;forking&gt;" AnswerCount="1" CommentCount="9" FavoriteCount="1" ClosedDate="2015-06-28T22:58:27.843" />
  <row Id="567" PostTypeId="1" CreationDate="2015-06-28T04:20:03.197" Score="0" ViewCount="48" Body="&lt;p&gt;Is there a specific location where I should place my Open Source license in my project?&lt;/p&gt;&#xA;" OwnerUserId="209" LastEditorUserId="69" LastEditDate="2015-06-28T13:23:07.573" LastActivityDate="2015-07-24T09:07:54.387" Title="Where should I place my Open Source license in my project?" Tags="&lt;license-file&gt;" AnswerCount="3" CommentCount="0" ClosedDate="2015-06-28T20:32:43.713" />
  <row Id="568" PostTypeId="2" ParentId="567" CreationDate="2015-06-28T05:51:35.537" Score="1" Body="&lt;p&gt;It should be easy to find. I'd say in the root of your project as a &lt;code&gt;license.ext&lt;/code&gt; or as part of the &lt;code&gt;readme.ext&lt;/code&gt; (where &lt;em&gt;&lt;code&gt;.ext&lt;/code&gt;&lt;/em&gt; would of course be the appropriate extension of the format it is in). Those are the most common ways I've seen in PHP open source projects.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Of course multiple variations of the license file are seen as text file, markdown file, lower case, upper case, etc (&lt;code&gt;License.txt&lt;/code&gt;, &lt;code&gt;LICENSE.TXT&lt;/code&gt;, &lt;code&gt;LICENSE&lt;/code&gt;, &lt;code&gt;License.md&lt;/code&gt;)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also most of the times on large scale projects the license is included in every file in the so called PHPdoc &quot;page&quot; section (again, this is in PHP projects).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;On small scale projects, most commonly hosted on GitHub, it is included in the &lt;code&gt;README.md&lt;/code&gt; file, which GitHub will parse and show on the project's home page.&lt;/p&gt;&#xA;" OwnerUserId="111" LastEditorUserId="111" LastEditDate="2015-07-24T09:07:54.387" LastActivityDate="2015-07-24T09:07:54.387" CommentCount="1" />
  <row Id="569" PostTypeId="2" ParentId="567" CreationDate="2015-06-28T06:25:50.873" Score="3" Body="&lt;p&gt;I agree with the other answers on the principal - it should be easy to find, although I'm not sure the examples his answer provided are are indeed the most common.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Projects created on (i.e., by) &lt;a href=&quot;http://www.github.com&quot; rel=&quot;nofollow&quot;&gt;GitHub&lt;/a&gt; have their licenses placed in a file named &lt;code&gt;LICENSE&lt;/code&gt; (no suffix) in the project's root directory. Another common idiom for GitHub projects is to use &lt;code&gt;LICENSE.md&lt;/code&gt; to gain markdown formatting for it. &lt;code&gt;COPYING&lt;/code&gt; and &lt;code&gt;COPYING.md&lt;/code&gt; are also fairly common, although I must say that, IMHO, calling the license file &quot;copying&quot; misses a great deal of the point of open source - it's not about freely copying the content, it's about collaborating on it (in other words - &quot;free as in speech, not as in beer&quot;).&lt;/p&gt;&#xA;" OwnerUserId="327" LastEditorUserId="111" LastEditDate="2015-06-29T08:38:29.667" LastActivityDate="2015-06-29T08:38:29.667" CommentCount="0" />
  <row Id="570" PostTypeId="2" ParentId="567" CreationDate="2015-06-28T06:29:40.120" Score="0" Body="&lt;p&gt;The License is the agreement between you, and the user of the project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The license file is just a file that defines the agreement.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It should be clear for the user what license he's getting, and what that license applies to, but there are no hard rules where to put the file, and what to name it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, the Apache license advises that you put a text header in each file, which links to the Apache license online, and they don't advice putting the text of the license in your project at all, and from what I've seen, this is common practice for this license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some other projects don't have such a license header in their files, but just have the license file in the root of the project. Often these files are named something like &lt;code&gt;license.txt&lt;/code&gt;, or the shouty variation &lt;code&gt;LICENSE.TXT&lt;/code&gt;, or just &lt;code&gt;license&lt;/code&gt;. Sometimes the license location is also included in a &lt;code&gt;readme&lt;/code&gt; file.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The important part is that it is clear what the license applies to, and it's easy to find. &lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-06-28T06:29:40.120" CommentCount="0" />
  <row Id="571" PostTypeId="1" CreationDate="2015-06-28T06:40:05.153" Score="17" ViewCount="137" Body="&lt;p&gt;To (most) people in IT, terms like &quot;open source&quot; and &quot;free software&quot; bring up a lot of associations. (For some those association differ wildly between these two terms.) Does the same go for the general audience of the products which these concepts can apply to? (Software, hardware, &lt;a href=&quot;http://opensourceecology.org/&quot;&gt;industrial machines&lt;/a&gt;, ...) And if so, what are those associations?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What I'm looking for is &lt;strong&gt;research that has been conducted to find out what commonly used terms to describe free or open products mean to end users, if anything at all.&lt;/strong&gt;&lt;/p&gt;&#xA;" OwnerUserId="168" LastEditorUserId="168" LastEditDate="2015-06-29T15:11:37.163" LastActivityDate="2015-07-17T03:52:04.553" Title="Has there been research about how aware the general public is of open source?" Tags="&lt;marketing&gt;&lt;statistics&gt;" AnswerCount="1" CommentCount="1" FavoriteCount="5" />
  <row Id="572" PostTypeId="2" ParentId="564" CreationDate="2015-06-28T07:03:39.557" Score="4" Body="&lt;p&gt;When multiple people collaborate on a product, they produce a combined work, where each new revision is a derivative work of the previous revision.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In your example, Bob owns the copyright to the first phrase. Alice owns the copyright to her change to the work &quot;Adding dots is fun&quot;, and the combined line is a combined work, the copyright owned by both (and thus should be attributed to both)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When you only want to use part of the combined work, it is generally understood to be part of the shared copyright. It is really difficult to make sure that the part you are using is only the free-standing addition, and not a part of the combined work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To explain what I mean by this, take, for example &lt;a href=&quot;https://en.wikipedia.org/wiki/L.H.O.O.Q.&quot; rel=&quot;nofollow&quot;&gt;L.H.O.O.Q.&lt;/a&gt; This is a combined work of the Mona Lisa, the title, and the drawn upon mustache and beard.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It would be very difficult to argue that the drawing of the mustache in isolation can be seen separate from the combined work. If I for example took the combined work, and removed all parts that are not the mustache, beard and title by coloring all other parts white entirely. It would be difficult to argue that this is not a derivative of the combined work in its entirely rather than a re-use of just the parts Duchamp created.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;(the Mona Lisa, of course, is in the public domain, but that's besides the point here)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am not familiar with any case law where part of a combined work is reduced back to the part, and is more in the scope of law stackexchange than it is for this one.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In practice, attribution is cheap, and legal morasses are swampy. Just attribute the entire combined work, and don't stray into the morass. &lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-06-28T07:03:39.557" CommentCount="5" />
  <row Id="573" PostTypeId="2" ParentId="565" CreationDate="2015-06-28T08:25:20.010" Score="6" Body="&lt;p&gt;Answer to your first question, getting involved with an open source software is as easy as looking at the &lt;code&gt;About&lt;/code&gt; section of your favorite software.     &lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are loads and loads of open source software around and as a FOSS newbie, it's easy to get confused as to which one to pick and start working with. I'd suggest a software that you really care about and use everyday. Once you've done that, either look in the about section of that particular software or just Google, &lt;em&gt;How do I contribute to xyz&lt;/em&gt;, with &lt;em&gt;xyz&lt;/em&gt; being the name of the software.    &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Next, you need to find a channel through which the community maintaining the software communicates through. In general, these channels are &lt;code&gt;IRC&lt;/code&gt;, &lt;code&gt;mailing lists&lt;/code&gt; or sometimes even &lt;code&gt;Gitter&lt;/code&gt;. I've also seen a couple of communities that use &lt;code&gt;chat.stackexchange&lt;/code&gt; to communicate. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Once you're done finding the channel, go and &lt;code&gt;Hello World!&lt;/code&gt;. Just go to their comm channel and say that you've been using software xyz for a while and you think you can contribute, and that you'd like some help getting started. With the exception of a few people, most will help you personally, solving your doubts and giving you the right links whenever you need. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The links given by the community people will have one or more of the following:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A getting started manual&lt;/li&gt;&#xA;&lt;li&gt;A link to their github/git/other version control page&lt;/li&gt;&#xA;&lt;li&gt;A link to their list of tools&lt;/li&gt;&#xA;&lt;li&gt;A link to their bugs page/review page/issues page&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Read the manual completely if possible, it'll solve most of your doubts.     Download their codebase, read the README, try fiddling with the codebase, learn how to compile it. If you screw up, delete and re-download.&lt;br&gt;&#xA;Download their tools, install them, see how they work.&lt;br&gt;&#xA;Look for basic bugs/ask for basic bugs on comm channel.    &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Once you've solved your first few bugs, you'll start knowing the codebase better and you can go for bigger bugs/wishlist-items. That's it, now you're a contributor.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Now your second question. Most organisations have rigid build tests/review systems which prevent against crappy code being pushed. And even if some bad code gets into deployment, affecting the software, the users come back and report to the organisation, and you can be sure that the bad code is removed within a short period, which is why open source is awesome!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This is not a generalization. These are the experiences of me and my colleagues when we started off with Open Source.&lt;/p&gt;&#xA;" OwnerUserId="66" LastActivityDate="2015-06-28T08:25:20.010" CommentCount="1" />
  <row Id="574" PostTypeId="1" AcceptedAnswerId="580" CreationDate="2015-06-28T10:59:57.303" Score="8" ViewCount="58" Body="&lt;p&gt;One of the most widely used and most popular free and open source software licences is the  General Public License. I want to know in simple terms: what are the differences between GPL Version 2 and Version 3?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Further I found latest Linux-Kernel &lt;a href=&quot;https://www.kernel.org/pub/linux/kernel/COPYING&quot;&gt;licensed&lt;/a&gt; under GPL V2 not GPL V3 till. What are reasons?&lt;/p&gt;&#xA;" OwnerUserId="296" LastEditorUserId="69" LastEditDate="2015-06-28T13:32:57.980" LastActivityDate="2015-06-28T13:32:57.980" Title="What are the differences between GPL V2 and V3 licenses?" Tags="&lt;gpl-3&gt;&lt;license-compatibility&gt;&lt;gpl-2&gt;&lt;linux-kernel&gt;" AnswerCount="1" CommentCount="0" FavoriteCount="1" />
  <row Id="575" PostTypeId="5" CreationDate="2015-06-28T11:03:18.457" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-28T11:03:18.457" LastActivityDate="2015-06-28T11:03:18.457" CommentCount="0" />
  <row Id="576" PostTypeId="4" CreationDate="2015-06-28T11:03:18.457" Score="0" Body="Questions about GNU General Public License Version 2." OwnerUserId="296" LastEditorUserId="296" LastEditDate="2015-06-28T13:43:10.000" LastActivityDate="2015-06-28T13:43:10.000" CommentCount="0" />
  <row Id="577" PostTypeId="1" AcceptedAnswerId="583" CreationDate="2015-06-28T11:20:23.877" Score="6" ViewCount="173" Body="&lt;p&gt;I am part of a non-commercial bazaar-style open source project which is developed and maintained entirely by unpaid volunteers.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A few months ago a new programmer joined our team who is both skilled and prolific. They provide a large number of commits and, contrary to the question &lt;a href=&quot;https://opensource.stackexchange.com/questions/395/how-do-i-deal-with-enthusiastic-contributors-who-damage-more-than-they-help&quot;&gt;&quot;How do I deal with (enthusiastic) contributors who damage more than they help?&quot;&lt;/a&gt;, their code quality is more than adequate. By any sensible metric, their productivity in the past few months was higher than that of all other contributors &lt;em&gt;combined&lt;/em&gt;. They have also taken over some non-programming related maintenance and project infrastructure responsibilities nobody had the time and motivation to do.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Unfortunately, it has lately crystallized that their vision for the project differs quite a lot from that of the other project members. They want to move the focus of the project into a completely different direction than the rest of us. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Lately they even started to remove features from the codebase, which they consider &quot;poorly developed&quot;, &quot;unnecessary bloat&quot; or &quot;must be removed before I can remake them much better&quot;. To be fair most of these feature were indeed in an unusable state, obsolete or not used by anybody, but their intentions are clear.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;How can we as the original founders of the project keep our vision intact without losing this very valuable contributor?&lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="98" LastEditDate="2015-06-28T19:56:30.870" LastActivityDate="2015-06-28T19:56:30.870" Title="How to deal with a very productive contributor who wants to steer the project in a different direction?" Tags="&lt;project-management&gt;&lt;human-resources&gt;&lt;problem-contributor&gt;" AnswerCount="2" CommentCount="6" FavoriteCount="0" />
  <row Id="578" PostTypeId="5" CreationDate="2015-06-28T11:23:51.067" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-28T11:23:51.067" LastActivityDate="2015-06-28T11:23:51.067" CommentCount="0" />
  <row Id="579" PostTypeId="4" CreationDate="2015-06-28T11:23:51.067" Score="0" Body="Questions about contributors to open source projects who appear to do more harm than good to the project." OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-06-28T13:43:18.337" LastActivityDate="2015-06-28T13:43:18.337" CommentCount="0" />
  <row Id="580" PostTypeId="2" ParentId="574" CreationDate="2015-06-28T12:12:20.843" Score="3" Body="&lt;p&gt;This question &lt;a href=&quot;https://stackoverflow.com/questions/41460/what-are-the-differences-between-gpl-v2-and-gpl-v3-licenses&quot;&gt;was already asked&lt;/a&gt; on Stackoverflow in 2008 (but closed as off-topic there). This is a copy of the answer by &lt;a href=&quot;https://stackoverflow.com/users/4089/will-m&quot;&gt;Will M&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Here is a short list of some the major differences:&lt;/p&gt;&#xA;  &#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;&lt;p&gt;internationalization: they used new terminology, rather than using language tied to US legal concepts&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;p&gt;patents: they specifically address patents (including the Microsoft/Novell issue noted in another answer)&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;p&gt;“Tivo-ization”: they address the restrictions (like Tivo’s) in consumer products that take away, though hardware, the ability to&#xA;  modify the software&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;p&gt;DRM: they address digital rights management (which they call digital restrictions management)&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;p&gt;compatibility: they addressed compatibility with some other open source licenses&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;p&gt;termination: they addressed specifically what happens if the license is violated and the cure of violations&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;  &#xA;  &lt;p&gt;I agree with the comment about consulting a lawyer (one who knows&#xA;  about software license issues, though). In doing these things (and&#xA;  more), they more than doubled the length of the GPL. GPL 3 is many&#xA;  things, and one of them is that it is a very complex, technical legal&#xA;  document.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Regarding why the Linux kernel does not adopt version 3, here is &lt;a href=&quot;https://www.youtube.com/watch?v=PaKIZ7gJlRU&quot; rel=&quot;nofollow&quot;&gt;a video of Linus Torvalds where he explains his opinion&lt;/a&gt;. Some excerpts from his speech:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Here we give your version 3 and then we try to sneak in these new rules and try to force everybody to upgrade. That was the part I disliked. And the FSF did some really sneaky stuff. Downright immoral in my opinion.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;[...]&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;I am thinking tivoization isn't necessarily something that you should strive for. But in my world view it's your decision if you make hardware that blocks down the software. That's your decision as a hardware maker. That has no impact on my a decision as a software maker to give you the software.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-06-28T12:49:47.310" LastActivityDate="2015-06-28T12:49:47.310" CommentCount="0" />
  <row Id="581" PostTypeId="2" ParentId="577" CreationDate="2015-06-28T12:22:16.283" Score="4" Body="&lt;h2&gt;Bring it up, clearly.&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;This might seem obvious, but can't be stressed enough. If you are positive that the direction they taking the project into is incompatible with the vision of most, then this needs to be addressed.&lt;br&gt;&#xA;Make sure that other people are on board with mentioning it to them, so you form a unified front, but avoid making the problem contributor like people have been conspiring against them. You don't want to come over as hostile.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Try to compromise.&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;As you said, many changes the contributor has made were actually warranted, maybe some of their ideas can still be incorporated in a version of the project that you can both get behind. You'll want to try to avoid losing your most active contributor over this. Without enthusiastic contributors, you don't have a project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Don't compromise on single issues however, discuss the single issues, generalize what comes out of that discussion and apply those generalisations. Everyone should follow the guidelines, if you don't agree they can perhaps be discussed, but you don't just do things the way you think they're best. That has to be made very clear.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;If you can't find an agreement.&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;If you can't work things out (and enough other contributors agree with you), you'll have to request that this problem-contributor stop making drastic changes to the project and actively roll back any changes they do make and perhaps even take away their rights if they persist. (if possible)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This doesn't necessarily have to be a bad thing, they could maintain their own fork of the project where they get to do whatever they want with it and can still contribute to the original project.&lt;/p&gt;&#xA;" OwnerUserId="168" LastEditorUserId="168" LastEditDate="2015-06-28T14:18:05.973" LastActivityDate="2015-06-28T14:18:05.973" CommentCount="2" />
  <row Id="582" PostTypeId="2" ParentId="217" CreationDate="2015-06-28T14:05:50.333" Score="7" Body="&lt;p&gt;When talking about BSD license, you have to be aware that there is not one, but actually three different BSD licenses. The most basic is the &lt;strong&gt;two-clause BSD&lt;/strong&gt; license:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Redistribution and use in source and binary forms, with or without&#xA;  modification, are permitted provided that the following conditions are met:&lt;/p&gt;&#xA;  &#xA;  &lt;ol&gt;&#xA;  &lt;li&gt;Redistributions of source code must retain the above copyright notice, this    list of conditions and the following disclaimer.&lt;/li&gt;&#xA;  &lt;li&gt;Redistributions in binary form must reproduce the above copyright notice,    this list of conditions and the following disclaimer in the&#xA;  documentation    and/or other materials provided with the&#xA;  distribution.&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The &lt;strong&gt;three-clause BSD&lt;/strong&gt; license adds this clause:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Neither the name of the [organization] nor the&#xA;        names of its contributors may be used to endorse or promote products&#xA;        derived from this software without specific prior written permission.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;And the &lt;strong&gt;four-clause BSD&lt;/strong&gt; license also this clause:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;All advertising materials mentioning features or use of this software&#xA;     must display the following acknowledgement:&#xA;     This product includes software developed by the [organization].&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The &lt;strong&gt;MIT license&lt;/strong&gt; does not contain any clauses regarding promotion and advertising material, so it is most similar to the 2-clause BSD license:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So what both the 2-clause BSD license and the MIT license have in common are:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Permits use&lt;/li&gt;&#xA;&lt;li&gt;Permits redistribution&lt;/li&gt;&#xA;&lt;li&gt;Permits redistribution with modification&lt;/li&gt;&#xA;&lt;li&gt;Provision to retain the copyright notice and warranty disclaimer&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;In addition the MIT license also explicitly allows:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;merging&lt;/li&gt;&#xA;&lt;li&gt;publishing&lt;/li&gt;&#xA;&lt;li&gt;sublicensing&lt;/li&gt;&#xA;&lt;li&gt;selling&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;However, all these freedoms are implied by the BSD license, because all these activities can be considered &quot;use&quot; and/or &quot;redistribution&quot; of the software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The practical differences between the 2-clause BSD license and the MIT license are marginal. Which one to pick is mostly up to personal taste. Especially considering that both licenses are considered compatible, so you can take code under one license and use it in a project under the other, as long as you keep the license text around.&lt;/p&gt;&#xA;" OwnerUserId="14" LastActivityDate="2015-06-28T14:05:50.333" CommentCount="0" />
  <row Id="583" PostTypeId="2" ParentId="577" CreationDate="2015-06-28T14:12:13.697" Score="4" Body="&lt;h3&gt;Discuss, discuss, discuss&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;This is absolutely essential. You can't solve &lt;em&gt;personal&lt;/em&gt; problems &lt;em&gt;digitally&lt;/em&gt; - so when I say discuss, I mean call a meeting. You need to sort out some things with him:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Project focus&lt;/strong&gt;&lt;br&gt;&#xA;If everyone has a different idea of where the project's going, it's obviously not going to work. This is the root of the problem. Discuss with him &lt;em&gt;what&lt;/em&gt; he thinks the project should do, and &lt;em&gt;why&lt;/em&gt; he thinks this. There may well be reasons behind it that you haven't thought of, that might actually change your view. Then, &lt;strong&gt;as a team&lt;/strong&gt;, come up with a project aim that you're all happy with. It should be a good compromise so that he doesn't feel like his ideas are being left out, but he does need to realise that he's one of many and needs to be co-operative.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Working policies&lt;/strong&gt;&lt;br&gt;&#xA;You need to work out who can do what. Your work should be organised so that there are no conflicts and no missed areas - two people should not be working on the same thing and neglecting something else. &lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;br&gt;&#xA;Again, important. Features are a big part of the project, so it shouldn't be set up so that any developer can add or remove features on a whim without telling anyone. Get it re-organised so that adding or removing features has to be approved by a person or team. You can't have this guy going around removing essential features because of a difference of opinion and derailing the project.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-28T14:12:13.697" CommentCount="0" />
  <row Id="584" PostTypeId="1" AcceptedAnswerId="706" CreationDate="2015-06-28T14:37:52.377" Score="8" ViewCount="100" Body="&lt;p&gt;I've just acquired the Hypothetical Cafe (come and visit, we serve great hypothetical food and drinks), and some fancy posh glasses*. They're so posh that an international designer did a special design for them. However, because he hasn't been to Open Source Stack Exchange, he doesn't know the wonders of open source, and kept his design to himself.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, I've now exhausted my hypothetical budget buying them, so I'm going to have to serve &lt;a href=&quot;https://en.wikipedia.org/wiki/Open-source_cola&quot;&gt;open cola&lt;/a&gt; instead of Coca-Cola.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When I put my open cola into these fancy glasses, I am essentially producing a consumable product with mixed licenses. I am then charging H$0.98 for the production and cleaning of this product.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Technically, is this legal? I'm charging for the use of the glasses, which seems a bit legally iffy - or am I covered because people only &lt;em&gt;consume&lt;/em&gt; the open part not the proprietary glasses?&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;* Disclaimer: glasses are actually from Ikea.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-30T13:49:34.140" Title="Can I serve open cola in proprietary glasses?" Tags="&lt;law&gt;&lt;proprietary&gt;&lt;open-cola&gt;" AnswerCount="2" CommentCount="5" FavoriteCount="2" />
  <row Id="585" PostTypeId="2" ParentId="584" CreationDate="2015-06-28T14:49:26.617" Score="6" Body="&lt;p&gt;Pouring open cola in a glass does under most jurisdictions not meet the threshold of originality. Open cola in a glass is simply not a copyrightable concept.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Further, you are not selling the concept of open cola in a glass, the glass is a simple carrier for the product you're selling. Just as you can distribute free software on a non-free file-system, you can serve open cola from propriety glasses.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What you can't do however, is serve a cocktail containing open cola under a closed license. The cocktail would clearly be a derivative work.&lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-06-28T14:49:26.617" CommentCount="0" />
  <row Id="586" PostTypeId="2" ParentId="501" CreationDate="2015-06-28T14:59:19.263" Score="3" Body="&lt;p&gt;Creative Commons recommends that you use their international licenses now. From their FAQ:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;We recommend that you use a version 4.0 international license. This is the most up-to-date version of our licenses, drafted after broad consultation with our global network of affiliates, and it has been written to be internationally valid. There are currently no ports of 4.0, and it is planned that few, if any, will be created.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;All of the ported licenses are at version 3.0 or earlier, which means licensors using those licenses do not have the benefit of the improvements made in the 4.0 license suite. But even before considering the improvements in 4.0, there are several reasons why the international licenses may be preferable for rights holders, even if the licenses have been ported to their jurisdiction. As an organization, CC itself licenses all of its own content under an international license because, among other reasons, the international licenses are essentially jurisdiction-neutral while remaining effective globally. The neutral nature of the international licenses appeals to many people and organizations, particularly for use in connection with global projects that transcend political borders. Finally, it is important to know that some of the ported licenses contain a choice of law provision, which may be undesirable for your needs.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;With the Version 4.0 licenses, there will be no ported versions. Creative Commons itself licenses their own content under the international license, to remain jurisdiction-neutral. The neutral nature appeals to many people and organizations. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;To answer your question: If there is no ported license, you can use the International licenses.&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="98" LastEditDate="2015-06-28T15:05:49.113" LastActivityDate="2015-06-28T15:05:49.113" CommentCount="0" />
  <row Id="589" PostTypeId="1" CreationDate="2015-06-28T15:57:11.303" Score="8" ViewCount="40" Body="&lt;p&gt;Given the case of a closed source project that has been developed for some time:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;What are the main things that should be done in order to ease its transition to a open source development?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;What I've thought of so far is good documentation (at least good comments in the code) and an attractive purpose of that project for a good amount of potential developers.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I've also thought of publishing it on a collaborative platform, such as GitHub and/or Bitbucket.&lt;/p&gt;&#xA;" OwnerUserId="336" LastEditorUserId="336" LastEditDate="2015-06-28T21:59:25.470" LastActivityDate="2015-06-29T02:13:44.407" Title="What are the main steps to convert a currently closed source project into an open source one?" Tags="&lt;closed-source&gt;&lt;proprietary&gt;" AnswerCount="1" CommentCount="0" FavoriteCount="1" />
  <row Id="590" PostTypeId="1" CreationDate="2015-06-28T16:15:47.977" Score="7" ViewCount="127" Body="&lt;p&gt;I was browsing around when I came across this: &lt;a href=&quot;https://news.ycombinator.com/item?id=8415603&quot;&gt;&quot;Open Source is awful in many ways, and people should be aware of this&quot;&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This really struck me and surprised me. While I understand that harassment would be present in all fields and industries, I had never heard this. Some of the comments were interesting as well:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;I got a bunch of attacks from members of the open source community, due to developing my XML parser. ( Grant McLean and others ) I also got attacked by Poul-Henning Kamp, and then threatened that he would &quot;shame&quot; me for pointing out bugs in his software that he refuses to acknowledge. Additionally, the founder of Perl Mongers, Brian D Foy, argued with me about the naming of my application framework, and then refused to approve the naming of my module even after other people on the newsgroup discussed it with me and we came to a good resolution. ( which led to the vanishing of &quot;registered&quot; modules on cpan imo )&lt;/p&gt;&#xA;  &#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;The open source community, at large, is not a happy helpful place, and I have gone through a lot of harassment just contributing my own free open source stuff to the world. Also, I can't say I have ever been thanked for contributing. Just kicked in the face.&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;With a main focus of Open Source being the source code available to all, I would say that the attacks, if true, or outright unreasonable and inconsiderate. Also, this is outright disturbing to developers working on projects, as well as the pioneers of the industry.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is harassment a big issue in the Open Source industry? Are there any statistics that show this?&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="168" LastEditDate="2015-06-29T15:13:53.737" LastActivityDate="2015-07-09T15:20:22.603" Title="Studies about harassment in the world of open source development?" Tags="&lt;contributor&gt;&lt;human-resources&gt;&lt;statistics&gt;&lt;industry&gt;&lt;harassment&gt;" AnswerCount="1" CommentCount="6" FavoriteCount="1" />
  <row Id="591" PostTypeId="2" ParentId="589" CreationDate="2015-06-28T16:20:39.650" Score="8" Body="&lt;p&gt;Theoretically, all that needs to be done to make a previously closed source project open source is to put the sourcecode online with an OSI or FSF approved license of your choice attached. However, before you publish your sourcecode, a few things should be checked:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Have you read and understood the license and checked it with your legal department? It is easy to publish something under a free license, but you can not un-publish it after you did. So think carefully about all the implications.&lt;/li&gt;&#xA;&lt;li&gt;Do you have the rights to open source it? This means that any libraries you use must be under a compatible license. Also check if there are any 3rd party contributions in the codebase you might not have full copyright for.&lt;/li&gt;&#xA;&lt;li&gt;Have you solved any patent issues? When you hold any software patents which apply to your project, release a statement that you will not use your patent to prohibit the development and distribution of the program or derivatives. When you licensed any patents from 3rd parties, make sure that the license terms do not impair the rights of the project either.&lt;/li&gt;&#xA;&lt;li&gt;Is it usable without any closed source applications? Sometimes software depends on 3rd party components like databases or middleware. When this is the case for your application, make sure these components are also available under open source licenses or make sure that the software is either compatible with open source alternatives or is usable without them.&lt;/li&gt;&#xA;&lt;li&gt;Can people easily build it? When you require custom tools or a very complicated toolchain to build the software from source, people will have problems to contribute to it in a meaningful way. Make sure that you provide everything that is needed to compile the project.&lt;/li&gt;&#xA;&lt;li&gt;Did you remove any corporate secrets from the codebase, like passwords, cryptographic keys or slanderous comments? Keep in mind that when you publish the sourcecode with its version history, those will still be there.&lt;/li&gt;&#xA;&lt;li&gt;Did you do a security audit? When the sourcecode is available, it becomes a lot easier for 3rd parties to find vulnerabilities. Sure, this also means that it is easier for 3rd parties to provide patches for them, improving the overall security in the long run. But it will take some time until the patches are made, applied and distributed. In the meantime all your customers will be vulnerable. So make sure the worst security blunders are fixed before you drop your pants to the whole world.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;This should be the minimum you should do before publishing your sourcecode.&#xA;However, when you want the project to attract a community of developers to contribute, you also need to provide some infrastructure.&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Make sure the developers can start working easily. Provide clear instructions how to checkout the code, compile, configure and deploy it.&lt;/li&gt;&#xA;&lt;li&gt;Offer communication platforms for your community to discuss the development of your project, like a mailing list. A public bugtracker is also a very useful tool. Make sure people can find them easily.&lt;/li&gt;&#xA;&lt;li&gt;Have a clear process explaining how people can provide patches to resolve bugs, what formal requirements must be fulfilled for you to accept them and how feature requests can be proposed. Publish the descriptions of said processes to keep it transparent for potential contributors.&lt;/li&gt;&#xA;&lt;li&gt;Have personnel available to manage and moderate your communication channels and community contribution processes. You might be able to outsource this to trusted community members eventually (when you want to), but in the meantime you will need to handle this on your own.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-06-28T16:49:23.143" LastActivityDate="2015-06-28T16:49:23.143" CommentCount="3" />
  <row Id="594" PostTypeId="1" CreationDate="2015-06-28T16:52:40.960" Score="4" ViewCount="61" Body="&lt;p&gt;Suppose I invented a great open source license. I decided I wanted to gain money from it!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;my question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is there any way I could charge people for using it?&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If yes, how?&lt;/li&gt;&#xA;&lt;li&gt;If no, why not, and what alternatives do I have?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-06-30T02:14:05.170" LastActivityDate="2015-06-30T02:14:05.170" Title="Could I charge people to use an open source license?" Tags="&lt;licensing&gt;&lt;monetization&gt;" AnswerCount="2" CommentCount="4" FavoriteCount="1" />
  <row Id="595" PostTypeId="2" ParentId="594" CreationDate="2015-06-28T17:18:32.717" Score="7" Body="&lt;p&gt;Licenses are documents to which copyright can apply, and the copyright terms of a license itself don't need to have anything to do with its content. So you can &quot;license a license&quot; and prohibit anyone from using your license unless they pay a fee. However, be aware that:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Most people won't consider this in accordance to the FLOSS spirit, so you will have a hard time to convince the community that your license is worth it.&lt;/li&gt;&#xA;&lt;li&gt;There already is a large number of open source licenses which cover most common use-cases which are competing with yours and which can be applied for free. And when there isn't one which covers your novel idea, it won't take long until one shows up which expresses the same idea with different words and thus circumvents your copyright (because this is what the FLOSS community does). What could protect you from this is a patent, but I am not sure if contract clauses are patentable.&lt;/li&gt;&#xA;&lt;li&gt;Make sure your licensing model for the license does not prevent the license from being &lt;em&gt;libre&lt;/em&gt;. For example, when your license mandates a strong copyleft and at the same time the &quot;license license&quot; mandates that every sub-licensee also buys a &quot;license license&quot; from you, then the work it is applied to is no longer free software.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-06-28T17:35:23.170" LastActivityDate="2015-06-28T17:35:23.170" CommentCount="0" />
  <row Id="596" PostTypeId="2" ParentId="594" CreationDate="2015-06-28T19:00:36.850" Score="5" Body="&lt;p&gt;There is nothing to stop you trying, as Phillip explains. The question is why would someone use your license rather than one of the others.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Or more practically, what could you offer to entice people to use your license?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One possibility is to provide service in return for the use of the license and the license fee. Perhaps you could provide promotion services for such projects, helping with search engine optimization.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another is to offer assistance in license enforcement for any registered Licensors. The FSF states that it will help enforce the GPL, but only if they own the copyright. You could differentiate your license by not requiring that the copyright be assigned, merely permission from the holder to act on their behalf.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If your license includes implicit guarantees of quality, you could support users of the licensed products by ensuring Licensors meet some agreed standard of 'quality'&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You could protect your License (and its use) via the trademark system. The US DoD took this approach with the Ada language to try and ensure that all implementations of the compiler and supporting tools met a high level of compliance to the standard.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As I said, you can do it, but there has to be a significant value to the Licensor and to consumers of the licensed products. And that is likely to lead you into areas of great expense and legal liability.&lt;/p&gt;&#xA;" OwnerUserId="29" LastActivityDate="2015-06-28T19:00:36.850" CommentCount="0" />
  <row Id="597" PostTypeId="1" CreationDate="2015-06-28T19:16:33.527" Score="4" ViewCount="50" Body="&lt;p&gt;By a quick count, &lt;a href=&quot;https://en.wikipedia.org/wiki/Comparison_of_free_and_open-source_software_licenses&quot; rel=&quot;nofollow&quot;&gt;wikipedia&lt;/a&gt; lists almost fifty different open source / free software licenses.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Assuming (and this may not be valid) that many of these licenses were created in the early days of the movement, when it was trying to settle on common conventions, why do they all persist?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Given the seeming ideological split between the FSF and OSI, it is unlikely we would ever converge on a single common license. But much of the FLOSS movement is based on open standards, best practices, and so on.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What stops the FLOSS movement agreeing on a small set of licenses to cover, say, four or five levels of permissiveness, and everyone relicense to adopt them?&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="98" LastEditDate="2015-06-28T20:16:52.383" LastActivityDate="2015-06-30T20:12:07.750" Title="What prevents the community converging on a small set of licenses?" Tags="&lt;licensing&gt;&lt;license-compatibility&gt;" AnswerCount="2" CommentCount="2" />
  <row Id="598" PostTypeId="1" CreationDate="2015-06-28T19:17:40.813" Score="2" ViewCount="22" Body="&lt;p&gt;In my company we are developing a large open source piece of software. To do this we have hired many developers. To pay these developers we have gotten business partners and investors to help cover the cost. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;However these people are not the most tech savvy people and it is often hard to explain to them what they are investing in!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is there any way to make open source projects more interactive for business partners or investors?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example: would it be recommended to teach them some coding to show them what they are investing in?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-06-28T20:08:23.907" LastActivityDate="2015-06-28T21:34:20.177" Title="How could I include my business partners / investors in the open source product development?" Tags="&lt;development&gt;&lt;monetization&gt;" AnswerCount="1" CommentCount="2" FavoriteCount="1" />
  <row Id="599" PostTypeId="1" AcceptedAnswerId="623" CreationDate="2015-06-28T19:29:47.607" Score="1" ViewCount="71" Body="&lt;p&gt;Often when talking to friends or family they are unaware that open source is a completely different thing than free-ware.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Are there studies about the awareness of open-source being a separate thing from free-ware/spyware/malware/adware, at least in certain milieus?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="60" LastEditDate="2015-06-28T22:00:44.123" LastActivityDate="2015-06-30T13:27:19.157" Title="Awareness of the difference free/libre/open-source software and zero-cost software" Tags="&lt;software&gt;&lt;awareness&gt;" AnswerCount="1" CommentCount="10" />
  <row Id="600" PostTypeId="2" ParentId="410" CreationDate="2015-06-28T19:52:51.303" Score="3" Body="&lt;p&gt;Trichoplax suggested a number of advantages to providing binaries, but no disadvantages.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Clearly, the largest advantage to providing binaries is the high probability that this will increase the size of the user-base. The type of person who visits this site is technically very savvy, most likely with programming experience, and likely to &lt;strong&gt;prefer&lt;/strong&gt; to download source and compile it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But we are actually a very small subset of the number of people who use computers and browse the Internet. Most users do little more than browse the web, chat on Facebook, send emails, etc.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Chrome and Firefox  have &lt;a href=&quot;http://www.sitepoint.com/browser-trends-january-2015-ie8-usage-triples/&quot; rel=&quot;nofollow&quot;&gt;displaced Internet Explorer&lt;/a&gt; as the leading browser, helped by having alternatives to Windows as a platform. But how successful would this have been if every potential user was required to download the source of Chrome (and webkit!!) and compile it from scratch. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;But success comes at a price (one which can kill small FLOSS projects), literally a dollars and cents price.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Cost&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Hosting sites like GitHub often have limitations on the size of individual files. And you really don't want to save large binaries in a Git repository. These sites also have limits on the amount of traffic that a given repository should generate.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This means you will need a host site which lets you publish potentially large binaries (multiple versions and multiple targets). It should also not be bandwidth limited. This costs money, which the project owners will need to raise from some source.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Too many platforms&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Having bitten the bullet, and set up a server, you need to decide which platforms you will support. And which versions of those platforms&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Windows Vista, 7, 8? One or all?&lt;/li&gt;&#xA;&lt;li&gt;Which distro mechanisms of Linux? (rpm, deb, ppa, etc)&lt;/li&gt;&#xA;&lt;li&gt;OSX native, or Homebrew?&lt;/li&gt;&#xA;&lt;li&gt;Android, iOS? Which versions?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Does the project have access to contributors that can support all the platforms you want to distribute for? Do you have people who can test the provided binaries to ensure they actually work?&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Security and Liability&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Okay, it's all taken off .. you have a distribution mechanism, binaries, and lots of users.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;How do you prevent the insertion of adware (a la Sourceforge) if you aren't using your own servers?&lt;/li&gt;&#xA;&lt;li&gt;How do you avoid trojan injections (there are commonly adopted methods)&lt;/li&gt;&#xA;&lt;li&gt;Are you legally liable if someone downloads an infected executable from your site? &lt;/li&gt;&#xA;&lt;li&gt;Do you need some liability insurance?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h2&gt;High numbers of lower-skilled users&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;As your project (assume it's a complete application) attracts more and more 'average people', you will be held to a higher standard for support.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Do you have good &lt;strong&gt;user&lt;/strong&gt; documentation?&lt;/li&gt;&#xA;&lt;li&gt;Will you provide translations for other (human) languages?&lt;/li&gt;&#xA;&lt;li&gt;Do you now need a bug tracker hosted on a larger site?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="29" LastActivityDate="2015-06-28T19:52:51.303" CommentCount="0" />
  <row Id="603" PostTypeId="2" ParentId="597" CreationDate="2015-06-28T20:25:07.060" Score="5" Body="&lt;p&gt;The major problem is one you've already noted: &lt;em&gt;having everyone relicense&lt;/em&gt;. There are, literally*, millions of open-source projects. For each project, the author might have abandoned it, or be unreachable, or just not want to relicense.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also, one organization or meeting can't hope to cover all the needs of every developer and every project - software must have different licenses to hardware, to drinks, etc., so you'll get people contacting you for years afterwards asking for the addition of another license to cover X.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The set of licenses will, over time, tend towards the smallest workable set, simply because humans are lazy.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That said, to some extent this has happened. If you ask someone involved in open source to tell you a few licenses, you can bet they'll say MIT, BSD, GNU GPL, and probably CC's set. Those are the accepted licenses, and people looking for a license will come across those first. Many of the others will (or have) fall out of use as people go for the big-name licenses.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;* No, I don't know this for certain, but it seems exceedingly likely.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-28T20:25:07.060" CommentCount="0" />
  <row Id="604" PostTypeId="2" ParentId="597" CreationDate="2015-06-28T20:42:59.447" Score="3" Body="&lt;p&gt;&lt;a href=&quot;http://www.softwarefreedom.org/resources/2013/lcs-slides-aaronw/#/chart-gp-adj&quot; rel=&quot;nofollow&quot;&gt;Somewhat sloppy quantative analysis on the current licences used on github&lt;/a&gt; shows that this is already somewhat happening. This is just a single datapoint, and it's not very solid data, but it does show that the MIT license, the BSD license(s), the GPL and the Apache license together make up for the vast majority of cases.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The long tail is very long, but not very deep. I don't know about any initiatives by the OSI or FSF to trim down the number of licenses they certify out of name of simplicity, but that would still leave a very large number of existing projects with another license and no real incentive to change it.&lt;/p&gt;&#xA;" OwnerUserId="97" LastEditorUserId="8" LastEditDate="2015-06-30T20:12:07.750" LastActivityDate="2015-06-30T20:12:07.750" CommentCount="1" />
  <row Id="605" PostTypeId="5" CreationDate="2015-06-28T21:11:47.833" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-28T21:11:47.833" LastActivityDate="2015-06-28T21:11:47.833" CommentCount="0" />
  <row Id="606" PostTypeId="4" CreationDate="2015-06-28T21:11:47.833" Score="0" Body="Open Educational Resources are documents and media for use in education under open licenses which allow free use and distribution." OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-06-28T21:37:10.043" LastActivityDate="2015-06-28T21:37:10.043" CommentCount="0" />
  <row Id="607" PostTypeId="2" ParentId="551" CreationDate="2015-06-28T21:19:38.513" Score="2" Body="&lt;p&gt;It is generally understood that using another program generates no derivate work (in difference to linking there it is controversial). As far as I know nobody so far has claimed, that using a database creates a derivate work. Even more, if the interface is an standard used by different programs. If you stick only to standard-SQL, you could replace the Database in the installation without rewriting the program.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-28T21:19:38.513" CommentCount="0" />
  <row Id="608" PostTypeId="2" ParentId="598" CreationDate="2015-06-28T21:23:12.420" Score="3" Body="&lt;p&gt;Trying to teach your investors how to program is likely a waste of time. They are not inclined to learn it, they don't have the time to learn it, and it is unlikely to help them make a business decision (People who can code a bit are often worse managers than those who can not code at all, because they often believe to know far more than they actually do).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The open source culture and its productivity might be fascinating to us programmers, but businesspeople are not interested in this. They are only interested in: &lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;How much will it cost me?&lt;/li&gt;&#xA;&lt;li&gt;How will it make me money?&lt;/li&gt;&#xA;&lt;li&gt;How much money will it make me?&lt;/li&gt;&#xA;&lt;li&gt;When will it start to make me money?&lt;/li&gt;&#xA;&lt;li&gt;What is the risk it won't make me money?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;When you want to convince businesspeople to fund your project, you need to present them a business case which answers these questions and explains why it is more profitable to open source this project than to develop it under a proprietary license.&lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-06-28T21:34:20.177" LastActivityDate="2015-06-28T21:34:20.177" CommentCount="0" />
  <row Id="609" PostTypeId="2" ParentId="498" CreationDate="2015-06-28T22:33:06.217" Score="3" Body="&lt;p&gt;In previous versions, the Creative Commons licenses have been written with the US legal system in mind. This might have created some issues in other countries, so it was an effort underway to adapt the text to different countries and also to translate it in the process. You can look in this &lt;a href=&quot;https://en.wikipedia.org/wiki/Creative_Commons_jurisdiction_ports&quot; rel=&quot;nofollow&quot;&gt;Wikipedia-article&lt;/a&gt; or in the &lt;a href=&quot;https://wiki.creativecommons.org/wiki/Frequently_Asked_Questions#What_should_I_know_about_differences_between_the_international_licenses_and_the_ported_licenses.3F&quot; rel=&quot;nofollow&quot;&gt;FAQ of Creative Commons&lt;/a&gt; for more details.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-28T22:33:06.217" CommentCount="0" />
  <row Id="610" PostTypeId="1" AcceptedAnswerId="616" CreationDate="2015-06-28T22:47:51.193" Score="5" ViewCount="55" Body="&lt;p&gt;Sometimes the claim is heard open source projects are especially unfriendly to women. Sometimes the claim is heard, that open-source projects are especially inclusive. It probably is impossible to answer which is more true, but we could get a hint by looking at real participation from females.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Are there studies comparing similar projects in open source and in proprietary projects that analyze the numbers and perhaps roles of male and female contributors?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-28T23:25:24.990" LastActivityDate="2015-06-29T02:38:21.573" Title="Do open source projects have better or worse female participation than proprietary projects?" Tags="&lt;community&gt;&lt;inclusion&gt;" AnswerCount="1" CommentCount="7" />
  <row Id="612" PostTypeId="1" AcceptedAnswerId="618" CreationDate="2015-06-29T01:36:02.343" Score="6" ViewCount="48" Body="&lt;p&gt;Creative Commons used to publish a license called &lt;a href=&quot;https://creativecommons.org/licenses/sampling+/1.0/&quot; rel=&quot;nofollow&quot;&gt;&quot;Sampling Plus&quot;&lt;/a&gt;, but according to &lt;a href=&quot;http://creativecommons.org/retiredlicenses&quot; rel=&quot;nofollow&quot;&gt;this page&lt;/a&gt;, it was retired/deprecated in 2011 due to inadequate demand and &lt;strong&gt;&quot;Not compatible with any other CC license&quot;&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Why was this license incompatible with the other CC licenses?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;According to the &lt;a href=&quot;https://creativecommons.org/licenses/sampling+/1.0/&quot; rel=&quot;nofollow&quot;&gt;human-readable summary page&lt;/a&gt;, the license permits:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Creative transformations for commercial and non-commercial uses&lt;/li&gt;&#xA;&lt;li&gt;Verbatim uses for non-commercial uses&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;With the condition that:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;You attribute in the manner specified by the author/licensor&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;At a glance, the freedoms are a mix of NC/ND and the condition is BY. Why is this incompatible with any other CC license? What specific use cases cause it to be incompatible?&lt;/p&gt;&#xA;" OwnerUserId="175" LastEditorUserId="97" LastEditDate="2015-06-29T07:43:14.340" LastActivityDate="2015-06-29T08:31:59.003" Title="Why is the CC sampling+ license incompatible with other CC licenses?" Tags="&lt;creative-commons&gt;&lt;license-compatibility&gt;" AnswerCount="1" CommentCount="0" FavoriteCount="2" />
  <row Id="615" PostTypeId="1" AcceptedAnswerId="619" CreationDate="2015-06-29T02:21:16.900" Score="3" ViewCount="24" Body="&lt;p&gt;Often if employing a team to program a project you would need to pay: the programmers, office space, etc. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In open source projects is it common for the programmers to be volunteers? Are there any other costs that you don't have compared to closed-source projects and vice-versa?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="168" LastEditDate="2015-06-29T08:02:39.093" LastActivityDate="2015-06-29T08:36:26.897" Title="What costs are involved in an open sourced project compared to a non open sourced project?" Tags="&lt;software&gt;&lt;development&gt;&lt;finance&gt;" AnswerCount="1" CommentCount="0" FavoriteCount="0" ClosedDate="2015-06-29T13:24:58.410" />
  <row Id="616" PostTypeId="2" ParentId="610" CreationDate="2015-06-29T02:38:21.573" Score="5" Body="&lt;p&gt;&lt;strong&gt;Significantly less female participation.&lt;/strong&gt; It is estimated that female participation on open source projects is at about 2%, compared to 10-30% overall in computing or proprietary projects.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For overall female participation, NSF keeps &lt;a href=&quot;http://www.nsf.gov/statistics/women/&quot;&gt;employment statistics for women&lt;/a&gt;, which has hovered around &lt;strong&gt;20-30%&lt;/strong&gt; for the &quot;computer and math scientists&quot; category.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are a number of reference to the low participation of women in open source projects; one commonly referenced is &lt;a href=&quot;http://www.flosspols.org/deliverables/FLOSSPOLS-D16-Gender_Integrated_Report_of_Findings.pdf&quot;&gt;&lt;em&gt;Free/Libre and Open Source Software: Policy Support&lt;/em&gt; (2006)&lt;/a&gt;, which lists a number of &lt;strong&gt;1.5%&lt;/strong&gt; - it's a while ago, but I'd be surprised if the number is much different today. To compare, &lt;a href=&quot;http://www.flossproject.org/report/FLOSS_Final4.pdf&quot;&gt;an earlier study (2002)&lt;/a&gt; listed &lt;strong&gt;1.1%&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are &lt;a href=&quot;https://docs.google.com/spreadsheet/ccc?key=0AlZH8QBl60oodEJTdFA5TlZOcDJCMU02RkZoSHF5SHc#gid=0&quot;&gt;other numbers&lt;/a&gt; which suggest that tech companies' employees are about &lt;strong&gt;12%&lt;/strong&gt; of women.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now per-project numbers vary a lot and I'm not sure how useful individual comparisons will be, but here are some numbers:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The same source that lists 12% for a group of tech companies shows &lt;strong&gt;Mozilla&lt;/strong&gt; at about &lt;strong&gt;8%&lt;/strong&gt;. By comparison, Google reports &lt;a href=&quot;http://www.pbs.org/newshour/updates/google-discloses-workforce-diversity-data-good/&quot;&gt;17% of women in their &quot;tech&quot; category&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://princessleia.com/journal/?p=3651&quot;&gt;This blog post&lt;/a&gt; mentions &lt;strong&gt;5%&lt;/strong&gt; of &lt;strong&gt;Ubuntu Members&lt;/strong&gt; as women. From the &lt;a href=&quot;https://wiki.ubuntu.com/Membership&quot;&gt;horse's mouth&lt;/a&gt;, &quot;Official Ubuntu Membership means recognition of significant and sustained contribution to Ubuntu or the Ubuntu community.&quot; There are over 500 of these. By comparison, Microsoft reports &lt;a href=&quot;https://www.microsoft.com/en-us/diversity/inside-microsoft/default.aspx#fbid=pAbVpUFMjVP&quot;&gt;28% female employment&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;If you know of better comparisons please edit them in, but again I want to emphasise that individual comparisons are no replacement for the overall statistics, which show significantly less female participation in open source projects.&lt;/p&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-06-29T02:38:21.573" CommentCount="1" />
  <row Id="618" PostTypeId="2" ParentId="612" CreationDate="2015-06-29T08:31:59.003" Score="4" Body="&lt;p&gt;The Sampling+ license effectively prohibits whole-work derivatives (you can't take a Sampling+ work and incorporate it intact into another work, except in very limited circumstances).  This means the license is only partially compatible with the &quot;mainstream licenses&quot; (BY, BY-SA, BY-ND, BY-NC, BY-NC-SA, and BY-NC-ND) -- you need to be careful about &lt;em&gt;how&lt;/em&gt; you use the Sampling+ content in the combined work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Going the other direction:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;You can't incorporate ShareAlike-licensed content into a Sampling+ work: it introduces an impermissible license restriction to the SA work (incompatible with BY-SA and BY-NC-SA).&lt;/li&gt;&#xA;&lt;li&gt;You can't incorporate NonCommercial content into a Sampling+ work because the Sampling+ license permits commercial use of derivatives (incompatible with BY-NC and BY-NC-SA).&lt;/li&gt;&#xA;&lt;li&gt;You can't incorporate No-Derivatives content in a Sampling+ work for obvious reasons (incompatible with BY-ND and BY-NC-ND).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;This leave only one possible way of freely combining a &quot;mainstream license&quot; work with a Sampling+ work: incorporating a CC-BY work into a Sampling+ work.  Everything else is restricted or forbidden.&lt;/p&gt;&#xA;" OwnerUserId="240" LastActivityDate="2015-06-29T08:31:59.003" CommentCount="2" />
  <row Id="619" PostTypeId="2" ParentId="615" CreationDate="2015-06-29T08:36:26.897" Score="1" Body="&lt;p&gt;This really depends on the project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are pure volunteer projects with a budget of zero. I have taken part in such projects myself and surprisingly it works when the problem is interesting enough. But you can not really rely on anything getting finished on time or getting finished at all, because all contributors work in their free-time and can stop working at any time when more important priorities appear in their life, they find a more interesting hobby or they get into personal conflicts with other project members.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But there are also open source projects which are carried almost entirely by paid developers employed by one or more companies. Some of these projects don't accept any outside contributions at all and only release the finished product to the public. With such projects, the budget does not differ at all from a proprietary project. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;And then there are projects anywhere in between where a certain percentage of work is done by volunteers and a certan percentage by employees. The &lt;a href=&quot;http://www.linuxfoundation.org/news-media/blogs/browse/2015/02/linux-kernel-report-more-contributors-ever&quot; rel=&quot;nofollow&quot;&gt;2015 Linux Kernel report&lt;/a&gt;, for example, reads: &lt;em&gt;&quot;more developers than ever are paid for their work; a conservative calculation shows this number at 80 percent. Volunteer developers don’t stay that way for long, as companies continue to aggressively recruit the best Linux talent.&quot;&lt;/em&gt;. Note that in such projects, volunteer work isn't completely free, because it needs to be coordinated and reviewed by maintainers who are usually employed.&lt;/p&gt;&#xA;" OwnerUserId="14" LastActivityDate="2015-06-29T08:36:26.897" CommentCount="0" />
  <row Id="620" PostTypeId="1" AcceptedAnswerId="621" CreationDate="2015-06-29T10:47:38.033" Score="11" ViewCount="164" Body="&lt;p&gt;In open source the term &quot;free&quot; is often used, sometimes with a qualifier, &quot;free as in beer&quot; or &quot;free as in speech&quot;. What is meant with these qualifications?&lt;/p&gt;&#xA;" OwnerUserId="97" LastEditorUserId="60" LastEditDate="2015-06-30T00:01:32.757" LastActivityDate="2015-07-28T09:41:31.353" Title="What is the difference between free as in beer and free as in speech?" Tags="&lt;freedoms&gt;&lt;terminology&gt;" AnswerCount="4" CommentCount="3" FavoriteCount="2" />
  <row Id="621" PostTypeId="2" ParentId="620" CreationDate="2015-06-29T12:14:09.893" Score="6" Body="&lt;p&gt;Free as in beer, is like getting something without payment. Getting food from the community fair (There's one in Toronto that gives free hamburgers to the community every year), something from friends, these are things that you receive without making a payment. You don't pay money.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Free as in speech relates to the Free Software Movement. To recognize this, we normally refer to it adding the French word &lt;strong&gt;&lt;em&gt;libre&lt;/em&gt;&lt;/strong&gt;, in order to help imply the freedom meaning. This is the reason as to why we have the acronym FLOSS (Free/Libre and Open Source Software). &lt;strong&gt;&lt;em&gt;Libre&lt;/em&gt;&lt;/strong&gt; means that you are unrestricted, like a bird in the skies, to do certain things. With &lt;em&gt;libre&lt;/em&gt; software, you can fork the software, and take it. You're allowed to do so, you're &lt;em&gt;libre&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is a confusion that can be quite confusing. As both words denote the same thing. With people around, they generally take the meaning of &quot;free as in food&quot;, rather than freedom. People specify what they mean with the expressions to help clarify and assure themselves that their message can come across reliably.&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="64" LastEditDate="2015-06-29T12:36:43.057" LastActivityDate="2015-06-29T12:36:43.057" CommentCount="0" />
  <row Id="622" PostTypeId="2" ParentId="620" CreationDate="2015-06-29T12:29:52.130" Score="4" Body="&lt;p&gt;@Zizouz212 almost got the idea 100%. These ideas are not the same otherwise there would not be two phrases. The big difference with this concept can best be described from a great &lt;a href=&quot;http://www.howtogeek.com/howto/31717/what-do-the-phrases-free-speech-vs.-free-beer-really-mean/&quot; rel=&quot;nofollow&quot;&gt;How-To Geek Article&lt;/a&gt; on the subject. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&quot;Free as in beer&quot; is when someone gifts to you the software at no cost. You are in no way expected to pay any fee for this or give anything in return. You also cannot see the source code or any of the elements that make it up. Sure you may know that it contains an ingredient (C++,Java), but you don't know exactly how it is put together to make this great software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One community (joke / accepted practice) for this saying is if you really enjoy a software you (could / should / it's nice) to buy the developer a beer. Basically where this saying came from.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &quot;free as in speech&quot; is pretty much right on, but is in association to actual open source. You can see and use any version of the code to improve and help yourself or the community.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So like I said they are different and do not mean pretty much the same thing.&lt;/p&gt;&#xA;" OwnerUserId="358" LastEditorUserId="358" LastEditDate="2015-06-29T12:41:15.220" LastActivityDate="2015-06-29T12:41:15.220" CommentCount="0" />
  <row Id="623" PostTypeId="2" ParentId="599" CreationDate="2015-06-29T13:55:48.640" Score="0" Body="&lt;p&gt;Common misunderstanding for Free software is thinking as free of charge/cost. If any one just search in google : &lt;a href=&quot;https://www.google.co.in/search?q=download+free+software&quot; rel=&quot;nofollow&quot;&gt;download free software&lt;/a&gt; or &lt;a href=&quot;https://www.google.co.in/search?q=free+software+for&quot; rel=&quot;nofollow&quot;&gt;free software for...&lt;/a&gt; then s/he is actually responded with &lt;a href=&quot;https://en.wikipedia.org/wiki/Freeware&quot; rel=&quot;nofollow&quot;&gt;freeware&lt;/a&gt;. But If anyone just tries to search &lt;a href=&quot;https://www.google.co.in/search?q=what+is+free+software&quot; rel=&quot;nofollow&quot;&gt;What is free software&lt;/a&gt; then s/he is going on right way!&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Following topics may helps you to aware the people:-&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;Aware people with &lt;a href=&quot;https://en.wikipedia.org/wiki/Software_license&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Software License&lt;/strong&gt;&lt;/a&gt; to clarify what different terms stands for.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/mZhhY.png&quot; alt=&quot;screen-shot&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, It is clear that spyware/malware/adware are &lt;strong&gt;deceptive and/or illicit&lt;/strong&gt; while free software, open source software are software distributed under free/open-source license and follows definitions&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Freeware is &lt;a href=&quot;https://en.wikipedia.org/wiki/Software#License&quot; rel=&quot;nofollow&quot;&gt;one type&lt;/a&gt; of proprietary software (distinguishing with commercial software)&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;The English adjective free is commonly used in one of two meanings: &quot;for zero price&quot; (gratis) and &quot;with little or no restriction&quot; (libre). see &lt;a href=&quot;https://en.wikipedia.org/wiki/Gratis_versus_libre&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Gratis Vs. Libre&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Gratis_versus_libre#.22Free_beer.22_vs_.22free_speech.22_distinction&quot; rel=&quot;nofollow&quot;&gt;&quot;Free beer&quot; vs &quot;free speech&quot;&lt;/a&gt; distinction&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&quot;Free software is a matter of liberty, not price. To understand the concept, you should think of free as in free speech, not as in free beer.&quot; — Richard Stallman&lt;/p&gt;&#xA;&lt;/blockquote&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.gnu.org/philosophy/fs-translations.html&quot; rel=&quot;nofollow&quot;&gt;Translation of the term &quot;free software&quot;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is a list of recommended unambiguous translations for the term “free software” (&lt;strong&gt;free as in freedom&lt;/strong&gt;) into various languages. Also provided translations of “&lt;strong&gt;gratis software&lt;/strong&gt;” in a separate column to show how to make the contrast in various languages.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="296" LastEditorUserId="296" LastEditDate="2015-06-30T13:27:19.157" LastActivityDate="2015-06-30T13:27:19.157" CommentCount="6" />
  <row Id="624" PostTypeId="1" CreationDate="2015-06-29T14:38:01.437" Score="4" ViewCount="66" Body="&lt;p&gt;When you publish software under a free or open source license, you are granting users certain freedoms. With that, it stands within reason there are certain consequences and liabilities, just as there are certain consequences and liabilities when you &lt;a href=&quot;https://xkcd.com/1357/&quot; rel=&quot;nofollow&quot;&gt;entertain your right to free speech&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In publishing controversial &lt;em&gt;software&lt;/em&gt;, what 'criticism and consequences' might developers face?&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="97" LastEditDate="2015-06-29T16:38:24.277" LastActivityDate="2015-06-29T17:09:01.193" Title="Are there consequences of publishing software under a free or open source license?" Tags="&lt;freedoms&gt;&lt;free-software&gt;" AnswerCount="2" CommentCount="10" FavoriteCount="0" />
  <row Id="625" PostTypeId="1" AcceptedAnswerId="1008" CreationDate="2015-06-29T14:38:43.920" Score="5" ViewCount="56" Body="&lt;p&gt;Many programming languages have popular open-source implementations: C, C++, Java, Javascript, Python, C#, PHP. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Does statistical data exist that shows how much of the software (open source or not) is built with open source compilers or interpreters and how much with closed source? And does the data provide historical data, so that it can be seen if the usage of open-source development systems in programming has increased or decreased over time?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="29" LastEditDate="2015-07-10T00:29:39.187" LastActivityDate="2015-07-10T00:39:52.940" Title="Are there statistics showing the usage over time of open source implementations of programming languages compilers/interpreters?" Tags="&lt;history&gt;&lt;statistics&gt;" AnswerCount="1" CommentCount="4" FavoriteCount="1" />
  <row Id="626" PostTypeId="2" ParentId="624" CreationDate="2015-06-29T14:46:26.900" Score="6" Body="&lt;p&gt;You're reading too much into the analogy: &quot;free as in speech&quot; is by opposition to &quot;free as in gratis&quot;, to help people understand that &quot;free&quot; is about freedom, not price. The FSF don't claim that free software is like freedom of speech (at least not that I'm aware!).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As is usual with software (which doesn't mean it's not controversial), the FSF's free software licenses include the usual disclaimer of warranty to protect developers from the consequences of errors in their code...&lt;/p&gt;&#xA;" OwnerUserId="118" LastActivityDate="2015-06-29T14:46:26.900" CommentCount="7" />
  <row Id="627" PostTypeId="1" AcceptedAnswerId="629" CreationDate="2015-06-29T16:23:24.290" Score="2" ViewCount="121" Body="&lt;p&gt;I know that people don't need degrees to create closed source software. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Because open source programming is different to closed source, is any other education REQUIRED to program open sources things? &lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If yes, what degree / education?&lt;/li&gt;&#xA;&lt;li&gt;If no, why not?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="271" LastEditorUserId="29" LastEditDate="2015-06-29T19:33:16.937" LastActivityDate="2015-06-29T19:48:05.347" Title="Do you need a degree to become an open source developer?" Tags="&lt;development&gt;&lt;accessibility&gt;" AnswerCount="2" CommentCount="6" FavoriteCount="1" ClosedDate="2015-06-30T19:50:01.187" />
  <row Id="628" PostTypeId="1" AcceptedAnswerId="642" CreationDate="2015-06-29T16:37:38.803" Score="7" ViewCount="78" Body="&lt;p&gt;Throughout the development of programming itself which came first: open sourced or closed source? Which was more popular? Or did one come after the other?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-06-29T17:01:10.290" LastActivityDate="2015-06-30T08:37:40.720" Title="Did open source or closed source come first?" Tags="&lt;development&gt;&lt;history&gt;" AnswerCount="3" CommentCount="0" FavoriteCount="2" />
  <row Id="629" PostTypeId="2" ParentId="627" CreationDate="2015-06-29T16:40:56.433" Score="8" Body="&lt;p&gt;Simple answer: nope. I know this because I've made open source software and I don't have a degree.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The degree isn't required because the knowledge of programming required to make software doesn't change between proprietary and open source software. You still need to able to write good working code, and that doesn't require a degree - you can teach yourself.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Of course, a degree is always &lt;em&gt;beneficial&lt;/em&gt; because it'll teach you things you didn't know and often will give you an overview of the business side of things too, but it's by no means necessary.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-29T16:40:56.433" CommentCount="1" />
  <row Id="630" PostTypeId="2" ParentId="628" CreationDate="2015-06-29T17:06:53.070" Score="5" Body="&lt;p&gt;Arguably, open source came first via &lt;a href=&quot;https://en.wikipedia.org/wiki/Ada_Lovelace&quot; rel=&quot;nofollow&quot;&gt;Ada Lovelace&lt;/a&gt; around 1850.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;While translating an article on Babbage's Computation Engine, she made the leap of realizing that it could be programmed to solve more than a single dedicated problem.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Her notes actually included a specification of what is considered to be the first algorithm specifically intended for implementation on a 'computer'. This algorithm was published in full in a peer-reviewed publication, thus making it 'open source'&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="111" LastEditDate="2015-06-30T08:37:40.720" LastActivityDate="2015-06-30T08:37:40.720" CommentCount="1" />
  <row Id="631" PostTypeId="2" ParentId="628" CreationDate="2015-06-29T17:07:13.050" Score="4" Body="&lt;p&gt;&lt;em&gt;Codified&lt;/em&gt; free / open source development dates back to the publications of the BSD and GPL licenses; Wikipedia dates &lt;a href=&quot;https://en.wikipedia.org/wiki/BSD_licenses&quot; rel=&quot;nofollow&quot;&gt;BSD to 1988&lt;/a&gt; (although the first properly free version of BSD, 4.3BSD, was released in 1989), and the &lt;a href=&quot;https://www.gnu.org/licenses/old-licenses/gpl-1.0.html&quot; rel=&quot;nofollow&quot;&gt;GPL v1 was published in 1989&lt;/a&gt;. Before that, there were freely-developed packages; TeX dates back to 1978 and is known to be FLOSS since &lt;a href=&quot;http://www.tug.org/TUGboat/Articles/tb07-2/tb15gordon.pdf&quot; rel=&quot;nofollow&quot;&gt;at least 1986&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Commercial software is older than that, so closed source development is older than codified free / open source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Looking back further than that would involve dating the first non-shared software development, and the first shared software development; early computers were purchased for bespoke setups, and the software run on them was closed source, so there again closed source came earlier.&lt;/p&gt;&#xA;" OwnerUserId="118" LastActivityDate="2015-06-29T17:07:13.050" CommentCount="1" />
  <row Id="632" PostTypeId="2" ParentId="624" CreationDate="2015-06-29T17:09:01.193" Score="5" Body="&lt;p&gt;In general, there's no more or less consequence to publishing controversial proprietary software than there is for free software. Regardless of how you license it, software is software, and people will react to it how they choose. The fact that you've released the source and granted redistribution and modification rights for your controversial software doesn't really change anything.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In fact, the main risk I see is controversy introduced by a &lt;em&gt;downstream fork&lt;/em&gt; of your &lt;em&gt;non-controversial&lt;/em&gt; software. Suppose you made a free-software game engine, and someone else used your engine to make a game that glamorized some violent atrocity from history. Of course, you're not responsible for the creation of such an awful game, but, alarmingly, your copyright notice is in the credits, per the requirements of your license. I'm not totally sure what your legal options are there, but at minimum you could  probably insist that the author of the game clearly delineate the authorship of your engine and of the controversial game in the game's documentation.&lt;/p&gt;&#xA;" OwnerUserId="50" LastActivityDate="2015-06-29T17:09:01.193" CommentCount="0" />
  <row Id="634" PostTypeId="2" ParentId="504" CreationDate="2015-06-29T17:37:51.067" Score="11" Body="&lt;p&gt;Well... it depends what you mean by &lt;em&gt;override&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You &lt;em&gt;can't&lt;/em&gt; single-license your content under a different license to CC BY-SA. When you post on StackExchange, you automatically grant StackExchange the right to distribute your content under CC BY-SA, and you get no say in the license they use.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You &lt;em&gt;can&lt;/em&gt;, however, dual-license your work here under another license as well. You can say in your profile that you apply license X to your content as well, and then people will be able to choose which license they use when they use your work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the case of StackOverflow, this may even be a good idea - CC BY-SA was not made for licensing code, so offering a different license specifically designed for code is probably a good thing.&lt;/p&gt;&#xA;" OwnerUserId="366" LastActivityDate="2015-06-29T17:37:51.067" CommentCount="3" />
  <row Id="635" PostTypeId="1" AcceptedAnswerId="637" CreationDate="2015-06-29T17:39:29.840" Score="6" ViewCount="22" Body="&lt;p&gt;Suppose I have a product released under some CC license. Someone comes to me and says &quot;can I please build off of your software without giving credit?&quot;. To this I say sure! &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Do I need to write them a piece of paper with proof (ie: &quot;I hereby give permission to allow ________ to use my software without credit&quot;)?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="60" LastEditDate="2015-06-29T23:08:25.350" LastActivityDate="2015-06-29T23:08:25.350" Title="Can I give someone specific permission?" Tags="&lt;licensing&gt;&lt;attribution&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="636" PostTypeId="1" AcceptedAnswerId="641" CreationDate="2015-06-29T18:03:09.090" Score="4" ViewCount="18" Body="&lt;p&gt;Suppose I was about to launch a large open source project. From past experience I know that the best way to promote a product is to provide information that is detailed, and easy to understand.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Not everyone knows about open source products, would promoting the fact that it is open source actually help? Or would it just confuse people more? &lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-06-29T18:09:47.967" LastActivityDate="2015-06-29T18:30:45.750" Title="What is the best way to promote an open source product?" Tags="&lt;marketing&gt;" AnswerCount="1" CommentCount="2" FavoriteCount="1" ClosedDate="2015-06-29T19:54:44.333" />
  <row Id="637" PostTypeId="2" ParentId="635" CreationDate="2015-06-29T18:03:41.050" Score="8" Body="&lt;p&gt;Yes you can and no you don't have to.&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;You're the owner. Since you own all the rights, you can of course allow them to use without attribution.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;You shouldn't have to write anything. If someone complains to this other dev that they're not attributing, the other dev can just say they've got permission, and point the complainant back to you. You can just confirm that. Of course, it may be wise to have some publically visible record of this, so you don't have to constantly confirm it.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-29T18:03:41.050" CommentCount="0" />
  <row Id="638" PostTypeId="2" ParentId="620" CreationDate="2015-06-29T18:05:21.880" Score="3" Body="&lt;p&gt;&quot;Free&quot; is ambiguous in English:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A &lt;strong&gt;free beer&lt;/strong&gt; is a beer that you don’t have to pay for (you get it &lt;strong&gt;for free&lt;/strong&gt;).&lt;/li&gt;&#xA;&lt;li&gt;A &lt;strong&gt;free speech&lt;/strong&gt; is a speech where you have the right to express your opinion (you &lt;strong&gt;are free&lt;/strong&gt;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;To disambiguate the meaning of &quot;free&quot;, you can refer to these concepts: &lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;free as in beer, if it’s about the price of zero (aka. &lt;em&gt;gratis&lt;/em&gt;)&lt;/li&gt;&#xA;&lt;li&gt;free as in speech, if it’s about the freedom (aka. &lt;em&gt;libre&lt;/em&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="138" LastActivityDate="2015-06-29T18:05:21.880" CommentCount="0" />
  <row Id="639" PostTypeId="1" CreationDate="2015-06-29T18:07:23.810" Score="3" ViewCount="29" Body="&lt;p&gt;According to &lt;a href=&quot;http://www.cio.com/article/2378859/open-source-tools/7-reasons-not-to-use-open-source-software.html&quot; rel=&quot;nofollow&quot;&gt;this page&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Cloud software is slightly different than conventional software. As a general rule, you don't get access to the source code, even if the hosted software is built entirely on open source software. That may not make the software proprietary, strictly speaking, but it doesn't give you all the benefits of open source. In that sense, the benefits of using the &quot;pay for what you use&quot; software as a service model may outweigh the disadvantage of not having access to the source code.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Now &lt;a href=&quot;https://www.openstack.org/&quot; rel=&quot;nofollow&quot;&gt;OpenStack&lt;/a&gt; is bringing cloud support to the open source community, but what about &lt;em&gt;Software as a Service&lt;/em&gt;?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Are there any open source SaaS projects out there? Does SaaS even make sense in a FLOSS context?&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="69" LastEditDate="2015-06-29T18:13:12.183" LastActivityDate="2015-06-29T18:18:04.473" Title="Are there any open source Software as a Service projects?" Tags="&lt;software&gt;&lt;floss&gt;&lt;saas&gt;" AnswerCount="1" CommentCount="2" />
  <row Id="640" PostTypeId="2" ParentId="639" CreationDate="2015-06-29T18:16:34.557" Score="2" Body="&lt;p&gt;&lt;strong&gt;Yes&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In short there are many many open source SaaS projects out there.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some of these include:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;owncloud &lt;/li&gt;&#xA;&lt;li&gt;openshift &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;For a list of over 60 examples go here: &lt;a href=&quot;http://datamation.com/open-source/60-open-source-apps-you-can-use-in-the-cloud-1.html&quot; rel=&quot;nofollow&quot;&gt;list&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;These products have become popular because most are free, and easy to use.&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-06-29T18:18:04.473" LastActivityDate="2015-06-29T18:18:04.473" CommentCount="0" />
  <row Id="641" PostTypeId="2" ParentId="636" CreationDate="2015-06-29T18:30:45.750" Score="1" Body="&lt;p&gt;The best way (I define best as with the most people reached and converted to users) is an expensive marketing campaign.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But OSS-projects usually don't have much money. But there are some, that can raise a lot of money. The Mozilla Foundation did this and used money to print &lt;a href=&quot;https://blog.mozilla.org/press/2004/12/mozilla-foundation-places-two-page-advocacy-ad-in-the-new-york-times/&quot; rel=&quot;nofollow&quot;&gt;big advertisements in newspapers&lt;/a&gt; in different countries. It's hard to measure how much that helped Firefox to reach todays popularity, but it surely had some impact.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The most common way to advertise OSS is through social media. This is relatively cheap (it takes the time of a volunteer or a paid community manager) and can reach a lot of people with resending of messages.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The basics to help also any other form of advertising is a good informative website. Other advertisement can send visitors to the site, so the site must contain the information and download for the software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Much other forms of advertising exist, that are used from time to time:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;presenting the software on conferences&lt;/li&gt;&#xA;&lt;li&gt;create merchandise&lt;/li&gt;&#xA;&lt;li&gt;use a popular project hosting platform (being on one alone helps to get hits)&lt;/li&gt;&#xA;&lt;li&gt;register in software catalogs&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;For all advertisement it is helpful to keep in mind which target group the software has.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For the question if advertising with Open Source helps: again it depends on your target group. Firefox for example doesn't concentrate on being open source, it focuses on being without charge. In other communities it might be helpful to focus on being open source.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-29T18:30:45.750" CommentCount="0" />
  <row Id="642" PostTypeId="2" ParentId="628" CreationDate="2015-06-29T18:40:06.573" Score="12" Body="&lt;p&gt;Early on (long before personal computers) software was not seen as a product of its own, but a part of the computer. So the software was distributed without extra costs with the computer. Many of the purchasers of computers (often universities or scientific facilities) changed the distributed software and added their own programs. All this was practically open source, without the concept existing and no one ever really thought about it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Later on some companies learned that they could sell software as a product of its own. Closed source software emerged. As a reaction to this new phenomenon of closed source, Richard Stallman started to think about other ways and eventually defined free software. Open Source was a term later coined, but mostly had the same features as free software, so that I see them mostly synonymous.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, to answer which was first you have to decide if you count early software as open source. Following today's standards it wasn't, because it wasn't licensed. But in practice it was used the same way as open source is today.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="168" LastEditDate="2015-06-29T23:56:38.517" LastActivityDate="2015-06-29T23:56:38.517" CommentCount="0" />
  <row Id="643" PostTypeId="1" AcceptedAnswerId="644" CreationDate="2015-06-29T18:50:39.920" Score="4" ViewCount="44" Body="&lt;p&gt;Many of the larger open source projects receive serious backing from one or more Corporate sponsors. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Depending on CLA's and the license chosen, if contributions were made by engineers during their working hours (i.e. as part of their job) the copyright on those corporations belongs to their employers, not the individuals. The individuals might not even have the legal authority to assign the copyright via a CLA.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A &lt;a href=&quot;http://opensource.stackexchange.com/questions/549&quot;&gt;similar question&lt;/a&gt; deals with accessing and forking the original source code. But this situation is slightly different.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In addition to complications over the copyright (perhaps another company purchases the assets of the failed one), the loss of the sponsor might also imply the loss of&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Extensive web infrastructure for hosting, distribution, and support&lt;/li&gt;&#xA;&lt;li&gt;A large pool of contributors who are no longer being paid to contribute&lt;/li&gt;&#xA;&lt;li&gt;Some large users, who perhaps had commercial support agreements, or simply lose confidence in the project once its backers depart.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;So what happens to a large, popular OS project when its major corporate sponsor goes bust, taking all the above with it?&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="190" LastEditDate="2015-06-30T10:22:05.847" LastActivityDate="2015-06-30T10:22:05.847" Title="What happens when a corporate sponsor goes bust?" Tags="&lt;collaboration&gt;&lt;contributor-agreements&gt;&lt;corporate-ownership&gt;&lt;sponsorship&gt;" AnswerCount="1" CommentCount="3" />
  <row Id="644" PostTypeId="2" ParentId="643" CreationDate="2015-06-29T19:11:47.317" Score="7" Body="&lt;p&gt;This situation is one major strong point in comparison to closed source software. While nobody can claim the copyright anymore and therefore the license must be kept unchanged, the software can still be maintained and developed, as this is one basic right gained through open source. It may even happen the same developers work on it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It isn't exactly the same, but as Ulf Michael Widenius (the original developer of MySQL) became unhappy with the development of MySQL he forked the software and still develops the fork as MariaDB. The same can happen if the copyright-holder ceases functioning, a fork still is possible. It may be needed to change project-name though (depending on the license).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There still may be some disruption from the changes and it isn't guaranteed a new development team will form to keep developing the software. Also the missing money from the corporate developer may lead to smaller development. But the Software survives and can be still maintained.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-29T19:11:47.317" CommentCount="0" />
  <row Id="645" PostTypeId="1" AcceptedAnswerId="649" CreationDate="2015-06-29T19:38:58.723" Score="7" ViewCount="68" Body="&lt;p&gt;If everyone can change the Wikipedia, can it be trusted? Do any studies exists that show it is less trustworthy than classical encyclopedias?&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-30T21:44:28.137" Title="How can I trust Wikipedia, if everyone can change it?" Tags="&lt;collaboration&gt;&lt;wikipedia&gt;" AnswerCount="2" CommentCount="8" FavoriteCount="1" />
  <row Id="646" PostTypeId="2" ParentId="627" CreationDate="2015-06-29T19:42:44.230" Score="6" Body="&lt;p&gt;The open source community is largely meritocratic. When you provide a patch for an open source project, nobody will ask you for your references or academic qualifications. Many open source projects would not even want to know your real name, unless they need you to sign a &lt;a href=&quot;https://en.wikipedia.org/wiki/Contributor_License_Agreement&quot;&gt;CLA&lt;/a&gt;. Your contribution will only be judged on its own merit.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This makes open source a great opportunity for self-taught developers without formal qualifications to collect experience and build a portfolio they can use to convince potential employers of their competence.&lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-06-29T19:48:05.347" LastActivityDate="2015-06-29T19:48:05.347" CommentCount="0" />
  <row Id="647" PostTypeId="1" AcceptedAnswerId="656" CreationDate="2015-06-29T19:45:12.290" Score="12" ViewCount="198" Body="&lt;p&gt;Partially inspired by this question: &lt;a href=&quot;http://opensource.stackexchange.com/questions/613/what-subject-areas-are-in-need-of-free-and-open-source-projects&quot;&gt;What subject areas are in need of free and open source projects?&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Open source development has greatly enriched and expanded many problem domains, not simply hardware. Open source 3D printer design, and the Arduino platform are excellent examples.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But are there any domains or industries which are inherently off-limits for the creation of open-source solutions?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And by solution, I don't mean &lt;strong&gt;using&lt;/strong&gt; open source code, but providing an actual implementation.&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="111" LastEditDate="2015-06-30T09:00:48.427" LastActivityDate="2015-07-22T14:07:58.153" Title="Is any problem domain off-limits to open source development?" Tags="&lt;development&gt;" AnswerCount="5" CommentCount="0" FavoriteCount="1" />
  <row Id="648" PostTypeId="2" ParentId="647" CreationDate="2015-06-29T19:45:12.290" Score="1" Body="&lt;p&gt;One area strikes me as inherently closed to open source solutions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is hard to imagine the creation of an open source weapons system platform. Beyond the concerns of ethics, whilst there might be engineers out there who would be prepared to actively participate in such a project, it would probably quickly attract a very negative response from many government bodies and might even be in violations of numerous laws.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another potential area is that of medical equipment, which has to meet a prohibitively high legal burden of qualification and indemnity.&lt;/p&gt;&#xA;" OwnerUserId="29" LastActivityDate="2015-06-29T19:45:12.290" CommentCount="8" />
  <row Id="649" PostTypeId="2" ParentId="645" CreationDate="2015-06-29T19:47:15.590" Score="9" Body="&lt;p&gt;You are not supposed to trust it - &lt;a href=&quot;https://en.wikipedia.org/wiki/Wikipedia:Wikipedia_is_not_a_reliable_source&quot;&gt;Wikipedia itself tells you that it is not a reliable source.&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Instead, you are supposed to trust the sources it cites in the articles. This  will mostly be secondary sources, e.g. newspaper or magazine articles, books or studies about a topic, provided that these meet &lt;a href=&quot;https://en.wikipedia.org/wiki/Wikipedia:Identifying_reliable_sources&quot;&gt;Wikipedia's requirements for reliable sources&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The latter is also supposed to maintain overall quality of Wikipedia articles and prevent the inclusion of outright wrong information, though - anyone who adds or deletes or changes content of an article is supposed to back this up by sources, at least when their change is challenged.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This can't be guaranteed to work in all cases, though - and this is a difference to classical encyclopedias, where a number of people might be tasked with verifying the included information. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Wikipedia seems to do quite well, though, they have an article about the &lt;a href=&quot;https://en.wikipedia.org/wiki/Reliability_of_Wikipedia&quot;&gt;reliability of Wikipedia&lt;/a&gt; - again, you are not supposed to trust this article, but the sources cited in it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Please note that I have added several links to Wikipedia in this answer - but not all of these links go to articles, some refer to pages in the Wikipedia: namespace. The latter is where Wikipedia's own policies are defined. You are supposed to follow those, no trust needed, or you may be sanctioned by users with the required privileges.&lt;/p&gt;&#xA;" OwnerUserId="83" LastEditorUserId="83" LastEditDate="2015-06-29T20:24:04.147" LastActivityDate="2015-06-29T20:24:04.147" CommentCount="6" />
  <row Id="650" PostTypeId="1" AcceptedAnswerId="791" CreationDate="2015-06-29T19:54:28.333" Score="9" ViewCount="76" Body="&lt;p&gt;The point of using the &lt;a href=&quot;https://www.gnu.org/licenses/agpl-3.0&quot;&gt;&lt;em&gt;GNU Affero General Public License (Version 3)&lt;/em&gt;&lt;/a&gt; is that it allows &quot;users who interact with the licensed software over a network to receive the source for that program&quot; (&lt;a href=&quot;https://www.gnu.org/licenses/license-list.en.html#AGPLv3.0&quot;&gt;FSF&lt;/a&gt;).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://www.gnu.org/licenses/agpl-3.0#section13&quot;&gt;Section 13&lt;/a&gt; of the &lt;em&gt;AGPLv3.0&lt;/em&gt; contains:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;[…] if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version […]&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;It says &quot;&lt;strong&gt;if you modify&lt;/strong&gt;&quot;. Does this really mean that the source &lt;em&gt;only&lt;/em&gt; has to be made available if it was modified (assuming that I don’t offer/distribute the application itself, i.e., its binary, at all)? Or am I missing something, maybe somewhere else in the license?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In other words: &lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;I install a Web application licensed under the AGPLv3.0 on my server.&lt;/li&gt;&#xA;&lt;li&gt;I don’t modify this application at all. &lt;/li&gt;&#xA;&lt;li&gt;I allow people to use it over the Web.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;Do I have to offer the source code of this application?&lt;/p&gt;&#xA;" OwnerUserId="138" LastEditorUserId="111" LastEditDate="2015-06-30T08:21:22.517" LastActivityDate="2015-07-02T18:25:20.390" Title="Do I have to offer the source of an AGPL (v3.0) licensed Web app even if I didn’t modify it?" Tags="&lt;licensing&gt;&lt;agpl-3.0&gt;&lt;source-code&gt;" AnswerCount="3" CommentCount="3" />
  <row Id="651" PostTypeId="2" ParentId="645" CreationDate="2015-06-29T19:54:54.607" Score="4" Body="&lt;p&gt;Wikipedia has an &lt;a href=&quot;https://en.wikipedia.org/wiki/Reliability_of_Wikipedia&quot; rel=&quot;nofollow&quot;&gt;entire article on this subject&lt;/a&gt;, including several studies, most famously Giles, J. (2005). &quot;Internet encyclopaedias go head to head: Jimmy Wales' Wikipedia comes close to Britannica in terms of the accuracy of its science entries&quot; published in Nature.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Generally, Wikipedia seems of roughly equal reliability as conventional encyclopedias. &lt;/p&gt;&#xA;" OwnerUserId="97" LastEditorUserId="97" LastEditDate="2015-06-29T20:04:00.177" LastActivityDate="2015-06-29T20:04:00.177" CommentCount="1" />
  <row Id="652" PostTypeId="1" AcceptedAnswerId="653" CreationDate="2015-06-29T20:08:39.890" Score="7" ViewCount="94" Body="&lt;p&gt;Suppose you are working on a large open source project with 20+ people. Suppose one of these people get mad and decide they want to sabotage the entire project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What measures (if any) could be taken to prevent loss in the event of an internal sabotage?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="111" LastEditDate="2015-06-30T08:54:43.373" LastActivityDate="2015-06-30T08:54:43.373" Title="In open source projects, how do you minimize sabotage risks?" Tags="&lt;development&gt;&lt;collaboration&gt;" AnswerCount="1" CommentCount="6" FavoriteCount="2" />
  <row Id="653" PostTypeId="2" ParentId="652" CreationDate="2015-06-29T20:26:02.237" Score="6" Body="&lt;p&gt;This is part of the purpose of version control systems, like git.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When someone makes a new feature, or changes any code at all in fact, they have to &lt;em&gt;commit&lt;/em&gt; it to the project. It's a bit like editing here on Stack Exchange: when you edit your post, an item is created in the post's history showing the changes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If someone sabotages your post (or in this case, project), then you can simply rollback the changes, setting your project back to the state it was in before the change.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The other method is of course backups. If for some reason this disgruntled individual deletes the entire project, backups are your recourse. Taking regular backups means you have a record, kept separately from the project, of the stages of development. You can then simply restore a damaged or deleted project from these backups.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-29T20:26:02.237" CommentCount="3" />
  <row Id="655" PostTypeId="2" ParentId="650" CreationDate="2015-06-29T22:53:35.787" Score="3" Body="&lt;p&gt;Interesting question - even after a few reads of the AGPLv3.0, I do not see where it requires you to make the source code available if you run an unmodified copy of the software on your server.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, the FSF's page about the motivation to use the AGPL, &lt;a href=&quot;https://www.gnu.org/licenses/why-affero-gpl.html&quot; rel=&quot;nofollow&quot;&gt;Why the Affero GPL&lt;/a&gt;, contains the following claim:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If some program on this server is released under the GNU Affero GPL,&#xA;  the server is required to offer the users the corresponding source of&#xA;  that program.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This is embedded in a section about SaaSS, Software as a Service Substitute, which outlines the FSF's view on services that operate on data provided by users, but are outside of their control. The AGPL is said to not address this issue.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In its Basic Permission section, the AGPL states:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You may make, run and propagate covered works that you do not convey,&#xA;  without conditions so long as your license otherwise remains in force.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&quot;Propagate&quot; and &quot;convey&quot; are terms that the FSF has invented to avoid ambiguities with copyright law terms of some jurisdictions. &quot;conveying&quot; software is what actually requires you to make source code available - but a user interaction with the software via a network, as in your question, is explicitly declared as not conveying:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;To &quot;convey&quot; a work means any kind of propagation that enables other&#xA;  parties to make or receive copies. Mere interaction with a user&#xA;  through a computer network, with no transfer of a copy, is not&#xA;  conveying.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So yeah, at this time I am siding with &quot;you do not have to provide the source code&quot;, but this is in spite of the claim that you have to on the FSF's own &quot;Why AGPL&quot; page. I hope someone can point out my error in a comment.&lt;/p&gt;&#xA;" OwnerUserId="83" LastActivityDate="2015-06-29T22:53:35.787" CommentCount="5" />
  <row Id="656" PostTypeId="2" ParentId="647" CreationDate="2015-06-30T01:19:08.237" Score="10" Body="&lt;p&gt;A few topics in security benefit from being closed-source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is not the general case. In cryptography and most of security, &lt;a href=&quot;https://en.wikipedia.org/wiki/Kerckhoffs&amp;#39;s_principle&quot;&gt;Kerckhoff's principle&lt;/a&gt; applies. A system should be secure even if its design is fully public, because the adversary can usually learn the system's design anyway. In cryptography, secrecy is concentrated in a very small part: a key, a password, a nonce… The operations that are performed on these secret values are well-known.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Most of security benefits from being open-source. For example, all recommended cryptographic algorithms are public and have undergone years of scrutiny by experts. For software, note that the benefit of being open source only comes into play if someone actually does review the software. This is rarely done because &lt;a href=&quot;http://opensource.stackexchange.com/questions/390/assessing-potential-security-flaws-in-open-source-software/414#414&quot;&gt;it's expensive&lt;/a&gt;. I invite you to read threads on &lt;a href=&quot;http://security.stackexchange.com/questions/tagged/opensource&quot;&gt;this topic&lt;/a&gt; on &lt;a href=&quot;http://security.stackexchange.com/&quot;&gt;Security Stack Exchange&lt;/a&gt;, such as &lt;a href=&quot;http://security.stackexchange.com/questions/4441/open-source-vs-closed-source-systems&quot;&gt;Open Source vs Closed Source Systems&lt;/a&gt;, &lt;a href=&quot;http://security.stackexchange.com/questions/51648/security-related-code-in-open-source-projects&quot;&gt;Security related code in Open Source projects?&lt;/a&gt;, &lt;a href=&quot;http://security.stackexchange.com/questions/11271/how-are-open-sourced-operating-systems-and-software-kept-secure&quot;&gt;How are open-sourced operating systems and software kept secure?&lt;/a&gt;, etc.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Nonetheless, there are a few specialized domains where closed source is an advantage for security. These are domains where in order to obtain information about the system design, an adversary has to conduct active attacks that run the risk of detection. Generally, in such domains, the design of the system evolves, so while adversaries can eventually gain the knowledge that they seek, by the time they manage to do so, that knowledge becomes obsolete.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, Stack Exchange has measures to combat spam and vote fraud. These measures would not work as well if the detail of how they work was public. For example, it's known that there are filters to block spam, but the details of what makes the system decide that a new user is a spammer and isn't allowed to post are only known to a few Stack Exchange employees. Similarly, it's well-known that there is an automated process to cancel votes between sockpuppets of the same person, but the details of how this works is not public, it is not even known to moderators. In order to learn how to get through, spammers and fraudsters need to carry active probes where they try to post things and see what sticks and what gets shut down. All this probing leaves tracks, which help the defenders make the system more resistant and identity the attackers.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another example is some of the security countermeasures on &lt;a href=&quot;https://en.wikipedia.org/wiki/Smart_card&quot;&gt;smart cards&lt;/a&gt;. Smart cards have to maintain secrecy in a hostile environment where the attacker has physical control over the card (e.g. a credit card thief). They are potentially vulnerable to many types of attacks, including &lt;a href=&quot;https://en.wikipedia.org/wiki/Side-channel_attack&quot;&gt;side channel&lt;/a&gt; leakage and &lt;a href=&quot;https://en.wikipedia.org/wiki/Fault_injection&quot;&gt;fault injection&lt;/a&gt;. Some of the protections on a smart card involve code that erases confidential data if it detects an attack (as well as physical protections such as dissolving part of the card if someone tries to drill a hole in it). These countermeasures work better if the attacker doesn't know exactly what triggers them, so that they'll need to brick many cards before they figure it out. Eventually they will figure it out, but if it takes them a few years and the cards using this technology have expired, the defenders have won.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Both examples are a permanent arms race. Closed source is an advantage only temporarily, for a few years at most. Once ways to break the system are known, the whole design might as well be published. But making the design of these particular subsystems open from the get go would facilitate attacks. Closed source is good to protect a few tricks with expected obsolescence. This doesn't necessarily mean that such systems can't be open-source, but an open-source system would have to be extremely good to compete.&lt;/p&gt;&#xA;" OwnerUserId="60" LastActivityDate="2015-06-30T01:19:08.237" CommentCount="1" />
  <row Id="657" PostTypeId="1" AcceptedAnswerId="743" CreationDate="2015-06-30T01:48:38.483" Score="6" ViewCount="107" Body="&lt;p&gt;What should I do if someone is breaking the terms of my licensed software?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To create a small example for you, I'll take a section out of the &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0.txt&quot;&gt;Apache 2.0 license&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;pre&gt;&lt;code&gt;You may add Your own copyright statement to Your modifications and&#xA;may provide additional or different license terms and conditions&#xA;for use, reproduction, or distribution of Your modifications, or&#xA;for any such Derivative Works as a whole, provided Your use,&#xA;reproduction, and distribution of the Work otherwise complies with&#xA;the conditions stated in this License.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Let's say that the person modifying the source &quot;accidentally&quot; re-licensed work that I had done. &lt;/p&gt;&#xA;" OwnerUserId="144" LastEditorUserId="69" LastEditDate="2015-06-30T01:55:17.800" LastActivityDate="2015-07-01T14:29:23.453" Title="What am I supposed to do if someone is breaking the terms of my licensed software?" Tags="&lt;licensing&gt;&lt;enforcement&gt;&lt;apache-2.0&gt;" AnswerCount="1" CommentCount="2" />
  <row Id="658" PostTypeId="2" ParentId="503" CreationDate="2015-06-30T04:29:03.980" Score="6" Body="&lt;p&gt;If you create your software and you release it under a permissive license first, you can offer that product under a commercial licence later, but you will have a hard time making money because the &quot;free version&quot; will compete with the &quot;paying&quot; version.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I have done this before. I started with a product under the LGPL. This is better than the Apache Software License, because people could use my software in a commercial context, but all improvements added to my software had to be released as LGPL too. This allowed me to improve my software. This obligation to contribute back doesn't exist with the Apache license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Then I changed the license to the AGPL (after an IP review and after all core contributors signed a CLA). I also started offering the software under a commercial license. The license change dates from 2009 and still the old version of my product is one of our main competitors.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Read &lt;a href=&quot;http://opensource.stackexchange.com/questions/88/how-can-large-open-source-projects-be-monetized&quot;&gt;How can large open source projects be monetized?&lt;/a&gt; and &lt;a href=&quot;http://programmers.stackexchange.com/questions/253925/how-to-avoid-being-forked-into-oblivion-by-a-more-powerful-contributor&quot;&gt;How to avoid being forked into oblivion by a more powerful contributor?&lt;/a&gt; for more info. You should also read &lt;a href=&quot;http://zguide.zeromq.org/page:all#header-136&quot;&gt;Eat Me&lt;/a&gt;; it reads like a fun story, but the reality behind it is harsh.&lt;/p&gt;&#xA;" OwnerUserId="27" LastEditorUserId="168" LastEditDate="2015-06-30T07:04:20.623" LastActivityDate="2015-06-30T07:04:20.623" CommentCount="0" />
  <row Id="659" PostTypeId="2" ParentId="287" CreationDate="2015-06-30T04:29:52.173" Score="3" Body="&lt;p&gt;The Creative Commons NonCommercial licenses (&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/4.0/legalcode&quot; rel=&quot;nofollow&quot;&gt;BY-NC&lt;/a&gt; and &lt;a href=&quot;http://creativecommons.org/licenses/by-nc-sa/4.0/legalcode&quot; rel=&quot;nofollow&quot;&gt;BY-NC-SA&lt;/a&gt;) may do what you want, but there are three problems with using them:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://wiki.creativecommons.org/wiki/Frequently_Asked_Questions#Can_I_use_a_Creative_Commons_license_for_software.3F&quot; rel=&quot;nofollow&quot;&gt;They are unsuited for use with software&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;The definition of commercial use is fuzzy, and hosting on a ad-supported site is probably the place where the uncertainty is greatest.&lt;/li&gt;&#xA;&lt;li&gt;The CC-NC licenses are not free/open by anybody's definition (not &lt;a href=&quot;http://opensource.org/docs/definition.html&quot; rel=&quot;nofollow&quot;&gt;OSI&lt;/a&gt;, not &lt;a href=&quot;https://www.debian.org/social_contract#guidelines&quot; rel=&quot;nofollow&quot;&gt;DFSG&lt;/a&gt;, not &lt;a href=&quot;https://www.gnu.org/licenses/license-list.html#NonFreeDocumentationLicenses&quot; rel=&quot;nofollow&quot;&gt;FSF&lt;/a&gt;).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="240" LastActivityDate="2015-06-30T04:29:52.173" CommentCount="0" />
  <row Id="660" PostTypeId="2" ParentId="503" CreationDate="2015-06-30T08:05:48.853" Score="1" Body="&lt;p&gt;Both permissive and copyleft licences can work great, but they give rise to slightly different scenarios. Let's assume you have written an open source project OS, and a commercial fork COM.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the permissive scenario, others are allowed to do more with your work, and you are allowed to do more with your contributors work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In this scenario others can take your project OS, make a closed source fork and sell them for profit. You won't be able to get patches back.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;At the same time, instead of forking your project and releasing their fork as closed source, or under an incompatible license, they could contribute to your project, and you are allowed to take the contributions others make to OS, and merge them in to your closed source fork COM, and sell it for profit.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the copyleft scenario people can make a fork of OS, and this will be by definition copyleft as well. Your project OS can freely merge patches back from those forks. However your project COM can't make use of those.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To mitigate this in part, some organisations have a contributor license agreement (CLA), in which contributors assign their copyright to patches they submit to the project owner. Those projects often only accept contributions if their authors have signed the CLA. This way, you can still make use of patches contributed to OS in COM.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Patches contributed to a fork of OS are still off-limits for COM. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the end in a permissive project it is more likely you can take other people's work and put it in your closed source commercial offerings, but it's also possible people run away with your work and start a competing fork.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In a copyleft project people can't run away with your work and make a closed source offering, but you are less likely you can take other people's work and merge it to your closed source offering.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In both scenarios you can make commercial closed source software with an open source base, but there are different risks and opportunities.&lt;/p&gt;&#xA;" OwnerUserId="97" LastEditorUserId="97" LastEditDate="2015-06-30T08:53:15.993" LastActivityDate="2015-06-30T08:53:15.993" CommentCount="2" />
  <row Id="661" PostTypeId="1" AcceptedAnswerId="662" CreationDate="2015-06-30T08:12:13.207" Score="3" ViewCount="78" Body="&lt;p&gt;In the &lt;a href=&quot;https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html&quot; rel=&quot;nofollow&quot;&gt;GNU General Public License, version 2&lt;/a&gt;, some limits on how you can modify the Program are listed. Point 2.b states that (emphasis mine):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You must cause any work &lt;strong&gt;that you distribute or publish&lt;/strong&gt;, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;As there seem to be no further limitations on how the changes have to be licensed and &lt;a href=&quot;https://www.gnu.org/licenses/old-licenses/gpl-2.0-faq.en.html#GPLRequireSourcePostedPublic&quot; rel=&quot;nofollow&quot;&gt;you are not required to release your modifications&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Can I make changes to a GNU GPL v2 Program that I would not be allowed to distribute or publish provided I don't distribute and/or publish it?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For instance, adding some code coming from an Apache v2 project.&lt;/p&gt;&#xA;" OwnerUserId="168" LastEditorUserId="190" LastEditDate="2015-06-30T10:08:45.113" LastActivityDate="2015-06-30T10:08:45.113" Title="Can I make a derived work of a GPL project and a non GPL project for personal use?" Tags="&lt;licensing&gt;&lt;license-compatibility&gt;&lt;gpl&gt;&lt;gpl-2&gt;&lt;personal-use&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="662" PostTypeId="2" ParentId="661" CreationDate="2015-06-30T08:19:30.690" Score="4" Body="&lt;p&gt;Yes. It is always stated, that if you change an GPLed program but use it only internal without releasing any distribution, you have not to put your changes under GPL. That is covered by the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-faq.html#InternalDistribution&quot;&gt;GPL-FAQ&lt;/a&gt;, a question on &lt;a href=&quot;http://stackoverflow.com/q/1492687/21005&quot;&gt;Stackoverflow&lt;/a&gt; and a question on &lt;a href=&quot;http://programmers.stackexchange.com/q/100499/7654&quot;&gt;programmers.SE&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-06-30T08:19:30.690" CommentCount="0" />
  <row Id="663" PostTypeId="2" ParentId="650" CreationDate="2015-06-30T08:30:00.033" Score="3" Body="&lt;p&gt;This is a short explanation by a lawyer about the AGPL in &lt;a href=&quot;https://www.youtube.com/watch?v=NCwhEWEPV-E&quot; rel=&quot;nofollow&quot;&gt;a 15-minute video&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Software that &lt;em&gt;is based on&lt;/em&gt;/&lt;em&gt;is linked with&lt;/em&gt;/&lt;em&gt;uses&lt;/em&gt; an AGPL library is considered software that &lt;em&gt;modifies&lt;/em&gt; the software. It doesn't matter if you put the extra code inside the jar of the library or in a separate jar.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you just run AGPL software, you don't have to accept the license. However, if you integrate AGPL software in your own applications, then you do more than just running it, and other rules apply. Creating a work &quot;based on&quot; is considered being identical to &quot;modification.&quot; Linking your software to an AGPL library is considered modification. Modification is interpreted quite broadly. The AGPL is different from the GPL in the sense that distribution isn't limited to physical distribution. Offering a service that uses AGPL software as a service is also considered as distribution.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is implied in the text of the AGPL. It's not phrased explicitly, which may cause you to interpret it to your own advantage, but that doesn't count. What counts is how a court interprets the license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you really want to be sure, contact the original author of the library and ask him what his intention was when he chose the AGPL.&lt;/p&gt;&#xA;" OwnerUserId="27" LastEditorUserId="27" LastEditDate="2015-06-30T11:51:52.497" LastActivityDate="2015-06-30T11:51:52.497" CommentCount="3" />
  <row Id="664" PostTypeId="1" CreationDate="2015-06-30T08:54:52.020" Score="7" ViewCount="43" Body="&lt;p&gt;Is there any licence that can be used for artistic projects (images, music, etc.) that are similar to CC-BY-SA, but with the additional constraint that not only the resulting work should be made available under the CC-BY-SA, but also the underlying project files that were used to generate the resulting derivate work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So for example if I have an image file I've made using GIMP, and someone modifies it in any application (like Photoshop), I would also want that they publish these project files (.psd) as well along with their work.&lt;/p&gt;&#xA;" OwnerUserId="180" LastEditorUserId="190" LastEditDate="2015-06-30T09:13:01.143" LastActivityDate="2015-06-30T18:06:07.477" Title="Is there a share-alike licence for media which specifies that the project files must be published as well as the finished media?" Tags="&lt;copyleft&gt;&lt;license-recommendation&gt;&lt;media&gt;&lt;source-files&gt;" AnswerCount="1" CommentCount="2" />
  <row Id="665" PostTypeId="1" CreationDate="2015-06-30T09:10:45.670" Score="9" ViewCount="53" Body="&lt;p&gt;Copyleft and Share-Alike are two very similar types of licences. Here is how Wikipedia defines them:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Copyleft (a play of the word copyright) is the practice of offering people the right to freely distribute copies and modified versions of a work with the stipulation that the same rights be preserved in derivative works down the line. (&lt;a href=&quot;https://en.wikipedia.org/wiki/Copyleft&quot;&gt;Source&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Share-alike is a copyright licensing term, originally used by the Creative Commons project, to describe works or licences that require copies or adaptations of the work to be released under the same or similar licence as the original. Copyleft licences are free content or free software licences with a share-alike condition. (&lt;a href=&quot;https://en.wikipedia.org/wiki/Share-alike&quot;&gt;Source&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Are there any meaningful distinctions between these concepts, or is the only real difference their heritage and most common uses (software vs media)?&lt;/p&gt;&#xA;" OwnerUserId="190" LastActivityDate="2015-06-30T12:24:16.073" Title="Are Copyleft and Share-Alike synonyms?" Tags="&lt;copyleft&gt;&lt;terminology&gt;&lt;share-alike&gt;" AnswerCount="1" CommentCount="0" FavoriteCount="3" />
  <row Id="666" PostTypeId="1" CreationDate="2015-06-30T09:35:11.557" Score="5" ViewCount="51" Body="&lt;p&gt;Many FOSS projects start out without a &lt;a href=&quot;https://en.wikipedia.org/wiki/Contributor_License_Agreement&quot;&gt;Contributor License Agreement&lt;/a&gt; (CLA). Many, if they become large and successful, will want to transition to system based on CLAs. But what about if they can't track down all of the old contributors? I can think of three possibilities:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;They can continue without the contributors signing the CLA and proceed to change the license etc with the hope that the contributors will be found in the future&lt;/li&gt;&#xA;&lt;li&gt;They can rewrite all code contributed by them&lt;/li&gt;&#xA;&lt;li&gt;They can keep the existing license until all contributors have signed their CLAs&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;Is the first option possible or do such projects need to choose between the second and third?&lt;/p&gt;&#xA;" OwnerUserId="190" LastActivityDate="2015-06-30T11:42:09.210" Title="What can you do if you can't track down all old contributors to sign a CLA?" Tags="&lt;project-management&gt;&lt;contributor-agreements&gt;" AnswerCount="1" CommentCount="1" FavoriteCount="1" />
  <row Id="667" PostTypeId="2" ParentId="666" CreationDate="2015-06-30T09:55:28.380" Score="5" Body="&lt;p&gt;The first option is possible, but with a risk. The risk is, one of the old contributors you couldn't find anymore (or his inheritor) comes out of the hiding and sues the project for violating his copyrights. If you assume this risk is small you could proceed with option 1. Option 2 and 3 are obviously less risky and probably preferable though.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;EDIT: As Philipp correctly points out in his comment, you should include in your risk-analysis that the risks of #1 are kept, even after many years. It is known that a copyright-holder may be OK with something, but if he dies his inheritor might have another opinion. It isn't kept until eternity, but 70 years after authors death (like most countries have, Berne conventions demands 50 years after authors death) feel like an eternity. Also all forks of your software get the same risk, if they don't remove the offending code. This might lead to lesser forks and therefore some see this hurdle to forking as a violation of open source principles.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-30T11:42:09.210" LastActivityDate="2015-06-30T11:42:09.210" CommentCount="1" />
  <row Id="668" PostTypeId="1" CreationDate="2015-06-30T10:17:01.857" Score="8" ViewCount="37" Body="&lt;p&gt;Many FOSS projects require &lt;a href=&quot;https://en.wikipedia.org/wiki/Contributor_License_Agreement&quot;&gt;Contributor License Agreements&lt;/a&gt; (CLA) for all contributors. Even though we have many common FOSS software licenses, it seems that these projects have to create their own CLAs.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Are there any standard/generic/reusable CLAs?&lt;/p&gt;&#xA;" OwnerUserId="190" LastActivityDate="2015-06-30T13:17:14.113" Title="Are there reusable CLAs?" Tags="&lt;contributor-agreements&gt;" AnswerCount="1" CommentCount="0" FavoriteCount="1" />
  <row Id="669" PostTypeId="5" CreationDate="2015-06-30T10:49:31.250" Score="0" Body="&lt;p&gt;Re-licensing is the concept of changing or adding a license to a project which has previously been licensed under any license, including previous versions of the newer license, or which have previously been protected by copyright.&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-07-22T07:55:52.317" LastActivityDate="2015-07-22T07:55:52.317" CommentCount="0" />
  <row Id="670" PostTypeId="4" CreationDate="2015-06-30T10:49:31.250" Score="0" Body="Questions about changing the license of a work which has already been published under a different license (or published under all-rights-reserved copyright)" OwnerUserId="190" LastEditorUserId="190" LastEditDate="2015-06-30T13:38:20.360" LastActivityDate="2015-06-30T13:38:20.360" CommentCount="0" />
  <row Id="671" PostTypeId="5" CreationDate="2015-06-30T10:50:26.060" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-30T10:50:26.060" LastActivityDate="2015-06-30T10:50:26.060" CommentCount="0" />
  <row Id="672" PostTypeId="4" CreationDate="2015-06-30T10:50:26.060" Score="0" Body="License compatibility is the comparison of two or more licenses to determine if certain usages and actions can be made. Use this tag if the question would like to determine the compatibility of licenses, or their individual clauses." OwnerUserId="190" LastEditorUserId="69" LastEditDate="2015-07-22T07:41:38.713" LastActivityDate="2015-07-22T07:41:38.713" CommentCount="0" />
  <row Id="673" PostTypeId="5" CreationDate="2015-06-30T10:51:07.297" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-30T10:51:07.297" LastActivityDate="2015-06-30T10:51:07.297" CommentCount="0" />
  <row Id="674" PostTypeId="4" CreationDate="2015-06-30T10:51:07.297" Score="0" Body="Questions about the enforcement of a license; or what to do when someone violates the terms of a license" OwnerUserId="190" LastEditorUserId="190" LastEditDate="2015-06-30T11:36:41.467" LastActivityDate="2015-06-30T11:36:41.467" CommentCount="0" />
  <row Id="675" PostTypeId="5" CreationDate="2015-06-30T10:52:39.993" Score="0" Body="&lt;p&gt;Many open source projects attract contributors who aren't in the initial or core project team. It is generally advisable, when taking contributions from these people, to cover yourself legally using a contributor agreement, which sets out the way in which the contributor provides their contribution, and the rights granted or reserved.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are two main types of contributor agreements: license agreements, where the contributor agrees to permanently and irrevocably grant you a license to use their work; and copyright transfer agreements, where the contributor's copyright is transferred to the person or entity running the project.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-07-07T15:42:35.520" LastActivityDate="2015-07-07T15:42:35.520" CommentCount="0" />
  <row Id="676" PostTypeId="4" CreationDate="2015-06-30T10:52:39.993" Score="0" Body="For questions about the legal documents covering contributions from outside a project's core team." OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-07-07T15:40:56.653" LastActivityDate="2015-07-07T15:40:56.653" CommentCount="0" />
  <row Id="677" PostTypeId="5" CreationDate="2015-06-30T10:53:22.633" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-30T10:53:22.633" LastActivityDate="2015-06-30T10:53:22.633" CommentCount="0" />
  <row Id="678" PostTypeId="4" CreationDate="2015-06-30T10:53:22.633" Score="0" Body="Questions asking for license recommendations for a specific situation" OwnerUserId="190" LastEditorUserId="190" LastEditDate="2015-06-30T11:48:34.117" LastActivityDate="2015-06-30T11:48:34.117" CommentCount="0" />
  <row Id="679" PostTypeId="5" CreationDate="2015-06-30T10:55:54.817" Score="0" Body="&lt;p&gt;A permissive license is a license that tries to give end-users as many rights as practicable for the author. Such licenses include the MIT license, BSD licenses, and Apache. Unlike a copyleft license such as the GNU GPL, a permissive license imposes less restrictions on the redistribution of derivative works.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You should use this tag when your question pertains to one of these licenses. Also consider using another tag more specifically related to your question: if your question is about the licenses &lt;em&gt;themselves&lt;/em&gt;, consider &lt;a href=&quot;/questions/tagged/licensing&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &amp;#39;licensing&amp;#39;&quot; rel=&quot;tag&quot;&gt;licensing&lt;/a&gt;; if it's asking for a recommendation, use &lt;a href=&quot;/questions/tagged/license-recommendation&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &amp;#39;license-recommendation&amp;#39;&quot; rel=&quot;tag&quot;&gt;license-recommendation&lt;/a&gt;. Remember we also have tags specific to each license, so use these as appropriate.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-07-12T13:11:10.463" LastActivityDate="2015-07-12T13:11:10.463" CommentCount="0" />
  <row Id="680" PostTypeId="4" CreationDate="2015-06-30T10:55:54.817" Score="0" Body="For questions about permissive licenses, such as Apache or MIT. Note: this does not include public domain or CC0. Use [public-domain] instead." OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-07-12T13:11:19.590" LastActivityDate="2015-07-12T13:11:19.590" CommentCount="0" />
  <row Id="681" PostTypeId="5" CreationDate="2015-06-30T11:05:47.733" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-30T11:05:47.733" LastActivityDate="2015-06-30T11:05:47.733" CommentCount="0" />
  <row Id="682" PostTypeId="4" CreationDate="2015-06-30T11:05:47.733" Score="0" Body="Questions about the history of open projects, philosophies, and coming to being." OwnerUserId="190" LastEditorUserId="69" LastEditDate="2015-07-04T21:52:38.967" LastActivityDate="2015-07-04T21:52:38.967" CommentCount="0" />
  <row Id="683" PostTypeId="5" CreationDate="2015-06-30T11:08:34.340" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-30T11:08:34.340" LastActivityDate="2015-06-30T11:08:34.340" CommentCount="0" />
  <row Id="684" PostTypeId="4" CreationDate="2015-06-30T11:08:34.340" Score="0" Body="For questions about files containing the text of a license distributed alongside or within an open project." OwnerUserId="190" LastEditorUserId="69" LastEditDate="2015-07-22T16:38:12.357" LastActivityDate="2015-07-22T16:38:12.357" CommentCount="0" />
  <row Id="685" PostTypeId="5" CreationDate="2015-06-30T11:10:44.647" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-30T11:10:44.647" LastActivityDate="2015-06-30T11:10:44.647" CommentCount="0" />
  <row Id="686" PostTypeId="4" CreationDate="2015-06-30T11:10:44.647" Score="0" Body="Code which has not been published under a license and can be used only under regular copyright law." OwnerUserId="190" LastEditorUserId="69" LastEditDate="2015-07-04T21:52:48.743" LastActivityDate="2015-07-04T21:52:48.743" CommentCount="0" />
  <row Id="687" PostTypeId="5" CreationDate="2015-06-30T11:11:21.143" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-30T11:11:21.143" LastActivityDate="2015-06-30T11:11:21.143" CommentCount="0" />
  <row Id="688" PostTypeId="4" CreationDate="2015-06-30T11:11:21.143" Score="0" Body="Intellectual Property is a superset of copyright, and also includes patents, trademarks and trade secrets." OwnerUserId="190" LastEditorUserId="97" LastEditDate="2015-08-05T13:27:16.090" LastActivityDate="2015-08-05T13:27:16.090" CommentCount="0" />
  <row Id="689" PostTypeId="5" CreationDate="2015-06-30T11:12:24.003" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-30T11:12:24.003" LastActivityDate="2015-06-30T11:12:24.003" CommentCount="0" />
  <row Id="690" PostTypeId="4" CreationDate="2015-06-30T11:12:24.003" Score="0" Body="For questions about ownership of any component within an open project, including but not limited to, rights, intellectual property, and copyright." OwnerUserId="190" LastEditorUserId="69" LastEditDate="2015-07-22T07:42:20.523" LastActivityDate="2015-07-22T07:42:20.523" CommentCount="0" />
  <row Id="691" PostTypeId="5" CreationDate="2015-06-30T11:13:41.603" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-30T11:13:41.603" LastActivityDate="2015-06-30T11:13:41.603" CommentCount="0" />
  <row Id="692" PostTypeId="4" CreationDate="2015-06-30T11:13:41.603" Score="0" Body="Works can be released under two (or more) licenses, which may or may not be compatible, giving recipients the choice of which terms they will abide by" OwnerUserId="190" LastEditorUserId="190" LastEditDate="2015-06-30T11:48:30.587" LastActivityDate="2015-06-30T11:48:30.587" CommentCount="0" />
  <row Id="693" PostTypeId="5" CreationDate="2015-06-30T11:15:17.767" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-30T11:15:17.767" LastActivityDate="2015-06-30T11:15:17.767" CommentCount="0" />
  <row Id="694" PostTypeId="4" CreationDate="2015-06-30T11:15:17.767" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-30T11:15:17.767" LastActivityDate="2015-06-30T11:15:17.767" CommentCount="0" />
  <row Id="695" PostTypeId="5" CreationDate="2015-06-30T11:16:51.950" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-30T11:16:51.950" LastActivityDate="2015-06-30T11:16:51.950" CommentCount="0" />
  <row Id="696" PostTypeId="4" CreationDate="2015-06-30T11:16:51.950" Score="0" Body="Questions for the retention and building of community audiences, as well as the contributor and developer communities, that concern open projects." OwnerUserId="98" LastEditorUserId="69" LastEditDate="2015-07-04T21:52:31.920" LastActivityDate="2015-07-04T21:52:31.920" CommentCount="0" />
  <row Id="697" PostTypeId="5" CreationDate="2015-06-30T12:18:16.627" Score="0" Body="&lt;p&gt;The development of open projects must take into account a number of things, including financial and human resources.&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-07-21T17:46:17.797" LastActivityDate="2015-07-21T17:46:17.797" CommentCount="0" />
  <row Id="698" PostTypeId="4" CreationDate="2015-06-30T12:18:16.627" Score="0" Body="Use this tag for questions regarding the development of open projects." OwnerUserId="55" LastEditorUserId="69" LastEditDate="2015-07-21T17:19:22.870" LastActivityDate="2015-07-21T17:19:22.870" CommentCount="0" />
  <row Id="699" PostTypeId="2" ParentId="665" CreationDate="2015-06-30T12:24:16.073" Score="4" Body="&lt;p&gt;They are synonyms, to the extent where copyleft is considered to be a large subcategory of ShareAlike. There isn't much distinction. Creative Commons is the one that coined the term, ShareAlike.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Both practices are seen throughout: copyleft is present in many things, from software to literature, and the same is for ShareAlike. To understand why one practice is mostly applied in a field, rather than the other, would be to look at the nature of the licenses, and the organizations that foster them. Creative Commons is used much more for creative works, and as they coined the term ShareAlike, it's understandable that this would be seen more in creative works. Likewise can be said for Copyleft, where it was first seen in the GNU public license. Therefore, it was seen more often in Information Technology sectors.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There isn't really much difference, and their varying applications are not a result of the ideologies themselves.&lt;/p&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-06-30T12:24:16.073" CommentCount="0" />
  <row Id="700" PostTypeId="1" AcceptedAnswerId="713" CreationDate="2015-06-30T13:03:08.610" Score="4" ViewCount="69" Body="&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Freeware&quot; rel=&quot;nofollow&quot;&gt;Freeware&lt;/a&gt; is software that is provided &lt;em&gt;gratis&lt;/em&gt; i.e. without cost, but without source or the freedoms like modification and redistributing those modifications.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If freeware is being actively distributed by its authors, do users have the right to reproduce and redistribute without changes? For example, do software download websites have the right to host/mirror freeware downloads, or is this done with permission from the authors (whether implicit or explicit)? If the author wishes to cease distribution, are they within their rights to ask redistributors to also cease?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;By contrast, free/open licenses grant the irrevocable right to redistribution. Even non-free licenses like CC-BY-ND still allow redistribution, provided that no modifications or derivations are made. Without such a license, is redistribution still allowed?&lt;/p&gt;&#xA;" OwnerUserId="175" LastEditorUserId="175" LastEditDate="2015-07-02T01:51:04.800" LastActivityDate="2015-07-02T01:51:04.800" Title="Can freeware be redistributed without changes?" Tags="&lt;law&gt;&lt;freeware&gt;&lt;redistribution&gt;" AnswerCount="2" CommentCount="5" ClosedDate="2015-07-02T08:16:37.117" />
  <row Id="701" PostTypeId="5" CreationDate="2015-06-30T13:05:29.300" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-06-30T13:05:29.300" LastActivityDate="2015-06-30T13:05:29.300" CommentCount="0" />
  <row Id="702" PostTypeId="4" CreationDate="2015-06-30T13:05:29.300" Score="0" Body="Questions about how to correctly attribute the authors of works in derived works" OwnerUserId="190" LastEditorUserId="190" LastEditDate="2015-06-30T15:09:03.367" LastActivityDate="2015-06-30T15:09:03.367" CommentCount="0" />
  <row Id="703" PostTypeId="2" ParentId="668" CreationDate="2015-06-30T13:17:14.113" Score="5" Body="&lt;p&gt;From &lt;a href=&quot;http://opensource.org/faq#contributor-agreements&quot;&gt;Opensource FAQ&lt;/a&gt;:-&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;For more about contributor agreements in general, and some examples, see &lt;a href=&quot;http://wiki.civiccommons.org/Contributor_Agreements/&quot;&gt;civiccommons.org/Contributor_Agreements&lt;/a&gt;. See also the &lt;a href=&quot;http://harmonyagreements.org&quot;&gt;Project Harmony&lt;/a&gt;, &quot;...a community-centered group focused on contributor agreements for free and open source software (FOSS).&quot;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;At &lt;a href=&quot;http://wiki.civiccommons.org/Contributor_Agreements/#how-to-accept-code-and-documentation-contributions-legally&quot;&gt;How to Accept Code and Documentation Contributions Legally&lt;/a&gt; you can find &lt;strong&gt;CLA examples&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;You can get &lt;a href=&quot;http://harmonyagreements.org/agreements.html&quot;&gt;Harmony Contributor Agreement Templates&lt;/a&gt; in odt, html or pdf format. Or from &lt;a href=&quot;http://selector.harmonyagreements.org/&quot;&gt;Agreement Selector&lt;/a&gt; you can preview and get Example CLAs&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="296" LastActivityDate="2015-06-30T13:17:14.113" CommentCount="0" />
  <row Id="704" PostTypeId="2" ParentId="700" CreationDate="2015-06-30T13:19:39.613" Score="1" Body="&lt;p&gt;As freeware never got defined as a term like free software or open source. The common usage always includes that it is free of charge. That doesn't include that it can be downloaded from somewhere else except the &quot;official&quot; sources. So it depends on the product in question, how it turns out.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But in practice, I cannot name one case (but Stephen Kitt can, look at the comments), in which redistribution for free is restricted. I would look for the license or a statement of the author in any case before mirroring, just to be on the safe side.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-06-30T14:51:32.633" LastActivityDate="2015-06-30T14:51:32.633" CommentCount="2" />
  <row Id="705" PostTypeId="2" ParentId="500" CreationDate="2015-06-30T13:34:59.770" Score="1" Body="&lt;p&gt;From &lt;a href=&quot;http://opensource.org/faq#copying-and-identity&quot; rel=&quot;nofollow&quot;&gt;OSI FAQ&lt;/a&gt;:-&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Does Open Source mean anybody else can use my name and logo?&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;No, at least not any more than they could otherwise. Open Source is about software source code, not about identity. That is, letting people use your code under an Open Source license is not the same as letting them use your trademarks or other identifying attributes, except insofar as they would be permitted to anyway (for example, in &lt;a href=&quot;http://en.wikipedia.org/wiki/Nominative_use&quot; rel=&quot;nofollow&quot;&gt;nominative use&lt;/a&gt; doctrine). There are many companies and other organizations that release open source code while exercising tight control over their trademarks.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Trademarks and other marks of attribution are primarily about preventing public confusion over identity and provenance, and therefore trademark regulation is useful in Open Source software in the same way it is useful generally.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="296" LastActivityDate="2015-06-30T13:34:59.770" CommentCount="0" />
  <row Id="706" PostTypeId="2" ParentId="584" CreationDate="2015-06-30T13:49:34.140" Score="6" Body="&lt;p&gt;Perhaps this wasn't your intention in the hypothetical, but copyright doesn't really enter the picture here. That is, it's not the &lt;em&gt;glass&lt;/em&gt; itself that is under copyright, it's the &lt;em&gt;glass design&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Recall that copyright gives authors exclusive rights on the &lt;em&gt;reproduction&lt;/em&gt; and &lt;em&gt;distribution&lt;/em&gt; of creative works. Once those glasses have been sold to you (i.e. a transfer of ownership, as opposed to a license to use those glasses), the copyright holders can no longer dictate how you use that glass. For example, according to the &lt;a href=&quot;https://en.wikipedia.org/wiki/First-sale_doctrine&quot;&gt;first-sale doctrine&lt;/a&gt;, you can then resell, rent or destroy those glasses with impunity.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So when you serve open cola in a glass of closed-source design, you are combining an open source work with something you own, so there are no problems.&lt;/p&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-06-30T13:49:34.140" CommentCount="1" />
  <row Id="707" PostTypeId="1" AcceptedAnswerId="709" CreationDate="2015-06-30T13:55:45.097" Score="13" ViewCount="123" Body="&lt;p&gt;Last year, I participated in a Birds of a Feather panel discussion at &lt;a href=&quot;http://www.devoxx.com/&quot;&gt;Devoxx&lt;/a&gt;. During this panel discussion, David Blevins explained:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&quot;We have this fairytale idea that open source is an infinite resource, but it's not,&quot; Blevins said. An approach that was suggested is for developers to approach their organization's CTO and say to them: &quot;Let's outsource all our software development to people we don't know&quot; and then, when the CTO looks surprised and annoyed at the suggestion, say: &quot;That's what we're doing already, shouldn't we get to know the organizations behind the software we're using?&quot;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Source: &lt;a href=&quot;http://www.theserverside.com/news/2240234582/Reflecting-on-open-source-software-Java-9-and-startup-strategies-at-Devoxx-2014&quot;&gt;Devoxx blog by Geertjan Wielenga&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The panel discussion was inspired by the Heartbleed disaster, where the person who introduced the bug accidentally &lt;a href=&quot;http://www.smh.com.au/it-pro/security-it/man-who-introduced-serious-heartbleed-security-flaw-denies-he-inserted-it-deliberately-20140410-zqta1.html&quot;&gt;had to defend himself against the allegation that he introduced the bug intenionally&lt;/a&gt;. As it turned out, the piece of code that caused the problem was submitted on New Year's Eve. Another problem related to Heartbleed, was that the OpenSSL developers didn't make sufficient money to support their product:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&quot;this team has a reported budget for all of their work of less than a million dollars, and through the course of this week —which you'd think would be a fairly important week for them— they have received $841 of donations. Which is sad. There's a section on the site here that says, if you give more than, I think, it's $20,000, we'll put your logo on our home page. There are no logos. No-one is giving these guys money.&quot;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Source: &lt;a href=&quot;http://www.zdnet.com/article/heartbleed-soul-search-regulation-proposed-for-critical-crypto-code/&quot;&gt;http://www.zdnet.com/article/heartbleed-soul-search-regulation-proposed-for-critical-crypto-code/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Neither did they get sufficient support in general:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Unfortunately, despite very wide distribution and use by millions of users, OpenSSL does not have adequate support. In spite of its many users, there are very few who actively participate in the project.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Source: &lt;a href=&quot;http://www.theregister.co.uk/2014/04/11/openssl_heartbleed_robin_seggelmann/&quot;&gt;Bloody nose for open-source bleeding hearts&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The OpenSSL had to take all kinds of jobs and the software suffered from their lack of time, leading to... Heartbleed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The response from the community was strange: large corporations suddenly started giving money (a fraction of the money they made by using OpenSSL), but... what about all the other open source projects they were using? I'm pretty sure there are other projects and developers that experience the same problem the OpenSSL developers had and that deserve financial support, but nobody cares about them.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This brings me to the question: isn't there a risk that every one will end up being an open source user and nobody will continue producing open source of companies do not pay for their use of open source software?&lt;/p&gt;&#xA;" OwnerUserId="27" LastEditorUserId="190" LastEditDate="2015-07-03T23:10:21.477" LastActivityDate="2015-07-14T20:25:05.237" Title="Is the capacity of open source developers an infinite resource?" Tags="&lt;philosophy&gt;&lt;ethics&gt;" AnswerCount="1" CommentCount="14" FavoriteCount="5" />
  <row Id="708" PostTypeId="2" ParentId="509" CreationDate="2015-06-30T13:56:16.757" Score="5" Body="&lt;p&gt;This model exists as a Creative Commons license, although not as a software license, as far as I know. It's the &lt;a href=&quot;http://creativecommons.org/licenses/by-nc-sa/4.0/&quot;&gt;Attribution-NonCommercial-ShareAlike&lt;/a&gt;-License.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You could still, as the original copyright holder, write your own license that allows redistribution under the same license, but no commercial uses. It would grant almost the same rights like an Open Source license, but it wouldn't be termed Open Source by either the FSF or the OSI.&lt;/p&gt;&#xA;" OwnerUserId="255" LastActivityDate="2015-06-30T13:56:16.757" CommentCount="1" />
  <row Id="709" PostTypeId="2" ParentId="707" CreationDate="2015-06-30T14:32:54.763" Score="10" Body="&lt;p&gt;You're not really saying open source is a finite resource (something I wouldn't agree with) but that open source developers are a finite resource. And yes, obviously the community can only do that much. It's pretty obvious that paid developers can do much more than people doing stuff in their spare time. A paid developer can work 8 hours a day, five days a week on a project. An unpaid developer has a few hours a day (if even an hour at all) and cannot find time for the project every day of the week. Besides this being a lot less time, the time is partitioned with other tasks (filling the refrigerator, making meals, calling insurance or mechanics, getting the kid from school, ...) and the focus is a lot worse than in an work environment. So yes, we can't expect volunteers to outdo commercial development in every aspect.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I think there are two possible solutions here:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;As you suggest companies should pay more developers to work on open source or even better fund open source.&lt;/li&gt;&#xA;&lt;li&gt;The communities take tasks they can handle and reduce the workload by concentrating on the important. That includes we shouldn't expect everything from open source software, but only clearly focused core features.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;Both points can be combined for better results.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;By the way, the dilemma you describe is called the &lt;a href=&quot;https://en.wikipedia.org/wiki/Tragedy_of_the_commons&quot; rel=&quot;nofollow&quot;&gt;tragedy of the commons&lt;/a&gt;. The commons in this case are the developers willing to work in their spare time. Luckily the tragedy of the commons in classic sense does not completely apply, as the developers in question are humans that can decide which tasks to do, and which not.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-14T20:25:05.237" LastActivityDate="2015-07-14T20:25:05.237" CommentCount="7" />
  <row Id="710" PostTypeId="1" AcceptedAnswerId="715" CreationDate="2015-06-30T15:07:08.600" Score="4" ViewCount="55" Body="&lt;p&gt;Suppose I have a website. This website is an educational site and I am releasing it under [insert license here].&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Assuming I have the license at the bottom of the page, is there any need to put a popup that gets users to agree to the license? &lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-06-30T15:15:33.053" LastActivityDate="2015-06-30T18:00:27.530" Title="Do I need to make my users agree to a license?" Tags="&lt;licensing&gt;&lt;development&gt;" AnswerCount="3" CommentCount="5" />
  <row Id="711" PostTypeId="2" ParentId="710" CreationDate="2015-06-30T15:14:55.120" Score="1" Body="&lt;p&gt;These are normally rectified through a Terms of Use.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Terms of Use is self-explanatory. If you would like to use the said product/service, you must abide by these instructions. In your terms of use, you can have a clause such as:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;By using this site, you agree to [such and such] license&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-06-30T15:14:55.120" CommentCount="2" />
  <row Id="712" PostTypeId="2" ParentId="710" CreationDate="2015-06-30T15:50:27.550" Score="9" Body="&lt;p&gt;An explicit agreement is only needed when you need the user to relinquish any rights they would usually have.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Open source licenses are usually not designed to take rights away from the user they already have. They give them rights they would usually not have, namely the right to modify and redistribute. When the user does not agree to your license, then &quot;all rights reserved&quot; applies and they are not allowed to copy it at all.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So to merely &lt;strong&gt;look at your website&lt;/strong&gt;, you do not need to bother the users with your license. You giving them the right to view the website is already implied by you putting it online on a public webserver without any access control in place.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, when you want users to &lt;strong&gt;submit content&lt;/strong&gt; under your preferred license, you need to make them aware of your license terms, because they are giving up certain rights to their work. Forcing them to confirm that they understood that &quot;all your contribution will be licensed under [LICENSE]&quot; is important to avoid any misunderstandings.&lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-06-30T15:55:40.340" LastActivityDate="2015-06-30T15:55:40.340" CommentCount="0" />
  <row Id="713" PostTypeId="2" ParentId="700" CreationDate="2015-06-30T16:02:00.443" Score="3" Body="&lt;p&gt;The term &quot;Freeware&quot; is not well-defined. Some authors are OK with people redistributing their work unchanged, others are not. Check the license restrictions of the work in question.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Possible reasons why authors would not want people to redistribute their software:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;They offer the software for free download only to draw attention to their website and any other content it has (ads, for example).&lt;/li&gt;&#xA;&lt;li&gt;They want to make sure that any copies which are offered are indeed unchanged and not infected with malware. Sure, doing that would be a breach of the &quot;unchanged&quot; restriction, but when you can find copies of the software everywhere it gets hard to make sure that every single website which offers it plays fair.&lt;/li&gt;&#xA;&lt;li&gt;They want to have the power to stop distribution at any time for whatever reason. Even when the license conditions do allow them to revoke the permission for distribution, enforcing this quickly when the software is already widely distributed is a logistic problem because all distributors must be notified and must be cooperative.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-06-30T16:14:07.097" LastActivityDate="2015-06-30T16:14:07.097" CommentCount="0" />
  <row Id="714" PostTypeId="1" CreationDate="2015-06-30T17:59:27.383" Score="5" ViewCount="29" Body="&lt;p&gt;According to this &lt;a href=&quot;https://en.wikipedia.org/wiki/Contributor_License_Agreement#KDE&quot;&gt;wikipedia page&lt;/a&gt;, KDE uses Free Software Foundation Europe's Fiduciary Licence Agreement, which assigns the copyright to KDE e.V.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The following quote confused me:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;However, it is optional and every contributor is allowed not to assign their copyright to KDE e.V.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;How does KDE remain free/libre software if some contributors withhold their copyright?&lt;/p&gt;&#xA;" OwnerUserId="37" LastActivityDate="2015-06-30T18:47:31.920" Title="How does the optional Fiduciary Licence Agreement for KDE allow it to stay free/libre software?" Tags="&lt;contributor-agreements&gt;" AnswerCount="2" CommentCount="0" />
  <row Id="715" PostTypeId="2" ParentId="710" CreationDate="2015-06-30T18:00:27.530" Score="2" Body="&lt;p&gt;It's not at all necessary to simply use your website. Look at it this way: if you &lt;em&gt;didn't&lt;/em&gt; have a license, then the work on the site would be copyrighted by you with no rights for other people. Adding a license gives other people some rights - is it &lt;em&gt;really&lt;/em&gt; necessary to say &quot;hey, do you agree to me giving you more rights?&quot;? You can just do it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, if you accept work from other people to include in your website, it &lt;em&gt;is&lt;/em&gt; necessary, because you'd be taking some of their rights away (the right to control distribution and licensing). In this case, you need their explicit agreement.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-30T18:00:27.530" CommentCount="0" />
  <row Id="716" PostTypeId="2" ParentId="664" CreationDate="2015-06-30T18:06:07.477" Score="3" Body="&lt;p&gt;If you are willing to publish your GIMP files along with the resulting image, you can use the GPL license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The GPL requires that sources are made available along with a copyrighted work and that requirement carries over to derived works.&lt;br&gt;&#xA;&quot;Sources&quot; is defined in the GPL license as &quot;the preferred format for making modifications,&quot; which exactly corresponds to the .xcf/.psd files used by GIMP/Photoshop.&lt;/p&gt;&#xA;" OwnerUserId="258" LastActivityDate="2015-06-30T18:06:07.477" CommentCount="8" />
  <row Id="717" PostTypeId="1" AcceptedAnswerId="721" CreationDate="2015-06-30T18:06:52.390" Score="10" ViewCount="41" Body="&lt;p&gt;According to this &lt;a href=&quot;https://en.wikipedia.org/wiki/Contributor_License_Agreement#Canonical&quot;&gt;wikipedia page&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;As of August 2011, Canonical is requesting contributions be licenced under a Harmony Contribution Licence Agreement, rather than the copyright being assigned to Canonical.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This would appear to put contributors in a better position, being able to maintain the copyright of their contributions. Are there still any drawbacks? Does the contributor lose any rights with the &lt;a href=&quot;http://www.harmonyagreements.org/docs/ha-cla-i.html&quot;&gt;Harmony agreement&lt;/a&gt; that they would have kept when contributing to a project without a Contributor License Agreement?&lt;/p&gt;&#xA;" OwnerUserId="37" LastEditorUserId="98" LastEditDate="2015-06-30T18:20:01.803" LastActivityDate="2015-06-30T18:27:10.703" Title="Do I lose any rights with Canonical's Harmony CLA?" Tags="&lt;contributor-agreements&gt;" AnswerCount="1" CommentCount="0" FavoriteCount="1" />
  <row Id="718" PostTypeId="1" CreationDate="2015-06-30T18:14:41.083" Score="3" ViewCount="35" Body="&lt;p&gt;A collaborative project involves a number of people with different areas of expertise working on different aspects of the project. When thinking about attracting new contributors, are there any tasks or areas which are important to cover but often get overlooked?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is there evidence of open source projects where with hindsight the contributors would have benefited from a particular specialised contributor/team member that they never thought to seek?&lt;/p&gt;&#xA;" OwnerUserId="37" LastActivityDate="2015-06-30T18:26:40.710" Title="Which tasks on an open source project tend to be most often overlooked?" Tags="&lt;collaboration&gt;" AnswerCount="1" CommentCount="2" ClosedDate="2015-06-30T19:59:25.140" />
  <row Id="719" PostTypeId="1" AcceptedAnswerId="722" CreationDate="2015-06-30T18:21:40.677" Score="6" ViewCount="57" Body="&lt;p&gt;Suppose I am working on a project. I publish this project on a website. I release it without a copyright notice OR a licence. But in the project title /description I say it is open source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Under these circumstances is the project open sourced? &lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If yes, under what conditions?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="271" LastEditorUserId="190" LastEditDate="2015-06-30T22:27:34.993" LastActivityDate="2015-07-01T02:47:30.760" Title="Can a project be open source even if you don't have a license?" Tags="&lt;unlicensed-code&gt;" AnswerCount="2" CommentCount="0" />
  <row Id="720" PostTypeId="2" ParentId="718" CreationDate="2015-06-30T18:26:40.710" Score="3" Body="&lt;p&gt;The same as on commercial closed source development.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;High quality tutorial style documentation which is kept up to date&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In my experience, even when engineers are being &lt;strong&gt;paid&lt;/strong&gt; to write documentation, they are extremely reluctant to do so. Which means you tend to get the simplest form of docs to write&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;Name:    myfunction&#xA;param:   int len the length&#xA;returns: true on success&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Instead of an explanation of&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Why you would use this function&lt;/li&gt;&#xA;&lt;li&gt;How it works with other functions from the same API&lt;/li&gt;&#xA;&lt;li&gt;Detailed examples&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;The package documentation for most R packages (including the base packages) is a prime example. So are the docs for &lt;code&gt;glib&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;code&gt;Python&lt;/code&gt; on the other hand does a very good job.&lt;/p&gt;&#xA;" OwnerUserId="29" LastActivityDate="2015-06-30T18:26:40.710" CommentCount="0" />
  <row Id="721" PostTypeId="2" ParentId="717" CreationDate="2015-06-30T18:27:10.703" Score="9" Body="&lt;p&gt;This is indeed a better position to be in.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Copyright assignment means you lose all your rights. You no longer own the work in the eyes of the law and have no legal force over it; Canonical instead owns it and can do as they wish with it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;a href=&quot;http://www.harmonyagreements.org/docs/ha-cla-i.html&quot;&gt;Harmony CLA&lt;/a&gt; states (§ 2.1.a):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You retain ownership of the Copyright and Patent Claims in your Contributions and have the same rights to use or license the Contributions which You would have had without entering into the Agreement.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;For legalese, that's pretty clear: you're still the owner, you can still do as you like with it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It also (in §4 and §5) protects you: whereas copyright transfer would leave you open to legal claims against you if your work goes wrong, sections 4 and 5 are the 'Disclaimer' (i.e. you provide your work with no warranties) and 'Consequential Damage Waiver' (where Canonical agree not to sue you if you got something wrong).&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-30T18:27:10.703" CommentCount="0" />
  <row Id="722" PostTypeId="2" ParentId="719" CreationDate="2015-06-30T18:30:32.613" Score="6" Body="&lt;h3&gt;No.&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;You can &lt;em&gt;claim&lt;/em&gt; it's open source, but it wouldn't be true. If you don't declare under what agreement people can use the work, or what rights they have, they should legally assume they have no rights (i.e. it is entirely your copyright).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The fact that you haven't included a copyright notice doesn't matter: a CN is a nicety which is in fact there to remind people of the fact that it belongs to you and you can't use it in any way not allowed by the license. The Lack of a CN doesn't remove your copyright.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="69" LastEditDate="2015-07-01T00:51:28.120" LastActivityDate="2015-07-01T00:51:28.120" CommentCount="5" />
  <row Id="723" PostTypeId="2" ParentId="714" CreationDate="2015-06-30T18:41:02.283" Score="10" Body="&lt;p&gt;The software would still be free even if &lt;em&gt;every single contributor&lt;/em&gt; withheld their copyright. Copyright assignments and CLAs are mechanisms that make certain legal operations easier, like enforcement or relicensing. They are not fundamental to free or open source software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Consider if the project maintainer had found a compatibly-licensed piece of code and decided to include it in the project. That doesn't require any copyright transfer. A contribution without a copyright assignment is just like that, except the contributor gives the code directly to the project, instead of having the project discover the code on their own.&lt;/p&gt;&#xA;" OwnerUserId="50" LastEditorUserId="50" LastEditDate="2015-06-30T18:47:31.920" LastActivityDate="2015-06-30T18:47:31.920" CommentCount="0" />
  <row Id="724" PostTypeId="2" ParentId="714" CreationDate="2015-06-30T18:46:12.323" Score="4" Body="&lt;p&gt;&lt;em&gt;Copyright&lt;/em&gt; is not what allows them to use the content.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In submitting their contributions, contributors grant KDE a &lt;em&gt;license&lt;/em&gt; to use their contributions. Copyright assignment provides &lt;em&gt;extra&lt;/em&gt; rights for KDE and means they can do completely as they like with the work, but is not necessary for simple use.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-06-30T18:46:12.323" CommentCount="0" />
  <row Id="725" PostTypeId="1" CreationDate="2015-06-30T20:46:20.280" Score="1" ViewCount="18" Body="&lt;p&gt;One of the most common things that I see in open source projects is that they are maintained by a single developer. In my opinion, this often leads to abandoned projects due to the lack of time (or motivation) from the creator of the project and (if the project gains popularity) too many feature requests for a single person to deal with.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;On the other hand, many open source projects have several programmers but do not have any designer...which ends with:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Good programs that are not very user-friendly and therefore have a very small user base&lt;/li&gt;&#xA;&lt;li&gt;Lack of originality in those projects, which results in a slower gain of popularity among users&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Are there any &quot;thumb&quot; rules or recommendations to attract more contributors to join an open source project?&lt;/p&gt;&#xA;" OwnerUserId="378" LastActivityDate="2015-06-30T20:46:20.280" Title="How can an open source project attract new contributors?" Tags="&lt;development&gt;&lt;contributor&gt;" AnswerCount="0" CommentCount="0" ClosedDate="2015-06-30T21:44:01.740" />
  <row Id="726" PostTypeId="1" AcceptedAnswerId="727" CreationDate="2015-06-30T21:10:35.800" Score="5" ViewCount="80" Body="&lt;p&gt;Suppose I publish a product under a CC-BY license. Someone takes my product and remakes it into a slightly different product and publishes that under another license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Even though a version of my product has been changed published and re licensed. Can I use their version for anything I want despite the license it was published under?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="98" LastEditDate="2015-08-04T10:08:10.880" LastActivityDate="2015-08-05T15:07:32.663" Title="Do I have full rights over derived works of my CC BY works?" Tags="&lt;licensing&gt;&lt;derivative-works&gt;&lt;cc-by&gt;" AnswerCount="2" CommentCount="1" />
  <row Id="727" PostTypeId="2" ParentId="726" CreationDate="2015-06-30T21:24:59.293" Score="7" Body="&lt;p&gt;No.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You decide what conditions you publish your product under. With CC-BY that is that you require only attribution.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;They decide what conditions they publish their derived product under. You have to abide by the rules they set, just as they have to abide by yours.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The CC-BY-SA license has a Share Alike (SA) clause. This obliges people using your product to, if they publish derivatives, publish under a license that grants the same rights. This gives you the possibility to use &lt;em&gt;their&lt;/em&gt; derivative work under the same terms they are using &lt;em&gt;your&lt;/em&gt; original work&lt;/p&gt;&#xA;" OwnerUserId="97" LastEditorUserId="97" LastEditDate="2015-08-05T15:07:32.663" LastActivityDate="2015-08-05T15:07:32.663" CommentCount="3" />
  <row Id="729" PostTypeId="1" AcceptedAnswerId="732" CreationDate="2015-07-01T00:49:44.540" Score="3" ViewCount="43" Body="&lt;p&gt;I have been working on an open source software. The software is in its final stages of testing and I will soon publish it under a CC license. I would like to release it under the least strict license (to provide users full access to do whatever they wish to it).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is the CC-BY license the best license to use if I want to release it under no conditions or rules? &lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-07-01T21:06:36.437" LastActivityDate="2015-07-01T21:06:36.437" Title="Is CC-BY the least strict CC license for my open source project?" Tags="&lt;licensing&gt;&lt;cc-by&gt;" AnswerCount="2" CommentCount="1" FavoriteCount="1" />
  <row Id="730" PostTypeId="2" ParentId="719" CreationDate="2015-07-01T00:51:50.890" Score="-1" Body="&lt;p&gt;As ArtOfCode said, not choosing a License will make it copyrighted. But, if you don't want to choose a specific license, you may choose to &lt;a href=&quot;http://choosealicense.com/licenses/unlicense/&quot; rel=&quot;nofollow&quot;&gt;unlicense&lt;/a&gt; your project, which will make it public domain.&lt;/p&gt;&#xA;" OwnerUserId="383" LastEditorUserId="69" LastEditDate="2015-07-01T02:47:30.760" LastActivityDate="2015-07-01T02:47:30.760" CommentCount="3" />
  <row Id="731" PostTypeId="2" ParentId="729" CreationDate="2015-07-01T01:02:29.287" Score="3" Body="&lt;p&gt;CC-BY still demands proper attribution. While some jurisdiction ask for that anyways, it is not everywhere the case. &lt;a href=&quot;https://en.wikipedia.org/wiki/Public_domain&quot; rel=&quot;nofollow&quot;&gt;Public Domain&lt;/a&gt; (with sources included) or &lt;a href=&quot;https://creativecommons.org/about/cc0&quot; rel=&quot;nofollow&quot;&gt;CC0&lt;/a&gt; are the most permissive options. They demand basically nothing.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-07-01T01:02:29.287" CommentCount="0" />
  <row Id="732" PostTypeId="2" ParentId="729" CreationDate="2015-07-01T01:42:02.683" Score="7" Body="&lt;p&gt;&lt;a href=&quot;https://wiki.creativecommons.org/wiki/Frequently_Asked_Questions#Can_I_use_a_Creative_Commons_license_for_software.3F&quot;&gt;The use of Creative Commons licenses for software is not recommended.&lt;/a&gt;  The CC licenses do not address concerns specific to software (such as the source code/object code relationship, or patent issues), and are incompatible with most open-source software licenses.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you want to license your software &quot;with no conditions or rules&quot;, you probably want either:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://creativecommons.org/publicdomain/zero/1.0/&quot;&gt;The Creative Commons Public Domain Dedication&lt;/a&gt; (which &lt;a href=&quot;https://wiki.creativecommons.org/wiki/CC0_FAQ#May_I_apply_CC0_to_computer_software.3F_If_so.2C_is_there_a_recommended_implementation.3F&quot;&gt;is suitable for use with software&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;The &lt;a href=&quot;http://www.wtfpl.net/about/&quot;&gt;Do What The Fuck You Want To Public License&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;&quot;Releasing into the public domain&quot; has the problem that not all jurisdictions permit you to simply abandon your copyright to a work; to get around this, CC-0 and WTFPL both retain copyright while relinquishing all rights to the greatest extent permissible by law; of the two, CC-0 is probably the better written.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you want to retain the requirement of being attributed for your work, you want one of the highly-permissive licenses such as the &lt;a href=&quot;https://en.wikipedia.org/wiki/BSD_licenses#3-clause_license_.28.22Revised_BSD_License.22.2C_.22New_BSD_License.22.2C_or_.22Modified_BSD_License.22.29&quot;&gt;three-clause BSD license&lt;/a&gt; or the &lt;a href=&quot;https://en.wikipedia.org/wiki/MIT_License&quot;&gt;MIT license&lt;/a&gt;.  These are similar to CC-BY, but are designed for the needs of software.&lt;/p&gt;&#xA;" OwnerUserId="240" LastActivityDate="2015-07-01T01:42:02.683" CommentCount="2" />
  <row Id="733" PostTypeId="2" ParentId="310" CreationDate="2015-07-01T04:15:13.393" Score="4" Body="&lt;p&gt;The main difference is philosophical, and so subtle that it is easy to miss because it is not in any licence or list. It is that open source tends emphasize quality, reviewability, correctness and community whereas free software focuses on personal liberty, speech, and opportunity. Both camps endorse the others goals as good, just not quite as important to software and share methodologies and the belief that the ability to see, modify, and distribute source code is critical to their goals. Many projects have people from both camps as well as people who just contribute code and leave the licences to someone who cares.&lt;/p&gt;&#xA;" OwnerUserId="385" LastActivityDate="2015-07-01T04:15:13.393" CommentCount="0" />
  <row Id="734" PostTypeId="2" ParentId="270" CreationDate="2015-07-01T05:03:35.510" Score="3" Body="&lt;p&gt;Yes, but you can't use the code. These days sudo is no longer distributed under the gpl, even though it is a direct descendant of root sudo which was gpl, because they kept track of which code had which licence, and replaced all the gpl code, which means that apple can now use sudo, make changes and not tell anyone. Bigger projects would find this more difficult.&lt;/p&gt;&#xA;" OwnerUserId="385" LastActivityDate="2015-07-01T05:03:35.510" CommentCount="0" />
  <row Id="735" PostTypeId="1" CreationDate="2015-07-01T07:10:03.993" Score="6" ViewCount="61" Body="&lt;p&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/Reciprocal_Public_License&quot; rel=&quot;nofollow&quot;&gt;Reciprocal Public License (RPL)&lt;/a&gt; is interesting in that it is the only license both OSI-approved and not FSF-approved. It is a copyleft license similar to GPL but with a &quot;reciprocal&quot; clause:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Regarding deployment, under the RPL your changes, bug fixes, extensions, etc.&#xA;  must be made available to the open source community at large when you Deploy in&#xA;  any form -- either internally or to an outside party. Once you start running&#xA;  the software you have to start sharing the software.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&lt;em&gt;RPL 1.5, preamble&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Specifically, &lt;a href=&quot;http://opensource.org/licenses/RPL-1.5&quot; rel=&quot;nofollow&quot;&gt;clauses 6.0 and 6.1&lt;/a&gt; require that any private modifications &lt;em&gt;must&lt;/em&gt; be provided back to the licensor and the public respectively, under the RPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Why is this license approved by OSI but not by the FSF? Which specific essential freedoms, if any, does RPL violate? Why doesn't RPL violate any of the Open Source Definitions?&lt;/p&gt;&#xA;" OwnerUserId="175" LastEditorUserId="190" LastEditDate="2015-07-01T07:38:50.863" LastActivityDate="2015-07-01T07:58:58.850" Title="Why is the Reciprocal Public License OSI-approved but not FSF-approved?" Tags="&lt;copyleft&gt;&lt;open-source-definition&gt;&lt;free-software-definition&gt;&lt;rpl&gt;" AnswerCount="1" CommentCount="1" FavoriteCount="1" />
  <row Id="736" PostTypeId="2" ParentId="735" CreationDate="2015-07-01T07:58:58.850" Score="5" Body="&lt;p&gt;The &lt;a href=&quot;http://www.gnu.org/licenses/license-list.html#RPL&quot;&gt;FSF says&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Reciprocal Public License (#RPL)&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The Reciprocal Public License is a nonfree license because of three problems. 1. It puts limits on prices charged for an initial copy. 2. It requires notification of the original developer for publication of a modified version. 3. It requires publication of any modified version that an organization uses, even privately.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="24" LastActivityDate="2015-07-01T07:58:58.850" CommentCount="5" />
  <row Id="738" PostTypeId="1" CreationDate="2015-07-01T12:19:04.553" Score="3" ViewCount="82" Body="&lt;p&gt;I am writing some software for a particular operating system, OS1. Imagine this is the most awesome software ever! I want the users of OS1 to use the software as open source and restrict all others from using the software at all; so that all users migrate to OS1.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Can I frame such a license?&lt;/p&gt;&#xA;" OwnerUserId="209" LastEditorUserId="69" LastEditDate="2015-07-02T21:30:53.703" LastActivityDate="2015-07-02T21:30:53.703" Title="Can I Open Source a software for a particular operating system?" Tags="&lt;licensing&gt;" AnswerCount="2" CommentCount="4" />
  <row Id="739" PostTypeId="2" ParentId="738" CreationDate="2015-07-01T12:32:51.567" Score="13" Body="&lt;p&gt;Your reasoning for that would actually violate what Open Source is about. Look at &lt;a href=&quot;http://opensource.org/faq#evil&quot;&gt;this&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;... The Open Source Definition specifies that Open Source licenses may not discriminate against persons or groups...&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Therefore, you are not allowed to restrict access from other groups of people. If you were to use such a license, it would not be considered open source. However, you can make it solely available for OS1, you're not required to make it available on other operating systems.&lt;/p&gt;&#xA;" OwnerUserId="388" LastEditorUserId="388" LastEditDate="2015-07-01T13:52:21.993" LastActivityDate="2015-07-01T13:52:21.993" CommentCount="1" />
  <row Id="740" PostTypeId="2" ParentId="738" CreationDate="2015-07-01T12:33:39.493" Score="8" Body="&lt;p&gt;Not if you want to meet any accepted definitions of open source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In &lt;a href=&quot;http://opensource.org/osd-annotated&quot;&gt;the OSI definition&lt;/a&gt;, clause 8 addresses this specifically:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ol start=&quot;8&quot;&gt;&#xA;  &lt;li&gt;License Must Not Be Specific to a Product&lt;br&gt;&#xA;  The rights attached to the program must not depend on the program's being part of a particular software distribution. If the program is extracted from that distribution and used or distributed within the terms of the program's license, all parties to whom the program is redistributed should have the same rights as those that are granted in conjunction with the original software distribution.&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The FSF defines a set of rights that have to be met for them to consider the software free. Right 0 reads:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The freedom to run the program as you wish, for any purpose&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Restricting the use to a specific operating system violates this right.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You could frame a license with this restriction in it, but it wouldn't be open source.&lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-07-01T12:33:39.493" CommentCount="0" />
  <row Id="741" PostTypeId="1" CreationDate="2015-07-01T13:22:10.843" Score="12" ViewCount="153" Body="&lt;p&gt;GPL is a license designed primarily for software, but it can be used for non-software. The license text has many mentions of &quot;source code&quot;, which is ambiguous for non-software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;GNU/FSF claim that GPL can be used for non-software, &lt;a href=&quot;http://www.gnu.org/licenses/gpl-faq.en.html#GPLOtherThanSoftware&quot;&gt;&quot;as long as it is clear what constitutes the “source code” for the work&quot;&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The GNU GPL references the “source code” of a work; this “source code” will mean different things for different kinds of information, but the definition of “source code” — provided in the GNU GPL — holds true in any case: “&lt;strong&gt;The source code for a work means the preferred form of the work for making modifications to it.&lt;/strong&gt;”&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&lt;a href=&quot;https://www.gnu.org/philosophy/nonsoftware-copyleft.html&quot;&gt;https://www.gnu.org/philosophy/nonsoftware-copyleft.html&lt;/a&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;(bold is mine)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Unfortunately, no concrete examples are given.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Using common sense, I interpret this &quot;preferred form&quot; to mean for example PSD/XCF files for images, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Digital_audio_workstation&quot;&gt;DAW project files&lt;/a&gt; and/or MIDI files for audio/music. However, life experience has taught me that law and common sense seldom overlap.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Are there any notable examples of GPL being used in this fashion - to preserve access to the project files? Or any authoritative persons clarifying this issue?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Furthermore, unlike software, non-software can often be manipulated without &quot;source code&quot;, which raises this hypothetical: what if I take a lone, GPL-licensed image file, create a derivative using Photoshop, am I required to share the PSD file under GPL, in addition to the derived exported image?&lt;/p&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-07-01T14:51:16.017" Title="With GPL, what does &quot;source code&quot; mean for non-software?" Tags="&lt;gpl&gt;" AnswerCount="2" CommentCount="1" />
  <row Id="742" PostTypeId="2" ParentId="741" CreationDate="2015-07-01T14:19:32.423" Score="6" Body="&lt;p&gt;Think of 'source' as something which is created in a manual process and then fed into an automated process to produce the final artifacts.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Consider an open design for a PCB licensed under GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The 'source' in this case would be the schematics, which are fed in to applications that generate the solder masks, pick-n-place instructions, drilling templates, bill-of-materials, and all the other artifacts used by a modern PCB manufacturing process.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Consider a GPL-licensed design of an object meant to be built using a 3D printer. Again, the detailed mechanical specifications act as the 'source' for the printer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Consider an animated movie, generated using something like &lt;code&gt;blender&lt;/code&gt;, and licensed under GPL. Again, the inputs which allow &lt;code&gt;blender&lt;/code&gt; to render all the frames of the movie creating the final product act as the source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Source code for software is edited using a text editor or IDE. The source for non-software items may not be human readable, and may be edited by advanced layout programs, or 3D graphics programs, but it is source 'code' nonetheless.&lt;/p&gt;&#xA;" OwnerUserId="29" LastActivityDate="2015-07-01T14:19:32.423" CommentCount="5" />
  <row Id="743" PostTypeId="2" ParentId="657" CreationDate="2015-07-01T14:29:23.453" Score="1" Body="&lt;p&gt;This is a difficult position to be in. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;BUT... Here are some things you can do:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;Go on the persons website, look for contact information. Email or phone the person and ask them politely to take down / remove the stolen information.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;If they don't, the next step is to gather evidence. Collect proof that your work has been stolen.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Hire a lawyer. Assuming the work that was stolen is VERY important to you this is your best line of defense. Although lawyers can be expensive copyright law is complicated and lawyers can help. Show them the evidence you have collected and they can help pursue the theif.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="271" LastActivityDate="2015-07-01T14:29:23.453" CommentCount="0" />
  <row Id="744" PostTypeId="1" AcceptedAnswerId="746" CreationDate="2015-07-01T14:36:19.597" Score="-7" ViewCount="73" Body="&lt;p&gt;Suppose you are a land owner. You own a large piece of land containing lots of amazing fossils and other important pieces of history. To share this with the world you decide you want to allow ANYONE to come and discover the history on your property.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;EDIT&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Could you apply an open source license such as CC-BY to all of the artifacts they find in the property.&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="271" LastEditDate="2015-07-01T14:50:41.370" LastActivityDate="2015-07-01T14:50:41.370" Title="Could you apply a CC-BY license to a piece of land?" Tags="&lt;licensing&gt;&lt;creative-commons&gt;" AnswerCount="2" CommentCount="1" ClosedDate="2015-08-07T22:29:25.863" />
  <row Id="745" PostTypeId="2" ParentId="744" CreationDate="2015-07-01T14:38:35.363" Score="7" Body="&lt;p&gt;No.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A piece of land is not a creative work. People can't copy it. It has nothing to do with licenses to copyrighted works.&lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-07-01T14:38:35.363" CommentCount="0" />
  <row Id="746" PostTypeId="2" ParentId="744" CreationDate="2015-07-01T14:41:05.393" Score="2" Body="&lt;p&gt;You can't fork land, you can't derive it or even copy it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The answer is no, you can only normally license something that is your own creation, and land belongs to that of mother nature.&lt;/p&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-07-01T14:41:05.393" CommentCount="0" />
  <row Id="747" PostTypeId="1" AcceptedAnswerId="750" CreationDate="2015-07-01T14:49:25.153" Score="3" ViewCount="53" Body="&lt;p&gt;Suppose I am working on an open source project. I am nearly finished, and about to publish it. I would like to release it to the public so that they can learn and make their own version but I DO NOT want them to republish or sell in ANY way.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is the CC-BY-NC-ND license the most strict license that I can use to prevent users from republishing / selling / using for commercial use? &lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="271" LastEditDate="2015-07-01T14:54:28.077" LastActivityDate="2015-07-01T15:01:08.743" Title="Is the BY-NC-ND license the most strict CC license for my open source project?" Tags="&lt;licensing&gt;&lt;creative-commons&gt;&lt;cc-by-nc-nd&gt;" AnswerCount="2" CommentCount="4" />
  <row Id="748" PostTypeId="2" ParentId="741" CreationDate="2015-07-01T14:51:16.017" Score="5" Body="&lt;p&gt;From GPL FAQ:-&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Why don't you use the GPL for manuals?&lt;/strong&gt; (&lt;a href=&quot;https://www.gnu.org/licenses/gpl-faq.html#WhyNotGPLForManuals&quot;&gt;#WhyNotGPLForManuals&lt;/a&gt;)&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;It is possible to use the GPL for a manual, but the GNU Free Documentation License (GFDL) is much better for manuals.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The GPL was designed for programs; it contains lots of complex clauses that are crucial for programs, but that would be cumbersome and unnecessary for a book or manual. &lt;strong&gt;For instance, anyone publishing the book on paper would have to either include machine-readable “source code” of the book along with each printed copy, or provide a written offer to send the “source code” later.&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Meanwhile, the GFDL has clauses that help publishers of free manuals make a profit from selling copies—cover texts, for instance. The special rules for Endorsements sections make it possible to use the GFDL for an official standard. This would permit modified versions, but they could not be labeled as “the standard”.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Using the GFDL, we permit changes in the text of a manual that covers its technical topic. It is important to be able to change the technical parts, because people who change a program ought to change the documentation to correspond. The freedom to do this is an ethical imperative.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Our manuals also include sections that state our political position about free software. We mark these as “invariant”, so that they cannot be changed or removed. The GFDL makes provisions for these “invariant sections”.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;In above quote, text (For instance,...) is bolded  by me. &lt;/p&gt;&#xA;" OwnerUserId="296" LastActivityDate="2015-07-01T14:51:16.017" CommentCount="0" />
  <row Id="749" PostTypeId="2" ParentId="747" CreationDate="2015-07-01T14:55:49.387" Score="4" Body="&lt;p&gt;The best solution is not to stray into open source/free software at all. CC-BY-NC-ND is already non-free and non-open, but you can go much further.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can publish your source all rights reserved. The act of publishing it grants an implicit license that people may read it. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Projects that are NC, ND or all rights reserved are not open source projects though, so the premise that you're working on an open source project is false.&lt;/p&gt;&#xA;" OwnerUserId="97" LastEditorUserId="97" LastEditDate="2015-07-01T15:01:08.743" LastActivityDate="2015-07-01T15:01:08.743" CommentCount="0" />
  <row Id="750" PostTypeId="2" ParentId="747" CreationDate="2015-07-01T15:00:30.977" Score="3" Body="&lt;p&gt;It would seem so. Many software licenses (and &lt;em&gt;all&lt;/em&gt; open/free licenses) grant the right to redistribute and change at minimum, so picking one of those doesn't suit. CC licenses aren't made for software, and this is actually an asset to you for this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;CC BY-NC-ND is non-free, non-open, and grants &lt;em&gt;almost&lt;/em&gt; no rights at all. You're allowed to use the work as inspiration, to read the code, and to redistribute without modifications, but nothing else - &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-nd/3.0/&quot; rel=&quot;nofollow&quot;&gt;read the summary&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, you &lt;em&gt;could&lt;/em&gt; just say &quot;all rights reserved&quot;. You imply that people can read it by publishing, but if all rights are reserved they can't do anything else.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-07-01T15:00:30.977" CommentCount="0" />
  <row Id="752" PostTypeId="1" AcceptedAnswerId="753" CreationDate="2015-07-01T15:47:41.390" Score="4" ViewCount="62" Body="&lt;p&gt;Suppose I am finishing an open source software. I am about to publish it but I just have to choose the license. I want it to be a CC-BY license but I don't want anyone to republish it under ANY other license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;How do I stop future users from just publishing it under any other license? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;I've also just found out about the &quot;ShareAlike&quot; attribute. Would this do what I want?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="98" LastEditDate="2015-07-01T19:46:54.607" LastActivityDate="2015-07-01T19:46:54.607" Title="How do I stop republication under a different license?" Tags="&lt;licensing&gt;&lt;creative-commons&gt;&lt;copyleft&gt;&lt;cc-by-sa&gt;&lt;share-alike&gt;" AnswerCount="3" CommentCount="3" />
  <row Id="753" PostTypeId="2" ParentId="752" CreationDate="2015-07-01T16:08:21.550" Score="3" Body="&lt;p&gt;If you want it to be a CC-BY (as asked in question) and don't want anyone to republish it under any other license, then you can use &lt;a href=&quot;https://en.wikipedia.org/wiki/Share-alike&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Share-alike&lt;/strong&gt;&lt;/a&gt; attribute.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;From wikipedia:-&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Share-alike is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Copyright_license&quot; rel=&quot;nofollow&quot;&gt;copyright licensing&lt;/a&gt; term, originally used by the Creative Commons project, to describe works or licences that require copies or adaptations of the work to be released under the same or similar licence as the original&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Also visit: &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/&quot; rel=&quot;nofollow&quot;&gt;CC BY-SA 4.0&lt;/a&gt; which clearly following terms:-&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;ShareAlike — If you remix, transform, or build upon the material, you must distribute your contributions under the &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/#&quot; rel=&quot;nofollow&quot;&gt;same license&lt;/a&gt; as the original. &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Also visit &lt;a href=&quot;https://wiki.creativecommons.org/wiki/Share_Alike&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;SA&lt;/strong&gt;, aka Share Alike&lt;/a&gt;:-&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The Share Alike aspect requires all derivatives of a work to be licensed under the same (or a compatible) license as the original. Thus, if a person were to use parts of a BY-SA movie to create a new short film that new short film would also need to be licensed as BY-SA. &lt;strong&gt;The advantage of this license is that future users are not able to add new restrictions to a derivative of your work; their derivatives must be licensed the same way&lt;/strong&gt;. &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;emphasis mine&lt;/sup&gt;&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Also visit these &lt;a href=&quot;http://www.gnu.org/copyleft/copyleft.en.html&quot; rel=&quot;nofollow&quot;&gt;articles&lt;/a&gt; on &lt;a href=&quot;http://en.wikipedia.org/wiki/Copyleft&quot; rel=&quot;nofollow&quot;&gt;copyleft&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="296" LastEditorUserId="98" LastEditDate="2015-07-01T17:16:05.847" LastActivityDate="2015-07-01T17:16:05.847" CommentCount="0" />
  <row Id="754" PostTypeId="2" ParentId="752" CreationDate="2015-07-01T16:10:09.830" Score="3" Body="&lt;p&gt;When redistribution of a derivative work is permitted only under the same, or a compatible license, that is called CopyLeft or, in the context of Creative Commons ShareAlike.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Under such licenses, it is only allowed to redistributed a derivative work if the license under which it is redistributed meets all criteria of the original license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can &quot;tag on&quot; Share-Alike to most of the Creative Commons licenses. In the case of &lt;code&gt;CC-BY&lt;/code&gt;, this would become &lt;code&gt;CC-BY-SA&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note that for some Creative Commons licenses this makes no sense. ND (no derivatives) can't also be SA, because you're not allowed to distribute a modified version at all. &lt;code&gt;CC-0&lt;/code&gt; doesn't place any restrictions, so it doesn't make sense to restrict is with SA.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The oldest example of this kind of license is the GPL, a copyleft license. It has the restriction that derivative works must be published under the GPL, or a compatible license.&lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-07-01T16:10:09.830" CommentCount="0" />
  <row Id="755" PostTypeId="2" ParentId="752" CreationDate="2015-07-01T19:23:20.837" Score="1" Body="&lt;p&gt;You're looking for a ShareAlike clause.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;ShareAlike licenses force the derived work to redistribute under the &lt;em&gt;same&lt;/em&gt; license, or one which is similar or compatible. However, without other clauses, these licenses won't stop others from producing and distributing derived/different versions of your work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The license that you currently have is the Creative Commons Attribution license or &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot; rel=&quot;nofollow&quot;&gt;CC-BY&lt;/a&gt;. The same license with the ShareAlike clause would be the Creative Commons Attribution-ShareAlike license, or &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/&quot; rel=&quot;nofollow&quot;&gt;CC-BY-SA&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-07-01T19:23:20.837" CommentCount="0" />
  <row Id="756" PostTypeId="1" CreationDate="2015-07-01T19:54:11.197" Score="7" ViewCount="86" Body="&lt;p&gt;Consider the following scenario&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Project A is originally licensed under a permissive license&lt;/li&gt;&#xA;&lt;li&gt;By the time it reaches version 6, it has built up a strong user base, many of those users producing closed commercial products.&lt;/li&gt;&#xA;&lt;li&gt;The original copyright holders decide that version 7 should be licensed under a copyleft license.&lt;/li&gt;&#xA;&lt;li&gt;This decision means that the commercial companies will not use version 7 for fear of being forced to disclose some IP they want to keep private (regardless of any realities).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;At this point, someone forks version 6, retaining the original license. They continue to develop it into a competing project which picks up all the old commercial customers (and possibly their funding and technical contributors and other resources).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;All this is allowed by the original license: but it clearly subverts the intent of the original copyright holders expressed in their decision to relicense.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is this a natural consequence/risk of initially choosing a permissive license? Is this a problem, or a benefit?&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="69" LastEditDate="2015-07-01T21:02:58.553" LastActivityDate="2015-07-02T11:26:05.547" Title="Can the ability to fork override the copyright owner's desires?" Tags="&lt;forking&gt;&lt;philosophy&gt;&lt;permissive&gt;" AnswerCount="2" CommentCount="1" />
  <row Id="757" PostTypeId="2" ParentId="756" CreationDate="2015-07-01T20:48:44.600" Score="8" Body="&lt;p&gt;That's pretty basic: an open source license is irrevocable. Code that was released once under the terms of an open source license can always be used under these terms if someone mirrored it so it is still available. If you change your mind it means that you cannot retract your earlier decision. You only can enforce a new license on new contributions, but if people were content with the old version, they still can use it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So can the ability to fork override the copyright's owners desire? Sure, if the copyright owner changes his opinion (as people do).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is this a natural consequence/risk of initially choosing a permissive license? it is the consequence of each open source license, be it permissive or copyleft. The problem pertains also with a copyleft-license. If you're the only copyright owner, you could relicense (for instance to proprietary if you wish), but your old code could still get redistributed and forked.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is this a problem, or a benefit? This depends on who you ask. The reason why you can't take the rights away is trust of the the users, contributors and forkers. You can't say afterwards its all illegal. This is obviously an upside - but not for the copyright owner. In the end licensing under an open source license is always a decision to give up rights.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-02T08:56:49.043" LastActivityDate="2015-07-02T08:56:49.043" CommentCount="2" />
  <row Id="758" PostTypeId="1" AcceptedAnswerId="763" CreationDate="2015-07-02T02:03:32.210" Score="4" ViewCount="85" Body="&lt;p&gt;As can be seen from answers to &lt;a href=&quot;http://opensource.stackexchange.com/questions/738/can-i-open-source-a-software-for-a-particular-operating-system&quot;&gt;this question&lt;/a&gt;, a piece of open source software cannot be licensed in such a way that it is only usable on one specified operating system.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, can it be licensed in such a way that it can only be used on open source operating systems? Or on operating systems with a licence compatible with the licence of the software in question?&lt;/p&gt;&#xA;" OwnerUserId="37" LastActivityDate="2015-07-02T21:47:35.210" Title="Can software be restricted to open source operating systems?" Tags="&lt;licensing&gt;" AnswerCount="3" CommentCount="1" />
  <row Id="759" PostTypeId="1" AcceptedAnswerId="761" CreationDate="2015-07-02T02:34:55.740" Score="8" ViewCount="113" Body="&lt;p&gt;If I contribute some code to an open source project, ought I to continue to work on that project? If I don't have the time to continue as a regular contributor, should I avoid starting?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As an analogy, charities seeking funding often state that one off donations are not useful and they prefer a fixed ongoing regular payment that they can plan around. Does the same apply to contribution of time to an open source project?&lt;/p&gt;&#xA;" OwnerUserId="37" LastActivityDate="2015-07-02T03:30:38.857" Title="Should I feel guilty for one off contributions?" Tags="&lt;contributor&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="1" />
  <row Id="760" PostTypeId="2" ParentId="759" CreationDate="2015-07-02T03:04:35.703" Score="3" Body="&lt;p&gt;That highly depends on what kind of a contribution you're thinking of.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you do something small, like fix a minor bug, add some new documentation, fix some grammar errors, make the code more readable... then you can step away and nobody will probably even notice that you are gone, but they will be grateful that you've made some changes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you do something big, like create a new feature or something similar, then the contributors will probably expect you to keep working on it in case something goes wrong. Maybe there will be new bugs because of your feature or your feature needs some additional work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are no rules and it highly depends on the rest of the contributors.&lt;/p&gt;&#xA;" OwnerUserId="123" LastEditorUserId="123" LastEditDate="2015-07-02T03:14:11.220" LastActivityDate="2015-07-02T03:14:11.220" CommentCount="1" />
  <row Id="761" PostTypeId="2" ParentId="759" CreationDate="2015-07-02T03:17:38.077" Score="13" Body="&lt;p&gt;One-off contributions are the most common type of contribution in open source projects. It would be very disturbing to know that, by running an open source project, I'm spreading guilt throughout the world! Fortunately that's far from the truth.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;From experience, one-off contributions are almost always useful, even if about half the time the contributions aren't incorporated as-is. This is because:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Contributions come from super-users, users who care enough about the project to reach out with free work. Contributors, through their contributions or follow-up conversations, provide a valuable window into what super-users want out of the project. Open source, and free (gratis) software in general, suffer from this problem where creators are out of touch with users. Unlike paid software, there is no easy trail for creators to find out who their users are and what they're like. Market research is &lt;em&gt;hard&lt;/em&gt;. &lt;strong&gt;Every contribution is a data point&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;One-off contributions are usually simple and small, and something I missed despite this. Why? Because it's an &lt;strong&gt;edge case I didn't consider&lt;/strong&gt;. Because it's &lt;strong&gt;for a platform I didn't port to&lt;/strong&gt;. Because it's a &lt;strong&gt;hole in my testing procedures&lt;/strong&gt;. Because it &lt;strong&gt;scratches an itch I didn't have&lt;/strong&gt;. Because it's an &lt;strong&gt;issue I wasn't skilled enough to resolve&lt;/strong&gt;. Whatever it is, addressing it improves the polish of the project. Polish isn't a single feature, it is smoothing out thousands of rough edges, which is better addressed by multitudes of users providing feedback and sometimes contributions.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;In my experience, one-off contributions provided much more value than the changeset alone, and they were useful even if I rejected the contribution. Here are some examples:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Very minor formatting improvements to the readme. This taught me some Markdown tricks and got me thinking about how to better structure the readme to address its readers, to become a better writer.&lt;/li&gt;&#xA;&lt;li&gt;A collection of bug reports around a common module. This alerted me to some poor code design, which motivated me to perform rewrites, greatly reducing the defect rate of future releases.&lt;/li&gt;&#xA;&lt;li&gt;A number of change requests to the build script. Even though I rejected all these because it turns out they didn't follow the instructions 100%, I eventually simplified the build process.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Without a doubt, one-off contributions helped me steer the project, improving their popularity and usefulness, as well as greatly improving my breadth of skills. If anything, the guilt is all on my end as I had to say no on occasions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also, the charity analogy is flawed; I think you've been duped by unscrupulous charities that want to guilt people into donating more. One-off donations are less useful but not entirely without value.&lt;/p&gt;&#xA;" OwnerUserId="175" LastEditorUserId="175" LastEditDate="2015-07-02T03:30:38.857" LastActivityDate="2015-07-02T03:30:38.857" CommentCount="4" />
  <row Id="762" PostTypeId="1" CreationDate="2015-07-02T03:21:51.333" Score="12" ViewCount="196" Body="&lt;p&gt;There is a case between Google and Oracle over the use of Java and it's standard library on the Google Android operating system. From &lt;a href=&quot;http://www.businessinsider.com/google-oracle-lawsuit-is-damaging-2014-5&quot; rel=&quot;nofollow&quot;&gt;this article&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;To recap: Oracle accused Google of copying some of its Java computer code when it wrote Android. Android itself wasn't the issue. Android is different than Java. But Google wanted developers who work with Java, a popular language for web apps, to jump to Android. So it incorporated Java's application programming interfaces (APIs) into Android. This allowed them to quickly convert their apps to Android and it meant that the millions of programmers trained on Java would be familiar with Android, too.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Oracle sued claiming that the APIs were copyrighted. But the judge ruled that APIs are not subject to copyright laws&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;On Friday, an appellate court just overturned that loss, and said APIs are subject to copyright.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;If many popular APIs become subject to copyright laws and owned by the organizations that created them, how might this affect the projects that develop software applications that use these APIs, and how might it affect the Open Source industry at large?&lt;/p&gt;&#xA;" OwnerUserId="395" LastEditorUserId="69" LastEditDate="2015-08-10T16:18:06.237" LastActivityDate="2015-08-10T16:18:06.237" Title="What are the implications of the Google vs. Oracle case on the state of public APIs?" Tags="&lt;law&gt;&lt;api&gt;&lt;implementation&gt;" AnswerCount="3" CommentCount="4" FavoriteCount="3" />
  <row Id="763" PostTypeId="2" ParentId="758" CreationDate="2015-07-02T04:16:12.303" Score="8" Body="&lt;p&gt;&lt;strong&gt;You cannot do this with an open source license&lt;/strong&gt;. The reason is the same as in the linked question: you cannot discriminate usage, including platform.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Obviously, you can construct a license that specifically requires running on open source operating systems, but this license won't be open source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Without using the license, it is possible to construct your software in a manner that makes it impractical to run on closed source operating systems, but without a non-free license, there is nothing stopping a determined programmer from adapting it to run on closed source operating systems.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Historically, there was a lot of software that was de facto tied to open source operating systems, because the only desktop operating systems that almost fully implemented Unix/POSIX standards happened to be open source. This is largely not the case today, as standards compliance and embracement of open source by proprietary software has improved across the board, making it easier to write portable software. Chances are good that if your software is useful, someone will port it to closed operating systems anyway.&lt;/p&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-07-02T04:16:12.303" CommentCount="0" />
  <row Id="764" PostTypeId="1" AcceptedAnswerId="775" CreationDate="2015-07-02T07:19:27.137" Score="2" ViewCount="38" Body="&lt;p&gt;csharp-sqlite is the only pure-C# implementation of an SQLite client.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The project used to live at &lt;a href=&quot;https://code.google.com/p/csharp-sqlite&quot; rel=&quot;nofollow&quot;&gt;https://code.google.com/p/csharp-sqlite&lt;/a&gt;&lt;br&gt;&#xA;The last update was 4 years ago.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The homepage says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;For preparing to google code will be disconnected at August. csharp-sqlite will be moved (exported) to GitHub. Later information will be posted here soon.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;It has been months since this notice got posted, it seems like the maintainer has &quot;&lt;a href=&quot;https://groups.google.com/forum/#!topic/csharp-sqlite/hMhtJJcyYs0&quot; rel=&quot;nofollow&quot;&gt;moved on to other interests&lt;/a&gt;&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is csharp-sqlite maintained somewhere? Are there active forks (maybe renamed) that I haven't found?&lt;/p&gt;&#xA;" OwnerUserId="199" LastActivityDate="2015-07-02T15:42:43.587" Title="Where is csharp-sqlite now maintained?" Tags="&lt;forking&gt;&lt;collaboration&gt;" AnswerCount="1" CommentCount="6" />
  <row Id="765" PostTypeId="1" CreationDate="2015-07-02T07:33:51.640" Score="2" ViewCount="51" Body="&lt;p&gt;I am thinking of making one of my projects open source and I am thinking which communication channel to use. Mailing lists are great, but less on interactivity, IRC is high on interactivity, but generally intimidating to newbies and Gitter.im in non-intimidating, interactive and good looking, but it's privately owned and I'm not sure about it's policy regarding charges (It wasn't free until recently IIRC). &lt;/p&gt;&#xA;&#xA;&lt;p&gt;What should I opt for and why?&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Edit (adding some more specifics):&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;It's a small project in C and C++, hosted on Github.    &lt;/li&gt;&#xA;&lt;li&gt;In future, if it picks up, I might be able to find upto 10 regular contributors.    &lt;/li&gt;&#xA;&lt;li&gt;I think the project would be useful to university students - they might be able to use it as an add-on to their own projects or they can even help in further development.     &lt;/li&gt;&#xA;&lt;li&gt;The communication channel would help in both support and further development&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="66" LastEditorUserId="66" LastEditDate="2015-07-02T12:55:36.777" LastActivityDate="2015-07-02T13:52:30.200" Title="Which communication channel is favorable if I am making my project open source?" Tags="&lt;community&gt;&lt;irc&gt;&lt;communication&gt;" AnswerCount="2" CommentCount="13" />
  <row Id="766" PostTypeId="2" ParentId="765" CreationDate="2015-07-02T07:51:59.193" Score="1" Body="&lt;p&gt;This is primary a personal decision. I would see this more in the software recommendation section.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Anyway, on newer projects I would suggest to use modern communications. One way can still be IRC or Mailinglists, but anyway I don't use them often. Even if I'm active in an project. They always had something from the 80th's fro me. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you use Github, you can document communications in the wiki (after they happened). If not or if you like to have a more private version for your open source project, you can use &lt;a href=&quot;https://about.gitlab.com/&quot; rel=&quot;nofollow&quot;&gt;gitlab&lt;/a&gt; for example.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For shorter communications like chats you can use &lt;a href=&quot;https://slack.com/&quot; rel=&quot;nofollow&quot;&gt;Slack&lt;/a&gt;. &lt;/p&gt;&#xA;" OwnerUserId="52" LastActivityDate="2015-07-02T07:51:59.193" CommentCount="3" />
  <row Id="767" PostTypeId="2" ParentId="765" CreationDate="2015-07-02T10:53:09.440" Score="4" Body="&lt;p&gt;You should try to use and offer the communication channels where your target audience - user &lt;strong&gt;and&lt;/strong&gt; developers - resides. This might be the same channels, different ones, or there may be a certain overlap.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You do not want to force any of them to use one particular channel, especially if they don't like it. But you do not want to force yourself to use an channel that you are not comfortable with, either.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Within the GIMP project, we have two main mailing lists, one for development topics, one for user topics. There is also two IRC channels, one for mostly development topics, one for user topics. We also monitor Reddit and G+ and Twitter to some extent, but this is an effort done by individuals.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I can't tell anything about whether we are active on Facebook - I have an account there, tried to use it, but couldn't because there was too much data I perceived as noise, and that was without following anyone.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Web forums are done by third parties, without too much involvement from anyone of the core group. This turns out to be a problem sometimes - if I ever want to learn something I never knew about GIMP, or an esoteric reasoning for some GIMP behavior, I read those forums. But the amount of unverified and speculative information there also prevents me from subscribing - I'd probably be banned within hours for being &quot;too negative&quot; for all the &quot;no, this is not quite correct&quot; replies. This is a complaint that happened to someone from the inner circle when doing just that.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, lesson learned there: if you want to have a forum for your application, &lt;strong&gt;you&lt;/strong&gt; run it and &lt;strong&gt;you&lt;/strong&gt; make the rules.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am the admin for one of the forums, and I leave users there pretty free reign (I stop discussion when they get into ad hominem space, though). But recently, I found myself having a lot less time to check up on the posts - and found the same speculative creep starting there.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Lesson learned: if you run one communications channel, make sure that &lt;strong&gt;you&lt;/strong&gt; keep control of it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Overall, my personal favorites are mail and IRC. I know that these feel antiquated to many users now, but I do not see myself using anything else comfortably.&lt;/p&gt;&#xA;" OwnerUserId="83" LastEditorUserId="83" LastEditDate="2015-07-02T12:49:05.520" LastActivityDate="2015-07-02T12:49:05.520" CommentCount="1" />
  <row Id="768" PostTypeId="2" ParentId="756" CreationDate="2015-07-02T11:26:05.547" Score="1" Body="&lt;p&gt;Permit me to first go for kicking in the open door.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The ability to fork can override the copyright owner's desires if and only if it's not the owners desire that the project is forked.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Permissive licenses were specifically invented for this. It is possible that not every larger project will play out as this scenario, but it is certainly the intention of the license that it does.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;By releasing under a permissive license, you explicitly give permission to do so. With your choice for a permissive over a copyleft license, it is your implicit hope that this will happen. Allowing for this is the reason for choosing a permissive license over a copyleft license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;By creating a project, your intention surely is to create something of value. The type of &quot;buyers remorse&quot; your expressing - discontent with the license you gave in perpetuity to everyone, and not being able to revoke it - seems to be most common when the intention to create value is fulfilled, and it is valuable enough to fork and close.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It seems akin to saying you're willing to give something away for free to anyone who wants it - until people want it bad enough to pay for it, then you don't want to give it away for free anymore.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So is this a problem, or a benefit? That depends on your goals and reason to release in the first place.&lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-07-02T11:26:05.547" CommentCount="0" />
  <row Id="769" PostTypeId="2" ParentId="758" CreationDate="2015-07-02T11:34:50.780" Score="4" Body="&lt;p&gt;Not a whole operating system, but:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some people - the FSF included - claim that &lt;a href=&quot;https://www.fsf.org/news/2010-05-app-store-compliance&quot; rel=&quot;nofollow&quot;&gt;the terms of use of the Apple App Store make distribution of GPL-licensed software not legally possible via this store&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If a similar store is used by other platforms with comparable terms, and software installation to the platform is only possible via this store, then you can choose a license - the GNU GPL - to prevent your software to be legally installed on those platforms - and probably make it very hard for people who do not care about this, too.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But &lt;strong&gt;you&lt;/strong&gt; still haven't restricted the software, the software was restricted by the people who wrote the terms of use of that app store.&lt;/p&gt;&#xA;" OwnerUserId="83" LastEditorUserId="69" LastEditDate="2015-07-02T21:47:35.210" LastActivityDate="2015-07-02T21:47:35.210" CommentCount="0" />
  <row Id="770" PostTypeId="1" AcceptedAnswerId="773" CreationDate="2015-07-02T13:38:23.197" Score="6" ViewCount="53" Body="&lt;p&gt;Recently I was confronted with several projects that claim to be open source. I was happy to find their source code on a public repository but when looking at the license I was wondering why they do not take up official open source licenses but introduce their own proprietary licenses.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In my opinion, this  severely hinders the uptake of these works - as non-experts on licensing cannot evaluate if the proprietary license statements are OK. Hence the conditions of usage of the source code are left ambiguous.&lt;/p&gt;&#xA;" OwnerUserId="399" LastEditorUserId="29" LastEditDate="2015-07-02T17:22:29.983" LastActivityDate="2015-07-02T17:24:45.787" Title="How to deal with unofficial/proprietary licences - are open source projects of this type really open?" Tags="&lt;licensing&gt;&lt;license-compatibility&gt;&lt;license-file&gt;" AnswerCount="2" CommentCount="2" FavoriteCount="1" />
  <row Id="772" PostTypeId="2" ParentId="770" CreationDate="2015-07-02T14:22:45.940" Score="1" Body="&lt;p&gt;Even a license that is not approved by the OSI, &lt;a href=&quot;http://opensource.stackexchange.com/q/71/55&quot;&gt;might still be Open Source&lt;/a&gt;. But, with an unknown license, it is hard to know what implications the license has and if it really supports the basic traits of Open Source. The creators might have intended to make it open source, but unwittingly might have created a license that isn't.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Choosing a common license has another upside: it is more tested as many projects use it and problems are already found and may be tackled in a followup-version.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="29" LastEditDate="2015-07-02T17:24:45.787" LastActivityDate="2015-07-02T17:24:45.787" CommentCount="1" />
  <row Id="773" PostTypeId="2" ParentId="770" CreationDate="2015-07-02T14:44:12.493" Score="5" Body="&lt;p&gt;Beware of projects which claim to be open source but don't have a standard license &lt;a href=&quot;https://www.gnu.org/licenses/license-list.html&quot; rel=&quot;nofollow&quot;&gt;approved by the FSF&lt;/a&gt; or &lt;a href=&quot;http://opensource.org/licenses/alphabetical&quot; rel=&quot;nofollow&quot;&gt;approved by the OSI&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Some people misunderstand what &lt;em&gt;&quot;Open Source&quot;&lt;/em&gt; actually means. It is a very common misconception that simply allowing people to look at the source makes it open source. It doesn't - that's called &lt;em&gt;&quot;Source Available&quot;&lt;/em&gt;. To be really open source, a project must be licensed under a license which fulfills &lt;a href=&quot;http://opensource.org/osd&quot; rel=&quot;nofollow&quot;&gt;the open source definition&lt;/a&gt;. A very popular license clause some people try but which prevents a project from being open is a non-commercial clause. It violates the right of &quot;No Discrimination Against Fields of Endeavor, Persons or Groups&quot;. It's far better to just use an existing license like the GPL which theoretically allows commercial use but practically has various conditions which make most common business models these people are usually afraid of completely infeasible.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://opensource.stackexchange.com/questions/230/can-i-create-my-own-license-by-modifying-an-existing-one/252#252&quot;&gt;Writing licenses is hard&lt;/a&gt;. Licenses are legal documents. When you are not a trained lawyer and try to write one, it will likely not say what you want it to say or include clauses which are simply invalid or meaningless. So even when the author understood the definition of open source and wants his project to follow this philosophy, their homebrewed license might still be proprietary without them realizing.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;So how to deal with such licenses?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When the license is short, you could try to evaluate for yourself if it fulfills the &lt;a href=&quot;http://opensource.org/osd&quot; rel=&quot;nofollow&quot;&gt;open source definition&lt;/a&gt; or &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.html&quot; rel=&quot;nofollow&quot;&gt;the definition of free software&lt;/a&gt;. But when the license is longer or hard to understand, chances are that as a legal layman you will be out of your league. The best advise would be to ask a lawyer, but unless you have commercial interest in the software, you likely don't want to afford one.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You could also try to convince the author to switch to an approved open source license. There are so many licenses available that they will likely find one which says what they want (as long as what they want is actually open source). When they still do not want to abandon their own license, you might be able to convince them to at least dual-license the software under both their homebrewed license and a proper open-source license so that people can choose which one to use.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When they also refuse to do that, you might still decide to use it and even contribute to it, but you must be aware that the software might be &lt;em&gt;gratis&lt;/em&gt; but not &lt;em&gt;free&lt;/em&gt; and that when you contribute, you might be performing gratis work for a proprietary product. What you should do under no circumstances is merge the code into another project. That way you plant a legal landmine in the other project which might not just blow up on you but also on any downstream users.&lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-07-02T15:09:00.767" LastActivityDate="2015-07-02T15:09:00.767" CommentCount="0" />
  <row Id="774" PostTypeId="1" CreationDate="2015-07-02T15:16:48.317" Score="8" ViewCount="39" Body="&lt;p&gt;One of the hallmarks of the FLOSS philosophy is its  reliance upon  open standards.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The OSI has the &lt;a href=&quot;http://opensource.org/osr&quot;&gt;one definition&lt;/a&gt; of an open standard. The FSF has &lt;a href=&quot;http://fsfe.org/activities/os/os.en.html&quot;&gt;its own&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are many bodies which produce &lt;em&gt;official&lt;/em&gt; standards: OSI, ITU, ETSI, IEEE, and so on.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The standards most software developers will be familiar with are those which define programming languages such as &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;C++&lt;/code&gt;. But they touch many other things as well (such as ISO/IEC 14496, better known as MPEG-4).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The standards are certainly 'freely available' in that anyone can purchase a copy - though they are often quite expensive. But are they necessarily &lt;strong&gt;open standards&lt;/strong&gt;? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;MPEG-4 is a prime example, as it is burdened with issues surrounding &lt;a href=&quot;https://en.wikipedia.org/wiki/H.264/MPEG-4_AVC#Patent_licensing&quot;&gt;patents&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Are there other examples of such burdened standards? How does a FLOSS developer deal with this in providing an implementation of them?&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="29" LastEditDate="2015-07-02T15:50:01.507" LastActivityDate="2015-07-02T15:50:01.507" Title="Is an official standard necessarily an open standard?" Tags="&lt;patents&gt;" AnswerCount="1" CommentCount="3" />
  <row Id="775" PostTypeId="2" ParentId="764" CreationDate="2015-07-02T15:29:38.627" Score="1" Body="&lt;p&gt;Simple answer: &lt;strong&gt;No.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This product has been discontinued by the developer. It is up to the developer to do what he/she said they would do. It is quite possible they lost interest in the project and have moved on to other projects.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;No activity could just mean they have not got around to it. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Advice: stay patient, if you really need to know you could ail the developer.&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="271" LastEditDate="2015-07-02T15:42:43.587" LastActivityDate="2015-07-02T15:42:43.587" CommentCount="0" />
  <row Id="776" PostTypeId="2" ParentId="774" CreationDate="2015-07-02T15:37:51.070" Score="8" Body="&lt;p&gt;&lt;a href=&quot;https://open-stand.org/about-us/principles/&quot;&gt;The definition of an open standard&lt;/a&gt; is quite different from that of &lt;a href=&quot;http://opensource.org/osd&quot;&gt;open source&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The definition mostly governs the processes which are used to &lt;em&gt;define&lt;/em&gt;  standards. The &quot;openness&quot; applies to the definition process being open to input from any parties it concerns and being transparent to the general public.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;All it says about &lt;em&gt;using&lt;/em&gt; an open standard is (emphasis mine):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Standards specifications are made accessible to all for implementation and deployment. Affirming standards organizations have defined procedures to develop specifications that can be implemented &lt;strong&gt;under fair terms&lt;/strong&gt;. Given market diversity, &lt;strong&gt;fair terms may vary from royalty-free to fair, reasonable, and non-discriminatory terms (FRAND)&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;These &quot;fair terms&quot; include no commitment to free distribution, which is the cornerstone of the open source definition.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is also nothing which governs the right to create derivate works. That's because in case of a standard, creating derivates is usually not desired. The intention of a standard is to convince everyone to follow it to ensure interoperability. Someone creating a slightly different yet incompatible competing standard would be counter-productive for that intention.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So no, &lt;em&gt;Open Source&lt;/em&gt; and &lt;em&gt;Open Standards&lt;/em&gt; have nothing to do with each other.&lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-07-02T15:46:11.990" LastActivityDate="2015-07-02T15:46:11.990" CommentCount="1" />
  <row Id="777" PostTypeId="1" AcceptedAnswerId="782" CreationDate="2015-07-02T15:41:38.070" Score="8" ViewCount="88" Body="&lt;p&gt;Suppose I was finishing up an open source software. I needed to license it under an open source license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Why would I not want to license my software under a Creative Commons license?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Why are other licenses such as  MIT licenses better for this?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-07-06T21:20:07.087" LastActivityDate="2015-07-06T21:20:07.087" Title="Why shouldn't Creative Commons licenses be used for software?" Tags="&lt;licensing&gt;&lt;creative-commons&gt;&lt;software&gt;" AnswerCount="1" CommentCount="4" FavoriteCount="1" />
  <row Id="778" PostTypeId="2" ParentId="489" CreationDate="2015-07-02T15:47:33.517" Score="1" Body="&lt;p&gt;The reason you may want to use an international license rather than a ported one is for one reason: &lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is globally compatible. This means that anyone (almost anywhere) is subjected to the terms of your license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Dispite this ported licenses also have their advantages. For example they have been customized and &quot;hand crafted&quot; to specifically work with you local laws. CC says that ported license SHOULD work internationally but in some cases may not.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To read more visit the CC faq page: &lt;a href=&quot;https://wiki.creativecommons.org/wiki/Frequently_Asked_Questions%23Should_I_choose_an_international_license_or_a_ported_license.3F&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="271" LastEditDate="2015-07-02T18:41:34.113" LastActivityDate="2015-07-02T18:41:34.113" CommentCount="0" />
  <row Id="779" PostTypeId="1" AcceptedAnswerId="814" CreationDate="2015-07-02T15:51:01.343" Score="3" ViewCount="72" Body="&lt;p&gt;Suppose I was the owner of an open source project. Many people work in this project.. And many people use it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Do I have legal obligation to keep the project accessible to the contributors or the users?&lt;/p&gt;&#xA;" OwnerUserId="271" LastActivityDate="2015-07-03T11:42:05.650" Title="In an open source project does the owner hold any responsibility to keeping the project accessible?" Tags="&lt;development&gt;" AnswerCount="2" CommentCount="2" />
  <row Id="780" PostTypeId="1" AcceptedAnswerId="787" CreationDate="2015-07-02T16:19:44.123" Score="-4" ViewCount="43" Body="&lt;p&gt;I would like to use an open source web browser, but I see lots of different places offering a download of Firefox. How do I tell which one is the correct place to download from?&lt;/p&gt;&#xA;" OwnerUserId="37" LastActivityDate="2015-07-02T18:27:56.133" Title="Where is the safe place to download Firefox?" Tags="&lt;obtaining&gt;" AnswerCount="2" CommentCount="2" ClosedDate="2015-07-02T18:32:38.660" />
  <row Id="781" PostTypeId="1" AcceptedAnswerId="785" CreationDate="2015-07-02T16:23:17.350" Score="0" ViewCount="47" Body="&lt;p&gt;I have downloaded and installed Notepad++ and it is working fine. I hear it is open source. How do I see the source code?&lt;/p&gt;&#xA;" OwnerUserId="37" LastActivityDate="2015-07-02T17:10:46.650" Title="How do I see the source code of Notepad++?" Tags="&lt;source&gt;" AnswerCount="2" CommentCount="2" ClosedDate="2015-07-02T17:49:24.133" />
  <row Id="782" PostTypeId="2" ParentId="777" CreationDate="2015-07-02T16:45:45.510" Score="15" Body="&lt;p&gt;Short answer: because the CC licenses have not been designed for software and source code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is &lt;a href=&quot;https://wiki.creativecommons.org/wiki/Frequently_Asked_Questions#Can_I_use_a_Creative_Commons_license_for_software.3F&quot;&gt;answered by Creative Commons themselves&lt;/a&gt; in their FAQ:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Unlike software-specific licenses, CC licenses do not contain specific&#xA;  terms about the distribution of source code, which is often important&#xA;  to ensuring the free reuse and modifiability of software. Many&#xA;  software licenses also address patent rights, which are important to&#xA;  software but may not be applicable to other copyrightable works.&#xA;  Additionally, our licenses are currently not compatible with the major&#xA;  software licenses, so it would be difficult to integrate CC-licensed&#xA;  work with other free software. Existing software licenses were&#xA;  designed specifically for use with software and offer a similar set of&#xA;  rights to the Creative Commons licenses.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="83" LastActivityDate="2015-07-02T16:45:45.510" CommentCount="0" />
  <row Id="783" PostTypeId="2" ParentId="779" CreationDate="2015-07-02T16:47:46.343" Score="3" Body="&lt;p&gt;Under open source licenses, you are obligated to distribute the source code when you distribute the software. The exact way how you should do that differs per license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You don't have an obligation to keep hosting a project.&lt;/p&gt;&#xA;" OwnerUserId="97" LastEditorUserId="97" LastEditDate="2015-07-02T21:29:49.927" LastActivityDate="2015-07-02T21:29:49.927" CommentCount="2" />
  <row Id="784" PostTypeId="2" ParentId="781" CreationDate="2015-07-02T17:00:05.090" Score="0" Body="&lt;p&gt;The source code to notepad ++ can be downloaded &lt;a href=&quot;https://notepad-plus-plus.org/download/v6.7.9.2.html/&quot; rel=&quot;nofollow&quot;&gt;here.&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The link is the last bulletin under the download button. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note, if you want to edit and run the product you will need to use a compiler.&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="271" LastEditDate="2015-07-02T17:10:46.650" LastActivityDate="2015-07-02T17:10:46.650" CommentCount="0" />
  <row Id="785" PostTypeId="2" ParentId="781" CreationDate="2015-07-02T17:02:14.717" Score="3" Body="&lt;p&gt;The &lt;a href=&quot;https://notepad-plus-plus.org/download/v6.7.9.2.html&quot; rel=&quot;nofollow&quot;&gt;downloads page&lt;/a&gt; lists a source code download (the last download on the list). The link points to a &lt;a href=&quot;https://github.com/notepad-plus-plus/notepad-plus-plus/releases/tag/v6.7.9.2&quot; rel=&quot;nofollow&quot;&gt;GitHub release&lt;/a&gt; of the current version.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It's mostly written in C++, so you will need some method of compiling it if you want to run and modify it. Personally, I use MS Visual Studio 2013 because of its multi-language capabilities.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To be notified of when a new version of the source code comes out, you can watch the GitHub repository and a notification will be delivered to your GH account whenever it is updated.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-07-02T17:02:14.717" CommentCount="0" />
  <row Id="786" PostTypeId="2" ParentId="780" CreationDate="2015-07-02T17:02:39.857" Score="0" Body="&lt;p&gt;The best way to know if you are at the correct site is to look for a &quot;clean&quot; link. By this I mean:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;no subdomains (ie: &lt;code&gt;firefox.download.ca&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;look for &lt;code&gt;https&lt;/code&gt; in the url&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;In this example, this is the correct link for downloading mozilla firefox:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/new/&quot; rel=&quot;nofollow&quot;&gt;https://www.mozilla.org/en-US/firefox/new/&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="29" LastEditDate="2015-07-02T17:17:55.753" LastActivityDate="2015-07-02T17:17:55.753" CommentCount="0" />
  <row Id="787" PostTypeId="2" ParentId="780" CreationDate="2015-07-02T17:04:33.293" Score="2" Body="&lt;p&gt;Wherever possible, you should download software directly from the vendor. If that's not possible, use a trusted, preferably secure (HTTPS) source such as softonic.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Firefox is made and released by Mozilla, so you should download from them wherever possible. The downloads page is &lt;a href=&quot;https://www.mozilla.org/en-GB/firefox/new/&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;There are some indicators I use to determine how trustworthy a downloads site is:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Page written in bad English - &lt;strong&gt;bad&lt;/strong&gt; but not 'leave this site now'&lt;/li&gt;&#xA;&lt;li&gt;Page served over HTTP - ditto&lt;/li&gt;&#xA;&lt;li&gt;Page &lt;em&gt;doesn't have&lt;/em&gt; a HTTPS version (not just they served over HTTP, but no secure version exists) - &lt;strong&gt;bad&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&quot;FREE! ABSOLUTELY FREE! NO RISK! VIRUS SAFE!&quot; - &lt;strong&gt;get away from there&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;If they can't get the name right (&lt;a href=&quot;https://www.google.co.uk/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=7&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=0CEgQFjAG&amp;amp;url=http%3A%2F%2Fwww.downloadfirefoxbrowser.com%2F&amp;amp;ei=Cm-VVdxTpqnsBpGGgKAD&amp;amp;usg=AFQjCNHzYR1m0BY7wnJDE-pFJq2WOv-qWg&amp;amp;sig2=9N5zYyB5v2OZyb7bTwXUkA&amp;amp;bvm=bv.96952980,d.ZGU&quot; rel=&quot;nofollow&quot;&gt;&quot;Fire Fox&quot;, anyone?&lt;/a&gt;) - &lt;strong&gt;bad&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-07-02T18:27:56.133" LastActivityDate="2015-07-02T18:27:56.133" CommentCount="2" />
  <row Id="789" PostTypeId="1" AcceptedAnswerId="790" CreationDate="2015-07-02T17:21:40.703" Score="2" ViewCount="56" Body="&lt;p&gt;Suppose I have a peice of software that I am developing with a group of friends. Suppose we license our work under a CC license and publish it on the internet.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If we license our software as open source are we legally obligated to provide access to the source code? If no, why not? Is this just optional?&lt;/p&gt;&#xA;" OwnerUserId="271" LastActivityDate="2015-07-02T17:32:39.007" Title="Am I legally obligated to provide access to my open source project?" Tags="&lt;licensing&gt;" AnswerCount="1" CommentCount="1" />
  <row Id="790" PostTypeId="2" ParentId="789" CreationDate="2015-07-02T17:32:39.007" Score="6" Body="&lt;p&gt;Creative Commons licenses &lt;a href=&quot;https://wiki.creativecommons.org/wiki/Frequently_Asked_Questions#Can_I_apply_a_Creative_Commons_license_to_software.3F&quot;&gt;aren't appropriate for software&lt;/a&gt;, in particular because they contain no requirement on the availability of source code. So technically (and legally) you could distribute your software as binaries under a CC license, and licensees would be allowed to modify the binaries, but that wouldn't be open source by any definition.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;a href=&quot;http://opensource.org/osd&quot;&gt;Open Source Definition&lt;/a&gt;, section 2, requires the availability of source code:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The program must include source code, and must allow distribution in source code as well as compiled form. Where some form of a product is not distributed with source code, there must be a well-publicized means of obtaining the source code for no more than a reasonable reproduction cost preferably, downloading via the Internet without charge. The source code must be the preferred form in which a programmer would modify the program. Deliberately obfuscated source code is not allowed. Intermediate forms such as the output of a preprocessor or translator are not allowed.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="118" LastActivityDate="2015-07-02T17:32:39.007" CommentCount="0" />
  <row Id="791" PostTypeId="2" ParentId="650" CreationDate="2015-07-02T18:05:33.450" Score="4" Body="&lt;p&gt;I wrote to the FSF's licensing team about this question:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;[...] Does this [section 13] mean that if I run a *completely unmodified* AGPL-licensed program as a network service, I am *not* required to offer the source code to network users?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;And I received this response (bracketed phrase added by me):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;[...] If you haven't modified the software then you are not required to add that functionality [i.e., to download the source]. Of course, if the functionality to download the source is already in the unmodified software, it will already be there for everyone to enjoy.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So, if you use an unmodified AGPL application that doesn't have download-source functionality, &lt;strong&gt;you are not required to add one&lt;/strong&gt; or otherwise offer the source to users. If you do modify the software, of course, you are required to add a mechanism to allow users to download your modified source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As a practical matter, an author who cares about source-sharing enough to license code under the AGPL would probably include a mechanism or link to download the source in the original program. This is kind of an edge case, because it only applies when both (1) you want to use the AGPL software unmodified, and (2) the AGPL software doesn't already include a download-source mechanism. If either of those conditions is false, the software must (or already does) include a way to download the source.&lt;/p&gt;&#xA;" OwnerUserId="50" LastEditorUserId="50" LastEditDate="2015-07-02T18:25:20.390" LastActivityDate="2015-07-02T18:25:20.390" CommentCount="1" />
  <row Id="793" PostTypeId="1" AcceptedAnswerId="795" CreationDate="2015-07-02T18:23:05.247" Score="2" ViewCount="36" Body="&lt;p&gt;Suppose I had a table in a database. This table contains user profile information. Each profile has: Name, birthdate, username, mini-bio, gender. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Suppose I wanted to make the &quot;mini bio&quot; column open source but wanted to keep &quot;age&quot; closed source, could I do this? &lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-07-02T20:48:27.670" LastActivityDate="2015-07-02T20:48:27.670" Title="Can you open source part of a database and keep another part closed?" Tags="&lt;licensing&gt;&lt;database&gt;" AnswerCount="1" CommentCount="1" />
  <row Id="795" PostTypeId="2" ParentId="793" CreationDate="2015-07-02T18:35:29.773" Score="2" Body="&lt;p&gt;The old &quot;you're the owner&quot; comes up again... yes, you could. The only problem here is the implementation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To implement this, you simply need to make the mini-bio column publically available, perhaps through a UI on a website. You can keep the rest of the database private. You can then say at the bottom of each page&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;mini-bios licensed under cc-by-sa with attribution required&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;and it's open-source.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-07-02T18:35:29.773" CommentCount="0" />
  <row Id="798" PostTypeId="2" ParentId="421" CreationDate="2015-07-02T21:05:26.080" Score="1" Body="&lt;p&gt;I'm not entirely sure what computable data (google searches give me how to compute and what not), so I'll be using the assumption that your data is like software source code. Please correct me if I am wrong in doing this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As you would like a software license, Creative Commons should be out of the question. Their licenses aren't designed or suited for the use in software applications, but rather for use in the creative works.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;All open source licenses allow sharing and forking. With this, any license that you find as OSI approved should be suitable.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;About re-licensing. If you want people to redistribute under the same or compatible license, you &lt;em&gt;need&lt;/em&gt; the ShareAlike clause. This is also known as copyleft. I'm going to assume that you would like people to redistribute under the same/compatible license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I would recommend the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.en.html&quot; rel=&quot;nofollow&quot;&gt;GPL&lt;/a&gt; license for a couple of reasons:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;It allows sharing and forking, like other licenses. People will be able to modify and distribute.&lt;/li&gt;&#xA;&lt;li&gt;It doesn't allow others to redistribute under the same license.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-07-02T21:05:26.080" CommentCount="11" />
  <row Id="799" PostTypeId="2" ParentId="489" CreationDate="2015-07-02T21:15:39.210" Score="1" Body="&lt;p&gt;People used ported versions of Creative Commons licenses because they hoped to take advantage of local legislation that would've supported them in their work. Take this into consideration:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I take a photo, and there's a specific law in Canada that says that my photo is super special, and is bound to receive rights under the federal law. As such, I may choose an appropriate license that allows me to say distribute, while still receiving the benefits of the local legislation. Making use of local legislation was one of the main motivators for choosing a ported license.&lt;/p&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-07-02T21:15:39.210" CommentCount="0" />
  <row Id="800" PostTypeId="2" ParentId="758" CreationDate="2015-07-02T21:19:13.230" Score="3" Body="&lt;p&gt;You can get close.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The GPL is a good example of a license that is widely acknowledged as open source. The GPL prohibits linking with libraries that are distributed under GPL-incompatible licenses. However, the GPL makes an exception for libraries that are distributed as part of an operating system. (That's the short and perhaps not 100% accurate version.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you create license that is roughly the same as the GPL, except not containing any exceptions for system libraries, then you've effectively guaranteed that your own software, although still open source, cannot legally be compiled by the typical system compilers on Microsoft Windows, nor on some other closed source operating systems. Or more precisely, that the output of that compilation cannot legally be distributed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This does not prohibit anyone from running your software in an emulation environment, though, or with non-standard libraries that provide similar functionality as the system libraries. Prohibiting that goes against fundamental principles of both the Open Source and the Free Software movements and as answered already makes your own application non-free. For example, suppose that your license allows running your application under Cygwin, then the &lt;a href=&quot;http://opensource.org/osd&quot; rel=&quot;nofollow&quot;&gt;Open Source Definition&lt;/a&gt; makes it clear in points 9 and 3 that if someone wishes to distribute your application along with a minimal version of Cygwin pre-configured to just work, and you wish to word your license in a way to stop that, then your license is not Open Source.&lt;/p&gt;&#xA;" OwnerUserId="402" LastActivityDate="2015-07-02T21:19:13.230" CommentCount="6" />
  <row Id="801" PostTypeId="1" CreationDate="2015-07-03T01:46:05.133" Score="2" ViewCount="30" Body="&lt;p&gt;For Free/Opensource documentation, There are two license widely used.&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.gnu.org/licenses/fdl-1.3.txt&quot; rel=&quot;nofollow&quot;&gt;GNU Free Documentation License&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://creativecommons.org/licenses/by-sa/3.0/legalcode&quot; rel=&quot;nofollow&quot;&gt;Creative Commons BY-Share Alike&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;Both say re-distribution must be under same license as GFDL is copyleft and CC-BY-SA is with share-alike attribution.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, I want to know whether they are compatible with each other or not? Further which should be used when?&lt;/p&gt;&#xA;" OwnerUserId="296" LastEditorUserId="296" LastEditDate="2015-07-03T01:59:24.673" LastActivityDate="2015-07-03T02:53:07.727" Title="GFDL and CC BY-SA compatibility and Use" Tags="&lt;license-compatibility&gt;&lt;cc-by-sa&gt;&lt;gfdl&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="802" PostTypeId="5" CreationDate="2015-07-03T01:49:36.897" Score="0" Body="&lt;h3&gt;Related tags&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;/questions/tagged/creative-commons&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &amp;#39;creative-commons&amp;#39;&quot; rel=&quot;tag&quot;&gt;creative-commons&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;/questions/tagged/cc-by&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &amp;#39;cc-by&amp;#39;&quot; rel=&quot;tag&quot;&gt;cc-by&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h3&gt;All CC BY-SA licenses&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://creativecommons.org/licenses/by-sa/1.0/&quot; rel=&quot;nofollow&quot;&gt;https://creativecommons.org/licenses/by-sa/1.0/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://creativecommons.org/licenses/by-sa/2.0/&quot; rel=&quot;nofollow&quot;&gt;https://creativecommons.org/licenses/by-sa/2.0/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://creativecommons.org/licenses/by-sa/2.5/&quot; rel=&quot;nofollow&quot;&gt;https://creativecommons.org/licenses/by-sa/2.5/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://creativecommons.org/licenses/by-sa/3.0/&quot; rel=&quot;nofollow&quot;&gt;https://creativecommons.org/licenses/by-sa/3.0/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/&quot; rel=&quot;nofollow&quot;&gt;https://creativecommons.org/licenses/by-sa/4.0/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="138" LastEditorUserId="138" LastEditDate="2015-07-05T16:36:35.293" LastActivityDate="2015-07-05T16:36:35.293" CommentCount="0" />
  <row Id="803" PostTypeId="4" CreationDate="2015-07-03T01:49:36.897" Score="0" Body="For questions about the Creative Commons Attribution-ShareAlike (CC BY-SA) licenses." OwnerUserId="296" LastEditorUserId="138" LastEditDate="2015-07-05T09:33:08.907" LastActivityDate="2015-07-05T09:33:08.907" CommentCount="0" />
  <row Id="804" PostTypeId="5" CreationDate="2015-07-03T01:51:07.427" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-03T01:51:07.427" LastActivityDate="2015-07-03T01:51:07.427" CommentCount="0" />
  <row Id="805" PostTypeId="4" CreationDate="2015-07-03T01:51:07.427" Score="0" Body="Questions about GNU Free Documentation License (GFDL is copylefted)" OwnerUserId="296" LastEditorUserId="296" LastEditDate="2015-07-03T06:23:55.163" LastActivityDate="2015-07-03T06:23:55.163" CommentCount="0" />
  <row Id="806" PostTypeId="2" ParentId="801" CreationDate="2015-07-03T02:53:07.727" Score="3" Body="&lt;p&gt;From the &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/3.0/legalcode&quot; rel=&quot;nofollow&quot;&gt;Creative Commons Attribution-ShareAlike 3.0 legal code&lt;/a&gt; (version 4.0 has similar wording):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You may Distribute or Publicly Perform an Adaptation only under the terms of:...(iv) a Creative Commons Compatible License.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&quot;Creative Commons Compatible License&quot; means a license that is listed at &lt;a href=&quot;https://creativecommons.org/compatiblelicenses&quot; rel=&quot;nofollow&quot;&gt;https://creativecommons.org/compatiblelicenses&lt;/a&gt; that has been approved by Creative Commons as being essentially equivalent to this License&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;From the above link:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Currently, no non-CC licenses have been designated as compatible with BY-SA 3.0&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Currently, the Free Art license 1.3 is the only “BY-SA–Compatible License” for version 4.0.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So no, you cannot incorporate content from a CC-BY-SA work into a GFDL work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Going the other direction is even more restrictive.  From &lt;a href=&quot;http://www.gnu.org/licenses/fdl-1.3.txt&quot; rel=&quot;nofollow&quot;&gt;section 4 of the GFDL 1.3&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You may copy and distribute a Modified Version of the Document under&#xA;  the conditions of sections 2 and 3 above, provided that you release&#xA;  the Modified Version under precisely this License&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;It's quite explicit that the only permissible license for a derivative work of a GFDL document is the GFDL.  Section 11 (relicensing) doesn't change anything: it's essentially the &quot;Wikipedia clause&quot;, included to permit the Wikimedia Foundation to change from the GFDL to CC-BY-SA.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In general, if you are interested in creating genuinely open content, &lt;a href=&quot;https://commons.wikimedia.org/wiki/File:BD-propagande_colour_en.jpg&quot; rel=&quot;nofollow&quot;&gt;the GFDL should not be used&lt;/a&gt;.  The mechanics of complying with it are extremely unwieldy: in particular, the requirement to include a copy of the 23KB of license text make it impractical for anything but electronic content or book-sized printed works.&lt;/p&gt;&#xA;" OwnerUserId="240" LastActivityDate="2015-07-03T02:53:07.727" CommentCount="0" />
  <row Id="807" PostTypeId="1" CreationDate="2015-07-03T03:22:49.900" Score="15" ViewCount="120" Body="&lt;p&gt;I started an open source app, &lt;a href=&quot;https://github.com/ankidroid/Anki-Android&quot;&gt;AnkiDroid&lt;/a&gt;, which had been pretty successful so far, and I have managed to get it translated to 40 languages, but somehow almost nobody in India uses it (usage is very low compared to the number of Android users in India).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is a big problem because I launched the app specifically to help students in countries like India. I think it is a chicken-and-egg problem: No Indian users mean no Hindi/Bengali/etc localizations get contributed to &lt;a href=&quot;https://crowdin.com/project/ankidroid&quot;&gt;the Crowdin crowd translation platform that we use&lt;/a&gt;. For instance, the app only got popular in Japan after I convinced a Japanese friend to translate it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;QUESTION:&lt;/strong&gt; How can I kickstart a Hindi translation?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Paying a professional translator is out of reach as the project does not generate any money. Is there maybe a kind of &quot;localization exchange&quot; platform where Hindi speakers would translate my app in exchange for me translating their app into Greek? Or any other solution to this chicken-and-egg problem?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are tens of translation platforms with the same features as the one we are using, so if your answer is to suggest another one, please make sure to explain how it is different, thanks! Maybe a solution could be a translation platform with &quot;points&quot;, where people would earn points for good translations, and give their points as &quot;bounty&quot; to the project+language of their choice?&lt;/p&gt;&#xA;" OwnerUserId="199" LastEditorUserId="98" LastEditDate="2015-07-06T13:51:14.447" LastActivityDate="2015-07-10T19:36:40.753" Title="How can I encourage translations for my app?" Tags="&lt;marketing&gt;&lt;localization&gt;&lt;crowdsourcing&gt;&lt;gamification&gt;" AnswerCount="5" CommentCount="17" FavoriteCount="2" />
  <row Id="809" PostTypeId="2" ParentId="807" CreationDate="2015-07-03T08:15:30.503" Score="7" Body="&lt;p&gt;When you can't find a volunteer to do it, you might have to put in some money and hire a translator. When you do not have the money yourself but you have a sizable community, you might be able to get the money through crowdfunding.&lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="97" LastEditDate="2015-07-03T09:22:02.300" LastActivityDate="2015-07-03T09:22:02.300" CommentCount="0" />
  <row Id="810" PostTypeId="1" AcceptedAnswerId="841" CreationDate="2015-07-03T10:14:33.590" Score="9" ViewCount="144" Body="&lt;p&gt;I am currently an apprentice software developer at a small company where we develop a piece of proprietary software. I have no major gripes with this (especially not at this point yet), but would prefer to work on open source or free (as in speech) software only.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'm not currently willing to quit my job and work in another field or put all my eggs in one basket and work full time on a project of my own (I am however willing to  join a small startup as long as I get paid a regular wage, though that does of course entail less security and possibly a smaller wage). So my question is: &lt;/p&gt;&#xA;&#xA;&lt;p&gt;As a junior software developer, will limiting myself to open source leave me with sufficient job security?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note that I am theoretically willing to relocate, so if the opportunities only exist in a certain area, this is no problem for the scope of this question. I also don't necessarily want you to tell me if I can make it or not, but rather to lay out clearly (and preferably supported by references or relevant personal experience) how much more difficult it is to get a job if you limit yourself to open source.&lt;/p&gt;&#xA;" OwnerUserId="168" LastEditorUserId="168" LastEditDate="2015-07-04T06:09:03.633" LastActivityDate="2015-07-11T10:35:37.857" Title="Is making a living by working only on FLOSS projects a viable option?" Tags="&lt;programming&gt;&lt;career&gt;" AnswerCount="4" CommentCount="9" FavoriteCount="1" />
  <row Id="811" PostTypeId="1" CreationDate="2015-07-03T11:23:16.690" Score="6" ViewCount="92" Body="&lt;p&gt;Two famous programs by Google are:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Code-in for pre-university students&lt;/li&gt;&#xA;&lt;li&gt;Summer of Code for students currently enrolled in a university&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Both of these programs take a limited number of students and many students who do want to get involved and can get involved miss out due to the lack of relevant information. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Yet another program I know of is KDE's Season (During October-January).&lt;br&gt;&#xA;What are some other similar programs for students to get started?&lt;/p&gt;&#xA;" OwnerUserId="66" LastEditorUserId="69" LastEditDate="2015-07-03T15:27:37.230" LastActivityDate="2015-07-06T23:00:18.567" Title="In what ways can students get involved in Open Source?" Tags="&lt;students&gt;&lt;gsoc&gt;" AnswerCount="2" CommentCount="11" />
  <row Id="812" PostTypeId="2" ParentId="807" CreationDate="2015-07-03T11:34:46.657" Score="3" Body="&lt;p&gt;Ubuntu's &lt;a href=&quot;https://launchpad.net/&quot; rel=&quot;nofollow&quot;&gt;Launchpad site&lt;/a&gt; is set up to allow you to crowd source translations for your project, even from people who aren't users of it. I even got some contributions years after I stopped using it. So even if you don't use much of the rest of the site (unfortunately you will have to set up imports into their VCS), the translation service is valuable enough by itself.&lt;/p&gt;&#xA;" OwnerUserId="190" LastEditorUserId="190" LastEditDate="2015-07-03T11:39:54.457" LastActivityDate="2015-07-03T11:39:54.457" CommentCount="5" />
  <row Id="813" PostTypeId="1" AcceptedAnswerId="816" CreationDate="2015-07-03T11:41:05.490" Score="2" ViewCount="56" Body="&lt;p&gt;Open source projects are backed by many people and organisations, for example Debian is backed by Developers and Ubuntu is backed by Canonical.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I would like to ask when is it necessary for an open source project to be backed by an organisation?&lt;/p&gt;&#xA;" OwnerUserId="228" LastEditorUserId="69" LastEditDate="2015-07-03T14:49:48.480" LastActivityDate="2015-07-03T22:38:52.957" Title="When is it necessary for an open source project to be backed by an organization" Tags="&lt;organisation-support&gt;&lt;organization&gt;" AnswerCount="2" CommentCount="3" FavoriteCount="1" ClosedDate="2015-07-07T09:43:48.813" />
  <row Id="814" PostTypeId="2" ParentId="779" CreationDate="2015-07-03T11:42:05.650" Score="4" Body="&lt;p&gt;There is no intrinsic legal notion of “ownership” of a project in the sense I think you mean. A creative work is collectively owned by all the people who made a nontrivial¹ contribution. The fact that one person may have control over the hosting, may be the ultimate arbiter of who gets commit rights, may be considered the charismatic leader, etc. does not make them “the owner” in a legal sense.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Participating in a creative work does not in itself carry legal² obligations³. You have legal obligations only if you entered a contract carrying these obligations.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Participation in an open source project that isn't public domain intrinsically requires entering a contract, namely, the project's &lt;strong&gt;license&lt;/strong&gt;. Most open source licenses are light on pure obligations, they only specify what the contractors are allowed to do. Open source licenses mostly list permissions and restrictions to these permissions, but the restrictions only forbid things that would be forbidden by copyright law in the absence of a license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It would be atypical for an open source license to carry an obligation to make the project available, except for one thing: some licenses require that if you distribute a derived product, you also distribute the source. For example, the GNU GPL has such provisions, §3 in &lt;a href=&quot;https://www.gnu.org/licenses/gpl-2.0.en.html&quot; rel=&quot;nofollow&quot;&gt;GPL v2&lt;/a&gt; and §6 in &lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0.en.html&quot; rel=&quot;nofollow&quot;&gt;GPL v3&lt;/a&gt;. The GNU GPL obligations on source distribution can be summarized by grouping them in two ways:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;You may distribute the source code alongside the derived product, under broadly similar terms. With this method, if you shut down the method to distribute the derived product, you are free of any further obligation regarding the source code.&lt;/li&gt;&#xA;&lt;li&gt;If you make a distribution that lacks source code, you must fulfill requests to distribute the source code at cost (or cheaper) for the next three years.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;The source code distribution offer is an obligation on the distributor, who need not be a copyright holder and thus might not own the project at all. The easiest way not to incur any obligation is to always offer the source code alongside the derived product (offer it for download on the same server, put in in the same CD pack, etc.).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There may be a completely different sense in which you're a project owner, and that's if you get &lt;strong&gt;funding&lt;/strong&gt;. When someone gives you money, ostensibly to work on a project, they generally require you to sign a contract promising some delivery. A funding contract is likely to obligate you to deliver your work (and possibly to coordinate, incorporate and deliver other people's work) at least to the funder. It may also obligate you to distribute the work to the public at large (e.g. if it's a grant to cover distribution costs). There's no standard form for such contracts, so read yours carefully, and get help from a lawyer if you're in doubt.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;¹ &lt;sub&gt; I'm not going to go into what constitutes nontrivial here as it's irrelevant for this question. &lt;/sub&gt;&lt;br&gt;&#xA;² &lt;sub&gt; I'm assuming “typical” jurisdictions, e.g. US or EU. &lt;/sub&gt;&lt;br&gt;&#xA;³ &lt;sub&gt; Excluding some very specialized domains which might be subject to restrictions, e.g. knowledge pertaining to nuclear weapons. &lt;/sub&gt;  &lt;/p&gt;&#xA;" OwnerUserId="60" LastActivityDate="2015-07-03T11:42:05.650" CommentCount="0" />
  <row Id="816" PostTypeId="2" ParentId="813" CreationDate="2015-07-03T12:58:04.043" Score="4" Body="&lt;p&gt;You can read the whole thing or go straight to the point (look for a TL;DR) &lt;/p&gt;&#xA;&#xA;&lt;p&gt;According to me, here's a possible timeline for an Open Source project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;The Idea&lt;/strong&gt;&lt;br&gt;&#xA;You think the world needs something that software can provide.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;The initial commits&lt;/strong&gt;&lt;br&gt;&#xA;You start off with a Git/SVN/Bzr/Hg repository and start pushing some code to it. You release v0.1 and show it off on Hacker News.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Userbase development&lt;/strong&gt;&lt;br&gt;&#xA;Some people see that your software is really helpful, and start using it. It gets used as a library over 10 more projects (or you get a userbase of 1k).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Contributors!&lt;/strong&gt;&lt;br&gt;&#xA;Someone feels that your project is awesome and can be improved upon further. He sends you a pull request. More developers follow.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Org development&lt;/strong&gt;&lt;br&gt;&#xA;Over a few months you have several developers working on the project and its derivatives. You all decide to call yourself &lt;em&gt;Organisation X&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Growth&lt;/strong&gt;&lt;br&gt;&#xA;OrgX has grown - both in terms of number of developers and the scope of software it produces. There are 15-20 developers who were there from the start and care for the org. There are new developers each day wanting to become contributors - to get a feel of Open Source or to develop their skills or to simply develop the application they love.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Funds ahoy!&lt;/strong&gt;    &lt;/p&gt;&#xA;&#xA;&lt;h1&gt;TL;DR&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;As you grow, you need funds for various purposes:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;To reward developers&lt;/li&gt;&#xA;&lt;li&gt;To have meetups - not all developers live at the same place&lt;/li&gt;&#xA;&lt;li&gt;To increase your brand value - users (not necessarily developers) choose products by their brand value. To actually increase that, you need to be an active promoter by sending off swag, ads, etc.&lt;/li&gt;&#xA;&lt;li&gt;To maintain servers - as you grow in userbase, your hits increase and you need bigger servers to maintain the cost.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;And many more.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Once in a while donation, kickstarter campaigns are good, but not enough. Hence, at times you &lt;em&gt;need&lt;/em&gt; an organisation to back you. The organisation provides you with funds, visibility and sometimes infrastructure, and you increase the org's visibility (and make them less evil).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, &lt;em&gt;this&lt;/em&gt; is the time when it's necessary for an open source project/organisation to be backed.&lt;/p&gt;&#xA;" OwnerUserId="66" LastActivityDate="2015-07-03T12:58:04.043" CommentCount="2" />
  <row Id="817" PostTypeId="2" ParentId="813" CreationDate="2015-07-03T13:09:53.963" Score="-2" Body="&lt;p&gt;No project ever &lt;strong&gt;&lt;em&gt;needs&lt;/em&gt;&lt;/strong&gt; the support of an organisation. Even very large ones can be the work of a single individual, and need neither financial or logistically support. Arguably you could say that every project could proceed that way, though obviously many projects benefit greatly from having organisational backing.&lt;/p&gt;&#xA;" OwnerUserId="190" LastEditorUserId="190" LastEditDate="2015-07-03T22:38:52.957" LastActivityDate="2015-07-03T22:38:52.957" CommentCount="6" />
  <row Id="818" PostTypeId="1" CreationDate="2015-07-03T14:39:18.410" Score="12" ViewCount="90" Body="&lt;p&gt;How can an open source project get volunteer contributors to document their contribution properly?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Real-world example:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;We've got an open source project with a scripting interface. Gradually we are adding more and more script bindings to it. Obviously, users can only use our script bindings when they know they exist and what they do.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For that reason I did this:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I launched a sub-section on our wiki to document script bindings&lt;/li&gt;&#xA;&lt;li&gt;I created a documentation template for script bindings on the wiki&lt;/li&gt;&#xA;&lt;li&gt;I documented all the script bindings I made and a few I did not make using said template.&lt;/li&gt;&#xA;&lt;li&gt;I added a comment to the source file where all script bindings need to be declared &lt;code&gt;// When you add a script binding, remember to document it on https://wiki.example.org/scripting&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;When a developer pushed a change adding a script binding, I told them on our IRC channel &lt;code&gt;Thank you for your commit. Remember to document your new script binding on https://wiki.example.org/scripting&lt;/code&gt;. Usual answer: &lt;code&gt;Yeah, yeah, I'll do it whenever I have time&lt;/code&gt;. Usually they don't.&lt;/li&gt;&#xA;&lt;li&gt;When one of the users I support complains about the lack of documentation, I forward said complaint to whoever made the binding or to the IRC channel in general.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;None of that really helped. The majority of our script bindings are still undocumented. What else can I do to get people to document their work properly?&lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="69" LastEditDate="2015-07-03T16:37:23.480" LastActivityDate="2015-07-04T01:29:43.277" Title="How can I get contributors to document properly?" Tags="&lt;project-management&gt;&lt;contributor&gt;&lt;documentation&gt;" AnswerCount="3" CommentCount="0" FavoriteCount="1" />
  <row Id="819" PostTypeId="2" ParentId="818" CreationDate="2015-07-03T15:47:15.990" Score="13" Body="&lt;p&gt;Don't merge, unless it meets your demands. All contributions are welcome, but only those that meet your standards are merged.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Whether that is test coverage, a style guide, or documentation, it shouldn't be merged until it's OK. You can choose to do it yourself when you're merging, or you can turn down the patch until it does.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As the maintainer, you are responsible for the quality of the project. You don't have infinite time (I assume), so turning down a patch because it doesn't meet the standards, and you don't have time to make it meet them is completely acceptable, and in many cases expected. &lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-07-03T15:47:15.990" CommentCount="3" />
  <row Id="820" PostTypeId="2" ParentId="818" CreationDate="2015-07-03T16:29:26.580" Score="5" Body="&lt;p&gt;I think you're missing out on a couple things: motivation, and a suitable quality standard.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It seems as if your developers aren't totally motivated. Many people (including myself) are interesting in writing the code, testing it and seeing if it works, not doing the paper work all the time for other people. The programs that I wrote in school normally suffered because my teacher would slam me due to the lack of comments, and he did it for the same reason. There was no clear words on to what the heck I was doing. I reasoned that the code made perfect sense - I had good variable names, and clear concise methods. It made perfect sense, but &lt;em&gt;only&lt;/em&gt; to me. Even with templates, people won't do it, most of the time because they might not see the need. Therefore, I would make it so that we can help them see the need. This would likely be done through increased collaboration between your developers, and perhaps more interaction between the developers and the community. Make them feel appreciated, and show them that what they do is important to many people. It could inspire them.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As for the other part, the quality standard, make a level that makes sense, so that developers will make these documents. If their submissions don't satisfy you, don't approve of them, and instead politely reject and perhaps provide feedback, that doesn't give the impression that you want this. Similar to the two stars and a wish.&lt;/p&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-07-03T16:29:26.580" CommentCount="3" />
  <row Id="822" PostTypeId="1" AcceptedAnswerId="824" CreationDate="2015-07-03T20:52:56.880" Score="5" ViewCount="88" Body="&lt;p&gt;During development of &lt;a href=&quot;http://opensource.stackexchange.com/users/388/parrotbot&quot;&gt;ParrotBot&lt;/a&gt;, I've ran into many issues in terms of debugging, design and integration. In the chat room, I've received lots of support that has helped me greatly, so that I could continue the project, with ease.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, I've started wondering whether I could possibly be charged for this &quot;support.&quot; Having forked an open source project, could I be charged for this, being the developer of the forked version?&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-07-04T11:59:09.250" LastActivityDate="2015-07-04T11:59:09.250" Title="Can I be charged for support from the original developers when I fork a project?" Tags="&lt;forking&gt;&lt;monetization&gt;&lt;support&gt;" AnswerCount="2" CommentCount="1" />
  <row Id="823" PostTypeId="2" ParentId="822" CreationDate="2015-07-03T20:58:31.903" Score="6" Body="&lt;p&gt;&lt;strong&gt;Yes and no:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Yes if....&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You have previously agreed to pay them for their service. For example if you went to the people helping you and said &quot;I will give you $20 to help me&quot;. Them agreeing to help you under those conditions ( for $20) is a contract between you and the person helping you, you therefore need to pay him / her.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;No if... &lt;/p&gt;&#xA;&#xA;&lt;p&gt;They provide support and then later demand you pay them for helping you. Under this situation you never agreed to pay them and they provided a service. However you can CHOOSE to pay them, but this is not necessary.&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="271" LastEditDate="2015-07-03T21:08:21.013" LastActivityDate="2015-07-03T21:08:21.013" CommentCount="2" />
  <row Id="824" PostTypeId="2" ParentId="822" CreationDate="2015-07-03T21:09:33.107" Score="10" Body="&lt;p&gt;Not after you've been given it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When giving you support, the supporter (the dev in this case) has essentially said &quot;I'm happy with the payment I'm getting for this.&quot; If the payment is nothing, fine. They're happy.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;They can't suddenly change their mind after giving you the support and say &quot;hey pay me for that now&quot; - it'd be like someone giving you a present and saying 3 months later, &quot;hey you should pay me back&quot; - you wouldn't stand for it, and they have no legal standpoint for it. It's already been gifted.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What they &lt;em&gt;can&lt;/em&gt; do is refuse you support until you pay. That's OK under open/free licenses, and it's them wanting a support contract: in return for their help, you give them money.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-07-03T21:09:33.107" CommentCount="0" />
  <row Id="825" PostTypeId="1" CreationDate="2015-07-03T21:28:48.660" Score="3" ViewCount="29" Body="&lt;p&gt;Obviously there will be some differences, but are there some points of etiquette that are common to most open source projects and should be taken into account before contributing?&lt;/p&gt;&#xA;" OwnerUserId="37" LastActivityDate="2015-07-04T01:05:00.137" Title="Is there any general open source etiquette, or is it specific to each project?" Tags="&lt;etiquette&gt;" AnswerCount="2" CommentCount="0" />
  <row Id="826" PostTypeId="1" CreationDate="2015-07-03T21:31:44.737" Score="10" ViewCount="131" Body="&lt;p&gt;When submitting a contribution to an open source project, whether a bug fix or a new feature, is testing this new code the responsibility of the person contributing it, or can testing be left to whoever decides whether to accept the new code?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is there a division of labour with some people contributing code and others taking care of testing, or must every contributor also be a tester?&lt;/p&gt;&#xA;" OwnerUserId="37" LastEditorUserId="69" LastEditDate="2015-08-02T22:50:24.637" LastActivityDate="2015-08-02T23:26:31.043" Title="Whose responsibility is it to test contributions?" Tags="&lt;development&gt;&lt;collaboration&gt;&lt;testing&gt;" AnswerCount="6" CommentCount="0" />
  <row Id="827" PostTypeId="2" ParentId="811" CreationDate="2015-07-03T21:39:28.170" Score="-3" Body="&lt;p&gt;One great way for students to get involved in coding is through a program called:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://hourofcode.com/ca&quot; rel=&quot;nofollow&quot;&gt;Hour of Code.&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is a FREE online course that allows students to enter into the world of coding. It has video tutorials and examples, to teach you the techniques you need. After you watch a video you can then try the process yourself with a helpful ui.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some other examples of online coding websites include:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.codecademy.com/&quot; rel=&quot;nofollow&quot;&gt;http://www.codecademy.com/&lt;/a&gt;&#xA;&lt;a href=&quot;https://code.org/learn&quot; rel=&quot;nofollow&quot;&gt;https://code.org/learn&lt;/a&gt;&#xA;&lt;a href=&quot;https://www.codeavengers.com/&quot; rel=&quot;nofollow&quot;&gt;https://www.codeavengers.com/&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="271" LastEditDate="2015-07-03T21:47:01.683" LastActivityDate="2015-07-03T21:47:01.683" CommentCount="1" />
  <row Id="828" PostTypeId="2" ParentId="826" CreationDate="2015-07-03T21:42:39.977" Score="1" Body="&lt;p&gt;When contributing to an open source project you should always make sure your solutions / additions work. This is not only out of courtesy (for the people working on the project) but also for the sake of the project. What is the point of uploading your patch if it is only going to cause problems?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This being said if you test your code and contribute it to the project.. The other people can HELP you solve the problems with your addition. &lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="55" LastEditDate="2015-07-05T15:00:02.917" LastActivityDate="2015-07-05T15:00:02.917" CommentCount="0" />
  <row Id="829" PostTypeId="2" ParentId="825" CreationDate="2015-07-03T21:46:18.363" Score="0" Body="&lt;p&gt;When working on an open source project some things you should always keep in mind before starting the project:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;Who is working on what? You don't want to start a project and have 3 people doing EXACTLY the same thing at the same time.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;How much is each person going to contribute? This is important if you are working in a company and prevents some developers from working 1hr a week while others are working 20hr + a week. Make sure the other members of the group are comfortable working / dedicating X amount of time each day / week / month to the project.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Exactly where do you want the project to go? Make sure all members of the group know what EXACTLY what direction you want the project to go. If you don't to this some people may start doing things that are unnecessary to the project.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="271" LastEditorUserId="271" LastEditDate="2015-07-03T22:37:44.857" LastActivityDate="2015-07-03T22:37:44.857" CommentCount="4" />
  <row Id="830" PostTypeId="2" ParentId="826" CreationDate="2015-07-03T21:57:07.887" Score="9" Body="&lt;p&gt;I would believe that testing the project is the responsibility of all collaborators. It should fall under the hands of the contributor, as well as the maintainer. For example, a contributor should never let this go through (code in Python):&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;import os&#xA;os.system(&quot;rm -rf /&quot;) # Mua ha ha&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Contributors should be wary of what they submit, but they make mistakes. That's why testing should fall onto the entire group. Each person makes code, and each contributor and person involved in the project are responsible for integrating their contributions within the rest of the project. The project is a &lt;em&gt;collaborative&lt;/em&gt; effort, and all contributors should strive to make it as bug-free as possible.&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-07-04T14:10:21.500" LastActivityDate="2015-07-04T14:10:21.500" CommentCount="0" />
  <row Id="831" PostTypeId="5" CreationDate="2015-07-03T22:53:47.110" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-03T22:53:47.110" LastActivityDate="2015-07-03T22:53:47.110" CommentCount="0" />
  <row Id="832" PostTypeId="4" CreationDate="2015-07-03T22:53:47.110" Score="0" Body="For questions about statistical data relevant to the FLOSS movement" OwnerUserId="190" LastEditorUserId="190" LastEditDate="2015-07-04T03:19:05.630" LastActivityDate="2015-07-04T03:19:05.630" CommentCount="0" />
  <row Id="833" PostTypeId="5" CreationDate="2015-07-03T22:55:11.993" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-03T22:55:11.993" LastActivityDate="2015-07-03T22:55:11.993" CommentCount="0" />
  <row Id="834" PostTypeId="4" CreationDate="2015-07-03T22:55:11.993" Score="0" Body="For questions about the usages and roles of patents within open projects. This can concern protection of projects/patents, and their implications in licensing, projects, and usages." OwnerUserId="190" LastEditorUserId="69" LastEditDate="2015-07-22T07:42:06.557" LastActivityDate="2015-07-22T07:42:06.557" CommentCount="0" />
  <row Id="835" PostTypeId="2" ParentId="825" CreationDate="2015-07-04T01:05:00.137" Score="1" Body="&lt;p&gt;Well, there is no rule for etiquette, but there is common sense. Most internet communities have a form of etiquette, many explicitly did write it down. And you will find common points: don't hate, don't insult, don't threaten, don't troll. Be nice to others. This is no official common code, but it shows fast that if you actually tolerate bad behaviour your community will go down the toilet.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Actually, already the earliest internet communities in the usenet developed such an etiquette, they called it netiquette back then. It later got written down as &lt;a href=&quot;https://tools.ietf.org/html/rfc1855&quot; rel=&quot;nofollow&quot;&gt;RFC 1855&lt;/a&gt;. This also shares these common points.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So to get it simple: there is one uncodified general etiquette, but not specific for open source but for all forms of internet communities. Every project itself may have special rules though, you should ask or read documentation (if the specific community wrote their stance down).&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-07-04T01:05:00.137" CommentCount="1" />
  <row Id="836" PostTypeId="2" ParentId="818" CreationDate="2015-07-04T01:29:43.277" Score="1" Body="&lt;p&gt;Rejecting commits that don't include the documentation is to harsh and will alienate some contributors, as others have pointed out already. But treating them as second-class is something else. Define quality criterias for script-bindings. These include (but not only) the documentation. Bindings that fulfill these criteria get a constant set. Bindings without this can only be used if a certain option is set, can be removed completely with a compiler-flag and lead to a visible warning if used. That probably increases the interest in documenting it properly.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-07-04T01:29:43.277" CommentCount="0" />
  <row Id="837" PostTypeId="5" CreationDate="2015-07-04T09:08:07.870" Score="0" Body="&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Freeware&quot; rel=&quot;nofollow&quot;&gt;Freeware&lt;/a&gt; is computer software that is available for use at no monetary cost, which may have restrictions such as redistribution prohibited, and for which source code is not available.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is free-as-in-beer and could be qualified as gratis. Don't confuse with &lt;a href=&quot;/questions/tagged/free-software&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &amp;#39;free-software&amp;#39;&quot; rel=&quot;tag&quot;&gt;free-software&lt;/a&gt; (&lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.html&quot; rel=&quot;nofollow&quot;&gt;free-as-in-freedom&lt;/a&gt;)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also see: &lt;a href=&quot;http://www.linfo.org/freeware.html&quot; rel=&quot;nofollow&quot;&gt;Freeware Defination&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="296" LastEditorUserId="296" LastEditDate="2015-07-04T21:51:56.467" LastActivityDate="2015-07-04T21:51:56.467" CommentCount="0" />
  <row Id="838" PostTypeId="4" CreationDate="2015-07-04T09:08:07.870" Score="0" Body="Questions about freeware, a computer software that is available for use at no monetary cost, which may have restrictions such as redistribution prohibited, and for which source code is not available." OwnerUserId="296" LastEditorUserId="296" LastEditDate="2015-07-04T12:28:15.403" LastActivityDate="2015-07-04T12:28:15.403" CommentCount="0" />
  <row Id="839" PostTypeId="2" ParentId="826" CreationDate="2015-07-04T09:31:37.950" Score="3" Body="&lt;p&gt;I think that isn't the same for each project. A project which maintainers are burdened already with a lot of bugfixing and seldom find time is probably bad of with another patch adding functionality but probably also adding more bugs that is mostly untested. A project which is more or less stable for a long time and has a lot of contributors with enough spare time can handle that a lot better. So, it is overall a question of the policy the project sets.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That's said, more thorough testing on the side of contributor of the patch can never hurt.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-07-04T09:31:37.950" CommentCount="1" />
  <row Id="840" PostTypeId="1" AcceptedAnswerId="842" CreationDate="2015-07-04T10:40:22.523" Score="3" ViewCount="69" Body="&lt;p&gt;From &lt;a href=&quot;https://www.gnu.org/software/gnuzilla/&quot; rel=&quot;nofollow&quot;&gt;GNUzilla&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;GNUzilla is the GNU version of the Mozilla suite, and GNU IceCat is the GNU version of the Firefox browser. Its main advantage is an ethical one: it is entirely free software. While the Firefox source code from the Mozilla project is free software, &lt;strong&gt;they distribute and recommend non-free software as plug-ins and addons. Also their trademark license restricts distribution in several ways incompatible with freedom 0&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;emphasized by me&lt;/sup&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I want to understand the trademark license restriction. And how Firefox is not completely free. I would also like to ask: What are the differences between Firefox and IceCat?&lt;/p&gt;&#xA;" OwnerUserId="296" LastEditorUserId="296" LastEditDate="2015-07-04T16:07:48.513" LastActivityDate="2015-07-05T08:01:07.327" Title="Differences between Firefox and IceCat?" Tags="&lt;forking&gt;&lt;trademark&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="841" PostTypeId="2" ParentId="810" CreationDate="2015-07-04T10:47:31.113" Score="3" Body="&lt;p&gt;It's heavily dependent on where you are/who you work for.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Many companies exist solely to sell a product. These kinds of companies tend not to publish their code so that others don't steal their ideas (yes, it's &lt;em&gt;technically&lt;/em&gt; illegal but people will do it). If you're working for one of these companies, your best shot at contributing to open source is getting the jobs writing their utility libraries: since they're not directly &lt;em&gt;part&lt;/em&gt; of the software, only used by it, you might be able to persuade a manager that it'd be OK to release these as open-source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The kind of company you want to work for is a big company that's well known and has at least one major open source project - Mozilla for example. I say this because these companies are going to give you the most job security - enough people use their product and pay for other things they do that you're unlikely to be let go because there aren't enough customers. Of course, the best way to gain job security is always to be good at what you do so you're essential to your company.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you're not getting enough money, you can always try running your own open source projects on the side, and charging for support or access to extra documentation, etc. This may not bring in huge amounts, though, and you'll need to check with your employer about their side-project policies.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-07-05T15:05:01.857" LastActivityDate="2015-07-05T15:05:01.857" CommentCount="1" />
  <row Id="842" PostTypeId="2" ParentId="840" CreationDate="2015-07-04T10:55:48.267" Score="6" Body="&lt;p&gt;The main problem (that also led to the development of Debian's Iceweasel) is the &lt;a href=&quot;https://en.wikipedia.org/wiki/Mozilla_Corporation_software_rebranded_by_the_Debian_project&quot; rel=&quot;nofollow&quot;&gt;trademark issue&lt;/a&gt;, that binds the use of the name Firefox and the logo to certain requirements, that were unacceptable to Debian and GNU. For instance in the case of Debian, Mozilla demanded to upgrade the version of Firefox instead of backport bugfixes as Debian does it. These issues are avoided by renaming it and use a different logo. As the creation of &lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_IceCat&quot; rel=&quot;nofollow&quot;&gt;Icecat&lt;/a&gt; shows, that is pretty easy and functionality is unaffected.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Moreover, Icecat (and some Linux distributions) remove a number of files from the distribution, they esteem as nonfree. Here is a &lt;a href=&quot;http://cvs.savannah.gnu.org/viewvc/gnuzilla/remove.nonfree?revision=1.9&amp;amp;root=gnuzilla&amp;amp;view=markup&quot; rel=&quot;nofollow&quot;&gt;list of files removed from Firefox for Icecat&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And finally another issue the GNU-project has, is also bolded in your quotation. Firefox allows proprietary plugins and extensions. Moreover, these are distributed through Mozilla's infrastructure and are recommended in the process.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-05T08:01:07.327" LastActivityDate="2015-07-05T08:01:07.327" CommentCount="0" />
  <row Id="843" PostTypeId="1" AcceptedAnswerId="847" CreationDate="2015-07-04T11:00:52.337" Score="7" ViewCount="99" Body="&lt;p&gt;I have some code which I would like to open source it (as part of the private repository), however the access should be limited only to the memberships who paid the access fee. Is it going to work? Which license can I use?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Then can I protect from the unauthorised publishing of my code? Should all the people who have access to it sign the non-disclosure agreement, or accepting the specific licence should cover that as part of the purchase access procedure?&lt;/p&gt;&#xA;" OwnerUserId="407" LastEditorUserId="69" LastEditDate="2015-07-04T12:23:38.220" LastActivityDate="2015-07-04T19:03:52.063" Title="Can I open source the code and charge for the access to it?" Tags="&lt;licensing&gt;&lt;publishing&gt;" AnswerCount="2" CommentCount="2" FavoriteCount="1" />
  <row Id="844" PostTypeId="2" ParentId="843" CreationDate="2015-07-04T11:06:18.467" Score="6" Body="&lt;p&gt;Assumming you release your source under an open source license, basically no.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The Open Source Definition and Free Software Definition both demand that source code is accessible to everyone who gets distributed a binary. That source might be distributed with the binary, easily accessible on the web (and the binary contains a pointer to this position), or on request the source code is sent to the requester. The last option can ask for money for mailing it, but not more. That last one is pretty restrictive already today.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you do not distribute much of the binaries (because you have a webservice for example), you can restrict it more. For everyone who don't get the binaries, you can charge for access to the source as you want it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But in each case there is a catch: Everyone who gets hold of the source code is allowed to redistribute it under the terms of the open source license you've choosen. That basically undermines your business model of charging for access to the code. If you want this business model, you don't want open source.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-04T12:39:47.297" LastActivityDate="2015-07-04T12:39:47.297" CommentCount="2" />
  <row Id="845" PostTypeId="2" ParentId="270" CreationDate="2015-07-04T11:56:54.310" Score="4" Body="&lt;p&gt;This is what happened to BitTorrent. They have stopped contributing to the public repository at &lt;a href=&quot;https://sourceforge.net/projects/bittorrent/&quot; rel=&quot;nofollow&quot;&gt;sourceforge&lt;/a&gt;, removed all the files apart of the latest version and re-designed website, so all links pointing to source code files were gone. Also the licence was changing in the source code almost every major version (for instance the latest known source code was published as &lt;a href=&quot;http://stackoverflow.com/q/4318969/55075&quot;&gt;GPL&lt;/a&gt;).  Further more, they've started new fork called uTorrent which is driven entirely on the closed source. So yes, theoretically you can close it. However I don't think the new more restrictive license would apply to the past already published code.&lt;/p&gt;&#xA;" OwnerUserId="407" LastActivityDate="2015-07-04T11:56:54.310" CommentCount="0" />
  <row Id="846" PostTypeId="1" AcceptedAnswerId="907" CreationDate="2015-07-04T12:15:16.220" Score="5" ViewCount="190" Body="&lt;p&gt;In &lt;a href=&quot;http://opensource.stackexchange.com/q/529/55&quot;&gt;the answers to this question&lt;/a&gt; it was shown, that a few licenses exist, that are only open source but not free software or the other way round. Still, most licenses are both or neither, so the overlap is very big.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But the communities around open source are distinctive and both strong, and some members of one community even disagree with the other. That seems strange for communities that are so similar in definition and goals. It points to a subtle philosophical difference the two.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So my question is: do such differences exist? And if yes: What are the differences in philosophy?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-05T23:44:11.423" LastActivityDate="2015-07-11T06:48:43.057" Title="What are the philosophical differences between open source and free/libre software (if they exist at all)?" Tags="&lt;philosophy&gt;" AnswerCount="3" CommentCount="0" FavoriteCount="1" />
  <row Id="847" PostTypeId="2" ParentId="843" CreationDate="2015-07-04T12:18:12.533" Score="8" Body="&lt;p&gt;There is a precedent; the unreal engine.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some time ago for a monthly fee and a percentage of your revenue you could use it and have access to the source and discuss it freely between other paying members. It wasn't open source (still isn't) but popular enough that they dropped the monthly fee.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In their &lt;a href=&quot;https://www.unrealengine.com/faq#source&quot; rel=&quot;nofollow&quot;&gt;FAQ it says&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;What modifications can I make to the source code?&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;You can extend it, modify it, fork it, or integrate it with other&#xA;  software or libraries, with one exception: You can’t combine the&#xA;  Unreal Engine code with code covered by a “Copyleft” license agreement&#xA;  which would directly or indirectly require the Unreal Engine to be&#xA;  governed by terms other than the EULA.&lt;/p&gt;&#xA;  &#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;Unacceptable Copyleft licenses include: Software licensed under the GNU General Public License (GPL), Lesser GPL (LGPL) (unless you&#xA;  are merely dynamically linking a shared library), or Creative Commons&#xA;  Attribution-ShareAlike License.&lt;/li&gt;&#xA;  &lt;li&gt;Acceptable Non-Copyleft licenses include: Software licensed under the BSD License, MIT License, Microsoft Public License, or Apache&#xA;  License.&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;  &#xA;  &lt;p&gt;&lt;strong&gt;Can I share the Unreal Engine source code or tools with others?&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;You can share the source code or tools, along with any modifications&#xA;  you’ve made, with anyone who is an Unreal Engine licensee who is&#xA;  authorized to access the same version of the engine as yours, e.g. the&#xA;  4.x.x version number of your installed build.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I would call such a setup a &lt;em&gt;source available&lt;/em&gt; license rather than a open source license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can find the &lt;a href=&quot;https://www.unrealengine.com/eula&quot; rel=&quot;nofollow&quot;&gt;EULA here&lt;/a&gt; if you want to base your own license on it. (I suggest you consult a lawyer though)&lt;/p&gt;&#xA;" OwnerUserId="64" LastEditorUserId="64" LastEditDate="2015-07-04T19:03:52.063" LastActivityDate="2015-07-04T19:03:52.063" CommentCount="0" />
  <row Id="848" PostTypeId="5" CreationDate="2015-07-04T20:19:08.827" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-04T20:19:08.827" LastActivityDate="2015-07-04T20:19:08.827" CommentCount="0" />
  <row Id="849" PostTypeId="4" CreationDate="2015-07-04T20:19:08.827" Score="0" Body="ShareAlike is a clause intended to force derivatives to share under the same or compatible license. Use the tag when the question regards the clause, or a license or application that makes use of it." OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-07-05T07:56:59.567" LastActivityDate="2015-07-05T07:56:59.567" CommentCount="0" />
  <row Id="850" PostTypeId="2" ParentId="846" CreationDate="2015-07-04T21:08:09.560" Score="3" Body="&lt;p&gt;Yes, they exist.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;When we call software “free,” we mean that it respects the users' essential freedoms: the freedom to run it, to study and change it, and to redistribute copies with or without changes. This is a matter of freedom, not price, so think of “free speech,” not “free beer.”&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;...&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Since the obvious meaning for “open source” is not the meaning that its advocates intend, the result is that most people misunderstand the term. According to writer Neal Stephenson, “Linux is ‘open source’ software meaning, simply, that anyone can get copies of its source code files.” I don't think he deliberately sought to reject or dispute the official definition. I think he simply applied the conventions of the English language to come up with a meaning for the term. The state of Kansas published a similar definition: “Make use of open-source software (OSS). OSS is software for which the source code is freely and publicly available, though the specific licensing agreements vary as to what one is allowed to do with that code.”&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Source: &lt;a href=&quot;https://www.gnu.org/philosophy/open-source-misses-the-point.html&quot; rel=&quot;nofollow&quot;&gt;Why Open Source misses the point of Free Software&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The term &lt;code&gt;open source&lt;/code&gt; was kind of created because &lt;code&gt;free software&lt;/code&gt; is not a very good term to use in a business world (&lt;a href=&quot;https://en.wikipedia.org/wiki/Open_source#The_emergence_of_the_.22open_source.22_term&quot; rel=&quot;nofollow&quot;&gt;source&lt;/a&gt;). Open source is a bit less restrictive than free software. Because every piece of free software can be classified as open source software too (taken from the content of their definitions &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.html&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://opensource.org/docs/osd&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;), it's perfectly normal that the term open source is more widely used.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Free software's essential freedoms&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;A program is free software if the program's users have the four essential freedoms:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The freedom to run the program as you wish, for any purpose (freedom 0).&lt;/li&gt;&#xA;&lt;li&gt;The freedom to study how the program works, and change it so it does your computing as you wish (freedom 1). Access to the source code is a precondition for this.&lt;/li&gt;&#xA;&lt;li&gt;The freedom to redistribute copies so you can help your neighbor (freedom 2).&lt;/li&gt;&#xA;&lt;li&gt;The freedom to distribute copies of your modified versions to others (freedom 3). By doing this you can give the whole community a chance to benefit from your changes. Access to the source code is a precondition for this.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h2&gt;Open source criteria&lt;/h2&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Free Redistribution&lt;/li&gt;&#xA;&lt;li&gt;Source Code&lt;/li&gt;&#xA;&lt;li&gt;Derived Works&lt;/li&gt;&#xA;&lt;li&gt;Integrity of The Author's Source Code&lt;/li&gt;&#xA;&lt;li&gt;No Discrimination Against Persons or Groups&lt;/li&gt;&#xA;&lt;li&gt;No Discrimination Against Fields of Endeavor&lt;/li&gt;&#xA;&lt;li&gt;Distribution of License&lt;/li&gt;&#xA;&lt;li&gt;License Must Not Be Specific to a Product&lt;/li&gt;&#xA;&lt;li&gt;License Must Not Restrict Other Software&lt;/li&gt;&#xA;&lt;li&gt;License Must Be Technology-Neutral&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;h2&gt;Comparison&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Free software's freedom 0 requires OSD criteria 5, 6, 7, 8, 9, and 10; freedom 1 requires OSD criterion 2 (and possibly 7); freedom 2 probably requires OSD criteria 1, 7, 8, and 9; and freedom 3 probably requires OSD criteria 1, 2, 3, 4, 7, 8, and 10.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Therefore, every free software is open source software and satisfies all of its criteria. The reverse doesn't have to be the case. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;As an example, NASA's Open Source Agreement (&lt;a href=&quot;http://ti.arc.nasa.gov/opensource/nosa/&quot; rel=&quot;nofollow&quot;&gt;NOSA&lt;/a&gt;) is approved by the OSI (&lt;a href=&quot;http://opensource.org/licenses/alphabetical&quot; rel=&quot;nofollow&quot;&gt;source&lt;/a&gt;) but &lt;em&gt;not&lt;/em&gt; approved by the FSF because it allows only contributions that are developed by the contributor and doesn't allow contributions that use the code developed by some third party (&lt;a href=&quot;http://www.gnu.org/licenses/license-list.html#NASA&quot; rel=&quot;nofollow&quot;&gt;source&lt;/a&gt;). Therefore, every piece of software that uses NOSA as its license is open source, but not free software.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Summary&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;To sum it up, open source means that the users have the access to the source code, but free software means that the users are free to use the code in any way they want. If something is considered as a free software, you can also use the term open source for it. But not every piece of open source software is actually free software. There's that big difference between the terms that confuses people.&lt;/p&gt;&#xA;" OwnerUserId="123" LastEditorUserId="123" LastEditDate="2015-07-11T06:48:43.057" LastActivityDate="2015-07-11T06:48:43.057" CommentCount="10" />
  <row Id="851" PostTypeId="1" CreationDate="2015-07-04T21:42:28.180" Score="13" ViewCount="59" Body="&lt;p&gt;CC BY-SA 4.0 says the following about &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/legalcode#s3a&quot; rel=&quot;nofollow&quot;&gt;Attribution&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; If You Share the Licensed Material (including in modified form), You must:&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&amp;nbsp;&amp;nbsp; &lt;strong&gt;A&lt;/strong&gt; retain the following if it is supplied by the Licensor with the Licensed Material: &lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; […]&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;strong&gt;ii.&lt;/strong&gt; a copyright notice;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; […]&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Let’s say the Licensed Material is an image, and the copyright notice is &quot;© ACME 1999&quot;, which is visible on the image itself (e.g., shown in the image’s lower right corner).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Does &quot;retain a copyright notice&quot; mean that this notice has to stay being part of the image itself? Or may I edit the image to remove the copyright notice from it, and include it in plain text in the attribution?&lt;/p&gt;&#xA;" OwnerUserId="138" LastEditorUserId="69" LastEditDate="2015-07-05T14:06:30.517" LastActivityDate="2015-07-05T14:06:30.517" Title="Do I have to retain the copyright notice exactly where it’s specified?" Tags="&lt;creative-commons&gt;&lt;attribution&gt;" AnswerCount="1" CommentCount="1" />
  <row Id="853" PostTypeId="2" ParentId="826" CreationDate="2015-07-05T02:38:31.273" Score="6" Body="&lt;p&gt;First and foremost, testing the contribution is responsibility of the contributor himself, before submitting a patch, to see if it breaks something or otherwise causes problems when combined with the rest of the codebase. This is true for every programing job, not just open source, &lt;em&gt;testing their own changes is the developer's responsibility&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That said, once submitted, each project handles it differently. Smaller projects tend to have few developers who share testing and reviewing tasks and everyone reviews everything. Larger projects sometimes have a group that does more reviewing. What each one actually does varies widely according to each one's customs.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And in every case, there is always the group review, every person involved with the project can look at commits, review code quality, standards, possible bugs introduced and the like. Not just people that actively contribute, just anyone that is used to see the code can spot problems before they go into a release.&lt;/p&gt;&#xA;" OwnerUserId="306" LastEditorUserId="29" LastEditDate="2015-07-05T03:31:32.793" LastActivityDate="2015-07-05T03:31:32.793" CommentCount="0" />
  <row Id="854" PostTypeId="1" AcceptedAnswerId="857" CreationDate="2015-07-05T06:16:23.363" Score="0" ViewCount="96" Body="&lt;p&gt;Most licenses available do not seem to carry any legal weight. Are there any Open Source licenses that do? The old &lt;em&gt;copyright&lt;/em&gt; laws used to impose a monetary fine for infringement, but then how do the newer licenses deal with infringement? What resources do I have available if the terms of the &quot;newer&quot; licenses are broken?&lt;/p&gt;&#xA;" OwnerUserId="28" LastEditorUserId="69" LastEditDate="2015-07-05T16:46:51.310" LastActivityDate="2015-07-06T12:25:33.800" Title="Looking for a legally-strong open source license" Tags="&lt;licensing&gt;&lt;law&gt;&lt;enforcement&gt;" AnswerCount="1" CommentCount="13" />
  <row Id="855" PostTypeId="2" ParentId="851" CreationDate="2015-07-05T07:27:59.543" Score="6" Body="&lt;p&gt;&lt;strong&gt;No&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Let's go through &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/legalcode#s3&quot;&gt;section 3(a) of the license&lt;/a&gt; bit by bit.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ol&gt;&#xA;  &lt;li&gt;&lt;p&gt;If You Share the Licensed Material (including in modified form), You must:&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;A. retain the following if it is supplied by the Licensor with the Licensed Material:&lt;/p&gt;&#xA;  &#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;identification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated); &lt;/li&gt;&#xA;  &lt;li&gt;a copyright notice;  &lt;/li&gt;&#xA;  &lt;li&gt;a notice that refers to this Public License;  &lt;/li&gt;&#xA;  &lt;li&gt;a notice that refers to the disclaimer of warranties;  &lt;/li&gt;&#xA;  &lt;li&gt;a URI or hyperlink to the Licensed Material to the extent reasonably practicable;&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This is a list of attributive information which can be provided by the original author. They don't all need to be - you could put up a photo online anonymously and say that it's CC BY-SA licensed, and the only one of the list that would apply would be the URL. But, if the author wants, they can. Whichever the author decides to specify, you must reproduce.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;B. indicate if You modified the Licensed Material and retain an indication of any previous modifications; and&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;C. indicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I don't really understand why you'd have to reproduce the author's notice referring to the license as well as indicating the license yourself... so &lt;a href=&quot;http://opensource.stackexchange.com/q/856/190&quot;&gt;I've asked a question about this myself.&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ol start=&quot;2&quot;&gt;&#xA;  &lt;li&gt;You may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So section 3(a)(1)is about what information you must reproduce. Section 3(a)(2) is about how you must do so, and it says that you can do so in any reasonable way.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So my interpretation is that if the original media has an embedded copyright statement saying &quot;© ACME 1999&quot;, then you would have to reproduce that, but you don't have to embed it in your modified work in the same way. If you had an attribution section saying the following:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Photo of ACME by ACME, used under the &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;CC BY-SA 4.0 license&lt;/a&gt;, &lt;a href=&quot;http://acme.com&quot;&gt;http://acme.com&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;You could modify it to say something like this instead:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Photo of ACME by ACME, © ACME 1999, used under the &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;CC BY-SA 4.0 license&lt;/a&gt;, &lt;a href=&quot;http://acme.com&quot;&gt;http://acme.com&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="190" LastEditorUserId="190" LastEditDate="2015-07-05T07:59:46.940" LastActivityDate="2015-07-05T07:59:46.940" CommentCount="0" />
  <row Id="856" PostTypeId="1" CreationDate="2015-07-05T07:43:11.050" Score="3" ViewCount="39" Body="&lt;p&gt;In section 3(a) of the &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode#s3&quot; rel=&quot;nofollow&quot;&gt;Creative Commons Attribution license&lt;/a&gt; (and I think all the others too) it says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ol&gt;&#xA;  &lt;li&gt;&lt;p&gt;If You Share the Licensed Material (including in modified form), You must:&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;A. &lt;strong&gt;retain the following if it is supplied by the Licensor with the Licensed Material&lt;/strong&gt;:&lt;/p&gt;&#xA;  &#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;&lt;p&gt;identification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated); &lt;/p&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;p&gt;a copyright notice;  &lt;/p&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;strong&gt;a notice that refers to this Public License&lt;/strong&gt;;  &lt;/li&gt;&#xA;  &lt;li&gt;a notice that refers to the disclaimer of warranties;  &lt;/li&gt;&#xA;  &lt;li&gt;a URI or hyperlink to the Licensed Material to the extent reasonably practicable;&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;  &#xA;  &lt;p&gt;B. indicate if You modified the Licensed Material and retain an indication of any previous modifications; and&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;C. &lt;strong&gt;indicate the Licensed Material is licensed under this Public License&lt;/strong&gt;, and include the text of, or the URI or hyperlink to, this Public License.&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This makes it look like that if the original author notes that the work is licensed under the licensed (which they surely will) you must reproduce that notice, as well as indicate yourself that your publication has used material licensed under the license, i.e. that you must mention the CC BY license twice.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Which doesn't make much sense!&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;How is such a &quot;notice&quot; defined?&lt;/li&gt;&#xA;&lt;li&gt;What is an example of one?&lt;/li&gt;&#xA;&lt;li&gt;How should these two clauses be understood together?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="190" LastActivityDate="2015-07-05T11:08:13.647" Title="Do I have to mention the CC license twice?" Tags="&lt;creative-commons&gt;&lt;attribution&gt;" AnswerCount="1" CommentCount="0" FavoriteCount="0" />
  <row Id="857" PostTypeId="2" ParentId="854" CreationDate="2015-07-05T08:38:02.720" Score="10" Body="&lt;p&gt;You claim most licenses don't carry any legal weight. But I'm not so sure about this being true. Naturally it is hard to say, how good licenses can be enforced in court, until it happens...&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And it happened already and courts enforced open source licenses.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some examples.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;GPL-Violations&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The popularity and flexibility of Linux lead to the wide usage of the kernel in multiple devices, namely routers. Some of the constructors of these routers used the software in violation of the GPL. Harald Welte - developer of the netfilter/iptables - was starting to take legal action against it. His law-suits lead to acknowledgment of the GPL in court. To better defend his claims he founded an organisation named &lt;a href=&quot;https://en.wikipedia.org/wiki/Gpl-violations.org&quot;&gt;gpl-violations&lt;/a&gt;. Some notable wins included cases against Fortinet, D-Link and Skype because of the violation of the GPL. In these cases Welte and gpl-violations won.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;gpl-violations also sided with Cybits AG in a law suit against router-producer AVM. Cybits modified the AVM firmware for some goals, and AVM was taking court-action against that. As AVM also used a Linux kernel, FSF and gpl-violations were siding Cybits AG in this case. Also in this case the GPL was acknowledged from the court: &lt;a href=&quot;https://fsfe.org/activities/ftf/avm-gpl-violation.html&quot;&gt;https://fsfe.org/activities/ftf/avm-gpl-violation.html&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Software Freedom Law Center&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Similar to the german based GPL-violations the &lt;a href=&quot;https://en.wikipedia.org/wiki/Software_Freedom_Law_Center&quot;&gt;Software Freedom Law Center&lt;/a&gt; enforces the GPL in the US. Notable cases here involve the BusyBox-developers against multiple developers of electronic devices that violated the terms of the license and the FSF against Cisco.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Open Source licenses are enforcable in court. This as always depends on the details of the case and the jurisdiction you're in, but generally the terms of open source licenses can be accepted by courts. It is possible though, that some terms are unclear or not really working in law, because of the missing knowledge of the authors about law. It is for this reason you should prefer common popular licenses (more tested in court) and licenses that are written with the consultations of lawyers.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The GPL seems the license you can be most sure it is enforcable, as that already happened multiple times with differing details in the case and in differing jurisdictions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is generally recommendable you look for legal help if you want to enforce the license to your work. gpl-violations as of now seems no longer in action, but in the US you can search the help of the Software Freedom Law Center, also organizations like FSF (and the european version FSFE) might be helpful in case you want to defend your rights given to you from open source software.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-07-05T08:38:02.720" CommentCount="0" />
  <row Id="858" PostTypeId="2" ParentId="856" CreationDate="2015-07-05T11:08:13.647" Score="2" Body="&lt;p&gt;Paragraph A refers to text that was supplied by the upstream author “Licensor”. You're allowed to modify CC BY material, but there are a few things that you need to retain: basically the acknowledgement desired by the upstream author (author identification, copyright notice, license notice, warranty disclaimer, project identification).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Often the upstream author will have included a license notice in the material, and all you need to do to fulfill paragraph C is to retain is as per paragraph A. However, in case there was no license notice, you must add one, otherwise the people you are distributing to would have no way to know that the license applies.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, if Stack Exchange was licensed under CC BY-SA 4.0 (it isn't, it's under CC BY-SA 3.0 which has similar but not identical wording in §3.0), then when sharing a Stack Exchange post, you would need to:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Identify the creator through their Stack Exchange account, respecting the identification attached to the bottom of the post.&lt;/li&gt;&#xA;&lt;li&gt;No explicit copyright notice.&lt;/li&gt;&#xA;&lt;li&gt;No notice referring to the license inside the work — it's conveyed through the page footer.&lt;/li&gt;&#xA;&lt;li&gt;No warranty disclaimer.&lt;/li&gt;&#xA;&lt;li&gt;Include a link to the Stack Exchange post.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;And in addition you would need to include the text of or a link to the CC BY-SA license, because that didn't come attached to the work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another example: if you print out and distribute CC BY-SA material that you obtained on the web, the material may well come with a notice like “Licensed under CC BY 4.0” with a hyperlink to the license. This notice under paragraph A isn't enough satisfy paragraph C, because the hyperlink won't be present in the printed text, the reader would just see “licensed under CC BY 4.0”. Instead you must include the text of the license, or at least print out the URL &lt;code&gt;https://creativecommons.org/licenses/by/4.0/legalcode&lt;/code&gt;.&lt;/p&gt;&#xA;" OwnerUserId="60" LastActivityDate="2015-07-05T11:08:13.647" CommentCount="3" />
  <row Id="859" PostTypeId="2" ParentId="810" CreationDate="2015-07-05T14:57:20.920" Score="3" Body="&lt;p&gt;You would definitely be limiting your opportunities, but it's not out of the question. Completely open source jobs exist — but are a tiny fraction of the jobs which involve both open source and proprietary work or are entirely with proprietary software. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The company I work for employs over 7500 people, and is a pure open source company. (Not everything we do internally is opened, but everything we release is released under an open source / free software license.) We even employ to some people to work almost exclusively on the upstream community projects. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;But this is rare — these days &lt;em&gt;most&lt;/em&gt; companies are involved in open source, but usually around a mixed open / proprietary model. There certainly &lt;em&gt;are&lt;/em&gt; other pure open source companies, but they are much smaller — and even 7500 is not much compared to the tens or hundreds of thousands of employees at large software companies. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, &quot;pure&quot; jobs do exist, but, yes, you are also limiting your options. Particularly, if you start at a company with a mixed model working on the open source side and the company undergoes a reorganization (and companies do!), this could be very... career-limiting. Many startups today are centered around open source by default (side note: hooray! World domination!), but once initial funding runs out and the company is casting for other options, it doesn't always stay that way. You'd have to be either ridiculously essential to the company to say that you want to only work on the open part even when the company has a different vision for success, or willing and able to hop to a new employer when this happens. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;That said, if you're very passionate about open source and free software, there &lt;em&gt;are&lt;/em&gt; jobs. I've been fortunate to have them for my whole career. It's a tighter market for sure, but if you &lt;em&gt;really&lt;/em&gt; want it, it's possible. &lt;/p&gt;&#xA;" OwnerUserId="65" LastEditorUserId="65" LastEditDate="2015-07-05T17:20:17.847" LastActivityDate="2015-07-05T17:20:17.847" CommentCount="0" />
  <row Id="860" PostTypeId="1" CreationDate="2015-07-05T15:06:58.947" Score="6" ViewCount="43" Body="&lt;p&gt;I've seen that some projects require a &lt;a href=&quot;https://en.wikipedia.org/wiki/Contributor_License_Agreement&quot;&gt;Contributor License Agreement&lt;/a&gt; (CLA) and some require a &lt;a href=&quot;https://en.wikipedia.org/wiki/Copyright_transfer_agreement&quot;&gt;Copyright Transfer Agreement&lt;/a&gt; (CTA).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some examples of places using a CLA:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://www.djangoproject.com/foundation/cla/faq/&quot;&gt;Django&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://cla.developers.google.com/&quot;&gt;Google&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://contribute.jquery.org/CLA/&quot;&gt;jQuery&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Some examples of places using a CTA:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/community/oca-486395.html&quot;&gt;Oracle&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://developer.cisco.com/fileMedia/download/0dbb0b8c-abb0-4978-bdc1-158690e21689&quot;&gt;Cisco&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;What is the difference between these two agreements? When should they be used with open source projects?&lt;/p&gt;&#xA;" OwnerUserId="92" LastActivityDate="2015-07-06T14:16:01.737" Title="What is the difference between a CLA and a CTA?" Tags="&lt;contributor-agreements&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="861" PostTypeId="2" ParentId="810" CreationDate="2015-07-05T15:33:40.023" Score="4" Body="&lt;p&gt;You could look outside corporate life. Universities often open-source their code; in this way their experiments / data analysis can be reproduced by other parties. If academic work suits you, you could look for a position as a scientific programmer.&lt;br&gt;&#xA;Note that a position in academia does not guarantee that you will be working on open source projects; it still depends on the exact position and who is funding the research.&#xA;(I'm thinking of public/private partnerships here, but have no experience with these; they probably differ per situation anyway).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is possible to work strictly on open-source projects, but doing so does indeed limit your options. The limitation is self-imposed though.&lt;/p&gt;&#xA;" OwnerUserId="75" LastActivityDate="2015-07-05T15:33:40.023" CommentCount="0" />
  <row Id="862" PostTypeId="2" ParentId="860" CreationDate="2015-07-05T16:07:35.620" Score="7" Body="&lt;p&gt;&lt;a href=&quot;http://harmonyagreements.org/&quot; rel=&quot;nofollow&quot;&gt;Harmony Agreements&lt;/a&gt; explain the differences quite well.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Essentially, the difference is that with a CLA the contributor retains the copyright; with a CTA the organisation becomes the copyright holder.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A CLA such as &lt;a href=&quot;http://www.harmonyagreements.org/docs/ha-cla-i.html&quot; rel=&quot;nofollow&quot;&gt;this one&lt;/a&gt; includes a permanent, irrevocable, free (gratis) license grant to the organisation so that they can always use the code you provide them. CLA's also often include a disclaimer and damage waiver, protecting the contributor from legal recourse if their contribution unintentionally causes problems.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A CTA (also: CAA, copyright assignment agreement) instead takes the copyright (and therefore licensing rights) away from the contributor, and gives them to the organisation. This is a more heavy-handed way of ensuring the organisation always has the rights to use your code. CTA's are also used to ensure that the final product is single-copyright, instead of having multiple copyrights across the codebase.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The other important point to note about CTA's is they often &lt;em&gt;don't&lt;/em&gt; include a disclaimer or waiver, which could &lt;em&gt;potentially&lt;/em&gt; leave contributors open to legal attacks if their contributions cause problems.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is no defined way one should be used over the other. It depends on how the organisation wants to maintain their relationship with their community: some people hate CTA's, others say that CLA's result in legally messy products. The organisation also has to acknowledge that if they use a CLA, they likely won't be able to sue if something goes wrong.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="29" LastEditDate="2015-07-06T14:16:01.737" LastActivityDate="2015-07-06T14:16:01.737" CommentCount="0" />
  <row Id="863" PostTypeId="1" CreationDate="2015-07-05T22:43:26.437" Score="6" ViewCount="73" Body="&lt;p&gt;I haven't quite grasped the implications of forking a licensed project to public.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am assuming that a similar license should be kept, but what happens if that's not possible?&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Edit&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;I am providing an example (as suggested by &lt;a href=&quot;http://opensource.stackexchange.com/users/83/michael-schumacher&quot;&gt;&lt;em&gt;Michael Schumacher&lt;/em&gt;&lt;/a&gt; in the comments):&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://fortawesome.github.io/Font-Awesome/license/&quot; rel=&quot;nofollow&quot;&gt;Font Awesome&lt;/a&gt; is under the &lt;em&gt;SIL OFL 1.1&lt;/em&gt; license. If one is to fork it in order to extend or modify the font glyphs and thus modifying the font files, would the forked project be under the same license through a &lt;a href=&quot;http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&amp;amp;id=OFL#8e6f58a5&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;DerivativeRenaming&lt;/em&gt;&lt;/a&gt; clause? How should it be phrased in order to keep complying with this license?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Or, since the license seems to specifically refer the owner in its &lt;a href=&quot;http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&amp;amp;id=OFL#83afb016&quot; rel=&quot;nofollow&quot;&gt;usage terms&lt;/a&gt;, would this usage still be appropriate?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Already forked projects, such as &lt;a href=&quot;https://github.com/bokmann/font-awesome-rails&quot; rel=&quot;nofollow&quot;&gt;font-awesome-rails&lt;/a&gt;, refer to the exact same license, but I found none that actually altered the actual fonts, therein lies my question.&lt;/p&gt;&#xA;" OwnerUserId="421" LastEditorUserId="421" LastEditDate="2015-07-06T14:45:56.213" LastActivityDate="2015-07-06T18:34:27.603" Title="When does a forked project require a license?" Tags="&lt;licensing&gt;&lt;license-compatibility&gt;&lt;forking&gt;" AnswerCount="2" CommentCount="5" />
  <row Id="864" PostTypeId="2" ParentId="863" CreationDate="2015-07-05T23:19:24.413" Score="9" Body="&lt;p&gt;An Open Source license allows forking and redistributing with changes under the (at least) same license under which you got it (though there may be trademark issues). This is one of the fundamental requirements to be Open Source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Using the same license is not necessarily required but depends on the license of the project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A copyleft license like GPL requires that the same license needs to be used by the fork. Unless there is a clause (exception) that lets you release the fork under a different license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A more permissive license could let you even close source the fork.&lt;/p&gt;&#xA;" OwnerUserId="64" LastEditorUserId="69" LastEditDate="2015-07-05T23:39:51.690" LastActivityDate="2015-07-05T23:39:51.690" CommentCount="0" />
  <row Id="865" PostTypeId="2" ParentId="807" CreationDate="2015-07-06T08:36:14.597" Score="2" Body="&lt;p&gt;I finally managed to find your instructions for translating the app:&#xA;&lt;a href=&quot;https://code.google.com/p/ankidroid/wiki/Contribution#Translate_AnkiDroid_into_your_language&quot; rel=&quot;nofollow&quot;&gt;https://code.google.com/p/ankidroid/wiki/Contribution#Translate_AnkiDroid_into_your_language&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I do not see this page mentioned at any place any of your users will easily get to (the bottom of any web page is no such place - I know that you link there from &lt;a href=&quot;https://ankidroid.org/docs/help.html&quot; rel=&quot;nofollow&quot;&gt;https://ankidroid.org/docs/help.html&lt;/a&gt;). It could be that they are simply not aware of the fact that AnkiDroid can be translated.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In an open source project, it is crucial for contributors to know that they can contribute, what they can contribute, where they should contribute it and how. The Wiki pages is quite comprehensive for the what and where and how to contribute, so a possible conclusion is that the user do just not know about it.&lt;/p&gt;&#xA;" OwnerUserId="83" LastEditorUserId="83" LastEditDate="2015-07-06T11:40:07.830" LastActivityDate="2015-07-06T11:40:07.830" CommentCount="3" />
  <row Id="866" PostTypeId="2" ParentId="846" CreationDate="2015-07-06T09:25:00.880" Score="5" Body="&lt;p&gt;To me, the following part of the &lt;a href=&quot;https://www.gnu.org/philosophy/open-source-misses-the-point.html&quot;&gt;Why Open Source misses the point of Free Software article&lt;/a&gt; sums up the difference (emphasis by me):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Some of the supporters of open source considered the term a “marketing&#xA;  campaign for free software,” which would appeal to business executives&#xA;  by highlighting the software's practical benefits, while not raising&#xA;  issues of right and wrong that they might not like to hear. Other&#xA;  supporters flatly rejected the free software movement's ethical and&#xA;  social values. Whichever their views, when campaigning for open&#xA;  source, they neither cited nor advocated those values. &lt;strong&gt;The term “open&#xA;  source” quickly became associated with ideas and arguments based only&#xA;  on practical values&lt;/strong&gt;, such as making or having powerful, reliable&#xA;  software. Most of the supporters of open source have come to it since&#xA;  then, and they make the same association.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The two terms describe almost the same category of software, but they&#xA;  stand for views based on fundamentally different values. &lt;strong&gt;Open source&#xA;  is a development methodology; free software is a social movement.&lt;/strong&gt; For&#xA;  the free software movement, free software is an ethical imperative,&#xA;  essential respect for the users' freedom. By contrast, the philosophy&#xA;  of open source considers issues in terms of how to make software&#xA;  “better”—in a practical sense only. It says that nonfree software is&#xA;  an inferior solution to the practical problem at hand.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="83" LastActivityDate="2015-07-06T09:25:00.880" CommentCount="0" />
  <row Id="867" PostTypeId="1" CreationDate="2015-07-06T10:32:44.500" Score="9" ViewCount="55" Body="&lt;p&gt;After a patent expires people are free to use it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Does this means, that the technology described in the claims are then Open Source?&lt;/p&gt;&#xA;" OwnerUserId="64" LastEditorUserId="55" LastEditDate="2015-07-06T11:41:06.750" LastActivityDate="2015-07-06T12:48:34.303" Title="Is technology in expired patents open source?" Tags="&lt;patents&gt;" AnswerCount="2" CommentCount="0" />
  <row Id="868" PostTypeId="2" ParentId="867" CreationDate="2015-07-06T10:43:46.027" Score="5" Body="&lt;p&gt;No. These are public domain, which can be interprated as kind of Open Source, but in fact it's just public knowledge as the wheel is. &lt;/p&gt;&#xA;" OwnerUserId="132" LastActivityDate="2015-07-06T10:43:46.027" CommentCount="1" />
  <row Id="869" PostTypeId="2" ParentId="867" CreationDate="2015-07-06T11:36:18.783" Score="6" Body="&lt;p&gt;We have to differentiate here. A patent describes a technology on a general level. And patents can be implemented, by hardware or software. The owner of a patent can restrict implementations as he sees fit. The implementor has independent of the patent a normal copyright on his work. &lt;a href=&quot;https://en.wikipedia.org/wiki/Software_patents_and_free_software&quot; rel=&quot;nofollow&quot;&gt;This is a problem for open source&lt;/a&gt;, as the open source licenses usually only covers copyright (well-known exceptions are GPL 3 and Apache 2, that address patent issues), a patent still can restrict the rights and make it in practice not open source. An example is the original bzip-implementation that was replaced with bzip2 to avoid conflict with a patent from IBM.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The patent-owner can also give a patent-license, that allows similar rights to open source. This is done from some companies in patent pools, the &lt;a href=&quot;https://en.wikipedia.org/wiki/Open_Invention_Network&quot; rel=&quot;nofollow&quot;&gt;Open Invention Network&lt;/a&gt; is an example for this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now, what happens if the patent expires? That means the technology covered can now freely be implemented. Existing implementations are still covered by their copyright. But the expiring of the patent might open the door to an open source implementation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The patent itself and existing implementations don't become open source, but it allows for open source implementations.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-06T12:48:34.303" LastActivityDate="2015-07-06T12:48:34.303" CommentCount="2" />
  <row Id="870" PostTypeId="1" AcceptedAnswerId="872" CreationDate="2015-07-06T12:54:23.503" Score="3" ViewCount="158" Body="&lt;p&gt;The GNU project has a &lt;a href=&quot;https://www.gnu.org/distros/free-distros.html&quot; rel=&quot;nofollow&quot;&gt;list of free GNU/Linux distributions&lt;/a&gt;. But it lists only a few Linux distros, although hundreds do exist. Even more, very common distributions like Debian, Linux Mint or Gentoo aren’t listed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Why is the list so restricted?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="138" LastEditDate="2015-07-06T16:44:53.327" LastActivityDate="2015-07-06T16:44:53.327" Title="Why are only so few Linux distributions listed by the GNU project?" Tags="&lt;fsf&gt;&lt;operating-system&gt;&lt;gnu&gt;" AnswerCount="2" CommentCount="3" />
  <row Id="871" PostTypeId="2" ParentId="870" CreationDate="2015-07-06T13:06:51.403" Score="7" Body="&lt;p&gt;At the bottom of the page you linked is a link named &lt;a href=&quot;https://www.gnu.org/distros/common-distros.html&quot;&gt;&quot;why we don't endorse some common distributions&quot;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There you will find this text:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;We're often asked why we don't endorse a particular system—usually a popular GNU/Linux distribution. The short answer to that question is&#xA;  that they don't follow the free system distribution guidelines. But&#xA;  since it isn't always obvious how a particular system fails to follow&#xA;  the guidelines, this list gives more information about the problems of&#xA;  certain well-known nonfree system distros.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;To learn more about the GNU/Linux systems that we do endorse, check out our list of &lt;a href=&quot;https://www.gnu.org/distros/free-distros.html&quot;&gt;free GNU/Linux distributions&lt;/a&gt;.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Except where noted, all of the distributions listed on this page fail to follow the guidelines in at least two important ways:&lt;/p&gt;&#xA;  &#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;&lt;p&gt;They do not have a policy of only including free software, and removing nonfree software if it is discovered. Most of them have no&#xA;  clear policy on what software they'll accept or reject at all. The&#xA;  distributions that do have a policy unfortunately aren't strict&#xA;  enough, as explained below.&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;p&gt;The kernel that they distribute (in most cases, Linux) includes “blobs”: pieces of object code distributed without source, usually&#xA;  firmware to run some device.&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;In other words to be listed under GNU the distro must shun all non-free software. This includes not telling the user how to install non-free software on the distro if you examine some of the specific explanations.&lt;/p&gt;&#xA;" OwnerUserId="64" LastEditorUserId="64" LastEditDate="2015-07-06T13:12:13.533" LastActivityDate="2015-07-06T13:12:13.533" CommentCount="0" />
  <row Id="872" PostTypeId="2" ParentId="870" CreationDate="2015-07-06T13:18:56.380" Score="5" Body="&lt;p&gt;They only list GNU/Linux distributions that follow the &lt;a href=&quot;https://www.gnu.org/distros/free-system-distribution-guidelines.en.html&quot;&gt;GNU FSDG&lt;/a&gt; (Free System Distribution Guidelines).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That the software (as well as the documentation, fonts etc.) is licensed under an appropriate FSF-approved license is one condition, but it’s not the only one. That’s why even a GNU/Linux distribution that only ships with free/libre software/information might not get listed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another guideline, as example: The distribution is not allowed to &quot;encourage&quot; users to obtain &quot;any nonfree information for practical use&quot; (which includes software).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In practice this could mean that the distribution project’s server may not host a repository that contains proprietary software (or free/libre software that downloads proprietary software from somewhere else). (This is the reason &lt;a href=&quot;https://www.gnu.org/distros/common-distros.en.html#Debian&quot;&gt;why Debian is not listed&lt;/a&gt;.)&lt;/p&gt;&#xA;" OwnerUserId="138" LastEditorUserId="138" LastEditDate="2015-07-06T13:23:58.990" LastActivityDate="2015-07-06T13:23:58.990" CommentCount="0" />
  <row Id="873" PostTypeId="1" CreationDate="2015-07-06T16:35:16.787" Score="3" ViewCount="59" Body="&lt;p&gt;As a creator of a FLOSS project, what do I need to know about the Digital Millennium Copyright Act?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As an example, Github is often forced to remove sites based on DMCA requests. The requests are posted at &lt;a href=&quot;https://github.com/github/dmca&quot; rel=&quot;nofollow&quot;&gt;https://github.com/github/dmca&lt;/a&gt; and make for some interesting reading.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Many of the take-down requests are based purely on piracy of source code, but &lt;a href=&quot;https://github.com/github/dmca/blob/a7b4fcb808d2a01b2b1c24fb64d789597238b288/2014-07-11-MPAA.md&quot; rel=&quot;nofollow&quot;&gt;this one&lt;/a&gt; required that an open source project be taken down because it &lt;strong&gt;enabled&lt;/strong&gt; piracy of copyrighted assets (via BitTorrent).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This was part of the campaign by the MPAA to shut down &quot;Popcorn Time&quot;, a campaign which apparently has not succeeded (as any search for &quot;Popcorn time&quot; in google will quickly show). But the original developers &lt;strong&gt;were&lt;/strong&gt; forced to close out their project, despite this comment on &lt;a href=&quot;http://getpopcornti.me/&quot; rel=&quot;nofollow&quot;&gt;their site&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Popcorn Time as a project is legal. We checked. &lt;strong&gt;Four Times&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;What lessons do FLOSS developers need to take away from this? Which sections of the DMCA are most likely to bite them?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note that this question, and stack exchange in general, is not encouraging  or supporting piracy. But the DMCA is often used for &lt;a href=&quot;https://www.eff.org/wp/unintended-consequences-under-dmca&quot; rel=&quot;nofollow&quot;&gt;other purposes&lt;/a&gt; (such as stifling competition).&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="29" LastEditDate="2015-07-06T16:41:17.013" LastActivityDate="2015-07-07T20:56:54.447" Title="How does the DMCA affect me as a FLOSS developer?" Tags="&lt;copyright&gt;&lt;dmca&gt;" AnswerCount="2" CommentCount="1" ClosedDate="2015-07-08T05:02:04.527" />
  <row Id="874" PostTypeId="2" ParentId="807" CreationDate="2015-07-06T16:43:55.250" Score="1" Body="&lt;p&gt;In &lt;a href=&quot;http://opensource.stackexchange.com/a/809/46&quot;&gt;this answer&lt;/a&gt;, Philipp mentions that you may have to give-in and just hire an actual  translator if you are unable to get a volunteer to do the job. There are some ways in which you may be able to improve your chances of getting a volunteer, though. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;People volunteering their abilities know that they won't be getting paid, but they may still want something to recognize their contributions. There are several ways that you can do this. If your app has credits, put something in it that recognizes the people who helped translating app. You may want to give even more special recognition for those who translated into certain languages. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another way that you may be able to get a volunteer is to specifically ask someone (and possibly make a trade). I bet that here on SE there are people that speak Hindi. I'm sure there are SO chat rooms where you can find Indian developers, some of whom may be able to translate your app. They may even be willing if you offer special recognition or your services in translating an application that they may have made into Greek. &lt;/p&gt;&#xA;" OwnerUserId="46" LastEditorUserId="46" LastEditDate="2015-07-07T15:48:46.167" LastActivityDate="2015-07-07T15:48:46.167" CommentCount="0" />
  <row Id="875" PostTypeId="1" CreationDate="2015-07-06T16:55:28.177" Score="3" ViewCount="26" Body="&lt;p&gt;Most people who work in software development have signed an Intellectual Property Rights Assignment notice whenever they start a new job. The purpose of these assignments is to ensure the employer obtains ownership of anything the employee creates which would either attract copyright, or be suitable for patenting.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Although they are &lt;strong&gt;meant&lt;/strong&gt; to cover work done on the employer's behalf, they are nearly always written fairly broadly, effectively covering &lt;strong&gt;anything&lt;/strong&gt; the employee creates during their period of employment (even when 'off duty').&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The implication of this is that a contributor to your project, who submits their contributions under a CTA (Copyright Transfer Agreement) might not actually &lt;strong&gt;own&lt;/strong&gt; the copyrights they are assigning to your project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is anyone aware of this having been tested in court, or of cases where this has caused problems?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is it possible to craft a CTA to work around this issue?&lt;/p&gt;&#xA;" OwnerUserId="29" LastActivityDate="2015-07-06T17:40:50.630" Title="Does an employee have the right to use a CTA?" Tags="&lt;law&gt;&lt;copyright&gt;&lt;contributor-agreements&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="876" PostTypeId="2" ParentId="875" CreationDate="2015-07-06T17:40:50.630" Score="2" Body="&lt;p&gt;The reason these agreements exist is to avoid the issue outlined in the first few paragraphs of &lt;a href=&quot;http://www.tms.org/pubs/journals/JOM/matters/matters-9608.html&quot; rel=&quot;nofollow&quot;&gt;this article&lt;/a&gt;: that developers may well still own the rights to software they develop after employment, and could in theory sell on to rival companies.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;In theory,&lt;/strong&gt; the looseness of many of these agreements (be they CTA's or IPRAA's) means that the employer owns all software their employees create while working for them, whether in their free time or not.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, &lt;strong&gt;in practice&lt;/strong&gt;, many companies will not enforce this on software created in the developer's free time, because they want to keep the developer. Think: if your company won't let you sell this software you've got an idea for, but this other company will, would you not move to said other company and develop it while you're in their employment?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now, IANAL, but I've heard tell this is possible: if your employer is OK with you working part-time somewhere else as well as for them (though many aren't), then you can create a skeleton company. You then develop your software as part of a project for that company, so your first employer doesn't own the rights. Your skeleton company sells the product.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The only way to craft a CTA so this is possible would be for the employer to make it less loose, and only include software developed in working hours for them.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-07-06T17:40:50.630" CommentCount="1" />
  <row Id="877" PostTypeId="2" ParentId="281" CreationDate="2015-07-06T18:03:49.223" Score="2" Body="&lt;p&gt;As a layman and non-native English speaker reading the license, I’d say &lt;strong&gt;no&lt;/strong&gt;, you don’t have to fix a broken URI.&lt;br&gt;&#xA;If the URI no longer points to the material, you don’t have to supply it (or any other URI that still/now does point to the material).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Section &lt;a href=&quot;http://creativecommons.org/licenses/by-sa/4.0/legalcode#s3a1A&quot; rel=&quot;nofollow&quot;&gt;3(a)(1)(A)&lt;/a&gt; uses this wording:  &lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;① &lt;strong&gt;retain&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;② &lt;strong&gt;if it is supplied by the Licensor&lt;/strong&gt; (which are the authors) &lt;/li&gt;&#xA;&lt;li&gt;③ &lt;strong&gt;with the Licensed Material&lt;/strong&gt; (which is the work)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;① The word &quot;retain&quot; makes clear that you have to provide the URI &lt;em&gt;as specified&lt;/em&gt; by the authors. So if the authors only specify &lt;code&gt;http://example.org/my-work&lt;/code&gt;, you have to use &lt;em&gt;exactly&lt;/em&gt; this URI, not any other URI (not even &lt;code&gt;https://example.org/my-work&lt;/code&gt;).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;② The word &quot;supplied&quot; again makes clear that it’s only about the URI which the authors specify themselves.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;③ The words &quot;with the&quot; narrow it down to the URI that is specified in (or next to) the work. So you don’t have to look elsewhere (e.g., on the authors’ website, their blog, or even the whole Web) to find a suitable URI.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Furthermore, nowhere does &lt;a href=&quot;http://creativecommons.org/licenses/by-sa/4.0/legalcode#s3a&quot; rel=&quot;nofollow&quot; title=&quot;Attribution&quot;&gt;3(a)&lt;/a&gt; require that you would have to keep your attribution updated. You have to make your attribution once, when you share the material. What the authors do after that (e.g., change their names, change their website’s domain, or even remove the license) is of no concern to you.&lt;br&gt;&#xA;The only exception is &lt;a href=&quot;http://creativecommons.org/licenses/by-sa/4.0/legalcode#s3a3&quot; rel=&quot;nofollow&quot;&gt;3(a)(3)&lt;/a&gt;, but this requires you (if the authors request it) to &lt;em&gt;remove&lt;/em&gt; parts of the attribution (e.g., to remove the broken URI), not to &lt;em&gt;replace&lt;/em&gt; them (e.g., to add the new URI). &lt;/p&gt;&#xA;" OwnerUserId="138" LastActivityDate="2015-07-06T18:03:49.223" CommentCount="0" />
  <row Id="878" PostTypeId="2" ParentId="826" CreationDate="2015-07-06T18:16:19.297" Score="1" Body="&lt;p&gt;It's a team effort, with testing needed by both the contributor and integrator. But a high quality project begins with high quality contributions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is too easy to confuse contributing to a FLOSS project with a 'hobbyist' approach. But contributors should remember that any contribution they make is also a very public entry in their own resume - whether they work in the field or not. Even if applying for a non-programming job, you might want to cite your involvement in project 'X' as a showcase of your other abilities and interests - and employers are likely to look at it to judge your skills in teamwork, communication, and diligence.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;With that in mind, it behooves us to treat our FLOSS contributions with the same seriousness that a professional developer would. That means that the contributor should consider themselves responsible for (at a minimum)&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The code they are contributing, including following the project's coding standards and conventions.&lt;/li&gt;&#xA;&lt;li&gt;High quality documentation of the code, including good commit messages&lt;/li&gt;&#xA;&lt;li&gt;High quality 'user' documentation - both in terms of mechanics and usability&lt;/li&gt;&#xA;&lt;li&gt;Automated test cases&lt;/li&gt;&#xA;&lt;li&gt;Thorough pre-submission testing.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;In short everything about each contribution should be 'ready to go'.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;On the other side of the coin, the project committers are also responsible for integrating contributions. That means they need to test the release under preparation as a whole, and deal with ensuring that contributions from disparate contributors 'play well together'. They are responsible for generating the release notes and creating and testing the binary distributions (if any).&lt;/p&gt;&#xA;" OwnerUserId="29" LastActivityDate="2015-07-06T18:16:19.297" CommentCount="0" />
  <row Id="879" PostTypeId="2" ParentId="863" CreationDate="2015-07-06T18:34:27.603" Score="2" Body="&lt;p&gt;When creating a fork of a project, that fork will have the same copyright license as the original project.&lt;br&gt;&#xA;Only the owner of the copyright can give away some of his rights by means of a copyright license. In an open source license, the common rights that are given away are the right to make copies, to make changes and to (re-)distribute either the original or the modified work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One of the rights that a copyright owner has is the right to determine if a (modified) work can be distributed under a different license than the original one. Licenses that don't allow a covered work to be distributed under a different license are commonly called copyleft or ShareAlike licenses.&lt;br&gt;&#xA;The SIL OFL 1.1 license has a ShareAlike clause, which means that if you fork a project with the SIL OFL 1.1 license, then your fork must use the license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The 'DerivativeRenaming' clause in SIL OFL 1.1 means that if you change the appearance of the font, you must also call the font something differently. This is usually done to avoid confusion, so that users will know exactly what a letter A looks like if they talk about Font Awesome.&lt;/p&gt;&#xA;" OwnerUserId="258" LastActivityDate="2015-07-06T18:34:27.603" CommentCount="0" />
  <row Id="881" PostTypeId="1" AcceptedAnswerId="882" CreationDate="2015-07-06T20:34:56.970" Score="8" ViewCount="153" Body="&lt;p&gt;According to the &lt;a href=&quot;http://opendefinition.org&quot;&gt;Open Definition&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;“Open means anyone can freely access, use, modify, and share for any purpose (subject, at most, to requirements that preserve provenance and openness).”&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Open Data is hence, any data that is open, according to this definition. So, then this leads me to the question: What is Open Knowledge, and how is it different from Open Data?&lt;/p&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-07-12T13:40:52.850" Title="What is Open Knowledge, and how is it different from Open Data?" Tags="&lt;open-definition&gt;&lt;open-knowledge&gt;&lt;open-data&gt;" AnswerCount="1" CommentCount="1" FavoriteCount="1" />
  <row Id="882" PostTypeId="2" ParentId="881" CreationDate="2015-07-06T20:34:56.970" Score="9" Body="&lt;p&gt;According to the Open Knowledge Foundation...&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Open Knowledge is what open data becomes when it’s useful, doable, and used.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So then what does this mean? The foundation goes on to list three key points about “openness”&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Open data are the building blocks of open knowledge. &lt;strong&gt;Open knowledge is what open data becomes when it’s useful, usable and used.&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;&lt;strong&gt;Availability and Access&lt;/strong&gt;:  the data must be available as a whole and at no more than a reasonable reproduction cost, preferably by downloading over the internet. The data must also be available in a convenient and modifiable form.&lt;/li&gt;&#xA;  &lt;li&gt;&lt;strong&gt;Reuse and redistribution&lt;/strong&gt;: the data must be provided under terms that permit reuse and redistribution including the intermixing with other datasets. The data must be machine-readable.&lt;/li&gt;&#xA;  &lt;li&gt;&lt;strong&gt;Universal Participation&lt;/strong&gt;:  everyone must be able to use, reuse and redistribute — there should be no discrimination against fields of endeavour or against persons or groups. For example, ‘non-commercial’ restrictions that would prevent ‘commercial’ use, or restrictions of use for certain purposes (e.g. only in education), are not allowed.&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Generally, we refer to data as being of a certain situation, and knowledge when many agencies and groups of the public recognize and understand this data. The information is useful, available, and open to the public for their private or commercial use.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Take a &lt;a href=&quot;http://hdr.undp.org/en/2014-report&quot; rel=&quot;nofollow&quot;&gt;United Nations Human Development Report as an example&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;It’s easily available&lt;/em&gt;&lt;br&gt;&#xA;The report is literally a click away from being in your hands. There’s no access restrictions put into place by the UN Development Programme. The PDF document is easy to read, access and index.&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;You can share and redistribute these reports&lt;/em&gt;&lt;br&gt;&#xA;According to the &lt;a href=&quot;http://hdr.undp.org/en/content/copyright-and-terms-use&quot; rel=&quot;nofollow&quot;&gt;Terms Of Use&lt;/a&gt;, the content is licensed under the &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/igo/&quot; rel=&quot;nofollow&quot;&gt;Creative Commons International Organizations License&lt;/a&gt;. It says that you’re allowed to share the information, and adapt, or build upon it for any purpose.&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;It’s available for any use&lt;/em&gt;&lt;br&gt;&#xA;The license goes on to say that you can use the data, even commercially. I’ve used these reports many times, particularly in my school research projects in a multitude of subjects, such as English, Geography and the like. The UN Development Programme doesn’t restrict or discriminate under anyone, and everyone can freely use it.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;These development reports are a perfect example of Open Knowledge.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A few examples of things that aren’t Open Knowledge:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The crumpled up note that you secretly passed with your girlfriend at school earlier today.&lt;/li&gt;&#xA;&lt;li&gt;That super secret document you gave to your boss about your company’s newest, fanciest phone that will beat Apple's iPhone and Samsung's whatever phone they have.&lt;/li&gt;&#xA;&lt;li&gt;The game article you sent to the newspaper the other day, only allowed for use for educational purposes.&lt;/li&gt;&#xA;&lt;li&gt;The prescription numbers of your recently acquired glasses&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-07-12T13:40:52.850" LastActivityDate="2015-07-12T13:40:52.850" CommentCount="11" />
  <row Id="883" PostTypeId="1" AcceptedAnswerId="972" CreationDate="2015-07-06T20:52:23.073" Score="2" ViewCount="111" Body="&lt;p&gt;Linux comes most often to your computer as a distribution. This distribution contains a lot more than only Linux: Browser, Editor, Games, Terminal, Spreadsheet and so on. But nearly all software in distributions is open source. Why is open source software often spread via distributions? There is no Windows-distribution, with all the important software like Office and so on, so why is it so common for open source?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="190" LastEditDate="2015-07-10T13:38:19.313" LastActivityDate="2015-07-10T13:38:19.313" Title="Why is open source software often shared via distributions?" Tags="&lt;software&gt;&lt;linux-distribution&gt;" AnswerCount="4" CommentCount="4" />
  <row Id="884" PostTypeId="2" ParentId="883" CreationDate="2015-07-06T21:06:14.057" Score="1" Body="&lt;p&gt;Windows software is as a whole far more closed source than Linux software is, especially the &lt;em&gt;essential software&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Windows itself is sold-source. The code is sold to people who can pay. To use the OS you require a license that you've paid for. The essential software, such as Office, is also proprietary, licensed, paid software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It's more common to distribute open source software in a package because it's much easier. With closed source software you'd have to get explicit permission from every software author; with open source the license just allows you to do it. Think this piece of software goes well with this one? Sure, bundle them and distribute.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-07-06T21:06:14.057" CommentCount="0" />
  <row Id="885" PostTypeId="2" ParentId="883" CreationDate="2015-07-06T21:11:49.677" Score="2" Body="&lt;p&gt;Linux distributions use package management tools to handle what you describe. It is very difficult to manage the legal hurdles involved in packaging and redistributing software that is not free, or is not allowed to be redistributed under broad terms. No one can put Microsoft Office in a package manager except Microsoft, because Microsoft won't give anyone a license to re-sell or re-distribute their software in that fashion.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There has been a lot of smaller-community and commercial progress in package management for Windows in the last ten years or so, but it will be a very long time before there is anything equivalent to the systems for operating systems that are themselves open source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Existing package management systems for Windows:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://chocolatey.org&quot; rel=&quot;nofollow&quot;&gt;http://chocolatey.org&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://ninite.com&quot; rel=&quot;nofollow&quot;&gt;http://ninite.com&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://steampowered.com&quot; rel=&quot;nofollow&quot;&gt;http://steampowered.com&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Potential package management functionality in Windows 10: &lt;a href=&quot;http://www.howtogeek.com/200334/windows-10-includes-a-linux-style-package-manager-named-oneget/&quot; rel=&quot;nofollow&quot;&gt;http://www.howtogeek.com/200334/windows-10-includes-a-linux-style-package-manager-named-oneget/&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="19" LastActivityDate="2015-07-06T21:11:49.677" CommentCount="0" />
  <row Id="886" PostTypeId="1" AcceptedAnswerId="888" CreationDate="2015-07-06T21:24:36.487" Score="12" ViewCount="343" Body="&lt;p&gt;I'm a little confused by copyright notices on open source projects.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Let's say that a particular project is covered by a very permissive license, such as MIT or BSD.  A copyright notice appears from the company that originated the source code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But let's say that the project leader leaves the company, but continues to contribute to the project.  Should s/he add a new copyright notice, to indicate that portions are copyright from the original company and portions from the author no longer employed by that company?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It seems to me that anyone who touches a file essentially invalidates the copyright claims of anyone prior, because the file becomes a &quot;new creative expression&quot; based on those modifications.  How is the copyright supposed to be managed in a legally (and morally) robust manner as more and more people contribute?&lt;/p&gt;&#xA;" OwnerUserId="434" LastEditorUserId="69" LastEditDate="2015-07-06T21:27:27.267" LastActivityDate="2015-07-06T22:05:15.213" Title="Copyright and Contributing to an Open Source Project" Tags="&lt;licensing&gt;&lt;contributor&gt;&lt;copyright&gt;&lt;collaboration&gt;" AnswerCount="2" CommentCount="1" FavoriteCount="3" />
  <row Id="887" PostTypeId="1" AcceptedAnswerId="889" CreationDate="2015-07-06T21:37:51.533" Score="15" ViewCount="367" Body="&lt;p&gt;I share small snippets of code with friends, and would like to post them online for others to use.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'm not sure of the best license?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I was thinking MIT, but it includes this clause:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The above copyright notice and this permission notice shall be included in&#xA;  all copies or substantial portions of the Software.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;These code snippets are not very big, not enough to justify adding an entire license screen. And there is no &quot;read me&quot; or &quot;license&quot; text file distributed along with a mobile app.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'm not going to change the user interface of my app, just so I can turn three lines of ugly code into one line of clean code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is there an open source license that does not require the license to be bundled with binary copies of the app?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Or perhaps I should use MIT and delete that one clause?&lt;/p&gt;&#xA;" OwnerUserId="436" LastEditorUserId="69" LastEditDate="2015-07-06T21:38:51.507" LastActivityDate="2015-07-06T22:52:51.330" Title="License for code snippets?" Tags="&lt;licensing&gt;&lt;license-recommendation&gt;&lt;mit&gt;" AnswerCount="2" CommentCount="5" FavoriteCount="2" />
  <row Id="888" PostTypeId="2" ParentId="886" CreationDate="2015-07-06T21:51:51.593" Score="4" Body="&lt;p&gt;This is where the problem (or advantage) of multiple copyright owners comes in with open projects. There are two scenarios, based on whether a Copyright Transfer Agreement (CTA) is required to contribute to the project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If a CTA is required to make contributions, then the issue is moot as the organization running the project becomes the copyright holder.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Otherwise, a common practice is to have multiple copyright lines within each affected file.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Thus you might see the following:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;// Copyright 1998..2015 Myorganization&#xA;// Copyright 2013 Fred Coder&#xA;// Copyright 2011 A N Other&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Indicating that the file has been modified throughout its life by the official 'organization', but has also been touched by two different developers.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The copyright in this case exists in the entire file, as a combination of all contributions, rather than in specific lines of code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another approach is to have a single file (often named something like  &lt;code&gt;CONTRIBUTORS.txt&lt;/code&gt;) in the project root which identifies everyone who has some copyright claims to the source code.&lt;/p&gt;&#xA;" OwnerUserId="29" LastActivityDate="2015-07-06T21:51:51.593" CommentCount="3" />
  <row Id="889" PostTypeId="2" ParentId="887" CreationDate="2015-07-06T21:58:52.443" Score="4" Body="&lt;p&gt;It looks like you want a permissive license. Perhaps, you could use the &lt;a href=&quot;http://unlicense.org&quot; rel=&quot;nofollow&quot;&gt;unlicense&lt;/a&gt;?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;From their site:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The Unlicense is a template for disclaiming copyright monopoly interest in software you've written; in other words, it is a template for dedicating your software to the public domain. It combines a copyright waiver patterned after the very successful public domain SQLite project with the no-warranty statement from the widely-used MIT/X11 license.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;As such, you would be able to license your code, placing little to no restrictions on it.&lt;/p&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-07-06T21:58:52.443" CommentCount="2" />
  <row Id="890" PostTypeId="2" ParentId="886" CreationDate="2015-07-06T22:05:15.213" Score="5" Body="&lt;p&gt;By default under international copyright law, all copyright is owned by the person who wrote the code (or owned by the company they work for if they are an employee, or owned by the client who hired them if they are a subcontractor).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;With open source projects, there can be dozens or hundreds or even thousands of people who own copyright on a project. This means all of them own the copyright and any copy must be authorised by all of them.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There's no one person who owns copyright, the original company who previously owned all the copyright now only owns part of it and therefor they have to get permission from all other contributors to make copies.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;By having a well written license (such as MIT or GPL) attached to the project all of the copyright holders have clearly given the world permission to make copies with certain restrictions, and this means that anybody can do so without having to ask for permission from everybody.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The only time this really becomes a problem is when you do not want to comply with the restrictions of MIT or GPL. For example the VLC project tried to put their product on Apple's Store but this isn't allowed in their license and somebody sent a legal threat to Apple, resulting VLC being from the store. Since the license doesn't allow deploying on the store the only way to do so is with written permission from &lt;em&gt;everybody&lt;/em&gt; who has ever contributed to the project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another (less common) way to approach the issue is for all contributors to assign copyright to the company/foundation who runs the project using a &quot;Copyright Transfer Agreement&quot;. This way there is only one copyright holder and they can do anything without having to comply with the license, since they own all of the copyright.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;An example of this is the Java project which was created by Sun and later purchased by Oracle. It is released under the GPL license, but Sun/Oracle also sell the product under a proprietary license that does not include GPL's &quot;copyleft&quot; restrictions. They need to own all of the copyright to take that approach.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Something else to keep in mind is most projects use a good version control system such as Git and this allows you to know exactly who wrote every line of code in the project. This can be used to find who wrote some code so you can contact them for permission, and if they don't respond you could delete all of their code (and also any other code that &quot;derives&quot; from their code... talk to a lawyer to find out exactly how that works).&lt;/p&gt;&#xA;" OwnerUserId="436" LastActivityDate="2015-07-06T22:05:15.213" CommentCount="0" />
  <row Id="891" PostTypeId="2" ParentId="887" CreationDate="2015-07-06T22:12:46.607" Score="4" Body="&lt;p&gt;It seems that you don’t need a typical FLOSS license at all.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you want to let everyone use the code snippets and allow them to do whatever they want to do with them (which includes publishing these snippets themselves without explicitly granting others the freedom to use these), without having to attribute you and without having to reference a license, then you could release the works into the &lt;strong&gt;public domain&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As this is not possible in all jurisdictions, there are licenses that try to &quot;simulate&quot; the public domain to the greatest extent allowed by the respective laws. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;A popular one is &lt;a href=&quot;https://creativecommons.org/publicdomain/zero/1.0/&quot; rel=&quot;nofollow&quot; title=&quot;Creative Commons: CC0 1.0 Universal - Public Domain Dedication&quot;&gt;&lt;strong&gt;CC0 1.0&lt;/strong&gt;&lt;/a&gt; (it’s &lt;a href=&quot;https://www.gnu.org/licenses/license-list#CC0&quot; rel=&quot;nofollow&quot; title=&quot;GPL-Compatible Free Software Licenses&quot;&gt;approved by the FSF&lt;/a&gt;, but &lt;a href=&quot;http://opensource.org/faq#cc-zero&quot; rel=&quot;nofollow&quot; title=&quot;OSI FAQ: What about the Creative Commons &amp;#39;CC0&amp;#39; (&amp;#39;CC Zero&amp;#39;) public domain dedication? Is that Open Source?&quot;&gt;not approved by the OSI&lt;/a&gt;).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You would just have to include something like this somewhere, e.g., in your site’s footer or your Stack Overflow profile:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;All my code snippets are licensed under &lt;a href=&quot;https://creativecommons.org/publicdomain/zero/1.0/&quot; rel=&quot;nofollow&quot; title=&quot;Creative Commons: CC0 1.0 Universal - Public Domain Dedication&quot;&gt;CC0 1.0&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;(Here’s &lt;a href=&quot;https://wiki.creativecommons.org/wiki/CC0_FAQ#May_I_apply_CC0_to_computer_software.3F_If_so.2C_is_there_a_recommended_implementation.3F&quot; rel=&quot;nofollow&quot; title=&quot;CC0 FAQ: May I apply CC0 to computer software? If so, is there a recommended implementation?&quot;&gt;what CC and the FSF recommend to write&lt;/a&gt;; it’s, for example, &lt;a href=&quot;https://wiki.creativecommons.org/wiki/CC0_FAQ#Why_do_some_works_indicate_the_jurisdiction_from_which_the_work_is_being_published.3F&quot; rel=&quot;nofollow&quot; title=&quot;CC0 FAQ: Why do some works indicate the jurisdiction from which the work is being published?&quot;&gt;recommended to mention your jurisdiction&lt;/a&gt;. CC offers &lt;a href=&quot;http://creativecommons.org/choose/zero/&quot; rel=&quot;nofollow&quot; title=&quot;Chooser&quot;&gt;a tool that outputs a possible snippet.&lt;/a&gt;)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now everyone can use the snippets in any way (but it &lt;a href=&quot;https://wiki.creativecommons.org/wiki/CC0_FAQ#What_about_other_IP_related_rights.2C_such_as_trademark_and_patent_rights.3F&quot; rel=&quot;nofollow&quot; title=&quot;CC0 FAQ: What about other IP related rights, such as trademark and patent rights?&quot;&gt;doesn’t affect&lt;/a&gt; your possible trademark or patent rights), without having to reference this license and &lt;a href=&quot;https://wiki.creativecommons.org/wiki/CC0_FAQ#Does_CC0_require_others_who_use_my_work_to_give_me_attribution.3F&quot; rel=&quot;nofollow&quot; title=&quot;CC0 FAQ: Does CC0 require others who use my work to give me attribution?&quot;&gt;without having to attribute you&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="138" LastEditorUserId="138" LastEditDate="2015-07-06T22:52:51.330" LastActivityDate="2015-07-06T22:52:51.330" CommentCount="11" />
  <row Id="892" PostTypeId="2" ParentId="304" CreationDate="2015-07-06T22:49:55.203" Score="-2" Body="&lt;p&gt;&lt;strong&gt;No, you cannot.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A licence is a way for a copyright holder to grant certain rights to others that are otherwise reserved.  You don't own any copyrights to any stuff you just download from the internet, unless someone specifically transfers their copyright to you (e.g., what IEEE requires for scientific papers in order to publish them -- the authors must assign their copyright to IEEE).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you make sufficient changes to the code, then you &lt;em&gt;might&lt;/em&gt; be able to choose a different licence for your changes.  But should you?  The issue with the BSD/Linux controversy in regards to Atheros comes down to the ethical considerations -- the GPL advocates claim that BSD licence allows companies to not release the source code (even though a lot of companies do, since it's cheaper that way, and a lot of diffs get incorporated into all BSDs that originate from these companies like Netflix, Apple and even Oracle), yet instead of playing nice with the BSD guys themselves, Linux guys do the exact opposite than what all of those commercial companies are actually doing -- they (re)licence their changes to GPL, making sure that all such changes are forever barred from going back to the BSD projects.  (Specifically, the conflict was fuelled by the fact that such re-licensing has occurred when only trivial and non-copyrightable changes have been performed on the existing code.)&lt;/p&gt;&#xA;" OwnerUserId="193" LastActivityDate="2015-07-06T22:49:55.203" CommentCount="1" />
  <row Id="893" PostTypeId="1" CreationDate="2015-07-06T22:58:33.153" Score="6" ViewCount="96" Body="&lt;p&gt;I'm a BSD developer, and I prefer to have a clear ISC licence at the top of every file that is fully self-sufficient in regards to the exact terms that I'm imposing on my work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is there a variation of the BSD licence that I could use for an open-source service with a web-interface similar to &lt;a href=&quot;http://mdoc.su/&quot; rel=&quot;nofollow&quot;&gt;mdoc.su&lt;/a&gt; or &lt;a href=&quot;http://ports.su/net/mrtg&quot; rel=&quot;nofollow&quot;&gt;mrtg&lt;/a&gt;, such that most or all deployments would be prohibited from removing a backlink?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Should I perhaps just add some such condition between the &quot;Copyright&quot; header and the terms of the ISC licence?  What would be the shortest language that I could use, to ensure people comply easily, but also to ensure that it's not overly bothersome, either?&lt;/p&gt;&#xA;" OwnerUserId="193" LastEditorUserId="193" LastEditDate="2015-07-20T20:06:45.977" LastActivityDate="2015-07-21T03:02:14.220" Title="Is there a simple web licence for a backlink?" Tags="&lt;licensing&gt;&lt;bsd&gt;&lt;website&gt;" AnswerCount="2" CommentCount="4" />
  <row Id="894" PostTypeId="2" ParentId="811" CreationDate="2015-07-06T23:00:18.567" Score="5" Body="&lt;p&gt;My recommendation is to join the development and commit-notification mailing lists for an Open Source project you have an interest in, subscribe to notifications on GitHub if applicable, join their IRC channels, if applicable. Become very familiar with using the application and offer assistance to new users attempting to use the product and/or experiencing issues with it. Carefully review the project's bug-tracker and look for issues people are experiencing and proposals for new functionality. Watch commit notifications and observe how the project changes over time, how new features are developed, as well as feedback and revisions to patches and commits. Step one is to &lt;em&gt;observe and learn&lt;/em&gt;, and this is critical. You should know a bit about what's going on before you just jump in. Ask questions, but be careful with assumptions. Read through the code comprehensively.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;After a period of learning, it's time to begin contributing. Find a small issue you're capable of fixing, and submit a patch or pull request. Learn from the feedback you receive and avoid being defensive about your code. Follow the style and guidelines of the project. Engage in discussion on the development mailing lists, IRC, and bug trackers. As time goes on, you can begin working on bigger projects and more complex functionality. These communities are an easy place to gain respect and &quot;move up the ladder&quot; if you are a helpful contributor to the community, and behave in a respectful and respectable manner in the community. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Politics differ for each project, but it is often important to be politically-sensitive and aware. Much like a project at a for-profit company, sometimes politics are unavoidable.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can also contribute without actually writing code--improving documentation can be a good place to start! This is just my perspective from my contributions to the Open Source community (including acting as maintainer of a small-but-active OSS project with many community members several years back), and I welcome others to share theirs as well :)&lt;/p&gt;&#xA;" OwnerUserId="90" LastActivityDate="2015-07-06T23:00:18.567" CommentCount="2" />
  <row Id="895" PostTypeId="1" AcceptedAnswerId="897" CreationDate="2015-07-06T23:35:11.217" Score="5" ViewCount="56" Body="&lt;p&gt;The Open Source Initiative has created the &lt;a href=&quot;http://opensource.org/osd&quot;&gt;Open Source Definition&lt;/a&gt; to define what open source is. Also it has set up a formal process to approve licenses to be open source. Now, does a license need this formal approval to be an open source license or is conforming with the definition enough?&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-07-07T00:15:12.283" Title="Does a license needs to be approved by the OSI to be an open source license?" Tags="&lt;osi&gt;&lt;open-source-definition&gt;" AnswerCount="2" CommentCount="1" />
  <row Id="896" PostTypeId="2" ParentId="895" CreationDate="2015-07-07T00:14:58.163" Score="2" Body="&lt;p&gt;It depends on how strictly you interpret the term &quot;open source&quot;.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If you go with the strictest definition, Open Source is a term defined by the OSI so naturally OSI approval is required.&lt;/li&gt;&#xA;&lt;li&gt;However, as you've hinted at, the approval process is somewhat different from the Open Source Definition. Among the differences are: when OSI disapproves of a license &lt;a href=&quot;http://opensource.org/minutes20090304&quot; rel=&quot;nofollow&quot;&gt;because it is redundant&lt;/a&gt;, or if they &lt;a href=&quot;http://crynwr.com/cgi-bin/ezmlm-cgi?17:mss:32:200801:chphgjcnoibafhhebkjc&quot; rel=&quot;nofollow&quot;&gt;haven't gotten around to approving it&lt;/a&gt;. You could argue, with varying success, that if OSI says it's a license is redundant with an &lt;a href=&quot;http://opensource.org/licenses/Fair&quot; rel=&quot;nofollow&quot;&gt;already OSI-approved one&lt;/a&gt;, or if you interpret the license as conforming to the OSD so OSI will approve it someday, then it's open source.&lt;/li&gt;&#xA;&lt;li&gt;If you use &quot;open source&quot; as a generic term for software that allows unrestricted usage, modification and redistribution, then those licenses that aren't OSI-approved but approved by a similar body like the FSF or Debian Project are also open source. There are differences in opinion on what the generic term should be; FSF and &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_software_license&quot; rel=&quot;nofollow&quot;&gt;Wikipedia&lt;/a&gt; use &quot;free software&quot;; others think the &quot;free&quot; is ambiguous with &lt;em&gt;gratis&lt;/em&gt;, and terms like FOSS and FLOSS have been invented for this purpose.&lt;/li&gt;&#xA;&lt;li&gt;If you use &quot;open source&quot; as an even more generic term for copyright licenses that grant broad freedoms including usage, modification and redistribution, (like our site name does - we're not affiliated with the OSI! Really!) then not only are OSI or FSF approval not required, even non-software licenses will fall under this like the Creative Commons licenses. Some people refer to these licenses as simply &quot;open&quot;, or &quot;free&quot;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;In practice, all the popular free software licenses conform to all these definitions, so you'll never confuse anyone by saying a license is &quot;open source&quot;, only that they may prefer you use a different term.&lt;/p&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-07-07T00:14:58.163" CommentCount="0" />
  <row Id="897" PostTypeId="2" ParentId="895" CreationDate="2015-07-07T00:15:12.283" Score="6" Body="&lt;p&gt;&quot;Open Source&quot; is not a formally defined term, so there are various definitions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some might interpret it literally and apply it to any software whose source code is published (without necessarily any granted rights, e.g., to distribute it), some might apply it to any software that comes with certain not necessarily well-defined freedoms, some might apply it to any software that is licensed under a license that complies with &lt;a href=&quot;http://opensource.org/osd&quot;&gt;The Open Source Definition&lt;/a&gt;, and some might apply it to any software that is licensed under a license approved by the &lt;a href=&quot;http://opensource.org/&quot;&gt;Open Source Initiative&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;According to an &lt;a href=&quot;https://en.wikipedia.org/wiki/Open-source_software#Definitions&quot;&gt;unsourced claim in the Wikipedia article &lt;em&gt;Open-source software&lt;/em&gt;&lt;/a&gt;, OSI’s definition is &quot;recognized as the standard or de facto definition&quot;. According to OSI itself, &lt;a href=&quot;http://opensource.org/faq#free-software&quot;&gt;their founders coined the term&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And &lt;a href=&quot;http://opensource.org/faq#unlisted-licenses&quot;&gt;according to OSI’s FAQ&lt;/a&gt;, a license is only an &quot;Open Source license&quot; if it’s approved by the OSI:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Is &amp;lt;SOME LICENSE&amp;gt; an Open Source license, even if it is not listed on your web site?&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;In general, no. We run all licenses through an &lt;a href=&quot;http://opensource.org/approval&quot;&gt;approval process&lt;/a&gt; to provide an accepted standard on which licenses are Open Source, and we list &lt;a href=&quot;http://opensource.org/licenses&quot;&gt;the approved ones&lt;/a&gt;. Be dubious of claimed Open Source-ness for licenses that haven't gone through the process. See also the &lt;a href=&quot;http://opensource.org/proliferation&quot;&gt;license proliferation&lt;/a&gt; page for why this matters so much.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://opensource.org/faq#approved-licenses-only&quot;&gt;Another FAQ&lt;/a&gt; states essentially the same:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Is &amp;lt;SOME PROGRAM&amp;gt; Open Source?&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Only if it uses one of the approved licenses, and releases appropriate software.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Following this definition makes sense because it objectively makes clear which licenses are Open Source licenses.&lt;br&gt;&#xA;Deciding if a license complies to the OSD is &lt;em&gt;not&lt;/em&gt; always easy, and opinions might differ. If we’d only base the decision on the OSD and ignore if the OSI approves a license or not, we would most likely end up with licenses where some agree and some disagree that it’s an Open Source license. &lt;/p&gt;&#xA;" OwnerUserId="138" LastActivityDate="2015-07-07T00:15:12.283" CommentCount="0" />
  <row Id="898" PostTypeId="1" AcceptedAnswerId="899" CreationDate="2015-07-07T02:20:57.343" Score="15" ViewCount="558" Body="&lt;p&gt;GPL is a copyleft license where, if I make modifications to the source code and distribute the resulting binary, I need to provide the modified source code also under the GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What happens if I make modifications to the binary alone, leaving the source code unchanged? For example, if I compile a binary from GPL'd source code, modify it using a hex editor, then distribute the modified binary, how does the GPL affect me?&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Do I need to provide the source code under GPL, even though it is unchanged? If yes, do I need to provide it myself, or is linking to where I obtained it sufficient?&lt;/li&gt;&#xA;&lt;li&gt;What about the binary modifications? Do I need to provide the unmodified binary? A description of the modifications I made, and in what format?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-07-07T11:32:49.533" Title="How does GPL affect binary-only modifications?" Tags="&lt;gpl&gt;&lt;binaries&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="1" />
  <row Id="899" PostTypeId="2" ParentId="898" CreationDate="2015-07-07T06:57:52.197" Score="9" Body="&lt;p&gt;&lt;a href=&quot;https://gnu.org/licenses/gpl.html&quot;&gt;The GPL, version 3&lt;/a&gt;, has the following to say about distributing modified copies of a covered program in a form other than source code:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Section 6:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:&#xA;  [list of acceptable ways to convey source code]&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;From section 1, the definition of &lt;code&gt;Corresponding Source&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The “source code” for a work means the preferred form of the work for making modifications to it. “Object code” means any non-source form of a work.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The “Corresponding Source” for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Since you're distributing a program in non-source form, you need to provide a way for people receiving it to get the source code, including whatever is needed to make your binary modifications (a binary patch, a set of hex values to change, or whatever the preferred form is).&lt;/p&gt;&#xA;" OwnerUserId="240" LastActivityDate="2015-07-07T06:57:52.197" CommentCount="0" />
  <row Id="900" PostTypeId="1" CreationDate="2015-07-07T07:44:50.433" Score="2" ViewCount="138" Body="&lt;p&gt;&lt;a href=&quot;http://webix.com&quot; rel=&quot;nofollow&quot;&gt;Webix&lt;/a&gt; is a UI components library licensed under the GPL, with a &lt;a href=&quot;https://github.com/webix-hub/tracker/issues/235&quot; rel=&quot;nofollow&quot;&gt;FLOSS exception&lt;/a&gt;. On GitHub, they have &lt;a href=&quot;https://github.com/webix-hub/tracker/blob/master/codebase/webix_debug.js&quot; rel=&quot;nofollow&quot;&gt;distributed JavaScript in concatenated form&lt;/a&gt; only.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Must the authors of Webix publish the non-concatenated source code as well?&lt;/p&gt;&#xA;" OwnerUserId="447" LastEditorUserId="447" LastEditDate="2015-07-07T08:21:07.453" LastActivityDate="2015-07-07T11:59:03.640" Title="Does licensing JavaScript code under the GPL require publishing the non-concatenated source code?" Tags="&lt;gpl-3&gt;" AnswerCount="1" CommentCount="5" FavoriteCount="1" />
  <row Id="901" PostTypeId="2" ParentId="900" CreationDate="2015-07-07T08:02:07.313" Score="5" Body="&lt;p&gt;It's kind of a grey area.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The GPL mandates that the work must be conveyed in sourcecode form. Obfuscated sourcecode is still sourcecode which &lt;em&gt;could&lt;/em&gt; be edited when one is masochistic enough to do so.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But on the other hand, the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html&quot; rel=&quot;nofollow&quot;&gt;GPLv3&lt;/a&gt; defines &quot;sourcecode&quot; as follows:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The “source code” for a work means the preferred form of the work for making modifications to it.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Artificially obfuscated sourcecode is &lt;em&gt;not&lt;/em&gt; the preferred form of making modifications when the licensor also has the unobfuscated version available.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Regarding your questions &lt;em&gt;&quot;&lt;strong&gt;Must&lt;/strong&gt; the authors of Webix publish the non-concatenated source code as well?&quot;&lt;/em&gt;: Actually, &lt;a href=&quot;https://github.com/webix-hub/tracker/blob/master/codebase/webix_debug.js&quot; rel=&quot;nofollow&quot;&gt;they do offer the unobfuscated sourcecode&lt;/a&gt;. But for the sake of argument, let's pretend they would not.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When they are the sole authors, then they would not break any license. They can publish their work however they want. When the GPL is violated, the only one whose rights are violated in a legally relevant way is the copyright owner. As a downstream consumer, your only right is to decide to not use their software when it does not fulfill your quality standards. The only people who &lt;em&gt;might&lt;/em&gt; be able to claim a violation of their rights are any upstream contributors whose work got included in the software and then got obfuscated to an unreadable form. Whether the obfuscation is a violation of their license terms or a permitted form of modification is for a court to decide.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, it is questionable if it &lt;em&gt;makes sense&lt;/em&gt; to publish something under GPL and then discourage people from creating derivates or contribute patches by obfuscating your sourcecode. &lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-07-07T11:59:03.640" LastActivityDate="2015-07-07T11:59:03.640" CommentCount="1" />
  <row Id="902" PostTypeId="2" ParentId="304" CreationDate="2015-07-07T08:57:23.663" Score="1" Body="&lt;p&gt;Theo de Raadt is wrong. Plain and simple.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The BSD is a permissive license which allows to incorporate the licensed work under a different license, no matter if permissive, copyleft or proprietary. That's the point of using a permissive license. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;When the original authors of OpenBSD didn't want this to happen, they shouldn't have used the BSD license in the first place. When one does not want their work getting taken away from them like this, they are free to publish their work under a copyleft or proprietary license.&lt;/p&gt;&#xA;" OwnerUserId="14" LastActivityDate="2015-07-07T08:57:23.663" CommentCount="0" />
  <row Id="903" PostTypeId="2" ParentId="226" CreationDate="2015-07-07T09:09:51.547" Score="2" Body="&lt;p&gt;Whether you copy someone else's code into an open source or a proprietary project, you obviously need to check the licenses that you see, as was discussed. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, just because it is on stackoverflow, and stackoverflow requires a certain license, doesn't mean the code &lt;em&gt;is&lt;/em&gt; actually licensed. If an employee takes copyrighted code of his employer and publishes it on stackoverflow without permission, then there is no license!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;By far the best method is to take the code, study it, try it out, until you really understand it, and then write your own code. This has three advantages: You learned something. It is legally safe. And the code quality is now up to your own high standards.  &lt;/p&gt;&#xA;" OwnerUserId="454" LastActivityDate="2015-07-07T09:09:51.547" CommentCount="1" />
  <row Id="904" PostTypeId="1" AcceptedAnswerId="905" CreationDate="2015-07-07T09:30:13.460" Score="4" ViewCount="52" Body="&lt;p&gt;Code you post on Stack Overflow is licensed &quot;&lt;a href=&quot;http://creativecommons.org/licenses/by-sa/3.0/&quot; rel=&quot;nofollow&quot;&gt;cc-by-sa 3.0 with attribution required&lt;/a&gt;&quot;. Now this &lt;em&gt;may&lt;/em&gt; pose problems for people wanting to use my contributions depending on what license they have for their own software. I want to prevent such obstacles for others as much as possible, and found &lt;a href=&quot;http://meta.stackexchange.com/a/165090/162730&quot;&gt;this advice on uber-meta&lt;/a&gt; which comes down to placing a dual-license notice at the bottom of answers. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Comments on &lt;a href=&quot;http://meta.stackoverflow.com/q/271293/419956&quot;&gt;this SO meta question&lt;/a&gt; also suggest leaving a notice along these lines...&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Unless noted otherwise, all my questions and answers on Stack Overflow are also released under X.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;(where X is wtfpl, public domain, or some other very permissive license)&lt;/sup&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;...in your user profile is enough.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now, to the question: what's the best way to make sure as many people as possible can use my SO contributions, with as little as possible restrictions?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is leaving such a comment in your profile enough? And on a side note: wouldn't this pose problems if your answer uses / builds on snippets from other answers or even other open source libraries?&lt;/p&gt;&#xA;" OwnerUserId="451" LastActivityDate="2015-07-07T09:42:16.717" Title="How to license Stack Overflow contributions as permissive as possible?" Tags="&lt;licensing&gt;&lt;multi-licensing&gt;" AnswerCount="1" CommentCount="0" FavoriteCount="1" ClosedDate="2015-07-07T11:44:38.787" />
  <row Id="905" PostTypeId="2" ParentId="904" CreationDate="2015-07-07T09:42:16.717" Score="4" Body="&lt;p&gt;&lt;strong&gt;What's the best license?&lt;/strong&gt;&lt;br&gt;&#xA;To make sure as many people can use your contributions as possible, you should license them as public domain. Anyone can then use your work with no restrictions. However, this is not possible in some jurisdictions: look up where you live and if it's not possible, use CC0 instead.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Is that enough?&lt;/strong&gt;&lt;br&gt;&#xA;Yes. You're the copyright owner, you can do as you like with your work. In your profile is not immediately obvious, but it &lt;em&gt;does&lt;/em&gt; confer the license (or public domain) because you've explicitly said so. If you want it to me more obvious, try adding a &lt;code&gt;&amp;lt;sub&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; note after your code snippets that says they're CC0 or public domain.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Can it cause problems?&lt;/strong&gt;&lt;br&gt;&#xA;Yes. If you're building on others' code, you still have to abide by their licenses and restrictions. If you've got a note in your profile that everything you post is under CC0, this requires that you add a &lt;code&gt;&amp;lt;sub&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; note that says this code is &lt;em&gt;not&lt;/em&gt; under CC0 because X.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-07-07T09:42:16.717" CommentCount="2" />
  <row Id="906" PostTypeId="1" CreationDate="2015-07-07T09:55:45.843" Score="3" ViewCount="51" Body="&lt;p&gt;A customer project built on an FLOSS platform or framework (a CMS like Drupal for instance) may require some fixes to the underlying platform if it is pushing the limits or is being delivered on a very new version of the platform. For projects which use or integrate multiple FLOSS platforms/frameworks/libraries there may be a number of fixes or small extension created that fall under different projects, potentially with different licenses.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If we assume that the code being built for the customer is separate from the platforms or frameworks (a custom Drupal module or theme for instance), then the customer would reasonably expect to own the rights to the code they have hired or subcontracted the delivery of.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is there a standard form (ideally from a major foundation) for excluding any code contributed to FLOSS projects from the rights assignment to the customer up front?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;EDIT: The aim of such a clause or template would be to protect the subcontractor or freelancer, not the employer or send user organisation. Rights to any code built during the contract which is part of the supporting ecosystem should remain with the freelancer or subcontractor to be contributed under their relationship with the relevant projects[s].&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This would protect the freelancer or subcontractor from any claims that the customer's IP was given away when patches or extensions to ecosystem projects are contributed. If such an arrangement is in place at the start there won't be any complex or time consuming wrangling over individual contributions. If the process of contributing is simpler the customer will more likely be running on a standard rather than customised version of the ecosystem projects. Which would speed up development and ease maintenance and upgrades.&lt;/p&gt;&#xA;" OwnerUserId="453" LastEditorUserId="453" LastEditDate="2015-08-04T14:25:39.330" LastActivityDate="2015-08-04T14:25:39.330" Title="Are there standard templates or clauses to exempt contributed code from rights assignment?" Tags="&lt;contributor&gt;&lt;contributor-agreements&gt;&lt;contracts&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="907" PostTypeId="2" ParentId="846" CreationDate="2015-07-07T11:25:19.007" Score="7" Body="&lt;p&gt;I recommend visiting: &lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Free_software_movement&quot; rel=&quot;nofollow&quot;&gt;Free software movement&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Open-source_movement&quot; rel=&quot;nofollow&quot;&gt;Open-source movement&lt;/a&gt; for historical point of view&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.gnu.org/philosophy/free-software-for-freedom.en.html&quot; rel=&quot;nofollow&quot;&gt;free software for freedom&lt;/a&gt;, full article &lt;a href=&quot;http://www.gnu.org/philosophy/open-source-misses-the-point.html&quot; rel=&quot;nofollow&quot;&gt;open-source-misses-the-point&lt;/a&gt; and &lt;a href=&quot;http://www.gnu.org/philosophy/when-free-software-isnt-practically-superior.html&quot; rel=&quot;nofollow&quot;&gt;When Free Software Isn't (Practically) Superior&lt;/a&gt; for a &lt;strong&gt;Philosophic&lt;/strong&gt; point of view&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.gnu.org/philosophy/philosophy.html&quot; rel=&quot;nofollow&quot;&gt;Philosophy of the GNU project&lt;/a&gt; is closely relevant with Free software movement and hence free software philosophy.&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Notable points (from GNU):-&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;In addition to / Including @&lt;a href=&quot;http://opensource.stackexchange.com/users/83/michael-schumacher&quot;&gt;Michael Schumacher&lt;/a&gt;'s &lt;a href=&quot;http://opensource.stackexchange.com/a/866/296&quot;&gt;answer&lt;/a&gt;.&lt;/sup&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Open source is a development methodology; free software is a social movement&lt;/strong&gt;. For the free software movement, &lt;strong&gt;free software is an ethical imperative, essential respect for the users' freedom&lt;/strong&gt;. By contrast, the philosophy of open source considers issues in terms of &lt;strong&gt;how to make software “better”&lt;/strong&gt;—in a practical sense only. It says that nonfree software is an inferior solution to the practical problem at hand.......&lt;br&gt;&lt;br&gt;&#xA;  For the free software movement, however, nonfree software is a social problem, and the solution is to stop using it and move to free software.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Practical difference:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Open source doesn't take &lt;a href=&quot;https://en.wikipedia.org/wiki/Tivoization&quot; rel=&quot;nofollow&quot;&gt;Tivoization&lt;/a&gt; as issue while for Free Software, it is ethical/social problem: (Quoted form &lt;a href=&quot;http://www.gnu.org/philosophy/open-source-misses-the-point.html&quot; rel=&quot;nofollow&quot;&gt;Why Open Source misses the point of Free Software&lt;/a&gt;)&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;...Even if the executable is made from free source code, the users cannot run modified versions of it, so the executable is &lt;strong&gt;nonfree&lt;/strong&gt;.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&lt;strong&gt;The criteria for open source do not recognize this issue&lt;/strong&gt;; they are concerned solely with the licensing of the source code. Thus, these unmodifiable executables, when made from source code such as Linux that is open source &lt;strong&gt;and&lt;/strong&gt; free, are open source but &lt;strong&gt;not&lt;/strong&gt; free.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Different Values:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The idea of open source is that allowing users to change and redistribute the software will make it more powerful and reliable. &lt;strong&gt;But this is not guaranteed&lt;/strong&gt;. Developers of proprietary software are not necessarily incompetent. Sometimes they produce a program that is powerful and reliable, even though it does not respect the users' freedom. &lt;strong&gt;Free software activists and open source enthusiasts will react very differently to that&lt;/strong&gt;.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;A pure open source enthusiast, one that is not at all influenced by the ideals of free software, will say, “I am surprised you were able to make the program work so well without using our development model, but you did. How can I get a copy?” This attitude will reward schemes that take away our freedom, leading to its loss.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The free software activist will say, “Your program is very attractive, but I value my freedom more. So I reject your program. I will get my work done some other way, and support a project to develop a free replacement.” If we value our freedom, we can act to maintain and defend it.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Notable para from fear of freedom:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;blockquote&gt;&#xA;  &lt;p&gt;The rhetoric of open source has convinced many businesses and individuals to use, and even develop, free software, which has extended our community—but only at the superficial, practical level. &lt;strong&gt;The philosophy of open source, with its purely practical values, impedes understanding of the deeper ideas of free software; it brings many people into our community, but does not teach them to defend it&lt;/strong&gt;. That is good, as far as it goes, but it is not enough to make freedom secure. Attracting users to free software takes them just part of the way to becoming defenders of their own freedom.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;blockquote&gt;&#xA;  &lt;p&gt;Most GNU/Linux users were introduced to the system through “open source” discussion, which doesn't say that freedom is a goal. &lt;/p&gt;&#xA;&lt;/blockquote&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;h3&gt;Notable points (from OSI):-&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;The &lt;a href=&quot;http://opensource.org/about&quot; rel=&quot;nofollow&quot;&gt;mission&lt;/a&gt; of opensource says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Open source is a development method for software that harnesses the power of distributed peer review and transparency of process. &lt;strong&gt;The promise of open source is better quality, higher reliability, more flexibility, lower cost, and an end to predatory vendor lock-in&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Quoted from &lt;a href=&quot;http://opensource.org/history&quot; rel=&quot;nofollow&quot;&gt;opensource history&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The conferees also believed that it would be useful to have a single label that identified &lt;strong&gt;this approach and distinguished it from the philosophically- and politically-focused label &quot;free software.&quot;&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Quoted from &lt;a href=&quot;http://opensource.org/faq#free-software&quot; rel=&quot;nofollow&quot;&gt;OSI FAQ&lt;/a&gt;:-&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The term &quot;open source&quot; was coined in 1998 by a group of people — the founders of the Open Source Initiative (OSI) — who also supported the development and distribution of free software, &lt;strong&gt;but who disagreed with the FSF about how to promote it, and who felt that software freedom was primarily a practical matter rather than an ideological one&lt;/strong&gt; (see for example the entry &quot;How is 'open source' related to `free software'?&quot; from the OSI's &lt;a href=&quot;http://web.archive.org/web/19981206185148/http://www.opensource.org/history.html&quot; rel=&quot;nofollow&quot;&gt;original 1998 FAQ page&lt;/a&gt;).&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Following the coining of the term &quot;open source&quot;, some of those who adopted it did so because they too had &lt;strong&gt;philosophical differences&lt;/strong&gt; with the FSF about the reasons why to promote such software, while others who adopted the term did so &lt;strong&gt;because of differences of opinion with the FSF about tactically how to support such software, even while sharing an ideological motivation&lt;/strong&gt;. These two groups can and do overlap, of course, and some people use both terms, choosing according to context and audience.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Also categories of free and non-free software from &lt;a href=&quot;http://opensource.stackexchange.com/a/530/296&quot;&gt;this answer&lt;/a&gt; which graphically explains difference/overlap i.e how opensource is free (mostly) and non-free (rarely).&lt;/p&gt;&#xA;" OwnerUserId="296" LastEditorUserId="98" LastEditDate="2015-07-10T11:55:08.460" LastActivityDate="2015-07-10T11:55:08.460" CommentCount="1" />
  <row Id="908" PostTypeId="5" CreationDate="2015-07-07T11:30:04.913" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-07T11:30:04.913" LastActivityDate="2015-07-07T11:30:04.913" CommentCount="0" />
  <row Id="909" PostTypeId="4" CreationDate="2015-07-07T11:30:04.913" Score="0" Body="Questions about GNU Project (free software, mass collaboration project) or GNU Operating System (a Unix-like computer operating system composed wholly of free software)." OwnerUserId="296" LastEditorUserId="296" LastEditDate="2015-07-07T12:30:56.407" LastActivityDate="2015-07-07T12:30:56.407" CommentCount="0" />
  <row Id="910" PostTypeId="2" ParentId="898" CreationDate="2015-07-07T11:32:49.533" Score="1" Body="&lt;p&gt;If you hex-edit the binary then the original source becomes less relevant and you have effectively made the new binary &quot;the preferred form of the work for making modifications&quot;. Certainly if I wanted to make further changes to your binary I would prefer to hex-edit the binary, not edit the original sources.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Hence the new binary now &lt;strong&gt;is&lt;/strong&gt; the source code. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is also a derivative of the original, and the GPL applies to it as completely as it were a &quot;normal source&quot; derivation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This interpretation is entirely speculative (and I advise you not to rely on it without real legal advice), but it does seem to be a consequence of the phrase &quot;the preferred form&quot;.&lt;/p&gt;&#xA;" OwnerUserId="243" LastActivityDate="2015-07-07T11:32:49.533" CommentCount="6" />
  <row Id="911" PostTypeId="1" AcceptedAnswerId="912" CreationDate="2015-07-07T11:41:51.350" Score="6" ViewCount="1738" Body="&lt;p&gt;The copyright-owner can choose any license they wish to. But if they decide to choose an open source license (lets say Apache 2), how much do they have to conform to the license? Especially, do they have to release the source code somehow (or make it accessible for whoever got the binaries that claim to be Apache-licensed). Or is it just a false claim, that it is open source, if the source isn't available?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="168" LastEditDate="2015-07-08T08:36:19.817" LastActivityDate="2015-07-08T08:36:19.817" Title="If the copyright-owner claims his works to be open source, do they have to release the source somewhere?" Tags="&lt;licensing&gt;&lt;distribution&gt;" AnswerCount="2" CommentCount="1" />
  <row Id="912" PostTypeId="2" ParentId="911" CreationDate="2015-07-07T11:52:39.637" Score="13" Body="&lt;p&gt;Software isn't inherently licensed in any particular way.  Rather, it is &lt;em&gt;released&lt;/em&gt; under a licence; which licence or licences it is released under are at the discretion of the copyright holder.  That there can be many different licences under which a piece of software is released should make it clear that the licence isn't an inherent property of the software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A copyright holder claiming that their software &lt;em&gt;is&lt;/em&gt; open source is making a statement with no real content; it can't be right &lt;em&gt;or&lt;/em&gt; wrong, for it is meaningless.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If a copyright holder claims to have &lt;em&gt;released&lt;/em&gt; a piece of software under an open source licence, but they have not in fact released it in this way (or at all), then they are wrong - because of the lack of a release, rather than because of a mis-statement about an inherent property of the software.&lt;/p&gt;&#xA;" OwnerUserId="458" LastEditorUserId="458" LastEditDate="2015-07-07T14:05:31.313" LastActivityDate="2015-07-07T14:05:31.313" CommentCount="2" />
  <row Id="913" PostTypeId="2" ParentId="911" CreationDate="2015-07-07T11:58:02.017" Score="6" Body="&lt;p&gt;From &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; rel=&quot;nofollow&quot;&gt;Apache version 2.0&lt;/a&gt; (emphasis mine):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ol start=&quot;4&quot;&gt;&#xA;  &lt;li&gt;Redistribution. You &lt;strong&gt;may&lt;/strong&gt; reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source &lt;strong&gt;or Object form&lt;/strong&gt;, provided that You meet the following conditions:&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;No one is obliged to redistribute anything.&lt;/li&gt;&#xA;&lt;li&gt;Even if they do, they don't have to supply the source.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;And even with more restrictive licenses like GPL, point 1 still applies.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Additionally, you have to keep in mind that the copyright owner can distribute his project under whatever license they please to different people.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What this means is that you can release your project to people under an open source license and to no one else. And these people are in turn under no obligation to redistribute the project. In the case of Apache you can even make sure the actual source never sees the light of day (I believe).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Putting that aside for a moment though, if you claim that your project is open source and no one can get a copy of the source code, what you're saying is, though perhaps technically correct, incredibly misleading at the least and likely not going to sit well with many people.&lt;/p&gt;&#xA;" OwnerUserId="168" LastEditorUserId="168" LastEditDate="2015-07-08T06:54:29.513" LastActivityDate="2015-07-08T06:54:29.513" CommentCount="2" />
  <row Id="914" PostTypeId="1" AcceptedAnswerId="915" CreationDate="2015-07-07T12:17:42.337" Score="13" ViewCount="887" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;Note: this is  a hypothetical situation, not one I have actually encountered. (And one I hope I won't encounter)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I started a small open source project and have gathered a few loyal committers. We don't have much in the way of a hierarchical structure and make our decisions by way of consensus. This has not led to any significant problems.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Recently, the core contributors have split based on differing opinions about a rather central part of the project. (Which relates mainly to how users interact with the product on a very fundamental level.) A compromise seems unlikely and I fear the project will take a serious blow if it loses almost half of its contributors.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;How can I limit the damage this disagreement will deal to the project and how can I prevent something like this from happening in the future?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;sub&gt;For the sake of completeness, here are two &lt;a href=&quot;http://opensource.stackexchange.com/q/577/168&quot;&gt;related&lt;/a&gt; &lt;a href=&quot;http://opensource.stackexchange.com/q/395/168&quot;&gt;questions&lt;/a&gt; (separate links)&lt;/sub&gt;&lt;/p&gt;&#xA;" OwnerUserId="168" LastEditorUserId="168" LastEditDate="2015-07-07T13:00:15.887" LastActivityDate="2015-07-07T13:52:20.777" Title="What do I do if my contributors are split into two camps?" Tags="&lt;contributor&gt;&lt;community&gt;&lt;collaboration&gt;&lt;human-resources&gt;" AnswerCount="1" CommentCount="4" FavoriteCount="1" />
  <row Id="915" PostTypeId="2" ParentId="914" CreationDate="2015-07-07T13:10:29.153" Score="10" Body="&lt;p&gt;Been there, done that.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Why does it happen?&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;In my experience, a split due to creative differences usually happens because different people have a different idea of what the project goal actually is, but nobody is aware of that. As soon as a contributor realizes that someone else's vision is different from theirs, arguments and power struggle will start, which can quickly become personal and tear a project apart when not moderated properly.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;How to prevent it?&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;The best way to prevent this situation early on is to communicate your creative vision of the project early, clearly and often. Every project should have some kind of official document which outlines the goals. Make sure every contributor knows and understands it, so everyone is on the same page and nobody gets any misconceptions about where you are heading. Make clear that anyone who wants the project to go somewhere else, should fork from the start and not get involved in the mainline in the first place.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Should there be any disagreements about aspects of the project direction which were &lt;em&gt;not&lt;/em&gt; set in stone beforehand, it is important to make a binding decision &lt;strong&gt;before&lt;/strong&gt; things turn ugly. Having a clear hierarchy or well-defined decision making process is fundamental here. Without a binding process to make a decision - whether autocratic or democratic - people have no other choice but to &quot;reach consensus&quot; by either talking down the opposition through countless hours of filibusting in your communication channels (time they could rather spend working) or driving them out of the project through bullying and intrigue (a lose-lose situation for everyone involved).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Unfortunately, when the conflict is already under way, it is likely too late to establish a proper decision-making process. Such a process only works when everyone supports it. But when you try to establish it now, everyone will perceive it in the context of the current conflict and their support for it will depend on whether this process would decide the current matter in their favor or not. Opening up this new battlefield now will likely deepen the trench instead of bridging it.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;The split still happened. How to deal with it?&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;When the project is under a copyleft license (or when under a permissive license the other group is committed to keeping), you can still merge any of their commits into your codebase or vice versa, so the manpower is not completely lost to your project. But a split is still a considerable blow to the project because organisation structures and infrastructure need to be duplicated, coordination between the forks is impaired and their commits need to be carefully reviewed for relevance and merge conflicts.&lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-07-07T13:52:20.777" LastActivityDate="2015-07-07T13:52:20.777" CommentCount="1" />
  <row Id="916" PostTypeId="5" CreationDate="2015-07-07T15:26:27.420" Score="0" Body="&lt;p&gt;Terminology is the set of words used within a field or profession.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You should use this tag on questions that have to do with terminology: asking about what term you &lt;em&gt;should&lt;/em&gt; use for something, asking &lt;em&gt;why&lt;/em&gt; a term is used, or asking about the history of a term are all examples (though for the last one, also consider Linguistics.SE).&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-07-07T15:41:24.833" LastActivityDate="2015-07-07T15:41:24.833" CommentCount="0" />
  <row Id="917" PostTypeId="4" CreationDate="2015-07-07T15:26:27.420" Score="0" Body="For questions about the terms used in the field: their use, effects, and meanings." OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-07-07T15:41:07.883" LastActivityDate="2015-07-07T15:41:07.883" CommentCount="0" />
  <row Id="918" PostTypeId="5" CreationDate="2015-07-07T15:29:16.557" Score="0" Body="&lt;p&gt;Google defines marketing as&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;the action or business of promoting and selling products or services, including market research and advertising.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;You should use this tag on questions about &lt;em&gt;all&lt;/em&gt; aspects of marketing an open or free project: market research, advertising, promoting, selling, etc. General marketing questions are off-topic here, but if you have a problem specific to your open source project then this is the tag you should use.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-07-07T15:41:40.187" LastActivityDate="2015-07-07T15:41:40.187" CommentCount="0" />
  <row Id="919" PostTypeId="4" CreationDate="2015-07-07T15:29:16.557" Score="0" Body=".For questions concerning the promotion and advertising of open projects, and their implications with the general public, society, and respective organizations." OwnerUserId="98" LastEditorUserId="69" LastEditDate="2015-07-22T07:56:47.273" LastActivityDate="2015-07-22T07:56:47.273" CommentCount="0" />
  <row Id="920" PostTypeId="5" CreationDate="2015-07-07T15:46:52.443" Score="0" Body="&lt;p&gt;There is a formal &lt;a href=&quot;http://opensource.org/osd&quot; rel=&quot;nofollow&quot;&gt;definition of open source&lt;/a&gt;, consisting of ten points every open source has to fulfill. Use this tag for questions regarding this definition.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-07T15:54:51.910" LastActivityDate="2015-07-07T15:54:51.910" CommentCount="0" />
  <row Id="921" PostTypeId="4" CreationDate="2015-07-07T15:46:52.443" Score="0" Body="Use this tag for questions about the definition of open source" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-07T15:55:04.453" LastActivityDate="2015-07-07T15:55:04.453" CommentCount="0" />
  <row Id="922" PostTypeId="2" ParentId="893" CreationDate="2015-07-07T19:24:02.917" Score="-1" Body="&lt;p&gt;Yes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The license would simply need to have a sharealike clause. Then anyone else that uses it MUST share it with the same license (and link). &lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the event the license does not have a &quot;sharealike&quot; clause such as some CC license you can put &quot;a link to this license must be provided with all documents of this project&quot; or some such wording.  &lt;/p&gt;&#xA;" OwnerUserId="271" LastActivityDate="2015-07-07T19:24:02.917" CommentCount="1" />
  <row Id="923" PostTypeId="2" ParentId="873" CreationDate="2015-07-07T19:28:45.067" Score="-1" Body="&lt;p&gt;Mainly any time you copy copyrighted assets. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The reason why Popcorn Time did not get shut down is because they are very popular, and have a TON of money. This allows them to hire lawyers that the average person (such as you or I) could not afford.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So takeaway...&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Unless you have lots of money, your most likely to get shutdown.&lt;/p&gt;&#xA;" OwnerUserId="271" LastActivityDate="2015-07-07T19:28:45.067" CommentCount="0" />
  <row Id="925" PostTypeId="2" ParentId="873" CreationDate="2015-07-07T19:50:54.410" Score="2" Body="&lt;p&gt;To prevent yourself from getting a DMCA takedown notice, you don't need to know more than any other software developer. Don't use sourcecode or assets which are not licensed to you. Also, don't piss off people who are so rich and powerful that they can hire far better lawyers than you, because in the US justice system, better lawyers can win cases even when the law is not on their side. The rules which apply to open source are no different than those which apply to proprietary software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, as an open source developer you can use the DMCA takedown notices yourself as a weapon to take down people who violate your license terms.&lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-07-07T20:56:54.447" LastActivityDate="2015-07-07T20:56:54.447" CommentCount="0" />
  <row Id="926" PostTypeId="1" CreationDate="2015-07-07T20:06:34.727" Score="4" ViewCount="91" Body="&lt;p&gt;I know that you can make parts of a project open source and keep other parts colosed source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Suppose I have a peice of software and I only make 1 line of the code in the software open source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Can I classify this as open source?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If yes, are there any limits to this?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If no, why not? How do you know if it is? It it percentage based?&lt;/p&gt;&#xA;" OwnerUserId="271" LastActivityDate="2015-07-08T08:42:15.213" Title="How much of the project needs to be open source for it be be considered open source?" Tags="&lt;licensing&gt;" AnswerCount="3" CommentCount="0" FavoriteCount="1" />
  <row Id="927" PostTypeId="1" AcceptedAnswerId="929" CreationDate="2015-07-07T20:11:00.073" Score="4" ViewCount="206" Body="&lt;p&gt;Suppose I am working on a piece of software. I want to release it under an open source license. But after thought I decide that line 36 I would like to keep closed source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;After doing research, I am still confused.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Am I able to do this? &lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;If yes, are there any restrictions to this?&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;If no, why not? are there any other ways of doing this.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="271" LastActivityDate="2015-07-22T17:20:19.467" Title="Can I make a specific line of code not open source?" Tags="&lt;licensing&gt;" AnswerCount="4" CommentCount="5" />
  <row Id="928" PostTypeId="1" AcceptedAnswerId="937" CreationDate="2015-07-07T20:17:38.823" Score="20" ViewCount="4649" Body="&lt;p&gt;Suppose your client asks you to build open source software for them. You begin doing the work and publishing updates on GitHub, but when you finish they tell you they don't like it and won't pay for your service. Due to your contract this is allowed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Meanwhile the customer just took the code off of GitHub and started using it for free.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Are open source developers prone to this kind of scam?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Are there any laws in place to protect them?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Despite the contract is there anything that the developer could do? Could they change the license?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-08-10T22:39:03.980" LastActivityDate="2015-08-10T22:39:03.980" Title="Are open source developers at risk of being scammed?" Tags="&lt;development&gt;&lt;law&gt;&lt;contracts&gt;" AnswerCount="10" CommentCount="5" FavoriteCount="2" />
  <row Id="929" PostTypeId="2" ParentId="927" CreationDate="2015-07-07T20:29:37.530" Score="6" Body="&lt;p&gt;At the basic, you can license different parts of your work differently. This happens often, if you include libraries with different compatible open source licenses in your project. The library is licensed differently to your project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But doing as you describe has a lot of downsides.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;1. It's complicated&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You somehow have to indicate, which part is licensed how. This can be complicated enough if you license some files differently, if you do it for lines it will look horrible.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;2. It might be incompatible to some open source licenses&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Such a behaviour might be incompatible with certain open source licenses. Especially copyleft-licenses would be problematic. As long as the whole work is completely copyrighted by you it might work, but if you include for instance GPL-code, then you violate the license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;3. It might confuse potential users&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Open Source is generally good for users. Such complicated license mess could confuse potential users, so they are unsure if these lines with other licenses somehow affect them. You may loose users.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;4. It might discourage potential contributors&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The inconclusive license situation might be a no-go for many programmers and so they decide not to contribute to your project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;5. It misuses the trust of others&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Open Source is usually met with a lot of trust that is hard earned. Creating such difficult license situation as you describe violates this trust. This might have negative long term effects on your reputation and the reputation of your project ... and it is basically wrong. (Thanks to Andrew Russell for the suggestion, see comments.)&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: It is possible but unwise.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-08T08:39:16.040" LastActivityDate="2015-07-08T08:39:16.040" CommentCount="2" />
  <row Id="930" PostTypeId="2" ParentId="927" CreationDate="2015-07-07T20:29:51.123" Score="-3" Body="&lt;p&gt;I'm not a lawyer and so my answer will be from tech point of view. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;I don't think that it is possible to make particular line of source code closed source when other part of file is open source, cause that line and corresponding file won't have sense without each other.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You may make some part of your code closed source, but only in programming languages which allow binary distribution. I mean languages which can be compiled in some binary format.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;EDIT:&lt;/strong&gt;&#xA;Closed source (In my opinion) means that source code of your product aren't shared with end user.&lt;/p&gt;&#xA;" OwnerUserId="472" LastEditorUserId="472" LastEditDate="2015-07-07T20:38:33.550" LastActivityDate="2015-07-07T20:38:33.550" CommentCount="1" />
  <row Id="931" PostTypeId="2" ParentId="928" CreationDate="2015-07-07T20:33:55.163" Score="3" Body="&lt;p&gt;Many software developers create software for customers, and if the customer wishes as open source. That is no problem, because the customer and the software developer making a contract about it. If anyone is violating the contract (for instance the customer is not paying) it can be end up in court.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The situation you describe says between the lines that there was no written contract. That is always unwise, if you want to get money for work. but even in this case a verbal contract exists. Harder to proof, but still protected by law.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-07-07T20:33:55.163" CommentCount="0" />
  <row Id="932" PostTypeId="1" AcceptedAnswerId="943" CreationDate="2015-07-07T20:36:52.497" Score="8" ViewCount="103" Body="&lt;p&gt;Suppose I am a developer. I am developing a piece of software. I decide I want to make this code open source. BUT... I only want developers (or people that will be using the code in other projects) to be able to use it under CC-BY. But people using the code for general use (not in other projects) I would like to apply a MIT license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Based on the CC requirements it says I cant restrict it from anyone. Here I am not restricting anyone from anything. I am just applying different rules. Am I allowed to do this?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="190" LastEditDate="2015-07-08T06:54:33.767" LastActivityDate="2015-07-18T02:26:33.953" Title="Can I apply one license to specific users and another to others?" Tags="&lt;licensing&gt;&lt;creative-commons&gt;&lt;multi-licensing&gt;&lt;mit&gt;" AnswerCount="3" CommentCount="3" />
  <row Id="933" PostTypeId="2" ParentId="932" CreationDate="2015-07-07T20:39:58.650" Score="9" Body="&lt;p&gt;You can license your intellectual property under different licenses to different people. But when your license follows the definitions of open source and/or free software, the licensees have the right to relicense it under the same terms to other people. So this would not be an effective way to control distribution.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When you want to control distribution, you shouldn't be using an open source license in the first place.&lt;/p&gt;&#xA;" OwnerUserId="14" LastActivityDate="2015-07-07T20:39:58.650" CommentCount="1" />
  <row Id="934" PostTypeId="2" ParentId="926" CreationDate="2015-07-07T20:42:38.033" Score="2" Body="&lt;p&gt;Strictly speaking, already the smallest part being not open source makes the whole not open source, as the whole package now fails to follow the &lt;a href=&quot;http://opensource.org/osd&quot; rel=&quot;nofollow&quot;&gt;10 rules in the Open Source Definition&lt;/a&gt;. In practice though, if only small parts are not open source it will still be called open source by most, and if only small parts are open source it will be called not open source by most.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, &lt;a href=&quot;http://opensource.stackexchange.com/q/840/55&quot;&gt;Firefox&lt;/a&gt; is called mostly an open source project, as the parts that aren't are miniscule in comparison to the whole project.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-07-07T20:42:38.033" CommentCount="0" />
  <row Id="935" PostTypeId="2" ParentId="926" CreationDate="2015-07-07T20:48:24.270" Score="4" Body="&lt;p&gt;&lt;strong&gt;All of it.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&quot;Open source&quot; reasonably refers to strictly to that set of instructions (here, source code) that is made available under the applicable (open source) license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you have a project with two components A and B, and only component B is open source while component A is proprietary, then the project is not open source. How could it be, when a third party does not have rights to use, alter, redistribute, etc. the project &lt;em&gt;in its entirety?&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you're interested in advertising that a project is open source but unable to actually release all of its components under an open source license, I see a few options.&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Simply state the truth—that the project includes or incorporates &lt;em&gt;some&lt;/em&gt; open source components.&lt;/li&gt;&#xA;&lt;li&gt;Organize the open source components of the project into a coherent set and give it a name that is very similar to the name of the entire project (but distinguishable); refer to this set of components as open source, and hope people associate your &quot;Open Source Project X Core&quot; with your entire &quot;Project X.&quot; This has the potential to mislead, depending on how you do it and whether the open source components of the project are reasonably separable from the rest.&lt;/li&gt;&#xA;&lt;li&gt;Call it open source anyway. You'll fool some people and anger others. Not recommended.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="20" LastActivityDate="2015-07-07T20:48:24.270" CommentCount="0" />
  <row Id="937" PostTypeId="2" ParentId="928" CreationDate="2015-07-07T20:54:54.913" Score="26" Body="&lt;p&gt;I am not aware of this &quot;scam&quot; and am not aware of the issue being raised with the Open Source Initiative or other organizations promoting Free and Open Source Software (Free Software Foundation, Software Conservancy, EFF, etc.), nor other related areas such as the open content movement, and the Creative Commons. Of course this does not mean that dubious practices have not been attempted. I would also think, that any company/organization that operated like this would quickly gain a bad reputation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Specific to laws:&#xA;You are protected as the author of any work, including software, by copyright laws. In the U.S. you, as the author of original work, have the right to license your work in any way you like. While I would first recommend creating a contract that protects you regarding getting paid (regular pay based on hours worked, sign offs--and payment based on gateways/accomplishments, etc.) You could initially hold your code for review/approval (including the code hosted in a public repository like that of GitHub) as &quot;All Rights Reserved&quot; until you are paid, and then upon payment, assign an OSI Approved License. You could also write this into your contract if you really felt it was an issue.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So you do not need to change the license, simply assign &quot;MySoftware, copyright Patrick Masson 2015, ALL RIGHTS RESERVED.&quot; The company is thus not able to use it until you change the licence to an OSI Approved option--which you will do once they pay you (and of course you too have provided for all of your responsibilities under the contract).&lt;/p&gt;&#xA;" OwnerUserId="126" LastActivityDate="2015-07-07T20:54:54.913" CommentCount="9" />
  <row Id="938" PostTypeId="1" AcceptedAnswerId="939" CreationDate="2015-07-07T20:56:24.287" Score="9" ViewCount="178" Body="&lt;p&gt;Suppose you have an open source piece of software. You decide you want to publish the software under an open source license. You spend time researching licenses online and finally you find the perfect one. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Are there any (better) alternatives to simply adding a link to the chosen license?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If yes, what are some examples?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If no, why not? How could I prevent a broken link?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="98" LastEditDate="2015-07-07T21:02:57.787" LastActivityDate="2015-07-11T16:02:54.107" Title="What methods could you use to prevent broken licensing links?" Tags="&lt;licensing&gt;" AnswerCount="3" CommentCount="2" FavoriteCount="1" />
  <row Id="939" PostTypeId="2" ParentId="938" CreationDate="2015-07-07T21:03:37.243" Score="10" Body="&lt;p&gt;I'll convert &lt;a href=&quot;http://opensource.stackexchange.com/questions/938/what-methods-could-you-use-to-prevent-broken-licensing-links#comment1434_938&quot;&gt;my comment&lt;/a&gt; to an answer and suggest this:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Add the entire text of the license to your software, formatted like a comment (or as a separate file). This is essentially foolproof. Longer licenses would take up more space, but this should not be a problem. Licenses such as the &lt;a href=&quot;http://opensource.org/licenses/MIT&quot; rel=&quot;nofollow&quot;&gt;MIT license&lt;/a&gt;, which are quite short, should be easy to fit in. As &lt;a href=&quot;http://opensource.stackexchange.com/questions/938/what-methods-could-you-use-to-prevent-broken-licensing-links/939#comment1711_939&quot;&gt;Zizouz212 mentioned&lt;/a&gt;, though, be sure to indicate that this is the text of the last updated version, in order to account for changes.&lt;/p&gt;&#xA;" OwnerUserId="145" LastEditorUserId="145" LastEditDate="2015-07-11T16:02:54.107" LastActivityDate="2015-07-11T16:02:54.107" CommentCount="5" />
  <row Id="940" PostTypeId="2" ParentId="928" CreationDate="2015-07-07T21:14:41.477" Score="1" Body="&lt;p&gt;An important clause which should appear in any work-for-hire contract is that transfer of copyright (in this case &quot;release under an open source license&quot;) doesn't happen before the transfer of money. Effectively, your work stays proprietary and doesn't become open source until you are paid.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When you publish your work on GitHub under an open source license, it is out there and free to everyone, paying client or not. When the client requests you to do this, you should insist on getting paid by the hour without giving a guarantee of satisfaction.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For more information about how you should design contracts when doing work for hire (open source or not) I recommend the aptly named talk &quot;&lt;a href=&quot;https://vimeo.com/22053820&quot; rel=&quot;nofollow&quot;&gt;F**k you. Pay me.&lt;/a&gt;&quot; by Mike Monteiro.&lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="271" LastEditDate="2015-07-07T21:25:53.757" LastActivityDate="2015-07-07T21:25:53.757" CommentCount="0" />
  <row Id="941" PostTypeId="2" ParentId="926" CreationDate="2015-07-07T21:21:02.147" Score="6" Body="&lt;p&gt;Yes you can distribute one line of code as &quot;open source software&quot; by assigning that one line of code an &lt;a href=&quot;http://opensource.org/licenses&quot; rel=&quot;nofollow&quot;&gt;OSI Approved Open Source License&lt;/a&gt;. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;You should only label your software as &quot;open source software&quot; (i.e. tell everyone it is open source) if you distribute it with an OSI Approved License. Calling it open source is meaningless--the license determines if it is open source software, not a marketing campaign. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The license you assign to your work not only determines if it is open source software, but--per your second question--how others may distribute derivatives of your work: either only as open source software (for example through the GPL family of licenses) or with proprietary software (for example through the Apache, BSD, or MIT licenses).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So if you distribute your one line of code with a GPL-like &quot;copyleft&quot; license, anyone who modifies your one line will also need to distribute their edits under the same, open source (GPL) license. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;If, for example, you were to assign the BSD License to your one line of code, anyone can take that line of code and include it with their proprietary software and even sub-license it (as long as they include the copyright information in their distribution). &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Any software distributed with an &lt;a href=&quot;http://opensource.org/licenses&quot; rel=&quot;nofollow&quot;&gt;OSI Approved Open Source License&lt;/a&gt; is &quot;open source software.&quot;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Software NOT distributed with an OSI Approved License, but labelled as &quot;open source software&quot; should be considered suspect. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;A great resource for learning about various open source licenses and their permissions/restrictions is, &lt;a href=&quot;https://tldrlegal.com/&quot; rel=&quot;nofollow&quot;&gt;TL;DR Legal&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="126" LastEditorUserId="168" LastEditDate="2015-07-08T08:42:15.213" LastActivityDate="2015-07-08T08:42:15.213" CommentCount="2" />
  <row Id="942" PostTypeId="2" ParentId="927" CreationDate="2015-07-07T21:29:54.473" Score="3" Body="&lt;p&gt;If &quot;line 36&quot; is not critical to the functionality of the software then separate it out as an optional closed source extension/plugin. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;If it is critical then whilst it may be possible I don't see it being a practical open source product.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I would question your motivation for wanting to release the code under an Open Source license, what are you hoping to gain from it?  If it is contributors then I think you may struggle to find willing developers to contribute to a project that seemingly revolves around you keeping part of the code to yourself.  This is very different from taking an established Open Source product and allowing Closed Source extensions (Linux, Firefox etc).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;On the flip side you could also question your motivation for keeping part of the code Closed Source.  Do you hope to make some financial gain from it?  Is it already Closed Source and you have stolen it from someone else so can't release it!?&lt;/p&gt;&#xA;" OwnerUserId="477" LastEditorUserId="477" LastEditDate="2015-07-17T10:56:26.017" LastActivityDate="2015-07-17T10:56:26.017" CommentCount="1" />
  <row Id="943" PostTypeId="2" ParentId="932" CreationDate="2015-07-07T21:35:24.287" Score="5" Body="&lt;p&gt;The Creative Commons family of licenses are not &quot;Open Source Licenses&quot; and Creative Commons &quot;recommends free and open source software licenses for software&quot; like those listed by the Free Software Foundation and the Open Source Initiative (&lt;a href=&quot;http://creativecommons.org/software&quot; rel=&quot;nofollow&quot;&gt;http://creativecommons.org/software&lt;/a&gt;).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Therefore, if you assigned your work a CC-BY license it would not be considered &quot;open source software&quot; and you should not label it as such.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Further the Open Source Definition, and thus OSI Approved Licenses, does not allow discrimination against persons or groups (Criteria No. 5) or  discrimination against fields of endeavours (Criteria No. 6). &lt;/p&gt;&#xA;&#xA;&lt;p&gt;I think you are looking to Dual-License your software. You can find out more about dual-licensing open source software &lt;a href=&quot;http://oss-watch.ac.uk/resources/duallicence2&quot; rel=&quot;nofollow&quot;&gt;at oss.watch&lt;/a&gt;. You can find out more about open source licenses' restrictions and permissions at &lt;a href=&quot;https://tldrlegal.com/&quot; rel=&quot;nofollow&quot;&gt;TL;DR Legal&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="126" LastEditorUserId="168" LastEditDate="2015-07-08T08:40:55.163" LastActivityDate="2015-07-08T08:40:55.163" CommentCount="3" />
  <row Id="944" PostTypeId="2" ParentId="928" CreationDate="2015-07-07T22:46:26.140" Score="15" Body="&lt;p&gt;The fact that the software is open source doesn't change anything about the contract that the developer has with their client. If the developer has done the work, the client owes the money.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Contracts to deliver custom software (or many other services) often specify several stages of payments and delivery, and allow one party to suspend the contract if the other party has not fulfilled their obligations. For example, if the client misses a downpayment, the contract typically allows the programmer to suspend deliveries of the software. This works regardless of the license of the software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Where having open source code may make a difference is that if the client doesn't pay, the developer loses the possibility of suing them for copyright violation in addition to breach of contract. If the client is using open source code, that's legal, regardless of any other contract they might be in breach of. On the other hand, if the contract is the only reason why the client has the right to use the code, then a broken contract may allow the developer to claim damages for copyright violation. (Consult your lawyer if it gets that far.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note that a contract to write code that will be open source does not imply that the code will be on Github. Most free/open-source licenses do not carry the &lt;em&gt;obligation&lt;/em&gt; to distribute modified version; they only require, if they're copyleft, that any distribution includes source and that further distribution remains allowed. There are works with a license that require contributing modified versions back upstream if they're distributed at all, but they're rare. Unless the contract specifies that delivery is via Github (probably a bad idea as it puts a third party into the loop), the developer has the same means of blocking delivery as with closed-source code. Of course, the developer may want to distribute the code publicly for other reasons.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Inasmuch as the license permits, it would be a good idea to treat the code written as part of the project as proprietary until payment in full, at which point the code becomes open source. However a copyleft license may make it impossible, depending on the structure of the project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A final note:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;When you are finished you go to the customer and tell them you are finished. They tell you that they don't like your work and they won't pay you for your service. Due to your contract this is allowed.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;If the contract allows the customer to decline to pay because they “don't like” the work, there's something seriously wrong with the contract, regardless of the license of the code. A party shouldn't be allowed to cancel the contract at will. There should be objective acceptance criteria that make it mandatory for the client to pay, even if they've stopped caring about the work. The most common type of acceptance criteria for software are functional: the software shall have this and that feature.&lt;/p&gt;&#xA;" OwnerUserId="60" LastActivityDate="2015-07-07T22:46:26.140" CommentCount="0" />
  <row Id="945" PostTypeId="2" ParentId="938" CreationDate="2015-07-07T23:19:48.177" Score="1" Body="&lt;p&gt;&lt;strong&gt;Choose a well understood, common, supported and maintained Licence!&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;(just like you choose your software)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I would choose one of the following:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;GPL, LGPL, AGPL licences&lt;/li&gt;&#xA;&lt;li&gt;Creative Commons Licences&lt;/li&gt;&#xA;&lt;li&gt;Apache Licence&lt;/li&gt;&#xA;&lt;li&gt;Eclipse Public Licence&lt;/li&gt;&#xA;&lt;li&gt;BSD licence&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Or other &lt;a href=&quot;https://www.blackducksoftware.com/resources/data/top-20-open-source-licenses&quot; rel=&quot;nofollow&quot;&gt;Common Licences&lt;/a&gt; applicable to the language / platforms you inhabit.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The organisations that support and promote these licences are especially careful to keep the links valid. Usually it is a key facet of the organisations reason for existing.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Compare this to company related links:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;i.e. Oracle bought Sun and refocussed around open source, I am not sure if links changed much but some licences were almost deprecated and the licences wont be maintained.&lt;/p&gt;&#xA;" OwnerUserId="185" LastEditorUserId="185" LastEditDate="2015-07-08T05:46:33.380" LastActivityDate="2015-07-08T05:46:33.380" CommentCount="1" />
  <row Id="946" PostTypeId="2" ParentId="938" CreationDate="2015-07-08T03:22:28.580" Score="0" Body="&lt;p&gt;If you are referring to link rot, the best solution is to archive it in the &lt;a href=&quot;http://archive.org/web/&quot; rel=&quot;nofollow&quot;&gt;wayback machine&lt;/a&gt;. That way, should the link ever break, you can point it to the wayback machine's archive. A good way to ensure this would be to index the page in the wayback machine whenever you publish your document with the link.  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;I do like @HDE 226868's suggestion of adding the license content too. I think you should combine them.  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Of course this is susceptible to going down, as is any reliance on a third party solution, however I do not think the internet archive is in any danger of going away anytime soon.  &lt;/p&gt;&#xA;" OwnerUserId="30" LastEditorUserId="168" LastEditDate="2015-07-08T08:40:26.020" LastActivityDate="2015-07-08T08:40:26.020" CommentCount="0" />
  <row Id="947" PostTypeId="2" ParentId="928" CreationDate="2015-07-08T07:40:48.837" Score="2" Body="&lt;p&gt;Many great answers, but I just want to add that this &quot;problem&quot; also exists in the proprietary world:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Imagine you are requested to develop a Python enterprise application. The customer will probably want to test it in their staging environment, which is very common for enterprise software. Open source or not, the customer has access to your application's source code at this stage.&lt;/p&gt;&#xA;" OwnerUserId="199" LastActivityDate="2015-07-08T07:40:48.837" CommentCount="2" />
  <row Id="948" PostTypeId="2" ParentId="928" CreationDate="2015-07-08T07:52:29.120" Score="4" Body="&lt;p&gt;You run this &quot;risk&quot; whenever you put code on Github in a public repository with an open source license -- others can use it. Usually that is what is intended.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you are developing this for a customer, then &lt;em&gt;why&lt;/em&gt; would you give them the option to cancel the entire thing when the work is already done? That's a very unusual clause in a contract that's not at all in the developer's favor.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are strong laws to protect developers -- contract law, copyright law, trade secret law, et cetera.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, if you willingly got into a contract that allows the customer to cancel it at will, &lt;em&gt;and&lt;/em&gt; you voluntarily made your code public to the world on Github, &lt;em&gt;and&lt;/em&gt; you voluntarily put an open source license on it to boot... you have made clear formal voluntary choices not to want any of all that protection.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I can't call it a scam at that point.&lt;/p&gt;&#xA;" OwnerUserId="487" LastActivityDate="2015-07-08T07:52:29.120" CommentCount="0" />
  <row Id="949" PostTypeId="1" CreationDate="2015-07-08T08:19:08.937" Score="5" ViewCount="561" Body="&lt;p&gt;Let's assume I write a program and release it under the GNU GPL. Can I call this software &quot;GNU software&quot;? If not, what is necessary to make it a part of GNU?&lt;/p&gt;&#xA;" OwnerDisplayName="user490" LastActivityDate="2015-07-10T13:19:26.097" Title="Does using the GPL for a program make it GNU software?" Tags="&lt;gpl&gt;&lt;gnu&gt;" AnswerCount="3" CommentCount="0" />
  <row Id="950" PostTypeId="1" AcceptedAnswerId="957" CreationDate="2015-07-08T08:26:31.803" Score="7" ViewCount="765" Body="&lt;p&gt;The &lt;a href=&quot;https://www.gnu.org/licenses/gpl.html&quot;&gt;GNU GPL&lt;/a&gt; is very long. If I have to include a copy of it with my program, can I drop the preamble to save space?&lt;/p&gt;&#xA;" OwnerDisplayName="user490" LastEditorUserId="69" LastEditDate="2015-07-08T11:07:15.023" LastActivityDate="2015-07-08T11:07:15.023" Title="Can I omit the preamble of the GPL?" Tags="&lt;gpl&gt;&lt;license-file&gt;" AnswerCount="2" CommentCount="1" />
  <row Id="951" PostTypeId="2" ParentId="949" CreationDate="2015-07-08T08:34:54.327" Score="0" Body="&lt;p&gt;No. GNU is an organisation, who publish their license the GPL. Just like you wouldn't call your software &quot;Google software&quot;, you can't call your software GNU software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You &lt;em&gt;could&lt;/em&gt; call it GNU software if you developed it as part of a project for GNU, for example if GNU employed you to develop a new distribution platform for their licenses.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-07-08T08:34:54.327" CommentCount="0" />
  <row Id="952" PostTypeId="2" ParentId="928" CreationDate="2015-07-08T08:35:09.550" Score="0" Body="&lt;p&gt;The subject matter is not what should be free in GitHub. It is about terms and consideration in contract law. The company should pay for your effort as defined in contract. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example : If the content of contract is that I will pay you 5P in return for your service to fetch me a cup of water. It does not matter whether the water is free or belonging to you. I have to pay in consideration of your action of fetching. &lt;/p&gt;&#xA;" OwnerUserId="491" LastActivityDate="2015-07-08T08:35:09.550" CommentCount="0" />
  <row Id="953" PostTypeId="2" ParentId="949" CreationDate="2015-07-08T08:38:06.580" Score="11" Body="&lt;p&gt;No, it does not; releasing it under the GNU GPL makes your program &lt;em&gt;free software&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The GNU project &lt;a href=&quot;http://www.gnu.org/help/evaluation.html&quot;&gt;has a web page&lt;/a&gt; outlining what you need to do to offer your software to be part of the GNU project, which might be summarised as follows:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Making a program GNU software means that its developers and the GNU&#xA;  project agree that “This program is part of the GNU project, released&#xA;  under the aegis of GNU”—and say so in the program.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;This means that you normally put the program releases on ftp.gnu.org.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;It means that the developers agree to pay attention to making the&#xA;  program work well with the rest of the GNU system—and conversely that&#xA;  the GNU project will encourage other GNU maintainers to pay attention&#xA;  to making their programs fit in well with it.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Another important GNU standard is that GNU programs should come with&#xA;  documentation in Texinfo format. That is the GNU standard&#xA;  documentation format, and it can be converted automatically into&#xA;  various other formats. You can use DocBook or any other suitable&#xA;  format for the documentation sources, as long as converting it&#xA;  automatically into Texinfo gives good results.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;If a GNU program wants to be extensible, it should use GUILE as the&#xA;  programming language for extensibility—that is the GNU standard&#xA;  extensibility package. For some programs there's a reason to do things&#xA;  differently, but please use GUILE if that is feasible.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;A GNU program should use the latest version of the license that the&#xA;  GNU Project recommends—not just any free software license. For most&#xA;  packages, this means using the GNU GPL.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Note that a copyright assignment is &lt;strong&gt;not&lt;/strong&gt; a requirement:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;For a program to be GNU software does not require transferring&#xA;  copyright to the FSF; that is a separate question. If you transfer the&#xA;  copyright to the FSF, the FSF will enforce the GPL for the program if&#xA;  someone violates it; if you keep the copyright, enforcement will be up&#xA;  to you.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="458" LastEditorUserId="458" LastEditDate="2015-07-08T08:43:16.550" LastActivityDate="2015-07-08T08:43:16.550" CommentCount="2" />
  <row Id="955" PostTypeId="2" ParentId="949" CreationDate="2015-07-08T08:55:35.783" Score="0" Body="&lt;p&gt;The &lt;a href=&quot;https://www.gnu.org/&quot; rel=&quot;nofollow&quot;&gt;GNU-project&lt;/a&gt; is a project to develop a &lt;a href=&quot;https://www.gnu.org/#More-GNU&quot; rel=&quot;nofollow&quot;&gt;free UNIX-like operating system&lt;/a&gt; (&lt;a href=&quot;https://www.gnu.org/gnu/&quot; rel=&quot;nofollow&quot;&gt;read also&lt;/a&gt;). They developed the GPL to license the software their operating system consists of. But that doesn't mean every GPL-licensed software is part of the GNU-project (and hence GNU software).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you want to make your software part of the GNU-project, you should read what they have &lt;a href=&quot;https://www.gnu.org/help/evaluation.en.html&quot; rel=&quot;nofollow&quot;&gt;written about how you can do that&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-07-08T08:55:35.783" CommentCount="0" />
  <row Id="956" PostTypeId="2" ParentId="950" CreationDate="2015-07-08T08:58:43.940" Score="4" Body="&lt;p&gt;No.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;From the &lt;a href=&quot;https://www.gnu.org/licenses/gpl.html&quot; rel=&quot;nofollow&quot;&gt;GPL&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The preamble is just a few percent of the text, I would think it could not make any significant difference, could it?&lt;/p&gt;&#xA;" OwnerUserId="494" LastActivityDate="2015-07-08T08:58:43.940" CommentCount="0" />
  <row Id="957" PostTypeId="2" ParentId="950" CreationDate="2015-07-08T09:00:24.053" Score="11" Body="&lt;p&gt;I've just discovered (again), that my question is in fact a &lt;a href=&quot;https://www.gnu.org/licenses/gpl-faq.html#GPLOmitPreamble&quot;&gt;Frequently Asked Questions about the GNU Licenses&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The preamble and instructions are integral parts of the GNU GPL and may not be omitted. In fact, the GPL is copyrighted, and its license permits only verbatim copying of the entire GPL. (You can use the legal terms to make another license but it won't be the GNU GPL.)&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The preamble and instructions add up to some 1000 words, less than 1/5 of the GPL's total size. They will not make a substantial fractional change in the size of a software package unless the package itself is quite small. In that case, you may as well use a simple all-permissive license rather than the GNU GPL.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerDisplayName="user490" LastActivityDate="2015-07-08T09:00:24.053" CommentCount="0" />
  <row Id="958" PostTypeId="1" AcceptedAnswerId="959" CreationDate="2015-07-08T09:29:03.630" Score="15" ViewCount="408" Body="&lt;p&gt;I've noticed that the &lt;a href=&quot;https://www.gnu.org/licenses/gpl.html&quot;&gt;GNU GPL version 3&lt;/a&gt; uses the word &quot;convey&quot; where &lt;a href=&quot;https://www.gnu.org/licenses/old-licenses/gpl-2.0.html&quot;&gt;version 2&lt;/a&gt; used &quot;distriubte&quot;:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;GNU GPLv3:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;To “convey” a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;GNU GPLv2:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Is “convey” in GPLv3 the same thing as what GPLv2 means by “distribute”?&lt;/p&gt;&#xA;" OwnerDisplayName="user490" LastEditorUserId="69" LastEditDate="2015-07-08T11:09:00.780" LastActivityDate="2015-07-09T06:16:59.730" Title="GPL v3 &quot;convey&quot; vs. GPL v2 &quot;distribute&quot;" Tags="&lt;licensing&gt;&lt;gpl&gt;&lt;terminology&gt;" AnswerCount="1" CommentCount="4" FavoriteCount="2" />
  <row Id="959" PostTypeId="2" ParentId="958" CreationDate="2015-07-08T09:47:40.233" Score="15" Body="&lt;p&gt;The &lt;a href=&quot;https://www.gnu.org/licenses/gpl-faq.en.html#ConveyVsDistribute&quot; rel=&quot;nofollow&quot;&gt;GPL FAQ&lt;/a&gt; states:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Is “convey” in GPLv3 the same thing as what GPLv2 means by&#xA;  “distribute”?&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Yes, more or less. During the course of enforcing GPLv2, we learned&#xA;  that some jurisdictions used the word “distribute” in their own&#xA;  copyright laws, but gave it different meanings. We invented a new term&#xA;  to make our intent clear and avoid any problems that could be caused&#xA;  by these differences.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So yes, they mean basically the same.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-09T06:16:59.730" LastActivityDate="2015-07-09T06:16:59.730" CommentCount="5" />
  <row Id="960" PostTypeId="1" AcceptedAnswerId="963" CreationDate="2015-07-08T11:30:19.247" Score="6" ViewCount="163" Body="&lt;p&gt;I'm the author of &lt;a href=&quot;https://github.com/Captain-Chaos/WorldPainter&quot; rel=&quot;nofollow&quot;&gt;WorldPainter&lt;/a&gt;. It's licensed according to the GPL v3, but I am about to include some code (&lt;a href=&quot;https://github.com/webbukkit/DynmapCore&quot; rel=&quot;nofollow&quot;&gt;dynmap&lt;/a&gt;) that is licensed according to the Apache License version 2.0.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;According to both &lt;a href=&quot;http://www.apache.org/licenses/GPL-compatibility.html&quot; rel=&quot;nofollow&quot;&gt;Apache&lt;/a&gt; and the &lt;a href=&quot;http://www.gnu.org/licenses/license-list.html#GPLCompatibleLicenses&quot; rel=&quot;nofollow&quot;&gt;FSF&lt;/a&gt;, the APLv2 is compatible with the GPLv3 so I can include it. My question it, how does that work in practice? Specifically:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;I include dynmap binaries which I build myself. The code is not modified, but the binaries do omit a lot of code which I don't need, to make them smaller. Does this mean I need to provide access to the dynmap source code, or is it sufficient to refer to dynmap on GitHub?&lt;/li&gt;&#xA;&lt;li&gt;My code does include a handful of files copied from dynmap but heavily modified by me, mostly as glue to be able to invoke the dynmap code in ways it was never intended to. Are those files now GPLv3?&lt;/li&gt;&#xA;&lt;li&gt;Does the author of dynmap (Mike Primm) also retain copyright in the modified files? Should I list us both as copyright holders in those files? Should I list Mike as a copyright holder for the whole of WorldPainter? The files comprise a very small part of the code.&lt;/li&gt;&#xA;&lt;li&gt;Does any of the above imply that I should include a copy of the APLv2? Should I include a file explaining the situation with an overview of which license applies to which files? My estimation is that all the source code of WorldPainter proper, including the files copied from dynmap (since they are modified), is still GPLv3 and that it is therefore not necessary to include the APLv2. Is that correct?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;I will of course give full credit, in the credits of the program and in the copied files. This is just about the technical situation regarding the licensing of the files and the resulting program as a whole.&lt;/p&gt;&#xA;" OwnerUserId="494" LastEditorUserId="98" LastEditDate="2015-07-08T12:00:33.913" LastActivityDate="2015-07-08T12:09:36.620" Title="How does one combine differently licensed code in one open source program?" Tags="&lt;licensing&gt;&lt;license-compatibility&gt;&lt;relicensing&gt;&lt;gpl-3&gt;&lt;apache-2.0&gt;" AnswerCount="3" CommentCount="2" />
  <row Id="961" PostTypeId="2" ParentId="883" CreationDate="2015-07-08T11:39:20.730" Score="1" Body="&lt;p&gt;A large distribution like Debian has tens of thousands of packages, from thousands of original development teams. Distributions take care of most of the hassle involved in downloading the source files and compiling them for you - rather than everyone figuring it out themselves you can rely on the cooperative work of the community.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some things that distributions handle for you:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ensuring all the different types of files (binaries, libraries, shared header files, documentation, icons) end up in conventionalised locations, which differ depending on the distribution&lt;/li&gt;&#xA;&lt;li&gt;Handle locating the correct version of a compiler or interpreter. You could have Python programs which need to run in versions 2.5, 2.6, 2.7, 3.0 and 3.1, each of which expect to run with a simple &quot;python&quot; command. The distribution handles whatever changes are needed so that each package runs the version it needs.&lt;/li&gt;&#xA;&lt;li&gt;Handles dependencies for you. Want to install some scientific Python program? The distribution will automatically install both Python, NumPy and SciPy for you, and it will set them up to know where each other is.&lt;/li&gt;&#xA;&lt;li&gt;Speed! You can get distributions that don't use binaries by default (Gentoo) but most will install binaries if they can, saving you a lot of compile time.&lt;/li&gt;&#xA;&lt;li&gt;Distributions will promptly give you important security updates. Before you read about the next SSL vulnerability you will probably already have installed a patch to fix it. If you had to manually patch it then it would take you longer, leaving you vulnerable for longer, and there's the risk you wouldn't patch it correctly.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Windows and OS X do have distributions, in their app stores, and in Windows Update (and the Apple equivalent.) It's just harder to get stuff into them. Actually it's hard to get stuff into Debian too, but if a project is open source/free software you should be able to eventually.&lt;/p&gt;&#xA;" OwnerUserId="190" LastActivityDate="2015-07-08T11:39:20.730" CommentCount="0" />
  <row Id="962" PostTypeId="2" ParentId="960" CreationDate="2015-07-08T11:54:18.307" Score="2" Body="&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;If the code of the dynmap binaries only includes Apache licensed code you are not forced to make the source code available.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;If these files are included in your GPLv3 licensed project, they are GPLv3 licensed, too.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;The author of the original file is also (one) author of the modifed files. If the APL requires to name all authors, you will have to name him.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Yes, you should. Yes, you should. Yes, but it is no problem to include a copy.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;If in doubt, include all licenses and name all copyright holders. Easy.&lt;/p&gt;&#xA;" OwnerDisplayName="user490" LastActivityDate="2015-07-08T11:54:18.307" CommentCount="0" />
  <row Id="963" PostTypeId="2" ParentId="960" CreationDate="2015-07-08T11:57:10.683" Score="3" Body="&lt;p&gt;The &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; rel=&quot;nofollow&quot;&gt;Apache License 2.0&lt;/a&gt; states that:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, &lt;strong&gt;or for any such Derivative Works as a whole&lt;/strong&gt;, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;emphasis mine&lt;/sup&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This essentially means that the Apache license imposes no share-alike restrictions: you don't have to redistribute the work under Apache 2.0. In turn, this means that you could just license the entire project under the GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now, to answer the direct questions:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Does this mean I need to provide access to the dynmap source code, or is it sufficient to refer to dynmap on GitHub?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You don't have to do either, actually. According to the APL:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and &lt;strong&gt;in Source or Object form&lt;/strong&gt;, provided that You meet the following conditions: ...&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Object form includes binaries. If the binaries are included in your project, you're distributing in Object form, which is still OK by the license.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Are those files now GPLv3?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Up to you. Those files are derivative works of the original dynmap code: re-read the first quote from the APL and it shows you can redistribute under any license. Thus, those files are GPLv3 if you choose, or not if you don't.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Does the author of dynmap (Mike Primm) also retain copyright in the modified files?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Long quote from the APL now:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;d. If the Work includes a &quot;NOTICE&quot; text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;If the dynmap project contains copyright notices, you must include them in the relevant files. This would include, for example, the files in (2) - those are derivatives of his code, and if they have copyright notices on (or the project copyright notice covers them) then you must include the notice. Primm will retain any copyrights on any code he wrote, he's just allowing you to use it, so you need to demonstrate that. However, he does &lt;em&gt;not&lt;/em&gt; become a copyright holder for the whole of WorldPainter, because he didn't write it.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;... Is that correct?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Yes. Technically. You don't &lt;em&gt;have&lt;/em&gt; to include the APL anywhere in your project if you don't want to, but it could be taken as courtesy: you're using someone else's work, so you should reference how they've made it available to you. If WorldPainter is any sort of size, including the license won't make much difference to the final package file. If it was me, I'd just include it.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-07-08T11:57:10.683" CommentCount="5" />
  <row Id="964" PostTypeId="2" ParentId="960" CreationDate="2015-07-08T12:02:08.640" Score="2" Body="&lt;p&gt;The answers to the parts of the question.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; I'm a bit confused about the details here. I understand you change the binaries to get rid of stuff you don't need. How does that work?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you change the binaries directly, I would document how you do it and put a script into your sources that does that, so that others can from the sources of dynmap get to the binaries you use.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you changed the sources or the buildfiles of dynmap to achieve that, you should release the changed  sources. To be clear, Apache doesn't really demand that, the GPL does, as you combine it the GPL would work here. As long as you're the only author of all GPL-code used, you may be legally allowed to do that, but if you accept any contributions you have to release the changed sources even of the software you link. But all legal stuff aside, it is nice for everyone if you release the changed sources. Github isn't needed though, just an archive with the changed sources somewhere in your webspace should be enough.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Yes, they are GPL now. As you linked to your software that is GPL, you made an derivative work. That means the result is GPL-licensed. That Apache 2.0 is compatible with GPL 3.0 (no other combination of version by the way, be careful) just means that the Apache license allows the license change and the terms of both licenses don't conflict.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; All authors of the files share the copyright. That includes the original author(s) and you as author of the changes. I think both involved licenses ask for proper attribution of the authors, so you probably have to include Mike Primm in the copyright-notice in WorldPainter. But many project make categories: main developer, other contributors, ... I would list him as: &quot;author of dynmap used and modified in WorldPainter&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Through creating a derivate you made dynmap as used by you GPL licensed. I would still include a notice like that: includes and modifies dynmap from XY originally licensed under the terms of the APL.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="98" LastEditDate="2015-07-08T12:09:36.620" LastActivityDate="2015-07-08T12:09:36.620" CommentCount="1" />
  <row Id="965" PostTypeId="1" CreationDate="2015-07-08T12:04:03.603" Score="8" ViewCount="341" Body="&lt;p&gt;I want to redistribute a work licensed under &lt;a href=&quot;http://creativecommons.org/licenses/by-nd/3.0/&quot;&gt;CC BY-ND 3.0&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The license summary says about ND (NoDerivatives):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If you &lt;strong&gt;remix, transform, or build upon&lt;/strong&gt; the material, you may not distribute the modified material. &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;It says that &quot;Merely changing the format never creates a derivative.&quot;.&lt;br&gt;&#xA;But what about leaving parts (except for copyright notices) out? Does this count as &quot;remix, transform, or build upon&quot;?&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Example&lt;/h3&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;A book released under CC BY-ND 3.0 consists of an introduction (which contains the licensing information and a copyright notice) and three chapters.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;I want to distribute chapter 2 only, so I make a verbatim copy of it.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;I copy the licensing info and the copyright notice from the introduction.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;I create a PDF of it. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now this PDF only contains content exactly as written by the authors (so I didn’t change any words or added some myself), but it does not contain &lt;em&gt;everything&lt;/em&gt; the authors wrote in the original work.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;Is this allowed?&lt;/p&gt;&#xA;" OwnerUserId="138" LastActivityDate="2015-07-08T12:08:15.933" Title="Can I leave out parts of a CC BY-ND licensed work when distributing it?" Tags="&lt;creative-commons&gt;&lt;distribution&gt;&lt;cc-by-nd&gt;" AnswerCount="2" CommentCount="5" />
  <row Id="966" PostTypeId="2" ParentId="965" CreationDate="2015-07-08T12:08:03.237" Score="7" Body="&lt;p&gt;No. Any modifications you apply that aren't sanctioned by the owner are classed as derivative works. Your result still contains the author's material, true, but you've changed the way it's presented - it's like removing some code that's just a wrapper for a routine. You're changing the product, which creates a derivative work, which is disallowed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; No - you must distribute verbatim.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-07-08T12:08:03.237" CommentCount="0" />
  <row Id="967" PostTypeId="2" ParentId="965" CreationDate="2015-07-08T12:08:15.933" Score="8" Body="&lt;p&gt;No, that is not allowed. You have transformed the work by &lt;strong&gt;removing&lt;/strong&gt; parts. That is not different from transforming it by &lt;strong&gt;adding&lt;/strong&gt; or &lt;strong&gt;changing&lt;/strong&gt; parts.&lt;/p&gt;&#xA;" OwnerDisplayName="user490" LastActivityDate="2015-07-08T12:08:15.933" CommentCount="0" />
  <row Id="968" PostTypeId="5" CreationDate="2015-07-08T13:17:01.370" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-08T13:17:01.370" LastActivityDate="2015-07-08T13:17:01.370" CommentCount="0" />
  <row Id="969" PostTypeId="4" CreationDate="2015-07-08T13:17:01.370" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-08T13:17:01.370" LastActivityDate="2015-07-08T13:17:01.370" CommentCount="0" />
  <row Id="970" PostTypeId="5" CreationDate="2015-07-08T13:21:24.017" Score="0" Body="&lt;p&gt;The &lt;a href=&quot;http://www.fsf.org/&quot; rel=&quot;nofollow&quot;&gt;Free Software Foundation&lt;/a&gt; considers software Free Software when the license terms grant the user four essential freedoms:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The freedom to run the program as you wish, for any purpose (freedom 0).&lt;/li&gt;&#xA;&lt;li&gt;The freedom to study how the program works, and change it so it does your computing as you wish (freedom 1). Access to the source code is a precondition for this.&lt;/li&gt;&#xA;&lt;li&gt;The freedom to redistribute copies so you can help your neighbor (freedom 2).&lt;/li&gt;&#xA;&lt;li&gt;The freedom to distribute copies of your modified versions to others (freedom 3). By doing this you can give the whole community a chance to benefit from your changes. Access to the source code is a precondition for this.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Source: &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.en.html&quot; rel=&quot;nofollow&quot;&gt;http://www.gnu.org/philosophy/free-sw.en.html&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-07-08T13:39:54.747" LastActivityDate="2015-07-08T13:39:54.747" CommentCount="0" />
  <row Id="971" PostTypeId="4" CreationDate="2015-07-08T13:21:24.017" Score="0" Body="Questions about the definition of free software according to the Free Software Foundation" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-07-08T13:40:21.790" LastActivityDate="2015-07-08T13:40:21.790" CommentCount="0" />
  <row Id="972" PostTypeId="2" ParentId="883" CreationDate="2015-07-08T15:16:56.330" Score="2" Body="&lt;p&gt;There are two factors at play that make Linux teem with distributions, both loosely related to being open source: it's freely redistributable, and it has a bazaar development model.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Making a software distribution requires having the permission to distribute the software. When the software is freely redistributable, the distributor doesn't need to seek permission, so they can stick to technical issues and not worry about legal issues.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Being open source is not necessary, but it can help for some common objectives of distributions. For example, distributions bear the responsibility for sharing timely security fixes; having the source available allows the distributor to make a security fix if a flaw is discovered, even if the original author is unresponsive. Having the source available also broadens the offer by allowing, for example, binary distributions for platforms that the original author cannot or is unwilling to support directly.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note that there are distributions of non-redistributable software, even for-pay software. They tend to be called &lt;a href=&quot;https://en.wikipedia.org/wiki/App_store&quot; rel=&quot;nofollow&quot;&gt;app stores&lt;/a&gt;. App stores got started only when most people were downloading their software from the Internet; &lt;a href=&quot;https://en.wikipedia.org/wiki/App_Store_(iOS)&quot; rel=&quot;nofollow&quot;&gt;Apple's store for iPhone software&lt;/a&gt; made them mainstream. Windows got onto the act later because it started out when software was bought on floppies, but there is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Windows_Store&quot; rel=&quot;nofollow&quot;&gt;Windows store&lt;/a&gt; nowadays (since Windows 8).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now on to the second point: what makes the Linux ecosystem different from BSD, when they're all free software? It's &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Cathedral_and_the_Bazaar&quot; rel=&quot;nofollow&quot;&gt;the bazaar vs the cathedral&lt;/a&gt;. &lt;a href=&quot;https://en.wikipedia.org/wiki/Berkeley_Software_Distribution#Significant_BSD_descendants&quot; rel=&quot;nofollow&quot;&gt;BSD systems&lt;/a&gt; follow a cathedral-type model, where a team develops a core system. There are three main BSD systems (&lt;a href=&quot;https://en.wikipedia.org/wiki/FreeBSD&quot; rel=&quot;nofollow&quot;&gt;Free&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/OpenBSD&quot; rel=&quot;nofollow&quot;&gt;Open&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/NetBSD&quot; rel=&quot;nofollow&quot;&gt;Net&lt;/a&gt;) and a lot of minor ones. Each system comes with a &lt;a href=&quot;https://en.wikipedia.org/wiki/Ports_collection&quot; rel=&quot;nofollow&quot;&gt;port collection&lt;/a&gt;: a distribution of third-party software, with a package manager. BSD systems make a clear distinction between the core software (not always written in-house, but maintained in-house) and the third-party software built through ports and managed by the package manager.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Linux distributions, on the other hand, put together a large assemblage of software that's maintained separately. Even a minimal Linux installation needs to assemble a lot of different products: at least a kernel, a bootloader, an init system, a shell, some system utilities, some file and text processing utilities, various hardware management and network configuration utilities, — and that's just to have the bare minimum with a system that does nothing useful. A desktop or server Linux system needs a lot more — web server, email, scheduled tasks, graphical user interface, … all come from one or more different providers. Linux distributions typically don't maintain any utilities themselves other than the system installer, a few configuration tools and the package manager and a few configuration tools (and sometimes even none of these.). Most Linux distributions don't make a sharp distinction between the core system and additional packages, if at all, and even if they do the core system consists of far more software than the distribution maintains by itself.&lt;/p&gt;&#xA;" OwnerUserId="60" LastActivityDate="2015-07-08T15:16:56.330" CommentCount="0" />
  <row Id="973" PostTypeId="2" ParentId="55" CreationDate="2015-07-08T15:45:03.043" Score="0" Body="&lt;p&gt;&quot;open source is like throwing something into the public domain?&quot; - No&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&quot;is there a difference between works classified as open source, and works in the public domain?&quot; - Yes&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&quot;What's the difference between the two?&quot; - The short answer is that open source requires agreement to a license, Public Domain is without restrictions. However,  because the term Open Source is misleading here is my perception on the issue.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Like most of life (and law) open source is not a binary yes or no, but can fall between the two depending upon the individual circumstances of the software/product/license/terminology combinations. The resultant fuzzy logic licensing of a complex project that pulls resources from multiple sources can result in much heated debate. I think of rights to using software code as sitting on a sliding scale. At one end is propriety software from a commercial organisation that keeps source code hidden and secret. At the other end is source code out in the wild that has no restrictions upon it at all, free to be used/changed/abused by everyone, this is software in the Public Domain. You need to slide the scale back a little for open source. How far the scale is slid back depends upon the particular licence. A bit for the MIT licence, a bit more for the GPL licence. It can be slid almost back to the beginning where source code is licensed as open for viewing and nothing else, no changes whatsoever, why? Just to see how it works and for interfacing purposes. This is not uncommon in industrial systems.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Open source is mainly about source code, however, software can be in the Public Domain but the source code is kept secret (e.g. a programmer waivers rights to a little utility but keeps the source code under wraps). Furthermore time will eventually start contributing to Public Domain software. Once enough years have passed software falls out of copyright and becomes Public Domain. (Open source licenses then lapse.) When that happens the source code no longer needs to be readily available for the compiled files. Thus, perversely, in the very long run, this could cause beneficial changes to source code not being available.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The issue of what it means to have free rights to the software is often misunderstood. The free is about freedom of expression, not cost. Some misunderstand this and think open source is free of cost. Open source software can be sold, as long as the code comes with it (though the purchaser is then able to provide the software without selling it). This is also why open source software can be sold on disc media, mainly to cover the costs of production and distribution. Again perversely once the software is in the Public Domain there is nothing stopping organisations from modifying/renaming it then selling the product and not releasing the software's source code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So open source is mainly about freedom of expression, but need not be, and is not in some cases. Public Domain is about freedom in all senses, expression and cost, but that may lead to software becoming less free. One reason why the term Open Source is disliked by some is that it is misunderstood and misused. If you want true freedom of expression in software then open source is not an appropriate term. Nor is releasing it into the Public Domain (waiving all your rights). Hence the GPL license is probably the most free licence. Though some perceive it as restrictive, but strangely it needs to be to allow for full freedom of expression.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I would consider &quot;freedom software&quot; as a proper term for truly free open source software (GPLed). Unfortunately &quot;open source&quot; dominates and as an umbrella term that is not truly free software.&lt;/p&gt;&#xA;" OwnerUserId="517" LastActivityDate="2015-07-08T15:45:03.043" CommentCount="0" />
  <row Id="974" PostTypeId="1" CreationDate="2015-07-08T19:13:35.597" Score="8" ViewCount="247" Body="&lt;p&gt;Is DRM, which some spell as &quot;Digital Rights Management&quot;, others as &quot;Digital Restriction Management&quot;, allowed by the GPL? In other words, can software that implements DRM be licensed under the GPL? Assume version 3 of the GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What if the DRM scheme requires some kind of secret to work? Wouldn't the GPL require this secret to be published and GPL licensed too, making the DRM useless?&lt;/p&gt;&#xA;" OwnerDisplayName="user490" LastEditorUserId="98" LastEditDate="2015-07-14T21:43:33.550" LastActivityDate="2015-07-27T08:02:02.637" Title="Does the GNU GPL 3 prohibit DRM?" Tags="&lt;licensing&gt;&lt;gpl&gt;&lt;gpl-3&gt;&lt;drm&gt;" AnswerCount="2" CommentCount="6" FavoriteCount="2" />
  <row Id="975" PostTypeId="2" ParentId="974" CreationDate="2015-07-08T19:34:48.007" Score="7" Body="&lt;p&gt;There is nothing which prohibits you from creating software which implements DRM and licensing it under GPL. The GPL can be applied to any software, regardless of what that software does when it is run. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;But from a purely technical viewpoint, open source software can hardly be effective at enforcing DRM because the user could easily modify the software to ignore any restriction the DRM mandates to impose on use of the data the program processes. Requiring some secret to make the software work would also be ineffective because the software could be modified to reveal said secret.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But there is also the legal aspect. There are laws in some countries which forbid to circumvent DRM in some situations, even when it would be technically possible to do so. However, the GPLv3 (not v2) tries to circumvent this.  It has section 3 &quot;Protecting Users' Legal Rights From Anti-Circumvention Law.&quot; which states that a GPLv3 covered software does never count as a protection measure in regards to laws which forbid to circumvent technical measures to enforce copyrights. This makes GPLv3 software ineffective for implementing DRM, both technically and legally.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A workaround which is available when the DRM-based software runs on dedicated hardware is to lock down the hardware in a way that a modified software does not run (&quot;tivoization&quot;). A clause which would have prohibited this did not make it into the final version of the GPLv3.&lt;/p&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-07-13T09:15:05.020" LastActivityDate="2015-07-13T09:15:05.020" CommentCount="8" />
  <row Id="976" PostTypeId="1" CreationDate="2015-07-08T19:43:30.893" Score="1" ViewCount="55" Body="&lt;p&gt;The resounding &quot;No!&quot; answer to &lt;a href=&quot;http://opensource.stackexchange.com/questions/759/should-i-feel-guilty-for-one-off-contributions&quot;&gt;Should I feel guilty for one off contributions?&lt;/a&gt; raises the question, for me, of how easily a user could become a contributor to a given project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&quot;Easily&quot; is obviously very difficult to quantify here. The barriers to contribution for an advanced user of the project may be different to the barriers encountered by a technically advanced user who is less familiar with the project, for instance.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Are there any studies or proposed frameworks for measuring the ease of contribution or barriers to contribution of FLOSS projects?&lt;/p&gt;&#xA;" OwnerUserId="453" LastActivityDate="2015-08-01T13:48:44.907" Title="Are there any metrics/papers/studies on ease of contributing to projects?" Tags="&lt;contributor&gt;" AnswerCount="1" CommentCount="3" />
  <row Id="977" PostTypeId="2" ParentId="928" CreationDate="2015-07-08T20:45:11.157" Score="1" Body="&lt;p&gt;The idea of getting paid when you are finished implies a fixed price contract.  Most developers are against this type of contract due to the risk, but I'm not going to go there.  What I will say, is that if you're doing fixed price contract, you don't have to produce the source until they pay you.  Then they can push it up to a public github account if they want, or you can do it for them.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, if they want to create a new piece of software as open source, they are probably doing this to reduce their cost, in which case, they will be attempting to get other contributors and you won't be doing a fixed price contract since that doesn't make any sense.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If they want you to modify an existing piece of open source software, I would suggest that you make an hourly arrangement with short invoicing cycles and short payment terms.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If they want you to modify an existing piece of OSS, and you are ok with a fixed price contract, a) you have a greater appetite for risk than is prudent, and b) fork the code to a private repo and only after the client pays you, do you issue a pull request to merge back into the original repo.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another way for you to deal with this, is if the contract is small, demand payment upfront.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also, I'd be very suspicious about any company who wanted to pay you to create OSS.  There are reasons, but getting a consulting gig to create OSS is right up there with getting a job managing a unicorn stable.&lt;/p&gt;&#xA;" OwnerUserId="534" LastActivityDate="2015-07-08T20:45:11.157" CommentCount="0" />
  <row Id="978" PostTypeId="1" AcceptedAnswerId="979" CreationDate="2015-07-08T20:48:38.373" Score="8" ViewCount="129" Body="&lt;p&gt;Suppose I am writing an article for a website. I go to a website for research, and I find a piece of text I want to include. At the bottom of the website it says &quot;Copyright website.com 2015&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My questions:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Am I allowed to copy this text if I present it in my article quoted, and with a source?&lt;/li&gt;&#xA;&lt;li&gt;If yes, am I allowed to publish my article under an open sourced license? &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="271" LastEditorUserId="98" LastEditDate="2015-07-08T23:58:06.407" LastActivityDate="2015-07-08T23:58:06.407" Title="Can I quote stuff from a copyrighted piece of text and publish it open sourced?" Tags="&lt;licensing&gt;" AnswerCount="2" CommentCount="2" />
  <row Id="979" PostTypeId="2" ParentId="978" CreationDate="2015-07-08T21:29:42.707" Score="6" Body="&lt;p&gt;The easy part: yes, you are allowed to publish your article under an open-source license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The hard part: Whether or not you are allowed to copy the text depends greatly on where you are, and what you're doing with the text.  In general, this is covered under &lt;a href=&quot;https://en.wikipedia.org/wiki/Fair_use&quot;&gt;fair use&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Fair_dealing&quot;&gt;fair dealing&lt;/a&gt;, or other &lt;a href=&quot;https://en.wikipedia.org/wiki/Limitations_and_exceptions_to_copyright&quot;&gt;exemptions to copyright&lt;/a&gt;.  It is a very, very broad topic, with the rules varying wildly from country to country.  About the only thing that's consistent is that publishing your article under an open-source license doesn't change the rules.&lt;/p&gt;&#xA;" OwnerUserId="240" LastActivityDate="2015-07-08T21:29:42.707" CommentCount="0" />
  <row Id="980" PostTypeId="2" ParentId="928" CreationDate="2015-07-08T21:30:43.137" Score="1" Body="&lt;p&gt;The open source factor is just a red-herring. As a software developer/contractor you will be paid if, and only if, you deliver the software the client requested. And contrary to most of the answers above, rights to the work you do for a client remain with the client, not with you. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note that I said &lt;strong&gt;requested&lt;/strong&gt;, not &lt;em&gt;wanted&lt;/em&gt;, they are two different things and it is normal for customers to not want the first draft of what is delivered. This is because what they requested is usually not what they wanted and they won't know what they want until they see it. You deal with that by agreeing acceptance criteria. If the code fails the criteria, you don't get paid, if it passes, you do. If it turns out that it passes the criteria but is not what they want, you get paid and they have the option of setting new criteria. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Good sense says show them early and often as that way the client gets more input into the shape of the product which ensures they will be happier with the result (and happier to pay). It also means you can stage the software accordingly so they are not paying upfront for garbage they cant use and you don't get stung for work they don't want. This is the basis for agile software development. &lt;/p&gt;&#xA;" OwnerUserId="538" LastActivityDate="2015-07-08T21:30:43.137" CommentCount="2" />
  <row Id="982" PostTypeId="2" ParentId="978" CreationDate="2015-07-08T23:06:37.720" Score="2" Body="&lt;p&gt;I think most jurisdiction in one way or another allow quotes. You should give a source and the quote (or quotes) should be only a small part of your complete text. As I said, this might vary in different jurisdictions. But if you follow the rules of your country you should still be able to claim your rights on your text and therefore make it open source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But here's the catch. Open Source involves others can make derivates of your text. But on the quotes they would be still restricted. They cannot change the attribution from person A to person B. They also cannot change the quote. Both action would violate rights of the person who said the quote.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So you should probably point out, that your text is open source, but the quote(s) are still more restricted.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-07-08T23:06:37.720" CommentCount="1" />
  <row Id="983" PostTypeId="2" ParentId="647" CreationDate="2015-07-09T00:23:54.737" Score="4" Body="&lt;p&gt;One area where free software will not reasonably compete in the foreseeable future is playback software for premium video. Movie studios make their works available for rental and enforce the terms of the rental contract with DRM (digital restrictions management) so that an end user cannot turn a rental into a substitute for a purchase. Even when a particular DRM scheme is open to third-party implementations, all implementations must meet the scheme's &quot;compliance and robustness&quot; rules in order to get a player key to decrypt the video. A requirement for robustness against end user modification inherently rules out free software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another is video games. The vast majority of professional &quot;e-sports&quot; leagues have standardized on non-free games. Trying to provide free software to an e-sports league by &quot;cloning&quot; an existing video game is more legally risky than &quot;cloning&quot; a productivity application because case law doesn't leave quite as much room for an interoperability defense with games. (Compare &lt;em&gt;Lotus v. Borland&lt;/em&gt;, decided for the cloner, to &lt;em&gt;Atari v. Philips&lt;/em&gt; and &lt;em&gt;Tetris v. Xio&lt;/em&gt;, decided for the original games' copyright owners.) Furthermore, the makers of popular &quot;consoles&quot; (set-top video gaming devices) &lt;a href=&quot;http://sev-notes.blogspot.com/2009/06/gpl-scummvm-and-violations.html&quot; rel=&quot;nofollow&quot;&gt;ban all copylefted software&lt;/a&gt; from their platforms and authorize no way to load software created by the user of a retail device.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Private sector production of tax preparation software is a third. In this domain, the developer translates annual changes to the tax code into a machine-readable form. Users rely on the accuracy of this translation to an extent greater than the typical &lt;code&gt;ABSOLUTELY NO WARRANTY&lt;/code&gt; disclaimer can support. The specialized labor involved in the translation is why details of the translation are considered valuable trade secrets. In theory, it'd be possible for the public sector to provide free tax preparation software, but certain fiscal conservative political parties would be loath to accept what they would term government scope creep and unfair competition with the likes of H&amp;amp;R Block and Intuit.&lt;/p&gt;&#xA;" OwnerUserId="548" LastActivityDate="2015-07-09T00:23:54.737" CommentCount="3" />
  <row Id="984" PostTypeId="1" AcceptedAnswerId="1083" CreationDate="2015-07-09T01:23:12.413" Score="14" ViewCount="127" Body="&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/&quot;&gt;CC BY (4.0)&lt;/a&gt; is a flexible, permissive license that requires attributing the licensor.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What if: Alice creates an artwork and distributes under CC BY, which is adapted by Bob who also distributes under CC BY, which is in turn used by Carol.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Who does Carol need to attribute? Just Bob, or both Alice and Bob?&lt;/p&gt;&#xA;" OwnerUserId="175" LastEditorUserId="138" LastEditDate="2015-07-09T16:06:14.437" LastActivityDate="2015-08-06T10:56:23.207" Title="Is CC BY attribution transitive?" Tags="&lt;creative-commons&gt;&lt;cc-by&gt;&lt;attribution&gt;" AnswerCount="3" CommentCount="2" FavoriteCount="1" />
  <row Id="985" PostTypeId="2" ParentId="984" CreationDate="2015-07-09T06:23:56.047" Score="0" Body="&lt;p&gt;Adapted means Bob takes Alice work and improves on that? In that case Bob's result is a collaborative work of Bob and Alice. That means Carol has to attribute both.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-09T07:05:16.423" LastActivityDate="2015-07-09T07:05:16.423" CommentCount="1" />
  <row Id="986" PostTypeId="2" ParentId="928" CreationDate="2015-07-09T08:59:33.253" Score="3" Body="&lt;p&gt;Most legislations differentiate between rights of authorship, distribution (copyright) and usage (license); though terms, definitions and consequences may vary regionally and IANAL:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Author's&lt;/strong&gt; rights (not copyright) can't be sold or transferred in any way, at least in Germany. If you've written the code, then you're the author. Period. In equivalence you can't make a contract to sell or transfer your human rights, e.g. become a slave. Such a contract would be invalid by law in developed countries.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Originally the author has the copyright. The author may grant non-/exclusive rights of distribution to another party even barring himself from distributing his work. However if there's no payment, there's no deal and the granted copyright is void. Contracts saying otherwise are likely invalid by law.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;The copyright holder can provide licenses to anyone. However licenses can be changed. Paid for licenses usually expire after some time. Lifetime licenses need to be specified as such explicitly. They are valuable. Contracts not reflecting the value appropriately can be invalid by law. Not-paid for licenses can probably be revoked at will. After all the receiving party has not paid anything, so there's no obligation they receive anything. The other way round: If you received no money in exchange for the license, you can happily return any (i.e. &lt;strong&gt;no&lt;/strong&gt; ) money received in exchange for revoking the license.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;An open source license does not change anything of the above. Most licenses use the author's rights to grant copyright to everyone by default. &quot;Copyleft licenses&quot; do the same but require derivative work to do so, too.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, if you as author charge for open source licenses, which is totally valid and seems to be the case, then anyone not paying but using your software is violating the license and thus commits what is commonly known as software piracy. Under some conditions it's punishable by law. In any case you have civil claims for the money they owe you. Please note:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Punishable by law means any perpetrator may be sentenced to go to jail or just pay a fine. Any fine does not go to the copyright holder. It's punishment for a crime. It goes to the state. A relevant crime would be to distribute the software commercially without holding the copyright. Using the software is not a crime. Giving it to close friends privately is in a gray zone.&lt;/li&gt;&#xA;&lt;li&gt;Regardless of any crime and punishment you still have the civil claim. Making your claim is way easier, if there's a sentence over a crime. However even if there's no verdict &quot;guilty&quot; the civil claim may still hold. It's just on you to prove it's applicable, i.e. the software was used without valid license.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="564" LastEditorUserId="98" LastEditDate="2015-07-09T11:58:07.223" LastActivityDate="2015-07-09T11:58:07.223" CommentCount="6" />
  <row Id="987" PostTypeId="2" ParentId="647" CreationDate="2015-07-09T09:34:54.490" Score="1" Body="&lt;p&gt;Some companies consider some of their software programs as advantages that give them a leading edge against their competitors.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For instance:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Both InvestmentBankA and InvestmentBankB are very similar, but what makes one earn more than the other is how smart its trading algorithm is.&lt;/li&gt;&#xA;&lt;li&gt;Both WebAdsCompanyA and WebAdsCompanyB are very similar, but what makes one earn more than the other is how smart their program can match advertisement content to available advertising space.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;On the opposite, most companies consider that they can win over their competitors thanks to their superior team, customer base, strategy, etc.&lt;/p&gt;&#xA;" OwnerUserId="199" LastActivityDate="2015-07-09T09:34:54.490" CommentCount="0" />
  <row Id="988" PostTypeId="2" ParentId="762" CreationDate="2015-07-09T12:40:35.813" Score="2" Body="&lt;p&gt;The impact is simple to state and impossible to quantify. Open source implementations that include copies of copyrighted APIs may constitute infringement. This is not a common case. Many common APIs are explicitly licensed permissively. So, for example, an API published under the GPL could preclude a GPL-incompatible implementation unless the copyright holder dual-licensed. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also, typing 'implements X' where 'X' is some API included in the JDK/JRE is not what this is about. &lt;/p&gt;&#xA;" OwnerUserId="554" LastActivityDate="2015-07-09T12:40:35.813" CommentCount="1" />
  <row Id="989" PostTypeId="2" ParentId="906" CreationDate="2015-07-09T13:41:30.410" Score="1" Body="&lt;p&gt;No, there is not any standard form.  Unless the AGPL is in use, there is no problem here. Let's walk through the scenario:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;start with an open source platform&lt;/li&gt;&#xA;&lt;li&gt;create modifications&lt;/li&gt;&#xA;&lt;li&gt;use those modifications &lt;em&gt;in house&lt;/em&gt; to deploy an application&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;The important thing is that there is no distribution of the results. If an organization takes an open platform, modifies it, and uses the result internally, it has no obligations under any commonly used licenses except AGPL. If the internal use results in an externally-visible website, there are obligations under AGPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If the intent is to contribute these changes back, then the situation depends on the licensing and copyright regime of the project. These vary widely; some projects require copyright assignment even for tiny contributions, some don't ever require any at all.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As a final remark,  Given the legal complexities of 'derived work', it is unclear in the extreme if it is helpful to try to distinguish the 'ownership' of small patches.&lt;/p&gt;&#xA;" OwnerUserId="554" LastActivityDate="2015-07-09T13:41:30.410" CommentCount="0" />
  <row Id="990" PostTypeId="1" AcceptedAnswerId="999" CreationDate="2015-07-09T14:21:22.147" Score="10" ViewCount="82" Body="&lt;p&gt;Assume I have a programmed a cool application and released it as open source. But not many people are using it, as most install their programs through their distribution of choice. Can I somehow add my program to a distribution, specifically Debian? What have I to do to be accepted?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can assume Debian in all cases this is different between distributions in your answer. So you can explain this specific to Debian, but I would like it, if it is mentioned which part is general for all/most distributions.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-10T11:52:22.447" LastActivityDate="2015-07-10T11:52:22.447" Title="How can I get my program into a Linux-distribution (Debian)?" Tags="&lt;debian&gt;&lt;distribution&gt;" AnswerCount="2" CommentCount="3" />
  <row Id="992" PostTypeId="2" ParentId="590" CreationDate="2015-07-09T15:20:22.603" Score="1" Body="&lt;p&gt;This question asks two questions: 'is it a problem?' and 'are there studies'? I offer a response to the former.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;All internet communities are at risk of hostility. As a subset of internet communities, Open Source development projects have, at least, the same risks as anything else.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some Open Source communities work hard to avoid these problems. A core value of the Apache Software Foundation, for example, is 'community over code'. And the ASF &lt;a href=&quot;http://www.apache.org/foundation/policies/conduct.html&quot; rel=&quot;nofollow&quot;&gt;Code of Conduct&lt;/a&gt;, which is mandatory for all open source projects, states quite clearly that the sort of bad behavior referenced here is unacceptable. The ASF is by no means the only locus of Open Source development to have such a code and such values.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As with all other aspects of 'open source', you cannot expect a general answer across all projects. Your Mileage Will Vary, and it's always wise to investigate the status and health of a community before investing energy into it.  &lt;/p&gt;&#xA;" OwnerUserId="554" LastActivityDate="2015-07-09T15:20:22.603" CommentCount="0" />
  <row Id="993" PostTypeId="1" AcceptedAnswerId="995" CreationDate="2015-07-09T15:31:07.740" Score="9" ViewCount="412" Body="&lt;p&gt;In some documents or blogs about development in open source projects, you can read stuff like 'upstream developer' or 'upstream fix'. What does that mean?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="190" LastEditDate="2015-07-11T09:16:54.177" LastActivityDate="2015-07-11T09:16:54.177" Title="What does 'upstream' mean?" Tags="&lt;development&gt;&lt;terminology&gt;" AnswerCount="3" CommentCount="0" FavoriteCount="1" />
  <row Id="995" PostTypeId="2" ParentId="993" CreationDate="2015-07-09T15:41:20.830" Score="7" Body="&lt;p&gt;Consider the obvious analogy (from which the term flows - pun intended) ... water in a river flows 'downstream' and thus 'upstream' is the source from which the water comes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This analogy is deeply embedded in software development, so it's no mere coincidence that we use terms like 'head', 'source', 'upstream', 'downstream' and even 'flow' extensively in the field. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the context of a forked software project, the 'upstream' is the source from which a particular project was forked. This might not be the absolute origin.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If project A is forked to produce project B which is then forked to produce project C, then B is 'upstream' of C and A is upstream of B (and C).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Thus, an upstream developer is one who works on an upstream project. An upstream fix is one which exists in the upstream (parent) project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When working with Git, especially in the context of Github, it is not uncommon for a developer to set two remotes&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;origin&lt;/code&gt; points to their own fork of a project&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;upstream&lt;/code&gt; is conventionally used to point to the project from which they forked.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;This allows the owner of the fork to pull fixes and enhancements directly from the original project, thus keeping theirs in sync with it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;On Github, I have &lt;a href=&quot;https://github.com/kdopen/json-c&quot;&gt;a fork&lt;/a&gt; of the &lt;a href=&quot;https://github.com/json-c/json-c&quot;&gt;official json-c&lt;/a&gt; repository. My local repo is setup thus:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;$ git remote -v&#xA;origin  ssh://git@github.com/kdopen/json-c (fetch)&#xA;origin  ssh://git@github.com/kdopen/json-c (push)&#xA;upstream    git@github.com:json-c/json-c.git (fetch)&#xA;upstream    ssh://git@github.com/json-c/json-c.git (push)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;I prepare changes in a local branch, regularly update my own fork with&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;$ git pull upstream master&#xA;$ git push origin master&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;and then rebase my own branches on the results.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If I have changes in my fork which I would like to see in the upstream version, then I create a &quot;pull request&quot; asking for them to accept my contribution. This process is referred to as &quot;pushing a change upstream&quot; which, for many projects, reflects the fact that its more work going upstream than down.&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="29" LastEditDate="2015-07-09T16:00:26.150" LastActivityDate="2015-07-09T16:00:26.150" CommentCount="0" />
  <row Id="996" PostTypeId="1" AcceptedAnswerId="997" CreationDate="2015-07-09T16:35:46.600" Score="4" ViewCount="877" Body="&lt;p&gt;In &lt;a href=&quot;http://opensource.stackexchange.com/q/883/55&quot;&gt;this question&lt;/a&gt; I asked why distribution are more common in the Open Source and Linux environment. It seems that a) open source makes the job easier for the distributor as it isn't needed to ask for permission and b) that Linux has an open development model instead of a centralized one.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So my question is: How did people have the idea Linux would work better with a distribution and start the first distribution(s)? Which distributions were the first and when did these projects start?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="190" LastEditDate="2015-07-10T09:29:41.510" LastActivityDate="2015-07-10T10:47:49.900" Title="How did the first Linux distribution(s) develop?" Tags="&lt;history&gt;&lt;operating-system&gt;&lt;linux-distribution&gt;" AnswerCount="3" CommentCount="0" FavoriteCount="2" />
  <row Id="997" PostTypeId="2" ParentId="996" CreationDate="2015-07-09T17:26:19.120" Score="7" Body="&lt;p&gt;With regards to&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Which distributions were the first and when did these projects start?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This is discussed at the beginning of Glyn Moody's book &quot;Rebel Code&quot;, in Chapter 6, &quot;Boot Then Root&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;He mentions the distribution from MCC (the Manchester Computing Center) as being a very early example, though perhaps not the first. However, the book does not mention an earlier example.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The First MCC Interim version, using the 0.12 kernel, appeared in February 1992.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;He then says&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;As the MCC Readme notes, &quot;Very shortly after the first MMC Interim version of Linux appeared, other people released similar versions: Dave Safford's TAMU [Texas A&amp;amp;M University] releases, and Martin Junius's MJ Versions were eventually followed by Peter MacDonald's massive, comprehensive SLS releases and H. J. Lu's small base systems.&quot;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The SLS (Softlanding Linux System) was an important early distribution.&#xA;Debian is generally considered an immediate successor of SLS, and Debian's founder, Ian Murdoch said at the time that SLS was &quot;possibly the most bug-ridden and badly maintained Linux distribution available; unfortunately it also [sic] quite possibly the most popular&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Both Slackware and Debian began in 1993. So the distributions mentioned above, none of which exist any more, could be considered the first wave before the distributions we know and love made their first appearance.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am not sure if&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;How did people have the idea Linux would work better with a distribution and start the first distribution(s)?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;has a clear answer. It is clear that not everybody can build their own distribution from scratch, any more than everybody can build their own automobile.&lt;/p&gt;&#xA;" OwnerUserId="149" LastEditorUserId="149" LastEditDate="2015-07-10T10:47:49.900" LastActivityDate="2015-07-10T10:47:49.900" CommentCount="5" />
  <row Id="998" PostTypeId="1" AcceptedAnswerId="1000" CreationDate="2015-07-09T17:38:43.603" Score="9" ViewCount="1312" Body="&lt;p&gt;I've encountered open/free (as in freedom) music, books, hardware, knowledge and naturally software. But do open source movies also exist? Is that even possible?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="29" LastEditDate="2015-07-09T19:21:18.743" LastActivityDate="2015-07-11T05:21:25.007" Title="Do open source movies exist?" Tags="&lt;entertainment&gt;&lt;movie&gt;" AnswerCount="5" CommentCount="8" FavoriteCount="2" />
  <row Id="999" PostTypeId="2" ParentId="990" CreationDate="2015-07-09T17:40:16.593" Score="7" Body="&lt;p&gt;For Debian you can proceed as follows:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Post an Intent to Package (ITP) bug report to the Debian Bug&#xA;Tracking    system (&lt;a href=&quot;https://www.debian.org/Bugs/&quot; rel=&quot;nofollow&quot;&gt;https://www.debian.org/Bugs/&lt;/a&gt;). Or if an existing&#xA;RFP (Request  for Packaging) bug report for the software already&#xA;exists, you can     assign it to yourself.&lt;/li&gt;&#xA;&lt;li&gt;Create the packaging for the software. &lt;/li&gt;&#xA;&lt;li&gt;Upload the software and the packaging to &lt;a href=&quot;http://mentors.debian.net/&quot; rel=&quot;nofollow&quot;&gt;http://mentors.debian.net/&lt;/a&gt;.&#xA;Wait for a sponsor (a Debian Developer who is interested in&#xA;uploading your package to Debian) to show up and people (mentors) to&#xA;critique your packaging. Possibly also post to debian-mentors&#xA;mailing list about your package.&lt;/li&gt;&#xA;&lt;li&gt;Improve your packaging to the point that a sponsor is willing to&#xA;upload it to Debian. If such a person doesn't show up within a&#xA;certain period of time, you are out of luck, but can try again&#xA;later. Note that your package will eventually be automatically&#xA;removed from &lt;a href=&quot;http://mentors.debian.net/&quot; rel=&quot;nofollow&quot;&gt;http://mentors.debian.net/&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Wait and see if the FTP masters, who are Debian's gatekeepers, accept&#xA;or reject your package. If they reject it they will normally give a&#xA;reason, and you can try to fix the package and resubmit it.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;If you happen to know a Debian developer who is willing to upload your package for you, you can skip steps 3 and 4. Note also that the #debian-mentors IRC channel on OFTC is a useful resource for packaging help.&lt;/p&gt;&#xA;" OwnerUserId="149" LastEditorUserId="149" LastEditDate="2015-07-10T11:31:30.013" LastActivityDate="2015-07-10T11:31:30.013" CommentCount="0" />
  <row Id="1000" PostTypeId="2" ParentId="998" CreationDate="2015-07-09T18:04:37.243" Score="8" Body="&lt;h2&gt;Yes, there is such a thing as &lt;a href=&quot;https://en.wikipedia.org/wiki/Open-source_film&quot; rel=&quot;nofollow&quot;&gt;open-source films&lt;/a&gt;.&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;from wikipedia:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;A definition of an open-source film is based on the &lt;a href=&quot;http://www.opensource.org/docs/osd&quot; rel=&quot;nofollow&quot;&gt;OSI's open-source software definition&lt;/a&gt; and the &lt;a href=&quot;http://freedomdefined.org/Definition&quot; rel=&quot;nofollow&quot;&gt;Definition of Free Cultural Works&lt;/a&gt;. This definition can be applied to films where:&lt;/p&gt;&#xA;  &#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;The license of the movie is approved for &lt;a href=&quot;http://freedomdefined.org/Definition&quot; rel=&quot;nofollow&quot;&gt;Free Cultural Works&lt;/a&gt;. Specifically this is true for the &lt;a href=&quot;http://creativecommons.org/&quot; rel=&quot;nofollow&quot;&gt;Creative Commons&lt;/a&gt; licenses &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot; rel=&quot;nofollow&quot;&gt;BY&lt;/a&gt; and &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/&quot; rel=&quot;nofollow&quot;&gt;BY-SA&lt;/a&gt;.&lt;/li&gt;&#xA;  &lt;li&gt;The materials used in the movie (sources) are also available under a license which is approved for free cultural works.&lt;/li&gt;&#xA;  &lt;li&gt;The movie and its sources are made publicly available via an online download or by other means that are either free or with a cost that covers reasonable reproduction expenses only.&lt;/li&gt;&#xA;  &lt;li&gt;The sources should be viewable and editable with free/open-source software. If this is not the case, they must be convertible into such a format by using free/open-source software. The same applies to the movie itself.&lt;/li&gt;&#xA;  &lt;li&gt;It should be possible to re-create or re-assemble the movie using the source materials.&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;There don't seem to be many &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_open-source_films&quot; rel=&quot;nofollow&quot;&gt;films listed as truly open source&lt;/a&gt; (sort by &lt;code&gt;Open Source Movie&lt;/code&gt;) but there are a few.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A notable example is the &lt;a href=&quot;http://www.rottentomatoes.com/m/sita_sings_the_blues/&quot; rel=&quot;nofollow&quot;&gt;critically acclaimed&lt;/a&gt; movie &lt;a href=&quot;http://www.sitasingstheblues.com/&quot; rel=&quot;nofollow&quot;&gt;Sita Sings the Blues&lt;/a&gt;. which is currently licensed under &lt;a href=&quot;https://creativecommons.org/about/cc0&quot; rel=&quot;nofollow&quot;&gt;CC0 (Public domain)&lt;/a&gt;. Of which you can actually &lt;a href=&quot;https://archive.org/details/Sita_Sings_the_Blues_Files&quot; rel=&quot;nofollow&quot;&gt;download all .fla files&lt;/a&gt; and use them as you like, with the restriction of some none open source songs used in the movie.&lt;/p&gt;&#xA;" OwnerUserId="168" LastEditorUserId="192" LastEditDate="2015-07-11T05:21:25.007" LastActivityDate="2015-07-11T05:21:25.007" CommentCount="0" />
  <row Id="1001" PostTypeId="2" ParentId="993" CreationDate="2015-07-09T19:00:15.040" Score="3" Body="&lt;p&gt;Upstream is not completely unique to open source, in the closed source world they just call it a vendor. It is however better in open source because you don't have to wait for the vendor to fix bugs which is why the river analogy is so popular (although not perfect as rivers are much more likely to only flow in one direction). A project can get software from many sources, put them together and distribute through a single distribution channel. Upstream is the projects you use to build your project. Which in most cases is more than one.&lt;/p&gt;&#xA;" OwnerUserId="385" LastEditorUserId="385" LastEditDate="2015-07-09T19:10:25.017" LastActivityDate="2015-07-09T19:10:25.017" CommentCount="0" />
  <row Id="1002" PostTypeId="2" ParentId="998" CreationDate="2015-07-09T19:19:57.643" Score="4" Body="&lt;p&gt;&lt;a href=&quot;https://durian.blender.org/&quot; rel=&quot;nofollow&quot;&gt;Another example&lt;/a&gt; is &lt;em&gt;Sintel&lt;/em&gt; from the organization behind Blender&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When I was exploring their site, my first impression from the downloads page was that only the finished video was available. But on the &quot;About&quot; page I found this&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The movie itself, and all of the work of the Durian team in the past 18 months will be released under the Creative Commons Attribution license, free for everyone to distribute, learn from or re-use. The &lt;strong&gt;4-disc DVD set&lt;/strong&gt; will provide all data to be able to recreate and rerender the film in its entirety.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;(Emphasis mine)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Presumably, they didn't want to support the bandwidth for many users downloading a 16Gb dataset. But the full source of the movie is available.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is licensed under &quot;Creative Commons Attribution 3.0.&quot; which I interpret as &lt;code&gt;CC BY&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now this film, and others like it, are purely CGI. An open-source live-action film, or worse a documentary, might be much more difficult to create. What would you consider the &quot;source&quot; to be in this case?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Though, thinking about it, if the live-action film was published in a digital form under a suitable license you could edit it, reorder the clips, or use clips from it in another video.&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="29" LastEditDate="2015-07-10T00:43:45.740" LastActivityDate="2015-07-10T00:43:45.740" CommentCount="0" />
  <row Id="1003" PostTypeId="2" ParentId="996" CreationDate="2015-07-09T20:58:15.007" Score="9" Body="&lt;p&gt;Remember that &lt;em&gt;just&lt;/em&gt; Linux - the kernel - is not very useful. In order to use it, you need some programs. At the very least a shell, its utilities, an editor, and probably a compiler so you can write more programs. Many of these were already written seperately by the GNU project, or available as BSD-licensed code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So a minimal Linux system already includes code from the GNU project, the Regents of the University of California, Linus Torvalds, and his contributors. Once you've gone to the trouble of collecting all this though, you can do something you can't (legally) do with non-Free software: copy it to disk or tape and hand it to someone else. And that's a distribution.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Fancy things like names, websites, updates, packages, and release schedules, came later. Note that because systems didn't come with Linux preinstalled an installer of some sort was essential. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Ask the reverse question: without a distribution, how would anyone ever get Linux? How would it be .. distributed?&lt;/p&gt;&#xA;" OwnerUserId="583" LastActivityDate="2015-07-09T20:58:15.007" CommentCount="0" />
  <row Id="1004" PostTypeId="2" ParentId="996" CreationDate="2015-07-09T21:36:27.123" Score="7" Body="&lt;p&gt;Distributions are older than Linux! Ever heard of &lt;a href=&quot;http://en.wikipedia.org/wiki/Berkeley_Software_Distribution&quot;&gt;BSD&lt;/a&gt;? The acronym stands for Berkeley Software Distribution. The original Berkeley Software Distribution was a collection of software developed at the University of California at Berkeley, which you could install on a Version 6 Unix system. The year was 1978. At the time, access to software sources was still the general rule, but the culture was changing; soon Richard Stallman would get the idea of writing a free operating system after having been unable to customize his printer driver.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Over the years, BSD came to include more and more software, until there was a complete BSD operating system. BSD pioneered such novelties as the vi editor, the TCP/IP protocol stack, the curses user interface library, the csh shell, etc. I don't know when BSD started to include software not written at UCB.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;By the time the Linux kernel came onto the scene in 1991, there was a precedent for taking a collection of software which wasn't maintained as a coherent whole and assembling it into a working system. Linux distributions did take it further in that from day 1, they had to combine highly disparate software, written and maintained all over the world.&lt;/p&gt;&#xA;" OwnerUserId="60" LastActivityDate="2015-07-09T21:36:27.123" CommentCount="0" />
  <row Id="1005" PostTypeId="1" CreationDate="2015-07-10T00:08:21.143" Score="4" ViewCount="36" Body="&lt;p&gt;I want to publish a blog post under a Creative Commons license (e.g., &lt;a href=&quot;http://creativecommons.org/licenses/by-sa/4.0/&quot; rel=&quot;nofollow&quot;&gt;CC BY-SA 4.0&lt;/a&gt;). This post includes several quotations (to the extent allowed by copyright law) from works which are not licensed under a compatible license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/choose/results-one&quot; rel=&quot;nofollow&quot;&gt;As recommended&lt;/a&gt; by Creative Commons, I’ll write this in the post’s footer:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;This work is licensed under a Creative Commons […] License.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;But the quotations, although part of my work, are &lt;em&gt;not&lt;/em&gt; licensed under CC BY-SA 4.0, because I can’t make this decision for the quoted works.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Do I have to do something about this?&lt;/strong&gt; Like mentioning that the license does not apply to quotations? Or is it well known (or even specified in the CC license?) that licensing doesn’t affect quotes?&lt;/p&gt;&#xA;" OwnerUserId="138" LastActivityDate="2015-07-10T10:02:41.050" Title="Do I have to exclude quotations in the license notice?" Tags="&lt;creative-commons&gt;&lt;license-notice&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="1" />
  <row Id="1006" PostTypeId="2" ParentId="998" CreationDate="2015-07-10T00:19:56.533" Score="4" Body="&lt;p&gt;open source movies do exist and are spread out amongst varied organizations that support the movement.&lt;br&gt;&#xA;the internet archive runs a community open source movies portal:&lt;br&gt;&#xA;&lt;a href=&quot;https://archive.org/details/opensource_movies&quot; rel=&quot;nofollow&quot;&gt;https://archive.org/details/opensource_movies&lt;/a&gt;  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;wikimedia commons has a list of open source media, although i'm not sure how many of these videos qualify as &quot;movies&quot;, as opposed to simply video:&lt;br&gt;&#xA;&lt;a href=&quot;https://commons.wikimedia.org/wiki/Commons:Free_media_resources/Video&quot; rel=&quot;nofollow&quot;&gt;https://commons.wikimedia.org/wiki/Commons:Free_media_resources/Video&lt;/a&gt;  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;penn state runs a similar site with a list of open source media:&lt;br&gt;&#xA;&lt;a href=&quot;http://mediacommons.psu.edu/free-media-library/&quot; rel=&quot;nofollow&quot;&gt;http://mediacommons.psu.edu/free-media-library/&lt;/a&gt;  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;the a/v film geeks archive (also by the internet archive) has over 1000 submissions:&lt;br&gt;&#xA;&lt;a href=&quot;https://archive.org/details/avgeeks&quot; rel=&quot;nofollow&quot;&gt;https://archive.org/details/avgeeks&lt;/a&gt;  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;public domain flicks offers movies in the public domain:&lt;br&gt;&#xA;&lt;a href=&quot;http://www.publicdomainflicks.com/&quot; rel=&quot;nofollow&quot;&gt;http://www.publicdomainflicks.com/&lt;/a&gt;  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;you can also try the open video project:&lt;br&gt;&#xA;&lt;a href=&quot;http://www.open-video.org/&quot; rel=&quot;nofollow&quot;&gt;http://www.open-video.org/&lt;/a&gt;  &lt;/p&gt;&#xA;" OwnerUserId="30" LastActivityDate="2015-07-10T00:19:56.533" CommentCount="0" />
  <row Id="1007" PostTypeId="1" AcceptedAnswerId="1018" CreationDate="2015-07-10T00:33:25.050" Score="4" ViewCount="39" Body="&lt;p&gt;Suppose I have an image of a piece of paper on which I wrote. I publish this image under an open source CC-BY license on my website.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is the text in the image now also licensed under a CC-BY license? Or is just the image itself licensed?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="29" LastEditDate="2015-07-10T00:41:33.053" LastActivityDate="2015-07-10T11:16:26.120" Title="Are the contents of an image covered by the license applied to the image?" Tags="&lt;licensing&gt;" AnswerCount="2" CommentCount="0" />
  <row Id="1008" PostTypeId="2" ParentId="625" CreationDate="2015-07-10T00:39:52.940" Score="2" Body="&lt;p&gt;The &lt;a href=&quot;https://www.blackducksoftware.com/resources/data&quot; rel=&quot;nofollow&quot;&gt;data from blackduck&lt;/a&gt; isn't broken down by open/closed compilers, but it does cover the specific languages and provide historical information.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Additionally, it is focused on language use solely within open source projects. Obtaining this information for closed/proprietary projects is obviously problematic.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;With the possible exception of the Visual Studio/.NET specific languages such as VB.NET, and probably C# and Apple's objective C, I suspect that most of the compiled language use is from &lt;code&gt;gcc&lt;/code&gt; (which is, of course, more than just a &lt;code&gt;c&lt;/code&gt; or &lt;code&gt;c++&lt;/code&gt; compiler).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is especially likely as I doubt too many open source projects use proprietary compilers, as the cost is a barrier to contributions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is the closest I've been able to find in the ten days since you asked the question.&lt;/p&gt;&#xA;" OwnerUserId="29" LastActivityDate="2015-07-10T00:39:52.940" CommentCount="0" />
  <row Id="1009" PostTypeId="2" ParentId="1005" CreationDate="2015-07-10T00:47:07.050" Score="1" Body="&lt;p&gt;&lt;strong&gt;Sort of:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you have quoted text from other websites you should source where the text came from somewhere in the page.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example your page might look like this:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum quis aliquet turpis. Quisque faucibus augue pharetra, finibus nisl at, luctus quam. Vivamus elit felis, lobortis vitae auctor eget, tempus a mi. Ut sed ante placerat, pharetra ipsum id, gravida dui.&lt;strong&gt;&quot;Your quoted text from another article&quot;[1]&lt;/strong&gt; Sed quis scelerisque eros. Vestibulum sed arcu id risus tincidunt vehicula in vitae quam. Aliquam non nisl viverra, gravida velit nec, fermentum purus. In non interdum magna. Sed rhoncus libero a elementum efficitur. Praesent scelerisque vulputate lectus. Proin sagittis nec diam eget porttitor. Aenean malesuada nisl elit. Sed a imperdiet libero.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&lt;strong&gt;[1] &quot;Example Domain.&quot; Example Domain. N.p., n.d. Web. 09 July 2015.&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;hr&gt;&#xA;  &#xA;  &lt;p&gt;This work is licensed under a Creative Commons […] License.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;In this scenario there is no issue with licensing the entire page (including your quote), you are licensing the work that you did, your not licencing the original text from the original website your licensing the quoted (and cited) piece of text. This is allowed.&lt;/p&gt;&#xA;" OwnerUserId="271" LastActivityDate="2015-07-10T00:47:07.050" CommentCount="0" />
  <row Id="1010" PostTypeId="2" ParentId="1007" CreationDate="2015-07-10T06:12:19.940" Score="3" Body="&lt;p&gt;I would say no, but this might depend on local rules. But this doesn't mean you don't have a copyright on the text. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The copyright of an image is always at the person who made the image and is restricted to the image itself. That means: lights, color-filters, position of things you have on your picture etc. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Whereas the copyright of the piece of paper you made a photo from is still at the original author of the piece of paper, which is you too. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also who is having the copyright of the piece of paper can also disallow/allow you to make a picture. This is depending on local law rules as a good example is e.g. the right to make a photo of a building/location and share it as currently discussed inside EU called freedom of panorama. &lt;/p&gt;&#xA;" OwnerUserId="132" LastActivityDate="2015-07-10T06:12:19.940" CommentCount="0" />
  <row Id="1011" PostTypeId="2" ParentId="998" CreationDate="2015-07-10T06:18:57.213" Score="0" Body="&lt;p&gt;For exemple, here is a project called &lt;a href=&quot;https://www.indiegogo.com/projects/zemarmot-libre-movie-made-with-free-software/#/story&quot; rel=&quot;nofollow&quot;&gt;ZeMarmot&lt;/a&gt;, a 2D animation movie (under CC BY-SA) made with Open Source softwares like Gimp, Blender on Linux. This project isn't finished yet but it becomes interesting.&lt;/p&gt;&#xA;" OwnerUserId="598" LastActivityDate="2015-07-10T06:18:57.213" CommentCount="2" />
  <row Id="1012" PostTypeId="1" AcceptedAnswerId="1054" CreationDate="2015-07-10T06:55:59.707" Score="6" ViewCount="105" Body="&lt;p&gt;The question &lt;a href=&quot;http://opensource.stackexchange.com/q/998/168&quot;&gt;Do open source movies exist?&lt;/a&gt; and specifically &lt;a href=&quot;http://opensource.stackexchange.com/questions/998/do-open-source-movies-exist#comment1560_998&quot;&gt;this comment&lt;/a&gt; made me curious about Open Source movies. It seems like most Open Source movies are animated, which makes sense since you can make all content yourself and assure it's licensed appropriately and making additional content is feasible for other people.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Suppose however, that I want to make a documentary, using original interviews, original footage and stock footage (from whatever source), as well as music that may or may not be original. Aside from picking the right license (probably &lt;a href=&quot;http://creativecommons.org/licenses/&quot; rel=&quot;nofollow&quot;&gt;some CC license&lt;/a&gt;), how would I go about making sure that this movie can not only technically be remixed and redistributed, but that it is also practically viable, without anyone having to fear breaking some sort of copyright law?&lt;/p&gt;&#xA;" OwnerUserId="168" LastEditorUserId="55" LastEditDate="2015-07-11T10:16:11.917" LastActivityDate="2015-07-11T10:16:11.917" Title="How do I ensure my documentary adheres to Open Source principles as closely as possible?" Tags="&lt;entertainment&gt;&lt;movie&gt;" AnswerCount="3" CommentCount="2" FavoriteCount="1" />
  <row Id="1013" PostTypeId="2" ParentId="990" CreationDate="2015-07-10T08:04:14.677" Score="5" Body="&lt;p&gt;&lt;a href=&quot;https://opensource.stackexchange.com/users/149/faheem-mitha&quot;&gt;@FaheemMitha&lt;/a&gt; already gave a perfect answer for Debian, but I wanted to add the &lt;a href=&quot;https://wiki.ubuntu.com/UbuntuDevelopment/NewPackages&quot;&gt;process for Ubuntu&lt;/a&gt;. If a package is included in Debian, it will automatically be included in Ubuntu shortly down the road:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Ubuntu regularly incorporates source packages from Debian, so it is encouraged to upload a package to Debian first to automatically have it in Ubuntu in due time. In addition to that your package will reach a much broader audience if it is in Debian and all of its derivatives.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;You are also recommended to file a bug with Ubuntu's LaunchPad to move the process along faster.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Packages that have recently been added to Debian unstable will be automatically synced into Ubuntu prior to the Debian Import Freeze (DIF). After the Debian Import Freeze, you will have to file a bug with the summary field &quot;Please sync  from debian &quot; where  is the package you would like to see. Find the date for Debian Import Freeze on the release schedule page.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://fedoraproject.org/wiki/Package_Review_Process&quot;&gt;Fedora's process&lt;/a&gt; also involves filing a ticket. For CentOS, the process is &lt;a href=&quot;https://wiki.centos.org/HowTos/Packages/ContributeYourRPMs&quot;&gt;here&lt;/a&gt; and is done primarily through a mailing list. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;For OpenSUSE, see &lt;a href=&quot;https://en.opensuse.org/openSUSE:How_to_contribute_to_Factory&quot;&gt;this guide&lt;/a&gt;. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Amazon does not seem to provide a guide for Amazon Linux, but getting it into CentOS and Fedora should get Amazon to pick it up after a while.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Last but not least, &lt;a href=&quot;https://www.freebsd.org/doc/en/books/porters-handbook/quick-porting.html&quot;&gt;don't forget about FreeBSD&lt;/a&gt; (and &lt;a href=&quot;https://www.netbsd.org/docs/pkgsrc/submit.html&quot;&gt;NetBSD&lt;/a&gt;, and &lt;a href=&quot;http://www.openbsd.org/faq/ports/guide.html&quot;&gt;OpenBSD&lt;/a&gt;)!&lt;/p&gt;&#xA;" OwnerUserId="90" LastActivityDate="2015-07-10T08:04:14.677" CommentCount="1" />
  <row Id="1014" PostTypeId="2" ParentId="998" CreationDate="2015-07-10T08:26:23.733" Score="0" Body="&lt;p&gt;Just to add a live-action film to the list, the documentary &lt;a href=&quot;https://en.wikipedia.org/wiki/Get_Lamp&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;Get Lamp&lt;/em&gt;&lt;/a&gt; is licensed CC BY-SA-NC. The source videos are &lt;a href=&quot;https://archive.org/details/getlamp-interviews&quot; rel=&quot;nofollow&quot;&gt;hosted on the Internet Archive&lt;/a&gt; and are licensed CC BY-SA.&lt;/p&gt;&#xA;" OwnerUserId="190" LastActivityDate="2015-07-10T08:26:23.733" CommentCount="0" />
  <row Id="1016" PostTypeId="1" CreationDate="2015-07-10T09:17:01.533" Score="4" ViewCount="583" Body="&lt;p&gt;Consider a voting computer. The software running this computer is licensed under the GNU GPL v3.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Does this license mean that the voters using this computer to cast their votes must be able to modify the code of the software running the computer?&lt;/p&gt;&#xA;" OwnerDisplayName="user490" LastEditorUserId="168" LastEditDate="2015-07-10T14:15:37.950" LastActivityDate="2015-07-10T14:15:37.950" Title="Can voters modify the code of a voting computer?" Tags="&lt;licensing&gt;&lt;gpl-3&gt;" AnswerCount="2" CommentCount="1" />
  <row Id="1017" PostTypeId="2" ParentId="1016" CreationDate="2015-07-10T09:29:03.947" Score="11" Body="&lt;p&gt;It is true that anyone can modify and redistribute the code of a GNU GPL v3 project. But no one is under any obligation to actually run a modified version that they do not want to run. So yes, you could create your own fork of the voting software and rig it, but no one will run that version on an actual voting computer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is a legitimate concern here though, namely that someone will add a feature or fix a bug and with that modification, sneak in some sort of exploit. If this modification makes it through, the person who made the modification could then use it to their benefit. This is one reason why all user contributions should always be thoroughly scrutinized before they are added to a project.&lt;/p&gt;&#xA;" OwnerUserId="168" LastActivityDate="2015-07-10T09:29:03.947" CommentCount="4" />
  <row Id="1018" PostTypeId="2" ParentId="1007" CreationDate="2015-07-10T09:44:34.757" Score="3" Body="&lt;p&gt;In this specific example, the text &quot;I publish this image under an open source CC-BY license on my website&quot; is below the &lt;a href=&quot;https://en.wikipedia.org/wiki/Threshold_of_originality&quot; rel=&quot;nofollow&quot;&gt;threshold of originality&lt;/a&gt;, which means that it is not entitled to copyright protection. A public license can &lt;em&gt;only&lt;/em&gt; be applied to a work if it eligible for copyright protection, so the answer is clearly &quot;no&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, let's assume that the text on the photographed paper is an original poem or some other literary work that is above the threshold of originality. In that case the photograph of the text is a &lt;em&gt;derivative work&lt;/em&gt; of the original (literary) work.  In that case, applying a CC license to the derivative does &lt;em&gt;not&lt;/em&gt; retroactively enforce the license on the derivative on the original.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This should be blatantly obvious if the photograph is a photograph of somebody else's literary work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And the law does not work differently, even if your photograph &lt;em&gt;your own&lt;/em&gt; literary work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Creating a derivative work requires permission from the rights holder. This is permission usually simple to obtain if both the original work (literary text) and derivative work (photo) is both created by the same person.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-10T11:16:26.120" LastActivityDate="2015-07-10T11:16:26.120" CommentCount="0" />
  <row Id="1020" PostTypeId="2" ParentId="1016" CreationDate="2015-07-10T09:56:24.813" Score="3" Body="&lt;p&gt;This is a &lt;a href=&quot;https://www.gnu.org/licenses/gpl-faq.html#v3VotingMachine&quot; rel=&quot;nofollow&quot;&gt;Frequently Asked Questions about the GNU Licenses&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;No. Companies distributing devices that include software under GPLv3 are at most required to provide the source and Installation Information for the software to people who possess a copy of the object code. The voter who uses a voting machine (like any other kiosk) doesn't get possession of it, not even temporarily, so the voter also does not get possession of the binary software in it.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerDisplayName="user490" LastEditorUserId="29" LastEditDate="2015-07-10T13:57:36.977" LastActivityDate="2015-07-10T13:57:36.977" CommentCount="1" />
  <row Id="1021" PostTypeId="1" CreationDate="2015-07-10T10:01:17.133" Score="12" ViewCount="674" Body="&lt;p&gt;Consider I've written a program and released it under the GNU GPL version 2. Now I want to release it under the &lt;a href=&quot;https://gnu.org/licenses/gpl-3.0&quot;&gt;GNU GPL version 3&lt;/a&gt;. Let's call this &quot;upgrading the license&quot;. Is this possible? How do I do it?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The reason for changing the license would be that I want to get the additional protection offered by the GNU GPL version 3. I do &lt;em&gt;not&lt;/em&gt; want to license future work under the GNU GPL version 2.&lt;/p&gt;&#xA;" OwnerDisplayName="user490" LastEditorUserId="69" LastEditDate="2015-07-15T02:36:48.227" LastActivityDate="2015-07-15T02:36:48.227" Title="How do I upgrade from GPLv2 to GPLv3?" Tags="&lt;gpl-3&gt;&lt;relicensing&gt;&lt;gpl-2&gt;" AnswerCount="3" CommentCount="1" FavoriteCount="6" />
  <row Id="1022" PostTypeId="2" ParentId="1005" CreationDate="2015-07-10T10:02:41.050" Score="3" Body="&lt;p&gt;Quotations are permitted by &lt;strong&gt;exceptions and limitations&lt;/strong&gt; to copyright (e.g. &quot;fair use&quot; in the USA), and accounted for my sec. 2(a)(2) in the CC licenses, which says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Exceptions and Limitations&lt;/strong&gt;. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So all the public license does not apply to any quotations embedded in your blog post.  As far as the &lt;em&gt;CC license&lt;/em&gt; goes, there is nothing that is required of you.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As noted it the answer by Trevor Clarke, civil and academic norms requires you to provide &lt;em&gt;proper credit&lt;/em&gt; for any material reused under exceptions and limitations to copyright - but that follows from civil and academic norms - not from the CC license. &lt;/p&gt;&#xA;" OwnerUserId="606" LastActivityDate="2015-07-10T10:02:41.050" CommentCount="0" />
  <row Id="1024" PostTypeId="2" ParentId="1021" CreationDate="2015-07-10T10:25:59.647" Score="12" Body="&lt;p&gt;If it is &lt;em&gt;your&lt;/em&gt; program (and not a derivative of somebody else's program), you have the full right to do whatever you like.  So just create a new distribution and state that this distro is under &quot;GNU GPL version 3&quot;, replace &lt;code&gt;LICENSE.txt&lt;/code&gt; and edit any copyright notices to refer to the correct license - and you're done. Doing so will give you the additional protection offered under the newer version of GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, this is IMHO &lt;em&gt;not&lt;/em&gt; a good way to do it - as it will be disruptive to users and may render the &quot;GNU GPL version 3&quot; unusable by some existing users that already may use the software in derivatives that requires components to be compatible with &quot;GNU GPL version 2&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note that this will create a fork of your program.  There will be the old version that &lt;em&gt;still&lt;/em&gt; will be under GNU GPL version 2, and the new (initially identical) version, now under GNU GPL version 3. Since these versions of GPL is not compatible, these two versions will now live separate lifes, and will probably sooner or later be different.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This will create all sorts of problems for downstream recipients, and probably confuse a lot of developers unaware of all the pesky intricacies of FLOSS licensing.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Instead&lt;/em&gt;, if you want to make your software compatible with &quot;GNU GPL version 3&quot; while preserving backwards compatibility, change the license description to the following: &quot;GNU GPL version 2 and later&quot;.  This description triggers the following provison in the &quot;GNU GPL version 2&quot;: &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Each version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and &quot;any later version&quot;, you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This keeps your software under &quot;GNU GPL version 2&quot;, but provides an &lt;em&gt;option&lt;/em&gt; to downstream recipients to re-license it to &quot;GNU GPL version 3&quot; if they need to do so. A typical use case will be to create a derivative involving your software and a library available under &quot;GNU GPL version 3&quot; only.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If your program is not developed by you alone, but a derivative of some software that is &quot;GPL version 2&quot; &lt;em&gt;only&lt;/em&gt;, then copyleft kicks in an you do not have the rights required to change its license.  In that case, unfortunately, you're stuck: You cannot make the software compatible with &quot;GNU GPL version 3&quot; - unless you can get everyone involved to change their license to &quot;GNU GPL version 3&quot; or &quot;GNU GPL version 2 and later&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;PS: &quot;GNU GPL version 2 and later&quot; is sometimes written like this &quot;GPLv2+&quot;. &lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-10T10:35:28.387" LastActivityDate="2015-07-10T10:35:28.387" CommentCount="2" />
  <row Id="1025" PostTypeId="1" AcceptedAnswerId="1035" CreationDate="2015-07-10T10:36:12.837" Score="33" ViewCount="4115" Body="&lt;p&gt;In some cases I have noticed that some people say GNU/Linux instead of just Linux. Why is that so? Do both terms mean the same or is there a subtle difference?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="69" LastEditDate="2015-07-14T01:01:19.293" LastActivityDate="2015-07-14T01:01:19.293" Title="Why do some people refer to Linux as GNU/Linux?" Tags="&lt;terminology&gt;&lt;gnu&gt;&lt;linux-distribution&gt;" AnswerCount="6" CommentCount="8" FavoriteCount="6" />
  <row Id="1028" PostTypeId="2" ParentId="1025" CreationDate="2015-07-10T10:45:02.833" Score="5" Body="&lt;p&gt;They are different terms for the same thing, used by two different groups of people.  Use of the &lt;em&gt;GNU/Linux&lt;/em&gt; name is done at the explicit request of Richard Stallman and the GNU Project.  You can read the full rationale &lt;a href=&quot;http://www.gnu.org/gnu/linux-and-gnu.en.html&quot; rel=&quot;nofollow&quot;&gt;on the GNU Project's website&lt;/a&gt;, but it seems to boil down to this:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Linux is the kernel: the program in the system that allocates the&#xA;  machine's resources to the other programs that you run. The kernel is&#xA;  an essential part of an operating system, but useless by itself; it&#xA;  can only function in the context of a complete operating system. Linux&#xA;  is normally used in combination with the GNU operating system: the&#xA;  whole system is basically GNU with Linux added, or GNU/Linux.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I think it's fair to say that opinion is divided about the merits of this.  I personally try to use the &lt;em&gt;GNU/Linux&lt;/em&gt; term when I can, but I understand that not everyone sees it as desirable, or even sensible.&lt;/p&gt;&#xA;" OwnerUserId="458" LastEditorUserId="458" LastEditDate="2015-07-10T11:34:04.993" LastActivityDate="2015-07-10T11:34:04.993" CommentCount="14" />
  <row Id="1031" PostTypeId="2" ParentId="1025" CreationDate="2015-07-10T10:49:46.760" Score="2" Body="&lt;p&gt;&lt;a href=&quot;https://gnu.org/gnu/linux-and-gnu&quot; rel=&quot;nofollow&quot;&gt;GNU/Linux&lt;/a&gt; is the name of an OS distribution that uses &lt;a href=&quot;http://kernel.org/&quot; rel=&quot;nofollow&quot;&gt;Linux&lt;/a&gt; as the kernel.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Just using a kernel will not get you anywhere, you need something called the &quot;userland&quot;: an editor, a filesystem, tools of all kinds.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are different variants of the &lt;a href=&quot;http://gnu.org/&quot; rel=&quot;nofollow&quot;&gt;GNU&lt;/a&gt; system that use different kernels. One is GNU/Hurd that uses &lt;a href=&quot;https://www.gnu.org/software/hurd/&quot; rel=&quot;nofollow&quot;&gt;Hurd&lt;/a&gt; as the kernel.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is &lt;a href=&quot;https://gnu.org/gnu/gnu-linux-faq&quot; rel=&quot;nofollow&quot;&gt;an extensive FAQ about this question&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerDisplayName="user490" LastEditorDisplayName="user490" LastEditDate="2015-07-10T10:57:13.510" LastActivityDate="2015-07-10T10:57:13.510" CommentCount="7" />
  <row Id="1034" PostTypeId="2" ParentId="176" CreationDate="2015-07-10T11:16:03.467" Score="2" Body="&lt;p&gt;Some well known licenses (e.g. the GPLs) are included as part of the Debian base installation (in the &lt;code&gt;base-files&lt;/code&gt; package), and are in the directory &lt;code&gt;/usr/share/common-licenses/&lt;/code&gt;. Packages that are licensed under one of those licenses reference the corresponding license location path in the file &lt;code&gt;/usr/share/doc/pkgname/copyright&lt;/code&gt;. I assume this satisfies the licensing requirements; Debian is pretty careful about such things. I don't know if every OS does the same thing, but if it did, it would satisfy the license requirements while still avoiding duplication.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here is an example of the wording used (taken from &lt;code&gt;/usr/share/doc/slrn/copyright&lt;/code&gt;):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;On Debian systems the complete text of the GPL is in&#xA;  /usr/share/common-licenses/GPL-2&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;For completeness, here is a list of the license texts under &lt;code&gt;/usr/share/common-licenses&lt;/code&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Apache-2.0  Artistic  BSD  GFDL  GFDL-1.2  GFDL-1.3  GPL  GPL-1  GPL-2&#xA;  GPL-3  LGPL  LGPL-2  LGPL-2.1  LGPL-3&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I don't know why the list is restricted to these licenses; there are other well-known licenses, like the MIT license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Of course, if you are distributing the source of a program that is licensed under one of these well-known licenses, then the license should be included in the source regardless, but it doesn't need to be included in the corresponding Debian binary package, at least.&lt;/p&gt;&#xA;" OwnerUserId="149" LastEditorUserId="149" LastEditDate="2015-07-10T11:29:43.907" LastActivityDate="2015-07-10T11:29:43.907" CommentCount="0" />
  <row Id="1035" PostTypeId="2" ParentId="1025" CreationDate="2015-07-10T11:40:59.607" Score="43" Body="&lt;p&gt;The &lt;strong&gt;GNU project&lt;/strong&gt; was created to produce a free software alternative to Unix. They were able to produce most of the programs an operating system would provide, but their kernel, the GNU Hurd, was not stable enough to rely upon.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt; is a kernel, the most base level of an operating system, and was created and published under the GNU GPL, a free license. It came to be adopted as the kernel of the GNU OS while the Hurd continued to be developed, but it remains an external project and is not officially part of GNU.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is entirely reasonable to call the combination GNU/Linux as they are two distinct projects paired together. Strictly speaking, Linux by itself is not very useful without all the other software in GNU. But GNU is awkward to pronounce and is a nerdy acronym (but not nearly so nerdy as the double-recursive acronym of &lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_Hurd#Name_and_logo&quot;&gt;Hurd/Hird&lt;/a&gt;). Linux is easier to pronounce and is a more conventionally marketable name (being a short word with no previous meaning.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For better or worse, Linux is now a &lt;a href=&quot;https://en.wikipedia.org/wiki/Metonymy&quot;&gt;metonym&lt;/a&gt; for the whole GNU/Linux OS and greater ecosystem. While it's not ideal that so many people only know the name &quot;Linux&quot; and not the GNU project which provides most of what they use, the reality is that language is incredibly hard to shift once it has settled, and I personally don't anticipate the situation ever changing. Let's educate people about the GNU OS, but let's not make a fuss if our grandparents (or grandchildren, depending on who you are) don't get the distinction.&lt;/p&gt;&#xA;" OwnerUserId="190" LastEditorUserId="190" LastEditDate="2015-07-10T11:48:21.767" LastActivityDate="2015-07-10T11:48:21.767" CommentCount="6" />
  <row Id="1036" PostTypeId="2" ParentId="1021" CreationDate="2015-07-10T12:27:55.527" Score="9" Body="&lt;p&gt;Another important consideration is whether you have accepted any contributions from other people into your project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If anyone has submitted a pull request, and you have pulled in their changes (either to fix bugs, or add enhancements) but didn't get them to sign a &lt;a href=&quot;http://oss-watch.ac.uk/resources/cla&quot;&gt;Contributor Licence Agreement&lt;/a&gt;, then they hold copyright on part of your code, and you will need to get their agreement before re-licensing your project (or you will need to remove their contribution).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;More than one open source project has fallen apart because the current guardians have been unable to contact some of the contributors and have thus been unable to secure the agreement of all copyright holders for an essential change.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If only you have ever contributed to the project, then you hold the copyright on the entire project and can fork it or &lt;a href=&quot;https://en.wikipedia.org/wiki/Multi-licensing&quot;&gt;multi-license&lt;/a&gt; as you wish.&lt;/p&gt;&#xA;" OwnerUserId="610" LastActivityDate="2015-07-10T12:27:55.527" CommentCount="0" />
  <row Id="1037" PostTypeId="2" ParentId="1021" CreationDate="2015-07-10T12:32:26.487" Score="11" Body="&lt;p&gt;The other answers are good but don't acknowledge another consideration that bears mentioning:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You state in your question you've written a program, but if you've &lt;em&gt;ever&lt;/em&gt; assimilated contributions from other people into your program, relicensing becomes more tricky.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Broadly, you may not have the licence to license their work under another licence. &lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I can't relicense your GPLv2 program under MIT, which is what you intended when you picked the GPLv2 licence.&lt;/li&gt;&#xA;&lt;li&gt;Equally, you can't relicense my GPLv2 contributions to your program under GPLv3, as I have only granted you the rights to redistribute my work under GPLv2.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;If you had your contributors sign a valid &lt;a href=&quot;http://oss-watch.ac.uk/resources/cla&quot;&gt;Contributor License Agreement&lt;/a&gt;, you are free to relicense as this grants you the ability to re-license the submitted code.&lt;/p&gt;&#xA;" OwnerUserId="611" LastActivityDate="2015-07-10T12:32:26.487" CommentCount="2" />
  <row Id="1039" PostTypeId="1" AcceptedAnswerId="1040" CreationDate="2015-07-10T13:12:16.107" Score="3" ViewCount="94" Body="&lt;p&gt;In my case we developed several software components that work together to build the final system. Now I want to release my developments under the GPLv3 license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When checking the dependencies I discovered that there are some static links to other components that are required to provide a runnable implementation. Unfortunately these source code packages are not open source and therefore cannot be published.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Do any methods exist to solve such a situation in which components of a framework are to be published but are closely linked to others that cannot be made available in a public repository?&lt;/p&gt;&#xA;" OwnerUserId="399" LastEditorUserId="168" LastEditDate="2015-07-10T13:54:38.003" LastActivityDate="2015-07-10T14:01:25.323" Title="What to do if a software component to be published under open source license is linked with other components that are not open source?" Tags="&lt;project-management&gt;&lt;gpl-3&gt;&lt;proprietary-code&gt;&lt;linked-libraries&gt;" AnswerCount="1" CommentCount="6" />
  <row Id="1040" PostTypeId="2" ParentId="1039" CreationDate="2015-07-10T13:20:42.887" Score="4" Body="&lt;p&gt;There is no way to combine non-free code components with free software with a copyleft license. The reason is that any such combination will be a derivative work of both, and since the terms are mutually incompatible, that would be illegal.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This follows directly from text of the GPL (the quote below is from GPL version 2), but similar language is in GPL version 3:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The &quot;Program&quot;, below, refers to any such program or work, and a &quot;work based on the Program&quot; means either the Program or any &lt;em&gt;derivative work under copyright law&lt;/em&gt;. (my emphasis).&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Please note that copyright law does not deal with computer science technicalities such as various methods of linking, a derivative work is a work that &lt;em&gt;depends&lt;/em&gt; on another work, and cannot exist without that other work being present. It is this &lt;em&gt;functional dependency&lt;/em&gt; that makes the composite a derivative, and not the method used to combine the components.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is also made clear by the FSF in the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-faq.en.html#GPLStaticVsDynamic&quot; rel=&quot;nofollow&quot;&gt;GPL FAQ&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Does the GPL have different requirements for statically vs dynamically linked modules with a covered work? (#GPLStaticVsDynamic)&lt;/strong&gt; &lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;No. Linking a GPL covered work statically or dynamically with other modules is making a combined work based on the GPL covered work. Thus, the terms and conditions of the GNU General Public License cover the whole combination.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;(As always, Wikipedia can be relied upon &lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_General_Public_License#Linking_and_derived_works&quot; rel=&quot;nofollow&quot;&gt;to confuse matters&lt;/a&gt;. However, the FSF FAQ is written by lawyers, the Wikipedia is written by anybody that has an opinion about something.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What you need to do is to develop free replacements for all the non-free components.  This has been done in several FLOSS projects in the past.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-10T14:01:25.323" LastActivityDate="2015-07-10T14:01:25.323" CommentCount="1" />
  <row Id="1043" PostTypeId="1" AcceptedAnswerId="1044" CreationDate="2015-07-10T16:17:15.870" Score="13" ViewCount="386" Body="&lt;p&gt;The question &lt;a href=&quot;http://opensource.stackexchange.com/questions/627/do-you-need-a-degree-to-become-an-open-source-developer&quot;&gt;Do you need a degree ...&lt;/a&gt; was closed as off-topic as it clearly applied to any area of development, not specifically open/free content development.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This question is a re-framing, but very specifically from the open/free side. However, some background is required to properly do so.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;At the time I completed high school, degrees in software engineering (as opposed to computer science) were few and far between. After taking a brief - privately run - course, I was easily able to get hired as a programmer. No interviewer even questioned my lack of degree - they were more interested in what I could &lt;strong&gt;do&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That has all changed today. Here in California, a degree of any kind is considered necessary to even begin searching for a job - and not just in software. I know many people with degrees in business or marketing filling posts we would once have considered 'menial'. It is a standing joke here that the University of California will soon be offering a Bachelors of Retail Science to help people get work as checkout operators at supermarkets - and that the supermarkets will then demand applicants have this degree.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, focusing on creative domains such as software engineering and the arts, the open/free content movement appears to have no such barrier to entry.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Are there indications that this movement is opening the way for &quot;unqualified&quot; people to find positions in their respective industry?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Possible sub-questions:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Are there statistics about the average age of contributors to major open projects?&lt;/li&gt;&#xA;&lt;li&gt;Similarly for their qualifications?&lt;/li&gt;&#xA;&lt;li&gt;Are there well known examples of non-degreed people moving from the open world into professional positions on the strength of their published work?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;In short, can an early dedication to open/free content creation help you bypass the cost of a University education? Does this increase the equality of opportunity for the less well off?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;EDIT:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Lest people think my comment about the California job market is just an urban myth, vague feelig, or localized phenomenon, see this quote&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The Bureau of Labor Statistics projects that total employment is expected to increase by 20.5 million jobs from 2010 to 2020, with 88 percent of detailed occupations projected to experience employment growth. In the midst of all this, jobs requiring a master’s degree are expected to grow the fastest, while those requiring a high school diploma will experience the slowest growth over the 2010- 20 time frame.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;From the article &lt;a href=&quot;http://www.reviewjournal.com/news/education/2018-60-percent-job-openings-will-require-college-education&quot; rel=&quot;nofollow&quot;&gt;By 2018, 60 percent of job openings will require college education&lt;/a&gt;. The article itself is not a primary source but it cites (or at least quotes) BLS statistics and reports to support the headline.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Further &lt;em&gt;The Economist&lt;/em&gt; devoted a large part of its &lt;a href=&quot;http://www.economist.com/printedition/2015-01-24&quot; rel=&quot;nofollow&quot;&gt;January 24, 2015 Edition&lt;/a&gt; to issues surrounding college education, its social and financial costs, and the growing gap in equality of opportunity.&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="29" LastEditDate="2015-07-16T16:45:46.107" LastActivityDate="2015-07-22T17:59:47.357" Title="Does the open/free content movement lower the barriers of entry for non-qualified people?" Tags="&lt;development&gt;&lt;accessibility&gt;" AnswerCount="2" CommentCount="4" FavoriteCount="3" />
  <row Id="1044" PostTypeId="2" ParentId="1043" CreationDate="2015-07-10T17:05:49.567" Score="9" Body="&lt;p&gt;Historically, many people have become professionals in coding without benefit of a degree, your perception of the California job market notwithstanding. A CEO whom I know well, amongst many others of my middle-aged peers, is an example.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When I hire people, I put a lot of emphasis on 'portfolio', and I know that I'm not alone. Open source is certainly &lt;em&gt;convenient&lt;/em&gt; for this, but it didn't exist when many of my peers were launching their careers sans degree. So I don't see how it's possible to quantify the incremental effect of open source. It's entirely possible to create a portfolio on github.com entirely of one's own work, with no collaboration with open source projects.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In any case, there's a catch-22 that applies to your thesis. You have to &lt;em&gt;know how to do useful work&lt;/em&gt; to contribute to an open source project. It's hard to do that without either studying the subject or getting yourself hired by someone who will teach you. But, if you do manage to teach yourself to the point of obtaining real skill, chances are that you can get a job whether or not you have ever submitted a patch to an open source project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In my time contributing to open source projects, I've never seen any evidence that anyone met your profile of bootstrapping themselves this way. Of course, no one has to reveal this. Or reveal their age, which would make it rather difficult to answer some of your other questions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Every few months, someone shows up at the Apache Software Foundation wanting to do a study or survey to learn something about who is involved in open source projects. If I had $10 for each such thing I've participated, I could buy a new camera. I can't tell you whether any of this has led to publication-quality research, but &lt;a href=&quot;http://arxiv.org/&quot; rel=&quot;nofollow&quot;&gt;arxiv&lt;/a&gt; might yield something.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Examples:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.researchgate.net/publication/264799596_Understanding_the_motivations_participation_and_performance_of_open_source_software_developers_A_longitudinal_study_of_the_Apache_projects&quot; rel=&quot;nofollow&quot;&gt;Understanding the motivations, participation, and performance of open source software developers: A longitudinal study of the Apache projects&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;or &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://search.arxiv.org:8081/paper.jsp?r=1006.1244&amp;amp;qid=1436549350892mix_nCnN_-2127026584&amp;amp;qs=open+source+participation+apache&quot; rel=&quot;nofollow&quot;&gt;Exploring the Impact of Socio-Technical Core-Periphery Structures in Open Source Software Development&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="554" LastEditorUserId="554" LastEditDate="2015-07-11T11:22:09.450" LastActivityDate="2015-07-11T11:22:09.450" CommentCount="1" />
  <row Id="1045" PostTypeId="2" ParentId="1043" CreationDate="2015-07-10T17:08:02.097" Score="8" Body="&lt;p&gt;First: nice question!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Degrees are looked upon as a fairly standardised measure of your ability in the subject you study. Employers look for them because they indicate (in theory) that this person is capable of doing the job they claim they can do. In today's fast-moving world, where you need this new hire &lt;em&gt;last week&lt;/em&gt;, they're useful in being able to say &quot;this person has a better degree; they should be able to do a better job.&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That's not to say that you &lt;em&gt;can't&lt;/em&gt; get a job without a degree. If you can instead demonstrate to an employer that you have just as much education and capability as another candidate, you're still a strong contender. The problem with doing this is that it's hard to have something that demonstrates this as quickly and concisely as saying &quot;I have a top degree in software from MIT.&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That leads nicely onto the actual question: &lt;strong&gt;can good content creation help you bypass university education?&lt;/strong&gt; Yes, it can. However, it does have some problems:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;It requires more time from the recruiter to review (time = money);&lt;/li&gt;&#xA;&lt;li&gt;It's not as standardised. I remember seeing a question on Programmers.SE about a recruiter thinking self-taught candidates don't know programming concepts like Big O notation;&lt;/li&gt;&#xA;&lt;li&gt;It's hard to compare. Is good content creation a better indicator of proficiency than a degree? (Opinion: yes, but I'll just throw that out there).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;The other thing to note about this phenomenon is the reason for it. With creative professions, it's easier to gather together a showcase of &quot;work wot i 'ave done&quot; and show it to an employer. If you want a job at a cash register, you can't really bring another cash register that you worked on previously to tell your employer how good you are.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-07-10T17:08:02.097" CommentCount="0" />
  <row Id="1047" PostTypeId="2" ParentId="807" CreationDate="2015-07-10T19:36:40.753" Score="-1" Body="&lt;p&gt;transifex is an open source translation platform; they do have a free account, so it is open to some extent.&lt;br&gt;&#xA;&lt;a href=&quot;https://www.transifex.com/&quot; rel=&quot;nofollow&quot;&gt;https://www.transifex.com/&lt;/a&gt;&lt;br&gt;&#xA;ckan utilizes it:&lt;br&gt;&#xA;&lt;a href=&quot;http://docs.ckan.org/en/943-writing-extensions-tutorial/i18n.html&quot; rel=&quot;nofollow&quot;&gt;http://docs.ckan.org/en/943-writing-extensions-tutorial/i18n.html&lt;/a&gt;&lt;br&gt;&#xA;mozilla does too &lt;/p&gt;&#xA;&#xA;&lt;p&gt;i recommend also poking around in internationalization and accessibility forums (w3c, mozilla, wikimedia foundation, etc.), as well as open access, and closed captioning communities.  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;google translator ceased being open source, but bing's is still open, although again, open limits your capabilities:&lt;br&gt;&#xA;&lt;a href=&quot;http://www.microsoft.com/translator/getstarted.aspx&quot; rel=&quot;nofollow&quot;&gt;http://www.microsoft.com/translator/getstarted.aspx&lt;/a&gt;  &lt;/p&gt;&#xA;" OwnerUserId="30" LastActivityDate="2015-07-10T19:36:40.753" CommentCount="2" />
  <row Id="1048" PostTypeId="2" ParentId="976" CreationDate="2015-07-10T19:41:52.223" Score="2" Body="&lt;p&gt;Yes there are studies. Many studies.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here are links to two:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.hindawi.com/journals/isrn/2014/535724/&quot; rel=&quot;nofollow&quot;&gt;Understanding Contributor to Developer Turnover Patterns in OSS Projects: A Case Study of Apache Projects&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://faculty.poly.edu/~onov/Oreg_Nov_CHB_2008_published.pdf&quot; rel=&quot;nofollow&quot;&gt;Exploring motivations for contributing to&#xA;open source initiatives: The roles of&#xA;contribution context and personal values&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;There seems to be a steady stream of sociologists who find this question interesting, and run surveys, and write papers. They show up at the ASF quite regularly.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To stave off 'link only' complaints: project vary &lt;em&gt;drastically&lt;/em&gt; in the barriers they set to new contributors. There is really no general statement to be made here; you need to study a project for yourself to get an indication of the situation.&lt;/p&gt;&#xA;" OwnerUserId="554" LastEditorUserId="8" LastEditDate="2015-08-01T13:48:44.907" LastActivityDate="2015-08-01T13:48:44.907" CommentCount="4" />
  <row Id="1049" PostTypeId="2" ParentId="1025" CreationDate="2015-07-10T20:49:52.283" Score="15" Body="&lt;h1&gt;Linux vs. GNU/Linux&lt;/h1&gt;&#xA;&#xA;&lt;h2&gt;Terminology and History-in-Brief&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;In common usage, the terms &lt;code&gt;Linux&lt;/code&gt; and &lt;code&gt;GNU/Linux&lt;/code&gt; &lt;strong&gt;IPA: &lt;em&gt;/ɡəˈnuː slæʃ ˈlɪnəks/&lt;/em&gt;&lt;/strong&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/GNU/Linux_naming_controversy&quot;&gt;†&lt;/a&gt; [though often said &lt;em&gt;sans&lt;/em&gt; 'slash', the FSF recommendation is to pronounce it] refer to the same thing: the software distribution running on a computer that includes &lt;code&gt;Linux&lt;/code&gt;, the operating-system kernel, consisting of low-level functionality and &lt;i&gt;drivers&lt;/i&gt; that operate the essential devices in a computer and are necessary for its operation, as well as operating-system-specific functionality such as creation of &lt;i&gt;processes&lt;/i&gt; and determining the &lt;i&gt;scheduling&lt;/i&gt; of when those processes will run, among many other things. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;code&gt;Linux&lt;/code&gt; kernel initially made functional, and was made functional by, the software tools that were created under the GNU project by the Free Software Foundation (FSF) specifically in order to drive development of software for an 'operating system' (loosely speaking) that would not be be bound by the restrictions of the then-dominant propriety system of the day, UNIX, which restricted those who wanted to do various things such as see the source code of, write modifications to, build other software upon, or share new code that was based upon, other code that was held under a proprietary license. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Richard Stallman, head of the Free Software Foundation, &lt;a href=&quot;http://www.gnu.org/gnu/linux-and-gnu.en.html&quot;&gt;argues that there are many reasons to prefer the name &lt;code&gt;GNU/Linux&lt;/code&gt;&lt;/a&gt; as the name of the operating system as a whole, although the debate has been &lt;a href=&quot;https://en.wikipedia.org/wiki/GNU/Linux_naming_controversy&quot;&gt;long and, at times, contentious.&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Current Linux-Based Software Distributions&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Currently, &lt;code&gt;Linux&lt;/code&gt; is combined with additional drivers, other low-level software, additional, higher-level support software, and innumerable other frameworks and applications; filling the gamut in licensing—from public domain to proprietary, much of it meeting the definition of 'open-source' put forth by the Open Source Initiative (OSI) which maintains a list license that are both free, and that do not have any conflicts with other free licenses, as there were some issues with incompatibilities in the past.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Depending on which of the many available distributions you choose (or you can even roll-your-own, obtaining all the source code, and building it all from scratch!) there can be upwards of hundreds, or even many thousands of additional bits of code as well, all including software from diverse sources.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For instance, most desktop systems will have &lt;a href=&quot;http://www.x.org/wiki/&quot;&gt;X.org&lt;/a&gt; which you might call a 'kernel for the graphics subsystem' (i.e. it provides the basic functionality needed for any windowed desktop), and probably &lt;a href=&quot;https://en.wikipedia.org/wiki/GTK%2B&quot;&gt;GTK+ (the GIMP toolkit)&lt;/a&gt; and I could go on... Then you'll have something on top like the &lt;a href=&quot;https://www.kde.org/&quot;&gt;K Desktop Environment (KDE)&lt;/a&gt;, or perhaps &lt;a href=&quot;https://www.gnome.org/&quot;&gt;Gnome&lt;/a&gt;, or &lt;a href=&quot;http://lxde.org/&quot;&gt;Lightweight X11 Desktop Environment (LXDE)&lt;/a&gt;, or one of many others. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;It's going to be hard to run a windowed desktop system without any of this, and only a very small part of it is GNU software, and it's quite arguable that a lot of it still could be called part of the 'operating system' as it is used in common speaking. &lt;/p&gt;&#xA;&#xA;&lt;h2&gt;What &lt;i&gt;Should&lt;/i&gt; It Be Called&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Hey, I don't know. I always just say: &quot;I am running... &lt;sub&gt;&lt;sup&gt;Windows&lt;/sup&gt;&lt;/sub&gt;.&quot;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Seriously, though: let's talk about which term we are really talking about. Are we talking about how it is used in common speech? Or are we talking about the term as it is used in computer science? &lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Computer Science Term&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;[NOTE: I see there is debate about this issue; this is how I understood and learned the term]&lt;/sup&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Well, as a Computer Science Term, I don't think GNU has a case at all. Linux is the operating system. It provides all the basic functionality to operate the computer, and it does the process scheduling and provides resources to the applications. I don't know all the system internals of Linux so I can't say 100% that there is no overlap between what an operating system traditionally is thought of as doing and what the GNU tools do, but as far as I understand it, in general; well, GNU just doesn't &lt;em&gt;do&lt;/em&gt; any of that. &lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Common Term&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Speaking in common, everyday terms, you wouldn't argue that someone saying they run the 'Windows Operating System' means they are running the Windows NT kernel and a few subsystems, and that they aren't referring to Win32 and all the rest. Clearly most people don't make that distinction. So why would we make it here? And, I don't think I'm going to start calling my Linux OS choice 'GNU/Linux/X.org/GTK+/KDE' either. And, for that matter, if I &lt;em&gt;were&lt;/em&gt; to tack on GNU, I would call it: Linux/GNU. But I wouldn't.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In fact, what I call my *n-x OS (I have quite a few VMs), is by its &lt;em&gt;distribution&lt;/em&gt;, version, and kernel type; which would determine both where the hard work was done (picking the packages, dealing with incompatibilities, patching things, etc.) and the thing that determines the ABI (application binary interface for executables). In other words, it's enough information that I could replicate that environment sufficiently to find other applications that would run under it. Well, at least it would &lt;em&gt;likely&lt;/em&gt; be enough; assuming I knew a bit more, like what type of machine it was running on.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;GNU both &lt;em&gt;was&lt;/em&gt; and &lt;em&gt;is&lt;/em&gt; important and I don't want anyone to forget that. But as far as I am concerned, it doesn't belong in the title to my OS. But the thing is, I'm not arguing that it doesn't belong in &lt;em&gt;yours&lt;/em&gt;. It's actually kind of irrelevant; just make sure whoever you are talking to understands you and in this case, you can use the two terms interchangeably in common speech. &lt;/p&gt;&#xA;" OwnerUserId="638" LastEditorUserId="69" LastEditDate="2015-07-12T14:59:39.213" LastActivityDate="2015-07-12T14:59:39.213" CommentCount="6" />
  <row Id="1051" PostTypeId="2" ParentId="810" CreationDate="2015-07-10T23:29:37.237" Score="2" Body="&lt;p&gt;You can build up your own business as a self employed contractor. You won't really be working only &lt;strong&gt;&lt;em&gt;on&lt;/em&gt;&lt;/strong&gt; FLOSS projects, but you can easily limit yourself to working only &lt;strong&gt;&lt;em&gt;with&lt;/em&gt;&lt;/strong&gt; FLOSS project&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If your expenses are low you don't need much money in the beginning.&lt;/li&gt;&#xA;&lt;li&gt;You can gradually raise your rates and get more clients.&lt;/li&gt;&#xA;&lt;li&gt;Most of the code written is not directly useful for others. Many clients will be ok with you releasing parts of your work under a free license (especially patches with bug fixes, but sometimes also new features). It's usually easy to explain to your clients that it's in their own long-term interest to have patches go upstream.&lt;/li&gt;&#xA;&lt;li&gt;It's probably wise to not limit your skill set to one software project and/or one programming language.&lt;/li&gt;&#xA;&lt;li&gt;It's okay to make small exceptions. I personally dislike working with Windows, but if it's to help a client migrate or to implement an open source system it makes it much easier to swallow. (Cygwin helps.)&lt;/li&gt;&#xA;&lt;li&gt;Build up your network, in real life and online: non-free networks like GitHub, Stackoverflow and Linkedin can be very useful.&lt;/li&gt;&#xA;&lt;li&gt;Bonus: pick up some skills not immediately related to software, e.g. graphic design, marketing, legal knowledge. (You can also use these skills to further the cause of free software. Demand is high and supply low, within the free software community.)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="648" LastEditorUserId="648" LastEditDate="2015-07-11T10:35:37.857" LastActivityDate="2015-07-11T10:35:37.857" CommentCount="1" />
  <row Id="1052" PostTypeId="2" ParentId="1025" CreationDate="2015-07-10T23:31:15.330" Score="3" Body="&lt;p&gt;It's easiest to understand by looking at other libc/kernel pairs.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, I know that there are people who run:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;gnu/linux&lt;/li&gt;&#xA;&lt;li&gt;musl/linux&lt;/li&gt;&#xA;&lt;li&gt;gnu/kfreebsd&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="650" LastActivityDate="2015-07-10T23:31:15.330" CommentCount="0" />
  <row Id="1053" PostTypeId="2" ParentId="993" CreationDate="2015-07-10T23:55:14.837" Score="2" Body="&lt;p&gt;Besides forks as @kdopen said, the &quot;upstream&quot; terminology also applies to Linux distributions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In this case, the &quot;upstream&quot; is the actual developer of the project and the &quot;downstream&quot; is the packager. Distros have to add the packaging scripts and sometimes have to patch build scripts or source files; these are all sent downstream but only some are sent upstream.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There can even be multiple levels, e.g. an Ubuntu package based on a Debian package of a fork of a project (libjpeg-turbo for example).&lt;/p&gt;&#xA;" OwnerUserId="650" LastActivityDate="2015-07-10T23:55:14.837" CommentCount="0" />
  <row Id="1054" PostTypeId="2" ParentId="1012" CreationDate="2015-07-11T02:30:33.047" Score="4" Body="&lt;p&gt;I think the basic principle is universal and applies to movies as well as to software: make sure everyone can have everything you used to produce the release.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the editing process, soundtrack will be combined with the video, some interviews may stay unused, some footage may be cut short etc. To produce an alternative version it would be convenient to have the music in separate audio files and it would be necessary to have the original unedited footage.&#xA;It's also a good idea to provide the original project files for video editors you are using.&lt;/p&gt;&#xA;" OwnerUserId="652" LastActivityDate="2015-07-11T02:30:33.047" CommentCount="2" />
  <row Id="1055" PostTypeId="2" ParentId="1012" CreationDate="2015-07-11T04:06:52.313" Score="2" Body="&lt;p&gt;On the technical side: pretend that the motherboard on your old computer died. You just got a new computer and you want to create a director's cut of your documentary. What do you need to copy over from your old hard drive? That questions should really help to guide you. You're obviously not going to recreate something that you can just drag and drop. So for someone else to be able to do the same, they would need access to all of the items that you just copied over. One thing people sometimes miss is editable pictures. A PNG is great but if you have a GIMP file with a bunch of layers, that GIMP file will allow you to easily change the final PNG. That is part of your &quot;source.&quot; Also, don't forget your audio and video mixing project files. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;On the legal side (&lt;a href=&quot;https://en.wikipedia.org/wiki/IANAL&quot; rel=&quot;nofollow&quot;&gt;IANAL&lt;/a&gt;): make sure that all of your source material allows modified and unmodified redistribution. Make sure that it also allows combination with other media (that may be under a different license!). &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Regarding the comment referenced in the question: The first two points in the comment relate to whether or not you have authorship rights over the material. If you do (i.e. the actors/subjects have given their consent for you to use the footage however you please; presumably they have if you've made clear your intent to create an open source documentary) then you can assign whatever license you want to it. See above paragraph. If you do not, then you presumably aren't using that footage for your film anyway so it's not part of your &quot;source,&quot; so no problem. The second two points are items that are not part of your &quot;source&quot; since you're presumably not going to include junk footage in your final film. You can distribute or not distribute it, doesn't really matter either way. Hope that helps!&lt;/p&gt;&#xA;" OwnerUserId="192" LastEditorUserId="192" LastEditDate="2015-07-11T07:25:52.130" LastActivityDate="2015-07-11T07:25:52.130" CommentCount="2" />
  <row Id="1056" PostTypeId="2" ParentId="1012" CreationDate="2015-07-11T10:11:43.020" Score="1" Body="&lt;p&gt;On the surface it seems open sourcing documentaries is not difficult. Just put it under the right license and publish. But there are some problems to it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;First the thing you have to do with all things, if you want to open source them: release also the source. For an documentation this means the raw shootings without color and brightness adjustments you made later and without extra audio tracks like music you put in the background. The music you put in the background should be also available in the sources, but separated. Probably source material for animations or graphs you put into the movie. For all parts you need the consent of all contributors to make their part of the work open source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But that is not all. You have to consider that more than just copyright influences restrictions on creative works. In many area of work much of them doesn't matter, but documentaries touch some of them. And all naturally depends on the exact law in the jurisdiction you live in (or the one you shoot the movie).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One is discussion in the european union at this point. A new proposal is discussed by some under the angle that it might restrict the freedom of panorama in the european union. &lt;a href=&quot;https://en.wikipedia.org/wiki/Freedom_of_panorama&quot; rel=&quot;nofollow&quot;&gt;Freedom of panorama&lt;/a&gt; means you can photograph or film stuff that is owned or copyrighted by others as long as this is in public places and include it in your publication. That includes buildings. If that is allowed or not &lt;a href=&quot;https://upload.wikimedia.org/wikipedia/commons/2/22/Freedom_of_Panorama_world_map.png&quot; rel=&quot;nofollow&quot;&gt;is different in different jurisdiction&lt;/a&gt; (and may change over time as the example of the european union shows). Such consideration alone can make it nearly impossible to shoot footage in a city.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you shoot it on non-public places Freedom of Panorama doesn't work, that can even hit you in surprising ways. For example, I live in Potsdam. We a historic park, &lt;a href=&quot;https://en.wikipedia.org/wiki/Sanssouci_Park&quot; rel=&quot;nofollow&quot;&gt;Sanssouci Park&lt;/a&gt;. That park can everyone go to, but it is not officially public, as it is owned and attended by a foundation. That foundation made news, as it sued different photographers for taking pictures in the park and selling the photographs. Many aren't aware that the freedom of panorama isn't working in the park, as the photos in the Wikipedia demonstrate.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Even if you try to get consent from the owners, it will be more difficult for open source movies. Because it includes that everyone can redistribute or alter the images. Many that might be OK with a one-time publication might have reservations against the open source rules.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But there is another problematic part. Think, you make an interview with someone and include it in your documentary. If that is open source, the license allows everyone to change it. That means, malicious people could synchronize other texts to the persons sayings and therefore completely alter what he/she said. That usually is prevented by &lt;a href=&quot;https://en.wikipedia.org/wiki/Personality_rights&quot; rel=&quot;nofollow&quot;&gt;Personality rights&lt;/a&gt;. Again, these laws can be very different in different jurisdictions. But usually you cannot alter footage to denigrate someone on these footage. As you basically cannot prevent this, you should add a disclaimer, saying that some changes that might be allowed by open source might still be illegal and declare that you have no influence onto other alterations of your work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To address what Philipp said in his &lt;a href=&quot;http://opensource.stackexchange.com/questions/1012/how-do-i-ensure-my-documentary-adheres-to-open-source-principles-as-closely-as-p#comment1693_1012&quot;&gt;comment on the question&lt;/a&gt;, I would add that this is a smaller problem. Sure, everyone can change your documentary and the result isn't telling the truth anymore. That is right, but at the same time the derivate isn't exactly your documentary anymore, and we should be accustomed to the fact, that others don't always tell the/our truth.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the end, the safest way to make an open source documentation might be shooting animals in the wilderness.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-07-11T10:11:43.020" CommentCount="0" />
  <row Id="1057" PostTypeId="1" CreationDate="2015-07-11T11:03:50.543" Score="2" ViewCount="171" Body="&lt;p&gt;I've read somewhere that Emacs was important for the development of the idea of Free Software. How can that be if it's just a piece of software? Or is there more to it?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is even a &lt;a href=&quot;http://www.gnu.org/fun/jokes/gospel.html&quot; rel=&quot;nofollow&quot;&gt;church of Emacs&lt;/a&gt;. Additionally, Emacs is also part of &lt;a href=&quot;https://www.cs.utah.edu/~elb/folklore/afs-paper/node6.html&quot; rel=&quot;nofollow&quot;&gt;hacker folklore&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="168" LastEditDate="2015-07-11T14:12:07.540" LastActivityDate="2015-07-11T18:46:04.020" Title="What is the influence/significance of Emacs to the Free Software Movement?" Tags="&lt;history&gt;" AnswerCount="2" CommentCount="2" />
  <row Id="1058" PostTypeId="2" ParentId="450" CreationDate="2015-07-11T11:55:52.400" Score="1" Body="&lt;p&gt;I'm not too sure if you're thinking of competition from other companies or from individuals producing their own parts, but it doesn't make too much difference really. Just because the designs are open source doesn't mean everyone will prefer to make the parts than buy them.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Hobby 3D printers and CNC milling are of much lesser quality than professional/industrial machines&lt;/li&gt;&#xA;&lt;li&gt;Even if you were happy with lesser quality, such machines require a lot of specific knowledge that most end users of the parts won't have and won't be willing to spend the time learning&lt;/li&gt;&#xA;&lt;li&gt;And there is a large upfront cost in these machines. Whether it's open source or not, larger volumes scale better&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;If your business has the equipment, trained personnel, good quality assurance processes and a head start, it's likely that you'll be able to maintain a profitable business for some time. As an example, I think Tesla were talking about licensing their batteries etc. for free (this involves patents rather than copyright, but it's still a decent parallel). So sure, anyone could make those components. But there will not be many people who could start a successful competitor to Tesla before those components are obsolete, and the size of the market is so large that those who do will be very unlikely to hurt Tesla at all.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Opening your hardware designs ensures that if your business goes bust that the innovations you have will not be lost, and it allows them to be brought now to markets you can't compete in. If the international shipping costs for your product are prohibitive but you have no desire to manage many international production factories, then opening your designs allows others to start producing the products for the international market so that more people can benefit from your amazing product.&lt;/p&gt;&#xA;" OwnerUserId="190" LastActivityDate="2015-07-11T11:55:52.400" CommentCount="5" />
  <row Id="1059" PostTypeId="1" CreationDate="2015-07-11T12:05:34.680" Score="4" ViewCount="398" Body="&lt;p&gt;Cooking recipes are often used to explain novice programmers about the concept of algorithms. There are some basic similarities to these two. So I ask myself, if there are open source programs, are there open source recipes? And if not, why not?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="168" LastEditDate="2015-07-11T14:04:14.337" LastActivityDate="2015-07-11T15:15:02.657" Title="Do open source cooking recipes exist?" Tags="&lt;licensing&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="1" />
  <row Id="1060" PostTypeId="2" ParentId="1059" CreationDate="2015-07-11T12:33:34.910" Score="2" Body="&lt;p&gt;Yes, there are open source cooking recipes. One example that is heavily in use is the microformat hrecipe. When used on websites, it not only declares the recipe in the markup, but makes it easily scrapeable for reuse.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A recipe I recently became aware of is open source cola. Just like the name suggests,  it is the open source version (of one flavor) of soft drinks, and it stands out in contrast to its cousin, the king of proprietary closed recipes, coca-cola. You can read more &lt;a href=&quot;https://en.wikipedia.org/wiki/Open-source_cola&quot; rel=&quot;nofollow&quot;&gt;on Wikipedia&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="30" LastEditorUserId="69" LastEditDate="2015-07-11T15:15:02.657" LastActivityDate="2015-07-11T15:15:02.657" CommentCount="0" />
  <row Id="1061" PostTypeId="2" ParentId="1025" CreationDate="2015-07-11T12:41:18.550" Score="11" Body="&lt;p&gt;It's to distinguish GNU/Linux from other operating environments built on Linux. Each of the following environments combines Linux proper, which is a kernel, with a different &quot;userland&quot;, or set of userspace programs and libraries. In rough order of appearance:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;GNU/Linux&lt;/strong&gt; is a fairly complete clone of the functionality of the UNIX system. Desktop and server apps designed for UNIX are more likely to require a full-featured C library and core utilities, and the popular choice for this is GNU, maintained by the Free Software Foundation. On desktop machines, it also generally involves installing X.Org X11.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Embedded Linux&lt;/strong&gt; is a lightweight userland seen in appliances such as home network gateways, televisions, and the like. It typically uses a lightweight C library, such as Newlib or uClibc, and commonly uses BusyBox as its shell and core utilities.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Android&lt;/strong&gt; is a userland commonly seen on mobile phones and tablet computers. It uses Google Bionic as the C library. The &lt;a href=&quot;https://www.gnu.org/gnu/gnu-linux-faq.html#linuxsyswithoutgnu&quot;&gt;GNU/Linux FAQ&lt;/a&gt;, published by FSF, uses Android as an example of a Linux-based environment that is not GNU/Linux.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;These are not hard distinctions. Once Android was released, some embedded Linux enviroments began to use Bionic, as Chris Stratton mentioned in an &lt;a href=&quot;http://stackoverflow.com/a/16944647/2738262&quot;&gt;answer to &quot;Alternative to Newlib?&quot;&lt;/a&gt;. It's also possible to take bits and pieces from GNU, such as GCC and Binutils, and use them atop an Android system, embedded system, or even a system that doesn't use Linux at all. DJGPP and MinGW are notable distributions of GCC for Microsoft operating systems. Many of us are also familiar with Cygwin, a UNIX-compatibility layer for Windows that is based on GNU. Its name originally stood for &quot;Cygnus GNU/Windows&quot;. And for a while, Debian was even building a GNU system atop the kernel of FreeBSD, resulting in &quot;Debian GNU/kFreeBSD&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;FSF &lt;a href=&quot;https://www.gnu.org/gnu/gnu-linux-faq.html#howmuch&quot;&gt;declines to clarify how much&lt;/a&gt; of the GNU system qualifies an operating environment to take the &quot;GNU/&quot; label. But as a &lt;a href=&quot;https://pineight.com/mw/?title=GNU/Linux#The_name&quot;&gt;rule of thumb&lt;/a&gt;, I have applied the &quot;GNU/&quot; label to systems that contain GNU Core Utilities plus two of Bash, GNU Emacs, GCC, or a shared GNU C Library (glibc). &lt;/p&gt;&#xA;" OwnerUserId="548" LastActivityDate="2015-07-11T12:41:18.550" CommentCount="0" />
  <row Id="1062" PostTypeId="2" ParentId="1059" CreationDate="2015-07-11T12:42:50.037" Score="7" Body="&lt;p&gt;Many recipes are &lt;a href=&quot;http://www.copyright.gov/fls/fl122.html&quot;&gt;not actually copyrightable&lt;/a&gt;. Now a particular written form of a recipe may be, as would the formatting and accompanying photos of a recipe book, but a list of ingredients is not.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;(I'm not sure when a recipe would become copyrightable. Maybe lists of ingredients never will be, but the steps to combine them are? This would be a good question for the Law SE site.)&lt;/p&gt;&#xA;" OwnerUserId="190" LastActivityDate="2015-07-11T12:42:50.037" CommentCount="0" />
  <row Id="1063" PostTypeId="2" ParentId="1057" CreationDate="2015-07-11T13:03:34.863" Score="4" Body="&lt;p&gt;I can offer a bit of history.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Once upon a time, there was TECO, a supercharged relation to what you might know, today, as 'ed'. Folks built a set of macros for teco that knew how to use the necessary escape sequences to do a WYSIWYG editor on a terminal. These macros grew into the first Emacs. It was not open source. It was not closed source. No one thought in those terms; it was just a thing at MIT.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Then, a friend of mine was inspired by this to build a version for Multics written in Lisp. Thus was born &lt;a href=&quot;http://www.multicians.org/mepap.html&quot; rel=&quot;nofollow&quot;&gt;Multics Emacs&lt;/a&gt;, written (in part) in Lisp. Stallman, who was the primary author of the ITS TECO version, riffed off of it to create &lt;a href=&quot;http://emacswiki.org/emacs/EmacsHistory&quot; rel=&quot;nofollow&quot;&gt;GNU Emacs&lt;/a&gt;, also in Lisp. GNU Emacs was a very early example of Stallman's FLOSS efforts; it was very widely used, because, well, it was &lt;em&gt;useful&lt;/em&gt;. Because it was widely used, it was influential.&lt;/p&gt;&#xA;" OwnerUserId="554" LastEditorUserId="554" LastEditDate="2015-07-11T18:46:04.020" LastActivityDate="2015-07-11T18:46:04.020" CommentCount="0" />
  <row Id="1064" PostTypeId="1" AcceptedAnswerId="1121" CreationDate="2015-07-11T14:11:34.310" Score="6" ViewCount="85" Body="&lt;p&gt;In the software world the &lt;a href=&quot;http://www.fsf.org/&quot; rel=&quot;nofollow&quot;&gt;FSF&lt;/a&gt; and the &lt;a href=&quot;http://opensource.org/&quot; rel=&quot;nofollow&quot;&gt;OSI&lt;/a&gt; both accept licenses as free/open. They also promote licenses for usage. In the hardware world some open source licenses have been created, like the &lt;a href=&quot;https://en.wikipedia.org/wiki/TAPR_Open_Hardware_License&quot; rel=&quot;nofollow&quot;&gt;TAPR Open Hardware License&lt;/a&gt; and the &lt;a href=&quot;https://en.wikipedia.org/wiki/CERN_Open_Hardware_License&quot; rel=&quot;nofollow&quot;&gt;CERN Open Hardware License&lt;/a&gt;. But I can't find any institution accepting these licenses as open, keeping a list of them and promoting them. Does such an institution exist?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="98" LastEditDate="2015-07-14T21:42:32.873" LastActivityDate="2015-08-04T21:57:41.513" Title="Is there an institution that accepts and promotes open hardware licenses?" Tags="&lt;licensing&gt;&lt;hardware&gt;" AnswerCount="3" CommentCount="1" FavoriteCount="2" />
  <row Id="1065" PostTypeId="1" AcceptedAnswerId="1084" CreationDate="2015-07-11T16:06:02.147" Score="11" ViewCount="256" Body="&lt;p&gt;Copyright for old works expire at some point. In most countries that happens 70 years after authors death. Can I take a book with expired copyright (say Dickens Oliver Twist), change it substantially (modern language, some different characters and so on) and release the result under an open license (let's say CC-BY-SA)? What are the restrictions in doing so? And if it is allowed, who do I attribute as author?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="69" LastEditDate="2015-07-11T16:08:37.997" LastActivityDate="2015-07-20T13:18:31.160" Title="Can I create a derivative of an old book?" Tags="&lt;licensing&gt;&lt;attribution&gt;&lt;public-domain&gt;" AnswerCount="3" CommentCount="0" />
  <row Id="1066" PostTypeId="2" ParentId="1065" CreationDate="2015-07-11T16:08:15.093" Score="2" Body="&lt;p&gt;Yes. As soon as Copyright expired, the book is in the Public Domain. It has no owner. It is yours, mine, everybodies.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can take the content, change it in any way you want, license it in any way you want.&lt;/p&gt;&#xA;" OwnerDisplayName="user490" LastActivityDate="2015-07-11T16:08:15.093" CommentCount="1" />
  <row Id="1067" PostTypeId="2" ParentId="1065" CreationDate="2015-07-11T16:10:44.710" Score="6" Body="&lt;p&gt;When the copyright of a certain work expires, it is released into the public domain. Hence, anybody can use it. There's no restrictions to it. For example, I can take one of Beethoven's music compositions, change it up, and then make it mine. With copyright.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Essentially, you can take any content that is in the public domain, and you can do anything that you would like with it: That is change it, make it pretty (or ugly), and even relicense it to your wishes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To answer the attribution section, I'm going to quote &lt;a href=&quot;http://fairuse.stanford.edu/overview/public-domain/trouble-spots/#sthash.kZNngAOW.dpuf&quot; rel=&quot;nofollow&quot;&gt;Stanford&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If you copy from a public domain writing, do you have to credit the author? The United States Supreme Court has answered, “No,” holding that there is no legal requirement to provide any attribution when public domain works are copied and placed into new works. (Dastar Corp. v. 20th Century Fox Film Corp., 123 S.Ct. 2041 (2003).)&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;However, just because there is no legal requirement to give credit to the creators of public domain works, doesn’t mean you don’t have to do it. When copying works from the public domain, be careful to avoid plagiarism.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Plagiarism occurs when someone poses as the originator of words he did not write, ideas he did not conceive, or facts he did not discover. Although you cannot be sued for plagiarizing a public domain work, doing so can result in serious professional and personal penalties. For example, in the case of college professors and journalists, it may result in termination; for students, it could lead to expulsion; if done by well-known historians, it can result in public humiliation.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Essentially, you don't &lt;em&gt;have&lt;/em&gt; to, but it's a good idea to so, morally and ethically, and so that people don't start throwing tomatoes on you when you present your modified&lt;sup&gt;1&lt;/sup&gt; version of Beethoven's music.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;1 - Modified meaning changing a single note on an instrument that you don't hear&lt;/sup&gt;&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-07-13T03:57:08.103" LastActivityDate="2015-07-13T03:57:08.103" CommentCount="2" />
  <row Id="1068" PostTypeId="2" ParentId="1057" CreationDate="2015-07-11T16:37:42.090" Score="5" Body="&lt;p&gt;Emacs, in its incarnation as GNU Emacs, along with GCC, was one of the cornerstones of the GNU project, whose aim was to create a free Unix-like operating system. In 1985 GNU Emacs was licensed under the GNU Emacs License. The GNU Emacs License was the world's first copyleft license, and was eventually generalized to become what we know today as the GNU General Public License Version 1.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;From &lt;a href=&quot;http://www.oreilly.com/openbook/freedom/ch09.html&quot; rel=&quot;nofollow&quot;&gt;Free as in Freedom Chapter 9&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Encouraging others to adopt the same licensing practices meant closing&#xA;  off the escape hatch that had allowed privately owned versions of&#xA;  Emacs to emerge. To close that escape hatch, Stallman and his free&#xA;  software colleagues came up with a solution: users would be free to&#xA;  modify GNU Emacs just so long as they published their modifications.&#xA;  In addition, the resulting &quot;derivative&quot; works would also have carry&#xA;  the same GNU Emacs License.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The revolutionary nature of this final condition would take a while to&#xA;  sink in. At the time, Fischer says, he simply viewed the GNU Emacs&#xA;  License as a simple contract. It put a price tag on GNU Emacs' use.&#xA;  Instead of money, Stallman was charging users access to their own&#xA;  later modifications. That said, Fischer does remember the contract&#xA;  terms as unique.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&quot;I think asking other people to accept the price was, if not unique,&#xA;  highly unusual at that time,&quot; he says.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="149" LastEditorUserId="149" LastEditDate="2015-07-11T18:17:13.530" LastActivityDate="2015-07-11T18:17:13.530" CommentCount="0" />
  <row Id="1070" PostTypeId="1" CreationDate="2015-07-11T17:37:48.657" Score="5" ViewCount="60" Body="&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Novena_(computing_platform)&quot; rel=&quot;nofollow&quot;&gt;Novena&lt;/a&gt; tries to be an open source computing platform. But so far it's only &lt;a href=&quot;http://www.wired.com/2014/04/novena/&quot; rel=&quot;nofollow&quot;&gt;partially open source&lt;/a&gt;. Which parts are still not open source and have to be replaced to create a fully open source platform?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The Novena has &lt;a href=&quot;http://www.kosagi.com/w/index.php?title=Novena_Main_Page&quot; rel=&quot;nofollow&quot;&gt;abundance of documentation&lt;/a&gt;, but its mass is overwhelming and it is hard to understand without electronic engineering knowledge, for instance &lt;a href=&quot;http://bunniefoo.com/novena/pvt1_release/novena_pvt1.PDF&quot; rel=&quot;nofollow&quot;&gt;this schematic&lt;/a&gt;. So I find myself unable to extract the information to answer my question, although it is probably hidden in this documentation.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="98" LastEditDate="2015-07-13T19:20:47.017" LastActivityDate="2015-07-13T19:21:53.827" Title="What parts of the Novena are not open source?" Tags="&lt;hardware&gt;&lt;novena&gt;" AnswerCount="1" CommentCount="6" />
  <row Id="1071" PostTypeId="2" ParentId="1064" CreationDate="2015-07-11T18:07:52.693" Score="1" Body="&lt;p&gt;I'm not sure I understand 100% but P2P Foundation is an instutition and posts their definition, license, and terms on their site.&lt;br&gt;&#xA;&lt;a href=&quot;http://p2pfoundation.net/Open_Hardware_Licenses&quot; rel=&quot;nofollow&quot;&gt;http://p2pfoundation.net/Open_Hardware_Licenses&lt;/a&gt;  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;OSHW by Freedom Defined is an example of promotion/definition:&lt;br&gt;&#xA;&lt;a href=&quot;http://freedomdefined.org/OSHW&quot; rel=&quot;nofollow&quot;&gt;http://freedomdefined.org/OSHW&lt;/a&gt;  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;OKFN's Open Design and Hardware Group also does something similar:&lt;br&gt;&#xA;&lt;a href=&quot;http://design.okfn.org/designdefinition/&quot; rel=&quot;nofollow&quot;&gt;http://design.okfn.org/designdefinition/&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="30" LastEditorUserId="69" LastEditDate="2015-08-04T21:57:41.513" LastActivityDate="2015-08-04T21:57:41.513" CommentCount="5" />
  <row Id="1072" PostTypeId="1" CreationDate="2015-07-11T18:29:15.393" Score="3" ViewCount="35" Body="&lt;p&gt;This originally sprang out of &lt;a href=&quot;http://meta.stackexchange.com/questions/217610/where-should-i-ask-a-question-about-open-hardware&quot;&gt;this Meta question&lt;/a&gt;, and then &lt;a href=&quot;http://chat.stackexchange.com/transcript/message/22710791#22710791&quot;&gt;a quick discussion in chat&lt;/a&gt;. This question is designed to test the underlying assumption behind the Meta question.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It seems to some that open hardware is developing slower than open software is, though there are a non-negligible amount of projects. Going back in time, however, the rates might be different.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Does open hardware attract contributors in similar speed as open source software early on did? By &quot;early on&quot;, I mean the 1980s, give or take.&lt;/p&gt;&#xA;" OwnerUserId="145" LastEditorUserId="145" LastEditDate="2015-07-11T19:36:13.913" LastActivityDate="2015-07-12T01:50:56.607" Title="Does open hardware attract contributors in similar speed as open source software early on did?" Tags="&lt;hardware&gt;&lt;history&gt;" AnswerCount="1" CommentCount="5" />
  <row Id="1073" PostTypeId="1" CreationDate="2015-07-11T20:04:50.450" Score="2" ViewCount="61" Body="&lt;p&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/Public_Domain&quot; rel=&quot;nofollow&quot;&gt;Public Domain&lt;/a&gt; contains works on which copyright has expired. Basically you can do nearly anything with it. Does Public Domain therefore count as Open Source or free/libre?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="168" LastEditDate="2015-07-11T21:48:15.920" LastActivityDate="2015-07-12T02:30:22.023" Title="Is public domain open source?" Tags="&lt;public-domain&gt;" AnswerCount="2" CommentCount="3" ClosedDate="2015-07-12T01:54:41.557" />
  <row Id="1074" PostTypeId="2" ParentId="1073" CreationDate="2015-07-11T20:55:47.153" Score="3" Body="&lt;p&gt;Public domain is indeed free/libre. This includes CC0 and the Unlicense, which are commonly used as public domain dedications.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://gnu.org/licenses/license-list.html#PublicDomain&quot; rel=&quot;nofollow&quot;&gt;From gnu.org:&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Being in the public domain is not a license; rather, it means the material is not copyrighted and no license is needed. Practically speaking, though, if a work is in the public domain, it might as well have an all-permissive non-copyleft free software license. Public domain material is compatible with the GNU GPL.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;If you want to release your work to the public domain, we encourage you to use formal tools to do so. We ask people who make small contributions to GNU to sign a disclaimer form; that's one solution. If you're working on a project that doesn't have formal contribution policies like that, CC0 is a good tool that anyone can use. It formally dedicates your work to the public domain, and provides a fallback license for cases where that is not legally possible.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;As for open source, refer to &lt;a href=&quot;http://opensource.org/faq#public-domain&quot; rel=&quot;nofollow&quot;&gt;OSI's FAQ&lt;/a&gt;. Note that the OSI did not approve CC0 because of the explicit lack of patent grant.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; public domain is both free/libre and open source.&lt;/p&gt;&#xA;" OwnerUserId="433" LastEditorUserId="168" LastEditDate="2015-07-12T02:30:22.023" LastActivityDate="2015-07-12T02:30:22.023" CommentCount="1" />
  <row Id="1075" PostTypeId="2" ParentId="1073" CreationDate="2015-07-11T22:46:04.830" Score="2" Body="&lt;p&gt;There are multiple types of public domain. All can be viewed as open source (when there's source), but not all of them are free.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The first type is works whose copyright had expired. Note that different countries have different copyright law, so anything newer than XIX century may happen to not be in public domain in one or more countries. Works that are not copyrighted anywhere anymore are free in the same sense as works under GPL or MIT or another free license. If it's still restricted in any country, it's not free in the same sense.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The second type is works that were declared public domain by their authors. The problem with it is that in most countries you cannot declare your own work public domain, and the definition of public domain is restricted to particular cases like works created 70 years before the author's death or works by the government, so this claim is technically legally void.&#xA;Even though the author has no intention to sue anyone over it, there is no clear agreement between you and the author regarding what you can do and what you can't either, which may be important in some cases.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The third type, which is not really public domain, is works released under CC0 and similar permissive licenses. These are indeed free.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also, while it's hypothetical at this point, if some closed-source binaries survive until they meet the definition (1), they will be public domain but still closed source, there will not be any legal obligation for author's descendants to open source it.&lt;/p&gt;&#xA;" OwnerUserId="652" LastActivityDate="2015-07-11T22:46:04.830" CommentCount="1" />
  <row Id="1076" PostTypeId="5" CreationDate="2015-07-11T23:39:47.047" Score="0" Body="&lt;p&gt;Google's 'Summer of Code' is an annual program, open to students in tertiary education. Students are paired with a mentor and paid a stipend to work on selected open source projects. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;More information can be found at the &lt;a href=&quot;https://developers.google.com/open-source/gsoc/&quot; rel=&quot;nofollow&quot;&gt;GSOC website&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="30" LastEditorUserId="55" LastEditDate="2015-07-22T15:06:46.330" LastActivityDate="2015-07-22T15:06:46.330" CommentCount="0" />
  <row Id="1077" PostTypeId="4" CreationDate="2015-07-11T23:39:47.047" Score="0" Body="Use this tag for questions related to Google's Summer of Code (GSOC) program." OwnerUserId="30" LastEditorUserId="29" LastEditDate="2015-07-22T15:35:17.030" LastActivityDate="2015-07-22T15:35:17.030" CommentCount="0" />
  <row Id="1078" PostTypeId="5" CreationDate="2015-07-11T23:52:07.307" Score="0" Body="&lt;p&gt;The Digital Millennium Copyright Act (DMCA) is a U.S. copyright law. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Per &lt;a href=&quot;https://en.wikipedia.org/wiki/Digital_Millennium_Copyright_Act&quot; rel=&quot;nofollow&quot;&gt;wikipedia&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;It criminalizes production and dissemination of technology, devices, or services intended to circumvent measures (commonly known as digital rights management or DRM) that control access to copyrighted works. It also criminalizes the act of circumventing an access control, whether or not there is actual infringement of copyright itself. In addition, the DMCA heightens the penalties for copyright infringement on the Internet.[1][2] Passed on October 12, 1998, by a unanimous vote in the United States Senate and signed into law by President Bill Clinton on October 28, 1998, the DMCA amended Title 17 of the United States Code to extend the reach of copyright, while limiting the liability of the providers of online services for copyright infringement by their users.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The DMCA does offer safeharbor protection to service providers provided they comply with Section 512, including notice and takedown procedures.&#xA;DMCA Takedown Notices are commonly used by copyright holders to remove copyrighted materials on the web.  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;a href=&quot;http://www.copyright.gov/legislation/dmca.pdf&quot; rel=&quot;nofollow&quot;&gt;original document&lt;/a&gt; can be found at copyright.gov.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The DMCA is of importance to open source developers, especially if they are producing code which could be deemed to 'subvert' a DRM mechanism (such as decoding DVDs). Although it is a US law, code published in another country is available in the US and thus may place the publishers under US Jurisdiction.&lt;/p&gt;&#xA;" OwnerUserId="30" LastEditorUserId="29" LastEditDate="2015-07-22T18:58:24.870" LastActivityDate="2015-07-22T18:58:24.870" CommentCount="0" />
  <row Id="1079" PostTypeId="4" CreationDate="2015-07-11T23:52:07.307" Score="0" Body="Use this tag for questions related to the Digital Millenium Copyright Act in the context of open development." OwnerUserId="30" LastEditorUserId="29" LastEditDate="2015-07-22T18:58:22.327" LastActivityDate="2015-07-22T18:58:22.327" CommentCount="0" />
  <row Id="1080" PostTypeId="2" ParentId="1072" CreationDate="2015-07-12T01:50:56.607" Score="2" Body="&lt;p&gt;Note that open hardware actually precedes open source software. In the age of analog electronics and early home computers when everyone could build a piece of hardware of equal or better quality than those available commercially, sharing schematics with the community through hobbyist groups and journals was a common practice.&#xA;So if we consider modern open hardware community a successor of the old electronics community, the number of contributors it attracts has declined dramatically, and will probably not rise until small scale hardware manufacturing becomes feasible again.&lt;/p&gt;&#xA;" OwnerUserId="652" LastActivityDate="2015-07-12T01:50:56.607" CommentCount="0" />
  <row Id="1081" PostTypeId="2" ParentId="142" CreationDate="2015-07-12T02:33:19.287" Score="6" Body="&lt;p&gt;The Open Source Hardware Association has a list of &lt;a href=&quot;http://www.oshwa.org/definition/&quot; rel=&quot;nofollow&quot;&gt;guidelines&lt;/a&gt; that should be met to call a project &lt;a href=&quot;https://en.wikipedia.org/wiki/Open-source_hardware&quot; rel=&quot;nofollow&quot;&gt;Open Source Hardware&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Electronics is different from source code in that circuits themselves cannot be copyrighted (can anyone suggest references on this point?) while all material around them, such as design files, can be.  Things are further complicated because once you dip below the software side, it's unclear where the threshold should stop.  If I run free and open source software on a chip that is closed, does that count as open?  If I release the VHDL under a permissive license but the toolchain to program the chip is closed, can it really be considered open?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;All these subtleties aside, the idea behind 'open sourcing hardware' is to provide all the necessary information available that would enable someone with similar means to reproduce your project.  This includes:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Releasing the electronic design files, such as schematics and PCBs, under a free (as in libre) license (for example, CC-BY-SA, CC-BY or CC0).&lt;/li&gt;&#xA;&lt;li&gt;Making the source code available (if any) under a free (as in libre) license (for example, some GPL compatible license).&lt;/li&gt;&#xA;&lt;li&gt;Releasing the design files for other hardware under a free (as in libre) license (for example, CAD files for the enclosure under a CC-BY-SA, CC-BY or CC0 license).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Note that any CC-NC (non-commercial) or CC-ND (no-derivatives) license does not qualify as 'open source hardware' in this context as it restricts the freedom to redistribute, sell and alter.&lt;/p&gt;&#xA;" OwnerUserId="682" LastEditorUserId="682" LastEditDate="2015-07-16T12:37:31.040" LastActivityDate="2015-07-16T12:37:31.040" CommentCount="2" />
  <row Id="1082" PostTypeId="1" CreationDate="2015-07-12T06:10:14.243" Score="3" ViewCount="86" Body="&lt;p&gt;While visiting the Wikipedia page on &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_and_open-source_software&quot; rel=&quot;nofollow&quot;&gt;Free and open-source software&lt;/a&gt;, I noticed the Challenges section from template at the bottom:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/RcMfv.png&quot; alt=&quot;screen-shot&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In which &lt;a href=&quot;https://en.wikipedia.org/wiki/Digital_rights_management&quot; rel=&quot;nofollow&quot;&gt;Digital rights management&lt;/a&gt; and  &lt;a href=&quot;https://en.wikipedia.org/wiki/Software_patents_and_free_software&quot; rel=&quot;nofollow&quot;&gt;Software patents&lt;/a&gt; seems considerable to me.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, I want to know about the interference/interaction of &lt;strong&gt;DRM&lt;/strong&gt; with Free &amp;amp; Open Source Software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In other words, how do we react with it? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;Note: This question is split off for software patents separately, also visit &lt;a href=&quot;http://opensource.stackexchange.com/q/1088/296&quot;&gt;this&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;" OwnerUserId="296" LastEditorUserId="98" LastEditDate="2015-07-14T21:41:12.573" LastActivityDate="2015-07-14T21:41:12.573" Title="Interference of DRM with free &amp; open source software" Tags="&lt;law&gt;&lt;drm&gt;" AnswerCount="2" CommentCount="4" FavoriteCount="1" />
  <row Id="1083" PostTypeId="2" ParentId="984" CreationDate="2015-07-12T07:24:08.720" Score="2" Body="&lt;p&gt;From the CC &lt;a href=&quot;https://wiki.creativecommons.org/wiki/License_Versions#Detailed_attribution_comparison_chart&quot; rel=&quot;nofollow&quot;&gt;wiki page on attribution&lt;/a&gt; (emphasis mine): &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;4.0&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Creator &lt;strong&gt;if supplied&lt;/strong&gt; and &lt;strong&gt;attribution parties&lt;/strong&gt; if designated in reasonable manner&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This means that Carol will need to attribute to Bob if (and only if!) Bob so wishes. Bob can even demand not to be attributed if he wants to. Now what are these attribution parties?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://wiki.creativecommons.org/wiki/License_Versions#Credit_to_others_explicit&quot; rel=&quot;nofollow&quot;&gt;Further on the page&lt;/a&gt; we read:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;In the 1.0 and 2.0 licenses, CC licenses contemplated crediting the author only. Versions 2.5 and 3.0 allow licensors to identify another party or organization for attribution (called an “Attribution Party” in these licenses). This feature was introduced in part to alleviate burdensome or difficult attribution situations, such as when many people contribute to a collaborative effort and agree to be credited as a collective body. In licenses with this feature, licensors may designate another party for attribution purposes—such as a sponsor institute, publishing entity or journal—in addition to or instead of the author. &lt;a href=&quot;http://creativecommons.org/weblog/entry/5457&quot; rel=&quot;nofollow&quot;&gt;You may review some of the concerns raised when CC proposed this change&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;What this means concretely is that any contributor can choose freely who gets attributed for their work. So if Alice attributed her work to an organization she works for and doesn't ask Bob not to attribute this organization, the Bob will need to include this organization is his attributions as well. He can then choose who to attribute for his work. Carol will then have to attribute both Alice's and Bob's attribution, unless any of those two choose they do not want to be attributed by Carol.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note that this has nothing to do with copyright, which under CC-BY is an entirely separate matter (which of course also works transitively).&lt;/p&gt;&#xA;" OwnerUserId="168" LastEditorUserId="168" LastEditDate="2015-07-12T10:00:33.217" LastActivityDate="2015-07-12T10:00:33.217" CommentCount="1" />
  <row Id="1084" PostTypeId="2" ParentId="1065" CreationDate="2015-07-12T08:39:57.650" Score="11" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;Copyright for old works expire at some point. In most countries that  happens 70 years after authors death. Can I take a book with expired copyright (say Dickens Oliver Twist), [...] and release the result under an open license (let's say CC-BY-SA)?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;According to the Berne convention, works &lt;em&gt;may&lt;/em&gt; pass into the public domain after life of author + 70 years (i.e. Berne signatories have to provide this &lt;em&gt;minimum&lt;/em&gt; protection for literary and artistic works).  However, the Berne convention does not impose a &lt;em&gt;maximum&lt;/em&gt; term of protection, and it also deals with two different sets of rights: Economic rights and  moral right.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Both economic rights and moral rights may be &lt;em&gt;inherited&lt;/em&gt;, and it is the heir who will exercise these rights after the death of the author. Any rights that is inherited in this way may pass down to future generations as long as the rights persist. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;When the &lt;em&gt;economic rights&lt;/em&gt; have expired, you're allowed to make &lt;em&gt;verbatim reprints&lt;/em&gt; without asking for permission, and you can distribute those as you like (for money or for free).  I can't see any reason why you should not be able to attach a license, but since the original is without license, anybody can ignore the license just by saying they copied the original (and not your reprint).&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;change it substantially (modern language, some different characters and so on)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This is what is legally called &quot;an adaptation&quot;, and permission to create adaptations may be blocked by what is called &lt;em&gt;moral rights&lt;/em&gt; (droits d'auteur).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In most jurisdiction, and in particular those outside of northern Europe, moral rights is treated as equal to economic rights: I.e. they expire after the life of author + 70 years.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Certainly, in the USA, rather heavy handed adaptations of some classical works has been made, for instance Shakespeare's &quot;Romeo and Juliet&quot; (West Side Story), and &quot;The Taming of the Shrew&quot; (10 Things I Hate About You).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, in &lt;a href=&quot;http://guide.lodzfilmcommission.pl/index.php?page=Chapter&amp;amp;id=30&quot; rel=&quot;nofollow&quot;&gt;some jurisdiction&lt;/a&gt;, such as Denmark, Sweden, Norway, Poland, Estonia, Latvia and Lithuania moral right &lt;em&gt;never&lt;/em&gt; expire&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;What are the restrictions in doing so?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;First, if you're allowed make an adaptation, you hold the copyright of the adaptation. So you can impose any terms you like (including a CC BY-SA) on the adaptation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, if moral rights are intact, you may not be allowed to make an adaptation.  You're only allowed to adapt if the adaptation respects the &quot;integrity of the work and the author&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For instance, a be-bop adaptation by Arne Domnérus of the Norwegian national anthem (&quot;Ja, vi elsker&quot; - composed by Rikard Nordraak, 1842-1866) was in 1977 (111 years after the death of Nordraak) by a Noregian court declared to violate Nordraak's moral rights and had to be pulled from the Norwegian market.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/ks0IU.jpg&quot; alt=&quot;Cover image of &amp;quot;Ja, vi elsker&amp;quot;&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It should be said that this is an extremely rare example.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;And if it is allowed, who do I attribute as author?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Yes, if it is an &lt;em&gt;adaptation&lt;/em&gt;, then moral rights require you to &lt;em&gt;credit&lt;/em&gt; the original author (e.g. &quot;adapted from 'Oliver Twist' by Charles Dickens&quot;). However, if it is an adaptation, &lt;em&gt;you&lt;/em&gt;, not Dickens is the author of the adaptation, so you list yourself as the author).  Moral rights also means that you're not allowed to state that Mr. Dickens is in any way &lt;em&gt;responsible&lt;/em&gt; for the adaptation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, the line between what is considered an adaptation, and what is a &lt;em&gt;new&lt;/em&gt; work that has some plot lines in common with some earlier work is blurred.  &quot;West Side Story&quot; is obviously an adaptation of &quot;Romeo and Juliet&quot; (and Shakespeare adapted it from the 1562 poem &quot;The Tragical History of Romeus and Juliet&quot; by Arthur Brooke). However, &quot;Wuthering Heights&quot; and countless other tragic love stories where societal norms prevents a happy ending, is not.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-20T13:18:31.160" LastActivityDate="2015-07-20T13:18:31.160" CommentCount="5" />
  <row Id="1085" PostTypeId="2" ParentId="1082" CreationDate="2015-07-12T10:05:43.420" Score="1" Body="&lt;p&gt;Well, this is a complicated matter. Generally open source uses and covers copyright. But the rights and freedoms granted by open source or free software can be restricted with more than just copyright. DRM is an example how these restrictions can be applied.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;DRM is a technical measure that tries to prevent copying or prevent execution of code that isn't allowed. This, for example, leads to Android phones that can only execute signed official Android-versions. Basically that prevents some of the rights the user usually gets with open source or free software. This seems not that important - you can buy other Android phones that allow switching the software, but it develops. &lt;a href=&quot;https://en.wikipedia.org/wiki/UEFI_Secure_Boot#Secure_boot_criticism&quot; rel=&quot;nofollow&quot;&gt;SecureBoot&lt;/a&gt; only boots up signed software. Currently, SecureBoot in normal PC can be deactivated, but that may change in the future. Effectively the mass usage of obligatory SecureBoot would mean that you have to choose the right PC to be able to run an Open Source operating system.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Most FLOSS-licenses aren't covering DRM restrictions, but the GPL version 3.0 is trying to cover DRM. These special considerations towards DRM are untested yet in court though, as far as I know.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-12T10:58:31.880" LastActivityDate="2015-07-12T10:58:31.880" CommentCount="0" />
  <row Id="1086" PostTypeId="5" CreationDate="2015-07-12T10:40:19.380" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-12T10:40:19.380" LastActivityDate="2015-07-12T10:40:19.380" CommentCount="0" />
  <row Id="1087" PostTypeId="4" CreationDate="2015-07-12T10:40:19.380" Score="0" Body="DRM, also called Digital Restriction Management in the FLOSS community, are mechanisms implemented in hardware or software which prevent the user from copying, viewing, printing or altering a piece of digital content on their machine without permission of the copyright holder." OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-07-12T19:03:19.287" LastActivityDate="2015-07-12T19:03:19.287" CommentCount="0" />
  <row Id="1088" PostTypeId="1" AcceptedAnswerId="1090" CreationDate="2015-07-12T10:56:11.333" Score="5" ViewCount="192" Body="&lt;p&gt;While visiting wikipedia page on &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_and_open-source_software&quot; rel=&quot;nofollow&quot;&gt;Free and open-source software&lt;/a&gt;, I noticed the challenges from the template at bottom:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/RcMfv.png&quot; alt=&quot;screen-shot&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In which &lt;a href=&quot;https://en.wikipedia.org/wiki/Digital_rights_management&quot; rel=&quot;nofollow&quot;&gt;Digital rights management&lt;/a&gt; and  &lt;a href=&quot;https://en.wikipedia.org/wiki/Software_patents_and_free_software&quot; rel=&quot;nofollow&quot;&gt;Software patents&lt;/a&gt; seems considerable to me.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, I want to know interference/interaction of &lt;strong&gt;Software patents&lt;/strong&gt; with &lt;strong&gt;Free &amp;amp; Open Source Software&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In other words how do we interact with it?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;Note: This question is split off from &lt;a href=&quot;http://opensource.stackexchange.com/q/1082/296&quot;&gt;this&lt;/a&gt;  to be specific on Software patents.&lt;/sup&gt;&lt;/p&gt;&#xA;" OwnerUserId="296" LastEditorUserId="168" LastEditDate="2015-07-12T11:39:25.977" LastActivityDate="2015-07-12T12:21:15.790" Title="Interference of Software Patents with Free &amp; Open Source Software" Tags="&lt;law&gt;&lt;patents&gt;" AnswerCount="2" CommentCount="0" />
  <row Id="1089" PostTypeId="2" ParentId="1088" CreationDate="2015-07-12T10:59:54.057" Score="4" Body="&lt;p&gt;Well, this is a complicated matter. Generally open source uses and covers copyright. But the rights and freedoms granted by open source or free software can be restricted with more than just copyright. Software patents are an example of how these restrictions can be applied.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Software patents restrict the rights of the user of open source software. The software may be licensed under an open source license, but still it might conflict with certain patents and therefore be illegal to distribute. That often depends on the jurisdiction, for instance in Europe software patents are formally not allowed, but the patent office has accepted several patents that can be counted as such. Many audio- and video-formats are surrounded by software patents, so that an open source implementation still underlies certain restrictions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Most FLOSS-licenses don't cover these restrictions, but the Apache license version 2.0 and the GPL version 3.0 try to consider software patents. These special considerations towards software patents are, as far as I know, still untested in court though.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-12T11:43:19.367" LastActivityDate="2015-07-12T11:43:19.367" CommentCount="1" />
  <row Id="1090" PostTypeId="2" ParentId="1088" CreationDate="2015-07-12T11:32:23.827" Score="6" Body="&lt;h2&gt;Why is it a problem?&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Patents are dangerous because they can put an additional restriction on the use and distribution of software which is not mentioned in the license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A company can freely contribute to an open source project and license their work under an open source license, but in the meantime file a patent on some aspect of their contribution. Later they can then use that patent to collect license fees from distributors and users of the allegedly free software. All of this is completely legal because licenses usually only deal with copyright law, and patent law is a completely different beast, even though the outcome is usually the same. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;This can also be done by companies which were not involved in the development at all but own a similar patent filed before the project was published. The patent doesn't even need to be enforceable. The threat alone that it &lt;em&gt;might&lt;/em&gt; apply can be enough to stunt the adoption of free software, because patent lawsuits are expensive. Companies fear that they might lack the resources to fight a patent lawsuit, even when they could win with enough money.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Patents can also be used to prevent someone from creating a free alternative for a proprietary product. A &lt;a href=&quot;https://en.wikipedia.org/wiki/H.264/MPEG-4_AVC#Patent_licensing&quot;&gt;good example for this is the H.264 video encoding algorithm&lt;/a&gt;, also known as MPEG-4. The algorithm was developed as proprietary software, but how to implement it is no secret. An algorithm can not be copyrighted, only a specific implementation can. So as far as copyright is concerned, anyone could create a free implementation for everyone to use. But unfortunately there are various companies which hold several software patents which apply (or might apply) to this algorithm. This allows them to collect royalties from anyone implementing the algorithm, free or not.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Advocates of free software thus recommend to use different algorithms like OGG Vorbis which was specifically designed to circumvent any known patents on video encoding. But video encoding is such a minefield of patents that some people believe that there might still be some less known patents out there which could also be applied to Vorbis and fear that wide adoption of Vorbis could prompt the holders of these patents to surface and start to demand money.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Patent law is an area which is not internationally homogenized. Different countries have different laws regarding what can be patented and which laws apply. Software patents in particular is a shaky area which is handled differently in different jurisdictions. This can lead to the situation that a certain piece of free software is only free in some parts of the world and not in others, violating the right to free distribution without discrimination of certain groups.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;How can we deal with it?&lt;/h2&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Demand patent licensing&lt;/strong&gt; in licenses. The GPLv3 for example has a section on patents which says that any contributors must license any patents which apply to their work for free. However, this does not help against 3rd party patent claims.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Work around the patents&lt;/strong&gt;. When you have an open source project, do your research about which patents might apply to the area and try to not violate them. Release early, because after you released a product, any applications for new patents which apply to the product are invalid due to prior art.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Bust the patents&lt;/strong&gt;. When prior art can be proven for a patent, it can be declared invalid. A good medium for crowdsourcing potential prior art is the stackexchange site &lt;a href=&quot;https://patents.stackexchange.com/&quot;&gt;Ask Patents&lt;/a&gt; which has a specific &lt;a href=&quot;https://patents.stackexchange.com/questions/tagged/prior-art-request&quot;&gt;tag for prior art requests&lt;/a&gt;. The Electronic Frontier Foundation also has a &lt;a href=&quot;https://www.eff.org/patent-busting&quot;&gt;patent busting project&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Build a defensive pool of patents&lt;/strong&gt;. Just play the same game the patent trolls play. Register patents yourself, and then pledge that you will only enforce them against those who also try to press their own patent claims. This is the strategy many large companies use to protect themselves from frivolous patent claims. Unfortunately this only works against people who actually implement their patents in products and are not just in the business of filing lawsuits. Also, the strategy of fighting fire with fire might not sit well with the more ideological parts of the free software community.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Political lobbying against software patents&lt;/strong&gt;. Software patents have already be declared unenforceable in large parts of the world. But there are still countries which have not yet understood how bad they are for innovation and the international competitiveness of the countries IT economy. Support organizations which try to convince politicians to change the local patent laws for the better. When you live in such a country, try to convince your local politicians yourself and consider their opinions about software patents when casting your vote in the next election.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="14" LastEditorUserId="14" LastEditDate="2015-07-12T12:21:15.790" LastActivityDate="2015-07-12T12:21:15.790" CommentCount="1" />
  <row Id="1091" PostTypeId="2" ParentId="1064" CreationDate="2015-07-12T11:36:49.393" Score="0" Body="&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/CERN_Open_Hardware_License#Projects_using_the_CERN_OHL&quot; rel=&quot;nofollow&quot;&gt;Projects using the CERN OHL&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;On the CERN OHL website they have a list of projects using their license&lt;sup&gt;&lt;a href=&quot;http://www.ohwr.org/projects/cernohl/wiki/CernOhlProjects&quot; rel=&quot;nofollow&quot;&gt;[4]&lt;/a&gt;&lt;/sup&gt;. These projects include:&lt;/p&gt;&#xA;  &#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;&lt;a href=&quot;http://www.ohwr.org/projects?q=&amp;amp;license_version_id=4&quot; rel=&quot;nofollow&quot;&gt;Most projects in the Open Hardware Repository OHR&lt;/a&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;a href=&quot;http://www.gizmoforyou.net/site/&quot; rel=&quot;nofollow&quot;&gt;Gizmo For You Ltd&lt;/a&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;a href=&quot;http://www.simplemachines.it/&quot; rel=&quot;nofollow&quot;&gt;SimpleMachines&lt;/a&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Tinkerforge&quot; rel=&quot;nofollow&quot;&gt;Tinkerforge&lt;/a&gt; Bricks and Bricklets&lt;/li&gt;&#xA;  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/AXIOM_(camera)&quot; rel=&quot;nofollow&quot;&gt;AXIOM&lt;/a&gt;&lt;sup&gt;&lt;a href=&quot;https://www.apertus.org/alpha_prototype&quot; rel=&quot;nofollow&quot;&gt;[5]&lt;/a&gt;&lt;/sup&gt; – &lt;a href=&quot;https://en.wikipedia.org/wiki/Digital_cinema_camera&quot; rel=&quot;nofollow&quot;&gt;digital cinema camera&lt;/a&gt;&lt;/li&gt;&#xA;  &lt;li&gt;A &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_Beer&quot; rel=&quot;nofollow&quot;&gt;Free Beer&lt;/a&gt; variation, brewed for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Libre_Software_Meeting&quot; rel=&quot;nofollow&quot;&gt;RMLL&lt;/a&gt; 2012 and &lt;a href=&quot;https://en.wikipedia.org/wiki/Cooking_recipe&quot; rel=&quot;nofollow&quot;&gt;recipe&lt;/a&gt; placed under the CERN OHL 1.1&lt;sup&gt;&lt;a href=&quot;http://2012.rmll.info/biere-libre&quot; rel=&quot;nofollow&quot;&gt;[6]&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/TAPR_Open_Hardware_License#Adoption&quot; rel=&quot;nofollow&quot;&gt;TAPR Open Hardware License &gt; Adoption&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/Open_Graphics_Project&quot; rel=&quot;nofollow&quot;&gt;Open Graphics Project&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://openarchitecturenetwork.org/projects/lotusgreendatacenters&quot; rel=&quot;nofollow&quot;&gt;Lotus Green Data Centers&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="296" LastActivityDate="2015-07-12T11:36:49.393" CommentCount="0" />
  <row Id="1092" PostTypeId="5" CreationDate="2015-07-12T12:32:44.617" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-12T12:32:44.617" LastActivityDate="2015-07-12T12:32:44.617" CommentCount="0" />
  <row Id="1093" PostTypeId="4" CreationDate="2015-07-12T12:32:44.617" Score="0" Body="For questions about the various distributions of the Linux OS, such as their origins and specific impacts on the community." OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-07-12T12:43:57.440" LastActivityDate="2015-07-12T12:43:57.440" CommentCount="0" />
  <row Id="1094" PostTypeId="5" CreationDate="2015-07-12T12:41:10.657" Score="0" Body="&lt;p&gt;Human resources (and HR departments) deals with the management of the most valuable resource within a project: humans. This involves the efficient deployment and feedback collection of employed human beings, among dealing with their other concerns.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Use this tag on questions about HR from a project-management perspective. Think: is this a concern HR would have if I, the project manager, put this plan to them?&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-07-12T13:11:24.653" LastActivityDate="2015-07-12T13:11:24.653" CommentCount="0" />
  <row Id="1095" PostTypeId="4" CreationDate="2015-07-12T12:41:10.657" Score="0" Body="For questions about the human management of a free/open project. Think HR departments." OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-07-12T13:11:30.093" LastActivityDate="2015-07-12T13:11:30.093" CommentCount="0" />
  <row Id="1096" PostTypeId="5" CreationDate="2015-07-12T12:44:57.793" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-12T12:44:57.793" LastActivityDate="2015-07-12T12:44:57.793" CommentCount="0" />
  <row Id="1097" PostTypeId="4" CreationDate="2015-07-12T12:44:57.793" Score="0" Body="The license-specific tag for the BSD family of licenses. Use on questions about them; their origins, use, and design." OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-07-12T13:11:36.643" LastActivityDate="2015-07-12T13:11:36.643" CommentCount="0" />
  <row Id="1098" PostTypeId="2" ParentId="1082" CreationDate="2015-07-12T15:14:11.003" Score="2" Body="&lt;p&gt;DRM is also known as &quot;Effective Technological Measures&quot; (ETM).  Under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, WIPO Copyright requires &lt;a href=&quot;https://en.wikipedia.org/wiki/Anti-circumvention&quot; rel=&quot;nofollow&quot;&gt;Member States to provide adequate legal protection against the circumvention&lt;/a&gt; of ETM.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Anti-circumvention has since been incorporated into the copyright laws of most jurisdictions around the world.  Iin the USA, this is part of the DMCA (1998), in the EU, in European Directive 2001/29/EC (2001), etc.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The presence of ETM clearly challenges the very concept of FLOSS since the presence of ETM may first stop you from sharing an &lt;em&gt;unadapted&lt;/em&gt; program with others, and also stop you from creating a functioning &lt;em&gt;adapted&lt;/em&gt; version (thereby taking away the four freedoms associated with FLOSS).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The fact that there a &lt;em&gt;laws&lt;/em&gt; that prevent circumvention means that even if you have the &lt;em&gt;technical means&lt;/em&gt; to circumvent, you may not do so legally.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;GPLv2 is dated 1991, before ETM became protected by law, so it does not discuss DRM/ETM.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, DRM/ETM (along with patents), was on the agenda in the work that resulted in GPLv3 (2007).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Early drafts of GPLv3 first tried to deal with DRM by saying that:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;DRM is fundamentally incompatible with the purpose of the GPL, which is to protect users' freedom; &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This resulted in protests from many developers, and the original creator of the Linux kernel - Linus Torvalds - wrote: &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;I literally feel that we do not - as software developers - have the moral right to enforce our rules on hardware manufacturers. We are not crusaders, trying to force people to bow to our superior God. We are trying to show others that co-operation and openness works better.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Eventually, this evolved into the following, which is in part 3 of GPLv3:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This compromise text does not &lt;em&gt;forbid&lt;/em&gt; DRM/ETM in free software, but provides an &lt;em&gt;explicit permission&lt;/em&gt; to circumvent, thereby removing the legal protection otherwise given to ETM by the DCMA and similar laws.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A similar permissions to circumvent has been part of Creative Commons version 4.0 license suite. AFAIK, no other licenses deal explicitly with DRM.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It should be noted that since 1998, ETM has become ubiquitous on several important platforms for distrubuting software.  If you distribute your software via Apple iStore and Google play, ETM is added to your distro whether you want to or not.  So just banning it (as suggested in the early drafts of GPLv3) will effectivelty cut free software developers off from important distribution channels.  We may very well ask people not to use those platforms that incorporate DRM/TPM - but I don't think this strategy will win us friends or influence people.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So how do we, as authors of FLOSS deal with it?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In addition to using a license that &lt;em&gt;allow circumvention&lt;/em&gt; of the pesky TPM added by Apple and Google, we should always make it clear that the original source is available and can be downloaded from GitHub or similar sites.  Then, those who want to enjoy the four freedoms can get it there, and adapt it (for instance for use on platforms the original author do not support). &lt;/p&gt;&#xA;" OwnerUserId="606" LastActivityDate="2015-07-12T15:14:11.003" CommentCount="0" />
  <row Id="1099" PostTypeId="2" ParentId="974" CreationDate="2015-07-12T15:22:49.353" Score="3" Body="&lt;p&gt;No, the GNU GPL 3 does not prohibit DRM.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note that in legal terms, DRM is usually referred to as (Effective) Technological Measures (ETM).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The relvant text is in part 3 of &lt;a href=&quot;https://gnu.org/licenses/gpl-3.0&quot; rel=&quot;nofollow&quot;&gt;GPLv3&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This text does &lt;em&gt;not&lt;/em&gt; forbid DRM/ETM in free software, but provides an &lt;em&gt;explicit permission&lt;/em&gt; to circumvent, thereby removing the legal protection otherwise given to ETM by the DCMA and similar laws.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is a compromise text resulting from a massive resistance from hardware manufacturers and some software developers (including Linus Torvalds) to initial attempts to declare DRM/ETM incompatible with GPLv3.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;What if the DRM scheme requires some kind of secret to work? Wouldn't the GPL require this secret to be published and GPL licensed too, making the DRM useless?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;No, it would not.  DRM/ETM schemes that leverages on Public Key Encryption (PKE) technologies exists.  The DRM software would be open source.  However, the secret key to &quot;unlock&quot; the application would not, and could be delivered to individual users (presumably after they've paid a premium) out of band.  The TOS for the premium service could disallow public sharing of secret keys, and/or the PKE would tie each secret key to a single device, making sharing of secret keys ineffective.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What the GPLv3 anti-DRM clause does, is to &lt;em&gt;permit&lt;/em&gt; brute force and other cryptographic attacks on this scheme, in jurisdictions (which is most of them in 2015) that has outlawed &quot;circumvention of technological measures&quot;.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-27T08:02:02.637" LastActivityDate="2015-07-27T08:02:02.637" CommentCount="0" />
  <row Id="1102" PostTypeId="1" AcceptedAnswerId="1104" CreationDate="2015-07-13T11:57:02.657" Score="7" ViewCount="961" Body="&lt;p&gt;When contributing to an open source project that uses &lt;a href=&quot;http://opensource.stackexchange.com/q/352/168&quot;&gt;pull requests&lt;/a&gt; exclusively for contributions, I'm left wondering when a good time is for me to send a pull request.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'm especially in doubt when it come to implementing rather major features, should I implement the entire feature on my fork and only push &lt;a href=&quot;http://opensource.stackexchange.com/q/993/168&quot;&gt;upstream&lt;/a&gt; when it works? My worry here is that it might be a lot of effort for them to check if my work is correct when they have to review a huge amount of code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;On the other end of the spectrum, I'm afraid that sending a ton of tiny pull requests might get on people's nerves as well.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What should I keep in mind when trying to figure out how quickly I should send a pull request?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;sub&gt;This will obviously vary from project to project, I'd like to know what is the general preference and what the variations tend to depend on. &lt;strong&gt;This might also help me set standards if I start my own project.&lt;/strong&gt;&lt;/sub&gt;&lt;/p&gt;&#xA;" OwnerUserId="168" LastEditorUserId="190" LastEditDate="2015-07-14T08:29:25.747" LastActivityDate="2015-07-14T11:26:36.160" Title="How can I know how much of a change to make in each of my pull requests?" Tags="&lt;contributor&gt;&lt;collaboration&gt;&lt;pull-request&gt;" AnswerCount="5" CommentCount="5" FavoriteCount="1" />
  <row Id="1103" PostTypeId="2" ParentId="1102" CreationDate="2015-07-13T11:58:33.500" Score="2" Body="&lt;p&gt;It depends on what changes you're making. I judge my submission of pull requests by &lt;em&gt;criticality&lt;/em&gt;: for critical issues, it doesn't really matter how much you change, if you're fixing the issue; for tiny issues like code style, you just shouldn't change it because the author wrote it how the author wants it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You could even assign a numeric scale to it, with 0 being uncritical and 10 being fix-this-or-die:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;00: code style                      Don't change&#xA;...&#xA;05: UI design errors                One line probably won't suffice&#xA;...&#xA;10: critical security flaws         Whatever's necessary&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;In general, though, if you're fixing an issue you should submit a request that contains a &lt;em&gt;complete&lt;/em&gt; fix of the issue, having previously forked the repository and made and tested your changes. Whatever you do, it should be complete: a complete new feature, a complete fix, a complete page of documentation, etc. This applies even for tiny fixes: make them complete, and you can submit a pull request. The author may like you &lt;em&gt;more&lt;/em&gt; if you bundle lots of little issue fixes, but if you've only got one to fix, submit when complete.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-07-13T12:04:46.423" LastActivityDate="2015-07-13T12:04:46.423" CommentCount="5" />
  <row Id="1104" PostTypeId="2" ParentId="1102" CreationDate="2015-07-13T12:23:50.287" Score="5" Body="&lt;p&gt;Pull requests should be easy to review and integrate. Big pull requests can be easy if done properly, and small pull requests can be extremely tricky.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If your change is going to be big, or if it has a huge impact (e.g. breaks backwards compatibility), you should discuss what you are going to do with the maintainers first.&#xA;It may turn out that some of them are already working on an alternative solution, or if the upcoming changes are about to make your original idea inapplicable and it will need modifications, for instance.&#xA;If the design and implementation details of your feature/fix are agreed upon, it's usually easy to review and merge. Also, it allows other people to collaborate with you on it since they also know what is going on.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;On the other hand, suppose I send you a one-line fix that uses obscure syntax and I don't supply any explanation of what precisely it does. It's probably easier to dismiss than to find out if it's worth merging.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I think one pull request should correspond exactly to one logical change though, no matter how big. Several unrelated changes such as fixes for totally different bugs or several features unrelated to one another is a bad idea, even if the pull request is small in terms of size.&lt;/p&gt;&#xA;" OwnerUserId="652" LastActivityDate="2015-07-13T12:23:50.287" CommentCount="0" />
  <row Id="1105" PostTypeId="2" ParentId="1102" CreationDate="2015-07-13T12:32:28.777" Score="5" Body="&lt;p&gt;You should only submit a pull request if it is complete. The problem is the definition of &quot;complete&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Your changes&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;must not break any existing unit/regression/integration tests.&lt;/li&gt;&#xA;&lt;li&gt;must include sample code and/or documentation for how to configure, deploy, use the feature,&lt;/li&gt;&#xA;&lt;li&gt;must be based on the current commit of the branch you want your changes to be merged against,&lt;/li&gt;&#xA;&lt;li&gt;should implement a feature that can actually be used OR&lt;/li&gt;&#xA;&lt;li&gt;should include a complete change to parts of the system that are not directly usable but that prepare the ground for future changes.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerDisplayName="user490" LastActivityDate="2015-07-13T12:32:28.777" CommentCount="0" />
  <row Id="1108" PostTypeId="2" ParentId="1070" CreationDate="2015-07-13T13:50:39.013" Score="3" Body="&lt;p&gt;The official website containing the documentation can be found &lt;a href=&quot;https://novena-guide.readthedocs.org/en/PVT2/source-licensing.html&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;. It seems that they have not made official documentation yet.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;However,&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;a href=&quot;http://www.wired.com/2014/04/novena/&quot; rel=&quot;nofollow&quot;&gt;article&lt;/a&gt; you linked to, is over a year and a half old. Since then numerous other articles have been released saying it is now &lt;strong&gt;fully&lt;/strong&gt; open source:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.wired.com/2014/01/open-source-laptop/&quot; rel=&quot;nofollow&quot;&gt;First Totally Open Source Software&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://techcrunch.com/2014/05/18/novena-the-crowdsourced-fully-open-laptop-is-shipping-this-winter/&quot; rel=&quot;nofollow&quot;&gt;Open source laptop&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://techpp.com/2014/04/03/novena-fully-open-source-laptop/&quot; rel=&quot;nofollow&quot;&gt;Fully open sourced laptop&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;So to answer your question:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The entire laptop is open source - with one exception to this being the processor (a Cortex A9 CPU). &lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="98" LastEditDate="2015-07-13T19:21:53.827" LastActivityDate="2015-07-13T19:21:53.827" CommentCount="7" />
  <row Id="1109" PostTypeId="2" ParentId="55" CreationDate="2015-07-13T14:01:11.320" Score="1" Body="&lt;p&gt;&lt;strong&gt;In order for a software to be public domain, it needs not to be copyrighted&lt;/strong&gt;. So only non-copyrighted open source softwares may qualify as public domain (&lt;em&gt;rather than open source!&lt;/em&gt;)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And if you want a program you have written to be in the public domain, you must take some legal steps to disclaim the copyright on it; otherwise, the program is copyrighted&lt;/p&gt;&#xA;" OwnerUserId="296" LastActivityDate="2015-07-13T14:01:11.320" CommentCount="0" />
  <row Id="1110" PostTypeId="2" ParentId="1102" CreationDate="2015-07-13T14:18:15.130" Score="4" Body="&lt;p&gt;The only correct answer here is &quot;it depends&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You need to know your audience - in this case the people who will be accepting the pull requests.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Often, when you first start contributing to a project, the best approach is to choose a small (usually low priority) bug. Being low priority, it's probably not being worked on yet. Being a small fix, it is an excellent &quot;hello world&quot; introduction to that project's community and their practices.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Next, clone the repository ('pull request' as a mechanism is generally related with Git-like VCS systems), and study the pattern of accepted requests. Look for similar small fixes, and see how they were done.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Then FOLLOW the style which is used in that project&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As an example, I have seen a bug fix in Git rejected because the developer fixed the bug &lt;em&gt;and&lt;/em&gt; renamed a local variable in the same commit. The renaming made sense (it was too similar to another, which had led to the bug being introduced). The community requested two pull-requests: one which did nothing more than rename the variable, and another which fixed the bug. Neither was more than a few lines of code. Both were accepted.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;On other projects, I have seen entire features come in as a single commit. This makes sense when all changes are additive (perhaps adding a new entry in a dispatch table, and the functions that the entry calls to add the feature.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Bear in mind that there is a difference between a &quot;pull request&quot; and a commit. Your single pull request can contain multiple commits.&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="29" LastEditDate="2015-07-13T14:40:43.907" LastActivityDate="2015-07-13T14:40:43.907" CommentCount="0" />
  <row Id="1112" PostTypeId="5" CreationDate="2015-07-13T14:35:57.407" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-13T14:35:57.407" LastActivityDate="2015-07-13T14:35:57.407" CommentCount="0" />
  <row Id="1113" PostTypeId="4" CreationDate="2015-07-13T14:35:57.407" Score="0" Body="The MIT License is a permissive free software license originating at the Massachusetts Institute of Technology (MIT)." OwnerUserId="168" LastEditorUserId="168" LastEditDate="2015-07-13T14:54:07.057" LastActivityDate="2015-07-13T14:54:07.057" CommentCount="0" />
  <row Id="1115" PostTypeId="1" AcceptedAnswerId="1118" CreationDate="2015-07-13T14:53:59.617" Score="3" ViewCount="249" Body="&lt;p&gt;While &lt;a href=&quot;http://opensource.stackexchange.com/questions/657/what-am-i-supposed-to-do-if-someone-is-breaking-the-terms-of-my-licensed-softwar&quot;&gt;this&lt;/a&gt; question says what to do if &lt;em&gt;someone&lt;/em&gt; is breaking the terms of a license, I am asking what do I do if &lt;em&gt;I&lt;/em&gt; breaking the terms of an open source license?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I was using a piece of software and misread one of the terms of the agreement. I reread the license recently and noticed I am breaking one of the terms.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To fix this issue, could I just delete all the files I have used in relation to this program? Or should I contact the owner?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="98" LastEditDate="2015-07-13T15:41:07.377" LastActivityDate="2015-07-13T15:41:07.377" Title="What do I do if I broke the terms of an open source license?" Tags="&lt;licensing&gt;" AnswerCount="2" CommentCount="7" ClosedDate="2015-07-13T18:08:48.800" />
  <row Id="1116" PostTypeId="5" CreationDate="2015-07-13T14:57:10.333" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-13T14:57:10.333" LastActivityDate="2015-07-13T14:57:10.333" CommentCount="0" />
  <row Id="1117" PostTypeId="4" CreationDate="2015-07-13T14:57:10.333" Score="0" Body="A binary file is a computer file that is not a text file. In this context this means a program that instead of being source code is compiled for a specific architecture and cannot (easily) be read by a human." OwnerUserId="168" LastEditorUserId="168" LastEditDate="2015-07-13T15:28:22.570" LastActivityDate="2015-07-13T15:28:22.570" CommentCount="0" />
  <row Id="1118" PostTypeId="2" ParentId="1115" CreationDate="2015-07-13T15:11:52.447" Score="5" Body="&lt;p&gt;It depends on whether you have, in fact, distributed something to other people in violation of the license. If you have not, you almost certainly have not violated the license, just prepared to.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you have, I can tell you what we would generally do at the Apache Foundation if we found that we had, by some accident, incorporated some inappropriately licensed content.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As soon as practical:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;make a commit to the source repository to remove the inappropriate content.&lt;/li&gt;&#xA;&lt;li&gt;make a release of the product that no longer contains the inappropriate content.&lt;/li&gt;&#xA;&lt;li&gt;notify that the release(s) containing inappropriate content had the problem they had.&lt;/li&gt;&#xA;&lt;li&gt;make it harder to download those releases.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;What I don't think that we'd do is to edit history in source control to remove all traces; for a license which imposes restrictions on distribution (the usual situation with FLOSS), there's no sufficient reason to do that.&lt;/p&gt;&#xA;" OwnerUserId="554" LastActivityDate="2015-07-13T15:11:52.447" CommentCount="0" />
  <row Id="1119" PostTypeId="2" ParentId="1115" CreationDate="2015-07-13T15:16:12.737" Score="3" Body="&lt;p&gt;That depends on the license, but in the case of the GNU GPLv3, this is what it says about termination (sec. 8):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This means that you're usually &lt;em&gt;allowed&lt;/em&gt; to fix the issue by doing whatever it takes to repair the violation after you've discovered your mistake.  There are some other terms (depending on whether this is your first time transgression or not), but the gist is that a good-faith violation is repairable, and if you're able to repair, you can go on using the licensed materials.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The GPLv3 does &lt;em&gt;not&lt;/em&gt; oblige you to inform the copyright holder (but other free software licenses may - read the license text).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you're not able to repair (for instance, you're distributing GPL code as part of an unfree project), then you need to stop doing it, delete the files, issue a recall to your customers, and probably: hire a lawyer to help you sort out the mess.&lt;/p&gt;&#xA;" OwnerUserId="606" LastActivityDate="2015-07-13T15:16:12.737" CommentCount="2" />
  <row Id="1120" PostTypeId="2" ParentId="1102" CreationDate="2015-07-13T19:47:26.430" Score="2" Body="&lt;p&gt;If you submit a pull request that's too big, they will just reject it and tell you to split it up.  If you submit one that's too small, they will just reject it and tell you to keep the branch around until it's done.  Pull requests are public.  You can get a good feel for the preferences of particular projects by viewing previous pull requests.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In my experience, most first-time contributors tend to err on the side of pull requests being a little too small.  They are eager to get their change accepted, and in the rush, they skip things like documentation, style guidelines, and unit tests.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Larger endeavors should be run by the maintainers first.  Again, in my experience, this doesn't tend to be an issue, as most contributors are eager (some say over-eager) to tell people about their idea.  I did this successfully myself as a new contributor twice.  In both instances I was asked to make one small pull request with a proof-of-concept.  Once they saw my idea worked and how it fit into the project, I was given the go ahead to implement it more extensively, in a second, much larger, pull request.&lt;/p&gt;&#xA;" OwnerUserId="722" LastActivityDate="2015-07-13T19:47:26.430" CommentCount="0" />
  <row Id="1121" PostTypeId="2" ParentId="1064" CreationDate="2015-07-13T21:06:01.077" Score="4" Body="&lt;p&gt;I think the &lt;a href=&quot;http://www.oshwa.org&quot; rel=&quot;nofollow&quot;&gt;Open Source Hardware Association (OSHWA)&lt;/a&gt; is probably one of the top organizations out there. They are active in the open hardware movement, increasing awareness and spreading information about projects.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Quoting &lt;a href=&quot;http://p2pfoundation.net/Open_Source_Hardware_Association&quot; rel=&quot;nofollow&quot;&gt;president Gabriel Levine&lt;/a&gt;,&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;OSHWA will continue to work together and with some advice from attorneys who are open to discussing some of the legal options and licenses available, compile some clarifying documents that can help companies and individual see what some legal options are available for producing and distributing open source hardware.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;That said, I'm having trouble accessing their website right now, so I cannot get to said list. At the moment, this is technically a link-only answer (sort of). If someone could add the list on, that would be great. If not, and I continue to have computer difficulties, I will delete this answer.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;EDIT (change as necessary): I followed your link to the OSHWA and found a &lt;a href=&quot;http://www.oshwa.org/definition/&quot; rel=&quot;nofollow&quot;&gt;definition&lt;/a&gt; of Open Hardware and in &lt;a href=&quot;http://www.oshwa.org/sharing-best-practices/&quot; rel=&quot;nofollow&quot;&gt;Best Practices&lt;/a&gt; is a section about Licensing, naming a few licenses, including normal OSS-licenses like GPL and BSD, Creative Commons-licenses and hardware-specific licenses like TAPR and CERN OHL.&lt;/p&gt;&#xA;" OwnerUserId="145" LastEditorUserId="55" LastEditDate="2015-07-14T09:07:25.223" LastActivityDate="2015-07-14T09:07:25.223" CommentCount="0" />
  <row Id="1122" PostTypeId="5" CreationDate="2015-07-14T09:16:44.177" Score="0" Body="&lt;p&gt;DRM, aka Digital Rights Management or Digital Restrictions Management (though more commonly the former), is a class of copy protection technologies used by software and hardware developers with the intent to control the use of digital content after sale. (&lt;a href=&quot;https://en.wikipedia.org/wiki/Digital_rights_management&quot; rel=&quot;nofollow&quot;&gt;Wikipedia&lt;/a&gt;)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;DRM in open source is generally viewed as a bad thing, because using it denies the Free Software Definition (aka you must not restrict how the licensed product can be used).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Use this tag on questions about DRM in free/open applications and projects.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-07-17T21:38:42.087" LastActivityDate="2015-07-17T21:38:42.087" CommentCount="0" />
  <row Id="1123" PostTypeId="4" CreationDate="2015-07-14T09:16:44.177" Score="0" Body="For questions about DRM, aka Digital (Rights/Restrictions) Management, and its applications to projects." OwnerUserId="64" LastEditorUserId="98" LastEditDate="2015-07-18T07:10:49.917" LastActivityDate="2015-07-18T07:10:49.917" CommentCount="0" />
  <row Id="1124" PostTypeId="5" CreationDate="2015-07-14T09:45:44.320" Score="0" Body="&lt;p&gt;Operating systems are basic software to use a computer. The tasks an operating system undertakes involve: memory management, launching programs, organizing the file system.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This tag should be used for questions about interaction of operating systems and open source software or open source operating systems.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-14T13:33:01.700" LastActivityDate="2015-07-14T13:33:01.700" CommentCount="0" />
  <row Id="1125" PostTypeId="4" CreationDate="2015-07-14T09:45:44.320" Score="0" Body="Operating systems are basic software to use a computer. This tag should be used for questions about interaction of operating systems and open source software or open source operating systems" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-14T13:32:57.037" LastActivityDate="2015-07-14T13:32:57.037" CommentCount="0" />
  <row Id="1126" PostTypeId="5" CreationDate="2015-07-14T09:56:45.343" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-14T09:56:45.343" LastActivityDate="2015-07-14T09:56:45.343" CommentCount="0" />
  <row Id="1127" PostTypeId="4" CreationDate="2015-07-14T09:56:45.343" Score="0" Body="Commercial activity is anything to make money. This tag is for question about making money with open source or other interferences between open projects and commercial activity." OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-14T13:33:07.557" LastActivityDate="2015-07-14T13:33:07.557" CommentCount="0" />
  <row Id="1128" PostTypeId="1" CreationDate="2015-07-14T10:05:53.867" Score="2" ViewCount="96" Body="&lt;p&gt;Munich - one of the biggest cities in Germany - has migrated its infrastructure to Linux, a project called &lt;a href=&quot;https://en.wikipedia.org/wiki/Limux&quot; rel=&quot;nofollow&quot;&gt;Limux&lt;/a&gt;. There was a lot of discussion surrounding this project. In the discussion also often costs are discussed. The different sides argue how much the transition to Linux and Open Source Software costs. See for example this &lt;a href=&quot;http://www.golem.de/news/muenchen-microsoft-veroeffentlicht-details-zur-limux-studie-1301-97192.html&quot; rel=&quot;nofollow&quot;&gt;news in german&lt;/a&gt; (I couldn't find something in english, sorry). There is discussed whether the project costs 23 million or 61 million Euro.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;My question is: How can the usage of Open Source Software cost so much? Isn't the software free for download? Which costs are involved in using Open Source Software/Free Software?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="168" LastEditDate="2015-07-14T11:34:58.817" LastActivityDate="2015-07-15T12:34:09.443" Title="How can it be that using open source software involves costs?" Tags="&lt;commercial&gt;&lt;finance&gt;" AnswerCount="4" CommentCount="1" />
  <row Id="1129" PostTypeId="2" ParentId="1128" CreationDate="2015-07-14T10:25:48.830" Score="3" Body="&lt;p&gt;&lt;strong&gt;Nothing is free.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;First off lets split your question(s) up.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;1. Isn't the software free for download?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;No, not always. &#xA;As &lt;a href=&quot;http://opensource.stackexchange.com/users/69/zizouz212&quot;&gt;Zizouz212&lt;/a&gt; &lt;a href=&quot;http://opensource.stackexchange.com/questions/456/paying-for-open-sourced-software/458#458&quot;&gt;wrote on a similar question&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You can pay for open source software. With Open Source, the source code must be made available, and provide options for forking and the like. Compiled versions can be paid for.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Like many other programs, open source software is generally similar to proprietary software. For developers, they can get their hands on code, and fork and experiment. For consumers, many might not see much of a difference, except that they may see it as open information.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;2. How can the usage of Open Source Software cost so much?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Well, now that you know that you CAN indeed pay to use open source software you can imagine compaines / govenments such as Munich, they wold need to pay for:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Changes to the software&lt;/li&gt;&#xA;&lt;li&gt;Bug fixes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Even though they have the source code, they have no one to change / fix it, so they would need to hire experienced developers which would cost money.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Which costs are involved in using Open Source Software/Free Software?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is a tricky question, mainly because it depends on many things but here are a few just as an example:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Developers (hiring them)&lt;/li&gt;&#xA;&lt;li&gt;Food for developers&lt;/li&gt;&#xA;&lt;li&gt;Computers&lt;/li&gt;&#xA;&lt;li&gt;Internet&lt;/li&gt;&#xA;&lt;li&gt;Website hosting&lt;/li&gt;&#xA;&lt;li&gt;Power (electricity bill)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;These are just a FEW of the costs that could be involved. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Keep in mind that just because something is open source does not mean it is free, people have to pay for dinner somehow! &lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="60" LastEditDate="2015-07-14T10:39:04.473" LastActivityDate="2015-07-14T10:39:04.473" CommentCount="2" />
  <row Id="1130" PostTypeId="2" ParentId="1128" CreationDate="2015-07-14T10:27:56.900" Score="4" Body="&lt;p&gt;Using software is more than just downloading the program and hitting run.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Migrating a existing infrastructure is a massive operation where you need to ensure no data is lost and minimize downtime. That takes planning.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Doing all that takes people, people want to get payed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Running the server itself takes electricity. Internet access isn't free either. I could go on...&lt;/p&gt;&#xA;" OwnerUserId="64" LastActivityDate="2015-07-14T10:27:56.900" CommentCount="1" />
  <row Id="1131" PostTypeId="2" ParentId="1128" CreationDate="2015-07-14T10:51:30.740" Score="7" Body="&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;You write, 'cost of change &lt;em&gt;to&lt;/em&gt; ...'. Change has cost. People have to do work. Changing between Linux and FreeBSD would also be costly for a large infrastructure.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;The developers of the open source alternative may not have chosen to build facilities that assist in the deployment and management of large numbers of systems -- features that Windows might have. This might have cost implications for both the transition and ongoing operations.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Newspapers are sold by, ahem, focussing. It's possible that Munich adopted Linux for ideological reasons, but more likely they did an analysis that showed cost advantages over the long term. You sell papers by focussing on the &lt;em&gt;transition&lt;/em&gt; cost and not mentioning the long term anticipated advantages.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="554" LastActivityDate="2015-07-14T10:51:30.740" CommentCount="0" />
  <row Id="1132" PostTypeId="1" CreationDate="2015-07-14T11:51:15.193" Score="6" ViewCount="42" Body="&lt;p&gt;Section &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode#s3a3&quot;&gt;3(a)(3)&lt;/a&gt; of the license &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;&gt;CC BY 4.0&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;While it does not explicitly say so in the license, might 3(a)(3) imply that the person that shares the Licensed Material (&quot;You&quot;) has to offer a way to be contacted by the Licensor?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Or in other words: May someone share my work (licensed under CC BY) without giving me the chance to request removal of (parts of) the attribution?&lt;/p&gt;&#xA;" OwnerUserId="138" LastActivityDate="2015-07-14T21:33:18.347" Title="Sharing CC BY licensed material without offering a way to be contacted" Tags="&lt;creative-commons&gt;&lt;distribution&gt;&lt;attribution&gt;&lt;cc-by&gt;" AnswerCount="2" CommentCount="3" />
  <row Id="1133" PostTypeId="2" ParentId="1132" CreationDate="2015-07-14T12:48:20.213" Score="2" Body="&lt;p&gt;&lt;strong&gt;No,&lt;/strong&gt; someone may not share your work licensed under CC BY without giving you the chance to request removal of (parts of) the attribution. If you as the owner ask the person using your work to change the attribution, they legally MUST!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However you do not need to give contact information to the owner, the CC-BY license would not &quot;imply&quot; anything, implying things causes confusion. Nowhere in the license does it say you MUST provide contact information. If the owner wants to request a change it is up to the owner to get in contact with you.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This does not mean that out of courtesy you cant contact the owner and ask. After all you are using their hard work, and it would be kind to ask rather than putting the owner through the trouble of finding you!&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="271" LastEditDate="2015-07-14T13:00:44.797" LastActivityDate="2015-07-14T13:00:44.797" CommentCount="4" />
  <row Id="1134" PostTypeId="1" AcceptedAnswerId="1135" CreationDate="2015-07-14T13:23:07.347" Score="-1" ViewCount="77" Body="&lt;p&gt;While driving in the car recently I noticed a &lt;a href=&quot;http://www.google.com/maps/about/images/behind-the-scenes/about/device-carousel1.jpg&quot; rel=&quot;nofollow&quot;&gt;Google Streetview car&lt;/a&gt; go by outside. Once I got home I went onto Google Streetview and looked around for a bit. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is when I noticed the copyright notice:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/p4RXl.jpg&quot; alt=&quot;google maps screenshot showing copyright notice&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;How is Google able to take photos of already possibly copyrighted/licensed objects, and how is it that they are able to relicense it?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="98" LastEditDate="2015-07-14T21:38:15.323" LastActivityDate="2015-07-14T21:38:15.323" Title="How is Google able to relicense their photos on Google Streetview, which may contain copyrighted content?" Tags="&lt;licensing&gt;&lt;copyright&gt;" AnswerCount="2" CommentCount="13" ClosedDate="2015-07-14T21:26:52.960" />
  <row Id="1135" PostTypeId="2" ParentId="1134" CreationDate="2015-07-14T13:57:59.390" Score="-1" Body="&lt;p&gt;Photography is a lovely thing. I can take a picture of my school, from one angle, and it will be my own work. Also, someone else can take a picture of my school, from the same angle, and it will be their work. Really, it depends on who clicked the button. Take this for example:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/1etMl.jpg&quot; alt=&quot;My Shot&quot;&gt;&lt;br&gt;&#xA;&lt;sup&gt; This is my shot, &lt;s&gt;and I totally reserve all rights&lt;/s&gt; Darn user contributions&lt;/sup&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/XbT9y.jpg&quot; alt=&quot;Other shot&quot;&gt;&lt;br&gt;&#xA;&lt;sup&gt;&lt;a href=&quot;https://commons.wikimedia.org/wiki/File:N812NW_Delta_Air_Lines_Airbus_A330-323X_-_cn_784_taxiing_@_Schiphol_on_13_July_2013_pic-001.JPG&quot; rel=&quot;nofollow&quot;&gt;Source&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'll tell you right now, they are the same model (Airbus A330), same location (Amsterdam Schipol), same a lot of things. But the works are distinct, in that I took the shot on top, and someone else took a shot on the bottom.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When people apply licenses to their photographic work, it is normally only to their work, &lt;em&gt;not&lt;/em&gt; the object that they took a picture of. Hence, if you were to open source the road, and I take a picture of the road, then the picture will be my work, and under full copyright.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Therefore, Google doesn't really need to do much. Many things that Google blurs out is for privacy reasons, if I walk beside a street view car, they'll have to blur out my face. So, if there is any issue, they simply blur it out.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The pictures that Google takes is their own work. Therefore, they are able to license/place a full copyright... etc. And because the photos belong to Google, they are able to do whatever they want, regardless of whether a similar shot has been taken.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Bottom Line:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Google is able to relicense these works because the photos &lt;em&gt;belong&lt;/em&gt; to &lt;em&gt;them&lt;/em&gt;. Since it is their own work, they are able to do whatever they would like with it.&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-07-14T17:03:46.960" LastActivityDate="2015-07-14T17:03:46.960" CommentCount="7" />
  <row Id="1136" PostTypeId="1" CreationDate="2015-07-14T16:35:00.847" Score="9" ViewCount="168" Body="&lt;p&gt;In Open projects, the source needs to be made available to anyone who requests it. As a result, it is incredibly easy to determine what the source is being used for, what each component does, and who wrote it. You could tell what was happening, whether it was good or bad.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;This leads me to my question: Was transparency of projects a main goal for the creation of FLOSS movements? Why is transparency such an important thing in FLOSS ideologies?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Essentially, was transparency a large factor in the creation of open movements? I am looking for a source or reference to this. &lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-07-15T05:30:51.790" LastActivityDate="2015-07-15T22:36:54.387" Title="Was transparency a major factor in the formation of Open Movements?" Tags="&lt;philosophy&gt;&lt;history&gt;&lt;transparency&gt;" AnswerCount="2" CommentCount="13" FavoriteCount="1" />
  <row Id="1137" PostTypeId="2" ParentId="1136" CreationDate="2015-07-14T19:18:07.310" Score="8" Body="&lt;p&gt;The problem with a concept like 'transparency' is that it is multi-layered. Being able to see the source code is an important aspect, but not all of it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When we talk about transparency in an organization's process, it means that we not only see the results of decisions (code changes in this context) but the &lt;strong&gt;reasoning&lt;/strong&gt; behind the decisions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Even for large projects, where much debate occurs in the open on mailing lists and discussion boards, there is often still a small group of core contributors (perhaps the maintainers) who determine the overall direction in which a project moves (short of it being forked). They may have a private agenda which goes beyond simply making the code available.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Lest this sound paranoid, consider some major open source projects which are largely funded by Corporations. The corporate strategy meetings where licensing changes, or the choice of new features etc, are decided are almost certainly not open for any community member to attend. We have no idea what commercial business reasons may be driving some of their decisions unless they choose to share them.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A project is only truly transparent if &lt;strong&gt;all&lt;/strong&gt; discussions are held in the open, and anyone can attend. And if meetings are fully minuted and the minutes published openly.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, given &lt;a href=&quot;https://en.wikipedia.org/wiki/Transparency_(behavior)&quot; rel=&quot;nofollow&quot;&gt;this definition&lt;/a&gt; of transparency, I would deem it unlikely to be a major goal in the decision to make any given project open-source or free.&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="29" LastEditDate="2015-07-15T22:36:54.387" LastActivityDate="2015-07-15T22:36:54.387" CommentCount="0" />
  <row Id="1138" PostTypeId="2" ParentId="1134" CreationDate="2015-07-14T21:27:20.433" Score="1" Body="&lt;p&gt;It's because they're licensing the &lt;em&gt;work&lt;/em&gt; not the &lt;em&gt;content&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I could take a picture of Van Gogh's most famous painting, and copyright it. I could take a picture of the Milky Way, whose ownership cannot be claimed by anyone under the &lt;a href=&quot;https://en.wikipedia.org/wiki/Outer_Space_Treaty&quot; rel=&quot;nofollow&quot;&gt;Outer Space Treaty&lt;/a&gt;, and call it mine.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I can do these things because in those situations, I'm copyrighting &lt;em&gt;my work&lt;/em&gt; - i.e. the photo. I'm &lt;em&gt;not&lt;/em&gt; claiming to have any rights to the content of the photo - the painting isn't mine, and I certainly don't own the Milky Way.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It's the same for Google: even if they're taking pictures of copyrighted art installations, they're copyrighting their photos, &lt;em&gt;not&lt;/em&gt; those installations.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-07-14T21:27:20.433" CommentCount="4" />
  <row Id="1139" PostTypeId="2" ParentId="1132" CreationDate="2015-07-14T21:33:18.347" Score="0" Body="&lt;p&gt;If it's not express in the license, it's &lt;em&gt;likely&lt;/em&gt; that it's not required (because people can use the defense that this requirement was unclear if it comes to court).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In this case, I can't find anything in the license that indicates you &lt;em&gt;must&lt;/em&gt; provide contact details, so it would seem to be OK.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, many methods of releasing an open source project come with contact details attached. Publishing on GitHub? You can be contacted using your account. Even if you release a binary on your personal website, there's still a chance - unless you've &lt;em&gt;deliberately&lt;/em&gt; obscured the whois information, it should contain a contact email address. And it's always possible that the registrar will give your contact details out, if law enforcement ask for it as a result of being informed of copyright violation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The point of this clause is to specify that &lt;em&gt;if&lt;/em&gt; you're contacted by the author and asked to change something, you must do so.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-07-14T21:33:18.347" CommentCount="0" />
  <row Id="1140" PostTypeId="1" AcceptedAnswerId="1141" CreationDate="2015-07-15T01:20:57.453" Score="6" ViewCount="240" Body="&lt;p&gt;My employer has given me to permission to open source a component of a project that I have been working on, allowing me to retain ownership and control, with the condition that they be acknowledged in some way.  This open source tool would be hosted on GitHub, as part of a larger collection of tools in an existing collaborative organization's repository, so not a part of our company's GitHub organization repositories.  It would seem that the best way to acknowledge my employer in a permanent and visible way would be to include some note in the software's license, but I was not sure if this were appropriate, or even legal.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is there a common way of acknowledging people or organizations in FLOSS licenses?  If not, what other options are there for acknowledgements?&lt;/p&gt;&#xA;" OwnerUserId="734" LastEditorUserId="69" LastEditDate="2015-07-15T02:19:41.383" LastActivityDate="2015-08-06T09:58:21.163" Title="Acknowledging employer in an open source project" Tags="&lt;licensing&gt;&lt;copyright&gt;&lt;attribution&gt;&lt;ownership&gt;" AnswerCount="5" CommentCount="7" />
  <row Id="1141" PostTypeId="2" ParentId="1140" CreationDate="2015-07-15T02:10:25.177" Score="3" Body="&lt;p&gt;Let me tell you one thing. Definitely, and please, &lt;em&gt;please&lt;/em&gt; don't modify the license that you apply to your software. For example: &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html&quot; rel=&quot;nofollow&quot;&gt;GPLv3&lt;/a&gt;, is copyrighted itself (emphasis is mine):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Copyright © 2007 Free Software Foundation, Inc. &lt;a href=&quot;http://fsf.org/&quot; rel=&quot;nofollow&quot;&gt;http://fsf.org/&lt;/a&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Everyone is permitted to copy and distribute verbatim copies of this license document, &lt;strong&gt;&lt;em&gt;but changing it is not allowed.&lt;/em&gt;&lt;/strong&gt; &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;You'll run into many problems by changing the legal code of a license.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;In terms of making a note of your company (or even yourself) in the project, there are a few ways you can do this:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;em&gt;Edit the project's source code:&lt;/em&gt;&lt;br&gt;&#xA;All you need to do is really put a few &quot;commented&quot; lines like so, likely at the top of the file:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;// Haha! This source code file has been viciously made to make a reference to my&#xA;// company! This is lovely for [insert-company-name-here]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Alright, maybe not &lt;em&gt;exactly like that&lt;/em&gt;... but you get the point.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Add a section in a &quot;&lt;code&gt;readme&lt;/code&gt;&quot; file.&lt;br&gt;&#xA;It is common for many projects to include a &lt;code&gt;readme&lt;/code&gt; file, with details such as installation instructions, notes, known issues... It makes sense to put some details here. The &lt;code&gt;readme&lt;/code&gt; file normally receives tons of traffic: people view it from within your repository, and even if they have the source code on their computer.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Overactor has also raised a good point: Using a FLOSS license would mean that others would be able to modify the files of the project that you make available themselves, when it is in their personal hands.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;One problem I see here is that redistributors are not obligated to keep this notice in there.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;For a solution... &lt;s&gt;You could specify something to make sure that the license does not apply to these notices or separate files. As far as I can remember, this is allowed (I may be wrong), but I will find a source to back that up.&lt;/s&gt; Yar, I can't remember...&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Forget all that -&gt; It's non-sense.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Thanks to Bart Van Ingen Schenau, the Apache 2.0 license has a clause requiring a NOTICE file to be kept within the project. The relevant clause is 4d):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If the Work includes a &quot;NOTICE&quot; text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Therefore, you can acknowledge your employer in the NOTICE file, and it will pass on to its derivatives.&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-07-15T16:34:02.257" LastActivityDate="2015-07-15T16:34:02.257" CommentCount="6" />
  <row Id="1142" PostTypeId="1" CreationDate="2015-07-15T04:29:53.903" Score="3" ViewCount="422" Body="&lt;p&gt;Answering a question &lt;a href=&quot;http://opensource.stackexchange.com/a/1141/69&quot;&gt;here&lt;/a&gt; put me in a drawback. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;In Open Source projects, it's clear that copyright notices shall be retained, especially when they contain copyleft and share alike clauses. However, the question really made me think, more than twice, about whether I can keep other &quot;notice&quot; files within the distribution.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What I need is to put a separate notice, such as security information, project stats, or any important data for that matter, within the project, and &lt;strong&gt;restrict its movement/deletion&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am wanting to know whether I am allowed to do this in a project, no matter what the license. If a specific kind of license is required, what clauses must it contain?&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="98" LastEditDate="2015-08-04T10:08:00.850" LastActivityDate="2015-08-04T10:18:36.163" Title="Can I force additional notices in my open source project?" Tags="&lt;project-management&gt;&lt;distribution&gt;&lt;derivative-works&gt;&lt;license-notice&gt;&lt;notices&gt;" AnswerCount="3" CommentCount="1" FavoriteCount="1" />
  <row Id="1143" PostTypeId="1" AcceptedAnswerId="1153" CreationDate="2015-07-15T06:02:53.277" Score="15" ViewCount="794" Body="&lt;p&gt;I'm new to the open source community. I've always wanted to contribute to successful existing open source projects. I thought that contribution to good open source projects was meant only for experienced great programmers. Since there is an open source community on Stack Exchange now, I thought I would ask here. &lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;How can someone new to the open source community (like me) start?&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;How does the contribution flow work in open source projects? (Like first maybe you monitor activities in that open source community, then read through the bugs list or contribute to documentation, etc. I don't know, I'm just speculating.)&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="738" LastEditorUserId="271" LastEditDate="2015-07-18T14:36:48.387" LastActivityDate="2015-07-18T14:36:48.387" Title="FLOSS projects : How and where can I start contributing?" Tags="&lt;contributor&gt;&lt;community&gt;&lt;educational-resources&gt;" AnswerCount="3" CommentCount="9" FavoriteCount="3" />
  <row Id="1144" PostTypeId="2" ParentId="1140" CreationDate="2015-07-15T06:13:51.627" Score="5" Body="&lt;p&gt;First, don't change the license. For most free software licenses, including GNU GPL, this is not even allowed.  Why having credits in the license itself is not a good idea is pointed out by the FSF in the essay: &lt;a href=&quot;http://www.gnu.org/philosophy/bsd.html&quot; rel=&quot;nofollow&quot;&gt;The [unmodified] BSD License Problem&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A legal requirements to preserve the &lt;em&gt;integrity of authorship&lt;/em&gt; and copyright information follows from article 6bis of the Berne Convention (about moral rights). In the USA, U.S. Code § 1202: &quot;Integrity of copyright management information&quot;, is quite explicit about this - &lt;a href=&quot;https://www.law.cornell.edu/uscode/text/17/1202&quot; rel=&quot;nofollow&quot;&gt;https://www.law.cornell.edu/uscode/text/17/1202&lt;/a&gt; - but similar provisions exists in the local laws for most Berne signatories. Since preservation of attribution, etc. is a &lt;em&gt;legal&lt;/em&gt; requirement, it applies universially (i.e. does not depend on the license used).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In addition, a reminder about this legal requirement can be found in many FLOSS licenses, such as Apache and the GNU GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, the GPL explicitly let you add &quot;legal notices or author attributions&quot; in any materials you distribute and also obliges any downstream recipient to &lt;em&gt;not&lt;/em&gt; remove such notices (see sec. 1 in GPLv2 and sec. 7 of GPLv3).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here is the relevant language in GNU GPLv3 sec. 7:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or&lt;br&gt;&#xA;  c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;In an appendix to the license, there is a section titled: &quot;How to Apply These Terms to Your New Programs&quot; that gives some examples, including a notice where you can assert authorship attribution and/or copyright.  If the program is interactive, you may also display this notice upon startup.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Section 1 of Gnu GPLv2 section 7 of GNU GPLv3 states clearly that it is a breach of license to remove such notices.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Please also note that legal notices asserting authorship, attribution and copyright does not give anyone &lt;em&gt;more&lt;/em&gt; rights than the right of acknowledgement. FLOSS licenses are designed to allow new maintainers to take over (in the worst case by creating a fork) if the initial sponsors/owners of a FLOSS project pull their support.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-16T11:22:32.767" LastActivityDate="2015-07-16T11:22:32.767" CommentCount="11" />
  <row Id="1145" PostTypeId="2" ParentId="1143" CreationDate="2015-07-15T06:24:59.320" Score="3" Body="&lt;p&gt;The first thing you should do is select a project. A good place to start would probably be a project you already &lt;em&gt;use&lt;/em&gt;, or are at least passionate about.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Second, I'd do some lurking - subscribe to the mailing list(s), and read a bit so you get the &quot;vibe&quot; of the community and get an initial feeling of what's acceptable and what's not, what kind of patches are welcome, etc. Once you get comfortable with that, start participating - answer simple questions you feel you understand fully, share your opinion on open questions, etc.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now you're ready to start getting your feet wet. Don't expect your first contribution to be re-writing the entire thing from scratch. Baby steps is the way do to it.&lt;br/&gt;&#xA;Before starting &lt;strong&gt;anything&lt;/strong&gt;, read the submission guide (e.g., &lt;a href=&quot;https://github.com/git/git/blob/master/Documentation/SubmittingPatches&quot; rel=&quot;nofollow&quot;&gt;here's git's&lt;/a&gt;, just as an example) and the coding standards (again, &lt;a href=&quot;https://github.com/git/git/blob/master/Documentation/CodingGuidelines&quot; rel=&quot;nofollow&quot;&gt;git's&lt;/a&gt;). Following them will (hopefully) prevent your patches from just being out-right ignored, not to mention it's just common courtesy. The more &quot;outgoing&quot; projects have an open task list, and the really outgoing ones have it broken down by skill/knowledge levels. If your choice project doesn't have such a  list, it's bug/issue tracker is a good place to start. (Simple) bugs are usually well scoped, and even if the solution isn't always obvious, the requirements usually are.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And most importantly - be ready for feedback. Very few patches get accepted in their first iteration, and although the feedback you get may be worded harshly, remember to take it as feedback on the patch (&quot;this isn't good enough to be merged yet&quot;), and not personally.&lt;/p&gt;&#xA;" OwnerUserId="327" LastActivityDate="2015-07-15T06:24:59.320" CommentCount="0" />
  <row Id="1146" PostTypeId="2" ParentId="1142" CreationDate="2015-07-15T06:30:03.683" Score="3" Body="&lt;p&gt;A short answer is &quot;no&quot;: You can not restrict users to not move or not delete any part of your project (except copyright notices - the integrity of copyright notices are required by law, and also by most free software licenses).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The GPLv3 (sec. 7: Additional Terms) say that may add some additional terms to your license, and one of these may be:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;But as this is limited to &quot;legal notices or author attributions&quot; it doesn't let you require preservation of arbitrary materials such as &quot;project stats&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And to make this absolutely clear, the license goes on to say:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;That is, given that you want to use a &lt;em&gt;recognized&lt;/em&gt; (by the FSF or OSI) free software / open source license. Provided you use a license where you grant users the four freedoms that is inherent in free software - you cannot impose &lt;em&gt;any&lt;/em&gt; additional restrictions on what the user can do.  (You can of course concoct a your own non-free custom license and put whatever you like, including restrictions on what the user may alter or delete, in it.) &lt;/p&gt;&#xA;&#xA;&lt;p&gt;For the record, I know of no license that qualify as &quot;free software&quot; under the FSF definition, or &quot;open source&quot; under the OSI defintion, that will allow you to do this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As pointed out by &lt;em&gt;user490&lt;/em&gt;, you can insist on having &lt;em&gt;unchangeable sections&lt;/em&gt; in a document that is part of your project if the document is licensed under the GFDL (instead of the GPL). However, this is a documentation license, not a software license, and besides: There is nothing that will stop someone downstream from you removing that particular &lt;em&gt;document&lt;/em&gt; - including the &quot;invariant section&quot; - if they for some reason really wanted to remove this text from their fork of your project.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-04T10:18:36.163" LastActivityDate="2015-08-04T10:18:36.163" CommentCount="0" />
  <row Id="1147" PostTypeId="2" ParentId="1142" CreationDate="2015-07-15T06:47:32.633" Score="6" Body="&lt;p&gt;None of the existing licenses for software that are Free Software licenses or that are approved by the OSI allow this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But there is something like what you ask for in the &lt;a href=&quot;https://www.gnu.org/licenses/gfdl.html&quot; rel=&quot;nofollow&quot;&gt;GNU Free Documentation License&lt;/a&gt;. This license, which was created for manuals, textbooks, and other written documentation, knows something called &lt;strong&gt;Invariant Sections&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The &quot;Invariant Sections&quot; are certain Secondary Sections whose titles are designated, as being those of Invariant Sections, in the notice that says that the Document is released under this License. If a section does not fit the above definition of Secondary then it is not allowed to be designated as Invariant. The Document may contain zero Invariant Sections. If the Document does not identify any Invariant Sections then there are none.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;What does this mean? Let's look at an example, the &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/emacs.html&quot; rel=&quot;nofollow&quot;&gt;GNU Emacs manual&lt;/a&gt;. The license for this manual is:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with &lt;strong&gt;the Invariant Sections being “The GNU Manifesto,” “Distribution” and “GNU GENERAL PUBLIC LICENSE,”&lt;/strong&gt; with the Front-Cover Texts being “A GNU Manual,” and with the Back-Cover Texts as in (a) below. A copy of the license is included in the section entitled “GNU Free Documentation License.” &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;(emphasis by me).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One of the invariant sections is &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Manifesto.html#Manifesto&quot; rel=&quot;nofollow&quot;&gt;The GNU Manifesto&lt;/a&gt; which &lt;strong&gt;must be included in all derived works unchanged&lt;/strong&gt;. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The GNU FDL also knows  something called &lt;strong&gt;Front-Cover Texts&lt;/strong&gt; and &lt;strong&gt;Back-Cover Texts&lt;/strong&gt; (see the above quote). These texts are small snippets of text that &lt;strong&gt;must be reproduced on the front- or back-cover of the work unchanged.&lt;/strong&gt;&lt;/p&gt;&#xA;" OwnerDisplayName="user490" LastEditorDisplayName="user490" LastEditDate="2015-07-15T07:15:57.837" LastActivityDate="2015-07-15T07:15:57.837" CommentCount="3" />
  <row Id="1148" PostTypeId="2" ParentId="1143" CreationDate="2015-07-15T06:51:39.897" Score="7" Body="&lt;blockquote&gt;&#xA;  &lt;ol&gt;&#xA;  &lt;li&gt;How and where should a newbie like me start?&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Pick a project you &lt;em&gt;use&lt;/em&gt;, and that you think can be improved (a bug needs fixing, there is a feature that you would like to see added).  Make sure your contribution is small and focused.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ol start=&quot;2&quot;&gt;&#xA;  &lt;li&gt;How does the contribution flow works in open source projects? (Like first maybe you monitor activities in that open source community, then read through the bugs list or contribute to documentation, etc. I don't know, I'm just speculating.)&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;You're on the right track.  The details depend on the project.  Drupal, for instance, offers a detailed description of &lt;a href=&quot;https://www.drupal.org/novice&quot;&gt;novice workflow&lt;/a&gt;. Look for similar guidelines in whatever project you're interested in contributing to.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-15T09:40:59.807" LastActivityDate="2015-07-15T09:40:59.807" CommentCount="5" />
  <row Id="1150" PostTypeId="1" CreationDate="2015-07-15T09:59:20.757" Score="11" ViewCount="2182" Body="&lt;p&gt;Does publishing my code on GitHub make it FLOSS automatically? Is there some license automatically assigned to it? Is it &lt;a href=&quot;https://opensource.stackexchange.com/questions/1149/what-are-the-important-things-to-note-while-building-your-own-open-source-projec&quot;&gt;&quot;technically or say literally, open source&quot;&lt;/a&gt;?&lt;/p&gt;&#xA;" OwnerDisplayName="user490" LastEditorUserId="29" LastEditDate="2015-07-17T22:21:50.580" LastActivityDate="2015-07-17T22:21:50.580" Title="Is my code FLOSS just because it is published it on GitHub?" Tags="&lt;licensing&gt;&lt;publishing&gt;&lt;github&gt;" AnswerCount="2" CommentCount="0" />
  <row Id="1151" PostTypeId="2" ParentId="1150" CreationDate="2015-07-15T10:03:39.433" Score="7" Body="&lt;p&gt;Unfortunately, &lt;a href=&quot;https://github.com/blog/1964-license-usage-on-github-com&quot; rel=&quot;nofollow&quot;&gt;many open source projects does not specify the license&lt;/a&gt; on github. Legally, anything that comes without a license that provides freedoms to the users defaults to &lt;em&gt;all rights reserved&lt;/em&gt;. On GitHub, there are &lt;em&gt;no defaults&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Language giving permission to &quot;view and fork&quot; in the GitHub TOS are 1) not a license; and 2) may have no legal effect.  Do not confuse this with a real license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Without a real FLOSS license associated with your project, it is not &lt;em&gt;free software&lt;/em&gt;, and others will probably want to not use it because of the unknown legal hazards associated with doing so.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You decide what license to use. A rundown of the properties of each is outside the scope of this question. However, to be called &quot;Open Source&quot; or &quot;Free Software&quot;, the license should preserve the &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.en.html&quot; rel=&quot;nofollow&quot;&gt;four essential freedoms&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The FSF provides an &lt;a href=&quot;http://www.gnu.org/licenses/license-list.en.html&quot; rel=&quot;nofollow&quot;&gt;excellent guide&lt;/a&gt; to free software licenses.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is also a &lt;a href=&quot;https://help.github.com/articles/open-source-licensing/&quot; rel=&quot;nofollow&quot;&gt;licensing FAQ at GitHub&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="69" LastEditDate="2015-07-15T12:37:38.257" LastActivityDate="2015-07-15T12:37:38.257" CommentCount="7" />
  <row Id="1152" PostTypeId="2" ParentId="1150" CreationDate="2015-07-15T10:03:49.273" Score="16" Body="&lt;p&gt;No, GitHub allows releases with different licenses. If you do not choose one, it is the usual basic assumption: all rights reserved. This is however overlayed by the terms of service you (implicitly or explicitly) accepted by using the site and creating an account. In the &lt;a href=&quot;https://help.github.com/articles/github-terms-of-service/&quot;&gt;case of Github&lt;/a&gt; it allows others to view and fork your project:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;However, by setting your pages to be viewed publicly, you agree to&#xA;  allow others to view your Content. By setting your repositories to be&#xA;  viewed publicly, you agree to allow others to view and fork your&#xA;  repositories.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Other websites may have other terms of services, and in a few cases an open license is automatically assigned, for example in Wikipedia and StackExchange user posts have automatically the CC-BY-SA license assigned.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;GitHub has a &lt;a href=&quot;https://help.github.com/articles/open-source-licensing/&quot;&gt;help-site for choosing an open source license&lt;/a&gt;. Read there for more information.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;At this help-site from Github is also &lt;a href=&quot;https://help.github.com/articles/open-source-licensing/#what-happens-if-i-dont-choose-a-license&quot;&gt;noted,&lt;/a&gt; that your project doesn't have an automatic license applied but some things from the terms of service:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You're under no obligation to choose a license. It's your right not to&#xA;  include one with your code or project, but please be aware of the&#xA;  implications. Generally speaking, the absence of a license means that&#xA;  the default copyright laws apply. This means that you retain all&#xA;  rights to your source code and that nobody else may reproduce,&#xA;  distribute, or create derivative works from your work. This might not&#xA;  be what you intend.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Even if this is what you intend, if you publish your source code in a&#xA;  public repository on GitHub, you have accepted the Terms of Service&#xA;  which do allow other GitHub users some rights. Specifically, you allow&#xA;  others to view and fork your repository.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;If you want to share your work with others, we strongly encourage you&#xA;  to include an open source license.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-15T10:44:53.987" LastActivityDate="2015-07-15T10:44:53.987" CommentCount="2" />
  <row Id="1153" PostTypeId="2" ParentId="1143" CreationDate="2015-07-15T10:33:58.300" Score="13" Body="&lt;h1&gt;Where can I start contributing?&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;There are two obvious stages to this: pick a language, pick a project.&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Pick a language&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;You should pick a language with which you are familiar and proficient. I'd advise &lt;em&gt;not&lt;/em&gt; trying to contribute to projects in languages you're not that great in - yes, it is a good opportunity to improve your skills in that language, but it's &lt;em&gt;also&lt;/em&gt; a good way to annoy the developers because you're doing things in a way that the language could do much better. A good example of this is Python:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;some_list = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]&#xA;if hasattr(some_list, &quot;a&quot;):&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;This seems to be correct to many new in the language: the documentation suggests that &lt;code&gt;hasattr&lt;/code&gt; returns true if the given list has the given attribute. However, it won't work as expected, and could actually be done in a much more 'Pythonic' fashion:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;some_list = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]&#xA;if &quot;a&quot; in some_list:&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Moral of the story: pick a language you're good at, so you don't have to worry about your coding style or practices being the cause of your pull requests getting rejected.&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Pick a project&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Now you pick a project, written in your chosen language, that you want to contribute to. If you've had some exposure to the language, you may already have come across useful utilities or tools that you use that are open-source: these are good choices because you'll be &lt;em&gt;motivated&lt;/em&gt; to contribute well.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You should always pick a project which interests you. If you're not interested in crunching data, don't pick a graphing library. If machine learning gets you going, try to find something in that area. Maybe you can even contribute to a project you're already using.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A good resource for finding projects if you're stuck is &lt;a href=&quot;http://www.codetriage.com/&quot;&gt;Code Triage&lt;/a&gt;, which lists repositories on GitHub by the number of open issues they have. Pick your language, pick an interesting project, pick an issue and try to solve it.&lt;/p&gt;&#xA;&#xA;&lt;h1&gt;What's the contribution flow?&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;This really depends what you're good at, though there are some givens. You should &lt;em&gt;always&lt;/em&gt; start by familiarising yourself with the project: read the documentation, read the codebase. If the hosting supports it, you should clone the repository and build the software on your local machine, and have a play around with the code to figure out what each part does.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Once you're familiar, you can choose what you want to do. If you're a technical writer, writing documentation is probably a good choice for you. If you hate writing long documents, but you're good at programming, pick an issue and try to fix it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Whatever you do, make your changes in a fork of the project's repository somewhere you control. Test them (see &lt;a href=&quot;http://opensource.stackexchange.com/questions/826/whose-responsibility-is-it-to-test-contributions&quot;&gt;Whose responsibility is it to test contributions?&lt;/a&gt; for information about who does what testing) and make sure everything works. Make sure your code style conforms to that of the project: developers aren't going to be happy with ten thousand different styles in their project because they've got lots of &lt;a href=&quot;http://opensource.stackexchange.com/q/352/168&quot;&gt;pull requests&lt;/a&gt;. Make sure you've read any contributing information the project has. If you've conformed to everything, you can submit a pull request to the project's developers, who will review your changes.&lt;/p&gt;&#xA;&#xA;&lt;h1&gt;Expect rejection.&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;You're not perfect and neither is your code; the project developers may well find some issues with it or some style point they don't like. It's your work, so it's your responsibility to fix these: monitor the feedback on your pull request, and use it to change anything they ask you to. When that's done, you can resubmit your pull request and have it merged. Wash, rinse, repeat.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="168" LastEditDate="2015-07-15T11:06:39.550" LastActivityDate="2015-07-15T11:06:39.550" CommentCount="1" CommunityOwnedDate="2015-07-15T10:50:54.583" />
  <row Id="1154" PostTypeId="1" AcceptedAnswerId="1157" CreationDate="2015-07-15T10:38:26.297" Score="32" ViewCount="4497" Body="&lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/open-source-licensing/#what-happens-if-i-dont-choose-a-license&quot;&gt;The Github FAQ states&lt;/a&gt;: (emphasis mine)&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You're under no obligation to choose a license. It's your right not to&#xA;  include one with your code or project, but please be aware of the&#xA;  implications. Generally speaking, the absence of a license means that&#xA;  &lt;strong&gt;the default copyright laws apply&lt;/strong&gt;. This means that you retain all&#xA;  rights to your source code and that nobody else may reproduce,&#xA;  distribute, or create derivative works from your work. This might not&#xA;  be what you intend.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Even if this is what you intend, if you publish your source code in a&#xA;  public repository on GitHub, you have accepted the Terms of Service&#xA;  which do allow other GitHub users some rights. Specifically, &lt;strong&gt;you allow&#xA;  others to view and fork your repository&lt;/strong&gt;.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;If you want to share your work with others, we strongly encourage you&#xA;  to include an open source license.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So, if a project is &quot;all rights reserved&quot;, but then users have the &quot;right to fork&quot; it, what's the license of the new fork?&lt;/p&gt;&#xA;" OwnerUserId="455" LastEditorUserId="69" LastEditDate="2015-07-15T12:13:53.343" LastActivityDate="2015-07-16T04:43:04.310" Title="How does Github's &quot;forking right&quot; cope with an &quot;All rights reserved&quot; project?" Tags="&lt;copyright&gt;&lt;forking&gt;&lt;unlicensed-code&gt;&lt;github&gt;" AnswerCount="4" CommentCount="6" FavoriteCount="7" />
  <row Id="1155" PostTypeId="2" ParentId="1154" CreationDate="2015-07-15T10:41:06.070" Score="9" Body="&lt;p&gt;Well, you actually give up a few rights by accepting the terms of service. The &lt;a href=&quot;https://help.github.com/articles/github-terms-of-service/&quot;&gt;terms of service&lt;/a&gt; declare:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;However, by setting your pages to be viewed publicly, you agree to&#xA;  allow others to view your Content. By setting your repositories to be&#xA;  viewed publicly, you agree to allow others to view and fork your&#xA;  repositories.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So effectively you don't have all rights reserved, but most rights reserved.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But doing so leaves big grey areas:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Can the forker create and distribute binaries?&lt;/li&gt;&#xA;&lt;li&gt;Can the original or forked source code be released somewhere else than github?&lt;/li&gt;&#xA;&lt;li&gt;Under which conditions can the resulting program be used?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;It may be not very safe to use such code with undeclared license on Github.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-15T10:54:46.403" LastActivityDate="2015-07-15T10:54:46.403" CommentCount="6" />
  <row Id="1156" PostTypeId="2" ParentId="1154" CreationDate="2015-07-15T11:09:19.363" Score="6" Body="&lt;p&gt;The two fragments you've highlighted contradict each other.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The real question is: &lt;strong&gt;What will the courts make out of this, if a fork happens, and the original author decides to sue?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am not going to predict the outcome of such a conflict. The court may decide the law is superior to the click-wrap of GitHub's TOS, or vice versa. Nobody will know the answer until this has been tried in court.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, I would strongly advice anyone against forking a GitHub project without a license. IMHO the legal risks of doing so outweigh any benefits.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, if you do so, &quot;what's the license of the new fork&quot;? Well, unless you put an explicit license on your fork the copyright law default (&quot;All rights reserved&quot;) applies to the derivative, with the original author holding the copyright on his lines of code, and you holding the copyright on your adaptations.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also: Putting an explicit FLOSS license will increase your legal liability if you do this. Not only are you violating the original author's copyright, you are falsifying the integrity of rights information. This may increase the damages you will have to pay.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="29" LastEditDate="2015-07-15T13:45:40.807" LastActivityDate="2015-07-15T13:45:40.807" CommentCount="6" />
  <row Id="1157" PostTypeId="2" ParentId="1154" CreationDate="2015-07-15T12:05:45.870" Score="36" Body="&lt;p&gt;First of all, these two statements are made in sequence, not parallel (credit to &lt;a href=&quot;http://opensource.stackexchange.com/users/485/msalters&quot;&gt;MSalters&lt;/a&gt; for &lt;a href=&quot;http://opensource.stackexchange.com/questions/1154/how-does-githubs-forking-right-cope-with-an-all-rights-reserved-project/1157#comment1978_1157&quot;&gt;crystallizing this point&lt;/a&gt;):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Generally speaking&lt;/strong&gt;, the absence of a license means that the default copyright laws apply.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;...&lt;strong&gt;if you publish your source code in a public repository on GitHub&lt;/strong&gt;... you allow others to view and fork your repository.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The first statement is a &lt;em&gt;general&lt;/em&gt; statement about copyright law. &lt;/li&gt;&#xA;&lt;li&gt;The second statement is about a license grant required by the GitHub Terms of Service.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;They are both true, and if you host your code on GitHub, the second, specific statement takes precedence over the first general rule wherever the second rule applies. The second statement is a notice that hosting on GitHub requires you to make certain license grants to GitHub users which differ from the default rules of copyright.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Below is an inspection of what the &quot;right to fork&quot; could possibly mean, which will clarify the question: &quot;What's the license of the new fork?&quot;&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;(&lt;em&gt;This is not legal advice. Furthermore, this barely &lt;strong&gt;regular&lt;/strong&gt; advice, and is based on a speculative -- but coherent -- reading of some ambiguity in the GitHub TOS.&lt;/em&gt;)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here's what the &lt;a href=&quot;https://help.github.com/articles/github-terms-of-service/&quot;&gt;GitHub Terms of Service&lt;/a&gt; has to say about forking:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;By setting your repositories to be viewed publicly, you agree to allow others to view and fork your repositories.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;The term &quot;fork&quot; is not defined anywhere in the GitHub Terms of Service&lt;/strong&gt;, but it seems perfectly sensible to assume that &quot;fork&quot; here is meant in the sense that it is used elsewhere on github.com: the Fork button.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/lr4ml.png&quot; alt=&quot;a &amp;quot;Fork&amp;quot; button on a GitHub repository page&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;GitHub &lt;em&gt;probably&lt;/em&gt; intends &quot;the right to fork&quot; to mean &quot;the right to use the Fork feature of the github.com website.&quot; In this case, &quot;creating a fork&quot; would &lt;em&gt;not&lt;/em&gt; mean generally creating a copy or derivative work (as it does in general FLOSS parlance), but rather it means &lt;em&gt;triggering the software of github.com to create and host a verbatim copy of a repository&lt;/em&gt; and categorize that copy under the user's list of forks.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If the original copyright owner doesn't license any other permissions, clicking that button is all that the TOS-required permission allows the user can do. This doesn't grant any rights to create a derivative work, or to redistribute the code outside of github.com, since the &quot;Fork&quot; feature is intrinsic to the github.com website.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Speculation: this right-to-fork language in the GitHub TOS was probably included to prevent legal issues around the use of the Fork feature. The intent was likely something to the effect of, &quot;You must license the minimum amount of rights to allow github.com's Fork software feature to operate.&quot;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Based on this reading of &quot;fork,&quot; if another user were to use a github.com-hosted forked-repository to prepare and distribute a derivative work, that would infringe on the owner's copyright, since such an action is outside the scope of the Fork software feature. Similarly, if the user were to create a verbatim copy outside the context of github.com's Fork functionality (e.g. copying the code to another website), that would also not be permitted. The TOS does not allow the right to create copies generally; it &lt;em&gt;only&lt;/em&gt; requires the author to grant copying permission inasmuch as copying is a necessary component of the Fork feature.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;(All that said, this is speculative based on a specific reading of &quot;fork.&quot; I'd like to say, on a personal note, it &lt;em&gt;is&lt;/em&gt; kind of ridiculous that the GitHub Terms of Service use &quot;fork&quot; without a shred of definition to be seen.)&lt;/p&gt;&#xA;" OwnerUserId="50" LastEditorUserId="50" LastEditDate="2015-07-15T14:20:42.650" LastActivityDate="2015-07-15T14:20:42.650" CommentCount="9" />
  <row Id="1158" PostTypeId="2" ParentId="1128" CreationDate="2015-07-15T12:25:30.143" Score="1" Body="&lt;p&gt;The munich city administration has to do business in various areas. Ranging from citizen registration, via building requests, to lost-and-found office and a lot more. Some examples of how a move to open source solutions involves costs:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The migration needs to be planned and organised, which is really a tremendous project on its own.&lt;/li&gt;&#xA;&lt;li&gt;Running dedicated applications that are &quot;self-made&quot; or at least largely customized. Hence it is not&#xA;sufficient to download and deploy existing open source software - it&#xA;has to be adapted to the special needs.&lt;/li&gt;&#xA;&lt;li&gt;Even if they switch from MS Office to OpenOffice/LibreOffice this cost money in terms of training and adapting additional components needed like templates and interfaces to other parts of the administrative infrastructure.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;But on the other hand a lot of costs for licenses are saved and the dependance from single providers is reduced which are very positive factors for a final costs calculation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A brief financial breakdown is given in a &lt;a href=&quot;https://joinup.ec.europa.eu/elibrary/case/limux-it-evolution-open-source-success-story-never&quot; rel=&quot;nofollow&quot;&gt;press release&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;In his final report, project leader Hofmann explains: “Even though the project timescale was extended by 80 percent from five to nine years, the cost only rose by 44 percent (from €12 million to € 18.7 million).” The distribution of costs reveals some interesting aspects:&lt;br&gt;&lt;br&gt;&#xA;  costs for applications were far lower than expected, because much more could be done with free software or local solutions (like local virtualisation) than initially predicted&lt;br&gt;&lt;br&gt;&#xA;  expenses for internal staff were lower than expected, in part because there were not enough applicants for all of the jobs&lt;br&gt;&lt;br&gt;&#xA;  external consulting costs were much higher than expected, because of both the lack of internal staff and missing technical knowledge within the municipality's administration.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="399" LastEditorUserId="399" LastEditDate="2015-07-15T12:34:09.443" LastActivityDate="2015-07-15T12:34:09.443" CommentCount="0" />
  <row Id="1159" PostTypeId="2" ParentId="1140" CreationDate="2015-07-15T13:47:41.327" Score="1" Body="&lt;p&gt;A common way would be to add the company to the copyright statements, e.g.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;Copyright 2012, 2013, 2014 Company Name&#xA;Copyright 2012, 2013, 2014, 2015 Your Name&#xA;&#xA;This is free software, licensed under the terms of the GNU General Public License, version 2.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;etc.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This reflects the reality quite well (they are still a copyright holder, which is why they had to agree to relicensing the software to make it open source), and also creates an attribution that may not be deleted.&lt;/p&gt;&#xA;" OwnerUserId="745" LastActivityDate="2015-07-15T13:47:41.327" CommentCount="9" />
  <row Id="1161" PostTypeId="2" ParentId="1136" CreationDate="2015-07-15T19:04:50.893" Score="7" Body="&lt;p&gt;Nowadays, most FLOSS (free/libre/open-source software) projects have a public code repository, which everyone can browse. But historically this wasn't always the case.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Part of the reason was of course that in the early days of free software, the tools for version control weren't as good as they are today (&lt;a href=&quot;http://en.wikipedia.org/wiki/Concurrent_Versions_System&quot;&gt;CVS&lt;/a&gt;, the first freely available version control system that managed whole projects and not just individual files, only appeared in the late 1980s). Another reason was that many people didn't have enough bandwidth to download sources, they could only get sources on tape or CD. Since distribution was infrequent, there was little motivation to get the whole change history. It was common to include a summary of changes in a &lt;a href=&quot;https://en.wikipedia.org/wiki/Changelog&quot;&gt;changelog file&lt;/a&gt; (a tradition that most projects either have abandoned, or keep going by generating the changelog from the VC history).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Beyond the technical issues, there &lt;em&gt;were&lt;/em&gt; philosophical differences. It's been a long time, and I'm working from memory, so I'm afraid I don't have references; I'll try to find some (probably old mailing lists). There definitely have been disagreements as to the importance of making all development public. In particular, GNU projects did not do so, for a long time. For the first 20 years or so of the project, only new beta or release versions were released, not intermediate working revisions, and this was presented as a normal thing, not a technical limitation. The OpenBSD project, in particular, criticized this model, and claimed that it was important to make the whole project history public in real time. So transparency was a major virtue for OpenBSD, but irrelevant for GNU.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some famous FLOSS projects that kept their development hidden for a long time include &lt;a href=&quot;https://en.wikipedia.org/wiki/TrueCrypt&quot;&gt;TrueCrypt&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/NetHack&quot;&gt;NetHack&lt;/a&gt;. With both of these effectively stopped, I can't think of any remaining major FLOSS project that develops behind closed doors, apart from projects maintained by companies as an enabler of their main business (such as Android), with open source chosen not for philosophical reasons but for practical reasons (ability to reuse existing open source code, encouragement for third parties to tune the software). I think that nowadays, most supporters of free software consider transparency during development the norm, whether they consider it philosophically important or not.&lt;/p&gt;&#xA;" OwnerUserId="60" LastActivityDate="2015-07-15T19:04:50.893" CommentCount="0" />
  <row Id="1163" PostTypeId="1" CreationDate="2015-07-16T00:37:41.620" Score="4" ViewCount="89" Body="&lt;p&gt;With free licenses, one cannot restrict &lt;a href=&quot;http://opensource.stackexchange.com/questions/53/can-i-restrict-who-can-utilize-my-software&quot;&gt;who or how the software is used&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Suppose that I construct a &lt;a href=&quot;http://nonwhiteheterosexualmalelicense.org/&quot; rel=&quot;nofollow&quot;&gt;license&lt;/a&gt; that says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If you are not Steve you are permitted to license under &lt;strong&gt;A&lt;/strong&gt;; if you are Steve then you are permitted to license under &lt;strong&gt;B&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Where &lt;strong&gt;A&lt;/strong&gt; and &lt;strong&gt;B&lt;/strong&gt; are both terms that, when considered in isolation, would be free/open.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This means that the software is freely available to everybody at any point, but the exact terms discriminate based on some arbitrary criterion (let's pretend the &quot;you are Steve&quot; part is legally unambiguous).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is such a license still considered free? Or open source? Both? Neither?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To clarify, because this is indeed a bit confusing:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;This license is &lt;em&gt;not&lt;/em&gt; dual licensing; not everyone can license under terms A, nor B; the licensor does not choose which terms to abide, it is dictated by the license itself&lt;/li&gt;&#xA;&lt;li&gt;The license itself does not give the right to relicense; a not-Steve cannot fork and redistribute under terms that grant a universal license under A, even to the Steves, and vice versa. The discriminatory mechanism remains, that is, if Steve licenses from not-Steve, then he must follow terms B.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="175" LastEditorUserId="175" LastEditDate="2015-07-16T03:38:52.033" LastActivityDate="2015-07-16T04:28:59.797" Title="Are discriminatory free licenses still free?" Tags="&lt;licensing&gt;&lt;open-source-definition&gt;&lt;free-software-definition&gt;" AnswerCount="1" CommentCount="4" />
  <row Id="1165" PostTypeId="1" CreationDate="2015-07-16T03:22:10.983" Score="6" ViewCount="429" Body="&lt;p&gt;When speaking to my friends about FOSS, a common concern comes up that if they release their code under a free and open source license, this might encourage companies to 'steal' their hard work without giving them compensation.  Obviously if the code was released under a free and open license it wouldn't be stealing but the sentiment remains.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;My question is:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Are there cases where individual contractors or small companies (1-5 employees, say) have released their source code under a free and open license and had a bigger company under cut them, take customers or profit away from them or drive them out of business?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Ultimately I think there are stronger arguments to make source code free and open than &quot;bigger companies won't take business away from you&quot; (i.e. &quot;that doesn't happen&quot;) but I'm curious if there are any real world cases where making software free and open have significantly hurt a small software shop.&lt;/p&gt;&#xA;" OwnerUserId="682" LastActivityDate="2015-07-16T05:12:30.507" Title="Examples of companies undercutting smaller companies using FOSS?" Tags="&lt;development&gt;&lt;software&gt;&lt;law&gt;&lt;monetization&gt;&lt;history&gt;" AnswerCount="1" CommentCount="2" />
  <row Id="1166" PostTypeId="2" ParentId="1163" CreationDate="2015-07-16T03:24:36.127" Score="8" Body="&lt;p&gt;The answer is &quot;no&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;While the new license you've constructed has at is basis two well-known free licenses, it is still a &lt;em&gt;different&lt;/em&gt; license and it obviously fails the the &lt;a href=&quot;http://opensource.org/osd&quot;&gt;Open Source Definition&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The license must not discriminate against any person or group of persons.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Apart from the definition, something should also be said of the problems this &quot;license&quot; will create for the community:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To recapitulate: &quot;not-Steve&quot; is only permitted to license under license &quot;A&quot;, and &quot;Steve&quot; is only permitted to license under license &quot;B&quot;, where &quot;A&quot; and &quot;B&quot; are terms from well-known free licenses, but where the terms in addition calls for continuation of the discrimination.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I.e. each derivative can only have &lt;em&gt;one&lt;/em&gt; of the two licenses, so this is &lt;em&gt;not&lt;/em&gt; dual licensing, where downstream recipients can choose between the licenses. Provided the terms of &quot;A&quot; are not compatible with the terms of &quot;B&quot;, the initial discriminatory license has now forced the project to &lt;em&gt;fork&lt;/em&gt;, which is considered harmful.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So such a license both conflicts with the OSI definition of Open Source, and is having the harmful side-effect of forcing developers to create non-compatible forks. For these reasons, such a license should be classified as non-free.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-16T04:28:59.797" LastActivityDate="2015-07-16T04:28:59.797" CommentCount="2" />
  <row Id="1167" PostTypeId="2" ParentId="1140" CreationDate="2015-07-16T04:02:11.830" Score="1" Body="&lt;p&gt;You do not own any copyright to any code you've written on this project, based on what you said in a comment to @SimonRichter's answer:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;What I am open-sourcing is a core component of a work project I have developed on work time, using work computers.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Copyright law is clear. Since you did it as part of your job your employer owns &lt;em&gt;all&lt;/em&gt; of the copyright and they are allowed to do anything they want no matter what license you choose.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Unless somebody outside the company contributes to the project, the terms and conditions of the license won't apply to your employer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Your goal is &quot;to retain ownership and control&quot; of the project, but unfortunately as things stand now you have zero ownership and zero control over the project and that will not change unless/until you leave the company and start working on the project from scratch.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Your employer has asked to be acknowledged in the project, and the best way to do that right now is to simply say &quot;Copyright Acme Inc&quot; (perhaps with a year). Some licenses (like MIT) will have you place that line at the top of the license. Other licenses (like GPL) have you create an &quot;Authors&quot; file with that line in it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Basically any open source license will allow you to continue to work on the project after you leave the company, and they will also allow you to create a fork of it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If your goal is to have as many rights as possible when you leave the company then you'll need to carefully consider what license you choose.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some licenses (such as GPL) are &quot;copyleft&quot; and have strict restrictions (for example, you cannot place any GPL'd code on the iPhone App Store unless your employer gives you permission) so you may wish to avoid those licenses. GPL also has some pretty strong repercussions around patents if your employer owns (or licenses) any of those, but this probably isn't a concern for you.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Other licenses (Such as MIT) are &quot;permissive&quot; and will let you do &lt;em&gt;almost&lt;/em&gt; anything after you leave the company. Personally I prefer these licenses but it's up to you.&lt;/p&gt;&#xA;" OwnerUserId="436" LastActivityDate="2015-07-16T04:02:11.830" CommentCount="6" />
  <row Id="1168" PostTypeId="2" ParentId="456" CreationDate="2015-07-16T04:26:51.433" Score="2" Body="&lt;p&gt;There are many different succesful business models for Free Software and Open Source software. Wikipedia even has a &lt;a href=&quot;https://en.wikipedia.org/wiki/Business_models_for_open-source_software&quot; rel=&quot;nofollow&quot;&gt;long article&lt;/a&gt; devoted to the subject.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am not going to reproduce that long WikiPedia article here, but rather focus on one of these business models - Selling &lt;strong&gt;professional services&lt;/strong&gt; - with a bit more detail that what is provided by &lt;a href=&quot;https://en.wikipedia.org/wiki/Business_models_for_open-source_software#Selling_professional_services&quot; rel=&quot;nofollow&quot;&gt;Wikipedia&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The problem for many small software companies is to actually get anyone to &lt;em&gt;look&lt;/em&gt; at their amazing software.  If the brand is not well not known, or the software not generally acknowledged as &quot;amazing&quot;, it may be real hard to get a customer to look at it.  If the customer has to &lt;em&gt;pay up-front&lt;/em&gt; to have a look, that hurdle is even bigger.  Even if it is free, but crippled (free only for thirty days, etc.), many prospective customers will not bother.  Their time is valuable, too valuable to spend on crippleware. Also, if your company is small, your customer cannot be sure you survive.  If they pay good money for closed source software, and the company behind it implodes, there will be no more support and no more releases.  This renders most software useless after some time.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Free software addresses all these concerns:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;They can try it out for free.&lt;/li&gt;&#xA;&lt;li&gt;It will not stop working after some trial key expires.&lt;/li&gt;&#xA;&lt;li&gt;If your company implodes, they're not left high and dry. Since have the source code, and they get always get somebody else to support and maintain it.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;However, so far I've only pointed out the advantages of free software for the customer.  You, the author, haven't seen any money yet.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What may happen if you do this, if your software truly is good and generally useful, is that you'll see thousands of downloads.  Most of those will indeed use the software for free, and never earn you a penny.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, you have &lt;em&gt;users&lt;/em&gt; (hopefully thousands), and &lt;em&gt;some&lt;/em&gt; of these users will want &lt;strong&gt;professional services&lt;/strong&gt;.  That this:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;they will be willing to pay you an annual support fee, in return for you supporting them (hot-line for user questions, first priority bug-fixes, etc.)&lt;/li&gt;&#xA;&lt;li&gt;they will be willing to pay you for specific customizations that address specific use cases&lt;/li&gt;&#xA;&lt;li&gt;they will be willing to pay consulting and custom development, where you adapt and integrate your free software to their specific ICT infrastructure&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;The business model for professional services is not unique to free software.  This is the usually a profitable business model for proprietary software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, if you're a small software company, you may never see your software &lt;em&gt;used by anyone&lt;/em&gt; if you go the proprietary route. There are too many barriers between you and any users.  With free software, you may get thousands of users, and if only a fraction of those sign up for professional services, you still will have a healthy business.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-16T04:33:12.770" LastActivityDate="2015-07-16T04:33:12.770" CommentCount="0" />
  <row Id="1169" PostTypeId="2" ParentId="1154" CreationDate="2015-07-16T04:43:04.310" Score="1" Body="&lt;p&gt;It seems obvious that this was intended to protect Github itself from claims of copyright infringement arising from the creation of forks.  It wasn't meant for the benefit of Github users, so it's not surprising that it's of little practical use.  You can create a fork, but without a license, you still can't do anything with the fork.&lt;/p&gt;&#xA;" OwnerUserId="782" LastActivityDate="2015-07-16T04:43:04.310" CommentCount="8" />
  <row Id="1170" PostTypeId="1" AcceptedAnswerId="1172" CreationDate="2015-07-16T04:57:00.403" Score="6" ViewCount="103" Body="&lt;p&gt;I write scripts for a commercial GIS package (ArcGIS) using Python and the GIS package software API (Arcpy). I had been thinking about putting the scripts that I create on GitHub under an MIT licence but I am not sure if the API of the software makes my scripts open source or not. I guess my question is, how do you know if your work is open source if you use someone else API?&lt;/p&gt;&#xA;" OwnerUserId="345" LastEditorUserId="69" LastEditDate="2015-07-16T13:53:26.180" LastActivityDate="2015-07-17T08:45:43.330" Title="Can I release my plugin scripts as open source if they rely on a proprietary API?" Tags="&lt;project-management&gt;&lt;api&gt;&lt;linked-libraries&gt;" AnswerCount="2" CommentCount="3" FavoriteCount="1" />
  <row Id="1171" PostTypeId="2" ParentId="1165" CreationDate="2015-07-16T05:12:30.507" Score="8" Body="&lt;p&gt;&quot;Stealing&quot; code is copyright infringement, which is obviously avoided by most legitimate companies. Losing a copyright infringement suit can easily destroy most companies. On the other hand, without patents, reverse-engineering and feature-matching is perfectly legal and done all the time. Some unethical companies can very well be doing the former whilst pretending to do the latter, and this is where access to the source code lets them do that easily. But as soon as these companies become big enough and of consequence, they quickly clean up their act - DivX being a prominent, closed-source example, where it's suspected that the &lt;a href=&quot;http://wmwiki.com/mcored/research/divx/antidivx.pdf&quot;&gt;initial release was based on infringing Microsoft's source code&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Therefore it highly depends on how visible and active those FOSS projects are. It's important to remember that not all FOSS projects are Linux, GCC or Mozilla, and it also depends on your adversaries.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Large and active projects are practically immune&lt;/strong&gt;; their tremendous goodwill and visibility makes it very risky to &quot;steal&quot; from, and their pace of development makes it hard to out-compete them regardless.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Medium-sized projects can suffer but the damage is limited&lt;/strong&gt;. The reason is, again, if unethical competitors get large enough, it also makes them more attractive targets of lawsuits, so they either stay small or clean up. For example, FFmpeg - a suite of FOSS audio/video codecs - is a &lt;a href=&quot;https://web.archive.org/web/20100622191216/http://ffmpeg.org/shame.html&quot;&gt;popular target of copyright infringement&lt;/a&gt;. Although most are minor infractions of their (L)GPL licenses, no doubt some are blatantly infringing.&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Small projects can indeed be undercut&lt;/strong&gt;. If the market is small enough to stay under the radar of lawsuits, an unethical company can easily claim the code as their own, release a closed-source competitor and crowd out the market through providing superior value. Here's &lt;a href=&quot;http://programmers.stackexchange.com/a/260357/81527&quot;&gt;an example&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;A competitor [to &lt;a href=&quot;https://en.wikipedia.org/wiki/DikuMUD&quot;&gt;DikuMUD&lt;/a&gt;], at the time, also had based theirs on the same codebase, and they opted to blatantly ignore the copyright, rip out all traces of it, and basically lie to everyone including themselves. Their logic was &quot;none of the original code exists&quot; and &quot;we have done massive rewrites and improvement&quot; and generally ignoring the fact that they started with 20,000 lines of code. They were charging for items in the game, and making too much money to stop.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-07-16T05:12:30.507" CommentCount="4" />
  <row Id="1172" PostTypeId="2" ParentId="1170" CreationDate="2015-07-16T05:20:14.533" Score="-3" Body="&lt;p&gt;&lt;s&gt;You need to look at what the license of your API will be.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Looking at the &lt;a href=&quot;http://webhelp.esri.com/arcgisdesktop/9.3/index.cfm?TopicName=copyright%20information&quot; rel=&quot;nofollow&quot;&gt;ArcGIS Copyright Information page&lt;/a&gt;...&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;...No part of this work may be reproduced or transmitted in any form or by any means, electronic or mechanical, including photocopying and recording, or by any information storage or retrieval system, except as expressly permitted in writing by ESRI...&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Therefore, using the api and allowing open source freedoms, such as reproduction and distribution is asking for trouble.&lt;/s&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I misunderstood. It seems like the library in question is actually ArcPy, and not ArcGIS.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Therefore, to answer your question, you need to look at the nature of your &quot;referenced libraries&quot;. You need to look at their copyright/licensing terms, analyze them, and determine how they will impact the goals of your project. For example, can I still fork, share it and the like. You &lt;em&gt;can&lt;/em&gt; have specific terms and conditions, such as copyleft (also known as ShareAlike), or make it as permissive as possible (Such as &lt;a href=&quot;http://www.wtfpl.net&quot; rel=&quot;nofollow&quot;&gt;this license&lt;/a&gt;). In the end, you will know your work is Open Source, if it meets their &lt;a href=&quot;http://opensource.org/osd-annotated&quot; rel=&quot;nofollow&quot;&gt;definition&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ol&gt;&#xA;  &lt;li&gt;Free Redistribution&lt;/li&gt;&#xA;  &lt;li&gt;Source Code&lt;/li&gt;&#xA;  &lt;li&gt;Derived Works&lt;/li&gt;&#xA;  &lt;li&gt;Integrity of The Author's Source Code&lt;/li&gt;&#xA;  &lt;li&gt;No Discrimination Against Persons or Groups&lt;/li&gt;&#xA;  &lt;li&gt;No Discrimination Against Fields of Endeavour&lt;/li&gt;&#xA;  &lt;li&gt;Distribution of License&lt;/li&gt;&#xA;  &lt;li&gt;License Must Not Be Specific to a Product&lt;/li&gt;&#xA;  &lt;li&gt;License Must Not Restrict Other Software&lt;/li&gt;&#xA;  &lt;li&gt;License Must Be Technology-Neutral&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-07-16T14:16:41.050" LastActivityDate="2015-07-16T14:16:41.050" CommentCount="4" />
  <row Id="1173" PostTypeId="2" ParentId="1170" CreationDate="2015-07-16T09:08:10.370" Score="-1" Body="&lt;p&gt;First of all, you have to consider the license of the API you're using. Such a license might restrict the ways you release programs based on that API (maybe only for internal use or fees for releasing a program or something like that). &lt;strike&gt;If you look at &lt;a href=&quot;http://gis.stackexchange.com/q/20276/1225&quot;&gt;this question&lt;/a&gt;, it seems that you cannot license a plugin based on ArcGIS as open source, as this license restricts the way the program can be used. But I don't know if it is the same API you're using. You might want to clarify that.&lt;/strike&gt; The question I gave doesn't apply, as &lt;a href=&quot;http://help.arcgis.com/en/arcgisdesktop/10.0/help/index.html#//000v000000v7000000&quot; rel=&quot;nofollow&quot;&gt;ArcPy is a Python library&lt;/a&gt;. Still I'm unable to find the licenses/terms that apply to the usage of this library, so be wary.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If the license of the API of the commercial App permits the creation of open source software, you still need to check if the open source license in question is compatible. You will have no problem with &lt;a href=&quot;https://en.wikipedia.org/wiki/Permissive_free_software_licence&quot; rel=&quot;nofollow&quot;&gt;permissive licenses&lt;/a&gt;, so MIT is OK. If you choose a &lt;a href=&quot;https://en.wikipedia.org/wiki/Copyleft&quot; rel=&quot;nofollow&quot;&gt;copyleft license&lt;/a&gt; (like GPL) on the other hand, you have another problem. The GPL demands, that every linked software is distributed under the same terms, the GPL in that case. As the API links your software and the commercial app it is obviously impossible. Still, you can do that, as long as you the only contributor (or all other contributors also gave their consent). But you would be barred to incorporate any GPL-code from different projects. An prominent example was the KDE-project. At first &lt;a href=&quot;https://en.wikipedia.org/wiki/Qt_%28software%29#Licensing&quot; rel=&quot;nofollow&quot;&gt;Qt was released under a non-free license&lt;/a&gt;. Still, the release of KDE was legal, but the risks I described lead to massive protest and eventually to the start of the Gnome-project. Also the &lt;a href=&quot;http://freecode.com/articles/why-debian-doesnt-include-kde&quot; rel=&quot;nofollow&quot;&gt;Debian-project was at some point denying KDE the inclusion in the distribution&lt;/a&gt;. In the end Trolltech released Qt under the GPL, thus solving these problems.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also, you cannot bundle your code with the commercial program. The users of your plugin still have to purchase a license of that program to use your plugin.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="168" LastEditDate="2015-07-17T08:45:43.330" LastActivityDate="2015-07-17T08:45:43.330" CommentCount="11" />
  <row Id="1174" PostTypeId="5" CreationDate="2015-07-16T09:35:56.877" Score="0" Body="" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-16T09:35:56.877" LastActivityDate="2015-07-16T09:35:56.877" CommentCount="0" />
  <row Id="1175" PostTypeId="4" CreationDate="2015-07-16T09:35:56.877" Score="0" Body="Use this tags for questions about the connections between movies and open source, be it movies licensed under open source or the implications of using open source tools to create a movie" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-16T09:35:56.877" LastActivityDate="2015-07-16T09:35:56.877" CommentCount="0" />
  <row Id="1176" PostTypeId="1" CreationDate="2015-07-16T10:05:00.630" Score="4" ViewCount="489" Body="&lt;p&gt;I was reading the question&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://opensource.stackexchange.com/questions/1163/are-discriminatory-free-licenses-still-free&quot;&gt;Are discriminatory free licenses still free?&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Regardless the merit of that particular question, one answers states that according to the definition&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The license must not discriminate against any person or group of persons.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;However, I was under the impression that there is still some debate about what does or does not constitute a free software licence? A short note can be found on the &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_software_license#Controversial_borderline_cases&quot; rel=&quot;nofollow&quot;&gt;related Wikipedia entry&lt;/a&gt;, but one can see that a few different bodies categorizes the different licenses: OSI, FSF, Debian, etc.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So using licences that are already available make it clear if you fall in one or another definition. However with custom-made licences, it does not seem too clear to me.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Can someone clarify that for me, or is there a universally accepted definition of &quot;free software licence&quot;?&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Edit&lt;/strong&gt; It came in the comments, as well as a VTC. So I should adress it in the question. I have read the question&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://opensource.stackexchange.com/questions/620/what-is-the-difference-between-free-as-in-beer-and-free-as-in-speech&quot;&gt;What is the difference between free as in beer and free as in speech?&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;and corresponding answers. I understand perfectly well the difference between &lt;em&gt;free&lt;/em&gt; as in beer vs in speech. Let us forget about beers for the time being. Now, that question does not adress what I am asking here. There are different &quot;free&quot; licenses, most give some restriction. There are several bodies defining which licenses are free (I know of OSI, FSF and Debian, for example). They do not seem in effect, to agree on the freedom of certain licenses. So is there a more restricted, somewhat universal definition of a free software?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;sub&gt;Note that I originally asked that question on &lt;a href=&quot;http://meta.opensource.stackexchange.com/questions/405/what-does-free-mean-in-free-software&quot;&gt;meta&lt;/a&gt;, but was suggested to ask it here.&lt;/sub&gt;&lt;/p&gt;&#xA;" OwnerUserId="445" LastEditorUserId="445" LastEditDate="2015-07-16T13:51:03.260" LastActivityDate="2015-07-16T15:00:30.447" Title="Is there a universal definition of free software?" Tags="&lt;free-software-definition&gt;" AnswerCount="2" CommentCount="14" ClosedDate="2015-07-16T14:44:42.437" />
  <row Id="1177" PostTypeId="2" ParentId="1176" CreationDate="2015-07-16T10:23:50.220" Score="9" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;However, I was under the impression that there is still some debates about what does or does not constitutes a free software licence?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I don't think there are still any &lt;em&gt;serious&lt;/em&gt; debates about this. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, assuming this question is an earnest one, there are &lt;em&gt;two&lt;/em&gt; recognized definitions of of Free Software:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;The &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.en.html&quot; rel=&quot;nofollow&quot;&gt;Free Software Definition&lt;/a&gt; by the FSF, where the &lt;em&gt;four essential freedoms&lt;/em&gt; are defined (making it clear that it is a matter of &quot;freedom&quot;, not price).&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;The &lt;a href=&quot;http://opensource.org/osd&quot; rel=&quot;nofollow&quot;&gt;Open Source Defintion&lt;/a&gt; of the OSI, which starts out by stating that &quot;Free Redistribution&quot; means the freedom to give away or to sell, &lt;em&gt;without restrictions&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;While there are subtle differences between the two, as answered in:&#xA;&lt;a href=&quot;http://opensource.stackexchange.com/questions/846/what-are-the-philosophical-differences-between-open-source-and-free-libre-softwa&quot;&gt;What are the philosophical differences between open source and free/libre software (if they exist at all)?&lt;/a&gt; - they boil down to the same definition of &quot;free&quot; - that the idea is to provide maximum &lt;em&gt;freedom&lt;/em&gt; for users and developers, &lt;em&gt;except&lt;/em&gt; the freedom to constrain others. In &lt;em&gt;practical&lt;/em&gt; terms (but not in political) these two definitions of &quot;free&quot; are equivalent.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;However with custom-made licences, it does not seem too clear to me.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&quot;Custom-made licenses&quot; should be avoided.  IMHO, they are a huge problem for the FLOSS community, as they often make it impossible to combine works because of trivial license incompatibilities. Also they are often written by people ignorant about copyright law, making them a legal hazard to use.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="29" LastEditDate="2015-07-16T13:47:01.183" LastActivityDate="2015-07-16T13:47:01.183" CommentCount="1" />
  <row Id="1178" PostTypeId="2" ParentId="142" CreationDate="2015-07-16T10:38:11.190" Score="1" Body="&lt;p&gt;By releasing the blue prints and documents detailing the manufacturing process under a permissive license. &lt;a href=&quot;https://www.ted.com/talks/britta_riley_a_garden_in_my_apartment?language=en&quot; rel=&quot;nofollow&quot;&gt;Windowfarms&lt;/a&gt; is a great example of how hardware can be open sourced. Release your design &amp;amp; process into the wild and hope people contribute their improvements back. The philosophy is not so different from open sourcing software. It's the implementation that differs. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The hard part about open sourcing hardware is merging changes back in upstream. There's really no infrastructure for version control of blue prints, although I could potentially see leveraging existing VCS to help with that. &lt;/p&gt;&#xA;" OwnerUserId="775" LastActivityDate="2015-07-16T10:38:11.190" CommentCount="0" />
  <row Id="1179" PostTypeId="2" ParentId="21" CreationDate="2015-07-16T11:58:21.213" Score="3" Body="&lt;p&gt;&lt;strong&gt;Short answer:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Copyleft&lt;/em&gt; is a term coined by the FSF and implies that if you distribute a derivative work of a work under a copyleft license, you &lt;em&gt;must&lt;/em&gt; distribute the derivative under the &lt;em&gt;same license&lt;/em&gt; as the original work (it may however be combined with works under a permissive license that is deemed &quot;compatible&quot;, read on). Some people use the pejorative name &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Viral_license&quot; rel=&quot;nofollow&quot;&gt;viral license&lt;/a&gt;&quot; for a copyleft license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A &lt;em&gt;permissive license&lt;/em&gt; is a license that permits re-licensing of derivative works (i.e. the derivative can have a different license than the original, and even be closed source with ARR).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Some comments about the difference:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One important property of a permissive license is that it is &lt;em&gt;sublicensable&lt;/em&gt; and &lt;em&gt;GPL compatible&lt;/em&gt;. This means that you can legally use a component with a permissive license in a derivative work where the other components are under GPL (or a compatible license such as Apache 2.0) and then the entire work can be made available under the GPL license. This means that you can use a library under the MIT/expat license (permissive) in a project under the GNU GPL (copyleft), and the resulting composite would be GNU GPL (copyleft).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note that going in the opposite direction (from copyleft to permissive) is not possible. Such a derivative can &lt;em&gt;never&lt;/em&gt; be MIT/expat, because that would violate the terms of the GNU GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The FSF has made a handy &lt;a href=&quot;http://www.gnu.org/licenses/license-list.en.html&quot; rel=&quot;nofollow&quot;&gt;reference page&lt;/a&gt; about what licenses are permissive and allow re-licensing, as well as the chart below specifically for GNU GPL version 3. Note that the direction of flow is always from the permissive licenses to the copyleft licenses, and not the other way.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The dotted arrow from GPLv2 to GPLv3 is for a special version of GPLv2 written &quot;GPLv2 or later&quot; (sometimes abbreviated &quot;GPLv2+&quot;).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/hcKzf.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This chart introduces the terms &quot;weak copyleft&quot; and strong copyleft&quot;. Briefly, the difference is that &quot;strong copyleft&quot; insists on copyleft for a composite where at least one of the components are copyleft, while &quot;weak copyleft&quot; means that copyleft only apply to derivatives, not sibling components in a composite.  &quot;Copyleft&quot; when used without an adjective, usually means &quot;strong copyleft&quot;.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-21T03:26:37.997" LastActivityDate="2015-07-21T03:26:37.997" CommentCount="0" />
  <row Id="1180" PostTypeId="2" ParentId="1176" CreationDate="2015-07-16T14:44:20.187" Score="0" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;Is there a universal definition of free software?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I think &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_software#Definition_and_the_Four_Freedoms&quot; rel=&quot;nofollow&quot;&gt;this&lt;/a&gt; is universally accepted definition of &quot;Free Software&quot;&#xA;(Also visit &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Free_Software_Definition&quot; rel=&quot;nofollow&quot;&gt;this&lt;/a&gt;).&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;Freedom 0: The freedom to run the program for any purpose.&lt;/li&gt;&#xA;  &lt;li&gt;Freedom 1: The freedom to study how the program works, and change it to make it do what you wish.&lt;/li&gt;&#xA;  &lt;li&gt;Freedom 2: The freedom to redistribute copies so you can help your neighbor.&lt;/li&gt;&#xA;  &lt;li&gt;Freedom 3: The freedom to improve the program, and release your improvements (and modified versions in general) to the public, so that the whole community benefits.&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;And&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;...is there a universally accepted definition of &quot;free software licence&quot;?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I think &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_software_license&quot; rel=&quot;nofollow&quot;&gt;Free software license&lt;/a&gt; is universal.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Universally Accepted Free Software Licenses are:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Free_software_license#FSF-approved_.22free_software.22_licenses&quot; rel=&quot;nofollow&quot;&gt;FSF Approved Licenses&lt;/a&gt; : &lt;a href=&quot;https://www.gnu.org/licenses/license-list.html&quot; rel=&quot;nofollow&quot;&gt;This&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Free_software_license#OSI-approved_.22open_source.22_licenses&quot; rel=&quot;nofollow&quot;&gt;OSI Approved Linceses&lt;/a&gt; : &lt;a href=&quot;http://opensource.org/licenses&quot; rel=&quot;nofollow&quot;&gt;This&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="296" LastEditorUserId="296" LastEditDate="2015-07-16T15:00:30.447" LastActivityDate="2015-07-16T15:00:30.447" CommentCount="0" />
  <row Id="1181" PostTypeId="1" CreationDate="2015-07-16T15:58:18.893" Score="9" ViewCount="98" Body="&lt;p&gt;This was prompted by &lt;a href=&quot;https://opensource.stackexchange.com/questions/1170/can-i-release-my-plugin-scripts-as-open-source-if-they-rely-on-a-proprietary-api&quot;&gt;another question&lt;/a&gt; which reminded of a past experience.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Consider the following:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;An open-source project supports a plug-in architecture&lt;/li&gt;&#xA;&lt;li&gt;The project is released under a copyleft license&lt;/li&gt;&#xA;&lt;li&gt;The plug-ins are discovered by the project by virtue of being installed into a specific directory (i.e. no registration with, modification to, or even recompilation of the project is required to add a plug-in).&lt;/li&gt;&#xA;&lt;li&gt;The plug-ins are self contained, not needing to link to or call into the  parent application beyond perhaps including a single header-file for declarations only.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;A theoretical example might help to clarify:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Project X processes images&lt;/li&gt;&#xA;&lt;li&gt;Plug-ins provide additional algorithms, or support for existing algorithms on new file types.&lt;/li&gt;&#xA;&lt;li&gt;A plug-in simply exports a small number of functions which are called with all the necessary data to perform their processing and return the result.&lt;/li&gt;&#xA;&lt;li&gt;Project X takes care of all rendering, updating menus, etc.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Now suppose I want to publish a commercial plug-in for project X which implements a very proprietary algorithm, and which I intend to sell. Obviously, I don't want to publish the code for this implementation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Does the copyleft license on Project X consider my code to form  a &quot;combined work&quot; or similar term when installed on the user's machine, and thus require me to publish the source code of my plug-in?&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="190" LastEditDate="2015-07-18T04:30:27.907" LastActivityDate="2015-08-06T14:52:13.993" Title="Does a host application's license apply to plug-ins written for it?" Tags="&lt;license-compatibility&gt;&lt;copyleft&gt;&lt;plugins&gt;" AnswerCount="4" CommentCount="0" />
  <row Id="1182" PostTypeId="1" CreationDate="2015-07-16T17:56:09.147" Score="1" ViewCount="38" Body="&lt;p&gt;I am working on adding an entirely new set of features to an open source project that my team has created.&#xA;Before I got started though, I did some research to see what other were offering in that area etc.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another open source project is already light-years ahead of us in this regard, and we would probably never catch up if we tried to do it ourselves from the ground up.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What would be the proper way to go about using their work in our own project?&#xA;I think some important topics to address would be:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Attribution&lt;/li&gt;&#xA;&lt;li&gt;License Compatibility&lt;/li&gt;&#xA;&lt;li&gt;Implementation&lt;/li&gt;&#xA;&lt;li&gt;Restrictions on the Final Product&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="805" LastEditorUserId="98" LastEditDate="2015-07-16T17:59:11.887" LastActivityDate="2015-07-16T18:37:36.130" Title="What's the proper way to use another project in your own open source software?" Tags="&lt;law&gt;&lt;attribution&gt;" AnswerCount="1" CommentCount="2" ClosedDate="2015-07-16T19:58:24.447" />
  <row Id="1183" PostTypeId="2" ParentId="1181" CreationDate="2015-07-16T18:01:00.687" Score="2" Body="&lt;p&gt;The answer is: A host application's license apply to plug-ins written for it if the License is a &lt;em&gt;Copyleft&lt;/em&gt; License (such as the GNU GPL), and you distribute the plugin &lt;em&gt;with&lt;/em&gt; the application (so no private use exception apply).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;(The same rules do not apply for a &lt;a href=&quot;https://opensource.stackexchange.com/questions/21/whats-the-difference-between-copyleft-and-permissive-open-source/1179#1179&quot;&gt;permissive license&lt;/a&gt; such Expat (MIT), but your question specifies Copyleft.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://www.drupal.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Drupal&lt;/strong&gt;&lt;/a&gt; is a CMS that uses a plug-in architecture like the one described in the question.  Plug-ins for Drupal is known as &quot;modules&quot;.  Drupal is licensed under the GNU GPL version 2 or later (GPLv2+).  This question is answered in the Drupal Licensing FAQ: &lt;a href=&quot;https://www.drupal.org/licensing/faq#q7&quot; rel=&quot;nofollow&quot;&gt;7: If I write a module or theme, do I have to license it under the GPL?&lt;/a&gt;. Quote:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Yes. Drupal modules and themes are a derivative work of Drupal. If you distribute them, you must do so under the terms of the GPL version 2 or later.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Please note Drupal does not try to &lt;em&gt;stop&lt;/em&gt; anyone from distributing  Drupal modules and themes &lt;em&gt;outside&lt;/em&gt; the Drupal-controlled ecosystem (the Git repo hosted on Drupal.org, and this policy has made some project's move to GitHub).  This is because such distros is permitted inder the private use exception.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, this not some random opinion. The Drupal Licensing FAQ is written by copyright lawyers after careful discussion between the lawyers and the Drupal Association.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Wordpress&lt;/strong&gt; simply refers to the Drupal FAQ on &lt;a href=&quot;https://wordpress.org/about/license/&quot; rel=&quot;nofollow&quot;&gt;its page&lt;/a&gt; about its license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some people say &quot;it depends&quot;, and go on to say that it is the &lt;em&gt;software architecture&lt;/em&gt; used for linking will decide whether the plugin will be a derivative or not. However, this is very much a programming outlook, not a legal one. As pointed out in &lt;a href=&quot;http://opensource.stackexchange.com/a/1215/606&quot;&gt;this answer&lt;/a&gt;, a court &lt;em&gt;may&lt;/em&gt; decide that a program that &lt;em&gt;shares a file format&lt;/em&gt; with another program will be a derivative work of the latter.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-06T14:52:13.993" LastActivityDate="2015-08-06T14:52:13.993" CommentCount="4" />
  <row Id="1184" PostTypeId="2" ParentId="1181" CreationDate="2015-07-16T18:07:19.820" Score="1" Body="&lt;h2&gt;Yes.&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Many open source CMS projects cover this in their FAQ, Drupal and Wordpress being two notable instances.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;a href=&quot;https://www.drupal.org/licensing/faq#q7&quot; rel=&quot;nofollow&quot;&gt;Drupal FAQ #7&lt;/a&gt; states that plugins are derivatives of the original; the &lt;a href=&quot;https://wordpress.org/support/topic/which-license-to-use-for-a-paid-plugin#post-2267631&quot; rel=&quot;nofollow&quot;&gt;Wordpress Support forums&lt;/a&gt; tell you the same thing.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;From there, it just depends on how the original is licensed. Wordpress is under the GPL, so derivative works must also be licensed under the GPL. Other licenses, such as MIT, might allow you to pick your own license for your plugin even though it's a derivative.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The LGPL, notably, would also &lt;em&gt;in theory&lt;/em&gt; allow you to pick your license, because the plugin merely dynamically links to the original work, which is allowed under its terms. However, &lt;em&gt;check that one&lt;/em&gt; before using it - IANAL.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-07-16T18:07:19.820" CommentCount="4" />
  <row Id="1185" PostTypeId="2" ParentId="1182" CreationDate="2015-07-16T18:37:36.130" Score="0" Body="&lt;p&gt;It is not unusual in the world of free software to reuse libraries pulled from other projects (adapted, or unchanged).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;IMHO, there are really just two things you really need to be concerned about when doing this:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;License Compatibility&lt;/li&gt;&#xA;&lt;li&gt;Attribution&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;Speaking from experience, I would say that &lt;strong&gt;license compatibility&lt;/strong&gt; may be a major obstacle when reusing code from another FLOSS project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For instance, if your project is going to be made available under the GNU GPL version 2 (GPLv2), and the &quot;other&quot; project's library is available under Apache 2.0, you can't legally combine them, because Apache 2.0 is &lt;a href=&quot;http://www.gnu.org/licenses/license-list.en.html#apache2&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;not&lt;/em&gt; compatible with GPLv2&lt;/a&gt;. (Apache 2.0 is compatible with GPLv3 - but that is no comfort if &lt;em&gt;your&lt;/em&gt; project's license is GPLv2). Note that dual licensing will not solve this, because dual licensing allow downstream recipients to &lt;em&gt;choose&lt;/em&gt; a license, and you can't legally take Apache 2.0 and just permit relicensing to GPLv2.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am been in this situation a number of times, and unless you have the privilege of re-licensing your own project (usually not feasible with a project that already have users relying on it keeping its license), the only route is to negotiate a with the owner of the &lt;em&gt;other&lt;/em&gt; project that they allow the re-licensing.  My experience is that most owners are nice people and will be happy to do this.  But abandonware is a problem. There is a lot of abandoned code out there with weird custom licenses that is unusable in new projects because their owners are unreachable.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Attribution&lt;/strong&gt; is required by law, and usually also by the FLOSS license. This is much simpler do deal with.  Just make sure you &lt;em&gt;do it&lt;/em&gt;, and do it correctly.  My experience with some really large projects is that developers unfortunately are ignorant about this aspect of free software, and therefor sloppy in its execution.  In one of the FLOSS projects I manage, we're developing tools to assist our contributors in doing correct attribution.&lt;/p&gt;&#xA;" OwnerUserId="606" LastActivityDate="2015-07-16T18:37:36.130" CommentCount="0" />
  <row Id="1186" PostTypeId="2" ParentId="1181" CreationDate="2015-07-16T18:55:13.760" Score="7" Body="&lt;p&gt;Maybe. Yes, you have to comply with the terms of the host application's license. However, a copyleft platform can choose to go either way. Some copyleft applications have a specific licensing exemption for plugins; in other cases, the technical architecture does not result in a derived work and thus an obligation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Consider a plugin architecture where a plugin is just a command line that gets run and reads a file of unformatted data. In such a case, the plugin would involve no IP of the host, and have no interaction with the license. Pay particular attention to the GPL's definitions around 'linkage'. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;On the other hand, if the connection between a plugin and its host counts as linking (like: the plugin must link in a library to work), or if a plugin must incorporate source code from the host to build and operate, then the plugin is fully subject to the copyleft terms.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The fact that a user aggregates your plugin with their copy of the platform does &lt;em&gt;not&lt;/em&gt; cause you to have obligations. It can't. You're not the one doing the plugging. What causes a derivative work or linkage is the relationship between your IP and the platform's IP.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Given some other answers, I want to point out that there are some areas of open source licensing where the legal situation is clear, and there are some areas where the legal situation is less clear, and some where it's positively contentious. Some of the situations related to plugin architectures tend toward the later side of that spectrum. If you are building a plugin for a GPL-licensed platform, and the copyright owner of that platform makes a public statement that the GPL reaches plugins, you would be wise to avoid betting your livelihood on the possibility that they are wrong, or at least seek competent legal advice.&lt;/p&gt;&#xA;" OwnerUserId="554" LastEditorUserId="554" LastEditDate="2015-07-17T19:39:57.413" LastActivityDate="2015-07-17T19:39:57.413" CommentCount="1" />
  <row Id="1187" PostTypeId="1" CreationDate="2015-07-17T00:51:55.863" Score="2" ViewCount="48" Body="&lt;p&gt;The status of programs which are dynamically linked with Copyleft licensed binaries (such as a .dll) is contentious. I have created two questions for each site of the debate. The other can be found &lt;a href=&quot;http://opensource.stackexchange.com/q/1188/190&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The FSF believes that dynamic links almost always constitute derivative works. The GNP GPL FAQ states explains their position:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;a href=&quot;https://www.gnu.org/licenses/gpl-faq.html#GPLStaticVsDynamic&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Does the LGPL have different requirements for statically vs dynamically linked modules with a covered work?&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;No. Linking a GPL covered work statically or dynamically with other modules is making a combined work based on the GPL covered work. Thus, the terms and conditions of the GNU General Public License cover the whole combination.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&lt;a href=&quot;https://www.gnu.org/licenses/gpl-faq.html#GPLAndPlugins&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;If I write a plug-in to use with a GPL-covered program, what requirements does that impose on the licenses I can use for distributing my plug-in?&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;It depends on how the program invokes its plug-ins. If the program uses fork and exec to invoke plug-ins, then the plug-ins are separate programs, so the license for the main program makes no requirements for them.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;If the program dynamically links plug-ins, and they make function calls to each other and share data structures, we believe they form a single program, which must be treated as an extension of both the main program and the plug-ins. This means you must license the plug-in under the GPL or a GPL-compatible free software license and distribute it with source code in a GPL-compliant way.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;If the program dynamically links plug-ins, but the communication between them is limited to invoking the ‘main’ function of the plug-in with some options and waiting for it to return, that is a borderline case.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&lt;a href=&quot;https://www.gnu.org/licenses/gpl-faq.html#MereAggregation&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;What is the difference between an “aggregate” and other kinds of “modified versions”?&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;An “aggregate” consists of a number of separate programs, distributed&#xA;  together on the same CD-ROM or other media. The GPL permits you to&#xA;  create and distribute an aggregate, even when the licenses of the&#xA;  other software are non-free or GPL-incompatible. The only condition is&#xA;  that you cannot release the aggregate under a license that prohibits&#xA;  users from exercising rights that each program's individual license&#xA;  would grant them.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Where's the line between two separate programs, and one program with&#xA;  two parts? This is a legal question, which ultimately judges will&#xA;  decide. We believe that a proper criterion depends both on the&#xA;  mechanism of communication (exec, pipes, rpc, function calls within a&#xA;  shared address space, etc.) and the semantics of the communication&#xA;  (what kinds of information are interchanged).&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;If the modules are included in the same executable file, they are&#xA;  definitely combined in one program. If modules are designed to run&#xA;  linked together in a shared address space, that almost surely means&#xA;  combining them into one program.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;By contrast, pipes, sockets and command-line arguments are&#xA;  communication mechanisms normally used between two separate programs.&#xA;  So when they are used for communication, the modules normally are&#xA;  separate programs. But if the semantics of the communication are&#xA;  intimate enough, exchanging complex internal data structures, that too&#xA;  could be a basis to consider the two parts as combined into a larger&#xA;  program.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;From the last question I gather that the ultimate factor on whether they consider a 'link' to be derivative is whether the link means that the programmes share a memory address space. Pipes and sockets are fine, but no .dll or .so files. (Personally this seems like an odd criteria to me. It's my understanding that .dlls which directly access each other's memory are rather uncommon.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What are the arguments in support of this position?&lt;/p&gt;&#xA;" OwnerUserId="190" LastEditorUserId="190" LastEditDate="2015-07-17T01:06:32.687" LastActivityDate="2015-07-17T02:02:40.050" Title="What are the arguments for considering dynamic links to constitute derivative works?" Tags="&lt;gpl&gt;&lt;copyleft&gt;&lt;linked-libraries&gt;" AnswerCount="1" CommentCount="1" FavoriteCount="1" />
  <row Id="1188" PostTypeId="1" CreationDate="2015-07-17T01:06:18.727" Score="3" ViewCount="83" Body="&lt;p&gt;The status of programs which are dynamically linked with Copyleft licensed binaries (such as a .dll) is contentious. I have created two questions for each site of the debate. The other can be found &lt;a href=&quot;http://opensource.stackexchange.com/q/1187/190&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Unlike the case for considering dynamic links to constitute derivative works, it's been harder to find authorities stating that they do not. But here are some statements saying that there are at least some situations where they do not.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://lkml.org/lkml/2006/12/17/79&quot; rel=&quot;nofollow&quot;&gt;Linus Torvalds wrote:&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;And don't get me wrong: I do not say that &quot;linking&quot; &lt;em&gt;never&lt;/em&gt; creates &#xA;  derived works. I'm just saying that &quot;linking&quot; is just a technical step, &#xA;  and as such is not the answer to whether something is derived or not. &#xA;  Things can be derived works of each other &lt;em&gt;without&lt;/em&gt; being linked, and they &#xA;  may not be derived works even if they &lt;em&gt;are&lt;/em&gt; linked.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;So &quot;linking&quot; basically has very little to do with &quot;derived&quot; per se.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Linking does have one thing that it implies: it's maybe a bit &quot;closer&quot; &#xA;  relationship between the parts than &quot;mkisofs&quot; implies. So there is &#xA;  definitely a higher &lt;em&gt;correlation&lt;/em&gt; between &quot;derived work&quot; and &quot;linking&quot;, &#xA;  but it's really a correlation, not a causal relationship.&#xA;  For example, if you link two object files together where neither is a &#xA;  &quot;library&quot; with standard interfaces, then the result is most likely a &#xA;  derived work from both. But it wasn't the &quot;act of linking&quot; that caused &#xA;  that to happen, but simply the fact that they were part of a bigger whole, &#xA;  and were meaningless apart from each other.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.law.washington.edu/lta/swp/law/derivative.html&quot; rel=&quot;nofollow&quot;&gt;The University of Washington's School of Law:&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The results in this example seem to be the same as above. As long as module C(S) is not considered to be a work derived from G, then it is not within the scope of the GPL. If X can distribute C(S) separately from C(G'), and the combination of C(S) and C(G') is only made by the end-user, X should be free to license C(S) under whatever terms she chooses. And the distribution scheme seems a fraction less “kludgey” than the one employed in example 2, because the step of combination (linking) occurs transparently to the user of a dynamically linked system.&lt;br&gt;&#xA;  ...&lt;br&gt;&#xA;  In short, the debate over static and dynamic linking simply misses the mark. As we shall see in our next example, using inter-module communication as the basis for a derivative work analysis will lead frequently to counter-intuitive and nonsensical results.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;What are the arguments in support of this position?&lt;/p&gt;&#xA;" OwnerUserId="190" LastActivityDate="2015-07-18T09:11:04.907" Title="What are the arguments for considering dynamic links to *not* constitute derivative works?" Tags="&lt;copyleft&gt;&lt;linked-libraries&gt;" AnswerCount="3" CommentCount="4" />
  <row Id="1189" PostTypeId="2" ParentId="1188" CreationDate="2015-07-17T01:19:47.033" Score="2" Body="&lt;p&gt;&lt;a href=&quot;http://www.law.washington.edu/lta/swp/law/derivative.html&quot; rel=&quot;nofollow&quot;&gt;The page from the University of Washington's School of Law goes on to say&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Typical object oriented programming languages include a standard class&#xA;  hierarchy. This hierarchy provides a framework within which&#xA;  application developers can build their programs. The standard classes&#xA;  typically provide useful classes that represent user interface&#xA;  elements (e.g. windows, buttons, etc.), collection classes (for&#xA;  handling collections of data), and input-output abstractions (e.g.&#xA;  files and networking connections). In many object oriented languages,&#xA;  each class must be a subclass of exactly one superclass. And for this&#xA;  reason, the class hierarchies are rooted by a highly generic, standard&#xA;  class called Object. (The question of the superclass of Object is&#xA;  beyond the scope of this article.) The class Object describes only the&#xA;  most general properties and behaviors. For instance, in Java, the&#xA;  class Object only performs a handful of functions. In Java, every&#xA;  class is a subclass (directly or indirectly) of the Object class.&#xA;  Under the GPL approach, then, every program written in Java is a&#xA;  derived work of Object, because every program written in Java by&#xA;  definition consists of classes that inherit from the Object class.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Such a result certainly sounds extreme. The Object class in Java is&#xA;  extraordinarily generic and bears little relation to many of the&#xA;  classes that inherit from it. To be sure, all Java classes can perform&#xA;  the behaviors defined by Object, precisely because they are subclasses&#xA;  of Object, but this does not necessarily imply that those subclasses&#xA;  should be considered derived works under copyright law. It would be as&#xA;  if an author writes an incredibly generic, one-sentence long &quot;story&quot;&#xA;  along the lines of &quot;There are some characters who do things and stuff&#xA;  happens to them&quot; and then claims that just about every novel that&#xA;  follows is a work derivative of his story. From a naive perspective,&#xA;  almost every story (perhaps with the exception of Waiting for Godot)&#xA;  can be considered derivative of our short story because it borrows or&#xA;  incorporates the same essential plotline. Obviously, though, this is&#xA;  not the result that we obtain under the law. Principally, the reason&#xA;  is that the short story would not be considered copyrightable subject&#xA;  matter, either because it does not meet the minimum creative&#xA;  threshold, or because it is already in the public domain, or because&#xA;  the idea of the story has merged with its expression.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;As usual, the answer in this example depends on questions of&#xA;  copyrightability, incorporation, substantial similarity, market&#xA;  demand, and public policy. As a general matter, in the case of&#xA;  inheritance in object oriented systems, a subclass trivially&#xA;  incorporates (and is substantially similar) to its superclass. The&#xA;  analysis should then turn, to a larger degree, on questions of&#xA;  copyrightability of the superclass, market demand, and public policy.&#xA;  For example, if the class B is highly generic (as in Java's Object&#xA;  class), it is unlikely that it would even be considered copyrightable&#xA;  subject matter under the 102(b) bar. On the other hand, if B is highly&#xA;  specialized—as are classes that we find on the fringes or leaves of a&#xA;  class hierarchy—there may be a stronger argument that they contain&#xA;  substantial copyrightable subject matter. This argues, then, for a&#xA;  finding that D is a derivative of B. Even here, though, a market&#xA;  demand analysis might argue against a finding of derivation. Class D&#xA;  will not supplant demand for class B, simply because it makes no sense&#xA;  to deploy D in the absence of B.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I take this to mean that there is a good argument that subclassing through dynamic links can constitute derivative works, but it depends on what is being subclassed: the base Object class is too generic (and perhaps not even copyrightable), but if you subclassed a large class which represented most of the library then it would count as derived. This makes sense to me.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;They address function calls in a different place, arguing that they are not derivative:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The third factor focuses on the amount of the original work used in the allegedly infringing work. Here, assuming that modern software engineering principles are followed, the amount of literal copying of code in G' is surely minimal. The relationship between S and G' is just that S makes function calls into G'. Therefore, S makes use just of the function names defined by G', and doesn't actually copy any portions of the G's program text. Finally, the market effect analysis also works in X's favor, because S does not supplant the market for G. In fact, anyone who wishes to use S has to also download a copy of G'.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Finally they give a couple of examples of plugins, concluding that the precise method of linking things is the wrong criteria for determining whether something is derivative or not:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;To understand the implications of this method of boundary drawing,&#xA;  consider for a moment the Acrobat Reader plugin for Firefox, and&#xA;  assume that the browser is licensed under the GPL. The plugin offers&#xA;  its own set of user interface buttons and is capable of rendering file&#xA;  formats that are exotic to Firefox. Does this seem like a derivative&#xA;  work of Firefox? Whatever our intuition may tell us, the answer&#xA;  depends - according to the GPL's drafters at least - on the&#xA;  particulars of the Firefox plugin architecture. If the plugin&#xA;  architecture launches plugins and runs them in separate address spaces&#xA;  as separate, running executables, then the GPL does not consider&#xA;  Acrobat Reader a derived work of Firefox. On the other hand, if the&#xA;  plugin is dynamically linked to Firefox, then the GPL urges the&#xA;  opposite characterization. This seems to fly in the face of common&#xA;  sense, which tells us that Acrobat Reader is not a work derived from&#xA;  Firefox.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The following thought experiment demonstrates the absurdity of the GPL&#xA;  approach. Imagine taking the Firefox source code and modifying it in&#xA;  such a way that it is encapsulated in a plugin, called Fireplug.&#xA;  Common sense and the law tell us that Fireplug is a derivative work of&#xA;  Firefox, based simply on the fact that Fireplug incorporates all or&#xA;  most of the Firefox codebase. Now, when we plug Fireplug into Firefox,&#xA;  we essentially have a Firefox browser running within a Firefox&#xA;  browser. And depending on the Firefox plugin architecture, the GPL&#xA;  drives us to incompatible results. If plugins are dynamically linked,&#xA;  Fireplug is a derivative work. This is the right result, but the&#xA;  reasoning is exactly wrong. Fireplug is a derivative work because it&#xA;  incorporates and is substantially similar to Firefox, not because of a&#xA;  decision made by the designer of the Firefox plugin architecture. On&#xA;  the other hand, if plugins are launched as separate programs, then&#xA;  Fireplug suddenly is not a derivative work, even though this result is&#xA;  counter the common sense result above. Clearly, the mechanism of a&#xA;  given plugin architecture are analytically unhelpful and misleading in&#xA;  answering the derivative work question.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;(Note that I disagree with the final point - Fireplug would still be a derivative work, just not for the reason of being linked.)&lt;/p&gt;&#xA;" OwnerUserId="190" LastActivityDate="2015-07-17T01:19:47.033" CommentCount="0" />
  <row Id="1190" PostTypeId="2" ParentId="1187" CreationDate="2015-07-17T02:02:40.050" Score="3" Body="&lt;p&gt;Well, it basically boils down to what is understood as a derivate.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A program that dynamically links a library is a derivate in this point of view, because it as a whole delivers the product function to the user. If you remove the library it stops working. A similar situation with plugins that are dynamically loaded and linked - without the original program they aren't working. So the working program/plugin is a derivative work, as for it's completeness is the linked part needed. Without it it's incomplete.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Many open source authors accept this point of view. There are many reasons for it. First of all, it is the interpretation of the FSF, the authors of the license. So many simply accept that interpretations, as this was the intent. Similarly it is out of respect for the developers of software under the GPL. As these authors chose the GPL, they may have been considered this usage, so out of respect many don't challenge this claim, as it is clear what the developers wished who released their software under the terms of the GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One major example of a supporter of this interpretation of the GPL is Debian. As the cdrtools-author Jörg Schilling switched the license of parts of the code to the CDDL, Debian claimed this a violation of the GPL and started the &lt;a href=&quot;https://en.wikipedia.org/wiki/Cdrkit&quot; rel=&quot;nofollow&quot;&gt;fork cdrkit&lt;/a&gt;. A similar case happened with KDE, which used the library Qt which was back at that point not GPL-licensed. Debian saw that as a violation of the GPL and &lt;a href=&quot;http://freecode.com/articles/why-debian-doesnt-include-kde&quot; rel=&quot;nofollow&quot;&gt;removed KDE from the distribution&lt;/a&gt;. In both cases there would be no violation if linking wouldn't create a derivative work, so Debian clearly seems to be the opinion it does so.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But, as far as I know at least, there was no law-suit so far that tested that assumption. The GPL was used in law-suits, but never about the linking problem&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-07-17T02:02:40.050" CommentCount="0" />
  <row Id="1191" PostTypeId="2" ParentId="1188" CreationDate="2015-07-17T02:21:57.640" Score="3" Body="&lt;p&gt;While the position of the FSF about the interpretation of the GPL is clear, a &lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_General_Public_License#Linking_and_derived_works&quot; rel=&quot;nofollow&quot;&gt;few people have opposed this position&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Linus' position that is cited in the OP is, that all combined parts must be meaningless without being part of the combination to form a derivate.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.novell.com/coolsolutions/feature/1532.html&quot; rel=&quot;nofollow&quot;&gt;Matt Asay&lt;/a&gt; compares linking of software to the act of referencing a character, a scene or something similar from a novel in another novel. He claims as with linking no code is copied, it is not derivative.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Lawrence Rosen &lt;a href=&quot;http://www.linuxjournal.com/article/6366&quot; rel=&quot;nofollow&quot;&gt;goes even farther&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The primary indication of whether a new program is a derivative work&#xA;  is whether the source code of the original program was used, modified,&#xA;  translated or otherwise changed in any way to create the new program.&#xA;  If not, then I would argue that it is not a derivative work.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So, dynamically or even statically linked programs are in this view not always derivates.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But beware, the interpretation if linking is forming a derivative work has not yet (as far as I know) been tested in courts. GPL was topic of quite a few law-suits, but it was never about linking.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="168" LastEditDate="2015-07-17T08:45:02.410" LastActivityDate="2015-07-17T08:45:02.410" CommentCount="0" />
  <row Id="1192" PostTypeId="2" ParentId="571" CreationDate="2015-07-17T03:52:04.553" Score="1" Body="&lt;p&gt;I'm not aware of any research where that has been the primary focus. In most of my reading; the meaning of &quot;open source&quot; is either quoted from a source like FSF or not referenced at all.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, there has been a lot written about open source from perspectives other than software engineers.  From &lt;a href=&quot;http://link.springer.com/article/10.1007%2Fs10676-009-9209-7&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;Convivial software: an end-user perspective on free and open source software&lt;/em&gt;&lt;/a&gt; (C. Mitcham 2009):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;As noted at the&#xA;  outset, from the end-user perspective what is important is&#xA;  not so much the direct availability of the source code as&#xA;  program or technical conviviality... From the perspective of end users, there is more with regard to free&#xA;  expression or openness than technical source code transparency.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Another article, &lt;em&gt;One size doesn't fit all: End users look for perfect 'fit' with open source code&lt;/em&gt; (L. Spinelli, Accounting Today, 2005) focusses a lot on how &quot;anyone can change&quot; an open source project, making it highly customisable. &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;the problem&#xA;  with using a closed or proprietary&#xA;  system was its inability to&#xA;  bend to the company's inventory&#xA;  processes, creating a need&#xA;  for a third-party system. &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;In general, &quot;open source&quot; and &quot;free software&quot; tend to be used interchangeably, and there is more focus on the &quot;free speech&quot; aspect than the &quot;free beer&quot;.&lt;/p&gt;&#xA;" OwnerUserId="814" LastActivityDate="2015-07-17T03:52:04.553" CommentCount="0" />
  <row Id="1193" PostTypeId="1" AcceptedAnswerId="1195" CreationDate="2015-07-17T09:02:13.310" Score="1" ViewCount="44" Body="&lt;p&gt;The idea of open source (everyone can change and redistribute) can be applied to many things. One could imagine open source news. But would that make sense? After all, news gets old after a few hours, nobody is interested in it anymore. So there is in practice no time to make use of it being open source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So are scenarios that would make it useful to open source news?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="29" LastEditDate="2015-07-17T23:04:40.933" LastActivityDate="2015-07-17T23:04:40.933" Title="What value would open source news have?" Tags="&lt;use-cases&gt;&lt;news&gt;" AnswerCount="1" CommentCount="2" />
  <row Id="1194" PostTypeId="2" ParentId="1188" CreationDate="2015-07-17T09:07:46.840" Score="2" Body="&lt;p&gt;This pair of questions (whether dynamic linking creates a derivative or not) is really a false dichotomy.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I think Linus Torvalds is spot on when he says (quoted in the question):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;So &quot;linking&quot; basically has very little to do with &quot;derived&quot; per se.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;One problem with this false dichotomy it that leads to reasoning that if dynamic linking, does &lt;em&gt;not&lt;/em&gt; create a derivative, then something that dynamically links something is not a derivative of that library.  I think that pointing out that this is false reasoning is what is implied in last point in the &lt;a href=&quot;http://www.law.washington.edu/lta/swp/law/derivative.html&quot; rel=&quot;nofollow&quot;&gt;University of Washington's School of Law&lt;/a&gt;  text quoted by &lt;em&gt;curiousdannii&lt;/em&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;On the other hand, if plugins are launched as separate programs, then Fireplug suddenly is not a derivative work, even though this result is counter the common sense result above. Clearly, the mechanism of a given plugin architecture are analytically unhelpful and misleading in answering the derivative work question.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I.e. they are &lt;em&gt;not&lt;/em&gt; saying that the hypothetical Firefox-derived program is &lt;em&gt;not&lt;/em&gt; a derivative work.  IMHO, they're saying that it is, but that it unhelpful to use the  &quot;mechanism of a given plugin architecture&quot; to decide whether it is or not.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I think this false dichotomy is not helpful.  I sometimes see the following argument presented:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Since X is dynamically linked, and there is no legal precedence that dynamic linking produces a derivative, we can conclude that the composite that makes use of X is &lt;em&gt;not&lt;/em&gt; a derivative of X.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I believe this is &lt;em&gt;not&lt;/em&gt; a valid argument.  That something is dynamically linking is &lt;em&gt;irrelevant&lt;/em&gt; to deciding whether it is a derivative of X.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Instead, we must determine how the composite &lt;em&gt;uses&lt;/em&gt; X.  If the composite can not function without X, then the composite is a derivative of X, no matter what mechanism is used to produce the composite.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is little case law in this area (and AFAIK, none involving FLOSS licenses), but I think the 9th circuit ruling on &lt;a href=&quot;http://cyber.law.harvard.edu/people/tfisher/IP/1998%20Micro%20Star%20Abridged.pdf&quot; rel=&quot;nofollow&quot;&gt;Micro Star v. FormGen Inc.&lt;/a&gt; comes close. The court found that a CD-ROM with files containing fan-curated levels for a video game did create a derivative work when combined with the original game. While the court agreed that the game manufacturer (FormGen) had licensed its &lt;em&gt;users&lt;/em&gt; to create an share such levels, the infringing company (Micro Star) has not been granted such a license.  The ruling says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Nothing indicates that FormGen granted Micro Star any written license at &#xA;  all;  nor  is  there  evidence  of  a nonexclusive  oral  license.  The  only  written  license  FormGen  conceivably granted was to players who designed their own new levels, but that license contains a significant  limitation:  Any  new  levels  the  players  create  &quot;must  be  offered  [to  others]  solely  for free&quot;.&lt;br&gt;&#xA;  The  parties  dispute  whether  the  license  is  binding,  but  it  doesn't  matter.  If  the  license  is  valid,  it clearly prohibits commercial distribution of levels; if it doesn't, FormGen hasn't granted any written licenses at all.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;In this case, it is not even a matter of static or dynamic &quot;linking&quot;.  The user-curated levels are delivered on a CD in the form of files on a format that is understood by the video game.  One of the things that makes these files a derivative is that these files are not &lt;em&gt;usable&lt;/em&gt; unless they are read of the original game program. It is not the software mechanism used to create the composite that makes this a derivative work, but the fact that derivative work cannot be separated from the original and still function, that decides the outcome.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I should also make it clear that I think Lawrence Rosen of the OSI is wrong when he &lt;a href=&quot;http://www.linuxjournal.com/article/6366&quot; rel=&quot;nofollow&quot;&gt;says&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;When a company releases a scientific subroutine library, or a library of objects, for example, people who merely use the library, unmodified, perhaps without even looking at the source code, are not thereby creating derivative works of the library.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I consider Rosen's argument as politicised, and motivated by his personal belief that open source should be about convenience, not about freedom. Rosen, along with collegue Michael Einschlag writes:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The real reason you should care about this issue [i.e. what consitutes a derivative work] is that we want to encourage as much free and open source software to be created without scaring proprietary software users away.  If people believe that merely touching your open source software will &lt;em&gt;infect&lt;/em&gt; their software with a virus, you will make your software less attractive.&lt;br&gt;&#xA;  (Source: &lt;a href=&quot;http://www.rosenlaw.com/lj19.htm&quot; rel=&quot;nofollow&quot;&gt;http://www.rosenlaw.com/lj19.htm&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I &lt;em&gt;agree&lt;/em&gt; with Rosen that the exact mechanism you use to make use of the library in you program (static linking, dynamic linking, etc.) does not matter.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, I &lt;em&gt;disgree&lt;/em&gt; with Rosen that &quot;merely use&quot; of said scientific subroutine library in a larger work does &lt;em&gt;not&lt;/em&gt; result in a derivative. I think this is a &lt;em&gt;lex ferenda&lt;/em&gt; argument. where Rosen wants the law to match OSI's agenda of making the use of free software attractive to commercial companies &lt;em&gt;including&lt;/em&gt; permitting such companies to make use of free software in products that does not provide the community with &lt;em&gt;any&lt;/em&gt; freedoms.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Such an interpretation of the law is IMHO wrong, and leads to undesirable situations. For instance, let's assume that the &quot;scientific subroutine library&quot; is made available under GPLv3, and some company use it to as part of some sort of proprietary scientific spreadsheet package.  Without the functions in the GPLv3 library, the spreadsheet would not be &lt;em&gt;functional&lt;/em&gt;.  This use of the library would at least violate the &lt;em&gt;intent&lt;/em&gt; of the author of the library, no matter how it is technically combined with other software to create the resulting composite work. (If the library author had intended to permit such uses, he/she would have picked a license that allowed incorporaton of the library in a proprietary work, such as LGPLv2.1.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;IMHO it is &lt;em&gt;not&lt;/em&gt; the technical architecture of the composite work that is the reason composite should be considered a derivative of the GPLv3 library, but the &lt;em&gt;functional integration&lt;/em&gt; of the two - i.e. the fact that without the GPLv3 library, the composite work (the proprietary scientific spreadsheet) would simply not work.  This means that if the spreadsheet &lt;em&gt;depends on&lt;/em&gt; the GPLv3 library, it is this &lt;em&gt;functional dependency&lt;/em&gt; (and not the technical architecture used to combine the two) that gives grounds to say that the spreadsheet is a derivative of the  GPLv3 library.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Linking is usually done because the functionality linked-in is required, so it is harder to come up with a counter-example (where something is somehow linked, but there is &lt;em&gt;no functional dependency&lt;/em&gt; between the parts).  But in a highly contrived example, one can think of a library that would replace the standard library &lt;code&gt;printf&lt;/code&gt; with an alternative version that would redact certain words in the program's output.  The original program is in no way functional dependent on the redacting version of &lt;code&gt;printf&lt;/code&gt; - linking in the alternative library simply changes the behavior of the program. In this case, even if the library is statically linked, the resulting composite is (probably) not a derivative of it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So to conclude: We should not &lt;em&gt;always&lt;/em&gt; conclude that using a dynamically linked library constitutes a derivative work of said library, but the opposite conclusion (that dynamic linking does &lt;em&gt;not&lt;/em&gt; constitute a derivative work) is equally false.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-18T09:11:04.907" LastActivityDate="2015-07-18T09:11:04.907" CommentCount="6" />
  <row Id="1195" PostTypeId="2" ParentId="1193" CreationDate="2015-07-17T11:06:47.823" Score="7" Body="&lt;p&gt;Lawrence Lessig in his book &lt;a href=&quot;http://www.free-culture.cc/freeculture.pdf&quot;&gt;&lt;em&gt;Free Culture&lt;/em&gt;&lt;/a&gt; talks about the effect of all-rights-reserved copyright on news broadcasts:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;We take it for granted that we can go back to see what we remember&#xA;  reading. Think about newspapers. If you wanted to study the reaction&#xA;  of your hometown newspaper to the race riots in Watts in 1965,&#xA;  or to Bull Connor’s water cannon in 1963, you could go to your public&#xA;  library and look at the newspapers. Those papers probably exist on&#xA;  microfiche. If you’re lucky, they exist in paper, too. Either way, you&#xA;  are free, using a library, to go back and remember—not just what it is&#xA;  convenient to remember, but remember something close to the truth.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;...&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Television, it turns out, is even more&#xA;  ephemeral than the Internet.While much of twentieth-century culture&#xA;  was constructed through television, only a tiny proportion of that culture&#xA;  is available for anyone to see today. Three hours of news are recorded&#xA;  each evening by Vanderbilt University—thanks to a specific&#xA;  exemption in the copyright law. That content is indexed, and is available&#xA;  to scholars for a very low fee. “But other than that, [television] is almost&#xA;  unavailable,” Kahle told me. “If you were Barbara Walters you could get&#xA;  access to [the archives], but if you are just a graduate student?”&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;...&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The same is generally true about television. Television broadcasts&#xA;  were originally not copyrighted—there was no way to capture the&#xA;  broadcasts, so there was no fear of “theft.” But as technology enabled&#xA;  capturing, broadcasters relied increasingly upon the law. The law required&#xA;  they make a copy of each broadcast for the work to be “copyrighted.”&#xA;  But those copies were simply kept by the broadcasters. No&#xA;  library had any right to them; the government didn’t demand them.&#xA;  The content of this part of American culture is practically invisible to&#xA;  anyone who would look. (p109-111)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;When you say &quot;After all news get old after a few hours, nobody is interested in them anymore&quot; that is a very short-sighted perspective. Often we don't know what will be significant in later decades and centuries. The first local campaign speech of a future Prime Minister or President may well have been broadcast, but if the rights holders restrict its archiving then in thirty years' time it may be impossible to find and view.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And that's for news items that eventually turn out to be significant. There are so many more broadcasts that will be important, not for the events they show, but as a window into life in a particular place at a particular time. In 100 years time how many of the interviews with regular American citizens talking about the Ferguson unrest will still be accessible?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;We'll never be able to archive everything, but we have the technology to archive a lot. We don't know what our grandchildren will want to rewatch, so we should try to archive as much as we can. Commercial broadcasters may never allow that, but we should at least demand from our public broadcasters the freedom to archive their new broadcasts.&lt;/p&gt;&#xA;" OwnerUserId="190" LastActivityDate="2015-07-17T11:06:47.823" CommentCount="0" />
  <row Id="1196" PostTypeId="1" AcceptedAnswerId="1197" CreationDate="2015-07-17T12:37:43.033" Score="-1" ViewCount="88" Body="&lt;p&gt;Does open source clothing exists? With that I mean, do sewing patterns, tutorials or steering files for sewing and weaving machines, that are licensed as open source exist? Meaning these patterns, tutorials and steering files can be freely changed and redistributed? Is it even possible to open source clothing?&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="168" LastEditDate="2015-07-17T12:56:36.327" LastActivityDate="2015-07-17T15:45:04.770" Title="Does open source clothing exist?" Tags="&lt;licensing&gt;&lt;creative-commons&gt;" AnswerCount="1" CommentCount="1" />
  <row Id="1197" PostTypeId="2" ParentId="1196" CreationDate="2015-07-17T13:49:41.357" Score="4" Body="&lt;p&gt;Yes, open source sewing patterns exist, but there aren't many.  A search for &quot;creative commons sewing pattern&quot; yields several hits, and &quot;open source sewing pattern&quot; yields a few more.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I won't link them here because you can easily find them yourself.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;EDIT: Here's an example:&#xA;&lt;a href=&quot;http://www.silverseams.com/opensource/&quot; rel=&quot;nofollow&quot;&gt;www.silverseams.com/opensource&lt;/a&gt;.  It's a blog so I can't guarantee that the link will be good forever.  Besides patterns it includes a rationale for using open source licensing for patterns.&lt;/p&gt;&#xA;" OwnerUserId="158" LastEditorUserId="158" LastEditDate="2015-07-17T15:45:04.770" LastActivityDate="2015-07-17T15:45:04.770" CommentCount="1" />
  <row Id="1198" PostTypeId="1" CreationDate="2015-07-17T14:29:10.077" Score="6" ViewCount="266" Body="&lt;p&gt;The 4th point of &lt;a href=&quot;http://opensource.org/docs/osd&quot; rel=&quot;nofollow&quot;&gt;Open Source Definition&lt;/a&gt; - Integrity of The Author's Source Code:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The license may restrict source-code from being distributed in modified form only if the license allows the distribution of &quot;patch files&quot; with the source code for the purpose of modifying the program at build time.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Why would someone want to restrict the distribution of modified source code?&lt;/p&gt;&#xA;" OwnerUserId="296" LastEditorUserId="98" LastEditDate="2015-07-17T14:39:14.590" LastActivityDate="2015-07-18T11:27:25.090" Title="Understanding 4th point (restriction to distribute modified source-code) of Open Source definition" Tags="&lt;open-source-definition&gt;&lt;restrictions&gt;" AnswerCount="4" CommentCount="0" FavoriteCount="0" />
  <row Id="1199" PostTypeId="2" ParentId="1198" CreationDate="2015-07-17T14:41:09.777" Score="7" Body="&lt;p&gt;It means to be considered open that a license is allowed to enforce that the original source must be transmitted unmodified (with the patch file proviso).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is for example useful for a security application where the original version has been vetted by experts in the field but random changes may open up vulnerabilities. Grouping the diffs into patch files will allow users or other experts to check whether those changes are valid.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This has the downside that changes can't become too big otherwise the patchfiles can become massive.&lt;/p&gt;&#xA;" OwnerUserId="64" LastActivityDate="2015-07-17T14:41:09.777" CommentCount="0" />
  <row Id="1200" PostTypeId="2" ParentId="1198" CreationDate="2015-07-17T14:41:48.270" Score="3" Body="&lt;p&gt;The thing here is that restrictions to modifying the source code are only allowed, if the distribution of patch-files with the source are allowed. &lt;a href=&quot;https://en.wikipedia.org/wiki/Patch_%28Unix%29&quot; rel=&quot;nofollow&quot;&gt;Patch-files&lt;/a&gt; are simple files that save the differences between two versions of files - especially sources for software. A patch-file can be automatically applied by common tools to create another version of a file. This provides a way to modify the sources, while keeping the originals intact.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="168" LastEditDate="2015-07-17T15:40:39.787" LastActivityDate="2015-07-17T15:40:39.787" CommentCount="0" />
  <row Id="1201" PostTypeId="2" ParentId="1181" CreationDate="2015-07-17T14:53:39.227" Score="2" Body="&lt;p&gt;&lt;strong&gt;Yes&lt;/strong&gt; unless you specify otherwise.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The plugin is derived from the API which specifies which functions the plugin needs to export and what they should do.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you released X under GPL you can add an exemption for the plugins  and dual license the API itself with a less restrictive license that allows non-GPL license for the plugin.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That way you can allow distribution of the plugin alongside the project without requiring the plugin to be released under GPL. &lt;/p&gt;&#xA;" OwnerUserId="64" LastActivityDate="2015-07-17T14:53:39.227" CommentCount="5" />
  <row Id="1202" PostTypeId="5" CreationDate="2015-07-17T15:58:15.197" Score="0" Body="&lt;p&gt;Contrary to popular belief, there are lots of financial aspects to open source and free software, despite the fact that many open projects are available for no charge.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This tag should be used on questions relating to these financial aspects, including:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Supporting developers&lt;/li&gt;&#xA;&lt;li&gt;Pricing software&lt;/li&gt;&#xA;&lt;li&gt;Purchasing necessary software (such as any IDE's or other software required)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-07-17T21:38:55.883" LastActivityDate="2015-07-17T21:38:55.883" CommentCount="0" />
  <row Id="1203" PostTypeId="4" CreationDate="2015-07-17T15:58:15.197" Score="0" Body="For questions about managing the financial aspects of projects, such as pricing and support." OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-07-17T21:38:30.737" LastActivityDate="2015-07-17T21:38:30.737" CommentCount="0" />
  <row Id="1204" PostTypeId="2" ParentId="1198" CreationDate="2015-07-17T16:19:56.833" Score="1" Body="&lt;p&gt;Freedoms 1 and 3 from the &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.en.html&quot; rel=&quot;nofollow&quot;&gt;Free Software Definition&lt;/a&gt; are:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The freedom to study how the program works, and change it so it does your computing as you wish (freedom 1). Access to the source code is a precondition for this.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;...&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The freedom to distribute copies of your modified versions to others (freedom 3). By doing this you can give the whole community a chance to benefit from your changes. Access to the source code is a precondition for this.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Point 1 of the Open Source Definition, linked in the question, also implies these freedoms.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;These mean that, to be free software, you &lt;em&gt;must&lt;/em&gt; be freely able to modify the code &lt;em&gt;and&lt;/em&gt; distribute it. Restricting these freedoms is usually not allowed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, going by the OSD, if you allow recipients of the program &lt;em&gt;a&lt;/em&gt; way to modify how the program works and then distribute, it doesn't have to be by allowing distribution of the modified source code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As to &lt;em&gt;why&lt;/em&gt; someone would want to do this... I don't know. Perhaps the author is protective of how they wrote their code and doesn't want to see it mutilated in other redistributions of their software - though there's probably a more valid reason than that.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-07-17T16:19:56.833" CommentCount="0" />
  <row Id="1206" PostTypeId="1" CreationDate="2015-07-17T18:28:27.803" Score="3" ViewCount="62" Body="&lt;p&gt;This is an attempt to break down: &lt;a href=&quot;http://opensource.stackexchange.com/questions/1181/does-a-host-applications-license-apply-to-plug-ins-written-for-it&quot;&gt;Does a host application&amp;#39;s license apply to plug-ins written for it?&lt;/a&gt; into the underlying questions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Assume the following scenario:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Two programs 'communicate' via a text file&lt;/li&gt;&#xA;&lt;li&gt;One of the programs is GPL (no exemptions)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;The format of the file's contents are defined by the GPL program&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;The existence of the file is the only form of linkage between the two.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;It is actually irrelevant but, for simplicity, assume the GPL program reads the file.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also assume that the document describing the format of the file's contents is published under the same license as the rest of the project (i.e. GPL)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Does the format of the file's contents constitute an API?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;(Also see my follow on question: &lt;a href=&quot;http://opensource.stackexchange.com/q/1207/190&quot;&gt;Does sharing a file format make two programs either a combined or derived work?&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="190" LastEditDate="2015-07-18T04:29:20.077" LastActivityDate="2015-07-18T08:09:44.430" Title="Does a file format constitute an API?" Tags="&lt;terminology&gt;&lt;api&gt;&lt;file-formats&gt;" AnswerCount="2" CommentCount="12" FavoriteCount="1" />
  <row Id="1207" PostTypeId="1" CreationDate="2015-07-17T18:29:53.853" Score="5" ViewCount="110" Body="&lt;p&gt;This is a follow on from &lt;a href=&quot;http://opensource.stackexchange.com/questions/1206/are-two-programs-combined-if-they-share-a-common-file-format&quot;&gt;Does a file format constitute an API?&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is an attempt to break down: &lt;a href=&quot;http://opensource.stackexchange.com/questions/1181/does-a-host-applications-license-apply-to-plug-ins-written-for-it&quot;&gt;Does a host application&amp;#39;s license apply to plug-ins written for it?&lt;/a&gt; into the underlying questions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Assume the following:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Two programs 'communicate' via a text file&lt;/li&gt;&#xA;&lt;li&gt;One of the programs is GPL (no exemptions)&lt;/li&gt;&#xA;&lt;li&gt;The format of the file's contents are defined by the GPL program&lt;/li&gt;&#xA;&lt;li&gt;The existence of the file is the only form of linkage between the two.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;It is actually irrelevant but, for simplicity, assume the GPL program reads the file.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Does this make the two programs a combined or derived work, possibly via linkage?&lt;/strong&gt;&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="69" LastEditDate="2015-07-22T00:26:28.753" LastActivityDate="2015-08-05T16:44:31.267" Title="Does sharing a file format make two programs either a combined or derived work?" Tags="&lt;gpl&gt;&lt;file-formats&gt;&lt;derivative-works&gt;" AnswerCount="2" CommentCount="4" FavoriteCount="1" />
  <row Id="1208" PostTypeId="2" ParentId="1206" CreationDate="2015-07-17T21:10:07.427" Score="0" Body="&lt;p&gt;No one here is a lawyer, qualified to interpret the law or predict the outcome of a civil case. So, honestly, legal theory here is much less important that the attitude of the people involved.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Generally, this question comes up when someone wants to create a system that combines GPL and non-GPL programs, and wishes to avoid applying the GPL to the non-GPL pieces, or, in fact, cannot legally do so.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This potentially leads to an argument: is the resulting thing an aggregation or a derived work? If it's a derived work, the terms of the GPL apply. (I am aware, from the other question, of the Drupal project's legal position that a plugin &lt;em&gt;in isolation&lt;/em&gt; can be a derived work. I don't understand it so I won't try to explain it.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If the copyright holder(s) of the GPL components believe that your particular concoction is a derived work, they may attempt to enforce their rights. That process, at least, is likely to be expensive, and they might prevail in court. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, rather than wonder about the abstract legal question of whether a judge would find such an arrangement a derived work, it is perhaps more useful to wonder whether the holders of the copyrights on the GPL parts of the system you contemplate think so. If it is the FSF, they have documented a clear set of lines about what they consider acceptable and unacceptable, and it's related to the concept of 'linkage'.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In short, there is no definitive answer to the question you asked; if you ask N lawyers, you'll get N+M answers. So, practically, the answer is to respect the wishes of the copyright owners of the copyrighted materials involved.&lt;/p&gt;&#xA;" OwnerUserId="554" LastEditorUserId="554" LastEditDate="2015-07-17T23:39:34.897" LastActivityDate="2015-07-17T23:39:34.897" CommentCount="4" />
  <row Id="1209" PostTypeId="1" AcceptedAnswerId="1211" CreationDate="2015-07-18T02:04:11.233" Score="4" ViewCount="125" Body="&lt;p&gt;I think the inverse of &lt;a href=&quot;http://opensource.stackexchange.com/questions/173/what-do-i-need-to-share-if-i-include-cc-by-sa-artwork-in-my-software&quot;&gt;What do I need to share if I include CC-BY-SA artwork in my software?&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some webpages, such as &lt;a href=&quot;http://codeforamerica.org&quot; rel=&quot;nofollow&quot;&gt;Code for America&lt;/a&gt; are licensed under &lt;code&gt;CC-BY-SA&lt;/code&gt;. If I want to adapt the code for this web page to host copyrighted content which cannot be redistributed, can I? Is it possible to retain the CC license for the template but have a separate copyright clause for the written content?&lt;/p&gt;&#xA;" OwnerUserId="755" LastEditorUserId="55" LastEditDate="2015-07-18T07:14:48.070" LastActivityDate="2015-07-19T03:18:38.867" Title="Can I adapt a CC-BY-SA licensed webpage to host rights-reserved copyrighted content?" Tags="&lt;copyright&gt;&lt;cc-by-sa&gt;" AnswerCount="2" CommentCount="1" />
  <row Id="1210" PostTypeId="2" ParentId="932" CreationDate="2015-07-18T02:19:30.917" Score="1" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;Based on the CC requirements it says I cant restrict it from anyone. Here I am not restricting anyone from anything. I am just applying different rules. Am I allowed to do this?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Well, given free speech and all that - you can certainly say that you want different licenses to apply to different groups of people.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But please be aware that nobody needs &lt;em&gt;honor&lt;/em&gt; such additional terms imposed by you.  Quoting from the &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode&quot; rel=&quot;nofollow&quot;&gt;legal code of CC-BY 4.0&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I know of no approved (by the FSF or OSI) license that lets you to impose any form of discrimination against people or uses.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, since such additional terms have no legal effect, there is no point in doing this.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-18T02:26:33.953" LastActivityDate="2015-07-18T02:26:33.953" CommentCount="0" />
  <row Id="1211" PostTypeId="2" ParentId="1209" CreationDate="2015-07-18T02:43:53.467" Score="6" Body="&lt;p&gt;Yes (provided I've understood the question correctly).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here is the question: &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If I want to adapt the code for this web page to host copyrighted content which cannot be redistributed, can I?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;If you look inside the GitHub archive, you'll find the entire site there. All of it (markup &lt;em&gt;and&lt;/em&gt; its existing contents) is licensed under CC-BY-SA 2.0.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Since this is a copyleft license, you're allowed to adapt it. So whatever you &lt;em&gt;reuse&lt;/em&gt; from that site (HTML, CSS, Javascript, images, decorations, etc.) must be made available under CC-BY-SA.  Whatever you're left with after doing this is your website &lt;em&gt;template&lt;/em&gt;.  To simplify things, you may want to create a fork on GitHub and make it clear that the template in this fork is a derivative of the &lt;em&gt;Code for America&lt;/em&gt; repo, and that it is made available under CC-BY-SA 2.0.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, &lt;em&gt;after&lt;/em&gt; going through this process you can download your fork from GitHub. You can then proceed by &lt;em&gt;adding&lt;/em&gt; your own contents to it.  Since this original contents is not derived from anything in the &lt;em&gt;Code for America&lt;/em&gt; repo, it is not a derivative work, and you're not obliged to license this &lt;em&gt;original content&lt;/em&gt; under CC-BY-SA.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And to expand the answer a little, this not only applies to CC-BY-SA, but to &lt;em&gt;all&lt;/em&gt; copyleft licenses I am aware of.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This again boils down to the legal definition of &quot;derivative work&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;em&gt;contents&lt;/em&gt; you place on a web-page does not make the composite (template + contents) a derivative of the template.  The reason is that the template and the contents does not require each other to function.  You could replace your contents with some other contents, and the template would still work.  You could use some other template to display your content, and it would still be the same contents.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Just for the record, I have discussed a similar situation with the FSF, where the use case was a template available under the GNU GPL, and a client wanted to be sure that his proprietary images was not &quot;infected&quot; by the GPL virus.  This was the reply from the FSF:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;It is the position of the FSF that if a work licensed under the terms of the GNU GPL isn’t dependent on a particular image in any way, that is, the software would effectively function identically with any other image, then the image could be considered as being distributed in mere aggregation with the work. (Source: Private communication.)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;(While this is about the GNU GPL and not the CC-BY-SA, I think it is applicable, as the &quot;ShareAlike&quot; provisions of the CC is very similar to the &quot;Copyleft&quot; of the FSF licenses.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In legal terms, this low level of functional integration between the two means that the composite is &lt;em&gt;not&lt;/em&gt; a derivative, but a &quot;mere aggregate&quot;.  Even &lt;em&gt;strong copyleft&lt;/em&gt; licenses, such as the GNU GPL, does &lt;em&gt;not&lt;/em&gt; make the copyleft license of a template or CMS apply to the &lt;em&gt;content&lt;/em&gt; that is published with the help of the template or CMS.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This also applies in the physical world.  If you write a novel, your publisher will probably hire a graphical designer to create the cover art, decide on page format, fonts, etc.  Your novel, however, will not be a derivative of the graphical designer's artwork - and vice versa.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-19T03:18:38.867" LastActivityDate="2015-07-19T03:18:38.867" CommentCount="6" />
  <row Id="1212" PostTypeId="2" ParentId="1206" CreationDate="2015-07-18T08:09:44.430" Score="2" Body="&lt;p&gt;To begin I cite the &lt;a href=&quot;https://en.wikipedia.org/wiki/API&quot; rel=&quot;nofollow&quot;&gt;Wikipedia about the definition of API&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;In computer programming, an application programming interface (API) is&#xA;  a set of routines, protocols, and tools for building software&#xA;  applications. An API expresses a software component in terms of its&#xA;  operations, inputs, outputs, and underlying types.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So, the if file format describes how operations are executed and/or transfers data, it is part of an API. To make the API complete you still need a mechanism to exchange the files.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One common example that practically fits your description are common web-APIs. A file (usually XML or JSON) is sent to the webservice in form of a POST-REQUEST and the result is sent back by HTTP status codes and another file as response. This more or less fits your description given in the question (with one exception I go into soon) and it is an API.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The one thing in your question that isn't fitting is:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The existence of the file is the only form of linkage between the two.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;An API always needs a defined way to exchange the file. In the webservice-example it is the HTTP-connection. But it may also be as simple, as writing the file into a predefined directory that the other program monitors. Either way, without the definition of the communication-mechanism the file-format alone can be never enough, but the communication can be extremely simple (and therefore many people forget about it).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As you mention in your question that one of the programs is a GPL-licensed program, I assume your question targets in the direction of the usage of such an file-API makes the other program a derivate and therefore it has to be licensed under GPL too, This makes also sense, because without it, the question has no connection to open-source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So to answer the implicit question: No, the simple usage of an API  isn't creating a derivate and therefore triggering the GPL. The GPL is talking about linking the software, not about using an API. If linking is enough to create a derivate work &lt;a href=&quot;http://opensource.stackexchange.com/q/1188/55&quot;&gt;is discussed&lt;/a&gt;, and not everyone shares the point of view of the FSF. But even the FSF stops at linking and I know of no one, who interprets the formation of a derivate even more inclusive than the FSF.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The FSF addresses this &lt;a href=&quot;https://www.gnu.org/licenses/gpl-faq.html#MereAggregation&quot; rel=&quot;nofollow&quot;&gt;distinction in their FAQ&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If the modules are included in the same executable file, they are&#xA;  definitely combined in one program. If modules are designed to run&#xA;  linked together in a shared address space, that almost surely means&#xA;  combining them into one program.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;By contrast, pipes, sockets and command-line arguments are&#xA;  communication mechanisms normally used between two separate programs.&#xA;  So when they are used for communication, the modules normally are&#xA;  separate programs. But if the semantics of the communication are&#xA;  intimate enough, exchanging complex internal data structures, that too&#xA;  could be a basis to consider the two parts as combined into a larger&#xA;  program.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;As you can see, transferring files via Sockets or Pipes (including STDOUT and STDIN), does not qualify as combination into a larger program. The file could be also exchanged via a command-line parameter pointing to the position the file is saved. That is even more indirectly.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The FAQ has some consideration into 'complex internal data structures', so that could be an argument that both programs are combined. For a file with a defined content (needed for it being an API), we can argue against it being 'internal'. It's pretty obvious for text-files, that you defined in the question, internal data-structures (and that includes strings) have to be converted to fit into text-files. Strings have a length-integer at the beginning (seldom in use today) or are ended by a null-byte (more common). In a test-file strings are separated by a defined separator, commonly a line-break. That alone makes the data no longer internal.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But even for a binary file some sort of conversion is needed. Different compilers can lead to different memory-layout of data-structures: little vs. big-endian for multi-byte datatypes, direction for arrays, padding bytes included by the compiler, length of integers. If the file is part of an API all this has to be defined, meaning on a different platform with different compilers a conversion from the internal data-structure is needed.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-07-18T08:09:44.430" CommentCount="4" />
  <row Id="1213" PostTypeId="2" ParentId="1207" CreationDate="2015-07-18T08:20:33.840" Score="3" Body="&lt;p&gt;Based on the interpretation of the FSF (the issuer of the GPL): No.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;On the direct interpretation of your questions title it is pretty obvious. If I write an MS Office document in LibreOffice and read and change it in OpenOffice, it doesn't mean LibreOffice and OpenOffice create a combined work. Even more so if the format that is used for the exchange is originating from a third program: MS Office.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But you go more into detail in the question and specify the shared format is used for communication. And your other question points toward the interpretation you want this to know for the case the communication with the shared file format is forming an API.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But even for that case the answer is no. The simple usage of an API isn't creating a derivate and therefore triggering the GPL. The GPL is talking about linking the software, not about using an API. If linking is enough to create a derivate work &lt;a href=&quot;http://opensource.stackexchange.com/q/1188/55&quot;&gt;is discussed&lt;/a&gt;, and not everyone shares the point of view of the FSF. But even the FSF stops at linking and I know of no one, who interprets the formation of a derivate even more inclusive than the FSF.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The FSF addresses this &lt;a href=&quot;https://www.gnu.org/licenses/gpl-faq.html#MereAggregation&quot; rel=&quot;nofollow&quot;&gt;distinction in their FAQ&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If the modules are included in the same executable file, they are&#xA;  definitely combined in one program. If modules are designed to run&#xA;  linked together in a shared address space, that almost surely means&#xA;  combining them into one program.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;By contrast, pipes, sockets and command-line arguments are&#xA;  communication mechanisms normally used between two separate programs.&#xA;  So when they are used for communication, the modules normally are&#xA;  separate programs. But if the semantics of the communication are&#xA;  intimate enough, exchanging complex internal data structures, that too&#xA;  could be a basis to consider the two parts as combined into a larger&#xA;  program.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;As you can see, transferring files via Sockets or Pipes (including STDOUT and STDIN), does not qualify as combination into a larger program. The file could be also exchanged via a command-line parameter pointing to the position the file is saved. That is even more indirectly.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The FAQ has some consideration into 'complex internal data structures', so that could be an argument that both programs are combined. For a file with a defined content (needed for it being an API), we can argue against it being 'internal'. It's pretty obvious for text-files, that you defined in the question, internal data-structures (and that includes strings) have to be converted to fit into text-files. Strings have a length-integer at the beginning (seldom in use today) or are ended by a null-byte (more common). In a test-file strings are separated by a defined separator, commonly a line-break. That alone makes the data no longer internal.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But even for a binary file some sort of conversion is needed. Different compilers can lead to different memory-layout of data-structures: little vs. big-endian for multi-byte datatypes, direction for arrays, padding bytes included by the compiler, length of integers. If the file is part of an API all this has to be defined, meaning on a different platform with different compilers a conversion from the internal data-structure is needed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, always it might be the case that some jurisdictions use different interpretations, I rely on the interpretation of the FSF, as they issued the GPL the question was about.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;FreeRadical points in a &lt;a href=&quot;http://opensource.stackexchange.com/questions/1207/does-sharing-a-file-format-make-two-programs-either-a-combined-or-derived-work/1213?noredirect=1#comment2864_1213&quot;&gt;comment&lt;/a&gt; to the court case of &lt;a href=&quot;http://cyber.law.harvard.edu/people/tfisher/IP/1998%20Micro%20Star%20Abridged.pdf&quot; rel=&quot;nofollow&quot;&gt;FormGen vs. Micro Star&lt;/a&gt; about Duke Nukem level files. I have to explain it a bit, that is too long for comments:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This case is not the same situation as the question asks. The question of kdopen would be similar to Microstar creating a level editor (another program using the same file format). The case was about selling files created with the original level editor and about advertising the pack with screenshots. The screenshots indeed are derivates, as they contain information from both the level-file and copyrighted art from Duke Nukem. So the matter of the screenshots is pretty clear, however the court also concludes the map-files itself create a derivate. For that let interpret the map-file as a program. That is possible, as it contains instructions to the game engine how to use game art to create a new level. But still not matches kdopens question, as there are no two programs that are only linked together by a file format. In my question I cited the FSF with:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If modules are designed to run linked together in a shared address&#xA;  space, that almost surely means combining them into one program.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This happens here, as the map-file is loaded by the game into the address-space of the game. But kdopens question was about linking through exchanged files, not that the file itself is the derivative.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-08-05T14:55:06.180" LastActivityDate="2015-08-05T14:55:06.180" CommentCount="7" />
  <row Id="1214" PostTypeId="2" ParentId="1209" CreationDate="2015-07-18T08:28:48.657" Score="2" Body="&lt;p&gt;No.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Interesting, seeing &lt;a href=&quot;http://opensource.stackexchange.com/a/1211/55&quot;&gt;Free Radicals answer&lt;/a&gt; that comes to a complete different conclusion.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;He writes:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;This again boils down to the legal definition of &quot;derivative work&quot;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;And I agree with that.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To be clear, here my assumption on what you do planning to do:&#xA;You want to take the HTML-code and CSS and probably some images from 'Code for America' and replace the content with your own. I think the integration of your written content with the HTML of Code for America is forming a derivative work and therefore the Share-Alike clause would be triggering.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To err on the safe side you might ask Code for America about this and respect their wishes.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-07-18T08:28:48.657" CommentCount="2" />
  <row Id="1215" PostTypeId="2" ParentId="1207" CreationDate="2015-07-18T09:21:55.840" Score="3" Body="&lt;p&gt;It is impossible to provide a definitive answer to this, as the answer will often depend on the how and for what purpose the &quot;shared&quot; file format is used.  I am sure that there exists multiple instances of two programs sharing data by means of a particular file format that does &lt;em&gt;not&lt;/em&gt; make the two programs a combined or derived work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But the opposite may also be true.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;At least, in case law, I know about &lt;em&gt;one example&lt;/em&gt; where the court found that sharing a file format &lt;em&gt;did&lt;/em&gt; create a derivative work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To avoid any misunderstanding, the court in this particular case did not say that it was just using a shared file format that resulting in a derivative work, but that by &lt;em&gt;using&lt;/em&gt; a shared file format for a specific purpose - i.e. to &lt;em&gt;create a sequel&lt;/em&gt; to a computer program game, a derivative work was created, and the defendant did not have the required license or permission to distribute this derivative work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The case I am referring to is the 9th circuit ruling on &lt;a href=&quot;http://cyber.law.harvard.edu/people/tfisher/IP/1998%20Micro%20Star%20Abridged.pdf&quot; rel=&quot;nofollow&quot;&gt;Micro Star v. FormGen Inc.&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The plaintiff in this case &lt;em&gt;tried&lt;/em&gt; to make the court consider software architecture, by alleging that contested files (&quot;N/I MAP files&quot;) contained instructions to the game-engine and therefore was a &lt;em&gt;program&lt;/em&gt; that was at run-time linked to the main game.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, the court &lt;em&gt;ignored&lt;/em&gt; this angle, and instead based its decision in favor of the plaintiff on the following:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;A copyright owner holds the right to create sequels, [...] and the stories told in the N/I MAP files are surely sequels, telling new (though somewhat repetitive) tales of Duke's fabulous adventures. A book about Duke Nukem would infringe for the same reason, even if it contained no pictures.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;And while the court agreed that the game manufacturer (FormGen) had licensed its &lt;em&gt;users&lt;/em&gt; to create an share such levels in the form of MAP files, the infringing company (Micro Star) has not been granted such a license.  The ruling says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Nothing indicates that FormGen granted Micro Star any written license at &#xA;  all;  nor  is  there  evidence  of  a nonexclusive  oral  license.  The  only  written  license  FormGen  conceivably granted was to players who designed their own new levels, but that license contains a significant  limitation:  Any  new  levels  the  players  create  &quot;must  be  offered  [to  others]  solely  for free&quot;.&lt;br&gt;&#xA;  The  parties  dispute  whether  the  license  is  binding,  but  it  doesn't  matter.  If  the  license  is  valid,  it clearly prohibits commercial distribution of levels; if it doesn't, FormGen hasn't granted any written licenses at all.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The point I am trying to make here is that when courts decide on what is and is not derivative works, they will often consider &lt;em&gt;other&lt;/em&gt; aspects of interdependence between the works than those that follows from software architecture (be it file formats or types of linking). Many programmer's seem to think that courts care about software architecture just as much as they do. However, this is (usually) not the case.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This means that software architecture or linking mechanism  may be &lt;em&gt;unsuitable&lt;/em&gt; as a criterion for deciding if the combination is a derivative work or not. Therefore, most questions about whether the use of some specific software mechanism cannot be answered beyond the generic: &quot;It depends on how, and for what purpose, that  mechanism is used.&quot;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Unless&lt;/em&gt; the dispute is about a &quot;direct derivative&quot; (where original code is copied and transformed to create a derivative, and the outcome is obvious), the courts frequently uses &lt;em&gt;other&lt;/em&gt; criteria than software architecture to decide whether something is a derivative or not.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-05T16:44:31.267" LastActivityDate="2015-08-05T16:44:31.267" CommentCount="0" />
  <row Id="1216" PostTypeId="1" CreationDate="2015-07-18T09:34:36.977" Score="0" ViewCount="44" Body="&lt;p&gt;I have coded a program (Java). It consists of two piece a Main Component and the Calculation Component.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Limitations for the Main Component:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;closed source code&lt;/li&gt;&#xA;&lt;li&gt;no commercial use&lt;/li&gt;&#xA;&lt;li&gt;no allowed changes&lt;/li&gt;&#xA;&lt;li&gt;People i allow to it use are the only one who can use it&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Limitations for the Calculation Component:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Open Source&lt;/li&gt;&#xA;&lt;li&gt;no commercial use&lt;/li&gt;&#xA;&lt;li&gt;no allowed changes &lt;/li&gt;&#xA;&lt;li&gt;People i allow to it use are the only one who can use it&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;So my questions are:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Which licenses would be matching?&lt;/li&gt;&#xA;&lt;li&gt;Is it possible to change the license type after publishing the software?&lt;/li&gt;&#xA;&lt;li&gt;What would change from a license point of view if i would allow changes on the Calculation Component?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="835" LastEditorUserId="190" LastEditDate="2015-07-23T07:09:37.637" LastActivityDate="2015-07-23T07:09:37.637" Title="Matching Licence Model" Tags="&lt;proprietary-code&gt;&lt;license-recommendation&gt;&lt;restrictions&gt;" AnswerCount="1" CommentCount="3" ClosedDate="2015-07-18T14:33:54.520" />
  <row Id="1217" PostTypeId="2" ParentId="1216" CreationDate="2015-07-18T10:01:31.517" Score="5" Body="&lt;p&gt;The &lt;a href=&quot;http://opensource.org/osd&quot; rel=&quot;nofollow&quot;&gt;Open Source Definition&lt;/a&gt; demands:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;No Discrimination Against Fields of Endeavor. (criteria 6)&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;That demands that the license doesn't impose restrictions on the usage. Your criteria 'no commercial use' conflicts with it. See also &lt;a href=&quot;http://opensource.stackexchange.com/q/509/55&quot;&gt;this question&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/li&gt;&#xA;&lt;li&gt;Derived Works. (criteria 3)&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;That demands, that the license allows everyone to change the code and redistribute the changes. Your criteria 'no allowed changes' conflicts with this.&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/li&gt;&#xA;&lt;li&gt;No Discrimination Against Persons or Groups. (criteria 5)&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Your criteria 'People I allow to it use are the only one who can use it' conflicts with it.&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Your calculation component is therefore as proprietary as the main component. If you don't use an open source license, you can demand a lot of things in your license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To answer your single questions:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Which licenses would be matching?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;No open source license, as your demands conflict with the demands of open source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Is it possible to change the license type after publishing the software?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Maybe, with some difficulties. See &lt;a href=&quot;http://opensource.stackexchange.com/q/33/55&quot;&gt;this question&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What would change from a license point of view if I would allow changes on the Calculation Component?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It would still not be open source, as two criteria are still conflicting, but it would be one step in the direction of open source.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="168" LastEditDate="2015-07-23T06:20:04.943" LastActivityDate="2015-07-23T06:20:04.943" CommentCount="3" />
  <row Id="1218" PostTypeId="2" ParentId="1198" CreationDate="2015-07-18T11:27:25.090" Score="2" Body="&lt;p&gt;The clause is actually a historical compromise copied from the &lt;a href=&quot;https://www.debian.org/social_contract#guidelines&quot; rel=&quot;nofollow&quot;&gt;Debian Free Software Guidelines&lt;/a&gt;; the latter states&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Integrity of The Author's Source Code&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The license may restrict source-code from being distributed in modified form &lt;strong&gt;only&lt;/strong&gt; if the license allows the distribution of &lt;em&gt;&quot;patch files&quot;&lt;/em&gt; with the source code for the purpose of modifying the program at build time. The license must explicitly permit distribution of software built from modified source code. The license may require derived works to carry a different name or version number from the original software. &lt;em&gt;(This is a compromise. The Debian group encourages all authors not to restrict any files, source or binary, from being modified.)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The clause was added to the DFSG to allow Debian to carry software such as &lt;a href=&quot;https://en.wikipedia.org/wiki/TeX&quot; rel=&quot;nofollow&quot;&gt;TeX&lt;/a&gt; whose license requires (or used to?) changes to be distributed as patches (&quot;change files&quot;) without touching the original code. (This is alluded to in the &lt;a href=&quot;http://anonscm.debian.org/cgit/collab-maint/nm-templates.git/tree/nm_pp1_extras.txt&quot; rel=&quot;nofollow&quot;&gt;templates&lt;/a&gt; for questions asked to candidates in the Debian New Maintainer process.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As to why one would want to distribute software in this way, it mainly comes down to control and preserving the ability to identify the &quot;official&quot; source code; &lt;em&gt;e.g.&lt;/em&gt; for security reasons, or interoperability, or in the case of TeX, being able to guarantee that a given input document will produce the same output with different versions of the software.&lt;/p&gt;&#xA;" OwnerUserId="118" LastActivityDate="2015-07-18T11:27:25.090" CommentCount="0" />
  <row Id="1219" PostTypeId="1" AcceptedAnswerId="1220" CreationDate="2015-07-18T12:18:59.360" Score="3" ViewCount="39" Body="&lt;p&gt;What issues are involved when taking code from (for example) MIT licensed code and including it in a Apache 2.0/GPLv3 licensed project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Does that mean that there is simply no patent license granted?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is that situation any different from going from LGPLv2.1/GPLv2+ to GPLv3?&lt;/p&gt;&#xA;" OwnerUserId="838" LastActivityDate="2015-07-19T03:05:39.393" Title="Integrating code without a patent license into a code base with a patent license" Tags="&lt;licensing&gt;&lt;license-compatibility&gt;&lt;patents&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="1220" PostTypeId="2" ParentId="1219" CreationDate="2015-07-18T12:38:13.710" Score="4" Body="&lt;p&gt;The MIT/Expat license is a permissive license (i.e. no copyleft), so re-licensing code with this license for the purposes of creating a derivative is normally OK.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The LGPLv2.1/GPLv2+ licenses are not permissive, but they have &lt;em&gt;explicit&lt;/em&gt; provisions that allow re-licensing to GPLv3, so re-licensing code with one of these license for the purposes of creating a derivative is also normally OK.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If there is no patented code snippets present in the MIT/LGPLv2.1/GPLv2+ code you integrate, then there is no problem doing this re-licensing.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, the MIT licenses do not have an anti-patent clause, and the anti-patent provisions of LGPLv2.1 and GPLv2+ (unlike GPLv3) are not in the form of a patent indemnification clause.  This means that code distributed under MIT/LGPLv2.1/GPLv2+ &lt;em&gt;may&lt;/em&gt; contain patented components (this is more likely to be the case with MIT than with GPLv2.1/GPLv2+).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;If&lt;/em&gt; the code contains patented components, re-licensing it to GPLv3 becomes complicated.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Does that mean that there is simply no patent license granted?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;No.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here are the two possible scenarios if the code you plan to use is patented: &lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;em&gt;You&lt;/em&gt; hold &lt;em&gt;all&lt;/em&gt; patent rights in the MIT/LGPLv2.1/GPLv2+ licensed code.  When you take this code and include it in a Apache 2.0/GPLv3 licensed project you're at the same time &lt;em&gt;granting&lt;/em&gt; any downstream users the patent license. &lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;em&gt;Somebody else&lt;/em&gt; holds patent rights in the MIT/LGPLv2.1/GPLv2+ licensed code. Then you simply do not have the necessary &lt;em&gt;rights&lt;/em&gt; to use the code in a Apache 2.0/GPLv3 licensed project (unless the holder of the patent rights agrees to grant downstream users the patent license.  You should get such an agreement in writing before trying to do this.)&lt;br&gt;&#xA;The eventuality that you go ahead and re-license soebody else's patented code to GPLv3 &lt;em&gt;without&lt;/em&gt; having the required patent rights is answered (as seen from the patent-holders perspective) in the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-faq.html#v2OrLaterPatentLicense&quot; rel=&quot;nofollow&quot;&gt;GPL FAQ&lt;/a&gt;: The answer first points out that your patents will not be invalidated by this (so the patent license clause of GPLv3 does not kick in). The FAQ then goes on to say that if you try to &lt;em&gt;enforce&lt;/em&gt; your patents under such circumstances, the FSF will be p*ssed off.  Here is the exact quote from the FAQ, as something may get lost in paraphrasing:  &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If users may also elect to use later versions of the GPL, that's merely an additional permission they have — it does not require you to fulfill the terms of the later version of the GPL as well.&lt;br&gt;&amp;nbsp;&lt;br&gt;&#xA;  Do not take this to mean that you can threaten the community with your patents. In many countries, distributing software under GPLv2 provides recipients with an implicit patent license to exercise their rights under the GPL. Even if it didn't, anyone considering enforcing their patents aggressively is an enemy of the community, and we will defend ourselves against such an attack.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;For reference, patent license text from GPLv3:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-19T03:05:39.393" LastActivityDate="2015-07-19T03:05:39.393" CommentCount="2" />
  <row Id="1222" PostTypeId="1" CreationDate="2015-07-18T14:50:33.680" Score="-1" ViewCount="41" Body="&lt;p&gt;Growing up in the 21st century I was not around when Open Source started (or at least not on the computer). This made me wonder:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When did the consept of open source projects begin to take off? Was this a recient matter? Or has it been around for as long as computers?&lt;/p&gt;&#xA;" OwnerUserId="271" LastActivityDate="2015-07-18T16:04:34.967" Title="When did open source begin to get popular?" Tags="&lt;history&gt;" AnswerCount="1" CommentCount="1" ClosedDate="2015-07-18T21:45:35.780" />
  <row Id="1223" PostTypeId="1" AcceptedAnswerId="1224" CreationDate="2015-07-18T15:21:03.967" Score="5" ViewCount="148" Body="&lt;p&gt;This question is a follow-up on a number of questions that all mention some sort of software architecture X for creating software composites, and then goes on to ask: &quot;Will using X to create a composite result in a derivative work?&quot;.  For example:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://opensource.stackexchange.com/questions/1187/what-are-the-arguments-for-considering-dynamic-links-to-constitute-derivative-wo&quot;&gt;What are the arguments for considering dynamic links to constitute derivative works?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://opensource.stackexchange.com/questions/1188/what-are-the-arguments-for-considering-dynamic-links-to-not-constitute-derivat&quot;&gt;What are the arguments for considering dynamic links to *not* constitute derivative works?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://opensource.stackexchange.com/questions/1181/does-a-host-applications-license-apply-to-plug-ins-written-for-it&quot;&gt;Does a host application&amp;#39;s license apply to plug-ins written for it?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://opensource.stackexchange.com/questions/1207/does-sharing-a-file-format-make-two-programs-either-a-combined-or-derived-work&quot;&gt;Does sharing a file format make two programs either a combined or derived work?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;The assumption behind under each and every one of them is that software architecture X may be suitable to for telling the difference between &lt;em&gt;derivative&lt;/em&gt; and &lt;em&gt;aggregate&lt;/em&gt; composites (otherwise they would not be answerable).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am starting to suspect that this assumption is wrong, and would like to try a new tack on this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What do we know about composites that involve both proprietary software and free software?  (And yes, this is just rhetorical - I know that this far too broad for this site.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To turn this into a more focused question, I would like to see &lt;em&gt;examples&lt;/em&gt; of proprietary software that somehow makes &lt;em&gt;functional use&lt;/em&gt; (i.e. proprietary software that in some way depends on free software in order to perform a useful function).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;We all know that proprietary software runs on a kernel that is under GPL (e.g. Linux), and also that this is not considered a license violation. So this is an example of the sort of composite I am asking about.  I am of course not interested in being reminded about this well-known fact, but rather &lt;em&gt;why&lt;/em&gt; this is not considered a problem.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To narrow it down further, I will say that I am looking for answers that clearly identify the components of the composite program, their interdependency, and how they communicate or are linked.  The best answer to this question will be the answer that is most illuminating in pointing out a &lt;em&gt;pattern&lt;/em&gt; of use or linking that can be used by non-lawyers to tell the difference between a derivative and an aggregate.  I have a priority interest in &lt;em&gt;concrete examples&lt;/em&gt; based upon &lt;em&gt;existing&lt;/em&gt; and &lt;em&gt;usable&lt;/em&gt; software.  The answer may also contain references to legal theory about this topic, but please note I am not looking for &quot;mere theory&quot;. Any legal theory need to be connected to real examples, and its relevance to the example (if not obvious), need to be pointed out in the answer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Edit&lt;/strong&gt;: This question did not impose any &lt;em&gt;restrictions&lt;/em&gt; on what &lt;em&gt;type&lt;/em&gt; of license was used for the free software.  It brought to light (some of?) linking and other exceptions that exists and how they are used in real projects.  (I learned a lot more about the &lt;em&gt;permissive&lt;/em&gt; side of open source than I knew beforehand from the best answer).  However, I also would welcome examples that shows when and how copylefted free software can be combined with free software, but I believe this requires a &lt;em&gt;new&lt;/em&gt; question: &lt;strong&gt;&lt;a href=&quot;http://opensource.stackexchange.com/questions/1431/are-there-examples-of-proprietary-software-that-functionally-depends-on-copyleft&quot;&gt;Are there examples of proprietary software that functionally depends on copylefted software?&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-03T09:49:43.670" LastActivityDate="2015-08-03T09:49:43.670" Title="Are there examples of proprietary software that functionally depends on free software?" Tags="&lt;derivative-works&gt;" AnswerCount="2" CommentCount="4" />
  <row Id="1224" PostTypeId="2" ParentId="1223" CreationDate="2015-07-18T16:02:18.873" Score="9" Body="&lt;p&gt;I'll use Steam as an example. &lt;a href=&quot;http://store.steampowered.com/&quot;&gt;Steam&lt;/a&gt; is &lt;a href=&quot;http://www.valvesoftware.com/&quot;&gt;Valve Software&lt;/a&gt;'s platform for hosting games (and movies etc.); it is itself &lt;a href=&quot;http://store.steampowered.com/subscriber_agreement/&quot;&gt;proprietary&lt;/a&gt;. Initially it was Windows-only, but in the last few years it has been made available on Mac OS X and on Linux. (In fact Valve now have their own Debian-based Linux distribution, &lt;a href=&quot;http://store.steampowered.com/steamos/&quot;&gt;Steam OS&lt;/a&gt;.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;On Linux platforms it uses a number of open source libraries to function. The Steam client itself uses the following libraries:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;% ldd $(find ~/.steam -name steam -type f) &#xA;    linux-gate.so.1 (0xf7786000)&#xA;    libX11.so.6 =&amp;gt; /usr/lib/i386-linux-gnu/libX11.so.6 (0xf736d000)&#xA;    librt.so.1 =&amp;gt; /lib/i386-linux-gnu/i686/cmov/librt.so.1 (0xf7364000)&#xA;    libm.so.6 =&amp;gt; /lib/i386-linux-gnu/i686/cmov/libm.so.6 (0xf731d000)&#xA;    libdl.so.2 =&amp;gt; /lib/i386-linux-gnu/i686/cmov/libdl.so.2 (0xf7318000)&#xA;    libstdc++.so.6 =&amp;gt; /usr/lib/i386-linux-gnu/libstdc++.so.6 (0xf7217000)&#xA;    libpthread.so.0 =&amp;gt; /lib/i386-linux-gnu/i686/cmov/libpthread.so.0 (0xf71fb000)&#xA;    libc.so.6 =&amp;gt; /lib/i386-linux-gnu/i686/cmov/libc.so.6 (0xf7051000)&#xA;    libxcb.so.1 =&amp;gt; /usr/lib/i386-linux-gnu/libxcb.so.1 (0xf702a000)&#xA;    /lib/ld-linux.so.2 (0xf7787000)&#xA;    libgcc_s.so.1 =&amp;gt; /lib/i386-linux-gnu/libgcc_s.so.1 (0xf700d000)&#xA;    libXau.so.6 =&amp;gt; /usr/lib/i386-linux-gnu/libXau.so.6 (0xf7009000)&#xA;    libXdmcp.so.6 =&amp;gt; /usr/lib/i386-linux-gnu/libXdmcp.so.6 (0xf7002000)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;The libraries are basically glibc and X11 client libraries. There's no license infringement here, all the libraries can be used in this way; but it's safe to say that it wouldn't be easy for Valve to replace the libraries with proprietary versions and still have Steam on Linux.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;All this of course is running on a Linux kernel, which is another piece of free software essential to allow Steam to function on a Linux computer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In addition to all this, many (most) games provided through Steam are themselves proprietary, and on Linux they depend on libraries as well. In addition to the above libraries, Steam itself includes a &quot;Steam runtime&quot; which includes many other open source libraries: NSS, Pango, GTK+, GStreamer, ALSA etc. Any program running on Steam is free to use these; their licenses allow linking proprietary software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As to why this is allowed, the libraries' licenses in this case are all either permissive (X11, Expat), LGPL, or GPL with a linking exception (&lt;code&gt;libgcc&lt;/code&gt;); this allows linking proprietary software to the libraries involved.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The kernel itself includes a caveat in &lt;a href=&quot;http://lxr.free-electrons.com/source/COPYING&quot;&gt;its copy of the GPL&lt;/a&gt;, explaining that running programs which use the kernel via syscalls does not constitute derivative software:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;NOTE! This copyright does &lt;em&gt;not&lt;/em&gt; cover user programs that use kernel&#xA;   services by normal system calls - this is merely considered normal use&#xA;   of the kernel, and does &lt;em&gt;not&lt;/em&gt; fall under the heading of &quot;derived work&quot;.&#xA;   Also note that the GPL below is copyrighted by the Free Software&#xA;   Foundation, but the instance of code that it refers to (the Linux&#xA;   kernel) is copyrighted by me and others who actually wrote it.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="118" LastActivityDate="2015-07-18T16:02:18.873" CommentCount="0" />
  <row Id="1225" PostTypeId="2" ParentId="1222" CreationDate="2015-07-18T16:04:34.967" Score="1" Body="&lt;p&gt;I don't know about Open Source - but as far as I know it is a pretty new-fangled phenomenon that started to become popular around 1999, when Eric S. Raymond published &quot;The Cathedral &amp;amp; the Bazaar&quot; and the suits started to think about Open Source as a business model.  I think the &quot;Open source Definition&quot; (by the OSI) surfaced around the same time.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This was more than a decade after Stallman's publication of the &lt;em&gt;Gnu Manifesto&lt;/em&gt; (1985), which did a lot to both popularize and create a consistent philosophy for free software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, the &lt;em&gt;concept&lt;/em&gt; of free software is a much older than that.  The SIMTEL20 archives did host a large body a free software from late 1970ies, and hobbyist magazines like &lt;em&gt;Dr. Dobb's Journal&lt;/em&gt; and &lt;em&gt;People's Computing Company&lt;/em&gt; did champion free software from the early 1970ies (my own involvement with free software started about that time, and I've stayed with free software ever since).  Whether these efforts can be called &quot;popular&quot; depends, they were popular in &lt;em&gt;my&lt;/em&gt; circles, but YMMV.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Of course, if you look at it from an historical perspective, free software &lt;em&gt;predates&lt;/em&gt; proprietary software.  When you bought a mainframe in the 1950ies (that is before my time), it came with full source code and you had full access to it.  I am told that it was quite normal to create highly customized runtime environments by adapting this source code to the needs of the organization.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Of course, in those early days, the concept of source code was not the same as today.  I regard the &lt;a href=&quot;http://www.catb.org/jargon/html/story-of-mel.html&quot; rel=&quot;nofollow&quot;&gt;The Story of Mel&lt;/a&gt; as a good retelling of the spirit of those early days.&lt;/p&gt;&#xA;" OwnerUserId="606" LastActivityDate="2015-07-18T16:04:34.967" CommentCount="0" />
  <row Id="1227" PostTypeId="1" AcceptedAnswerId="1229" CreationDate="2015-07-18T20:42:37.350" Score="11" ViewCount="477" Body="&lt;p&gt;I've got a number of software projects, licensed under varying licenses. For simplicity, let's take one of them, licensed under the GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Obviously, the GPL requires various things, and there may be occasions where people don't do all those things. If &lt;em&gt;I&lt;/em&gt; notice those, I see two choices:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Contact the relevant person with notification and request to comply;&lt;/li&gt;&#xA;&lt;li&gt;Turn a blind eye.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Fine, that's up to me. However, if &lt;em&gt;someone else&lt;/em&gt; contacts &lt;em&gt;me&lt;/em&gt; to say that they've found someone who's not complying with the GPL, does anything change? Does their involvement and thus the fact that I am proven to know about the license violation change how I can react? &lt;strong&gt;Am I, in this scenario, obliged to enforce my license by contacting the offending party?&lt;/strong&gt;&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-07-19T23:49:41.010" Title="Are you obliged to enforce your license?" Tags="&lt;licensing&gt;&lt;gpl&gt;&lt;enforcement&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="1" />
  <row Id="1228" PostTypeId="2" ParentId="1227" CreationDate="2015-07-18T21:10:18.270" Score="6" Body="&lt;p&gt;No. You are not. You hold the copyright, you make up your own mind.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The legal concept of adverse possession does not apply to copyright, and so you can't lose your rights by failing to enforce them, either.&lt;/p&gt;&#xA;" OwnerUserId="554" LastActivityDate="2015-07-18T21:10:18.270" CommentCount="14" />
  <row Id="1229" PostTypeId="2" ParentId="1227" CreationDate="2015-07-19T12:12:10.690" Score="10" Body="&lt;h2&gt;GPL&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;The GPL license doesn't have any specific requirements to make you enforce the license and the copyright holder is the only person who can take any action.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The copyright holder is the one who is legally authorized to take&#xA;  action to enforce the license.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;(&lt;a href=&quot;http://www.gnu.org/licenses/gpl-violation.en.html&quot;&gt;Violations of the GNU Licenses&lt;/a&gt; - GNU.ORG)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h2&gt;Copyright Law&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;So only something in base copyright law could cause you to lose your rights from non-enforcement. Short answer: No, you won't lose your copyright if you do not defend it. That is something that applies to a trademark.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;In the United States, if a trademark owner stops using a mark without&#xA;  intending to resume using it in the future, the mark will be deemed&#xA;  abandoned. Under U.S. trademark law, non-use of a trademark for three&#xA;  consecutive years creates a rebuttable presumption of abandonment of&#xA;  the mark (whether or not it is registered). Temporary or seasonal&#xA;  non-use of a trademark, particularly when such cyclical use is typical&#xA;  in an industry or market, generally does not constitute grounds for&#xA;  abandonment under U.S. law. Rather, periods of non-use must be&#xA;  accompanied by the “intent not to resume use.”&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;In many other countries, grounds for abandonment depend solely on&#xA;  whether the mark at issue has been in use, without regard to the&#xA;  trademark owner’s intent. The period of non-use required to show&#xA;  abandonment of a mark typically ranges from three years (e.g., in&#xA;  Australia, Japan, South Korea, Canada, China, Russia and many Latin&#xA;  American countries) to five years (e.g., in various European&#xA;  countries, such as Ireland and Norway).&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;(&lt;a href=&quot;http://www.inta.org/TrademarkBasics/FactSheets/Pages/LossofTrademarkRightsFactSheet.aspx&quot;&gt;Fact Sheet: Protecting a Trademark&lt;/a&gt; - International Trademark Association). &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h2&gt;Laches defense&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Another reason you may be unable to defend your IP rights after a long period of not enforcing it is what is called a &lt;a href=&quot;https://en.wikipedia.org/wiki/Laches_(equity)&quot;&gt;laches defense&lt;/a&gt;. This is when there has been an unreasonable amount of time in pursing a claim. Laches is an affirmative defense and must be brought forth and proven by the defendant. The US Supreme court has stated that laches does not bar copyright infringement claims (&lt;a href=&quot;https://en.wikipedia.org/wiki/Petrella_v._Metro-Goldwyn-Mayer,_Inc.&quot;&gt;Petrella vs MGM&lt;/a&gt;).&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The majority rejected those arguments, however, saying copyright law&#xA;  was clear in allowing lawsuits up to three years after an infringing&#xA;  act, setting up a rolling period for owners like Petrella to sue&#xA;  although they can only collect on profits earned during that&#xA;  three-year window.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;There is “nothing untoward” about waiting to see if an infringer’s&#xA;  investment paid off, Ginsburg wrote. In fact, the law  “allows a&#xA;  copyright owner to defer suit until she can estimate whether&#xA;  litigation is worth the candle.”&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The Supreme Court’s decision “brings certainty to this issue, which&#xA;  was unique in the Ninth Circuit,” said William Kane&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;(&lt;a href=&quot;http://www.forbes.com/sites/danielfisher/2014/05/19/unusual-split-as-supreme-court-upholds-raging-bull-suit-vs-mgm/&quot;&gt;Unusual Split As Supreme Court Upholds `Raging Bull' Suit Vs. MGM&lt;/a&gt; - Forbes)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So there isn't anything different with someone telling you that someone has infringed on your copyright. You aren't required to enforce it. You can probably even wait and decide later that you want to enforce it but you can only do that within three years of the last infringing act and you can only expect damages based upon the last three years.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;More useful info about copyright myths (including this): &lt;a href=&quot;http://www.templetons.com/brad/copymyths.html&quot;&gt;http://www.templetons.com/brad/copymyths.html&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I Am Not A Lawyer... if you want real legal advice you should contact one.&lt;/p&gt;&#xA;" OwnerUserId="852" LastEditorUserId="852" LastEditDate="2015-07-19T23:49:41.010" LastActivityDate="2015-07-19T23:49:41.010" CommentCount="0" />
  <row Id="1230" PostTypeId="1" AcceptedAnswerId="1232" CreationDate="2015-07-19T14:52:55.410" Score="16" ViewCount="1684" Body="&lt;p&gt;I create some software from scratch. I sell the software, but also keep it open source under the MIT License. Someone forks my repository and makes some great improvements to my software. Can I then clone their repository, and sell the improved software without sharing any profits?&lt;/p&gt;&#xA;" OwnerUserId="295" LastEditorUserId="666" LastEditDate="2015-07-19T19:49:22.693" LastActivityDate="2015-07-19T19:49:22.693" Title="Can I sell my MIT-licensed software if it is modified by others?" Tags="&lt;licensing&gt;&lt;law&gt;&lt;mit&gt;" AnswerCount="2" CommentCount="1" />
  <row Id="1231" PostTypeId="2" ParentId="1230" CreationDate="2015-07-19T15:32:01.197" Score="11" Body="&lt;p&gt;Yes, &lt;em&gt;provided&lt;/em&gt; they license their improvements under MIT or another free/libre license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Please note that MIT (Expat) is a &lt;em&gt;permissive&lt;/em&gt; license, so the fork &lt;em&gt;may&lt;/em&gt; no longer be free/libre software - the improvements may even be proprietary (ARR) - in that case, the other party will be able to sell the improved version, but you will &lt;em&gt;not&lt;/em&gt; have that option (but you can still sell the your original version).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you use a &lt;em&gt;Copyleft&lt;/em&gt; license (e.g. GPLv3) instead of MIT/Expat, they can't do this.  Then any improvements to your program must be licensed under the same license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, if the improvements have a free/libre license, you're allowed to sell free software, even if you don't hold the full copyright (or &lt;em&gt;any&lt;/em&gt; copyright).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also see: &lt;a href=&quot;http://www.gnu.org/philosophy/selling.en.html&quot;&gt;http://www.gnu.org/philosophy/selling.en.html&lt;/a&gt; (while this is from the FSF, it also applies to permissive licenses such as MIT (Expat)).&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-19T16:18:41.217" LastActivityDate="2015-07-19T16:18:41.217" CommentCount="0" />
  <row Id="1232" PostTypeId="2" ParentId="1230" CreationDate="2015-07-19T15:42:10.770" Score="13" Body="&lt;p&gt;Depending on how they chose to provide their fork, yes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The MIT license, which you chose to license your work under, doesn't prevent anyone downstream from changing the license, nor from changing the license of a derivative - unlike a copyleft license such as the GPL. They can essentially license their fork how they like.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If they relicense it under CC BY-NC, you're not allowed to sell it because of the NonCommercial clause in BY-NC. However, that's not a free license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If they've relicensed it under a free license (of which there's a list on the FSF website), then &lt;em&gt;by definition&lt;/em&gt; this allows you to redistribute their work and sell it on.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Keep in mind, however, that if they're providing the same package for free, you're not going to get many customers simply because it's cheaper elsewhere.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-07-19T15:45:12.333" LastActivityDate="2015-07-19T15:45:12.333" CommentCount="13" />
  <row Id="1233" PostTypeId="5" CreationDate="2015-07-19T17:53:31.900" Score="0" Body="&lt;p&gt;CC BY-NC-ND, or the Creative Commons Attribution Non-Commercial No-Derivatives license is the most restrictive of the organizations 6 main licenses. It is not considered to be a FLOSS license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is one freedom, and four restrictions put in place according to the &lt;a href=&quot;http://creativecommons.org/licenses/by-nc-nd/4.0/&quot; rel=&quot;nofollow&quot;&gt;license deed&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Allowed usages:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Sharing, copying and redistributing the material under any format&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Restrictions:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Attribution: You must attribute the original author of the work&lt;/li&gt;&#xA;&lt;li&gt;No Commercial Use: You may not use the material for commercial purposes&lt;/li&gt;&#xA;&lt;li&gt;No Derivatives: You may not adapt upon or transform the work for redistribution, but may do so internally.&lt;/li&gt;&#xA;&lt;li&gt;No Additional Restrictions: You may not apply anything to this license that it would originally permit&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="30" LastEditorUserId="69" LastEditDate="2015-07-22T19:14:44.480" LastActivityDate="2015-07-22T19:14:44.480" CommentCount="0" />
  <row Id="1234" PostTypeId="4" CreationDate="2015-07-19T17:53:31.900" Score="0" Body="For questions about the restrictive Creative Commons license, CC-BY-NC-ND meaning: no derivatives, commercial usages and mandatory attribution." OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-07-22T19:14:36.390" LastActivityDate="2015-07-22T19:14:36.390" CommentCount="0" />
  <row Id="1235" PostTypeId="5" CreationDate="2015-07-19T18:33:56.903" Score="0" Body="&lt;p&gt;Cryptography is essentially about constructing and analyzing protocols that block adversaries.&lt;br&gt;&#xA;Prior to modern times, Cryptography was essentially Encryption: the conversion of information from a readable state to apparent nonsense.&lt;br&gt;&#xA;Modern cryptography exists at the intersection of the disciplines of mathematics, computer science, and electrical engineering while incorporating various aspects of Information Security such as data confidentiality, data integrity, authentication, and non-repudiation.&#xA;Cryptographic technology in the modern age is an essential tool for users who wish to remain anonymous, and as such has been classified as a weapon/criminalized by many governments to limit/prohibit Cryptographic Technology use/growth/export.&lt;br&gt;&#xA;Cryptography Resources:&lt;br&gt;&#xA;&lt;a href=&quot;http://www.garykessler.net/library/crypto.html&quot; rel=&quot;nofollow&quot;&gt;http://www.garykessler.net/library/crypto.html&lt;/a&gt;&lt;br&gt;&#xA;&lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptography&quot; rel=&quot;nofollow&quot;&gt;https://en.wikipedia.org/wiki/Cryptography&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="30" LastEditorUserId="30" LastEditDate="2015-07-19T21:37:39.103" LastActivityDate="2015-07-19T21:37:39.103" CommentCount="0" />
  <row Id="1236" PostTypeId="4" CreationDate="2015-07-19T18:33:56.903" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-19T18:33:56.903" LastActivityDate="2015-07-19T18:33:56.903" CommentCount="0" />
  <row Id="1237" PostTypeId="2" ParentId="174" CreationDate="2015-07-19T18:54:50.150" Score="3" Body="&lt;p&gt;Some licenses, including the GPLv3, contain a &lt;strong&gt;Disclaimer of Warranty&lt;/strong&gt; and a &lt;strong&gt;Limitation of Liability&lt;/strong&gt; (Sections 14 and 15), which are relevant to using the software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;By having the user agree to the license as if it was an &lt;strong&gt;EULA&lt;/strong&gt;, you are telling him that he waives the right to sue you for (among others) any damage caused by the program.&lt;/p&gt;&#xA;" OwnerUserId="856" LastActivityDate="2015-07-19T18:54:50.150" CommentCount="1" />
  <row Id="1238" PostTypeId="5" CreationDate="2015-07-19T19:09:50.093" Score="0" Body="&lt;p&gt;OSCON is an annual convention for the discussion of free and open source software hosted by O'Reilly.&lt;br&gt;&#xA;&quot;OSCON is where all of the pieces come together: developers, innovators, businesspeople, and investors. In the early days, this trailblazing O'Reilly event was focused on changing mainstream business thinking and practices; today OSCON is about real-world practices and how to successfully implement open source in your workflow or projects. While the open source community has always been viewed as building the future—that future is here, and it's everywhere you look. Since 1999, OSCON has been the best place on the planet to experience the open source ecosystem. At OSCON, you'll find everything open source: languages, communities, best practices, products and services. Rather than focus on a single language or aspect, such as cloud computing, OSCON allows you to learn about and practice the entire range of open source technologies.&quot;[1]  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.oscon.com/open-source-2015/public/content/about&quot; rel=&quot;nofollow&quot;&gt;1. About: Open Source Convention - O'Reilly OSCON, July 20 - 24, 2015 in  Portland, OR&lt;/a&gt;  &lt;/p&gt;&#xA;" OwnerUserId="30" LastEditorUserId="30" LastEditDate="2015-07-19T21:37:25.383" LastActivityDate="2015-07-19T21:37:25.383" CommentCount="0" />
  <row Id="1239" PostTypeId="4" CreationDate="2015-07-19T19:09:50.093" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-19T19:09:50.093" LastActivityDate="2015-07-19T19:09:50.093" CommentCount="0" />
  <row Id="1240" PostTypeId="5" CreationDate="2015-07-19T19:52:17.740" Score="0" Body="&lt;p&gt;FOSS can be classified as both free software and open-source software, whose implementations include source code, allowing anyone free license to use, copy, study, and change it in any way.  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Differences between FOSS and FLOSS&lt;br&gt;&#xA;&quot;“FOSS,” which stands for “Free and Open Source Software.” This is meant to mean the same thing as “FLOSS,” but it is less clear, since it fails to explain that “free” refers to freedom. It also makes “free software” less visible than “open source,” since it presents “open source” prominently but splits “free software” apart.&quot;[1]&lt;br&gt;&#xA;&lt;a href=&quot;http://www.gnu.org/philosophy/floss-and-foss.en.html&quot; rel=&quot;nofollow&quot;&gt;1. FLOSS and FOSS&lt;/a&gt;  &lt;/p&gt;&#xA;" OwnerUserId="30" LastEditorUserId="30" LastEditDate="2015-07-19T21:37:32.607" LastActivityDate="2015-07-19T21:37:32.607" CommentCount="0" />
  <row Id="1241" PostTypeId="4" CreationDate="2015-07-19T19:52:17.740" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-19T19:52:17.740" LastActivityDate="2015-07-19T19:52:17.740" CommentCount="0" />
  <row Id="1242" PostTypeId="5" CreationDate="2015-07-19T20:11:50.053" Score="0" Body="&lt;p&gt;According to &lt;a href=&quot;https://en.wikipedia.org/wiki/Gamification&quot; rel=&quot;nofollow&quot;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Gamification is the use of game thinking and game design elements (including game mechanics) in non-game contexts.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Gamification is all about making systems more fun to use, and providing more tangible targets for users to work towards, thus improving user focus, engagement, and activity.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A classic - and relevant - example is the system of 'Badges' used on StackExchange sites. Similar approaches have appeared in applications as diverse as &lt;a href=&quot;http://www.quora.com/How-do-I-earn-badges-on-the-Audible-iOS-or-Android-apps&quot; rel=&quot;nofollow&quot;&gt;Audiobook players&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Fitocracy#Quests_and_Achievements&quot; rel=&quot;nofollow&quot;&gt;Fitness Sites&lt;/a&gt;. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Use this tag on questions about this idea and its relationships to open projects.&lt;/p&gt;&#xA;" OwnerUserId="30" LastEditorUserId="29" LastEditDate="2015-07-22T20:38:54.593" LastActivityDate="2015-07-22T20:38:54.593" CommentCount="0" />
  <row Id="1243" PostTypeId="4" CreationDate="2015-07-19T20:11:50.053" Score="0" Body="For questions about gamifying systems to improve usability and encourage users." OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-07-22T19:14:24.077" LastActivityDate="2015-07-22T19:14:24.077" CommentCount="0" />
  <row Id="1244" PostTypeId="1" AcceptedAnswerId="1246" CreationDate="2015-07-19T23:09:49.300" Score="7" ViewCount="85" Body="&lt;p&gt;I want to include a bunch of images licensed under the CC BY-NC-SA inside my freemium web software.&#xA;The user can choose one or more of these images to make her own composition. This part of the software is completely free for use and free for distribute the generated work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But to access other capabilities of the software the user has to pay. These capabilities aren't related with the images, they are like add sound or make a transition.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Since the commercial part of my app comes from other things, does this usage violates the no commercial part of the license?&lt;/p&gt;&#xA;" OwnerUserId="858" LastEditorUserId="97" LastEditDate="2015-07-21T13:12:39.230" LastActivityDate="2015-07-21T13:12:39.230" Title="Using CC-NC material inside a freemium app" Tags="&lt;creative-commons&gt;&lt;non-commercial&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="1245" PostTypeId="1" CreationDate="2015-07-20T07:54:00.083" Score="0" ViewCount="43" Body="&lt;p&gt;I want to start an IDE (GPL compatible) based on QtCreator code (that is licensed under GPL and LGPL).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Do I have to change all files/classes names within QtCreator source code because of L/GPL licenses? or just modified files? or a copyright notice is enough?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; sometimes modification within a file is just changing &quot;QtCreator&quot; to &quot;My App Name&quot;&lt;/p&gt;&#xA;" OwnerUserId="870" LastActivityDate="2015-07-20T08:54:02.960" Title="Changing code of an existing opensource application" Tags="&lt;gpl&gt;" AnswerCount="1" CommentCount="2" FavoriteCount="0" ClosedDate="2015-07-20T13:48:46.027" />
  <row Id="1246" PostTypeId="2" ParentId="1244" CreationDate="2015-07-20T08:07:29.537" Score="6" Body="&lt;p&gt;I do not think this is a question that has a straightforward yes or no answer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The CC NC clause is really hard to get a grasp on, and Creative Commons do not provide much guidance about it. Their &lt;a href=&quot;https://wiki.creativecommons.org/wiki/Frequently_Asked_Questions#Does_my_use_violate_the_NonCommercial_clause_of_the_licenses.3F&quot; rel=&quot;nofollow&quot;&gt;FAQ: Does my use violate the NonCommercial clause of the licenses&lt;/a&gt; is deliberately vague, and can be summed up in this sentence:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Whether a use is commercial will depend on the specifics of the situation and the intentions of the user.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The FAQ answer about the NC clause concludes:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;CC cannot advise you on what is and is not commercial use. If you are unsure, you should either contact the rights holder for clarification, or search for works that permit commercial uses.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The NC clause is controversial, and there has been repeated requests to discontinue it, such as this one from the &lt;a href=&quot;http://freeculture.org/blog/2012/08/27/stop-the-inclusion-of-proprietary-licenses-in-creative-commons-4-0/&quot; rel=&quot;nofollow&quot;&gt;Free Culture Foundation&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In 2008-9 Creative Commons commissioned a study from a professional market research company that resulted in a report with the promising title &quot;&lt;a href=&quot;https://wiki.creativecommons.org/wiki/Defining_Noncommercial&quot; rel=&quot;nofollow&quot;&gt;Defining Noncommercial&lt;/a&gt;&quot;, but this report only summarizes how Internet users &lt;em&gt;perceive&lt;/em&gt; the terms “commercial use” and “noncommercial use” in the context of content found online.  It does not provide a &lt;em&gt;legal definition&lt;/em&gt; of these terms.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The study was met with some hostile responses. Here is the one from free culture proponent &lt;a href=&quot;http://opendotdotdot.blogspot.no/2009/09/nonplussed-by-non-commercial.html&quot; rel=&quot;nofollow&quot;&gt;Glyn Moody&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;All that comes across to me from these figures is that &quot;non-commercial&quot; is so fluid a concept as to be useless.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I do not agree with Moody.  The wily NC-clause fills a much requested niche in the sharing (but not free) culture ecosystem - for instance it helps supplying schools and NGOs with materials that otherwise in all probability would have been ARR.  But the NC has a very narrow use case.  It is for creators who want their creations to &lt;em&gt;stay&lt;/em&gt; free (as in free beer), and not being exploited for money.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But since no relevant case law exists (AFAIK), and the concept is so difficult to pin down, it is not prudent to use materials with this clause in borderline cases (and I think said freemium app is a borderline case), &lt;em&gt;unless&lt;/em&gt; you are really keen to &lt;em&gt;contribute&lt;/em&gt; to case law by being sued over borderline use.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I do not think it is possible to give any defintive answer to your question without examining the specific app and the specific business model in detail - and even then the answer may turn out to be: &quot;Definitely maybe&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But we can not provide this analysis for you on this web-site.  If you really need to use CC-BY-NC-SA images in your app, you must to hire a lawyer and have him/her access to your app and documents describing your business model and give you professional legal advice about your &lt;em&gt;specific&lt;/em&gt; case.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But since you're asking here, it can be presumed that you're &lt;em&gt;unsure&lt;/em&gt; about this, so the best answer &lt;em&gt;I&lt;/em&gt; can provide is to repeat the answer from the CC FAQ:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If you are unsure, you should either contact the rights holder for clarification, or search for works that permit commercial uses.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-20T20:46:59.033" LastActivityDate="2015-07-20T20:46:59.033" CommentCount="0" />
  <row Id="1247" PostTypeId="1" AcceptedAnswerId="1252" CreationDate="2015-07-20T08:35:07.667" Score="4" ViewCount="376" Body="&lt;p&gt;In the comments below &lt;a href=&quot;http://opensource.stackexchange.com/a/1232/606&quot; title=&quot;ArtOfCode’s answer to the question &amp;#39;Can I sell my MIT-licensed software if it is modified by others?&amp;#39;&quot;&gt;this answer&lt;/a&gt;, it is stated that while there is no ShareAlike clause (that would be CC BY-NC-SA), you would not be allowed to re-license Adapted Materials under commercial terms.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is this interpretation of this license correct?&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-20T13:12:43.633" LastActivityDate="2015-07-20T14:23:01.097" Title="Can someone re-license an adaptation of my CC BY-NC materials under commercial terms?" Tags="&lt;creative-commons&gt;&lt;relicensing&gt;&lt;commercial&gt;&lt;cc-by-nc&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="1" />
  <row Id="1248" PostTypeId="2" ParentId="1245" CreationDate="2015-07-20T08:54:02.960" Score="1" Body="&lt;p&gt;As you say, QT Creator is available under free software licenses (GPL and LGPL) that allows you to creative derivative works.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Forking this project to create &lt;strong&gt;My App Name&lt;/strong&gt; is to create a derivative work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The license requires you to make it clear that your &lt;strong&gt;My App Name&lt;/strong&gt; is a fork of &lt;strong&gt;QT Creator&lt;/strong&gt; (so that nobody that uses your version will believe that they are using the original). You are also required to &lt;em&gt;preserve&lt;/em&gt; the original copyright notices and authorship attribution (so that nobody that uses your version will think that you wrote it from scratch).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The reasonable way to to this is to make sure that your IDE is clearly branded as  &lt;strong&gt;My App Name&lt;/strong&gt;, and that you put additional copyright and attribution information in comment blocks in the files that you change.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Their is &lt;em&gt;no requirement&lt;/em&gt; to change file-names and class-names when you do this.  You &lt;em&gt;may&lt;/em&gt; do this, but my recommendation is to change as little as possible, to make it simple (by means &lt;em&gt;diff&lt;/em&gt; or similar tools) to separate your real changes and additions from the original code.&lt;/p&gt;&#xA;" OwnerUserId="606" LastActivityDate="2015-07-20T08:54:02.960" CommentCount="0" />
  <row Id="1249" PostTypeId="2" ParentId="1247" CreationDate="2015-07-20T09:56:24.753" Score="2" Body="&lt;p&gt;Someone are allowed to &lt;em&gt;license&lt;/em&gt; their contribution to some CC-BY-NC materials under commercial terms - but they're not allowed to &lt;em&gt;re-license&lt;/em&gt; the entire project in this way.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This was a lot more difficult than I initially imagined, and cudos to &lt;em&gt;neo&lt;/em&gt; who made me see the light &lt;code&gt;:-)&lt;/code&gt;.  Since I am aiming for the &lt;a href=&quot;http://opensource.stackexchange.com/help/badges/63/sportsmanship&quot;&gt;Sportsmanship&lt;/a&gt; badge, and since I've spent some time on sorting this out for myself, I'll keep my (heavily rewritten) answer online.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;First, we really need to determine &lt;em&gt;what&lt;/em&gt; is licensed in the case of an adaptation.  Here is the definiton (sec. 1(a)).&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Adapted Material&lt;/strong&gt; means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;We're not talking about an aggregate work here (a compilation of separate work that are easily separated and that can co-exist with different licenses for each component). &lt;strong&gt;Adapted Material&lt;/strong&gt; is the &lt;em&gt;result&lt;/em&gt; of a process of transforming materials &quot;derived from or based upon the Licensed Material&quot; where the &quot;Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor.&quot;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This means that it may &lt;strong&gt;Adapted Material&lt;/strong&gt; very hard to determine what is original and what is adapted material.  If a sub-routine does not work because the original authors has the got a comparison test in it backwards, and I create a fork and fixes the bug: Is the entire fixed subroutine &lt;strong&gt;Adapted Material&lt;/strong&gt;, or just the change from &quot;&lt;code&gt;&amp;gt;&lt;/code&gt;&quot; to &quot;&lt;code&gt;&amp;lt;&lt;/code&gt;&quot;?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, when &lt;strong&gt;Adapted Material&lt;/strong&gt; is created, both licenses allows you to add an Adapter's License, and they differ in what they permit.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The CC-BY-NC says (section 3(a)(4)):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If You Share Adapted Material You produce, the Adapter's License You apply must not prevent recipients of the Adapted Material from complying with this Public License. &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The CC-BY-NC-SA license instead says (section 3(b)(1)):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The Adapter’s License You apply must be a Creative Commons license with the same License Elements, this version or later, or a BY-NC-SA Compatible License.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So in the case of CC-BY-NC-SA, your own improvements must also restrict users from commercial use, while in the case of CC-BY-NC, you can permit this for your own &lt;strong&gt;Adapted Material&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To figure out exactly what these terms apply to, we need to understand   2(a)(1) and  2(a)(5)(A). The first states that the license you receive from the original author is &lt;em&gt;non-sublicensable&lt;/em&gt; and you instead gets an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License. (My heartfelt thanks to &lt;em&gt;neo&lt;/em&gt; for pointing this in his answer).  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;So you're &lt;em&gt;explicitly&lt;/em&gt; allowed to add your own license (otherwise, it it would be meaningless to talk about an &lt;strong&gt;Adapter's License&lt;/strong&gt;).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, in the case of CC BY-NC, since the &lt;em&gt;original&lt;/em&gt; license forbids commercial use, if your Adapter's License do not, you need (somehow) to make it clear to downstream recipients what license applies to what part of the project.  You can do this by distribution your part as a patchfile - and if your contribution is substantial it may even inspire downstream recipients who wants to get rid of the NC-restriction to do a clean-room rewrite the files that makes up original.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, this exercise mostly serves to remind us that extreme caution is required when one encounter materials that has (or at one point in their history has) been subject to the NC-clause.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-20T12:57:49.180" LastActivityDate="2015-07-20T12:57:49.180" CommentCount="4" />
  <row Id="1252" PostTypeId="2" ParentId="1247" CreationDate="2015-07-20T11:32:53.770" Score="6" Body="&lt;p&gt;This interpretation is correct.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The share-alike clause in other licenses is only relevant to contributions made by others than the original licensor. In fact, the &lt;a href=&quot;https://creativecommons.org/licenses/by-nc/4.0/legalcode&quot; rel=&quot;nofollow&quot;&gt;CC-BY-NC 4.0 license&lt;/a&gt; does not grant you the right to sub-license the original work at all, as shown in section 2(a)(1) (emphasis mine):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Subject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, &lt;strong&gt;non-sublicensable&lt;/strong&gt;, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Instead, every downstream recipient gets an offer to use the work under the terms of the original license by section 2(a)(5)(A):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Offer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;While the license does not impose any restrictions on the &lt;em&gt;Adapter's License&lt;/em&gt; this is explicitly defined in section 1(b) (emphasis mine):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Adapter's License means the license You apply to &lt;strong&gt;Your Copyright and Similar Rights&lt;/strong&gt; in &lt;strong&gt;Your contributions&lt;/strong&gt; to Adapted Material in accordance with the terms and conditions of this Public License.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;and so this right only extends to own work. This does not grant any additional right to use the original work without the restrictions of the original CC-BY-NC license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, re-licensing the original work is &lt;em&gt;not&lt;/em&gt; granted by this license.&lt;/p&gt;&#xA;" OwnerUserId="871" LastEditorUserId="606" LastEditDate="2015-07-20T14:23:01.097" LastActivityDate="2015-07-20T14:23:01.097" CommentCount="0" />
  <row Id="1253" PostTypeId="2" ParentId="1142" CreationDate="2015-07-20T11:43:05.417" Score="-3" Body="&lt;p&gt;If you're the only copyright holder, then you can release the software on any license you want.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The license text itself, as legal document, is not a subject to copyright (at least in Poland), so you can copy and modify it to suit your needs/vision/etc. This includes putting additional files inside the distribution, restricting users from deleting the license etc.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However if you do this, you can't use names like Free Software Foundation, GNU, General Public License, because your new license is just a derivative, and has nothing to do with GNU or FSF or anything else.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;But if you only partially hold the copyright, eg. you're an original author of GPL-ed software and you already accepted patches from other people, then you're restricted by the rules of the license you originally used.&lt;/p&gt;&#xA;" OwnerUserId="691" LastEditorUserId="691" LastEditDate="2015-07-30T09:10:40.933" LastActivityDate="2015-07-30T09:10:40.933" CommentCount="9" />
  <row Id="1254" PostTypeId="2" ParentId="893" CreationDate="2015-07-20T14:12:41.180" Score="2" Body="&lt;p&gt;AFAIK, there is currently no license having a slot reserved for a backlink URL that is recognized by the FSF or OSI.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is not hard to create such a license.  Adding a slot for the backlink URL to the &lt;a href=&quot;http://opensource.org/licenses/ISC&quot; rel=&quot;nofollow&quot;&gt;ISC License&lt;/a&gt; and altering the permission statement as follows will do it.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice, &lt;strong&gt;URL&lt;/strong&gt; and this permission notice appear in all copies.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The ISC License is permissive, and recognized by both the FSF and the OSI. Your custom license will not have this recognition, and license proliferation should not be encouraged, so I do not think you &lt;em&gt;should&lt;/em&gt; go on to create this custom license - but it is certainly possible to do so.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, in free software project I generally find contact information helpful. This goes both for project email address and backlinks that points to project members or master repo.  While link rot and email becoming a black hole is not unheard of, I still prefer to have access to contact information than not.  This allows me to contact the maintainers to inquire about the status of the project, and to make pull requests if I've fixed a bug or added a feature.  And even if the backlink URL leads to 404 or an unrelated site, it is helpful, because it is an indicator that the project is abandoned and if I want to continue using it, I may have to maintain it myself.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The license file is IMHO &lt;em&gt;not&lt;/em&gt; the right place to put contact information. If you're community has standardized on the ISC License, please continue to use the recognized version.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Each free software project should have a &lt;code&gt;README.txt&lt;/code&gt; with some basic information about the project, &lt;em&gt;including&lt;/em&gt; any contact information you want to give your users.  If your project does not have it, I suggest you create it and put the backlink URL there.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As for this part of your question:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;such that most or all deployments would be prohibited from removing a backlink?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;No.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You shouldn't worry about this.  No serious developer will even &lt;em&gt;think&lt;/em&gt; about removing this information as long as it is useful.  Having some means to get in touch with the project's &quot;home base&quot; is treasured by free software developers.  The link will not be deleted until it returns 404 or point to some cybersquatter's porn site.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-21T03:02:14.220" LastActivityDate="2015-07-21T03:02:14.220" CommentCount="4" />
  <row Id="1255" PostTypeId="1" AcceptedAnswerId="1256" CreationDate="2015-07-20T15:18:23.110" Score="20" ViewCount="2505" Body="&lt;p&gt;This question is about selling FLOSS and its source-code. According to &lt;a href=&quot;http://www.gnu.org/philosophy/selling.en.html&quot;&gt;Selling Free Software&lt;/a&gt; and &lt;a href=&quot;http://opensource.org/faq#commercial&quot;&gt;commercial purpose&lt;/a&gt;, Free Software can be distributed with or without charge.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;My friend asked me two questions which I didn’t answer &lt;em&gt;exactly&lt;/em&gt;, so I would like to ask one here, in order to know &lt;em&gt;absolutely&lt;/em&gt; and explain.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Consider a company that produces Free Software (e.g., VLC under GPL), and sells that software at some price on its website and/or in compact disc form. Suppose someone (say Alice) bought it. According to the FLOSS license, Alice is free to redistribute with or without charge. If Alice publishes a copy gratis on her website in public, then anyone can directly get a copy from Alice, thus taking customers away from the original paid authors. Thus, I don’t understand the selling strategy of FLOSS. Help me to understand.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;I know that some FLOSS packages are distributed with some paid services/maintenance and some with dual licensing (with proprietary software). But here I am talking about FLOSS-only open-source (no dual / with proprietary) licensing and not any services/maintenance charge.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In brief: &lt;strong&gt;How is selling FLOSS packages for monetary compensation a viable strategy?&lt;/strong&gt;&lt;/p&gt;&#xA;" OwnerUserId="296" LastEditorUserId="235" LastEditDate="2015-07-21T22:50:09.790" LastActivityDate="2015-07-24T08:29:08.553" Title="How is selling FLOSS packages for monetary compensation a viable strategy?" Tags="&lt;commercial&gt;&lt;floss&gt;" AnswerCount="7" CommentCount="1" FavoriteCount="4" />
  <row Id="1256" PostTypeId="2" ParentId="1255" CreationDate="2015-07-20T15:47:40.820" Score="17" Body="&lt;p&gt;Some years ago, before ubiquitous access to the Internet, you could sometimes make money on free software by selling  it on a professionally produced CD-ROM.  People would pay for having a verified version of the software delivered to them directly from by the primary source, (the company that authored the software), instead of shopping around for a cheaper alternative supplier whose version would be of unknown vintage and provenance.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That business model is dead now.  Instant downloads from the Internet of a complete distribution is what is expected. Putting this distribution behind a paywall does not work, because Google makes it too easy to locate alternate suppliers that give users access to exactly the same tarball for free (i.e. &lt;em&gt;without&lt;/em&gt; the paywall).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However. there are many &lt;em&gt;different&lt;/em&gt; successful business models for Free Software and Open Source software in 2015, but selling the packages themselves is not one of them.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Wikipedia has a &lt;a href=&quot;https://en.wikipedia.org/wiki/Business_models_for_open-source_software&quot;&gt;long article&lt;/a&gt; devoted to the subject.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am not going to reproduce that long Wikipedia article here, but rather focus on the one of these business models I have personal experience with: Selling &lt;strong&gt;professional services&lt;/strong&gt; - with a bit more detail than the &lt;a href=&quot;https://en.wikipedia.org/wiki/Business_models_for_open-source_software#Selling_professional_services&quot;&gt;Wikipedia&lt;/a&gt; provides.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The problem for many small software companies is to actually get anyone to &lt;em&gt;look&lt;/em&gt; at their amazing software.  If the brand is not well not known, or the software not generally acknowledged as &quot;amazing&quot;, my experience is that it is hard to sell software the traditional way (i.e. making cold calls, spending money on advertising in magazines, having stands on trade shows, etc.) Just making prospective customers software &lt;em&gt;notice&lt;/em&gt; your software may in some projects be just as expensive as writing it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also, if your company is small, your customer cannot be sure your company will survive.  If they pay good money for closed source software, and the company behind it implodes, there will be no more support and no more releases.  This renders most software useless after some time.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Making free software publicly available can be considered an &lt;em&gt;alternative way of marketing&lt;/em&gt; that makes your software reach more prospective customers that traditional selling techniques.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Free software also comes with following advantages for the user compared to non-free software:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;It is available from download on the Internet and they can try it out for free.&lt;/li&gt;&#xA;&lt;li&gt;If your company implodes, the users are &lt;em&gt;not&lt;/em&gt; left high and dry. Since they have the source code, they can get always get somebody else to support and maintain it.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;However, so far I've only pointed out the advantages of free software for the &lt;em&gt;user&lt;/em&gt;.  You, the author, haven't seen any money yet.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What may happen if you do this, if your software truly is good and generally useful, is that you'll see thousands of downloads.  Most of those will indeed use the software for free, and never earn you a penny.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, you have &lt;em&gt;users&lt;/em&gt; (hopefully thousands), and &lt;em&gt;some&lt;/em&gt; of these users will want &lt;strong&gt;professional services&lt;/strong&gt;.  That this:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;they will be willing to pay you an annual support fee, in return for you supporting them (hot-line for user questions, first priority bug-fixes, etc.)&lt;/li&gt;&#xA;&lt;li&gt;they will be willing to pay you for specific customizations that address specific use cases&lt;/li&gt;&#xA;&lt;li&gt;they will be willing to pay consulting and custom development, where you adapt and integrate your free software to their specific IT infrastructure&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;The business model for professional services is not unique to free software.  This is the usually a profitable business model for proprietary software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, if you're a small software company, you may never see your software used by &lt;em&gt;anyone&lt;/em&gt; if you go the proprietary route. There are too many barriers between you and any users.  With free software, you may get thousands of users, and if only a fraction of those sign up for professional services, you will have a healthy business.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In addition to selling professional services, there also exists a business model that involves some free software/open source components that is called &lt;strong&gt;freemium&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In this business model, there is an application that can be downloaded for zero cost that is also free software (i.e. &quot;free&quot; as in &quot;freedom&quot; as well as in &quot;free beer&quot;).  However, this application only provides some limited service.  The service can be enhanced, either by buying non-free premium &lt;em&gt;plugins&lt;/em&gt; that integrates with, and enhances, the free application, or the free application communicates with some SAAS (Software As A Servivce) &lt;em&gt;web-service&lt;/em&gt; that only provides a very basic  service for free. To &quot;unlock&quot; more functions in the web-service, the customer has to pay for premium services.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I have no personal experience with this business model, but the anti-spam tool &lt;a href=&quot;https://www.drupal.org/project/mollom&quot;&gt;Mollom for Drupal&lt;/a&gt; (available under GPLv2+) is an example of a project that is successfully using the &lt;strong&gt;freemium&lt;/strong&gt; business model.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-22T01:52:29.393" LastActivityDate="2015-07-22T01:52:29.393" CommentCount="8" />
  <row Id="1257" PostTypeId="2" ParentId="1255" CreationDate="2015-07-20T15:48:02.357" Score="2" Body="&lt;p&gt;Software licensed on any GNU license, except GNU LGPL, cannot be &quot;sold&quot;. Instead the company can charge some fee for the distribution itself.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As for your questions:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;Exactly, it can happen. So the correct selling strategy of open source software is to really sell implementation and/or customization services, know-how, technical support etc. instead of the software itself - OR sell the closed source parts (dual licensing, open core etc. - there are many possible techniques).&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;In recent years &quot;open core&quot; software has become popular. Open core means that core software is open source and free to redistribute, but there are several external paid, closed source plugins and tools created around the core. Example: MySQL Community Edition and Enterprise Edition.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="691" LastEditorUserId="98" LastEditDate="2015-07-20T15:55:59.523" LastActivityDate="2015-07-20T15:55:59.523" CommentCount="9" />
  <row Id="1258" PostTypeId="2" ParentId="1255" CreationDate="2015-07-20T16:14:40.537" Score="8" Body="&lt;p&gt;You are correct, selling FOSS packages for money is generally a bad idea: someone else will come along, promoting their free distribution, and take all your customers away. This is not a very viable business strategy.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, what you &lt;em&gt;can&lt;/em&gt; do is sell &lt;em&gt;peripherals&lt;/em&gt;: little extra bits that nobody else has, that people will think are &lt;em&gt;worthwhile paying for&lt;/em&gt;. This includes:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;support&lt;/li&gt;&#xA;&lt;li&gt;'premium' features, whatever they are in your case&lt;/li&gt;&#xA;&lt;li&gt;plugins&lt;/li&gt;&#xA;&lt;li&gt;priority development (if you pay, I'll dev your request first)&lt;/li&gt;&#xA;&lt;li&gt;enterprise integration services (sounds posh, really just means installing it for a company)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;The last of these is especially of note. Companies are usually fairly willing to pay someone who &lt;em&gt;knows&lt;/em&gt; the software (such as the developer) to install it for them, so that they know it's done right.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-07-20T16:14:40.537" CommentCount="1" />
  <row Id="1259" PostTypeId="2" ParentId="1255" CreationDate="2015-07-20T19:00:55.743" Score="10" Body="&lt;p&gt;To specifically answer the question of what the point of making allowances for people selling free software is, as why anyone would ever want to sell free software; consider, say, a TV. The manufacturers want a whole load of shiny features that connect to the internet, etc., so they decide to base the software on a fully-featured free operating system, along with free software to handle various other things, rather than writing their own. Then they sell the TV.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Like this, they're selling the free software, while not specifically making money on the software. The software is just a necessary part for the other thing they're selling — the hardware — to be of any use.&lt;/p&gt;&#xA;" OwnerUserId="879" LastActivityDate="2015-07-20T19:00:55.743" CommentCount="1" />
  <row Id="1260" PostTypeId="2" ParentId="1255" CreationDate="2015-07-20T21:26:29.363" Score="3" Body="&lt;p&gt;To add to excellent @Free Radical answer:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Similar business model as creating free FLOSS software is &lt;strong&gt;&quot;loss leader&quot;&lt;/strong&gt; strategy: selling cheap printers to sell more ink cartridges, cheap coffee maker to sell keurig coffee cups, etc. In this case, loss leader is given away free.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For some applications, like &lt;a href=&quot;https://en.wikipedia.org/wiki/Enterprise_resource_planning&quot; rel=&quot;nofollow&quot;&gt;ERP&lt;/a&gt;, cost of sale is huge (may take several weeks of highly qualified technical guru to show customer the features and customize it enough for customer to make buy/no buy decision). All this cost (tens of thousands of dollars) needs to be covered by profit from sales. If source is free, customer can try it (or pay experts to configure it before trying). So &lt;a href=&quot;https://launchpad.net/openobject&quot; rel=&quot;nofollow&quot;&gt;OpenERP&lt;/a&gt; can give code away, because value is not in code but in knowledge how to use and customize it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another way for FLOSS developers to make living is to develop custom features (for a hourly fee), which is possible (I asked) for FLOSS eCommerce framework &lt;a href=&quot;http://www.satchmoproject.com/&quot; rel=&quot;nofollow&quot;&gt;Satchmo&lt;/a&gt; based on (another FLOSS project) Django, which is based on another FLOSS project - Python. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Turtles all the way down :-)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another similar strategy which for-profit companies use is &lt;strong&gt;commoditize what your competitors make&lt;/strong&gt;. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Commodity&quot; rel=&quot;nofollow&quot;&gt;Commodity&lt;/a&gt; is marketable product which is bought based mostly on price, because one item can be replaced by another (pork, coal, coffee beans, iron ore, etc). &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Back in days when hardware was expensive and software was added for free, Microsoft played  that card on IBM, and commoditized personal computers market: many different manufactures made computers which could ran MS DOS and Windows (and IBM, inventor of category of personal computers, was forced out of that market) - customers bought hardware based on price, because distinguishing factor was ability to run MS DOS. Recently, IBM is returning the favor: Operating system and basic infrastructure software is becoming a commodity, and distinguishing factor are services.&lt;/p&gt;&#xA;" OwnerUserId="883" LastEditorUserId="883" LastEditDate="2015-07-21T15:14:46.363" LastActivityDate="2015-07-21T15:14:46.363" CommentCount="0" />
  <row Id="1261" PostTypeId="1" AcceptedAnswerId="1262" CreationDate="2015-07-21T00:52:51.260" Score="1" ViewCount="45" Body="&lt;p&gt;I often hear about GPL variants, MIT, BSD and many other license options. A general Internet search reveals sites like &quot;Top 20 licenses&quot; or pages some licenses going out of fashion and others coming in.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;With so many licenses to choose from, a major stumbling block for beginners in open sourcing is deciding what license to go for.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, what are the stats on the most frequently adopted open source license options, and what are there primary differences?&lt;/p&gt;&#xA;" OwnerUserId="886" LastEditorUserId="886" LastEditDate="2015-07-22T06:32:01.980" LastActivityDate="2015-07-22T06:32:01.980" Title="What are the most common open source license options and how do they differ?" Tags="&lt;open-source-definition&gt;" AnswerCount="1" CommentCount="3" ClosedDate="2015-07-21T05:34:19.170" />
  <row Id="1262" PostTypeId="2" ParentId="1261" CreationDate="2015-07-21T02:52:48.383" Score="3" Body="&lt;p&gt;Determining the relative popularity of various licenses is actually quite difficult.  Below are two graphs.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The first is taken from &lt;a href=&quot;https://www.blackducksoftware.com/resources/data/top-20-open-source-licenses&quot; rel=&quot;nofollow&quot;&gt;BlackDuck: Top 20 Open Source Licenses&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/Sv8Ge.png&quot; alt=&quot;BlackDuck: top 20 graph&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;and list the following top 5 (making up 76 % av the total):&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;GPLv2 (24 %)&lt;/li&gt;&#xA;&lt;li&gt;MIT/Expat (20 %)&lt;/li&gt;&#xA;&lt;li&gt;Apache 2.0 (16 %)&lt;/li&gt;&#xA;&lt;li&gt;GPLv3 (10 %)&lt;/li&gt;&#xA;&lt;li&gt;modified BSD (6 %)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;The second one is taken from presentation at the 2013 Linux Foundation Collaboration Summit &lt;a href=&quot;http://lanyrd.com/2013/linux-foundation-collaboration-summit/scmwxf/&quot; rel=&quot;nofollow&quot;&gt;Licensing of Software on Github: A Quantitative Analysis&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/t0mjd.png&quot; alt=&quot;Linux Foundation Collaboration Summit graph&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;and list the following top 5 (making up 82 % av the total):&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;MIT/Expat (36 %)&lt;/li&gt;&#xA;&lt;li&gt;modified BSD (13 %)&lt;/li&gt;&#xA;&lt;li&gt;GPLv2 (13 %)&lt;/li&gt;&#xA;&lt;li&gt;GPLv3 (12 %)&lt;/li&gt;&#xA;&lt;li&gt;Apache 2.0 (8 %)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;There is a lot of interesting data in the Linux Foundation Collaboration Summit  presentation (e.g. the distribution between permissive, copyleft, weak copyleft and dual licensing, and the shift over time towards more permissive licenses).  I recommend clicking through all the slides.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;While the source and methodology of these studies differ (and only the presentation made at the Linux Foundation Collaboration Summit explains the methodology used), both list the &lt;em&gt;same&lt;/em&gt; licenses as the top five, but their relative position differ.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;While these stats are not definitive (and I hope other answers can show us more studies of this type), I think it is quite likely that these licenses are among the most used ones.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As for how &quot;they differ in their most important terms and conditions?&quot;, that would make a very long answer. However, the FSF has a very good page about &lt;a href=&quot;http://www.gnu.org/licenses/license-list.en.html&quot; rel=&quot;nofollow&quot;&gt;various licenses and comments about them&lt;/a&gt;, here are direct links to each of the top 5, with a note stating whether the license is &lt;a href=&quot;http://opensource.stackexchange.com/a/1179/606&quot;&gt;copyleft or permissive&lt;/a&gt; - as this by far is the &lt;em&gt;main difference&lt;/em&gt; between the FLOSS licenses.&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.gnu.org/licenses/license-list.en.html#Expat&quot; rel=&quot;nofollow&quot;&gt;MIT/Expat&lt;/a&gt; - permissive&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.gnu.org/licenses/license-list.en.html#ModifiedBSD&quot; rel=&quot;nofollow&quot;&gt;modified BSD&lt;/a&gt; - permissive&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.gnu.org/licenses/license-list.en.html#GPLv2&quot; rel=&quot;nofollow&quot;&gt;GPLv2&lt;/a&gt; - copyleft&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.gnu.org/licenses/license-list.en.html#GNUGPL&quot; rel=&quot;nofollow&quot;&gt;GPLv3&lt;/a&gt; - copyleft&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.gnu.org/licenses/license-list.en.html#apache2&quot; rel=&quot;nofollow&quot;&gt;Apache 2.0&lt;/a&gt; - copyleft, but allows downstream relicensing to GPLv3&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="606" LastEditorUserId="168" LastEditDate="2015-07-21T04:59:38.343" LastActivityDate="2015-07-21T04:59:38.343" CommentCount="0" />
  <row Id="1263" PostTypeId="2" ParentId="1255" CreationDate="2015-07-21T09:49:48.693" Score="5" Body="&lt;p&gt;I will answer the best I can. There are basically three distinct models I have had personal or professional experience with. I am a software developer, and thus my experience comes from that realm. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;First, when making a profit on Opensource software, some times that profit comes from including that software in a larger package. For example, one of my clients used a Open source Credit card processing Library, to handle all their credit card processing. And while that client makes money off the library, that library is just part of the larger business model. To &quot;give back&quot; that client paid to have me write code that was pushed back to the library extending it's functionality. So the Library prospered, and the client's business prospered. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Second, the sale of services. Websites for example, run on Linux Servers (again for example). The providers of the servers (Lets say Linode) don't sell Linux but they sell their VPS hosting and management/support. Their business prospers by use of FOSS, and the FOSS prospers by gaining more server market share. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Third, By selling convenience. Any time a package or setup of FOSS is hard to do, selling the convenience of having it already setup is warranted. See &lt;a href=&quot;http://docs.aws.amazon.com/AmazonDevPay/latest/DevPayDeveloperGuide/EC2PaidAMI.html&quot; rel=&quot;nofollow&quot;&gt;http://docs.aws.amazon.com/AmazonDevPay/latest/DevPayDeveloperGuide/EC2PaidAMI.html&lt;/a&gt; for a common example. Your not really selling the packages themselves but the convenience of having them setup in a specific way. By extension I have seen some sell pre-compiled versions of their software while the source code is still covered under a FOSS licence. Growl for mac used to be under such a license. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Side Note: Many times a commercial open source application is Dual Licenced.  For &quot;free&quot; you get the Open source version and a &quot;agreement&quot; that you will, in turn for using the code, &quot;help out&quot; in some way (submit bugs, write patches, tout applications etc.), or a more &quot;restricted&quot; license that you pay for but then don't have to &quot;help out&quot;. For many companies it may be cheaper to by the &quot;commercial&quot; license then to &quot;have to&quot; publish source code back to the authors or to the people using the app. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, to wrap things up, your specific answer is the third. Selling the convenience of a pre-setup package over a &quot;configure it your self&quot; package usually warrants monetary compensation. Using this method it's important to remember that &quot;Your going to pay someone&quot; rather it's your staff via training or support, the package maintainer, or the Support company (RHEL for example). Paying for the package is sometimes cheaper then the other two. Usually a company that decides to go this route offers &quot;support&quot; in addition to the sale of the pre-configured system. Support is a much more profitable sale, but you can sell just the package, but most people paying  for a package will want some kind of support. &lt;/p&gt;&#xA;" OwnerUserId="892" LastEditorUserId="197" LastEditDate="2015-07-22T03:39:29.653" LastActivityDate="2015-07-22T03:39:29.653" CommentCount="0" />
  <row Id="1264" PostTypeId="1" AcceptedAnswerId="1265" CreationDate="2015-07-21T11:57:31.020" Score="6" ViewCount="98" Body="&lt;p&gt;According to Wikipedia's &lt;a href=&quot;https://en.wikipedia.org/wiki/Copyright_formalities&quot;&gt;Copyright Formalities&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Copyright_notice&quot;&gt;Copyright notice&lt;/a&gt;, dating or even putting the author copyright notice in unnecessary.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And then explanations such as this &lt;a href=&quot;http://stackoverflow.com/a/20911485/4734474&quot;&gt;Stack Overflow Post&lt;/a&gt; make me wonder about how redundant dating is.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Except maybe to show when the work was start or published, what is the point of the date? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also how strict is GPL on including dates and date ranges? The FSF website says to use ranges but they just seem like a formality.&lt;/p&gt;&#xA;" OwnerUserId="374" LastEditorUserId="69" LastEditDate="2015-07-21T13:44:55.897" LastActivityDate="2015-07-22T14:15:41.903" Title="Are dates mandatory in GPL licences?" Tags="&lt;licensing&gt;&lt;gpl&gt;" AnswerCount="2" CommentCount="0" />
  <row Id="1265" PostTypeId="2" ParentId="1264" CreationDate="2015-07-21T13:12:45.463" Score="7" Body="&lt;p&gt;No.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you look at there licenses, you will notice that the following text appears near the end of page.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&quot;END OF TERMS AND CONDITIONS&quot;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That is the end of the license.  Nowhere &lt;em&gt;above&lt;/em&gt; that text is there a requirement to add the year to the copyright notice. However, as pointed out in &lt;em&gt;Stephen Kitt's&lt;/em&gt; answer, if you &lt;em&gt;modify&lt;/em&gt; somebody else's  program GPLv3 section 5 &lt;em&gt;requires&lt;/em&gt; you to include a prominent notices stating that you modified it, with a date.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This requirement to record the date for changes you make to somebody else's program is to make sure that downstream recipients is made aware of modifications of the chronology and history of changes made to the original source code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;By law, your copyright is valid &lt;em&gt;without&lt;/em&gt; a copyright notice (at least in Berne signatories, including the USA) - but if you leave it out (the notice, not the year), you may need to &lt;em&gt;assert&lt;/em&gt; your copyright by other means if your copyright is challenged.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Going back to the web pages with the A(GPL) licenses, notice that below the &quot;END OF TERMS AND CONDITIONS&quot;, there is a new headline:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;How to Apply These Terms to Your New Programs&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is a helpful &lt;em&gt;guideline&lt;/em&gt; - not a license requirement.  Your license, and your copyright, is valid even if you choose to not follow this guideline.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, it is a &lt;em&gt;good idea&lt;/em&gt; to have a copyright notice with the year of publication.  While not legally required, having such a notice in place may save you from proving that you've asserted your copyright by other means in the case of a dispute, and damages awarded may be reduced if there is no copyright notice in your work.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-22T14:15:41.903" LastActivityDate="2015-07-22T14:15:41.903" CommentCount="5" />
  <row Id="1266" PostTypeId="2" ParentId="1255" CreationDate="2015-07-21T16:41:04.760" Score="6" Body="&lt;p&gt;Another way to earn money for developing FLOSS is by getting paid by companies that stand to benefit from it. One example is IBM. IBM is in the server business and it is in their interest to have a free, reliable and powerful OS to run on their systems. Therefore it made sense for IBM to pay people to develop a fork of Linux for their own servers as well as contributing to the main kernel development itself.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can probably imagine an open source version of CAD software being developed by some large engineering firm in a similar way. Not because of any altruistic reasons but because they stand to benefit from a powerful piece of CAD software without expensive licenses attached to it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another way is to look at open source software like scientific research. Scientists are compensated by government and non-profit organizations to support their work. A good example of this is the Mozilla Foundation which funds development of the Firefox web browser. Scientific discoveries are considered a public good which benefits everyone which is why we fund them. An efficient general purpose web browser can be thought the same way.&lt;/p&gt;&#xA;" OwnerUserId="896" LastEditorUserId="896" LastEditDate="2015-07-24T08:29:08.553" LastActivityDate="2015-07-24T08:29:08.553" CommentCount="0" />
  <row Id="1267" PostTypeId="1" CreationDate="2015-07-21T21:12:06.330" Score="5" ViewCount="116" Body="&lt;p&gt;The word &quot;free&quot; is often considered to be unclear, and ambiguous. As such, the word is often used in conjunction with the word &quot;libre&quot;, as seen in &lt;a href=&quot;http://opensource.stackexchange.com/a/264/69&quot;&gt;this answer&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the spirit of clarity, the word &quot;libre&quot; is often used to clear the alternate meaning of the word &quot;free,&quot; so that the implication will be that of free as in speech, not free as in food. Free Software is often referred to as Free/Libre software, and the common acronym FLOSS, stands for Free/Libre and Open Sorce Software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Therefore, if the word free is consistently added as a pair to the word &quot;free&quot;, why doesn't the Free Software Foundation instead simply use the word libre? I can understand if there are considerable obstacles to make a complete, efficient transition to the clearer word libre, but I'm curious to see if the FSF has a stance on this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Just to be clear, I am not asking why the FSF doesn't make the switch, but rather what their stance and efforts are, or have been.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Update: To counteract the fact that the FSF uses &quot;free&quot; because of it's implied meaning, The FSFLA (or Free Software Foundation Latin America) has named their linux kernel to be this: &lt;em&gt;linux-libre&lt;/em&gt;. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;More on the wikipedia article: &lt;a href=&quot;https://en.wikipedia.org/wiki/Linux-libre&quot; rel=&quot;nofollow&quot;&gt;Linux-libre&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-07-25T14:16:41.930" LastActivityDate="2015-07-25T14:16:41.930" Title="Why does the FSF continue to use the word &quot;free&quot; if it's ambiguous?" Tags="&lt;terminology&gt;&lt;fsf&gt;" AnswerCount="1" CommentCount="7" />
  <row Id="1268" PostTypeId="5" CreationDate="2015-07-22T00:20:25.647" Score="0" Body="&lt;p&gt;An Application Programming Interface (API) is a resource available to all developers, normally complete with various simple methods, tools and resources to assist with the development of any software.&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="29" LastEditDate="2015-07-22T14:40:17.360" LastActivityDate="2015-07-22T14:40:17.360" CommentCount="0" />
  <row Id="1269" PostTypeId="4" CreationDate="2015-07-22T00:20:25.647" Score="0" Body="Use the tag if an open project or license concerns the specific use or interaction with an Application Programming Interface (API)." OwnerUserId="69" LastEditorUserId="29" LastEditDate="2015-07-22T14:40:20.280" LastActivityDate="2015-07-22T14:40:20.280" CommentCount="0" />
  <row Id="1270" PostTypeId="5" CreationDate="2015-07-22T00:23:09.303" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-22T00:23:09.303" LastActivityDate="2015-07-22T00:23:09.303" CommentCount="0" />
  <row Id="1271" PostTypeId="4" CreationDate="2015-07-22T00:23:09.303" Score="0" Body="For questions about the process of publishing free/open projects, involving decisions such as whether to provide binary builds or which packaging system to use" OwnerUserId="69" LastEditorUserId="190" LastEditDate="2015-07-23T01:04:13.637" LastActivityDate="2015-07-23T01:04:13.637" CommentCount="0" />
  <row Id="1272" PostTypeId="2" ParentId="1267" CreationDate="2015-07-22T02:28:07.940" Score="6" Body="&lt;p&gt;&quot;Libre&quot; is a French word (not English). So, people outside France (especially from various countries in the world) may not recognize it at all.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Quoted from &lt;a href=&quot;http://www.gnu.org/philosophy/open-source-misses-the-point.html&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Unfortunately, all the alternatives in English have problems of their own. We've looked at many that people have suggested, but none is so clearly “right” that switching to it would be a good idea. (For instance, in some contexts the French and Spanish word “libre” works well, but people in India do not recognize it at all.) &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;FSF recommends considering free as in &lt;strong&gt;freedom&lt;/strong&gt; (think: &quot;free speech&quot;) on its definition page. So, (FSF expect/believes that) anyone understands  exactly what &quot;free software&quot; is once they read this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Quoted from &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.html&quot; rel=&quot;nofollow&quot;&gt;Definition page&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;We prefer the term “free software” because, once you have heard that it refers to freedom rather than price, it calls to mind freedom. &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;FSF also provides translation for &quot;free software&quot; in other languages:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Quoted from &lt;a href=&quot;http://www.gnu.org/philosophy/categories.html&quot; rel=&quot;nofollow&quot;&gt;categories&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Many languages have two separate words for “free” as in freedom and “free” as in zero price. For example, French has “libre” and “gratuit”. Not so English; there is a word “gratis” that refers unambiguously to price, but no common adjective that refers unambiguously to freedom. So if you are speaking another language, we suggest you translate “free” into your language to make it clearer. See our list of &lt;a href=&quot;http://www.gnu.org/philosophy/fs-translations.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;translations of the term “free software”&lt;/strong&gt;&lt;/a&gt; into various other languages.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Finally quoting from header @ &lt;a href=&quot;http://www.fsf.org/about/what-is-free-software&quot; rel=&quot;nofollow&quot;&gt;FSF&gt;about&gt;What is free software?&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Free software is software that gives you the user the freedom to share, study and modify it. &lt;strong&gt;We call this free software because the user is free.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I am unable to find &lt;strong&gt;&lt;em&gt;absolute/exact&lt;/em&gt;&lt;/strong&gt; information/statement by FSF. So, as you want to know why FSF continues the word &quot;free&quot; and why not simply using word &quot;libre&quot; instead, &lt;em&gt;I suggest to contact/discuss/&lt;strong&gt;ask&lt;/strong&gt; to FSF rather than just asking here.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Opinion: I think FSF uses &quot;Libre&quot; software for explanatory only. As goal is &lt;strong&gt;Freedom&lt;/strong&gt;, recommends &lt;strong&gt;free&lt;/strong&gt; software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;Also free relevant to freedom and libre to liberty, &lt;a href=&quot;http://english.stackexchange.com/q/15367&quot;&gt;freedom vs Liberty&lt;/a&gt; may help to understand/different/&lt;strong&gt;focus&lt;/strong&gt;.&lt;/sup&gt;&lt;/p&gt;&#xA;" OwnerUserId="296" LastEditorUserId="296" LastEditDate="2015-07-23T17:06:45.390" LastActivityDate="2015-07-23T17:06:45.390" CommentCount="3" />
  <row Id="1273" PostTypeId="1" AcceptedAnswerId="1278" CreationDate="2015-07-22T10:16:42.433" Score="4" ViewCount="124" Body="&lt;p&gt;This question is partially inspired by &lt;a href=&quot;http://opensource.stackexchange.com/q/1255/168&quot;&gt;How is selling FLOSS packages for monetary compensation a viable strategy?&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;After reading that question and some of its answers, I was left wondering if there are licenses which allow modification and redistribution of the project on the condition that one does not charge less money for the distribution than you paid yourself. This would circumvent the problems addressed in the above question.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Are there any licenses that allow this and if so for what reasons would these licenses (not) be considered Open Source/Free?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;sub&gt;I strongly suspect that these licenses would not be considered Free or Open, but one never knows.&lt;/sub&gt;&lt;/p&gt;&#xA;" OwnerUserId="168" LastActivityDate="2015-07-28T07:14:49.080" Title="Can I forbid distributing my open source project for less money than I do?" Tags="&lt;licensing&gt;&lt;distribution&gt;&lt;commercial&gt;" AnswerCount="2" CommentCount="4" />
  <row Id="1274" PostTypeId="1" AcceptedAnswerId="1275" CreationDate="2015-07-22T12:16:20.197" Score="8" ViewCount="3192" Body="&lt;p&gt;Suppose I'm working on a FLOSS project and someone forked it and the forked project seems to be moving faster than mine and gains more popularity than my original project (possibly because the people behind the fork have a bigger team). &lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'm excited people are showing interest in my project, but feel discouraged because, as the original creator of the project, I play no part in the development of the most popular fork of the project now, since no decisions regarding changes made to the fork are run by me. The maintainers of the fork show little to no interest in cooperating/communicating with me.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Should I just abandon my fork and join theirs, if I want to stay relevant to the development of this project, or is there another option?&lt;/p&gt;&#xA;" OwnerUserId="168" LastActivityDate="2015-07-22T23:00:41.663" Title="What can I do when a fork of my project is out-competing mine?" Tags="&lt;forking&gt;&lt;human-resources&gt;" AnswerCount="5" CommentCount="8" FavoriteCount="1" />
  <row Id="1275" PostTypeId="2" ParentId="1274" CreationDate="2015-07-22T12:40:37.653" Score="14" Body="&lt;p&gt;Forking is not only a possibility of open source development, it's an express intention. If their fork is more popular than yours, this may be because they do something technically better than you, in which case you can merge back their patches if they operate under a compatible license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If they are doing something socially better than you are, take notes and learn.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If it's just a differing direction they're taking, the fork created more choice, and yours proved the less popular one.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Personally, I never experienced a fork that didn't try to solve the problem internally first, but just unilaterally forked without much communication. Usually, a fork is made either with the intention to merge back, or as a last resort when views turn out irreconcilable.&lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-07-22T12:40:37.653" CommentCount="0" />
  <row Id="1276" PostTypeId="2" ParentId="1264" CreationDate="2015-07-22T13:01:02.377" Score="2" Body="&lt;p&gt;It depends...&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You're right in that adding a copyright statement doesn't add anything to the default protection you get under copyright law. But it is useful for documentation purposes; see &lt;a href=&quot;http://opensource.stackexchange.com/questions/292/should-i-include-a-copyright-line-in-every-file/300#300&quot;&gt;Should I include a copyright line in every file?&lt;/a&gt; for more on that.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As far as licenses are concerned, some do require that dates be mentioned in some cases. For example, in version 3 of the GPL, section 5 (regarding modified source versions) says&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;a) The work must carry prominent notices stating that you modified&#xA;      it, and giving a relevant date.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This doesn't require that the information be present in a copyright statement, but adding a copyright statement is the easiest way of doing so.&lt;/p&gt;&#xA;" OwnerUserId="118" LastActivityDate="2015-07-22T13:01:02.377" CommentCount="2" />
  <row Id="1277" PostTypeId="2" ParentId="647" CreationDate="2015-07-22T14:07:58.153" Score="2" Body="&lt;p&gt;Other answers have good points but in my mind the biggest issue by far is Patents.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If a company holds patents and then issues open source code that is related to the patents, it can be argued that they are giving permission for anyone to use their patented technology. Some licenses (like GPL) make this very clear in their terms, while other licenses (like MIT) don't mention patents at all.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, even though MIT/etc don't explicitly cover patents it does cover them indirectly - the license gives anyone permission to &quot;use&quot; the technology and that's enough to give an implied license for all patents.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Where it gets especially nasty is when the company writing the source code only has a license to the patent, instead of being the one who owns the patent. Often technology is covered by a patent &quot;pool&quot; involving a large number of independent corporations. For example this is widespread among video compression and cell phone radio technology. In these cases, a company (such as Qualcomm) will have permission to use and sell technology in the &quot;pool&quot; but they do not have permission to grant the open source community a license to the patents.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is why video compression and cellphone hardware drivers are typically closed source components in an otherwise fully open source technology stack.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Patent trolls are also a huge problem for open source development. For example Apple's FaceTime protocol, which they originally promised to open source but it never happened, likely because of patents more than anything else.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;About a month after they promised to make FaceTime an open standard, Apple was sued by a patent troll name VirnetX, and spent ~3 years fighting in court. Eventually the court rued Facetime did infringe on a couple of the many patents VirnetX claimed Apple had violated. Apple always publicly maintained FaceTime doesn't violate any patents but they had to accept the court's ruling in the end.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;While defending themselves in court Apple was in no position to make FaceTime open (that would increase the damages from loosing a lawsuit) and after loosing the case they would have had to sign some kind of agreement to attain a license to VirnetX's patent portfolio which will have included language forbidding Apple from giving anybody else permission to use the patents covered by VirneX's 200 or so patents.&lt;/p&gt;&#xA;" OwnerUserId="436" LastActivityDate="2015-07-22T14:07:58.153" CommentCount="0" />
  <row Id="1278" PostTypeId="2" ParentId="1273" CreationDate="2015-07-22T14:53:26.670" Score="3" Body="&lt;p&gt;Anybody can make pretty much any license they want so yes you could ask a lawyer to write a license like you're describing.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But this would not fit the definition of an open source license. The whole point of open source is to let other people take your work and build on it, and that includes having a different pricing structure to your own.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Sometimes they might take your entire project and take it in a totally different direction, other times they might just fix a couple bugs that you haven't fixed and make it available on GitHub, other times they might include your project as a child work in a larger project, or perhaps they might just grab 5 lines of code you wrote and include it in their own completely unrelated project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Any restrictions on pricing makes all of those situations nearly impossible. The only &quot;viable&quot; option under your license would be to take your project and sell it under a different name, but that's extremely rare. Why would anybody do that when it's so much easier to just contribute to the project you're running instead?&lt;/p&gt;&#xA;" OwnerUserId="436" LastActivityDate="2015-07-22T14:53:26.670" CommentCount="6" />
  <row Id="1279" PostTypeId="2" ParentId="137" CreationDate="2015-07-22T15:55:00.087" Score="0" Body="&lt;p&gt;Gaurav's answer above is incorrect.  Viral licenses are called that for a reason: they are licenses that, like a virus, &lt;em&gt;spread beyond the source of your project&lt;/em&gt;.  It means that if my program has 99 features that I created myself, and 1 that requires a GPL library, the GPL &quot;infects&quot; my entire codebase and forces me to publish the entire thing under the GPL or a compatible license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is not what the question is asking for, and to put it bluntly, this is not suitable for the majority of open-source project development.  The GPL is not &lt;em&gt;a license&lt;/em&gt; so much as it is &lt;em&gt;a political statement,&lt;/em&gt; declaring to the world that you believe non-&quot;free&quot; (as per the FSF definition) software to be inherently evil and something that must be fought against and eradicated.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If that's what you want, go ahead and use the GPL.  But if you're looking for an open-source license that will ensure that &lt;em&gt;modifications to your code&lt;/em&gt; must remain open and be published under the same license, (without limiting what the people who use your code in a wider project can do with it,) the license you're looking for is the &lt;a href=&quot;https://www.mozilla.org/MPL/2.0/&quot; rel=&quot;nofollow&quot;&gt;Mozilla Public License&lt;/a&gt;, which requires exactly that.&lt;/p&gt;&#xA;" OwnerUserId="503" LastActivityDate="2015-07-22T15:55:00.087" CommentCount="7" />
  <row Id="1280" PostTypeId="2" ParentId="927" CreationDate="2015-07-22T16:56:05.650" Score="0" Body="&lt;p&gt;I am not sure that legally a given line is copyrightable. But &lt;strong&gt;I am not a lawyer&lt;/strong&gt; (and details depend upon countries, law systems, opinions, etc..). So &lt;em&gt;ask your lawyer&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I believe that making a specific line proprietary is probably meaningless, and if it was possible, it would irritate many free software enthusiasts (including me).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If coding in a language using a preprocessor (in particular C or C++ preprocessor), you might have a trick like&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;/// in some public header&#xA;#if HAVE_MY_PROPRIETARY_TRICK&#xA;extern void do_my_proprietary_stuff(void*);&#xA;#endif&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;and inside your code:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;/// in your free software internal code&#xA;void some_naughty_routine(struct data_st*d) {&#xA;#if HAVE_MY_PROPRIETARY_TRICK&#xA;   /// calling some proprietary code, not for ordinary free software usage&#xA;   do_my_proprietary_stuff(d);&#xA;#endif /*HAVE_MY_PROPRIETARY_TRICK*/&#xA;   //etc...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;And you might make your free software able to &lt;strong&gt;use &lt;a href=&quot;https://en.wikipedia.org/wiki/Plug-in_%28computing%29&quot; rel=&quot;nofollow&quot;&gt;plugins&lt;/a&gt;&lt;/strong&gt;, and choose a license that permits you to use (and/or sell) some proprietary plugin. At least for courtesy, be sure to make your software usable without plugins, or/else provide a free software plugin making your software useful.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So &lt;strong&gt;I don't recommend doing that&lt;/strong&gt;  (mixing free software and proprietary one).&lt;/p&gt;&#xA;" OwnerUserId="910" LastEditorUserId="29" LastEditDate="2015-07-22T17:20:19.467" LastActivityDate="2015-07-22T17:20:19.467" CommentCount="1" />
  <row Id="1281" PostTypeId="2" ParentId="1274" CreationDate="2015-07-22T18:29:39.427" Score="4" Body="&lt;p&gt;If they're out-competing you, they've got something you haven't. This may be:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;more updates&lt;/li&gt;&#xA;&lt;li&gt;more in-demand features&lt;/li&gt;&#xA;&lt;li&gt;more contributors&lt;/li&gt;&#xA;&lt;li&gt;better publicity&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Whatever it is, try to find out what it is. If they're doing more publicity stuff than you, then increase what you do. Run things like community ads on Stack Exchange - they're free, and they get eyeballs on your project. Try to attract more contributors, or try to update more frequently.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Often, engaging with your community is fairly effective: if you're seen to be engaged and proactive about the development of your product, people will recommend you to others, who will also recommend you, and you might get some new contributors and users that way.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you want to be a little ethically unstable (not that I recommend this), look at your license. Is it GPL? If so, theirs must also be GPL, meaning you can copy things they've done with some attribution. This may encourage people to use your version, because you now have the features they want too, but beware that if people find out you've been copying features and trying to hide the fact - although it's &lt;em&gt;legally&lt;/em&gt; sound - it may not give you a very &lt;em&gt;socially&lt;/em&gt; sound position. Of course, if your licenses are compatible, you can just copy the features and be open about it :)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Ultimately though, there may not be a huge amount you can do. However, you can console yourself with the fact that you started it, and that your copyright notices will forever have to live on in the code of their fork.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-07-22T21:35:29.120" LastActivityDate="2015-07-22T21:35:29.120" CommentCount="1" />
  <row Id="1282" PostTypeId="2" ParentId="1274" CreationDate="2015-07-22T18:51:23.647" Score="4" Body="&lt;p&gt;The main questions to resolve: Why did they fork?  What's at stake for them?  Similarly, what's at stake for you?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You say they aren't receptive to your changes, but did they ever submit patches/pull requests to yours?  Without communication, you cannot effectively collaborate, even if you share coding and technical styles.  So if they are just determined to do it their way without you, then the best you can hope for is to both develop awesome features and frequently borrow changes from each other.  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you are adding/maintaining features they want and they are adding/maintaining features you want, you don't necessarily have to be working on the &lt;strong&gt;same&lt;/strong&gt; project, but your work should &lt;strong&gt;relate&lt;/strong&gt; to each other's.  This would be aided by increasing the modularity, configurability and flexibility of your architecture, i.e. so you might have projects MyProject and TheirProject share a Project-Common library/gem/module/whatever.  (Note: such refactoring is non-trivial, increases release-packaging time/cost and still requires cooperation. But it is a good way to minimize the divergence in forks.)  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;I fundamentally disagree that pulling features from their fork would be socially questionable.  License permitting, it would be &lt;strong&gt;by far&lt;/strong&gt; preferred to keep the projects in sync instead of building a competing reimplementation.  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Do you have a user community?  Do they?  Existing adopters have an interest in continuity.  New users just want the better package.  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;To me it sounds like your main concerns are with control and to a lesser extent, dilution of project prominence.  I would say don't sweat those too much.  You have a repo you control directly and the fork doesn't change that.  Even if their project becomes rapidly more popular and hugely divergent, you can always tout yours as &quot;the project TheirProject started from&quot;.  &lt;/p&gt;&#xA;" OwnerUserId="914" LastActivityDate="2015-07-22T18:51:23.647" CommentCount="0" />
  <row Id="1283" PostTypeId="1" CreationDate="2015-07-22T19:19:49.373" Score="1" ViewCount="51" Body="&lt;p&gt;Suppose I have a software program I publish under a non-free license that does not give permission to create derivatives, and I own the copyright. Someone decides that despite the copyright they are going to make a derivative of it anyway. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&lt;p&gt;If this happens: Do I own the derivative that the person made? Could I take the derivative and publish it under an open source license?&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="98" LastEditDate="2015-07-22T21:54:36.393" LastActivityDate="2015-07-22T21:54:36.393" Title="Do I own derivatives of my copy written work? Can I make these open source?" Tags="&lt;proprietary-code&gt;&lt;derivative-works&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="1284" PostTypeId="1" CreationDate="2015-07-22T19:24:52.420" Score="3" ViewCount="25" Body="&lt;p&gt;Suppose I have an open source project. The developers I have are good, but I think an outside look (new coders) may help the project. We are currently running out of ideas, and are at a loss of what to do next.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Would inviting new developers help give new ideas to the project?&lt;/p&gt;&#xA;" OwnerUserId="271" LastActivityDate="2015-07-22T20:00:21.353" Title="Could investing in marketing improve the development of my project?" Tags="&lt;development&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="1285" PostTypeId="1" CreationDate="2015-07-22T19:27:19.473" Score="1" ViewCount="359" Body="&lt;p&gt;Suppose I have an open source project. I have 3 or so friends that have been helping with the development. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Does having my project open source mean that &lt;strong&gt;anyone&lt;/strong&gt; can contribute to the project (including people I don't want)? Or am I able to select who I want working on the project?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;By contribute I mean make changes to the source code.&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="168" LastEditDate="2015-07-23T06:20:10.750" LastActivityDate="2015-08-05T13:33:12.187" Title="Can anyone contribute to an open source project?" Tags="&lt;development&gt;&lt;contributor&gt;" AnswerCount="4" CommentCount="4" FavoriteCount="2" ClosedDate="2015-08-05T15:34:46.380" />
  <row Id="1286" PostTypeId="2" ParentId="1283" CreationDate="2015-07-22T19:41:49.187" Score="4" Body="&lt;p&gt;No, you don't own the derivative that somebody else make of your work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Creating a derivative requires &lt;em&gt;permission&lt;/em&gt; from the creator of the original work.  One of the purposes if free culture licenses is to grant anybody this permission up front.  If your work is &lt;em&gt;not&lt;/em&gt; free (for instance, it is &quot;All Rights Reserved&quot;), then nobody can legally create a derivative of your work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What you &lt;em&gt;can&lt;/em&gt; do if somebody goes ahead and make a derivative anyway, is to sue for copyright infringement.  If you win the case, you are eligible for monetary compensation, and the illegal derivative must be removed from the market - but the copyright of the adaptation is &lt;em&gt;still&lt;/em&gt; owned by the infringer and cannot be transferred to you by any legal decision.&lt;/p&gt;&#xA;" OwnerUserId="606" LastActivityDate="2015-07-22T19:41:49.187" CommentCount="5" />
  <row Id="1287" PostTypeId="2" ParentId="1284" CreationDate="2015-07-22T20:00:21.353" Score="5" Body="&lt;p&gt;All the developers in the world can only have so many ideas, and they'll only do as you're told. To get ideas for new things to do, you don't need developers, you need... a &lt;strong&gt;userbase&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Provide somewhere, like a forum on your product's website, where your product's community can suggest new features, report bugs, and express opinions about the project. These are the people who'll give you ideas, because these are the people who use the thing - listen to them, because they've got experience. They'll tell you what bugs bug them the most (pun all too much intended); they'll tell you what your software needs, they'll tell you how to improve what it already has.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That should give your developers enough to be getting on with. If they give you &lt;em&gt;lots&lt;/em&gt; of ideas, &lt;em&gt;then&lt;/em&gt; you might want some more devs to keep up with them.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-07-22T20:00:21.353" CommentCount="0" />
  <row Id="1288" PostTypeId="1" AcceptedAnswerId="1289" CreationDate="2015-07-22T20:01:18.800" Score="5" ViewCount="55" Body="&lt;p&gt;I believe that the Open Source Initiative (OSI) has something called the Open Standard. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;What is the Open Standard, and what is its purpose?&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-08-02T21:07:52.493" LastActivityDate="2015-08-02T21:07:52.493" Title="What is the OSI's Open Standard?" Tags="&lt;osi&gt;&lt;standards&gt;&lt;osr&gt;" AnswerCount="1" CommentCount="4" />
  <row Id="1289" PostTypeId="2" ParentId="1288" CreationDate="2015-07-22T20:01:18.800" Score="6" Body="&lt;p&gt;I would like to first make clear that the Open Source Initiative (OSI) doesn't actually &lt;em&gt;define a standard&lt;/em&gt;. Instead, they &lt;a href=&quot;http://opensource.org/osr-intro&quot;&gt;say&lt;/a&gt; the following:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;There are many definitions of &quot;Open Standard&quot;. We don't try to define it ourselves, but we know that if you can't implement an Open Standard under an Open Source License, it's not open enough for us.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Basically, they've created something even better. That is, &lt;strong&gt;&lt;em&gt;The Open Standard Requirement for Software&lt;/em&gt;&lt;/strong&gt;. &lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;h2&gt;So then, what is it?&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Instead of creating a &quot;One Size Fits All&quot; standard, with a million and one clauses to effectively apply to everything, the Open Source Initiative needed to think of something simple, clean and innovative. Therefore, they made a requirement for standards. &lt;strong&gt;&lt;em&gt;In essence, it’s a standard for open standards.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are 5 points it must fulfill, contained within a single requirement: that an Open Standard may not prohibit any implementation that follows its rules. In order to comply with the Open Standards Requirement, the &quot;Open Standard&quot; must meet a set of 5 criteria, otherwise it will discriminate against Open Source Developers.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;1. No Intentional Secrets&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'm just going to quote here…&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The standard MUST NOT withhold any detail necessary for interoperable implementation. As flaws are inevitable, the standard MUST define a process for fixing flaws identified during implementation and interoperability testing and to incorporate said changes into a revised version or superseding version of the standard to be released under terms that do not violate the OSR. &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;In other words, an open standard can't keep anything from you. Everything must be stated clearly, and they can't sneak this little clause that will allow others to make 100 dollars on every dollar you make. Also, since there will always likely be things that need fixing, those little things to clarify, there must be a defined procedure in order to fix those flaws, and correct them to a newer version that will still not violate the criteria listed here.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;2. Availability&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is pretty clear. Make sure that your standard is available, and make sure that people can access it without any issues. I won't put the &lt;em&gt;Zizouz212 version -1 public license&lt;/em&gt; on my imaginary, private hosting service. It should be out and about with the public - that is, they should be able to find it, and get it. There’s a couple of other things:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Be available under royalty-free terms&lt;/li&gt;&#xA;&lt;li&gt;Have a non-discriminatory cost, if any at all.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;3. Patents&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If there are any patents that are essential to the implementation, there are two things that it must follow: &lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The patents must be licensed under royalty-free terms for unrestricted use&lt;/li&gt;&#xA;&lt;li&gt;The patents must have a promise of non-assertion when practiced by Open Source Software. &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;4. No Agreements&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Essentially, I should be able to take it and use it. I shouldn't have to agree to any terms of use, any license clauses or anything like that. I'll quote again:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;There MUST NOT be any requirement for execution of a license agreement, NDA, grant, click-through, or any other form of paperwork to deploy conforming implementations of the standard. &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;5. No Incompatible Open Standard Requirement Dependencies&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For any implementation of the standard, the implementation should not have to rely on anything that doesn't conform to these requirements. In essence, everything that the standard needs must conform to whatever is in these requirements. Otherwise, it won't be &quot;open&quot; according to this.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;h2&gt;So then what the heck is the point of this?&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;I’m really going to quote on this now:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The purpose of an open standard is to increase the market for a technology by enabling potential consumers or suppliers of that technology to invest in it without having to either pay monopoly rent or fear litigation on trade secret, copyright, patent, or trademark causes of action. No standard can properly be described as &quot;open&quot; except to the extent it achieves these goals.&#xA;  The industry has learned by experience that the only software-related standards to fully achieve these goals are those which not only permit but encourage open-source implementations. Open-source implementations are a quality and honesty check for any open standard that might be implemented in software; whether an application programming interface, a hardware interface, a file format, a communication protocol, a specification of user interactions, or any other form of data interchange and program control.&#xA;  To help industry participants (suppliers, consumers, and regulators) identify and specify standards that permit open source implementations, the OSI has defined a minimal Open Standards Requirement (OSR). The OSI has also created a set of Criteria that can be used to judge whether a standard fully complies with that Requirement.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;To add on to that, the Open Source Initiative felt the need to help create a guideline. With many legal authorities adopting &quot;open standards&quot; of their own into their respective laws. They viewed that the lack of guidelines made the term &quot;open standard&quot; more aspirational, rather than a practical and defining term. As a result, the rationale for their requirement was to rectify these problems.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;h2&gt;How do I know if an Open Standard is compliant with this?&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;The OSI defines two levels of compliance, in an effort to assist the development of standards that conform to the requirement. This is similar to the way that the OSI approves licenses to be Open Source.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;OSI Compatible&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is a mark that is provided to creators that have &lt;strong&gt;&lt;em&gt;self-certified&lt;/em&gt;&lt;/strong&gt; their license is conformant to the requirement listed above. If the OSI, at anytime, deems the standard to be incompatible, the creator must modify the standard for it to be compatible, or remove the mark altogether.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;OSI Conformant&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is a mark that shows the OSI has deemed the standard to be conformant to the requirement listed above.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Sources/References/Good Reads:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://opensource.org/osr&quot;&gt;Open Standards Requirement for Software&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://opensource.org/osr-compliance&quot;&gt;Open Standards Compliance&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://opensource.org/osr-rationale&quot;&gt;Open Standards Requirement for Software - Rationale&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://opensource.org/osr-faq&quot;&gt;Open Standard Requirement for Software - FAQ&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Open_standard&quot;&gt;Wikipedia article on Open Standards&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://open-stand.org/about-us/principles/&quot;&gt;Open Stand Principles (They are &quot;Global Advocates for Open Standards&quot;)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="69" LastEditorUserId="29" LastEditDate="2015-07-22T20:11:37.757" LastActivityDate="2015-07-22T20:11:37.757" CommentCount="0" />
  <row Id="1290" PostTypeId="2" ParentId="1285" CreationDate="2015-07-22T20:04:32.973" Score="7" Body="&lt;p&gt;An open source license that satisfies the OSI definition of &quot;Open Source&quot; will allow &lt;em&gt;anyone&lt;/em&gt; to fork a project (that is, creating their own version of it). This includes people you may not want to have anything to do with - for instance a group of people you politically disagree with.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can &lt;em&gt;refuse&lt;/em&gt; to incorporate any pull requests or patches submitted by such people into &lt;em&gt;your&lt;/em&gt; code base (the one you and your three friends distribute) for &lt;em&gt;any&lt;/em&gt; reason.  (Bad code quality of probably being the most &lt;em&gt;common&lt;/em&gt; ground for rejection.) &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://i.stack.imgur.com/drbIR.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;http://i.stack.imgur.com/drbIR.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;(Source: &lt;a href=&quot;https://xkcd.com/1513/&quot; rel=&quot;nofollow&quot;&gt;xkcd&lt;/a&gt;).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But you can not stop them from creating a derivative by changing the source code, and then go on and distribute &lt;em&gt;their version&lt;/em&gt; to the general public.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, if you're are good maintainer of your project (and that includes accepting &lt;em&gt;sensible&lt;/em&gt; patches and pull requests in a &lt;em&gt;timely&lt;/em&gt; fashion), a fork has small chances of attracting a following - but you cannot prevent them from  happening.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;hr&gt;&#xA;In a comment, &lt;em&gt;ArtOfCode&lt;/em&gt; says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Not that political disagreements are a good reason to refuse pull requests, &lt;em&gt;of course...&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;That depends: Let's say I create an open source educational simulation software that allows K-12 pupils to run through simulations of historical events, such as WWII. Let's also assume a group of &lt;a href=&quot;https://en.wikipedia.org/wiki/Holocaust_denial&quot; rel=&quot;nofollow&quot;&gt;holocaust deniers&lt;/a&gt; modifies the WWII part of this simulation to show &lt;em&gt;their alternate version&lt;/em&gt; of WWII and Nazi-Germany's treatment of jews - and submits it as a pull-request. If I was the author of such a simulation program, I am pretty darn sure I would reject it, simply because I disagree (to put it mildly) with the politics of holocaust deniers.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, If I released this (hypothetical) software as Open Source or Free Software, I could &lt;em&gt;not&lt;/em&gt; stop this group of holocaust deniers from distributing their own fork of it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;PS: According to &lt;a href=&quot;https://en.wikipedia.org/wiki/Godwin%27s_law&quot; rel=&quot;nofollow&quot;&gt;Godwin's law&lt;/a&gt;, this question can now be &lt;em&gt;closed&lt;/em&gt; &lt;code&gt;:-)&lt;/code&gt;.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="1138" LastEditDate="2015-08-05T03:24:22.760" LastActivityDate="2015-08-05T03:24:22.760" CommentCount="4" />
  <row Id="1291" PostTypeId="2" ParentId="1285" CreationDate="2015-07-22T20:38:25.177" Score="7" Body="&lt;p&gt;Every open source project has a policy to restrict who can contribute.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is mandatory for a project to succeed in the modern era, otherwise random &quot;contributors&quot; would would be injecting malware and spam into every open source project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In general, the founder of the project will only allow contributions from people they trust. For larger projects they will delegate this work out to other people.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also many projects have more arbitrary restrictions – WebKit famously will do performance tests on &lt;em&gt;every&lt;/em&gt; change and if the performance is slower by even a single microsecond, the change is rejected and the developer must either refactor their code to be faster, or find something else to refactor to improve performance by at least as much as their change harmed it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some projects try to avoid trusting &quot;people&quot; and instead focusing on wether or not they trust the code, considering each contribution on it's own merits. But there is still a question of who do you trust to accept/deny a contribution? And will you reject a contribution because it uses tabs instead of spaces? It's up to you.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Obscure conditions may lead to your project being forked by the community and a new project which you have zero control over becoming more popular. &#xA;Or simply being slow to accept contributions can have the same result.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example: the only fork I ever made to a project was after somebody didn't reply to my emails asking to get involved - my fork now has dozens of contributors and ~70,000 users. The original project is dead, the source forge page just links to our website.&lt;/p&gt;&#xA;" OwnerUserId="436" LastEditorUserId="436" LastEditDate="2015-07-22T20:50:18.470" LastActivityDate="2015-07-22T20:50:18.470" CommentCount="0" />
  <row Id="1292" PostTypeId="5" CreationDate="2015-07-22T21:13:36.240" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-22T21:13:36.240" LastActivityDate="2015-07-22T21:13:36.240" CommentCount="0" />
  <row Id="1293" PostTypeId="4" CreationDate="2015-07-22T21:13:36.240" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-22T21:13:36.240" LastActivityDate="2015-07-22T21:13:36.240" CommentCount="0" />
  <row Id="1294" PostTypeId="2" ParentId="1285" CreationDate="2015-07-22T22:17:01.447" Score="-3" Body="&lt;p&gt;&lt;a href=&quot;http://opensource.org/osd&quot; rel=&quot;nofollow&quot;&gt;http://opensource.org/osd&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.unterstein.net/su/docs/CathBaz.pdf&quot; rel=&quot;nofollow&quot;&gt;http://www.unterstein.net/su/docs/CathBaz.pdf&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Basically:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;You need to submit patches for functionality the owner/mantainer wants or is willing to approve.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Once you have submitted enough patches, eventually one of the patches will not be accepted.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Then ask the owner/mantainer if he will accept that you fork the project.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Rename the project, to make it clear it is not the same project.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="926" LastEditorUserId="606" LastEditDate="2015-07-22T22:17:43.153" LastActivityDate="2015-07-22T22:17:43.153" CommentCount="1" />
  <row Id="1295" PostTypeId="2" ParentId="1274" CreationDate="2015-07-22T22:18:42.347" Score="3" Body="&lt;p&gt;Your project's come to life! Other people are very interested in working on it. The end result will benefit mankind, or at least the portion that needs whatever your project does. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The alternative would be working hard on a project, and nobody cares. At least this way, your project will live, past the point you lose interest in it, or are unable to contribute. As the originator you have useful advice and guidance to give to contributors. Though of course it's their work they're doing, so ultimately they choose what they do. Hopefully an informal consensus will organise itself, and it'll go along well.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That's what happens with open source, it's the whole idea. That's WHY open source becomes popular! You've created a baby, and now it's making friends and growing to become a part of the world. It won't always act as you want it to, but you're it's father and always will be. Wish it luck, and congratulate yourself on a job well done. This is how open-source is supposed to end up. That, or being forgotten. You did well!&lt;/p&gt;&#xA;" OwnerUserId="927" LastActivityDate="2015-07-22T22:18:42.347" CommentCount="0" />
  <row Id="1296" PostTypeId="1" AcceptedAnswerId="1310" CreationDate="2015-07-22T22:36:43.087" Score="5" ViewCount="173" Body="&lt;p&gt;I have a project that I want to release as open source. However, the project interacts with some external web-based API that requires a key (issued by API owners specifically for the project), that should be kept in secret as said in the external API docs. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;If I publish the project as is, I will show my key and, thus, it might get invalidated. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is it legal to publish the project under open source license excluding the key?&lt;/p&gt;&#xA;" OwnerUserId="923" LastEditorUserId="29" LastEditDate="2015-07-23T01:11:21.307" LastActivityDate="2015-07-23T10:05:24.947" Title="Publishing software as open source while keeping an API key secret" Tags="&lt;publishing&gt;&lt;api&gt;" AnswerCount="3" CommentCount="2" />
  <row Id="1298" PostTypeId="2" ParentId="1274" CreationDate="2015-07-22T23:00:41.663" Score="2" Body="&lt;p&gt;Fork their fork and make it even better! Take all their changes and add the stuff that people ask for and get denied and you will soon be the real deal again .. this fork is brought to you from the original developer of XY .. don't forget to thank the guys! ;-)&lt;/p&gt;&#xA;" OwnerUserId="929" LastActivityDate="2015-07-22T23:00:41.663" CommentCount="0" />
  <row Id="1299" PostTypeId="2" ParentId="1296" CreationDate="2015-07-22T23:11:08.083" Score="3" Body="&lt;p&gt;Your specific question seems to be:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Is it legal to publish the project under open source license excluding the key?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The answer is clearly: &quot;yes&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I don even have an idea &lt;em&gt;why&lt;/em&gt; anyone should think otherwise, but there is nothing in the open source licensing model that invalidates your use of the license if you exclude the API license key (or any other information that should be kept confidential, such as login credentials) from what you share.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;It is not even considered &lt;em&gt;problematic&lt;/em&gt; to exclude a valid API license key from the distribution of an open source project.  For instance, there exist countless open source clients for web-services requiring API-keys that do this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The standard solution is to ship the project with a dummy or no API key, and make provisions (for example during installation) for users to put in place their own, real, key.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As for making &lt;em&gt;sure&lt;/em&gt; the key is excluded, there are many different ways to do this, depending on whether the key lives in a file of its own, or is part of some other file that is otherwise required.  &lt;em&gt;How&lt;/em&gt; to exclude it is IMHO outside the scope of this question.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;(PS: My first reading of this question was that it was about whether it would be legal to &lt;em&gt;include&lt;/em&gt; a valid key in the source code.  Subsequent edits made it clear that is was really about whether it would be &lt;em&gt;legal&lt;/em&gt; to publish the project under an open source license if the valid key where to be &lt;em&gt;excluded&lt;/em&gt; from the source code.)&lt;/sup&gt;&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-23T06:25:12.583" LastActivityDate="2015-07-23T06:25:12.583" CommentCount="0" />
  <row Id="1300" PostTypeId="1" AcceptedAnswerId="1301" CreationDate="2015-07-22T23:21:02.547" Score="5" ViewCount="57" Body="&lt;p&gt;I want to provide a service, intended to make me money, based upon free software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It consists of a free plugin (client) and a web-service.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The client is published as Open Source, and it is deployed as a plugin for some popular free CMS platforms (e.g. Drupal, Joomla, Wordpress) that &lt;em&gt;requires&lt;/em&gt; its plugins to carry a FLOSS license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;All the plugin (client) really does is to provide a GUI to a web-service.  The web service is &lt;em&gt;not&lt;/em&gt; available unless the user purchase an API key.  Without having this API key, the free plugin (client) is useless.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The plugin (client) is written by me, while the web-service is based upon publicly available Free Software written by somebody else, but &lt;em&gt;adapted&lt;/em&gt; by me to become a web-service that communicates with my free plugin through an API also designed by me.  I do not want to share the adapted source code, and I believe I do not have to, since the web-server part is not shared with anyone (it just runs on my web-server).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Will this &lt;em&gt;always&lt;/em&gt; be OK, or are there Free Software licenses (recognized as such by the FSF and OSI) that have restrictions in place that will &lt;em&gt;not&lt;/em&gt; allow me to do this this?&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-23T00:57:44.997" LastActivityDate="2015-07-23T01:11:38.280" Title="Can I use Free Software as basis for a web-service without distributing the source?" Tags="&lt;licensing&gt;&lt;business&gt;" AnswerCount="1" CommentCount="8" />
  <row Id="1301" PostTypeId="2" ParentId="1300" CreationDate="2015-07-22T23:28:13.843" Score="5" Body="&lt;p&gt;That depends on the license for the software used for the web-service. If we run trough all the licenses recognized by FSF and OSI, there are only two classes of licenses:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The Gnu Affero General Public License.&lt;/li&gt;&#xA;&lt;li&gt;All the &lt;em&gt;other&lt;/em&gt; recognized licenses.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;The business model you describe is known as &quot;Software As A Service&quot;  (SAAS).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Most&lt;/em&gt; FLOSS licenses, including GPLv2 and GPLv3 allow you to use this business model.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I.e. you can take free software, add an API that requires the user to purchase a license key to access the API.  Because you never distribute your modified version of the software, you do not have to share its source code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, this business model &lt;em&gt;relies&lt;/em&gt; on the web-service being closed source. If the web-service component was open source, anyone could download it and set up their own web-service and hand out API-keys to this alternate web-service for free.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;a href=&quot;http://www.gnu.org/licenses/agpl-3.0.en.html&quot;&gt;Gnu Affero GPL&lt;/a&gt; (AGPL) does &lt;em&gt;not&lt;/em&gt; allow you to modify free software for this &lt;em&gt;without&lt;/em&gt; giving the public access to the source code of your modified version of the free software.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The GNU Affero General Public License is a modified version of the ordinary GNU GPL version 3. It has one added requirement: if you run a modified program on a server and let other users communicate with it there, your server must also allow them to download the source code corresponding to the modified version running there. (Source: &lt;a href=&quot;http://www.gnu.org/licenses/why-affero-gpl.en.html&quot;&gt;Why the Affero GPL&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="606" LastEditorUserId="190" LastEditDate="2015-07-23T01:11:38.280" LastActivityDate="2015-07-23T01:11:38.280" CommentCount="3" />
  <row Id="1302" PostTypeId="1" AcceptedAnswerId="1496" CreationDate="2015-07-23T00:11:22.567" Score="7" ViewCount="146" Body="&lt;p&gt;I run a moderately successful open source project on GitHub (it is a privacy enhancing tool for public websites, based upon some PETs I developed for my thesis).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am getting quite a few feature requests, and some of them are accompanied with pull-requests from people unknown to me.  I think it is great that users want to contribute to the project, but I worry about the consequences of incorporating user-contributed code without proper vetting.  I am just a one-man show, and do this is my spare time.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What are my options to bring my project forwards with the help of its users?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Are there &lt;em&gt;specific&lt;/em&gt; tools on GitHub that will help me doing this?&lt;/p&gt;&#xA;" OwnerUserId="924" LastEditorUserId="29" LastEditDate="2015-07-23T01:17:55.593" LastActivityDate="2015-08-07T00:04:52.483" Title="What tools on Github can help me do quality assurance for my projects?" Tags="&lt;development&gt;&lt;collaboration&gt;&lt;github&gt;&lt;quality-assurance&gt;" AnswerCount="3" CommentCount="9" />
  <row Id="1303" PostTypeId="2" ParentId="1302" CreationDate="2015-07-23T00:40:05.577" Score="6" Body="&lt;p&gt;In a way you are already moving forward with help from the community; that's what those pull requests are.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In addition to pull-requests, you have other tools at your fingertips&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;The project wiki&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Which you may or may not have enabled. Like any wiki, this can double as a way for you to make announcements (publish guidelines for contributions, etc to your community) and a forum for discussion.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Pull requests&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;In addition to making you aware of changes others would like to see included in your project, these also act as a forum for code reviews. Others who are interested can see the changes and make comments directly against the commits included in the request.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This relieves you a little of the burden of reviewing incoming requests, though as the project owner you still have the final say on which to take and when they are taken.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Issues&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Github also provides you with a rudimentary issue tracker for your project, allowing you to set release dates, assign them to individuals for resolution, classify them via tags, and so on .&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Collaborators&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;When you get to know a few regular contributors well, you have the ability (under Collaborators on the project's settings page) to grant merge access to other people. This allows them to accept pull requests and push changes directly to the main repository.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;In Summary&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Github provides you with everything you need to run a small development project and manage who can do what. It's up to you to make use of them.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If your project is successful enough to be attracting contributions from complete strangers, then it's off to a good start. But if you ignore your contributors one of them is going to fork it, accept the other people's changes, and effectively take the project away from you.&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="29" LastEditDate="2015-07-23T01:18:41.950" LastActivityDate="2015-07-23T01:18:41.950" CommentCount="3" />
  <row Id="1304" PostTypeId="2" ParentId="1296" CreationDate="2015-07-23T05:07:01.153" Score="4" Body="&lt;p&gt;Yes you can push a project without publishing the API key. Developers do it all the time.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Make sure you have prominent documentation explaining how other developers can acquire/install their own API key and make sure your source code detects a missing key and provides a helpful error message.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you're using git, you can use a &lt;code&gt;.gitignore&lt;/code&gt; file to prevent the API key from being included in the source code.&lt;/p&gt;&#xA;" OwnerUserId="436" LastActivityDate="2015-07-23T05:07:01.153" CommentCount="0" />
  <row Id="1305" PostTypeId="1" AcceptedAnswerId="1306" CreationDate="2015-07-23T05:27:07.403" Score="1" ViewCount="55" Body="&lt;p&gt;Consider the following GitHub issue representing a suggested feature.&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Inactive&lt;/strong&gt; - has not been commented on in four months&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Unpopular&lt;/strong&gt; - requested by a single person, and no evidence suggests that anyone else is interested in it&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;No Implementation Ideas&lt;/strong&gt; - there have not been any suggestions about how to implement the suggested feature&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;To close the issue, are these criteria:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Not Sufficient&lt;/strong&gt; - What other criteria should be considered?&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Sufficient&lt;/strong&gt; - Great&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Overly Sufficient&lt;/strong&gt; - Which criteria are not necessary?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="937" LastEditorUserId="190" LastEditDate="2015-07-23T07:10:21.950" LastActivityDate="2015-07-23T08:28:47.190" Title="When to close an inactive feature request?" Tags="&lt;issue-tracking&gt;&lt;feature-requests&gt;" AnswerCount="1" CommentCount="3" ClosedDate="2015-07-23T08:58:11.120" />
  <row Id="1306" PostTypeId="2" ParentId="1305" CreationDate="2015-07-23T07:45:47.310" Score="2" Body="&lt;p&gt;As the question stands, the best option (of the three we're supposed to choose between) is:&lt;br&gt;&#xA;&quot;Not Sufficient&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is, however, a follow-up question:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;What other criteria should be considered?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The answer to this is:&lt;br&gt;&#xA;This depends on the project, the request and the maintainer's outlook.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There comes a time when it is clear that a feature request is not going to be worked on and it is time to close.  &lt;em&gt;When&lt;/em&gt; that time comes is not easy to pin down in the generic case.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I maintain projects that has more than two year old feature requests (fitting &lt;em&gt;all&lt;/em&gt; of your three criteria) open.  I keep such requests open because I (the project owner and maintainer) think the project will benefit from from having such a feature - even it has not attracted any &quot;me too&quot;-responses. I haven't found time to work on it myself, but keeping it open means that it is not off he charts, and a pull request to implement it will be welcome.  I usually leave a comment like this:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I don't think I can find the time to work on this anytime soon, but it looks like a nifty feature, and I will commit a pull request that does a good job implementing it.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;And I have closed a feature request after 14 days that fits &lt;em&gt;none&lt;/em&gt; of your criteria.  In the latter case, the criterion may (for instance) be given as (in somewhat more diplomatic language): &lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;It is an aim of this project to stay &lt;em&gt;small&lt;/em&gt; and &lt;em&gt;lightweight&lt;/em&gt;.  Your pull request is bloated and ugly, and will only benefit a small group of users who will be better served by using project X for this feature.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Clearly, this is not the &lt;em&gt;only&lt;/em&gt; criterion for an almost instant closure - the list is almost infinite (depending on the project, the request and the maintainer's outlook), but you get the idea.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I usually respond to a feature requests with no pull request that is pretty marginal with something that indicates that imminent closure is &lt;em&gt;likely&lt;/em&gt; unless the community takes steps to prevent closure. Example:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I (the maintaner) am not going to work on this feature. This will be closed in about two weeks &lt;em&gt;unless&lt;/em&gt; there a pull request is posted in the next two weeks that passes community review for code quality and desirability.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;(The latter answer depends on having in place a community driven triage system for pull requests, which I have for all my community driven free software projects.)&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-23T08:28:47.190" LastActivityDate="2015-07-23T08:28:47.190" CommentCount="0" />
  <row Id="1307" PostTypeId="5" CreationDate="2015-07-23T07:46:27.673" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-23T07:46:27.673" LastActivityDate="2015-07-23T07:46:27.673" CommentCount="0" />
  <row Id="1308" PostTypeId="4" CreationDate="2015-07-23T07:46:27.673" Score="0" Body="GitHub is a web-based Git repository hosting service, typically used for FLOSS software projects. Use this tag for questions about how working with GitHub affects open source projects." OwnerUserId="168" LastEditorUserId="168" LastEditDate="2015-07-23T08:30:40.130" LastActivityDate="2015-07-23T08:30:40.130" CommentCount="0" />
  <row Id="1309" PostTypeId="1" AcceptedAnswerId="1311" CreationDate="2015-07-23T08:43:32.753" Score="2" ViewCount="51" Body="&lt;p&gt;I always see these tags in the issues and pull requests on Github but do not know the meaning and find it hard to search for.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, in this &lt;a href=&quot;https://github.com/BVLC/caffe/labels&quot; rel=&quot;nofollow&quot;&gt;famous Caffe project.&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="940" LastEditorUserId="75" LastEditDate="2015-07-23T10:31:14.760" LastActivityDate="2015-07-23T10:35:59.883" Title="What do the labels JD, JL and ES mean?" Tags="&lt;github&gt;" AnswerCount="1" CommentCount="3" FavoriteCount="1" ClosedDate="2015-07-23T17:49:41.740" />
  <row Id="1310" PostTypeId="2" ParentId="1296" CreationDate="2015-07-23T10:05:24.947" Score="3" Body="&lt;p&gt;If it is your project and doesn't include any external code, you can do what you want with it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can release it with a license that only allows near-sighted monkeys to use it while hanging from a tree. You can even publish the source under dozens of different licenses, each contradicting all others.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The license is only important if you gave the code to someone (e.g. by putting it on the web with some license and someone downloaded it). The one who GOT the software then has to conform to the license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So for you this is only important, if you use code in your project you didn't create yourself. You then have to conform to all the licenses of the code you use.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some licenses you might use have additional restrictions on the text of the license itself. Sometimes you cannot copy parts of the license text only or add additional clauses. I am not aware of any license that puts restrictions on the IP you license with it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But no matter what license you release your code with, you still retain all rights. Even if you release your code with a AGPLv3 license, you can still make modifications, keep them closed, sell them, etc. &lt;strong&gt;as long as you don't use contributions from other people in your code&lt;/strong&gt;. Otherwise the common practice of releasing code under some open source license while also selling commercial licenses wouldn't work.&lt;/p&gt;&#xA;" OwnerUserId="944" LastActivityDate="2015-07-23T10:05:24.947" CommentCount="0" />
  <row Id="1311" PostTypeId="2" ParentId="1309" CreationDate="2015-07-23T10:12:48.280" Score="2" Body="&lt;p&gt;These are custom labels. In the example you give, they seem to be the initials of developers. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Looking at the project's &lt;a href=&quot;http://caffe.berkeleyvision.org/&quot; rel=&quot;nofollow&quot;&gt;page&lt;/a&gt;, the lead developer is called Evan Shelhamer (ES). JD seems to be a contributor named Jeff Donahue. JL would be contributor Jon Long. All these people are mentioned on the project's page, under &quot;The BVLC members who have contributed to Caffe are ...&quot;&lt;br&gt;&#xA;In other words, not just contributors, but people from the Berkeley Vision and Learning Centre (BVLC) itself - people with leader(-like) positions on the project.&lt;/p&gt;&#xA;" OwnerUserId="75" LastEditorUserId="75" LastEditDate="2015-07-23T10:35:59.883" LastActivityDate="2015-07-23T10:35:59.883" CommentCount="1" />
  <row Id="1312" PostTypeId="1" AcceptedAnswerId="1314" CreationDate="2015-07-23T10:50:19.177" Score="9" ViewCount="753" Body="&lt;p&gt;The terms &lt;em&gt;fork&lt;/em&gt; and &lt;em&gt;derivative&lt;/em&gt; have really been bugging me as I always seem to imply that their different, but then in many ways the same. You hear the term fork many times on platforms such as Github, but then in many legal documents, you may hear the word derivative. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;As such, I've got a few questions:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;What's the difference? Is there a difference at all?&lt;/li&gt;&#xA;&lt;li&gt;Why do we still have the terms? Can't we just use a single term? In what contexts do we use the respective terms?&lt;/li&gt;&#xA;&lt;li&gt;Bonus: When and where did the terms start to appear?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="69" LastEditorUserId="98" LastEditDate="2015-08-04T10:08:33.267" LastActivityDate="2015-08-04T10:08:33.267" Title="Derivatives and Forks... Is there a difference?" Tags="&lt;forking&gt;&lt;terminology&gt;&lt;derivative-works&gt;" AnswerCount="3" CommentCount="0" FavoriteCount="2" />
  <row Id="1313" PostTypeId="2" ParentId="1312" CreationDate="2015-07-23T11:06:11.980" Score="6" Body="&lt;p&gt;A &lt;em&gt;fork&lt;/em&gt; implies that there is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Fork_%28software_development%29#Forking_of_free_and_open_source_software&quot;&gt;split in the community&lt;/a&gt; .&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A &lt;em&gt;derivative work&lt;/em&gt; does not necessarily have this negative association; moreover, the term &lt;em&gt;derivative work&lt;/em&gt; implies that the discussion is about the legal side - licenses and the freedom to create a derivative work. In this sense &lt;em&gt;derivative&lt;/em&gt; is more positive, as it is an important aspect of Open Source - the ability to create your own version of a piece of code, that serves your needs. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;According to the linked Wikipedia article, the term &quot;fork&quot; is at least as old as 1980:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;In the context of software development, &quot;fork&quot; was used in the sense of creating a revision control &quot;branch&quot; by Eric Allman as early as 1980, in the context of SCCS:[5]&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Creating a branch &quot;forks off&quot; a version of the program.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The term &quot;derivative&quot; or &quot;derivative work&quot; seems to originate with the GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;EDIT: User &lt;a href=&quot;http://stackexchange.com/users/1405412/frepa&quot;&gt;@Frepa&lt;/a&gt; pointed out to me that a derivative work may also inherit from it's parent work - like Linux Mint inheriting material from Ubuntu, which in turn inherits material from Debian. In a fork (this is my observation) this is not necessarily the case, as the people who forked off from a project decided to go separate ways.&lt;/p&gt;&#xA;" OwnerUserId="75" LastEditorUserId="75" LastEditDate="2015-07-23T11:49:12.633" LastActivityDate="2015-07-23T11:49:12.633" CommentCount="1" />
  <row Id="1314" PostTypeId="2" ParentId="1312" CreationDate="2015-07-23T11:17:14.857" Score="13" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;What's the difference? Is there a difference at all?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The obvious difference is that &quot;derivative (work)&quot; is a legal term, and &quot;fork&quot; is a software term.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, the musical and motion picture &quot;West Side Story&quot; (by Jerome Robbins, Robert Wise, Arthur Laurents and Ernest Lehman) is a derivative work of the stage play &quot;Romeo and Juliet&quot; (by William Shakespeare), which is a derivative work of the poem &quot;The Tragical History of Romeus and Juliet&quot; (by Arthur Brooke).  I doubt you'll hear anyone (except perhaps die-hard hackers) say that Shakespeare &quot;forked&quot; Brooke's poem.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What is the relationship between the software term and the legal term?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A &quot;fork&quot; of a software project may simply be an alternate branch in a Source Control System (SCS) where code is held under joint copyright by a community of cooperating programmers.  In that case, a fork is not a derivative.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A derivative may also result from some sort of &lt;em&gt;transformation&lt;/em&gt; of the original that is different enough to result in a &lt;em&gt;new&lt;/em&gt; copyrightable work. For instance, when the author of a novel writes the screenplay for a motion picture adaptation of his novel, then the screenplay is a derivative work of the novel, even if both are created by the same person.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, if somebody takes software away from one community, and sets up a &lt;em&gt;separate&lt;/em&gt; community and proceed to develop this separate version of the software (a &quot;schism in the community&quot;), then creating a &quot;fork&quot; also means creating a  &quot;derivative work&quot; in the &lt;em&gt;legal&lt;/em&gt; sense - and this situation is probably  the context of this question, as it applies specifically to free and open source software, so I'll discuss it in a bit more detail:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;We typically use the legal term &quot;derivative work&quot; instead of the software term &quot;fork&quot; when the legality of creating a fork of a software project is disputed: Since creating a derivative work is a &lt;em&gt;reserved right&lt;/em&gt;, creating a derivative work (including, but limited to, a &quot;fork&quot;) requires permission from the copyright holder.  If there is no permission, this is illegal.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So there exists &quot;forks&quot; (inside a SCS) that are not derivative works.  There &lt;em&gt;also&lt;/em&gt; exists derivative software (i.e. software that a court of law says is a derivative work), &lt;em&gt;without&lt;/em&gt; being a fork.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One example of the latter is the 9th circuit ruling on &lt;a href=&quot;http://cyber.law.harvard.edu/people/tfisher/IP/1998%20Micro%20Star%20Abridged.pdf&quot;&gt;Micro Star v. FormGen Inc.&lt;/a&gt;, where the court decided that sharing a specific &lt;em&gt;file format&lt;/em&gt; was sufficient to make a CD-ROM with fan generated &quot;levels&quot; for a video game a derivative work of said game.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Why do we still have the terms? Can't we just use a single term? &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The legal term &quot;derivative work&quot; (and its close sibling &quot;adaptation&quot;) tends to be used when one needs to decide on whether a specific derivative is &lt;em&gt;legal&lt;/em&gt;.  In particular, when the disputed derivative is &lt;em&gt;not&lt;/em&gt; a fork (as in the case &quot;Micro Star v. FormGen Inc.&quot;, it is really helpful to use legal word &quot;derivative&quot; to explain the situation, as the word &quot;fork&quot; may not even &lt;em&gt;apply&lt;/em&gt; to the specific situation at hand.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As I've argued above, a &quot;fork&quot; is not &lt;em&gt;always&lt;/em&gt; a &quot;derivative&quot; and vice versa, so having a single term for both does not make much sense.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Bonus: When and where did the terms start to appear?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Use of &quot;fork&quot; &lt;em&gt;without&lt;/em&gt; creating a derivative (in the context if having separate branches in a Source Control System where software is held in joint copyright is AFAIK as old as source control).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the context of &quot;forking&quot; to create a derivative, &lt;a href=&quot;https://en.wikipedia.org/wiki/Fork_%28software_development%29&quot;&gt;Wikipedia&lt;/a&gt; says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&quot;Fork&quot; is not known to have been used in the sense of a community schism during the origins of Lucid Emacs (now XEmacs) (1991) or the BSDs (1993–1994); Russ Nelson used the term &quot;shattering&quot; for this sort of fork in 1993, attributing it to John Gilmore. However, &quot;fork&quot; was in use in the present sense by 1995 to describe the XEmacs split, and was an understood usage in the GNU Project by 1996.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So &quot;fork&quot; seems to have &lt;em&gt;first&lt;/em&gt; been applied to a community split (where somebody &lt;em&gt;else&lt;/em&gt; took the software and created a derivative around 1994-1995.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The term &quot;derivative work&quot; is a very old legal term, but I've not been able to pin down exactly &lt;em&gt;when&lt;/em&gt; it first appeared in legal literature.  There is no trace of it in Statute of Anne (1710), which deals only with verbatim copies. However, in the USA, it surfaces in the exclusive-rights provision of the Copyright Act of 1909.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the context of free software, I believe the first mention of the term &quot;derivative&quot; is in the &lt;a href=&quot;http://www.gnu.org/licenses/old-licenses/gpl-1.0.en.html&quot;&gt;GPLv1&lt;/a&gt;.  The chief author of the GPL was Eben Moglen (professor law and legal history at Columbia University and chief author of the GPL) and it seems prudent of him to choose a well-established legal term to describe a transformed copy of a program to make sure the GPL stood up in court.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-23T12:26:26.050" LastActivityDate="2015-07-23T12:26:26.050" CommentCount="1" />
  <row Id="1316" PostTypeId="2" ParentId="1312" CreationDate="2015-07-23T12:17:22.377" Score="3" Body="&lt;p&gt;A &lt;em&gt;derivative work&lt;/em&gt; a legal term for any work that builds on a previous work. Almost all software releases are derivative works. Windows 7 is a derivative work from Windows XP. Linux 3.1 is a derivative work of Linux 3.0. &lt;a href=&quot;https://en.wikipedia.org/wiki/L.H.O.O.Q.&quot; rel=&quot;nofollow&quot;&gt;LHOOQ&lt;/a&gt; is a derivative work of Mona Lisa.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Usually the term isn't used (or doesn't come up) with different versions of the same project, but they are derivative works.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;None of these can be described as a fork though. A fork happens when a project splits. The development of a project starts to happen in two different places. For example, the MariaDB project is a fork of the MySQL project. Citizendium was a partial fork of Wikipedia. They both create derivative works from the fork point.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Sometimes the works produced by a fork are still also called a fork.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In short, a derivate work describes a &lt;em&gt;work&lt;/em&gt; that is derived from an earlier work. A &lt;em&gt;fork&lt;/em&gt; describes a situation where development of some project branches in to two different paths, and may also describe the works created in the fork.&lt;/p&gt;&#xA;" OwnerUserId="97" LastEditorUserId="97" LastEditDate="2015-07-23T16:02:52.423" LastActivityDate="2015-07-23T16:02:52.423" CommentCount="4" />
  <row Id="1317" PostTypeId="2" ParentId="1302" CreationDate="2015-07-23T13:52:38.910" Score="4" Body="&lt;p&gt;In addition to things already mentioned, GitHub recognizes a special &quot;CONTRIBUTING&quot; file (either with .md or .rst extension). &#xA;If this file exists in your repo, the message &quot;Please review the guidelines for contributing to this repository.&quot; will show up with a link to that file when someone creates a new issue.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can use that to be a tad more explicit about what you expect from a contribution or issue.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;See this &lt;a href=&quot;https://github.com/nexB/scancode-toolkit/blob/master/CONTRIBUTING.rst&quot; rel=&quot;nofollow&quot;&gt;example of a GitHub contributing file.&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="947" LastEditorUserId="168" LastEditDate="2015-07-23T15:22:26.173" LastActivityDate="2015-07-23T15:22:26.173" CommentCount="0" />
  <row Id="1323" PostTypeId="1" AcceptedAnswerId="1327" CreationDate="2015-07-24T05:57:41.107" Score="8" ViewCount="520" Body="&lt;p&gt;Given that I've written a program that I want to release as Open Source / Free Software (as defined by the OSI and the FSF), will choosing a &lt;a href=&quot;http://opensource.stackexchange.com/questions/21/whats-the-difference-between-copyleft-and-permissive-open-source&quot;&gt;copyleft license&lt;/a&gt; help me control what others are able to do with my code?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I understand that copyleft requires anyone that &lt;a href=&quot;http://opensource.stackexchange.com/questions/1312/derivatives-and-forks-is-there-a-difference&quot;&gt;forks&lt;/a&gt; my program to &lt;em&gt;license&lt;/em&gt; their fork under the same license (or at least under a license with the same terms as my license). But will a copyleft license (as opposed to a permissive one) give me control over &lt;em&gt;more&lt;/em&gt; then the license they have to use for their fork?&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-24T11:35:59.990" LastActivityDate="2015-07-26T12:33:38.170" Title="Will copyleft help me control what others are able to do with my code?" Tags="&lt;licensing&gt;&lt;copyleft&gt;" AnswerCount="3" CommentCount="6" />
  <row Id="1325" PostTypeId="2" ParentId="1323" CreationDate="2015-07-24T07:36:13.607" Score="5" Body="&lt;p&gt;No, by using a copyleft license you renounce the rights to control the distribution of your code, and you only force anyone using this code to use and further distribute it on terms provided by the license.&lt;/p&gt;&#xA;" OwnerUserId="691" LastActivityDate="2015-07-24T07:36:13.607" CommentCount="1" />
  <row Id="1327" PostTypeId="2" ParentId="1323" CreationDate="2015-07-24T11:24:44.643" Score="11" Body="&lt;p&gt;Any OSI or FSF approved open source license does not allow to put restrictions on who can use the software and for what purpose. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The FSF &lt;a href=&quot;https://www.gnu.org/philosophy/free-sw.html&quot;&gt;calls these the essential freedoms 0 and 1&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;The freedom to run the program as you wish, for any purpose (freedom&#xA;  0). &lt;/li&gt;&#xA;  &lt;li&gt;The freedom to study how the program works, and change it so it&#xA;  does your computing as you wish (freedom 1).&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://opensource.org/osd&quot;&gt;The OSI definition of open source&lt;/a&gt; forbids discrimination against groups and field of endeavor. This is incompatible with any restrictions on how the code may be changed:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ol start=&quot;5&quot;&gt;&#xA;  &lt;li&gt;No Discrimination Against Persons or Groups&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;  &#xA;  &lt;p&gt;The license must not discriminate against any person or group of&#xA;  persons.&lt;/p&gt;&#xA;  &#xA;  &lt;ol start=&quot;6&quot;&gt;&#xA;  &lt;li&gt;No Discrimination Against Fields of Endeavor&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;  &#xA;  &lt;p&gt;The license must not restrict anyone from making use of the program in&#xA;  a specific field of endeavor. For example, it may not restrict the&#xA;  program from being used in a business, or from being used for genetic&#xA;  research.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;As long as all downstream users comply with your license terms, there is nothing you can do... as long as you still want to call your project rightfully open source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can of course release it under a license which is identical to a common copyleft license but includes additional clauses which restrict what people can do with it, but then you can no longer call it &lt;em&gt;open source&lt;/em&gt; or &lt;em&gt;free software&lt;/em&gt;.&lt;/p&gt;&#xA;" OwnerUserId="14" LastActivityDate="2015-07-24T11:24:44.643" CommentCount="0" />
  <row Id="1330" PostTypeId="1" CreationDate="2015-07-24T12:53:36.687" Score="9" ViewCount="616" Body="&lt;p&gt;I am using Eclipse to code my program. After doing research on the Eclipse website I found that there was no clear answer to my question. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;My issue is that I need to be able to license my software and have NO restrictions as to how I license it. But throughout the development of my software I have used wizards to generate some of my code numerous times.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;By using these wizards, does this mean that my software is now a derivative of Eclipse? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;I have done a bunch of research, all I could find was an indefinite answer. &lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="69" LastEditDate="2015-07-24T13:25:51.833" LastActivityDate="2015-07-24T21:09:35.817" Title="Does using Eclipse wizards to generate code make my software a derivative?" Tags="&lt;development&gt;&lt;software&gt;&lt;derivative-works&gt;&lt;epl&gt;" AnswerCount="3" CommentCount="2" />
  <row Id="1331" PostTypeId="2" ParentId="1323" CreationDate="2015-07-24T12:56:57.370" Score="-1" Body="&lt;p&gt;&lt;strong&gt;Copyleft &lt;em&gt;per se&lt;/em&gt; won't do it&lt;/strong&gt;. Part of the definition of copyleft is that it grants licensees the ability to use the code for any purpose.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;You can get a similar effect by working within the broader category of what Creative Commons calls &quot;ShareAlike&quot; licenses&lt;/strong&gt;. Arguably the most famous example of this is &lt;a href=&quot;http://creativecommons.org/licenses/by-nc-sa/4.0/&quot; rel=&quot;nofollow&quot;&gt;CC BY-NC-SA&lt;/a&gt;, which doesn't allow the licensed work to be used for commercial purposes, &lt;em&gt;and&lt;/em&gt; requires someone making derivative works to share alike. But licenses that restrict how the code is used are not copyleft.&lt;/p&gt;&#xA;" OwnerUserId="962" LastActivityDate="2015-07-24T12:56:57.370" CommentCount="7" />
  <row Id="1332" PostTypeId="2" ParentId="1330" CreationDate="2015-07-24T13:14:25.900" Score="4" Body="&lt;p&gt;Eclipse has it's own license, the Eclipse Public License. It's very difficult to find, but you can find this in Section 29 &lt;a href=&quot;https://eclipse.org/legal/eplfaq.php#EXAMPLE&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Many Eclipse tools and wizards use code templates which are included in the application that is generated. Is the code generated by these tools considered a derivative work that must be licensed under the EPL?&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Unfortunately, there is no clear answer to this question. To the extent that the code generated by a wizard is purely functional in nature and therefore not the proper subject matter for copyright protection, it could be argued that it is not subject to copyright protection, and therefore is not a derivative work. An example of that type of code would include calls to APIs or other technical instructions which are dictated by functional or technical requirements. Moreover, to the extent the generated code is a very small part of the final overall work, there is an argument that such use would be di minimus, and the final product or application should not be considered to be a derivative work. Finally, to the extent developers who use the generated code make many changes and additions to the code, there is also an argument that the resultant application is not a derivative work. Of course, these are just arguments and not &quot;bright line&quot; tests, and therefore each position could be subject to differing viewpoints. Eclipse cannot take a position on this issue, as it will ultimately be a question of the facts and circumstances associated with a particular use.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Reading this, you can easily determine that any generated code is only functional in nature, and will consist a tiny fraction of your final project. Therefore, using the code generated by the Eclipse Wizards will not make your software a derivative of that. Don't worry, you can calm down! You're safe now! :)&lt;/p&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-07-24T13:14:25.900" CommentCount="1" />
  <row Id="1333" PostTypeId="2" ParentId="1330" CreationDate="2015-07-24T14:29:03.390" Score="0" Body="&lt;p&gt;I find using the words &quot;purely functional&quot; very odd, it already has an established and very specific meaning. &quot;Trivial&quot; would be a better word. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;If some nontrivial code is already present in a program and you take and modify it (with a wizard or otherwise), it's better to treat it as a derivative work. You should check if they have any exception for it, and if not, check license compatibility with your own code.&#xA;A list of constants, function prototypes, or dummy methods with nothing but name and formal parameters could be considered trivial and not copyrightable. However, some wizards essentially copy a whole demo app for you.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If a program generates code from scratch, then you don't need to worry about it. If you take a program that generates random code from a grammar specification (e.g. &lt;a href=&quot;https://github.com/dmbaturin/cfgen/&quot; rel=&quot;nofollow&quot;&gt;mine&lt;/a&gt; ;), you can be sure the code is yours. Some programs where substantial part of the generated code is stored and reused verbatim add exceptions to their license to avoid any ambiguity (see &lt;a href=&quot;http://www.gnu.org/licenses/gpl-faq.html#GPLOutput&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;).&lt;/p&gt;&#xA;" OwnerUserId="652" LastActivityDate="2015-07-24T14:29:03.390" CommentCount="1" />
  <row Id="1334" PostTypeId="1" CreationDate="2015-07-24T18:14:09.573" Score="0" ViewCount="107" Body="&lt;p&gt;I've written a Graphics Design program, with less functionality than Photoshop, but more than MS Paint. I've targeted the application towards teenagers and kids, mainly for educational usages for subject fields such as Graphic Design, Photography and Digital Art. I've started writing it for my final project in school, and feeling quite happy with the work I have done, and having noticed a lack of related software programs for various operating systems, I would like to release it to the general public. &lt;strong&gt;It's currently in Alpha testing :)&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you really want, I've made a couple pieces of fantastic artwork in the &lt;a href=&quot;http://meta.opensource.stackexchange.com/questions/80/community-promotion-ads/387#387&quot;&gt;Community Ads meta post&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Here are a couple aspects of the project:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Libraries:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;JRE System Library - It doesn't look like I'm allowed to include with my software...&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;s&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/tech/jai-142803.html&quot; rel=&quot;nofollow&quot;&gt;Java Advanced Imaging API&lt;/a&gt;&lt;/s&gt;. It looks like I will no longer be using this. Having done some more testing with my application, I have found bugs with this api, following operations with the &lt;code&gt;Tiff&lt;/code&gt; format, the primary reason for its use. I'm incredibly sorry for confusions this may cause.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Apache Commons IO Library - The libraries are licensed under the Apache 2.0 license&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://jfontchooser.osdn.jp/site/jfontchooser/project-summary.html&quot; rel=&quot;nofollow&quot;&gt;JFontChooser&lt;/a&gt;. According to this &lt;a href=&quot;http://stackoverflow.com/questions/2120228/java-swing-font-chooser&quot;&gt;Stack Overflow&lt;/a&gt; Post, it is Open Source, however, &lt;s&gt;I am unable to exactly find which license it really uses in the documentation, nor its download link (However, I have reasons to believe it uses the MIT license).&lt;/s&gt; It uses the MIT license, it says at the download location, and the license file in the package is an exact match of the MIT license.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.jython.org&quot; rel=&quot;nofollow&quot;&gt;Jython&lt;/a&gt;. The OSI claims that this fits the Open Source Definition, and the license itself &lt;a href=&quot;http://opensource.org/licenses/Python-2.0&quot; rel=&quot;nofollow&quot;&gt;says&lt;/a&gt; that it is very permissive. It should be noted that I am re-evaluating its usefulness within my application, and that I am considering its removal.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Additional Files:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;I have multiple image files as &quot;sample&quot; files that users can build upon that I hope to include within my project. These files are images that I have found online on various sites. Many of them are licensed under a Creative Commons ShareAlike license (CC-BY-SA). I'm unsure of whether the ShareAlike clause will be an issue, but I can always remove them and substitute them with pictures of my own (I will likely do that in fact).&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Aside from the general development guidelines and files that I created for my use during the development of the project, there's nothing else that isn't mine.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;What I would like:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;A copyleft clause -&gt; This would allow me to sort of control re-licensing the project under different terms, thus providing different rights.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;I would like to see if I can discourage forking and derivatives for my project, more so from the general developer community. As I noted above, I wrote the application for my final (or cumulative) project for school. Since I'm 15, I'm still learning the nips and bits of Java, and it is still a learning experience for me.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I've also tried making a friendly environment from within my application, to submit feature requests, bugs and ideas. I'm planning on doing this from where I will be hosting the project as well (likely on my own website). I will also likely be hosting the source code, as well as the compiled application from there.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;I don't mind using a license that people haven't heard of, as long as it is open, and it fulfills what I would like it to do.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;I might be interested in dual-licensing here: According to &lt;a href=&quot;http://opensource.stackexchange.com/a/933/69&quot;&gt;this&lt;/a&gt; answer, I would likely license a restrictive license like I've noted above, but then a permissive license when used for educational uses. I would likely use the Apache or MIT license.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;I really also want to note that if someone can convince me to license my application in a different way, I am open to these sorts of suggestions.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;I want my application to be open, but if I do receive a lot of backlash, I can always just place my program under a copyright, then dictate my own terms, and provided special rights for educational use. But then that's just a pain. I want my program to be Open. This is a learning experience in all directions for me - learning java, learning what makes open projects.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Which license would be best suited for my purposes?&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-07-25T13:20:28.483" LastActivityDate="2015-07-27T02:16:30.920" Title="License for Graphics Design Program" Tags="&lt;software&gt;&lt;license-recommendation&gt;&lt;multi-licensing&gt;&lt;educational-resources&gt;" AnswerCount="2" CommentCount="4" />
  <row Id="1335" PostTypeId="2" ParentId="1334" CreationDate="2015-07-24T18:51:24.477" Score="3" Body="&lt;p&gt;The usual suspects for copyleft are the GPL2, GPL3, AGPL, and LGPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Because you are linking against incompatible libraries, the only license you can use of those is the LGPL: The only licensing information I can find for &lt;code&gt;JFontChooser&lt;/code&gt; is in the sources jar, which has an All Rights Reserved heading. This means you may not re-distribute this product at all, and the user should provide their own copy.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What this license doesn't do, is restrict forking. The right to (unrestrictedly) fork is one most essential part of free and open source software, and you won't find a free and/or open source license that provides for this. This makes me wonder that if you don't want people to fork, why do you want it to be open source? It's rather contradictory.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another license with roughly the same conditions is the Mozilla Public License, which is file-level, so slightly more permissive.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For dual-licensing under less restrictive licenses, you could use any old permissive license; the MIT seems to be the most popular choice.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The additional files can be individually licensed under their own license they are not part of the software, or essential to its functioning. Do make sure you fulfill the license requirements of each individual file.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;EDIT:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Seeing that JFontChooser is MIT, you now have the following licenses for components:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;JRE: Assuming that you link against OpenJDK (and this is generally a very safe assumption, unless you are doing something very peculiar with an alternative implementation), GPL2 + classpath exception&lt;/li&gt;&#xA;&lt;li&gt;Commons IO: Apache 2.0: GPL3+ compatible.&lt;/li&gt;&#xA;&lt;li&gt;&lt;s&gt;Java Advanced Imaging API: Not sure. GPL + classpath exception or Oracle Binary Code License. The former is GPL3+ compatible, the later isn't.&lt;/s&gt;&lt;/li&gt;&#xA;&lt;li&gt;Jython: Python Software Foundation License 2.0. GPL compatible.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Annoyingly, GPL2 and GPL3 aren't compatible, but with the classpath exception, you're not bound to the GPL2. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;So that leaves you, from restrictive to permissive:&#xA;&quot;GPL 3 or later&quot;, GPL3, LGPL or MPL&lt;/p&gt;&#xA;" OwnerUserId="97" LastEditorUserId="97" LastEditDate="2015-07-25T10:01:26.897" LastActivityDate="2015-07-25T10:01:26.897" CommentCount="8" />
  <row Id="1336" PostTypeId="2" ParentId="1330" CreationDate="2015-07-24T21:09:35.817" Score="1" Body="&lt;p&gt;The wizard itself doesn't determine if the output is covered by a license. The input determines copyright law and FLOSS licensing. For example, if you import a nondescript WSDL into Eclipse to generate a client, that client isn't subject to the Eclipse license or even copyright law (by itself). The entire work resulting from the use of that client could be licensed any way the developers see fit. Contrariwise, if you imported Eclipse's source code into Eclipse and compiled it, it would be subject to Eclipse's license, even if you modified it slightly.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, you &lt;em&gt;might&lt;/em&gt; be able to import just a single file from Eclipse, if that file offered obvious functionality and was an insignificant portion of the software, without tainting the entire project with the Eclipse license (but, most people avoid that argument either way by simply not copying any source files from software with a license incompatible to their own).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Since most wizards require user input and various actions to generate output, unless the input was licensed by a particular model, the output is subject to ordinary copyright law, which would generally either mean that the person that generated the code would own it, or the code can't be copyrighted, either because it doesn't meet the requirements for originality or triviality.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If this were not true, all FLOSS software would be in trouble. In order to create a project in Eclipse, you use &lt;em&gt;a wizard&lt;/em&gt;. By default, simply using the software basically requires the use of a wizard, so all the output of Eclipse would automatically be subject to Eclipse's licensing.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Clearly this isn't true, because either there'd be a lot more FLOSS software bearing Eclipse licencing, or Eclipse would cease to be viable for any developer unless they explicitly were okay with Eclipse's licensing model, which would basically mean that it would be useless for developing any other type of software. Simply using a program to generate a particular output does not automatically make that output assume a certain license.&lt;/p&gt;&#xA;" OwnerUserId="523" LastActivityDate="2015-07-24T21:09:35.817" CommentCount="1" />
  <row Id="1337" PostTypeId="5" CreationDate="2015-07-25T00:13:12.667" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-25T00:13:12.667" LastActivityDate="2015-07-25T00:13:12.667" CommentCount="0" />
  <row Id="1338" PostTypeId="4" CreationDate="2015-07-25T00:13:12.667" Score="0" Body="For questions about Eclipse Public License (EPL), that is a certified Open Source license created specifically for the Eclipse Foundation." OwnerUserId="69" LastEditorUserId="55" LastEditDate="2015-07-25T07:25:01.733" LastActivityDate="2015-07-25T07:25:01.733" CommentCount="0" />
  <row Id="1340" PostTypeId="1" CreationDate="2015-07-25T12:52:34.713" Score="8" ViewCount="214" Body="&lt;p&gt;A while back, I ask this question: &lt;a href=&quot;http://opensource.stackexchange.com/questions/504/can-i-override-a-licensing-policy&quot;&gt;Can I Override a licensing Policy?&lt;/a&gt; I determined that instead of stating a license on a profile page, it dual-licenses the content posted by that user, instead of overriding the user contribution policy in effect by the company. This works because each post has an owner, and the content clearly has a license in place by site policy, and through notices in the user profile.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But what about Community Wiki posts here at Stack Exchange? These posts have multiple contributors, and they can be edited by anyone. Furthermore, there is practically no ownership of these posts &lt;code&gt;-&amp;gt;&lt;/code&gt; They are &lt;s&gt;owned by nothing&lt;/s&gt; owned by the community user, which isn't even a person. Community Wiki posts are owned by the &lt;a href=&quot;http://opensource.stackexchange.com/users/-1/community&quot;&gt;community user&lt;/a&gt;, not the members of the community who contribute to them.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Own community questions and answers so nobody gets unnecessary reputation from them&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Therefore, how are community wiki posts licensed? I would like to say that they would be licensed under the CC-BY-SA license -&gt; Because that is the user contribution policy, however, would it be multi-licensed from all the users who contributed, generally fraction amounts? Or are they licensed a different way?&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-07-25T13:34:57.840" LastActivityDate="2015-08-10T00:07:23.010" Title="Licensing Community Wiki Posts at Stack Exchange" Tags="&lt;licensing&gt;&lt;community&gt;&lt;multi-licensing&gt;" AnswerCount="3" CommentCount="0" FavoriteCount="3" />
  <row Id="1341" PostTypeId="2" ParentId="1340" CreationDate="2015-07-25T13:01:23.483" Score="0" Body="&lt;p&gt;The license is those of the original asker. Not the partial contributors (editors even).  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;If someone contributed to an open source software. Would the license now be those of the editor? No. It would still be the license the owner placed on it!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This means that while there may be many contributors the license stays the same. It is the license that SE, or the person that asks the question applies to it!&lt;/p&gt;&#xA;" OwnerUserId="271" LastEditorUserId="271" LastEditDate="2015-07-25T13:13:03.957" LastActivityDate="2015-07-25T13:13:03.957" CommentCount="4" />
  <row Id="1342" PostTypeId="2" ParentId="1340" CreationDate="2015-07-25T13:22:09.360" Score="12" Body="&lt;p&gt;You're conflating features of the Stack Exchange engine, which copyright law doesn't care about, with ownership and licensing.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;All user content (i.e. the posts and comments, not the user interface bits) on Stack Exchange is &lt;em&gt;owned&lt;/em&gt; by their authors (there is no transfer of copyright — that's not even a thing in some jurisdictions; it is in the US but SE doesn't require it). A majority of posts are owned by the single author who wrote them. Posts with multiple authors (the original poster and one or more editors) may have shared ownership if the contribution of others is significant.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;All user content comes under a &lt;a href=&quot;http://creativecommons.org/licenses/by-sa/3.0/&quot;&gt;CC BY-SA&lt;/a&gt; with attribution requirements&lt;/strong&gt;. There is no dual licensing. The original author may use the same content elsewhere under a different license; in this case the path is from the original author directly to this elsewhere. That is not a dual licensing of the Stack Exchange post, that is a separate work by the same author which happens to have the same content.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Whether a post is community wiki does not affect this&lt;/strong&gt;. Community wiki changes some Stack Exchange rules (lower reputation threshold for making edits without supervision, and no reputation granted for votes), and is a signal from the original poster that others are permitted and even encouraged to make significant contributions. It affects the user interface a bit; for example the name at the bottom of the post is the user who contributed the most content by some measure of length, whereas it's always the original author for posts not marked CW. The “Community” user is not involved. All of which does not matter from a legal perspective.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;On the topic of posts with multiple authors — which, again, is not a matter of them being community wiki or not: the only impact of CW is that it makes it more likely for a post to have multiple authors — let me point you to the Meta Stack Exchange thread &lt;a href=&quot;http://meta.stackexchange.com/questions/208904/does-the-migration-of-edited-posts-violate-attribution-requirements&quot;&gt;Does the migration of edited posts violate attribution requirements?&lt;/a&gt; and in particular &lt;a href=&quot;http://meta.stackexchange.com/questions/208904/does-the-migration-of-edited-posts-violate-attribution-requirements/208952#208952&quot;&gt;my answer there&lt;/a&gt;. The law (in all jurisdictions, I think) sets a threshold for when contributions to a work are considered significant enough for someone to be considered a co-author. The exact threshold is determined by jurisprudence and is not always consensual. For example, copyeditors on books are traditionally not given any recognition, whereas movies tend to credit many people whose contribution is purely material, not creative.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Regarding the US in particular, the relevant law is &lt;a href=&quot;http://www.law.cornell.edu/uscode/text/17&quot;&gt;Title 17 of the U.S. Code&lt;/a&gt;, and in particular &lt;a href=&quot;http://www.law.cornell.edu/uscode/text/17/chapter-1&quot;&gt;chapter 1&lt;/a&gt;. Neither it, nor the CC BY-SA license, define who is considered an author. The article &lt;a href=&quot;http://digitalcommons.wcl.american.edu/cgi/viewcontent.cgi?article=1447&amp;amp;context=aulr&quot;&gt;“Defining “author” for purposes of copyright by Russ VerSteeg&lt;/a&gt; presents the main views regarding how a contributor to a work gains authorship status. Emphasis is mine.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;“As a general rule, the author is the party who actually creates the work, that is, the person who &lt;strong&gt;translates an idea into a fixed, tangible expression&lt;/strong&gt; entitled to copyright protection.” (Justice Thurgood Marshall, in &lt;em&gt;Community for Creative Non-Violence v. Reid&lt;/em&gt;, 490 U.S. 730, 737 (1989).)&lt;/li&gt;&#xA;&lt;li&gt;“A collaborative contribution will not produce a joint work, and a contributor will not obtain a co-ownership interest, unless the contribution represents &lt;strong&gt;original expression that could stand on its own&lt;/strong&gt; as the subject matter of copyright.” (Paul Goldstein, &lt;em&gt;Copyright: Principles, Law, and Practice&lt;/em&gt; § 4.2.1.2, at 379 (1989).)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;This is the majority view. VerSteeg's article goes on to present minority views (upheld by some US courts) which have a broader definition of authorship, requiring a lesser contribution.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The application to Stack Exchange is to the attribution requirements. The license is the same regardless of who the authors of a post are, but all authors of a work must be attributed if the work is reused. The onus is on the person reusing a Stack Exchange post to ensure that they abide by the licensing requirements and in particular credit all contributors who have authorship status. For a non-community-wiki post, that's usually only the original author, but legally speaking it's still the responsibility of the person reusing the work that's engaged.&lt;/p&gt;&#xA;" OwnerUserId="60" LastActivityDate="2015-07-25T13:22:09.360" CommentCount="0" />
  <row Id="1344" PostTypeId="1" CreationDate="2015-07-26T10:57:21.087" Score="6" ViewCount="86" Body="&lt;p&gt;I would like to release a framework for &lt;a href=&quot;http://unity3d.com&quot; rel=&quot;nofollow&quot;&gt;Unity&lt;/a&gt; under a copyleft licence but have some concerns.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;My goal is for people to be able to use the framework to develop their own projects and only be required to release any changes made to the framework back to the community i.e. they should not be required to publish their project's 'content' as open source.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some of my concerns:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The GNU LGPL looks like it might be a good fit but has been written with a heavy focus on linking and object code.  While the unity editor can import a dll into a project I believe that for most platforms the final executable will be staticly linked.  I can't see how anyone receiving the framework could use it in a distributed game and not trigger the viral clauses if under the LGPL.  &lt;/li&gt;&#xA;&lt;li&gt;Some of this framework will be non-code files (prefabs, audio visual media files etc) that I would like to be covered by a similar, or preferably the same, licence.&lt;/li&gt;&#xA;&lt;li&gt;I am also concerned that anti-DRM clauses in some licences may impact adoption, I do not want the licence to restrict use on any platform.&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;While I am not planning to release via the Asset Store I do not want to restrict that option for the future.  The &lt;a href=&quot;http://unity3d.com/legal/as_provider&quot; rel=&quot;nofollow&quot;&gt;Asset Store Provider Agreement&lt;/a&gt; states:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;5.10.4&lt;br&gt;&#xA;  Provider represents and warrants that its Assets shall not contain any software licensed under the GNU General Public License or GNU Limited (Lesser) General Public License, or any other license with terms that include a requirement to extend such license to any modification or combined work and provide for the distribution of the combined or modified product’s source code upon demand so that Customer content becomes subject to the terms of such open source license; or (ii) any software that is a modification or derivative of any software licensed under the GNU General Public License, Limited (Lesser) Public License, or license with terms similar thereto so that Customer content become subject to the terms of such open source license.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;Which of the standard copyleft licences are suitable for a Unity asset?&lt;/p&gt;&#xA;" OwnerUserId="959" LastEditorUserId="959" LastEditDate="2015-07-29T13:46:18.107" LastActivityDate="2015-07-29T13:46:18.107" Title="Which standard copyleft licences can be applied to Unity assets?" Tags="&lt;copyleft&gt;&lt;license-recommendation&gt;&lt;drm&gt;&lt;assets&gt;&lt;lgpl&gt;" AnswerCount="2" CommentCount="3" />
  <row Id="1345" PostTypeId="2" ParentId="1344" CreationDate="2015-07-26T12:07:28.763" Score="3" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;My goal is for people to be able to use the framework to develop their own projects and only be required to release any changes made to the framework back to the community i.e. they should not be required to publish their project's 'content' as open source.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;GPL/LGPL/AGPL do not trigger the &quot;linking&quot; requirement on artwork, unless the code itself is present in the artwork. Also note that no free license forces people to contribute back their private changes.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The GNU LGPL looks like it might be a good fit but seems to have been written with a heavy focus on .dlls and code. Some of this framework will be non-code files (sprites, textures, sounds, etc) that I would like to be covered by the same licence. I am also concerned that anti-DRM clauses may limit adoption.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;As of version 2.1, the LGPL has been renamed from &lt;strong&gt;Library General Public License&lt;/strong&gt; to &lt;strong&gt;Lesser General Public License&lt;/strong&gt;. This means you can use it on any work, not just libraries.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Some of this framework will be non-code files (sprites, textures, sounds, etc) that I would like to be covered by the same licence.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;There is no &quot;one size fits all&quot; license. Your only viable option if you want everything to be licensed the same way is some form of public domain dedication, like CC0 1.0 Universal (which is suitable for everything, despite being part of Creative Commons; however, please note it is only FSF-approved and not OSI-approved).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is why I recommend using two separate licenses if you are going to copyleft: one for code (GPL, LGPL, AGPL, version 3 or later) and one for assets (CC BY 4.0 or CC BY-SA 4.0 depending on use case). If you want to maximize adoption of your framework, your best bet is using the Apache 2 (has a patent grant) or the MIT license for code, and CC BY 4.0 for assets.&lt;/p&gt;&#xA;" OwnerUserId="433" LastActivityDate="2015-07-26T12:07:28.763" CommentCount="5" />
  <row Id="1346" PostTypeId="2" ParentId="1344" CreationDate="2015-07-26T14:40:45.000" Score="3" Body="&lt;p&gt;Let's break this down.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Your title indicates that you want a copyleft license - this rules out &lt;em&gt;all&lt;/em&gt; permissive licenses.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Just for the record: &quot;copyleft&quot; means that any downstream recipients who &lt;em&gt;distributes adaptations&lt;/em&gt; of your framework, is required to offer anyone who receives an adapted work, source code for the adaptation, under the same license (or one with identical terms).&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;My goal is for people to be able to use the framework to develop their own projects and only be required to release any changes made to the framework back to the community i.e. they should not be required to publish their project's 'content' as open source.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;That requirement will not be a problem, the separation between &quot;code&quot; and &quot;content&quot; (sometimes called &quot;assets&quot; or data&quot;) is well-known, and no copyleft license requires source code of &quot;content&quot; that is simply read by the program to be regarded as part of the adaptation.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The GNU LGPL looks like it might be a good fit but seems to have been written with a heavy focus on .dlls and code.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;As noted in the answer by &lt;em&gt;Calinou&lt;/em&gt;, since 2.1 it has broadened.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;I am also concerned that anti-DRM clauses may limit adoption.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;All&lt;/em&gt; versions of Creative Commons are anti-DRM.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;&lt;p&gt;You may not distribute, publicly display, publicly perform, or publicly digitally perform the Work with any technological measures that control access or use of the Work in a manner inconsistent with the terms of this License Agreement.  (CC BY-SA 1.0 &amp;amp; 2.0)&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;p&gt;You may not impose any effective technological measures on the Work that restrict the ability of a recipient of the Work from You to exercise the rights granted to that recipient under the terms of the License. (CC BY-SA 3.0)&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;p&gt;The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. (CC BY-4.0)&lt;/p&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The language has been softened in ver. 4.0, from banning it outright in version 1-3, to allowing circumvention of DRM, in ver. 4.0.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As for the software licenses, there is no anti-DRM in GPLv2 or the LGPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;GPLv3 and AGPLv3 is clearly anti-DRM, with a provision to circumvent, similar to CC BY-SA 4-0, so if this is a concern you should avoid those.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Some of this framework will be non-code files (sprites, textures, sounds, etc) that I would like to be covered by the same license.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Normally, I would not recommend using a software license for non-code. However, in this case, all the CC licenses are off the chart because they're anti-DRM. The GFDL is copyleft and allows DRM, but it is (IMHO) painful to use because its over-the-top formal requirements. Other content licenses I am aware of (i.e. Open Publication License, Free Art License, Academic Free License) are either non-copyleft, or they are anti-DRM.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This rules out using &lt;em&gt;any&lt;/em&gt; of these for your project's content&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This means that we're left with free software licenses for the content as well.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The choice from there is how &quot;strict&quot; you want your copyleft to be and how much license compatibility you want to offer.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;LGPLv2.1&lt;/strong&gt; and &lt;strong&gt;LGPLv3&lt;/strong&gt; are &quot;weak&quot; copyleft licenses that allows downstream recipients to combine your framework with anything, including games that are sold commercially, without giving anything back to the community. The requirement to share adaptions does not trigger until they alter your code &lt;em&gt;and&lt;/em&gt; distribute the resulting program.  If this is OK, then you should use one of these for the framework (I prefer LGPLv2.1 because I think it is clearer that GPLv3 - but this is a personal preference).&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;GPLv2&lt;/strong&gt; is &quot;normal&quot; copyleft that requires both adapted and linked source code to be shared (if some derived work is distributed). This does not disallow use in commercial games, but the source code of any game that is distributed commercially must be given back to the community.  If you want this stronger type of copyleft, then GPLv2 seems to be the right license.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;To avoid any copyleft confusion, you should specify (e.g. in &lt;code&gt;README&lt;/code&gt;) that the while the non-code assets are under the same license as the code, they are included as &quot;mere aggregates&quot; and do not trigger any copyleft clause on user created content.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-27T00:29:52.670" LastActivityDate="2015-07-27T00:29:52.670" CommentCount="2" />
  <row Id="1347" PostTypeId="1" CreationDate="2015-07-26T15:14:42.863" Score="9" ViewCount="393" Body="&lt;p&gt;I just came across the &lt;a href=&quot;http://opensource.org/licenses/Simple-2.0&quot;&gt;SimPL License&lt;/a&gt; which is described as:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;This Simple Public License 2.0 (SimPL-2.0 for short) is a plain language implementation of GPL 2.0.  The words are different, but the goal is the same - to guarantee for all users the freedom to share and change software.  If anyone wonders about the meaning of the SimPL, they should interpret it as consistent with GPL 2.0.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;It's certainly easier to read than the GPL, but is that a good thing?  Legally, can I be confident something licensed under the SimPL is protected as well as something licensed under the GPL?  Are there any disadvantages to using the SimPL?&lt;/p&gt;&#xA;" OwnerUserId="984" LastEditorUserId="69" LastEditDate="2015-07-26T22:35:33.460" LastActivityDate="2015-07-26T22:35:33.460" Title="Is there a reason to prefer the SimPL over the GPL? Does it carry the same legal weight?" Tags="&lt;gpl&gt;&lt;license-compatibility&gt;&lt;simpl-2.0&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="1348" PostTypeId="2" ParentId="1334" CreationDate="2015-07-26T15:58:25.003" Score="4" Body="&lt;p&gt;Let's first summarize what you will distribute:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Code libraries:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&quot;JRE System Library. It doesn't look like I'm allowed to include with my software...&quot; OK, so we need not consider this.&lt;/li&gt;&#xA;&lt;li&gt;&quot;Java Advanced Imaging API. It looks like I will no longer be using this.&quot;  OK, so we need not consider this.&lt;/li&gt;&#xA;&lt;li&gt;&quot;Apache Commons IO Library. The libraries are licensed under the Apache 2.0 license.&quot; It is a permissive license with a &lt;a href=&quot;http://opensource.stackexchange.com/q/1357/606&quot;&gt;linking exception&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&quot;JFontChooser. It uses the MIT license.&quot; Permissive.&lt;/li&gt;&#xA;&lt;li&gt;&quot;Jython.&quot; Custom permissive license&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;To summarize, the software you're going to include is either permissive, or has a linking exception.  In practice, this means that you can choose whatever licensing you like for your code, including ARR.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Non-code:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I have multiple image files as &quot;sample&quot; files that users can build upon that I hope to include within my project. These files are images that I have found online on various sites. Many of them are licensed under a Creative Commons ShareAlike license (CC-BY-SA). I'm unsure of whether the ShareAlike clause will be an issue,&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;You can safely include these.  The ShareAlike is not a problem. Each license only apply to the &lt;em&gt;independent&lt;/em&gt; work (the image) itself, it does not require license compatibility with other images (or with code).  This is because these does not depend on each other, so no derivative work is created.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;What I would like:  &lt;/p&gt;&#xA;  &#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;A copyleft clause. This would allow me to sort of control re-licensing the project under different terms, thus providing different rights.&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Nope.  As explained in the &lt;a href=&quot;https://opensource.stackexchange.com/a/1327/606&quot;&gt;this answer&lt;/a&gt;, this is not what a copyleft clause does.  And as pointed out in &lt;a href=&quot;https://opensource.stackexchange.com/questions/1163/are-discriminatory-free-licenses-still-free/1166#&quot;&gt;this answer&lt;/a&gt;, if you try to put this in a copyleft license, the license will not qualify as free or open.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So re-licensing the project under different terms, thus providing different rights is out of the question, I am afraid.  &lt;em&gt;All&lt;/em&gt; copyleft let you do, is to say that downstream recipients must license their derivative works under an identical license, it does no let you impose terms that discriminates.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;I would like to see if I can discourage forking and derivatives for my project, more so from the general developer community.&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;There is no FLOSS license with anything like that.  Also, words like &quot;discourage&quot; is very confusing if they appear in a legal document such as a license, as they have no legal effect.  If you try to put such provisions in a custom license you write for yourself, your license will look amateurish and have less of a a chance of being taken serious (by courts and by developers).&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;I might be interested in dual-licensing here: According to &lt;a href=&quot;http://opensource.stackexchange.com/a/933/606&quot;&gt;this&lt;/a&gt; answer, I would likely license a restrictive license like I've noted above, but then a permissive license when used for educational uses. I would likely use the Apache or MIT license.&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Huh?  The answer you link to correctly say that there is no way this would work.&lt;br&gt;&#xA;Quote:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;So this would not be an effective way to control distribution.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;There is absolutely &lt;em&gt;no point&lt;/em&gt; in using multiple licensing if at least one of the licenses in the combo is permissive.  Permissive licenses means that &lt;em&gt;anybody&lt;/em&gt; permitted to do &lt;em&gt;whatever&lt;/em&gt; they want with your code - e.g. make derivatives closed source - that is why they are called &quot;permissive&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Combining a &lt;em&gt;permissive&lt;/em&gt; license with a &lt;em&gt;copyleft&lt;/em&gt; license will negate any legal effect imposed by the copyleft license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So what sort of licensing should you choose?  Well, a free and open license is ruled out, given your requirements.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So let see what you &lt;em&gt;can&lt;/em&gt; do by taking a new look at your requirements, but this time dropping the copyleft/free requirement:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;I would likely license a restrictive license like I've noted above,&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I take this to mean that you want to discourage forking and derivatives for the project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;IMHO, there is no point in &quot;discouraging&quot; people if you can't do anything about if they refuse to listen to you, because the people who're going to do it anyway are &lt;em&gt;not&lt;/em&gt; the nice people who enjoy cooperating. No, if you do this, the &lt;em&gt;only&lt;/em&gt; people that will fork your project are nasty people who are inconsiderate about the feeling of others (and probably about other things too).  If you're serious about this, slap a big red &quot;All Rights Reserved.&quot; on it.  That will at least give you access to legal remedies if they're not discouraged.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;but then a permissive license when used for educational uses.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Fine!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So just below the big red &quot;All Rights Reserved.&quot;, you put in nice, green, friendly letters: &quot;Inquiries about educational uses welcome.&quot;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This will take the project closed source, which would be legal for all the software libraries, as they're all permissive or have a linking excepetion.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It would also be legal for the images, because the ShareAlike on the images does not &quot;spill over&quot; to your program.  Just make sure you obey the attribution clause.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-27T02:16:30.920" LastActivityDate="2015-07-27T02:16:30.920" CommentCount="0" />
  <row Id="1349" PostTypeId="2" ParentId="1347" CreationDate="2015-07-26T16:40:13.060" Score="13" Body="&lt;p&gt;It is unacknowledged by the FSF, but was approved by the OSI in 2007.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are two main problems with &quot;custom licenses&quot;:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;em&gt;ghettoization&lt;/em&gt; - where the custom license creates its own ghetto with code that nobody else can use because of license incompatibilities&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;em&gt;legal hazards&lt;/em&gt; - where the terms of the license is not precise enough to be usable in litigation&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;The SimPL 2.0 has explicit provisons to allow downstream re-licensing to GPLv2 and GPLv3, so in that respect it works like GPLv2+ - there is no risk of ghettoization.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I just had a quick read-through, but it looks like it should stand up in court as well.  They've converted some of the twisty little passages of GPL, such as the patent-clause, into much shorter and more easy to understand language.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I could not spot any &lt;em&gt;obvious&lt;/em&gt; omissions (but this is the Internet, and I spent about 5 minutes on it, so don't treat this as professional advice).  The bottom line is: until it is tested in court, we don't really know how well it will stand up.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I tried to search for case law involving this, but could not find any.  It sees to fly under the radar on all the sites that do statistics on license use, so I do not think it has seen much use yet.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-26T18:04:24.020" LastActivityDate="2015-07-26T18:04:24.020" CommentCount="0" />
  <row Id="1351" PostTypeId="2" ParentId="21" CreationDate="2015-07-26T21:01:17.223" Score="0" Body="&lt;p&gt;The other explanations are accurate but here is a simpler version:&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Permissive&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;A permissive license typically lets anyone do anything with the code but cannot sue the author if there are bugs.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some also require anyone who distributes the code to mention where they got it from.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Copyleft&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;A copyleft license forces any &quot;derivative&quot; work to also be open source and copyleft.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You cannot use copyleft code in a permiasive licensed project or a closed source project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You cannot distribute copyleft binaries under any other license. For example Apple's App Store has a single license that all binaries are distributed under and it is not copyleft.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also there are others but these are the ones most people care about.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The restrictions of a copyleft license do not apply to the cppyright holder, but if they acced third party contributions to the code then the restrictions will apply.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Rivalry&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Because copyleft code cannot be used in permissive licensed open source projects there is some tension between people who prefer one type of license over the other.&lt;/p&gt;&#xA;" OwnerUserId="436" LastActivityDate="2015-07-26T21:01:17.223" CommentCount="2" />
  <row Id="1352" PostTypeId="5" CreationDate="2015-07-26T21:33:00.653" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-26T21:33:00.653" LastActivityDate="2015-07-26T21:33:00.653" CommentCount="0" />
  <row Id="1353" PostTypeId="4" CreationDate="2015-07-26T21:33:00.653" Score="0" Body="For questions about restrictions on open licenses, and for questions about placing restrictions, or handling restrictions with open projects" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-07-27T03:48:41.487" LastActivityDate="2015-07-27T03:48:41.487" CommentCount="0" />
  <row Id="1354" PostTypeId="5" CreationDate="2015-07-26T21:41:50.017" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-26T21:41:50.017" LastActivityDate="2015-07-26T21:41:50.017" CommentCount="0" />
  <row Id="1355" PostTypeId="4" CreationDate="2015-07-26T21:41:50.017" Score="0" Body="For questions about Free/Libre and Open Source Software. You can ask about the origin of the word, or it rationale for naming. For general cases, use the [terminology] tag. " OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-07-27T06:25:17.630" LastActivityDate="2015-07-27T06:25:17.630" CommentCount="0" />
  <row Id="1356" PostTypeId="2" ParentId="1340" CreationDate="2015-07-27T01:31:11.030" Score="1" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;But what about Community Wiki posts here at Stack Exchange? These posts have multiple contributors, and they can be edited by anyone. Furthermore, there is practically no ownership of these posts -&gt; They are owned by the community user, which isn't even a person. &lt;strong&gt;Community Wiki posts are owned by the community user&lt;/strong&gt;, not the members of the community who contribute to them.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;No they aren't, not in the sense of copyright ownership! They are just primarily attributed to the community user rather than the original author. In both cases the edit history shows other contributing authors and their respective IP contributions (for which they retain authorship and ownership.) Those individual contributions are licensed under the CC BY-SA 3.0 license, just like all other posts.&lt;/p&gt;&#xA;" OwnerUserId="190" LastActivityDate="2015-07-27T01:31:11.030" CommentCount="0" />
  <row Id="1357" PostTypeId="1" AcceptedAnswerId="1364" CreationDate="2015-07-27T02:11:13.960" Score="6" ViewCount="70" Body="&lt;p&gt;The &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; rel=&quot;nofollow&quot;&gt;Apache 2.0 License&lt;/a&gt; has a built-in linking exception:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So linking a library under Apache 2.0 into a main program licensed under GPLv3 does &lt;em&gt;not&lt;/em&gt; create a derivative work according to the the Apache 2.0 License.  In other words, the library is considered a &quot;mere aggregate&quot; in relation to the main program.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As I understand the Apache 2.0 license, in the case of linking, it leads to a situation where each component in the collection (i.e. the library and the main program) retains its &lt;em&gt;original&lt;/em&gt; license. If there are any patented software in the main program (under GPLv2), the patent termination and indemnification provisions of the Apache 2.0 license does not apply to it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, according to the &lt;a href=&quot;http://www.gnu.org/licenses/license-list.html#apache2&quot; rel=&quot;nofollow&quot;&gt;FSF&lt;/a&gt;, you can not do this. Quote:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Please note that this license [Apache 2.0] is not compatible with GPL version 2, because it has some requirements that are not in that GPL version. These include certain patent termination and indemnification provisions.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I have not been able to discover exactly &lt;em&gt;why&lt;/em&gt; the FSF declares the licenses incompatible, and what this incompatibility implies. It may, however, have something to do with FSF's position on linking:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In &lt;a href=&quot;http://gplv3.fsf.org/rms-why.html&quot; rel=&quot;nofollow&quot;&gt;Why Upgrade to GPL Version 3&lt;/a&gt; Richard M. Stallman, president of the FSF, writes:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Fortunately, license incompatibility only matters when you want to &lt;em&gt;link&lt;/em&gt;, merge or combine code from two different programs into a single program. There is no problem in having GPLv3-covered and GPLv2-covered programs side by side in an operating system. For instance, the TeX license and the Apache license are incompatible with GPLv2, but that doesn't stop us from running TeX and Apache in the same system with Linux, Bash and GCC. &lt;em&gt;This is because they are all separate programs&lt;/em&gt;.  (My emphasis.)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I don't think that anybody will dispute that merging or combining code (i.e. copy/pasting some code into another project) will produce a derivative, but including &quot;linking&quot; in the actions that shall produce a derivative is not universally recognized, but seems to be the position of the FSF (assuming its founder and president speaks on behalf of the organiation).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-java.en.html&quot; rel=&quot;nofollow&quot;&gt;this essay&lt;/a&gt;, which is published of FSF's official website, and therefore can be assumed to use the phrase &quot;FSF's position&quot; with the approval from the FSF, David Turner writes:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;It has always been the FSF's position that dynamically linking applications to libraries creates a single work derived from both the library code and the application code. The GPL requires that all derivative works be licensed as a whole under the terms of the GPL, an effect which can be described as “hereditary.”&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;However, the Apache Software Foundation &lt;a href=&quot;http://www.apache.org/licenses/GPL-compatibility.html&quot; rel=&quot;nofollow&quot;&gt;disagrees&lt;/a&gt; about them being incompatible.  They write:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Despite our best efforts, the FSF has never considered the Apache License to be compatible with GPL version 2, citing the patent termination and indemnification provisions as restrictions not present in the older GPL license. The Apache Software Foundation believes that you should always try to obey the constraints expressed by the copyright holder when redistributing their work.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So the Apache Software Foundation says that you &lt;em&gt;should&lt;/em&gt; not do this, because the FSF disapprove of it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But: &lt;em&gt;Could&lt;/em&gt; I do it?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In other words, are the licenses really incompatible - as the FSF say. Or do the linking exception in Apache 2.0 give me an explicit permission to link a Apache 2.0 library into software under GPLv2?&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-27T07:24:35.073" LastActivityDate="2015-07-28T14:27:22.973" Title="Can I link a Apache 2.0 library into software under GPLv2?" Tags="&lt;license-compatibility&gt;&lt;apache-2.0&gt;&lt;gpl-2&gt;" AnswerCount="2" CommentCount="8" />
  <row Id="1358" PostTypeId="2" ParentId="1357" CreationDate="2015-07-27T05:30:01.470" Score="-1" Body="&lt;p&gt;I think you misunderstand what the FSF and the Apache foundation have said.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Yes, you are allowed to link against Apache code from GPL code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The Apache license clearly states that you don't need to follow any of its &quot;derivative&quot; terms if all you do is link against it.&lt;/p&gt;&#xA;" OwnerUserId="436" LastEditorUserId="168" LastEditDate="2015-07-27T08:45:10.967" LastActivityDate="2015-07-27T08:45:10.967" CommentCount="6" />
  <row Id="1359" PostTypeId="1" AcceptedAnswerId="1360" CreationDate="2015-07-27T08:29:45.463" Score="13" ViewCount="918" Body="&lt;p&gt;I am looking for a free, permissive license for a small project, providing as &lt;em&gt;few restrictions&lt;/em&gt; as possible on the use of my code.  Somebody recommended the &lt;a href=&quot;http://www.wtfpl.net/about/&quot;&gt;WTFPL&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;My requirements:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I don't care who uses my code or for what purpose;&lt;/li&gt;&#xA;&lt;li&gt;I don't care if somebody sells my work or uses it in a closed source project;&lt;/li&gt;&#xA;&lt;li&gt;I am not concerned about the language in the license or whether it may offend someone;&lt;/li&gt;&#xA;&lt;li&gt;I don't want to modify the license.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Is the WTFPL a good license for my project, given the requirements above?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If not, why not?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is there a better alternative?&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-28T01:51:23.273" LastActivityDate="2015-08-05T10:41:54.930" Title="Should I use the WTFPL for my FLOSS project?" Tags="&lt;license-recommendation&gt;&lt;wtfpl&gt;" AnswerCount="5" CommentCount="2" FavoriteCount="2" />
  <row Id="1360" PostTypeId="2" ParentId="1359" CreationDate="2015-07-27T08:36:16.467" Score="8" Body="&lt;p&gt;By using WTFPL:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;you will not get any attribution when somebody use your work&lt;/li&gt;&#xA;&lt;li&gt;offending language/title of the license itself &lt;strong&gt;may potentially&lt;/strong&gt; cause your project to be filtered out in some circumstances&lt;/li&gt;&#xA;&lt;li&gt;you don't drop any potential liability (that might possibly get you into trouble in some countries)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;As for better alternative, look at the MIT License.&lt;/p&gt;&#xA;" OwnerUserId="691" LastEditorUserId="691" LastEditDate="2015-07-28T11:45:30.383" LastActivityDate="2015-07-28T11:45:30.383" CommentCount="9" />
  <row Id="1361" PostTypeId="2" ParentId="1359" CreationDate="2015-07-27T09:46:48.900" Score="14" Body="&lt;p&gt;The WTFPL fulfills your requirements.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Three very similar things you can do with your requirements are&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Release it under the WTFPL&lt;/li&gt;&#xA;&lt;li&gt;Release it under CC0&lt;/li&gt;&#xA;&lt;li&gt;Release it into the public domain&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;These things are effectively equivalent, but in some jurisdictions it is impossible to release copyright into the public domain. Creative Commons &lt;a href=&quot;https://creativecommons.org/about/cc0&quot; rel=&quot;nofollow&quot;&gt;writes about this&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Dedicating works to the public domain is difficult if not impossible for those wanting to contribute their works for public use before applicable copyright or database protection terms expire. Few if any jurisdictions have a process for doing so easily and reliably. Laws vary from jurisdiction to jurisdiction as to what rights are automatically granted and how and when they expire or may be voluntarily relinquished. More challenging yet, many legal systems effectively prohibit any attempt by these owners to surrender rights automatically conferred by law, particularly moral rights, even when the author wishing to do so is well informed and resolute about doing so and contributing their work to the public domain.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The first two differ in that CC0 places the work in the public domain if possible, and if not grants you a license to do whatever. The WTFPL doesn't attempt to put anything in the public domain, but always grants you a license to do whatever.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Further, the WTFPL makes you more of a rebel, and is more likely to confuse and scare suits. Whether that's a bug or a feature is up to you.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;More conservative approaches maintain the copyright, but are still very permissive. They include&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The MIT/expat license, which is a very simple permissive license, has a liability disclaimer, and is compatible with pretty much every other licensing model.&lt;/li&gt;&#xA;&lt;li&gt;The Apache2 license, which is slightly more complex, and includes a patent grant. It is compatible with the GPLv3 but not GPLv2 or earlier.&lt;/li&gt;&#xA;&lt;li&gt;Any of the BSD licenses&lt;/li&gt;&#xA;&lt;li&gt;The ISC license&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;They have the advantage of being better understood and are more battle-tested in a court of law.&lt;/p&gt;&#xA;" OwnerUserId="97" LastEditorUserId="97" LastEditDate="2015-08-05T10:41:54.930" LastActivityDate="2015-08-05T10:41:54.930" CommentCount="5" />
  <row Id="1362" PostTypeId="2" ParentId="1359" CreationDate="2015-07-27T09:50:39.717" Score="4" Body="&lt;p&gt;The WTFPL is a license that basically puts the work licensed with it under &lt;a href=&quot;https://en.wikipedia.org/wiki/Public_Domain&quot; rel=&quot;nofollow&quot;&gt;Public Domain&lt;/a&gt;. That is possible and there are multiple ways to do so.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Basically putting a work into public domain allows everyone to use it as he sees fit. That is the same as the WTFPL claims. This also fulfills your requirements as you put them in the OP.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Acknowledgement&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One point here that needs some elaboration is the right to get attributed. While a Public Domain work asserts no rights for the author, it still is needed in some countries (like germany) to acknowledge the original author of the work (otherwise you are plagiarizing). So depending on the jurisdiction someone making a derivate of your public domain work may still put some acknowledgement to you. That is called &lt;a href=&quot;https://wiki.creativecommons.org/wiki/Frequently_Asked_Questions#What_are_moral_rights.2C_and_how_could_I_exercise_them_to_prevent_uses_of_my_work_that_I_don.E2.80.99t_like.3F&quot; rel=&quot;nofollow&quot;&gt;moral rights&lt;/a&gt;, it may also (depending on jurisdiction) include the right, that your work isn't used to belittle or defame you.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another point often brought forward is the liability for damages your work creates. Many people recommend to put a disclaimer to deny all liability, something like this example:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;This documentation is provided on an “as is” basis, without warranty of any kind. Use at your own risk! Under no circumstances shall the author(s) or contributor(s) be liable for damages resulting directly or indirectly from the use or non-use of this documentation.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;While such a disclaimer seems useful, it most likely does nothing. In most jurisdictions you cannot with a simple disclaimer avoid to be responsible for gross carelessness. At the same time any user of your work who get damages through the usage cannot just shift the responsibility to you, if you avoided major carelessness. In many cases a warning about possibilities of misuse that lead to damages may be enough to avoid being accountable. So the usefulness of such a disclaimer is low.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The WTFPL doesn't use such an disclaimer, but you're free to add one yourself, if you feel the need for it. As I explained, it will not do much, but depending on your jurisdiction it may have a bit of influence.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Strong language&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Lastly it may be pointed out, that child filters may restrict the availability of your work, if the inclusion of the license leads to the inclusion of the language that is considered strong by some. I personally wouldn't care, but if you do, you should use another way to put your work into public domain. Your OP says, that you don't really care either, so WTFPL is OK.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;There are some other ways to put your work into public domain&lt;/strong&gt;:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;You can just state, that this work is put into the public domain. You can add or not add a disclaimer to be not liable for any damages your work causes.&lt;/li&gt;&#xA;&lt;li&gt;You can use the &lt;a href=&quot;https://creativecommons.org/publicdomain/zero/1.0/&quot; rel=&quot;nofollow&quot;&gt;CC0 license&lt;/a&gt; from Creative Commons to declare your work as public domain.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Is a permissive license an alternative?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A permissive license like the MIT license or the BSD license granting the user a lot of rights, but they still reserve some for the original author. The WTFPL and other public domain dedications give the user more rights. If you think about the WTFPL the usual permissive open source licenses are more restrictive. Still, your requirements as you put them in the OP are also fulfilled by typical permissive licenses, they allow usage in a closed source project, allow reselling your work and allow the usage for any purpose. So depending how important the rights they still retain are for you, they may be an alternative.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Go ahead, use the WTFPL.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-27T15:22:52.987" LastActivityDate="2015-07-27T15:22:52.987" CommentCount="8" />
  <row Id="1363" PostTypeId="2" ParentId="1359" CreationDate="2015-07-27T16:26:20.043" Score="1" Body="&lt;p&gt;&lt;strong&gt;Do you want to keep the copyright (in jurisdictions where it's possible to &lt;em&gt;not&lt;/em&gt; keep it)?&lt;/strong&gt; Although &lt;a href=&quot;http://www.wtfpl.net/txt/copying/&quot; rel=&quot;nofollow&quot;&gt;WTFPL&lt;/a&gt; is brief and to the point, it can be argued that it's rather lacking in the legalese. The suits will &lt;em&gt;definitely&lt;/em&gt; not be impressed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;If you want to keep the copyright, WTFPL will get the job done&lt;/strong&gt;. However, as I and others have mentioned, WTFPL is not going to impress anyone who wears a suit to work. &lt;strong&gt;&lt;a href=&quot;http://opensource.org/licenses/MIT&quot; rel=&quot;nofollow&quot;&gt;MIT&lt;/a&gt; is probably better for these purposes&lt;/strong&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;If you don't want to keep the copyright, put it into the public domain. &lt;a href=&quot;https://creativecommons.org/publicdomain/zero/1.0/&quot; rel=&quot;nofollow&quot;&gt;CC0&lt;/a&gt; is a good tool for this&lt;/strong&gt;, since it covers jurisdictions where you can't actually put it into the public domain by using an extremely permissive license in those jurisdictions. But there are other possibilities: for example, &lt;a href=&quot;https://sqlite.org/&quot; rel=&quot;nofollow&quot;&gt;SQLite&lt;/a&gt; is public-domain, but the SQLite folks also sell licenses to people in jurisdictions where the public domain isn't feasible.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Bottom line: MIT is wordier, but a stronger equivalent to WTFPL. CC0 goes even further, and may match your intentions better, but I can't be sure of that.&lt;/p&gt;&#xA;" OwnerUserId="962" LastActivityDate="2015-07-27T16:26:20.043" CommentCount="0" />
  <row Id="1364" PostTypeId="2" ParentId="1357" CreationDate="2015-07-27T18:10:30.307" Score="4" Body="&lt;p&gt;(&lt;em&gt;Here's my best guess. This is obviously a very hairy problem to work through, and I've tried my best to reduce the problem down to basic principles. However, I may gotten some of those basic principles incorrect. It should go without saying that this is not legal advice.&lt;/em&gt;)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;a href=&quot;http://www.gnu.org/licenses/license-list.en.html#apache2&quot; rel=&quot;nofollow&quot;&gt;Apache License 2.0 (APL) is incompatible with the GPLv2&lt;/a&gt; simply because of the licenses' differing rules about patents (and the GPLv2's requirement that it must apply to the work as a whole). I'm not sure which particular clause is problematic, but the APL has a clause about termination of patent licenses that looks unlike anything in the GPLv2. If the GPLv2 indeed has no similar requirement to this, the APL and GPLv2 are incompatible:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If You institute patent litigation against any entity... alleging that the Work&#xA;       or a Contribution incorporated within the Work constitutes direct&#xA;       or contributory patent infringement, then any patent licenses&#xA;       granted to You under this License for that Work shall terminate...&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Such an additional restriction is sufficient to render the licenses incompatible, since the GPLv2 could not apply to the work as a whole while the APL imposes an additional requirement.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, this question asks whether we can &lt;em&gt;sidestep&lt;/em&gt; this incompatibility by having the linked works &lt;em&gt;not considered&lt;/em&gt; as a combined derivative work. For the purposes of this answer, we will assume that FSF's opinion that linking creates a derivative work is legally correct. (If it is not correct, and linking does not create a combined work, then you're home free and can ignore the rest of this answer! In that case, you need not worry about how the licenses interact, because they're &lt;em&gt;not interacting&lt;/em&gt; -- they're completely separate works!)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The crux of this question is whether the APLs linking exception is sufficient to allow applying the GPLv2 to the entire software. I think the answer is &lt;strong&gt;no&lt;/strong&gt;: even if the APL library doesn't cause the APL to apply to the GPLv2 program, the GPLv2 program &lt;em&gt;does&lt;/em&gt; cause the GPLv2 license to apply to the library. However, the licenses are incompatible (per the patent problem, above).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It doesn't matter whether the APL considers the works combined; it matters whether &lt;em&gt;copyright law&lt;/em&gt; considers the works combined, and whether the GPLv2's section 2(b) applies to the library as part of a work that &quot;in whole or in part contains or is derived from the [GPL-licensed] Program.&quot;&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If copyright law does consider them part of one work, then the library must (but cannot) be included under the work's overall GPL license.&lt;/li&gt;&#xA;&lt;li&gt;If copyright law considers them separate works instead, then there is no license interaction, and therefore no incompatibility.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="50" LastEditorUserId="29" LastEditDate="2015-07-28T14:27:22.973" LastActivityDate="2015-07-28T14:27:22.973" CommentCount="1" />
  <row Id="1365" PostTypeId="1" CreationDate="2015-07-27T23:36:54.753" Score="4" ViewCount="243" Body="&lt;p&gt;Does anyone know what the license is for Mondor's MS Captcha? The only information that I could find on their site was:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&quot;&lt;strong&gt;License&lt;/strong&gt;&lt;br&gt;&#xA;  MS Captcha is free to use in any kind of projects. The software is licensed, not sold.&quot;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;What would be the equivalent of this statement in terms of the existing Open Source licenses out there?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://kirsanov.net/page/ASPNET-CAPTCHA.aspx&quot; rel=&quot;nofollow&quot;&gt;Official MS Captcha Project Page&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="1011" LastEditorUserId="606" LastEditDate="2015-07-28T02:34:48.793" LastActivityDate="2015-07-28T14:30:56.113" Title="License for Mondor's MS Captcha?" Tags="&lt;licensing&gt;" AnswerCount="4" CommentCount="0" FavoriteCount="1" />
  <row Id="1366" PostTypeId="2" ParentId="1359" CreationDate="2015-07-28T01:01:33.700" Score="1" Body="&lt;p&gt;The best license for work like this is Unlicense (&lt;a href=&quot;http://unlicense.org&quot; rel=&quot;nofollow&quot;&gt;http://unlicense.org&lt;/a&gt;).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is very similar to WTFPL without having an offensive name and also without the strange language in the license text is clearly intended to be entertaining but fails to do so (in my opinion). You might not be offended by the language but other people will be.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Unlicense has a nice single line summary:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;This is free and unencumbered software released into the public domain.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;And remains crystal clear once you go into the details:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Anyone is free to copy, modify, publish, use, compile, sell, or&#xA;  distribute this software, either in source code form or as a compiled&#xA;  binary, for any purpose, commercial or non-commercial, and by any&#xA;  means.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;WTFPL is lacking a section limiting your liability which could make you a target for a lawsuit if some corporation uses your code and hits a nasty bug. Unlicense does include a section on liability just like every good open source license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Finally Unlicense nicely handles the challenging problem of &quot;public domain&quot; being different from one jurisdiction to the next, especially those where it isn't actually legal to release code into public domain using a license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;a href=&quot;http://unlicense.org&quot; rel=&quot;nofollow&quot;&gt;http://unlicense.org&lt;/a&gt; website is also an excellent resource explaining everything you need to know about using the license.&lt;/p&gt;&#xA;" OwnerUserId="436" LastActivityDate="2015-07-28T01:01:33.700" CommentCount="7" />
  <row Id="1367" PostTypeId="2" ParentId="1365" CreationDate="2015-07-28T02:29:52.287" Score="7" Body="&lt;p&gt;What you quote &lt;em&gt;is&lt;/em&gt; the license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is a custom, informal, non-free license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The first sentence says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;MS Captcha is free to use in any kind of projects.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;It says that you can &lt;em&gt;use&lt;/em&gt; this software in other software projects, without restrictions on what &lt;em&gt;kind&lt;/em&gt; of project it is used for.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Please note that no &lt;em&gt;other&lt;/em&gt; rights than the right to use is licensed. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The second and last sentence says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The software is licensed, not sold.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This is ambiguous.  It may just mean that you can go ahead and download the software without paying a fee, or it may impose a non-commercial restriction on use, meaning: &quot;you are not allowed to sell this software&quot;. Because the license is unclear on this point, I would strongly advice against selling a product where you use this software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is this a &lt;em&gt;free software&lt;/em&gt; license?  For example: Does it allow you to fork the project by changing the code and making the result publicly available.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Unfortunately, no.  This permission to do this is not given in the license.  This means that default copyright law (that makes creating adaptations a reserved right) apply.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I doubt that the &lt;em&gt;intent&lt;/em&gt; of the author is to make this a non-free license. But since the right to adapt is not explicitly mentioned in the license, this right is technically still reserved, imposing a legal hazard (i.e. you have no &lt;em&gt;guarantee&lt;/em&gt; that this omission is unintentional) on users if they choose to treat this as a free software license.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;What would be the equivalent of this statement in terms of the existing Open Source licenses out there?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Since this license grants the user almost no freedoms, it cannot be compared to, or expressed in the terms of, existing Open Source licenses.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Personally, I would not even &lt;em&gt;think&lt;/em&gt; about using code that are licensed under such unclear, ambiguous terms in any project of mine. YMMV.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-28T02:37:24.403" LastActivityDate="2015-07-28T02:37:24.403" CommentCount="0" />
  <row Id="1368" PostTypeId="2" ParentId="1365" CreationDate="2015-07-28T03:04:52.143" Score="5" Body="&lt;p&gt;In addition to what Free Radical has said, there are other issues with this application.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As far as I can tell, this is a binary-only distribution (the zip file contains a Windows DLL and a text file). You not only have no declared rights to modify it, you are prevented from doing so. As such, it can not be considered &quot;Open Source&quot; under any possible interpretation. The closest I might come to a classification is the old Freeware concept. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Combined with the minimal license terms, this is almost an attempt to put it in the public domain. And, as mentioned elsewhere, it almost certainly fails miserably.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now consider the purpose of this tool. It is often used to verify that a site is being accessed by a human, rather than a bot. But what else is it doing? What other information is it capturing about the user? Without source code, you have absolutely no idea.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There's a reason &lt;code&gt;openssl&lt;/code&gt; is one of the most widely used libraries for security functions: widespread expert review. The recent discovery of bugs  in &lt;code&gt;openssl&lt;/code&gt; may seem to argue against this, but their discovery and the fixes came about precisely &lt;em&gt;because&lt;/em&gt; it is open source. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Personally, I wouldn't touch this (Mondor's Captcha) with a 100ft pole.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Finally, the &quot;license&quot; contains no disclaimer of liability. Mondor could find themselves in a world of hurt, legally, if a site &quot;protected&quot; by this was breached by a bot and the site owner could show that the loss was directly attributable to this component.&lt;/p&gt;&#xA;" OwnerUserId="29" LastEditorUserId="29" LastEditDate="2015-07-28T14:30:56.113" LastActivityDate="2015-07-28T14:30:56.113" CommentCount="2" />
  <row Id="1369" PostTypeId="2" ParentId="1365" CreationDate="2015-07-28T07:13:28.427" Score="1" Body="&lt;p&gt;Additionally to &lt;a href=&quot;http://opensource.stackexchange.com/a/1367/55&quot;&gt;FreeRadicals excellent answer&lt;/a&gt; I can say that the &lt;a href=&quot;http://forum.freelance.lv/index.php?PHPSESSID=e51a6cd6594fdd41cc23bd26bbbec15f&amp;amp;topic=947.0&quot; rel=&quot;nofollow&quot;&gt;FAQ&lt;/a&gt; covers this topic shortly and clarifies the authors intent a bit:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Q 1: What kind of licensing is tied to your captcha control?&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;A: None. Component is freeware and there is no license for it. You are&#xA;  free to use it when, where and how you'd like to. And yes, it is free&#xA;  to use also in commercial projects.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So, you can use it in any project, even commercial ones. But it is &lt;a href=&quot;https://en.wikipedia.org/wiki/Freeware&quot; rel=&quot;nofollow&quot;&gt;freeware&lt;/a&gt; not open source, so no forks, you can only use it.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-28T07:23:24.533" LastActivityDate="2015-07-28T07:23:24.533" CommentCount="2" />
  <row Id="1370" PostTypeId="2" ParentId="1273" CreationDate="2015-07-28T07:14:49.080" Score="3" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;Are there any licenses that allow me this [to forbid distributing my open source project for less money than I do]?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;No, no such license exists (AFAIK).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As pointed out by Abhi Beckert, there is nothing to stop you from hiring a lawyer to write such a license for you.  To be effective, the price-clause in this custom license must disallow &lt;em&gt;all&lt;/em&gt; distribution models that undercut you on price.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This custom license could have a CopyLeft-clause to pass the price-restriction on to further downstream derivatives.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;if so for what reasons would these licenses (not) be considered Open Source/Free?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Provided you mean Open Source as &lt;a href=&quot;http://opensource.org/osd-annotated&quot; rel=&quot;nofollow&quot;&gt;defined by the OSI&lt;/a&gt; such a license would violate this clause:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The license shall not restrict any party from selling or giving away the software as a component of an aggregate software distribution containing programs from several different sources.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I.e. if your custom license would disallow creating an aggregate software distribution with your project and some other program (e.g. &quot;Hello World&quot;), &lt;em&gt;unless&lt;/em&gt; that distribution is sold at or above a specific price point, then the license would not be an Open Source-license as defined by the OSI.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Provided you mean Free as &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.en.html&quot; rel=&quot;nofollow&quot;&gt;defined by the FSF&lt;/a&gt; such a license would violate the freedom to distribute. &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Freedom to distribute (freedoms 2 and 3) means you are free to redistribute copies, either with or without modifications, either gratis or charging a fee for distribution, to anyone anywhere.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So according to the FSF, &lt;em&gt;any&lt;/em&gt; license clause that disallows distribution of copies &lt;em&gt;unless&lt;/em&gt; that distribution is sold at or above a specific price point will not be a Free Software-license as defined by the FSF.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;TL;DR: Yes, you can create a custom license that does this, but it would &lt;em&gt;not&lt;/em&gt; qualify as Open Source under the OSI defintion, nor as Free Software under the FSF definition.&lt;/p&gt;&#xA;" OwnerUserId="606" LastActivityDate="2015-07-28T07:14:49.080" CommentCount="0" />
  <row Id="1371" PostTypeId="1" CreationDate="2015-07-28T07:53:39.283" Score="9" ViewCount="893" Body="&lt;p&gt;I know &lt;code&gt;CC0&lt;/code&gt; and the &lt;code&gt;WTFPL&lt;/code&gt; for example exist to grant all rights associated with the public domain, without placing it in the public domain, because this is difficult, or in some cases impossible. I know it is impossible in Norway and Germany.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Why is this difficult, and how can I release some project effectively into the public domain, for jurisdictions that have such a concept?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If it varies greatly per jurisdiction, how can I do it for the US?&lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-07-29T21:22:10.793" Title="How can I place software in the public domain" Tags="&lt;public-domain&gt;" AnswerCount="4" CommentCount="0" FavoriteCount="2" />
  <row Id="1372" PostTypeId="2" ParentId="1371" CreationDate="2015-07-28T08:09:27.940" Score="6" Body="&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The safest way to signal your intent to give up all rights on your work currently is CC0 in most jurisdictions. The safest way to use works in the public domain is to still do it like moral rights apply, even if the copyright in your country doesn't know the concept.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;First of all, most jurisdictions have some concept that is more or less similar to public domain (in germany for instance 'Gemeinfreiheit'). But only some countries allow to explicitly assign a work to public domain. So in many jurisdictions a work only becomes public domain, if the time for exclusive rights expire (70 years after authors death in many countries).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To go more into detail here, the &lt;a href=&quot;https://en.wikipedia.org/wiki/Public_domain#Application_to_copyrightable_works&quot;&gt;Wikipedia-article&lt;/a&gt; covers 4 ways a work can become public domain.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Works not covered by copyright law&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is for works, that for some reasons are not covered by copyright laws. This is working in most jurisdictions, although there might be different rules what is covered and what not.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Expiration of copyright&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That's what I wrote above, pretty much all jurisdiction have a limit on how long a copyright can be claimed. After that the work can be counted as public domain.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Government works&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is varying very much between jurisdictions. Which of governmental works (or works of other public bodies) is counted as public domain is very dependent on local laws.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Dedicating works to the public domain&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is the case the question implicitly asks. The author explicitly applies his works to public domain. Wikipedia writes here:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Few if any legal systems have a process for reliably donating works to&#xA;  the public domain. They may even prohibit any attempt by copyright&#xA;  owners to surrender rights automatically conferred by law,&#xA;  particularly moral rights.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;As can be seen, this is the difficult part. Countries like Germany know the concept of &lt;a href=&quot;https://en.wikipedia.org/wiki/Moral_rights_(copyright_law)&quot;&gt;moral rights&lt;/a&gt;, that you cannot give up. These cover the rights of the author for attribution or that a work isn't used to denigrate the author.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Moral rights&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It has to be noted, that many countries maintain the moral rights even after the commercial rights are expired. So in these countries you still may not use a work of a long dead author for example without proper attribution. In these cases you can say that it is impossible for a work to really properly become part of the public domain. The &lt;a href=&quot;https://en.wikipedia.org/wiki/Berne_Convention&quot;&gt;Berne Convention&lt;/a&gt; includes moral rights, although the final ratification still differs strongly even between signatories.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Even for the US, that hasn't the concept of moral rights, it still might be against other laws to violate the moral rights, for instance laws against defamation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;How can I dedicate a work to public domain&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can simply declare, that you put your work under public domain. This may even work in countries that haven't the concept: I remember a law-suit, there the court accepted the public domain dedication as the authors intent to give up his rights.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also there are some licenses (you name CC0 and WTFPL) that work in that way and give rights similar to what Public Domain would mean. CC0 seems a pretty safe way to make this work in most jurisdictions. Even if your country allows to dedicate a work to public domain, it may be safer to use CC0, as a user in another country might still not be allowed to use your work as PD.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Still, be it a declaration of public domain or CC0, you will keep your moral rights in countries where it applies. So it may be safe to use such works still with proper attribution and not use it in an abusive way.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-07-28T08:38:40.457" LastActivityDate="2015-07-28T08:38:40.457" CommentCount="7" />
  <row Id="1373" PostTypeId="2" ParentId="1365" CreationDate="2015-07-28T08:09:30.600" Score="2" Body="&lt;p&gt;This software is freeware, and not free/libre software and/or open source software (see &lt;a href=&quot;http://opensource.stackexchange.com/questions/1375/what-is-the-relation-and-or-difference-between-freeware-and-free-software&quot;&gt;What is the relation and/or difference between freeware and free software?&lt;/a&gt; for the difference)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Its licensing conditions are unclear, and it is likely that the author of the software didn't know much about licensing issues (which is completely reasonable. They're a developer, Jim, not a lawyer).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The clearest the intention of the licensing is put in the FAQ&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Q 1: What kind of licensing is tied to your captcha control?&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;A: None. Component is freeware and there is no license for it. You are&#xA;  free to use it when, where and how you'd like to. And yes, it is free&#xA;  to use also in commercial projects.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The way that is phrased is legally nonsense. The license is the agreement between you and the publisher of the software of what you can and can't do. If the software doesn't have a license, you're not allowed to do much with it (apart from the implicit license to use the software, which is the clear intent of making it available for download without further conditions)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The statements that &quot;there is no license for it.&quot; and &quot;You are free to use it when, where and how you'd like to&quot; are mutually exclusive. But the authors intent is clearly for you to be allowed to use it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This leads me to believe you are allowed to:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use the component in your software&lt;/li&gt;&#xA;&lt;li&gt;Distribute your software linking against the component, if the end user installs the component themselves.&lt;/li&gt;&#xA;&lt;li&gt;Release your software under a permissive license or the LGPL (with the above distribution style)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;It is unclear if you are allowed to:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Distribute your software &lt;em&gt;including&lt;/em&gt; the component. It certainly seems to be the intention of the author, but if they change their mind, and decide, no, that's not OK, it's unclear how it would stand up in a court of law. I think it's very likely that it would stand up, but I'm a guy on the internet. Would you want to be the person who tells the judge some guy on the internet told you it was probably OK?&lt;/li&gt;&#xA;&lt;li&gt;Reverse engineer and modify the software. See above.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;It is certainly not allowed to:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Release your software under the GPL. You're linking against a non-free library&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="97" LastEditorUserId="97" LastEditDate="2015-07-28T08:57:39.677" LastActivityDate="2015-07-28T08:57:39.677" CommentCount="0" />
  <row Id="1374" PostTypeId="2" ParentId="1371" CreationDate="2015-07-28T08:24:41.173" Score="1" Body="&lt;p&gt;Placing your work in the public domain is impossible in many countries and even illegal in some.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;a href=&quot;http://unlicense.org&quot; rel=&quot;nofollow&quot;&gt;Unlicense&lt;/a&gt; license will place your work in public domain for people who live in a country where it's possible, and license the work as closely as possible to public domain everyone else.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That's my preferred approach.&lt;/p&gt;&#xA;" OwnerUserId="436" LastActivityDate="2015-07-28T08:24:41.173" CommentCount="7" />
  <row Id="1375" PostTypeId="1" AcceptedAnswerId="1376" CreationDate="2015-07-28T08:44:55.037" Score="7" ViewCount="1128" Body="&lt;p&gt;Freeware and free software sound very similar. What is the relation between them?&lt;/p&gt;&#xA;" OwnerUserId="97" LastEditorUserId="190" LastEditDate="2015-07-28T08:47:50.430" LastActivityDate="2015-07-30T13:37:42.427" Title="What is the relation and/or difference between freeware and free software?" Tags="&lt;terminology&gt;&lt;free-software&gt;&lt;freeware&gt;" AnswerCount="4" CommentCount="3" />
  <row Id="1376" PostTypeId="2" ParentId="1375" CreationDate="2015-07-28T08:53:14.873" Score="14" Body="&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Freeware&quot;&gt;Freeware&lt;/a&gt; is software that is released and can be downloaded and used without cost. No other rights are implied by the freeware label (although the author might offer more). So freeware doesn't imply:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;access to the source code&lt;/li&gt;&#xA;&lt;li&gt;commercial use&lt;/li&gt;&#xA;&lt;li&gt;right to redistribute&lt;/li&gt;&#xA;&lt;li&gt;right to change&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;All things &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_software#Definition_and_the_Four_Freedoms&quot;&gt;free software&lt;/a&gt; does allow. Free software is defined by the four freedom it grants:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Freedom 0: The freedom to run the program for any purpose.&lt;/li&gt;&#xA;&lt;li&gt;Freedom 1: The freedom to study how the program works, and change it to make it do what you wish.&lt;/li&gt;&#xA;&lt;li&gt;Freedom 2: The freedom to redistribute copies so you can help your neighbor.&lt;/li&gt;&#xA;&lt;li&gt;Freedom 3: The freedom to improve the program, and release your improvements (and modified versions in general) to the public, so that the whole community benefits.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="55" LastEditorUserId="168" LastEditDate="2015-07-28T09:47:13.723" LastActivityDate="2015-07-28T09:47:13.723" CommentCount="1" />
  <row Id="1377" PostTypeId="2" ParentId="1375" CreationDate="2015-07-28T09:13:49.333" Score="6" Body="&lt;p&gt;&quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Freeware&quot;&gt;Freeware&lt;/a&gt;&quot; is free as in &lt;em&gt;free beer&lt;/em&gt;.  &quot;&lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.en.html&quot;&gt;Free software&lt;/a&gt;&quot; is free as in &lt;em&gt;freedom&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The difference is elaborated on in the answers to &lt;a href=&quot;http://opensource.stackexchange.com/questions/620/what-is-the-difference-between-free-as-in-beer-and-free-as-in-speech&quot;&gt;this question&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Among the restrictions commonly imposed on freeware are:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;No source code is provided (so you cannot adapt or review for security holes).&lt;/li&gt;&#xA;&lt;li&gt;No permission to adapt, even if source code is provided.&lt;/li&gt;&#xA;&lt;li&gt;Restrictions on &lt;em&gt;type of use&lt;/em&gt;. (E.g. &quot;This program can only be used for good, not evil.&quot;)&lt;/li&gt;&#xA;&lt;li&gt;Restrictions on &lt;em&gt;type of users&lt;/em&gt;. (E.g. &quot;This program can not be used by the military.&quot;)&lt;/li&gt;&#xA;&lt;li&gt;Restrictions on distribution. (E.g. &quot;You're not allowed to redistribute its program. it shall &lt;em&gt;only&lt;/em&gt; be available for download from the website &lt;code&gt;example.com&lt;/code&gt;.)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;However, this list is by no means complete.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Free software&lt;/em&gt; on the other hand, obliges the author to make available the source code to anyone who receives the program, and the owner (or others) can not impose &lt;em&gt;any&lt;/em&gt; restrictions on type of use, type or user, or distribution.&lt;/p&gt;&#xA;" OwnerUserId="606" LastActivityDate="2015-07-28T09:13:49.333" CommentCount="0" />
  <row Id="1378" PostTypeId="2" ParentId="620" CreationDate="2015-07-28T09:41:31.353" Score="2" Body="&lt;p&gt;This question is answered up front in the FSF's &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.en.html&quot; rel=&quot;nofollow&quot;&gt;What is free software?&lt;/a&gt;, which starts out by using the often quoted &quot;free beer&quot; / &quot;free speech&quot; analogy.  Quote:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;“Free software” means software that respects users' freedom and community. Roughly, it means that the users have the freedom to run, copy, distribute, study, change and improve the software. Thus, “free software” is a matter of liberty, not price. To understand the concept, you should think of “free” as in “free speech,” not as in “free beer”. We sometimes call it “libre software” to show we do not mean it is gratis.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I think this quote answers the OP's question pretty well.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However,  to make the meaning of &quot;free software&quot; crystal clear, the FSF goes on to list the &quot;four essential freedoms&quot; that characterizes free software:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;The freedom to run the program as you wish, for any purpose (freedom 0).&lt;/li&gt;&#xA;  &lt;li&gt;The freedom to study how the program works, and change it so it does your computing as you wish (freedom 1). Access to the source code is a precondition for this.&lt;/li&gt;&#xA;  &lt;li&gt;The freedom to redistribute copies so you can help your neighbor (freedom 2).&lt;/li&gt;&#xA;  &lt;li&gt;The freedom to distribute copies of your modified versions to others (freedom 3). By doing this you can give the whole community a chance to benefit from your changes. Access to the source code is a precondition for this.&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This is IMHO, a very good definition of &quot;free software&quot;. In just four short bullet points, we are given all the information we need to decide whether something qualify as &quot;free software&quot; or not.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In contrast, software that is just available at zero cost (aka. &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Freeware&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;freeware&lt;/em&gt;&lt;/a&gt;&quot;) may not provide &lt;em&gt;any&lt;/em&gt; of these freedoms.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Personally, I prefer the word &quot;freedom&quot; over &quot;free speech&quot;, as the former better conveys the idea of lack of restrictions.  This version is also used as the title for &lt;a href=&quot;http://www.oreilly.com/openbook/freedom/&quot; rel=&quot;nofollow&quot;&gt;the biography of FSF's Richard M. Stallman by Sam Williams&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://i.stack.imgur.com/xxFuH.jpg&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;http://i.stack.imgur.com/xxFuH.jpg&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="606" LastActivityDate="2015-07-28T09:41:31.353" CommentCount="0" />
  <row Id="1379" PostTypeId="1" AcceptedAnswerId="1380" CreationDate="2015-07-28T09:56:17.313" Score="4" ViewCount="251" Body="&lt;p&gt;The open source definition has a non-discrimination clause. From the &lt;a href=&quot;http://opensource.org/osd-annotated&quot; rel=&quot;nofollow&quot; title=&quot;The Open Source Definition &amp;#40;Annotated&amp;#41;&quot;&gt;annotated Open Source Definition&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;h3&gt;5. No Discrimination Against Persons or Groups&lt;/h3&gt;&#xA;  &#xA;  &lt;p&gt;The license must not discriminate against any person or group of persons.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&lt;strong&gt;&lt;em&gt;Rationale:&lt;/strong&gt; In order to get the maximum benefit from the process, the maximum diversity of persons and groups should be equally eligible to contribute to open sources. Therefore we forbid any open-source license from locking anybody out of the process.&lt;/em&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&lt;em&gt;Some countries, including the United States, have export restrictions for certain types of software. An OSD-conformant license may warn licensees of applicable restrictions and remind them that they are obliged to obey the law; however, it may not incorporate such restrictions itself.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This clearly means that for a license to be considered open source, the license must not discriminate against any person or group. The license may not, for example, only allow non-profits to use the work (because non-profits are good), or disallow clowns to use the work (because clowns are creepy).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I heard people say that this also means I may not selectively license a work that I hold the copyright of under a free license. Is that true?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, can I grant &lt;a href=&quot;https://en.wikipedia.org/wiki/501(c)_organization&quot; rel=&quot;nofollow&quot; title=&quot;Wikipedia: 501(c) organization&quot;&gt;501(c)&lt;/a&gt; organizations an GPL-3 license to my software, but nobody else?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is clear that according to the terms, they are allowed to re-distribute the software to anyone else, so the effectiveness of this might be low, but my question only pertains to whether or not I have the right to deny an open source license to some people/groups.&lt;/p&gt;&#xA;" OwnerUserId="97" LastEditorUserId="138" LastEditDate="2015-07-28T11:14:55.227" LastActivityDate="2015-07-28T11:14:55.227" Title="Do non-discrimination clauses only count for my licensees, or also for me as a copyright holder?" Tags="&lt;open-source-definition&gt;&lt;non-discrimination&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="1380" PostTypeId="2" ParentId="1379" CreationDate="2015-07-28T11:01:23.040" Score="9" Body="&lt;p&gt;&lt;a href=&quot;http://opensource.stackexchange.com/a/912/458&quot;&gt;As I've said before&lt;/a&gt;, software doesn't possess any licence &lt;em&gt;inherently&lt;/em&gt; - it is &lt;em&gt;distributed&lt;/em&gt; (or, &lt;a href=&quot;http://opensource.stackexchange.com/questions/958/gpl-v3-convey-vs-gpl-v2-distribute&quot;&gt;as the GPLv3 would have it&lt;/a&gt;, &lt;em&gt;conveyed&lt;/em&gt;) under a licence.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You, as the copyright holder, may distribute your software under any kind of licence you want, to anyone you choose.  You may choose to distribute it only to 501(c) organisations, and only under GPLv3, if you want to.  As you correctly note, any such recipient will have the right to redistribute it to anyone they like - the GPLv3 gives them that right.  But the licence under which you distribute it to those parties doesn't force &lt;em&gt;you&lt;/em&gt; to distribute it to anyone else, or indeed to anyone at all, because you aren't bound by the licence.&lt;/p&gt;&#xA;" OwnerUserId="458" LastActivityDate="2015-07-28T11:01:23.040" CommentCount="10" />
  <row Id="1381" PostTypeId="2" ParentId="1371" CreationDate="2015-07-28T11:21:42.867" Score="4" Body="&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; Things like CC0, Unlicense and WTFL create unexpeced legal hazards in some jurisdictions.  The MIT License does not really put anything in the public domain, but it the &lt;em&gt;safest&lt;/em&gt; license to use if you want to offer your stuff with as few restrictions as possible in a world-wide setting.  In the USA, &lt;em&gt;CC0&lt;/em&gt; can be used, but I do not recommend it for software.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Why is this [to place software in the public domain] difficult?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The difficulty of placing software in the public domain in the public domain is closely related to something called &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Moral_rights&quot; rel=&quot;nofollow&quot;&gt;moral rights&lt;/a&gt;&quot; that originated as civil law in the Napoleonic Code (1804, France) under the name of &lt;em&gt;droit d’auteur&lt;/em&gt; (literally: author's rights).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Jurisdictions with &lt;em&gt;strong moral rights&lt;/em&gt; have a tradition of making it near impossible to dedicate anything to the public domain.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Moral rights include the right of attribution, and the right of integrity (but the exact list of exactly what is protected by moral rights varies between jurisdictions).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the Norwegian copyright act, moral rights are described in the first parts of § 3, while the third part says that these rights cannot be waived. Here is a direct quote (translated by me):  &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The author may not waive his rights under the first and second paragraphs, unless the use of the work in question is limited in nature and extent.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The &quot;limited in nature and extent&quot; addendum allows ghostwriting.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However part four states than &lt;em&gt;under no circumstances&lt;/em&gt; can the right of integrity be waived.  Quote (translated by me):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;This right may not be waived by the author.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;To compound the problem, moral rights are forever in Norway. In Germany, an  author can commit suicide and then wait for 70 years to dedicate his works to the public domain. In Norway (and a few other countries in northern Europe), this option is not available.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;how can I release some project effectively into the public domain, for jurisdictions that have such a concept?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I do not think that this is &lt;em&gt;possible&lt;/em&gt; for all jurisdictions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The most professional (as in: written by lawyers, not kids) attempt to create a legal tool to enable authors to dedicate their work to the public domain is &lt;a href=&quot;https://creativecommons.org/publicdomain/zero/1.0/legalcode&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;CC0&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;IMNSHO, while well intended, it fails, and its use creates a &lt;em&gt;legal hazard&lt;/em&gt; in several jurisdictions (including Norway, where I live).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;OSI seems to think so as well. In 2012, &lt;em&gt;CC0&lt;/em&gt; was submitted to OSI for review.  After facing harsh criticism, the application &lt;a href=&quot;http://opensource.org/faq#cc-zero&quot; rel=&quot;nofollow&quot;&gt;was withdrawn&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;(One of better known legal hazards of CC0 is its infamous patent clause, which I discuss in &lt;a href=&quot;http://opensource.stackexchange.com/a/1393/606&quot;&gt;this answer&lt;/a&gt;.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another license that is supposed to do this is the &lt;a href=&quot;http://unlicense.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;Unlicense&lt;/em&gt;&lt;/a&gt;.  AFAIK, it has never been submitted to OSI for review, but if it had, I am pretty sure it would have been summarily rejected.  OSI's co-founder &lt;a href=&quot;https://lists.opensource.org/pipermail/license-review/2012-January/000047.html&quot; rel=&quot;nofollow&quot;&gt;Bruce Perens&lt;/a&gt; call the the &lt;em&gt;Unlicense&lt;/em&gt; a &quot;crayon license&quot;, adding:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The point is that such things have done serious harm to developers when &#xA;  they've not behaved as expected in court. Thus, naïvely propagating one &#xA;  could be considered to be in the category of irresponsible acts that can &#xA;  damage others.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Personally, I believe that it is unrealistic to aim for the &quot;public domain&quot; if your audience is world-wide.  There are too many local quirks in copyright and a one-size-fits-all legal tool to put something in the &quot;public domain&quot; may have some totally unexpected (and harmful) side effects.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For instance, in Norway, publicly performing recorded music distributed under CC0 requires you to &lt;em&gt;pay&lt;/em&gt; a levy to GRAMO (a collecting society monopoly authorized under the Department of Culture), but doing the same with music distributed under CC-BY is free.  Yes, this consequence of the use of this license is totally absurd, but some copyright laws (at least in Norway) are.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;My recommendation is to stay clear of anything with pretense to put anything in the public domain, as well as &quot;crayon&quot; licenses such as &quot;&lt;em&gt;WTFL&lt;/em&gt;&quot; and &quot;&lt;em&gt;Unlicense&lt;/em&gt;&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;MIT&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A license that will put as few restrictions as possible on the use of your project, while not creating legal hazards for yourself and your users, is the &lt;a href=&quot;https://www.debian.org/legal/licenses/mit&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;MIT&lt;/em&gt;&lt;/a&gt; (aka. Expat) license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;em&gt;MIT&lt;/em&gt; license does &lt;em&gt;not&lt;/em&gt; abandon moral rights.  Since they're not mentioned, the jurisdiction's default civil law applies.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;em&gt;MIT&lt;/em&gt; license is also much more aligned with a &quot;traditional&quot; take on copyright. If you use the &lt;em&gt;MIT&lt;/em&gt; license, authorship is &lt;em&gt;not&lt;/em&gt; abandoned, but specific (normally reserved) rights are &lt;em&gt;explicitly&lt;/em&gt; licensed to the licensee. This model fits much better into the legal framework of civil law jurisdictions than the much less conventional public domain dedications that is the gist of &lt;em&gt;CC0&lt;/em&gt;, &lt;em&gt;WTFPL&lt;/em&gt; and &lt;em&gt;Unlicense&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If it varies greatly per jurisdiction, how can I do it for the US?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;In a &lt;em&gt;localized&lt;/em&gt; case, including the US, there is usually some recognized way to do this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As for USA, you may consider using &lt;em&gt;CC0&lt;/em&gt; if you don't mind having your downstream recipients worry about submarine-patents.  It was written by US lawyers, and it fits the legal situation in the USA to a tee - but it is really for artistic and literary works. IMNSHO, it should not be used for  software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Let me add that I think &lt;em&gt;CC0&lt;/em&gt; is pretty safe way of putting something in the public domain in &lt;em&gt;common law&lt;/em&gt; jurisdictions, but much less safe to use in &lt;em&gt;civil law&lt;/em&gt; jurisdictions.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-29T21:22:10.793" LastActivityDate="2015-07-29T21:22:10.793" CommentCount="4" />
  <row Id="1382" PostTypeId="2" ParentId="1375" CreationDate="2015-07-28T11:44:53.853" Score="5" Body="&lt;h3&gt;Why does Freeware and Free Software sounds similar?&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;The English adjective &lt;em&gt;free&lt;/em&gt; is commonly used in one of two meanings: &quot;for zero price&quot; (&lt;strong&gt;gratis&lt;/strong&gt;) and &quot;with little or no restriction&quot; (&lt;strong&gt;libre&lt;/strong&gt;). So, &quot;free&quot; is &lt;strong&gt;ambiguous&lt;/strong&gt; (i.e. freedom/cost).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For clear understanding visit the wikipedia article : &lt;a href=&quot;https://en.wikipedia.org/wiki/Gratis_versus_libre&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Gratis versus libre&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;h3&gt;Definition&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.linfo.org/freeware.html&quot; rel=&quot;nofollow&quot;&gt;Freeware&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Freeware is computer software that is made available free of charge, but which is copyrighted by its developer, who retains the rights to control its distribution, modify it and sell it in the future. It is typically distributed without its source code, thus preventing modification by its users.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.gnu.org/philosophy/free-sw.html&quot; rel=&quot;nofollow&quot;&gt;Free Software&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;A program is free software if the program's users have the four essential freedoms:&lt;/p&gt;&#xA;  &#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;The freedom to run the program as you wish, for any purpose (freedom 0).&lt;/li&gt;&#xA;  &lt;li&gt;The freedom to study how the program works, and change it so it does your computing as you wish (freedom 1). Access to the source code is a precondition for this.&lt;/li&gt;&#xA;  &lt;li&gt;The freedom to redistribute copies so you can help your neighbor (freedom 2).&lt;/li&gt;&#xA;  &lt;li&gt;The freedom to distribute copies of your modified versions to others (freedom 3). By doing this you can give the whole community a chance to benefit from your changes. Access to the source code is a precondition for this.&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/blockquote&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;h3&gt;Difference&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;Terminological&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;strong&gt;&quot;free&quot;&lt;/strong&gt; in &lt;strong&gt;&quot;freeware&quot;&lt;/strong&gt; refers to &lt;strong&gt;the price&lt;/strong&gt; of the software, which is typically &lt;a href=&quot;https://en.wikipedia.org/wiki/Proprietary_software&quot; rel=&quot;nofollow&quot;&gt;proprietary&lt;/a&gt; and distributed without source code. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;strong&gt;&quot;free&quot;&lt;/strong&gt; in &lt;strong&gt;&quot;free software&quot;&lt;/strong&gt; refers to &lt;strong&gt;&lt;a href=&quot;/questions/tagged/freedoms&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &amp;#39;freedoms&amp;#39;&quot; rel=&quot;tag&quot;&gt;freedoms&lt;/a&gt;&lt;/strong&gt; granted users under the software license (for example, to run the program for any purpose, modify and redistribute the program to others), and such software may be &lt;a href=&quot;http://www.gnu.org/philosophy/selling.html&quot; rel=&quot;nofollow&quot;&gt;sold&lt;/a&gt; at a price.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;License &amp;amp; Rights&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;Freeware:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Software classified as &lt;a href=&quot;/questions/tagged/freeware&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &amp;#39;freeware&amp;#39;&quot; rel=&quot;tag&quot;&gt;freeware&lt;/a&gt; may be used &lt;strong&gt;without payment&lt;/strong&gt; and is typically either fully functional for an unlimited time, or has limited functionality, with a more capable version available commercially or as shareware. The software license may &lt;strong&gt;impose various additional restrictions&lt;/strong&gt; like:&lt;/li&gt;&#xA;&lt;li&gt;Restriction on use e.g only for personal use, private use, individual use, non-profit use, non-commercial use, academic use, educational use, use in charity or humanitarian organizations, non-military use, use by public authorities, restricted use in a combination with some types of other software or with some hardware devices, etc.&lt;/li&gt;&#xA;&lt;li&gt;Prohibited distribution over the Internet other than linking to author's website, restricted distribution without author's consent, restricted number of copies, etc.&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Free Software:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The term &lt;a href=&quot;/questions/tagged/free-software&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &amp;#39;free-software&amp;#39;&quot; rel=&quot;tag&quot;&gt;free-software&lt;/a&gt; is used for the software that gives users the &lt;strong&gt;freedom&lt;/strong&gt; to &lt;strong&gt;run&lt;/strong&gt; the software for any purpose as well as to &lt;strong&gt;study&lt;/strong&gt;, &lt;strong&gt;modify&lt;/strong&gt;, and &lt;strong&gt;distribute&lt;/strong&gt; the original software and the adapted versions.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Free_software_license&quot; rel=&quot;nofollow&quot;&gt;License&lt;/a&gt; grants the recipient of a piece of software &lt;strong&gt;extensive rights&lt;/strong&gt; to modify and redistribute that software.&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;Above difference is also given (shortly) in &lt;a href=&quot;http://opensource.stackexchange.com/a/1376/296&quot;&gt;this&lt;/a&gt; answer.&lt;/sup&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;From &lt;a href=&quot;https://en.wikipedia.org/wiki/Template:Software_distribution&quot; rel=&quot;nofollow&quot;&gt;wikipedia template&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://i.stack.imgur.com/jr2V5.jpg&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;http://i.stack.imgur.com/jr2V5.jpg&quot; alt=&quot;wikiscreen&quot;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Freeware falls in category - &lt;strong&gt;compensation model&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;Free Software falls in category - &lt;strong&gt;license&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Though, According to &lt;a href=&quot;http://www.gnu.org/philosophy/categories.html&quot; rel=&quot;nofollow&quot;&gt;FSF&lt;/a&gt; :&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The term “freeware” has no clear accepted definition, but it is commonly used for packages which permit redistribution but not modification (and their source code is not available).These packages are &lt;em&gt;not&lt;/em&gt; free software, so please don't use “freeware” to refer to free software.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So, It is better to use &lt;strong&gt;gratis&lt;/strong&gt; instead of freeware while talking about free of cost software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;They also provide &lt;a href=&quot;http://www.gnu.org/philosophy/fs-translations.html&quot; rel=&quot;nofollow&quot;&gt;translations&lt;/a&gt; of term &quot;free software&quot; into various languages with distinguishing it from &quot;gratis&quot;. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;This graphical information (from &lt;a href=&quot;http://www.gnu.org/philosophy/categories.html&quot; rel=&quot;nofollow&quot;&gt;catagories&lt;/a&gt;) may also helpful:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://i.stack.imgur.com/MxuBz.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;http://i.stack.imgur.com/MxuBz.png&quot; alt=&quot;catagories&quot;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;There is &lt;em&gt;no&lt;/em&gt; relation between Freeware and Free Software And the difference is only terminological because actually comparable/distinguishable thing is &quot;Free software vs Proprietary Software&quot; (and may be &quot;Freeware vs Payware&quot;).&lt;/p&gt;&#xA;" OwnerUserId="296" LastEditorUserId="69" LastEditDate="2015-07-30T13:37:42.427" LastActivityDate="2015-07-30T13:37:42.427" CommentCount="2" />
  <row Id="1383" PostTypeId="1" AcceptedAnswerId="1392" CreationDate="2015-07-28T16:54:44.370" Score="5" ViewCount="101" Body="&lt;p&gt;I am working on python library that wraps a non-free C library. In order to develop this, I referenced the C library's copyrighted documentation. Because of that my function and variable names are the same as the non-free library's.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Am I still okay to apply an open source license to my library?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;EDIT: My question is &lt;em&gt;not&lt;/em&gt; whether I can use the C api, but whether using that api's documentation will violate the documentations copyright. I am not replacing or reverse engineering the copyrighted api, but an exposing that api's functions to a python library.&lt;/p&gt;&#xA;" OwnerUserId="1023" LastEditorUserId="1023" LastEditDate="2015-07-29T17:37:55.593" LastActivityDate="2015-07-29T18:30:04.797" Title="Can I apply an open source license if I referenced copyright documentation during development?" Tags="&lt;licensing&gt;&lt;law&gt;&lt;api&gt;&lt;derivative-works&gt;" AnswerCount="1" CommentCount="7" />
  <row Id="1384" PostTypeId="2" ParentId="1371" CreationDate="2015-07-28T16:59:55.677" Score="-1" Body="&lt;p&gt;One of the most ubiquitous works of software, SQLite, is in the public domain with &lt;a href=&quot;https://www.sqlite.org/copyright.html&quot; rel=&quot;nofollow&quot;&gt;no license at all.&lt;/a&gt; That is highly unusual in the world of software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some wise people are behind SQLite, so I think you could do like they did and do the &lt;em&gt;no licensing&lt;/em&gt; option to have your software live in the PD.  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Although, the no-license approach probably isn't a good idea. I would follow the industry norm of getting a license as the other replies here discuss in great detail.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also, wanted to post this in part to highlight that &lt;strong&gt;public domain&lt;/strong&gt; per se, may be what you asked for, but not what you intended. It can be a loaded word.&lt;/p&gt;&#xA;" OwnerUserId="1024" LastActivityDate="2015-07-28T16:59:55.677" CommentCount="1" />
  <row Id="1385" PostTypeId="1" CreationDate="2015-07-28T17:06:10.617" Score="3" ViewCount="81" Body="&lt;p&gt;If you notice &lt;a href=&quot;https://github.com/kriasoft/react-starter-kit&quot; rel=&quot;nofollow&quot;&gt;the following scaffold starter kit source code&lt;/a&gt; is licensed under MIT throughout the code base. Even the configuration file contain &lt;a href=&quot;https://github.com/kriasoft/react-starter-kit/blob/master/webpack.config.js#L1-L7&quot; rel=&quot;nofollow&quot;&gt;a header of MIT licensed by the creator.&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Assuming, I have already written my application code and did some changes on the application config. How should I properly create a LICENSE which is attributed to me? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Should I be changing the LICENSE file? and replace all the attribution of each source code? Partly because it is now my application logic. I just use his code as the scaffolding or starter code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://programmers.stackexchange.com/q/291083/44235&quot;&gt;Based on this question from Programmers SE&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="1025" LastEditorUserId="69" LastEditDate="2015-07-28T22:10:24.003" LastActivityDate="2015-07-28T22:10:24.003" Title="How should I re-license the scaffold code for my new application? (it is licensed under MIT)" Tags="&lt;attribution&gt;&lt;mit&gt;&lt;relicensing&gt;" AnswerCount="2" CommentCount="1" />
  <row Id="1386" PostTypeId="1" CreationDate="2015-07-28T18:08:05.167" Score="5" ViewCount="92" Body="&lt;p&gt;Alice licensed her work under &lt;a href=&quot;https://creativecommons.org/publicdomain/zero/1.0/&quot;&gt;CC0 1.0&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;May Bob take Alice’s work and publish it under another Creative Commons license (e.g., CC BY-SA)? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;If yes, may Bob publish it under his own name (i.e., not noting that Alice authored and published it under CC0), so that users would attribute him? (Of course users wouldn’t &lt;em&gt;have&lt;/em&gt; to follow the rules from CC BY-SA, because the work is &lt;em&gt;still&lt;/em&gt; also licensed under CC0; assuming that Bob didn’t make any modifications.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;a href=&quot;https://wiki.creativecommons.org/wiki/Frequently_Asked_Questions#May_I_apply_a_Creative_Commons_license_to_a_work_in_the_public_domain.3F&quot;&gt;CC FAQ &quot;May I apply a Creative Commons license to a work in the public domain?&quot;&lt;/a&gt; says that it &quot;should not&quot; be done. So that means it &lt;em&gt;may&lt;/em&gt; be done, right? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Would this depend on Alice’s and/or Bob‘s jurisdiction?&lt;/p&gt;&#xA;" OwnerUserId="138" LastActivityDate="2015-07-29T11:04:47.480" Title="May someone else apply a license to CC0 material?" Tags="&lt;creative-commons&gt;&lt;relicensing&gt;&lt;multi-licensing&gt;&lt;public-domain&gt;&lt;cc0&gt;" AnswerCount="2" CommentCount="0" />
  <row Id="1387" PostTypeId="2" ParentId="1386" CreationDate="2015-07-28T18:46:30.787" Score="5" Body="&lt;p&gt;Bob can relicense it under any license he wishes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Taking credit for Alice's work is another thing. In jurisdictions that hold up moral rights, Bob can't. The moral rights cannot be given up by Alice, so they are still intact. What consists moral rights differs a bit, but proper attribution is usually included. In jurisdictions without moral rights, copyright law may not prevent Bob from doing it, but depending on the situation, other laws may be in place, maybe something against fraud.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="168" LastEditDate="2015-07-29T07:08:42.680" LastActivityDate="2015-07-29T07:08:42.680" CommentCount="0" />
  <row Id="1388" PostTypeId="2" ParentId="1385" CreationDate="2015-07-28T19:03:38.660" Score="0" Body="&lt;p&gt;You could insert your own copyright line above the original author's in LICENSE.txt and in each file that you have modified.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;Copyright (c) 2015 Yeo&#xA;Copyright (c) 2014 Konstantin Tarkus (@koistya), KriaSoft LLC&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;This preserves the attribution and license.  It's more complicated, but possible, if you want to change the licensing terms.  You could insert your new license in LICENSE.txt and finish with something to the effect&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;This is a derived work, based upon **** which was conveyed under the following license:&#xA;   [existing MIT license]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="158" LastEditorUserId="69" LastEditDate="2015-07-28T22:08:19.237" LastActivityDate="2015-07-28T22:08:19.237" CommentCount="0" />
  <row Id="1389" PostTypeId="2" ParentId="1385" CreationDate="2015-07-28T19:18:40.110" Score="1" Body="&lt;p&gt;The MIT license is a very permissive license, and allows re-licensing. The license doesn't require you at all to to keep the attribution line in any of the files, but it's kind of a dick move to remove it straight away. Keeping it there also makes it easier for re-users to find out who the copyright belongs to - though for a license as permissive as the MIT license, which is pretty much compatible with anything, this shouldn't be much of a problem.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In accordance with &lt;a href=&quot;http://opensource.stackexchange.com/questions/292/should-i-include-a-copyright-line-in-every-file&quot;&gt;Should I include a copyright line in every file?&lt;/a&gt; it's a good idea to have a header with what license applies and who is the copyright owner in every file.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So who is the copyright owner? You own the copyright to all changes you make, and all the new code you write. For a file you've changed, you have created a derivative work, and each holds the copyright to their own part.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A copy of the MIT license should remain until the work is no longer a derivative. It is not very clear when that is, but at least when none of your code is &quot;based upon&quot; any of the code that was there. If it were to come to it, it may be very difficult to ever prove that it's not based upon any of the old code anymore.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Since your question is tagged license-change, I'm going to assume you want to change not only the attribution, but also the license. With the MIT license, you are free to re-license your derivative work under a different license of your choosing. A good way to do that is to add a second license text file, and refer to that license in a header in each new file you wrote.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In each file that is derived from the template code, link to that license, as well as to the original project and the MIT license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Something like&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;Copyright (c) 2015 Yeo&#xA;Copyright (c) 2014 Konstantin Tarkus (@koistya), KriaSoft LLC&#xA;&#xA;This software is licensed under &amp;lt;whatever license you fancy&amp;gt;.&#xA;&amp;lt;Additional header text you may want to include, conventions differ per license&amp;gt;&#xA;&#xA;This software was based on &amp;lt;link to original project&amp;gt;,&#xA;licensed under &amp;lt;link to your local MIT license&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;When doing that, it is clear what exactly is licensed by whom to whom, and people know what they are getting.&lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-07-28T19:18:40.110" CommentCount="0" />
  <row Id="1390" PostTypeId="2" ParentId="1386" CreationDate="2015-07-28T22:01:51.367" Score="3" Body="&lt;p&gt;The CC0 license is essentially a public domain dedication. Looking at the license deed, it does not depend on jurisdictions, as it waives all rights normally provided under the copyright law by the legal authorities of the jurisdiction. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Bob can take Alice's work freely, but Alice will still retain any moral rights that is entitled to her. You don't legally have to attribute Alice. &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If yes, may Bob publish it under his own name (i.e., not noting that Alice authored and published it under CC0), so that users would attribute him? (Of course users wouldn’t have to follow the rules from CC BY-SA, because the work is still also licensed under CC0; assuming that Bob didn’t make any modifications.)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Well, yes you can, but consider the author's moral rights. In some jurisdictions, this include the right to be attributed properly, and this is a legal requirement. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Therefore, to answer the question: yes, bob can relicense Alice's work, but must respect the moral rights of Alice, which can vary by jurisdiction. &lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="458" LastEditDate="2015-07-29T11:04:47.480" LastActivityDate="2015-07-29T11:04:47.480" CommentCount="0" />
  <row Id="1391" PostTypeId="2" ParentId="1375" CreationDate="2015-07-28T23:22:20.947" Score="2" Body="&lt;p&gt;Because the terms can be, and are, so easily misunderstood most of us who have worked in this area avoid them and instead refer to specific licenses, which grant specific rights while reserving others. The Apache license, the partly or fully open versions of the Creative Commons family of licenses, and MIT's open-source license are among those which I've seen corporate lawyers approve of. The FSF/Gnu family has some versions (most notably the infamous &quot;infectious&quot; version, now mostly gone) which they wouldn't approve. And so on. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Whether it's called free, freeware, shareware, open-source, or Fred, &lt;strong&gt;&lt;em&gt;read and understand the licence&lt;/em&gt;&lt;/strong&gt; before downloading, and if you can't live by the rules set in that license find another program. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;(The Free Software Foundation is certainly entitled to define what they mean when they use these terms... but there's no guarantee any other author/publisher agrees will use the terms exactly the same way. &lt;strong&gt;&lt;em&gt;Read and understand and obey the licence.&lt;/em&gt;&lt;/strong&gt; )&lt;/p&gt;&#xA;" OwnerUserId="1031" LastEditorUserId="1031" LastEditDate="2015-07-29T00:31:20.250" LastActivityDate="2015-07-29T00:31:20.250" CommentCount="0" />
  <row Id="1392" PostTypeId="2" ParentId="1383" CreationDate="2015-07-29T15:24:08.210" Score="3" Body="&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; Yes, you can use a &lt;em&gt;permissive&lt;/em&gt; Open Source license for this wrapper program, but not a strong &lt;em&gt;copyleft&lt;/em&gt; Open Source license.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;First, to clear up something that has been raised in comments: As it is written I do not believe your question is about &lt;em&gt;reverse engineering&lt;/em&gt; a non-free C library.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You say: &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;I am working on python library that wraps a non-free C library. In order to develop this, I referenced the C library's copyrighted documentation. Because of that my function and variable names are the same as the non-free library's.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I take this to mean that your python wrapper makes the functions and variables of the non-free C-library available for use in some python program that uses your wrapper to &quot;bridge&quot; the python program and the non-free C library.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You don't mention the terms the non-free C library is made available under, but I am going to assume that it is All Rights Reserved (ARR), or at least under terms that does not allow redistribution alone or as part of a derivative work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If this is what this question is about, then I do not believe the Appeals court's May 9, 2014 decision in &lt;a href=&quot;http://www.potomaclaw.com/oracle-v-google-copyrightability-apis/&quot; rel=&quot;nofollow&quot;&gt;Oracle vs Google&lt;/a&gt; apply.  This case was predominantly about reverse engineering, and the court ruled that the &lt;a href=&quot;https://en.wikipedia.org/wiki/Structure,_sequence_and_organization&quot; rel=&quot;nofollow&quot;&gt;structure, sequence and organization&lt;/a&gt; of the 37 API files Google had copied (in order to make &lt;em&gt;existing software&lt;/em&gt; that was based up Oracle's Java API simpler to port to Android.) was copyrightable. Because Google reused this in a competing product, Google was guilty of copyright infringement.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You have &lt;em&gt;not&lt;/em&gt; copied an API, nor is your wrapper a derivative work of the API.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You've written a Python library wrapper that &lt;em&gt;uses&lt;/em&gt; the documented API to a non-free C library in order to provide functional integration between python and said non-free library.  Since making it possible for programmers to use API functions and variables is the whole point of documenting an API, using the documented API as intended does not infringe the copyright of the API, even &lt;em&gt;if&lt;/em&gt; the API itself is copyrightable.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So you're allowed to do create a distribute this program without infringing copyright.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Let's first assume you release your wrapper as ARR, with an explicit permission to combine the wrapper with the library. Will this create problems?  For instance, can you be sued if you do this?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is not legal advice, but my &lt;em&gt;opinion&lt;/em&gt; is that the answer is: &quot;no&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You cannot distribute the non-free C library of course, so by itself, your wrapper will no do anything.  Python developers who want to use this have obtain a legal a copy of both an combine them themselves.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Having first determined that this is legal if you distribute your program as ARR, let's move on and see if you can also do it if your wrapper carry a &lt;em&gt;permissive&lt;/em&gt; Open Source license, such as MIT (Expat)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Again, I see no problems.  Python developers who want to use this have obtain a legal a copy of both an combine them themselves.  However. the resulting derivative work &lt;em&gt;can not&lt;/em&gt; be distributed, because the the terms of the non-free C-library does not allow it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, I do not believe you can distribute your wrapper under a strong copyleft license such as GPLv2 or GPLv3.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you did this, nobody could legally link your wrapper with the non-free library, because the resulting derivative&lt;sup&gt;1&lt;/sup&gt; work would had be made available under GPL, and this is of course &lt;em&gt;incompatible&lt;/em&gt; with the C-library being ARR.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;1) This is based upon the FSF's interpretation of linking. This interpretation is not universally accepted, but since there are plenty of other questions about this, I will no go into that discussion here.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-29T18:30:04.797" LastActivityDate="2015-07-29T18:30:04.797" CommentCount="2" />
  <row Id="1393" PostTypeId="2" ParentId="133" CreationDate="2015-07-29T20:33:59.330" Score="3" Body="&lt;p&gt;&lt;em&gt;Sparr's&lt;/em&gt; original answer was good, but he should have &lt;em&gt;left in&lt;/em&gt; the bit about being sued.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The point is that the language used in CC0 constitutes a &lt;em&gt;legal hazard&lt;/em&gt; for anyone that receives a program under CC0 and uses it in good faith.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is the infamous patent clause of CC0:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;No trademark or patent rights held by Affirmer are waived, abandoned, surrendered, licensed or otherwise affected by this document.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The typical scenario that will create a legal hazard for you is this:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;You work on a software project (it may be open source or ARR).&lt;/li&gt;&#xA;&lt;li&gt;You see some other software (typically a library) that will fit very well into your project, and you notice that it is offered under the terms of CC0.&lt;/li&gt;&#xA;&lt;li&gt;You incorporate said library into your project.&lt;/li&gt;&#xA;&lt;li&gt;Unknown to you, the library offered under the terms of CC0 contains patented code. The patent is owned by the Affirmer (the person that did the PD dedication, usually the initial author of the library).&lt;/li&gt;&#xA;&lt;li&gt;After some time, for instance &lt;em&gt;after&lt;/em&gt; your project has evolved into something successful and profitable - the Affirmer  surfaces with his submarine-patent and demands that you pay royalities to use the library.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;At this point, this patented library may be deeply integrated in your project and stopping using it may no longer be practical.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To make sure he gets paid, the Affirmer can threaten to sue you &lt;em&gt;unless&lt;/em&gt; you pay up.  &lt;em&gt;Because&lt;/em&gt; the CC0 dedication has the quoted sentence, you're going to have a real hard time defending yourself against the Affirmer's demands in court. In all probability, your cheapest option (at least if the Affirmer is not &lt;em&gt;too&lt;/em&gt; greedy) is to pay the patent royalties.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you compare the CC0 with &lt;em&gt;real&lt;/em&gt; free software licenses, such as GPLv3, you'll find this:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Do you spot the difference?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If somebody would try to pull the submarine-patent trick with software licensed under GPLv3, it is very unlikely that they shall prevail if they sue you, as the license is &lt;em&gt;designed&lt;/em&gt; to make such a lawsuit fail.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The point is that, if you choose to use a badly designed legal tool, which is what CC0 is, it is much &lt;em&gt;easier&lt;/em&gt; to intimidate you by into paying royalties, than if you stick to software that provide legal &lt;em&gt;immunity&lt;/em&gt; against this type of lawsuits.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-29T21:45:25.533" LastActivityDate="2015-07-29T21:45:25.533" CommentCount="3" />
  <row Id="1394" PostTypeId="1" CreationDate="2015-07-30T16:36:18.397" Score="-2" ViewCount="105" Body="&lt;p&gt;An interesting thought popped up to me earlier today as I was developing my project. My thought was whether I could charge royalties for a derivative (being used commercially) of my project. Would charging royalties allow my project to remain open?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To help narrow this down:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I don't want to know about things such as patents and trademarks. Licenses such as the CC0 (though not considered open source) explicitly have clauses on patents and trademarks, and they don't bring these two items into the license with everything else. In a sense, using &quot;CC0&quot; patents/trademarks allows the original creator to legally demand royalties on patents and trademarks.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;I'm sorry if it was a little unclear, but here is my question:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Can I [force] charge any royalties for derivatives of my open source project that are being used commercially?&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="98" LastEditDate="2015-08-04T10:08:23.477" LastActivityDate="2015-08-04T11:23:13.133" Title="Can I charge a royalty for derivatives of my project that are used commercially?" Tags="&lt;derivative-works&gt;&lt;royalties&gt;" AnswerCount="3" CommentCount="4" />
  <row Id="1395" PostTypeId="1" CreationDate="2015-07-30T19:23:18.333" Score="7" ViewCount="36" Body="&lt;p&gt;On my Web server, I’m using a &lt;a href=&quot;https://en.wikipedia.org/wiki/Content_management_system&quot; rel=&quot;nofollow&quot; title=&quot;Content management system&quot;&gt;CMS&lt;/a&gt; licensed under &lt;a href=&quot;https://www.gnu.org/licenses/agpl-3.0&quot; rel=&quot;nofollow&quot; title=&quot;GNU AFFERO GENERAL PUBLIC LICENSE, Version 3.0&quot;&gt;AGPL 3.0&lt;/a&gt;. I’m required to provide the source code of this CMS &lt;a href=&quot;http://opensource.stackexchange.com/q/650/138&quot; title=&quot;Do I have to offer the source of an AGPL (v3.0) licensed Web app even if I didn’t modify it?&quot;&gt;only if I have modified it&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But what exactly counts as a modification?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It certainly is a modification if I edit the &lt;strong&gt;core files&lt;/strong&gt;. For example, to change how a function works, to add new function, or to change the HTML of the backend template.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But what about using &quot;intended&quot; ways of &lt;strong&gt;configuring&lt;/strong&gt; the CMS? For example, editing its configuration file (e.g., to provide the database login data) or changing settings in the backend (e.g., enabling some checkboxes).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What about using the built-in &lt;strong&gt;plugin manager&lt;/strong&gt;? For example, installing a new plugin (the plugin manager comes with a plugin browser, which automatically downloads and installs selected plugins), or uninstalling a pre-installed plugin.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What about &lt;strong&gt;creating a plugin&lt;/strong&gt; and adding it manually to the plugins folder (and then installing it with the built-in plugin manager)? While the plugin itself might be a derivative work whose source code has to be published in accordance with the AGPL 3.0, does installing this plugin &lt;em&gt;modify&lt;/em&gt; the CMS?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What about &lt;strong&gt;deleting files&lt;/strong&gt; the CMS ships with? For example, removing the guide &lt;code&gt;install.txt&lt;/code&gt;.&lt;/p&gt;&#xA;" OwnerUserId="138" LastEditorUserId="69" LastEditDate="2015-08-07T00:27:16.633" LastActivityDate="2015-08-07T00:27:16.633" Title="What counts as a modification when using a CMS licensed under AGPL 3.0?" Tags="&lt;derivative-works&gt;&lt;agpl-3.0&gt;" AnswerCount="1" CommentCount="1" />
  <row Id="1396" PostTypeId="2" ParentId="1394" CreationDate="2015-07-30T22:11:27.133" Score="2" Body="&lt;p&gt;If your project is free software, then you can't charge royalties for people using it. Free software implies that there is no restriction on use, that's &lt;a href=&quot;https://www.gnu.org/philosophy/free-sw.en.html&quot; rel=&quot;nofollow&quot;&gt;freedom 0&lt;/a&gt;. “You can't use this unless you pay me” would be a restriction on use.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;With the more liberal &lt;a href=&quot;http://opensource.org/osd-annotated&quot; rel=&quot;nofollow&quot;&gt;Open Source Definition&lt;/a&gt;, you can charge the original recipient of the software, as in, you can make their use of the software subject to a fee. However you can't prevent them from distributing it further, without paying you or even informing you: that's spelled out in the very first clause of the OSD. Since clause 8 and clause 9 prevent restrictions from applying to a specific bundling of the software, I think that even if the original recipient is charged for use, they can use the legal loophole of redistributing the software to themselves, and using only that redistributed copy, which wouldn't be subject to your original usage restrictions. So you effectively can't restrict use.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If your license is a copyleft license, then even commercial users would have to respect the open source license. If you hold sole copyright over your project, or more generally if all the copyright holders agree, you may distribute it under a dual license: a copyleft one, and one that allows closed-source derivatives but requires a fee. This is fairly common.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Distributing your project under an open source license doesn't preclude charging for something other than the use of the source code. If you offer a service where people can run your software on your computers, you can charge for that. People would still not have to pay if they elect to run your software on their own computers or a third party's. Another common example is that if you hold a patent to an algorithm used by the software, you can distribute the code under an open source license but charge for its use. A few open source licenses (e.g. GPLv3) have the licensor waive patent rights, but most (including GPLv2) don't. I don't have an example in mind but I've seen patented algorithms where the patent holder charged royalties unless the algorithm was used in software that complied with certain compatibility standards.&lt;/p&gt;&#xA;" OwnerUserId="60" LastEditorUserId="60" LastEditDate="2015-08-04T11:23:13.133" LastActivityDate="2015-08-04T11:23:13.133" CommentCount="9" />
  <row Id="1397" PostTypeId="2" ParentId="1395" CreationDate="2015-07-31T02:03:27.697" Score="7" Body="&lt;p&gt;AFAIK, no case law about the AGPL exists, and opinions differs as to what actions results in the creation of a derivative work.  Until case law exists, we cannot know for sure.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;OSI's Lawrence Rosen (along with colleague Michael B. Einschlag) seem to &lt;a href=&quot;http://www.rosenlaw.com/lj19.htm&quot;&gt;say&lt;/a&gt; that the &lt;em&gt;only&lt;/em&gt; thing that will result in a derivative, is modification of core files.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If their interpretation of the law is correct, then &lt;em&gt;nothing&lt;/em&gt; except modification of the core files will create a derivative work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, there exists &lt;a href=&quot;http://opensource.stackexchange.com/questions/1207/does-sharing-a-file-format-make-two-programs-either-a-combined-or-derived-work/1215#1215&quot;&gt;case law&lt;/a&gt; (but not about open source) law that indicates that courts &lt;em&gt;may&lt;/em&gt; rule on this on other criteria than those listed by Rosen and Einschlag.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, for the record: I believe Rosen and Einschlag are wrong.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, I don't think anyone will dispute that if whatever modifications you do is &lt;em&gt;below&lt;/em&gt; the threshold of originality (i.e. they are trivial and not copyrightable), then the results of doing this is &lt;em&gt;not&lt;/em&gt; a derivative work, as &quot;copyrightability&quot; of the modifications is a legal prerequisite for something being a derivative work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Let's go through your examples:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;But what about using &quot;intended&quot; ways of configuring the CMS? For example, editing its configuration file (e.g., to provide the database login data) or changing settings in the backend (e.g., enabling some checkboxes).&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;No.  This cannot be a derivative, as making such changes to the configuration file are clearly below the threshold of originality.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;What about using the built-in plugin manager? For example, installing a new plugin (the plugin manager comes with a plugin browser, which automatically downloads and installs selected plugins), or uninstalling a pre-installed plugin.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;If it is somebody else's plugin, freely available for download, then I would again say that what you've done (just downloading and installing it) is below the threshold of originality (i.e. not a derivative).&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;What about creating a plugin and adding it manually to the plugins folder (and then installing it with the built-in plugin manager)? While the plugin itself might be a derivative work whose source code has to be published in accordance with the AGPL 3.0, does installing this plugin modify the CMS?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;If it is a &lt;em&gt;custom&lt;/em&gt; plugin that is not otherwise available (i.e. written by you, or somebody you've hired to do this), then creating the plugin &lt;em&gt;itself&lt;/em&gt; is &lt;em&gt;above&lt;/em&gt; the threshold of originality and therefore a derivative work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As to whether installing such a plugin would modify the CMS: Yes it would according the FSF's legal team's interpretation of the law about derivative works, but as noted initially, OSI's Larry Rosen seems to disagree.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;a href=&quot;https://www.drupal.org/licensing/faq#q7&quot;&gt;licensing FAQ for the Drupal CMS&lt;/a&gt; says this about plugins (known as &quot;modules&quot; or &quot;themes&quot;, depending on what they do):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Yes. Drupal modules and themes are a derivative work of Drupal. If you distribute them, you must do so under the terms of the GPL version 2 or later.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The Drupal licensing FAQ is written by real lawyers &lt;code&gt;:-)&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And again: I believe the FSF and Drupal's lawyers has got this right, and that Rosen and Einschlag are wrong.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;What about deleting files the CMS ships with? For example, removing the guide &lt;code&gt;install.txt&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Again, this is below the threshold of originality, so the removal of this file does not create a derivative work.&lt;/p&gt;&#xA;" OwnerUserId="606" LastActivityDate="2015-07-31T02:03:27.697" CommentCount="4" />
  <row Id="1398" PostTypeId="1" AcceptedAnswerId="1418" CreationDate="2015-07-31T02:46:27.767" Score="3" ViewCount="61" Body="&lt;p&gt;The  &lt;a href=&quot;http://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html&quot; rel=&quot;nofollow&quot;&gt;GPLv2&lt;/a&gt; and &lt;a href=&quot;http://www.gnu.org/licenses/gpl.html&quot; rel=&quot;nofollow&quot;&gt;GPLv3&lt;/a&gt; has anti-patent clauses.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The GPLv2 patent clause is &quot;liberty or death&quot;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The GPLv3 patent clause requires all contributors to grant a royalty free patent license to all downstream recipients:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Most&lt;/em&gt; other free software licenses, including the &lt;a href=&quot;http://directory.fsf.org/wiki/License:Expat&quot; rel=&quot;nofollow&quot;&gt;MIT&lt;/a&gt; (Expat) license does not mention patents at all.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If I license my software, containing patented ideas or methods where &lt;em&gt;I&lt;/em&gt; own the patent right, under the MIT (Expat) license, will I be able to collect patent royalties from downstream recipients that use this MIT-licensed software?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Does this depend on jurisdiction?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Will disclosure or non-disclosure of my patents (in &lt;code&gt;README&lt;/code&gt; or similar) affect my chances of collecting royalties?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;An answer that cite relevant case law will be preferred, but if no case law on this exists, a well-argued answer will be accepted.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-01T16:13:31.270" LastActivityDate="2015-08-01T16:13:31.270" Title="If I license software under the MIT license, will I be able to collect patent royalties?" Tags="&lt;patents&gt;&lt;mit&gt;" AnswerCount="1" CommentCount="5" />
  <row Id="1399" PostTypeId="1" AcceptedAnswerId="1400" CreationDate="2015-07-31T05:43:58.790" Score="15" ViewCount="2740" Body="&lt;p&gt;If software is licenced under a &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.en.html&quot;&gt;GPL&lt;/a&gt; license, can it be used without restriction in a corporate/commercial environment? The software that I am refering to is QGIS which provides this description:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;a href=&quot;https://www.qgis.org/en/site/about/#&quot;&gt;QGIS&lt;/a&gt; is a user friendly Open Source Geographic Information System (GIS) licensed under the GNU General Public License. QGIS is an official project of the Open Source Geospatial Foundation (OSGeo)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I am of the understanding that it can be used (that the software is still considered free and opensource), while others in my office think differently when it is used in a commercial/corporate environment. They believe that once the software is used in a commercial environment, it is no longer considered free and falls under a difference licence (they didn't actually specify a difference licence, but was rather what would they believe would occur). We are not selling the software, but rather use it for analysis.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Would anyone be able to shed some light on the subject to help clear things up?&lt;/p&gt;&#xA;" OwnerUserId="345" LastEditorUserId="345" LastEditDate="2015-08-01T23:23:44.713" LastActivityDate="2015-08-03T14:52:56.277" Title="Can GPL licenced software be used in corporate environments?" Tags="&lt;gpl&gt;&lt;commercial&gt;&lt;software-use&gt;" AnswerCount="8" CommentCount="9" FavoriteCount="1" />
  <row Id="1400" PostTypeId="2" ParentId="1399" CreationDate="2015-07-31T06:24:28.530" Score="21" Body="&lt;p&gt;Software licensed with any GNU license can be used and even modified everywhere, including in a corporate environment, without any restrictions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However be aware that if you (or the company) ever make changes to the software and want to distribute it, it must be distributed with full source code, on the same license terms as the original software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also if you make changes to the software and it is licensed using Affero license (eg. AGPL 3.0), and your company is providing web access to this software, then you'll also be required to publish full source code (including your changes).&lt;/p&gt;&#xA;" OwnerUserId="691" LastEditorUserId="458" LastEditDate="2015-07-31T08:50:13.833" LastActivityDate="2015-07-31T08:50:13.833" CommentCount="9" />
  <row Id="1401" PostTypeId="2" ParentId="1399" CreationDate="2015-07-31T06:24:43.040" Score="15" Body="&lt;p&gt;Of course free software can be &lt;em&gt;used&lt;/em&gt; and even &lt;em&gt;modified&lt;/em&gt; without restrictions in a corporate or for-profit environment!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;(&lt;strong&gt;Edit&lt;/strong&gt;: &lt;em&gt;Re-distribution&lt;/em&gt; of modified free software requires that you make the source of your modifications available - which some insists is a &quot;restriction&quot;. Without going into that debate, please see the &lt;a href=&quot;https://www.gnu.org/licenses/gpl-faq.html#InternalDistribution&quot;&gt;GNU GPL FAQ on internal distribution&lt;/a&gt;. It should be pointed out than when you purchase proprietary software for internal company use, the license on that do &lt;em&gt;not&lt;/em&gt; allow you to re-distribute it outside teh company. Often, a propretary software license will further restrict the number of computers inside your company that it may simultaneously be installed on)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Let's look at some of the more common objections to free software you may find in a corporate environment:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;If it is free software, I will not receive any support.&lt;/strong&gt;&lt;br&gt;&#xA;This is simply not true for &lt;em&gt;most&lt;/em&gt; free software. For instance, the Drupal CMS provides &lt;a href=&quot;https://www.drupal.org/support&quot;&gt;several ways of receiving support&lt;/a&gt;. Some at no cost, drawing on the collective skills of thousands of dedicated and skilled developers and power users, some paid professional services.  If you don't trust gratis support, for all major free software distributions there exists companies that will provide you with the &lt;em&gt;same&lt;/em&gt; type of support you'll receive for proprietary software - for a fee.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Other large corporations don't use free software.  Why should we experiment?&lt;/strong&gt;&lt;br&gt;&#xA;This is also false. According to &lt;a href=&quot;http://www.redhat.com/en/technologies/linux-platforms/enterprise-linux&quot;&gt;Red Hat&lt;/a&gt;, a company specializing in free software for corporate users: “More than 90% of Fortune Global 500 companies use Red Hat products and solutions.”&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Our company needs to buy and use a proprietary software to get a competitive edge.&lt;/strong&gt;&lt;br&gt;&#xA;If you believe that, you could get ahead of the competition by picking free software as a starting point. Since you have the source code, you could go ahead and improve critical parts of it.  This will probably give you the edge faster than buying some proprietary software with no source code available.  Note that &lt;em&gt;unless&lt;/em&gt; you start distributing binaries (or sell a internet-based service if the license on the software is AGPL), you are not obliged to share your improvements with &lt;em&gt;anyone&lt;/em&gt;.  You're not going to be loved by the free software community if you do this, but there is nothing in the free software licenses that stops you from doing this.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Won't programmers that make free software starve - or at least rapidly move on to some more profitable endeavour?&lt;/strong&gt;&lt;br&gt;&#xA;There is no evidence of this. There exists &lt;a href=&quot;http://opensource.stackexchange.com/questions/1255/how-is-selling-floss-packages-for-monetary-compensation-a-viable-strategy/1256#1256&quot;&gt;profitable business models for free software&lt;/a&gt;, and many free software project that has been continued to be maintained and used for decades.  As long as there are engaged users, free software seems to be maintained.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Isn't free software written by amateurs that is unable to secure a job in the real software industry?&lt;/strong&gt;&lt;br&gt;&#xA;Indeed &lt;em&gt;some&lt;/em&gt; free software are written by bozos, and you should not use it.  However, free software is a real industry, and free software companies with a successful business model pays a competitive salary to its staff. In addition, the ruthless peer review that takes place in competently run free software projects makes for a much more thorough quality assurance process than you'll find in some closed source projects.  And since you have the source code available, you could always get it vetted by a professional programmer to determine whether it is created by software professionals or not. But beware: Being free software is not &lt;em&gt;by itself&lt;/em&gt; a sign of high quality, (nor is being proprietary).&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;But &lt;em&gt;if&lt;/em&gt; a free software project run out of steam, will it not leave our company high and dry?&lt;/strong&gt;&lt;br&gt;&#xA;Like in the world of proprietary software, where companies fail and even succesful companies &lt;a href=&quot;http://www.macworld.com/article/1163747/life_after_iweb_the_state_of_web_design_on_the_mac.html&quot;&gt;abandon&lt;/a&gt; its software, some free software projects also fail and are abandoned. There are never any guarantees that a software product will be maintained forever. However, when this happens with free software, it may not be the end of the road. Since you have the source code, you can get always pay somebody else to support and maintain it if you really need to continue using it.  &lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;If you can think of more objections, please add them to the question, and I'll try to address them. Let us make this the canonical question about corporate objections to free software.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-31T14:07:40.667" LastActivityDate="2015-07-31T14:07:40.667" CommentCount="11" />
  <row Id="1402" PostTypeId="2" ParentId="564" CreationDate="2015-07-31T08:42:29.823" Score="0" Body="&lt;p&gt;In the very &lt;em&gt;specific case&lt;/em&gt; described in the question, Alice owns the copyright on the phrase: &quot;Adding dots is fun.&quot;  The &lt;em&gt;most correct&lt;/em&gt; attribution, if you re-use &lt;em&gt;only&lt;/em&gt; this part, is to just credit Alice.&#xA;Assuming that this is a wiki, and anybody can add content without consulting other authors, attributing Bob and Carl would be morally wrong. You cannot be sure how they feel about this.  They may think adding dots are boring, and will embarrassed if they're publicly associated with adding dots being fun.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I should also add that in the case of &lt;em&gt;conventional&lt;/em&gt; multi-authored works (e.g. books and academic papers with more than one author), all co-authors has &lt;em&gt;agreed&lt;/em&gt; to have the final work published carried their byline, so  that would be different from the wiki-situation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also it should be noted that for many multi-authored works, no &lt;em&gt;revision history&lt;/em&gt; is available to outsiders, so when you use parts of the work, you have no of way of knowing who did what- In that case, your &lt;em&gt;only&lt;/em&gt; option is to attribute &lt;em&gt;all&lt;/em&gt; co-authors.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;However, while not said explicitly, this question seem to be about use cases where the revision history is available to outsiders. This is typically the case with free software projects where the SCM-system is publicly accessible (e.g. projects hosted at GitHub), and free culture projects such as Wikis, where the editing history publicly available.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;First, let us look at SE. While not really a Wiki, it allows user edits, and it makes the editing history publicly available.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is some guidance about attributing questions ans answers pulled from StackExchange in this blogpost by SE co-founder Jeff Atwood: &lt;a href=&quot;https://blog.stackexchange.com/2009/06/attribution-required/&quot;&gt;Attribution required&lt;/a&gt;, where the most relevant line is this:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Show the author names for every question and answer&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This, presumably, refer to the &lt;em&gt;publicly visible&lt;/em&gt; author names. Every non-wiki post on SE has a single, clearly identified, author.  There should be no need to dig into the revision history on SE, as user editing should only be trivial copy-editing (spelling corrections, language improvements, etc.) that would be below the threshold of creativity. Trivial copy-editing  need not be attributed. Unlike a wiki, &lt;em&gt;creative&lt;/em&gt; changes that actually alters the meaning or message of a posting, is generally not allowed on SE.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If we move on to &lt;em&gt;real&lt;/em&gt; wikis, multiple edits by different contributors to a body of text tend to be much more &lt;em&gt;entangled&lt;/em&gt; than in the Bob, Alice, Carl string of edits in the OP's question.  In practice, it may not even be &lt;em&gt;possible&lt;/em&gt; to sort out who did what.  Such entangelements are sometimes known as &lt;em&gt;massively collaborative projects&lt;/em&gt; or &lt;em&gt;massively co-authored projects&lt;/em&gt; and depending on the number of co-authors, it becomes decreasingly practical to attribute all &lt;em&gt;individual&lt;/em&gt; co-authors by name.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This problem is addressed in &lt;a href=&quot;http://creativecommons.org/weblog/entry/13232&quot; rel=&quot;nofollow&quot;&gt;an article&lt;/a&gt; by (then) vice president of the Creative Commons, Mike Linkswayer, and includes a summary of a survey conducted by the English and German Wikipedias regarding how contributors feel about what constitutes appropriate credit for using Wikipedia content. These are, in order of preference:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Link to the article must be given.&lt;/li&gt;&#xA;&lt;li&gt;Collective credit (e.g. Wikipedia community).&lt;/li&gt;&#xA;&lt;li&gt;Link to the version history must be given.&lt;/li&gt;&#xA;&lt;li&gt;For online use: link. For other uses: full list of authors.&lt;/li&gt;&#xA;&lt;li&gt;Full list of authors must always be copied.&lt;/li&gt;&#xA;&lt;li&gt;No credit is needed.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;Mike does not conclude, but notes that the method ranked top in this survey is &quot;Link to the article&quot;, and that the the CC attribution license has since ver. 2.0 recognized the use of a link as a legitimate way to provide attribution.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/legalcode&quot; rel=&quot;nofollow&quot;&gt;CC BY-SA 4.0&lt;/a&gt; it is no longer specified &lt;em&gt;how&lt;/em&gt; to attribute, instead this is delegated to the Licensor:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;identification of the creator(s) of the Licensed Material and any others designated to receive attribution, in &lt;em&gt;any reasonable manner requested by the Licensor&lt;/em&gt; (including by pseudonym if designated); (my emphasis)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The current &lt;a href=&quot;https://en.wikipedia.org/wiki/Wikipedia:Reusing_Wikipedia_content&quot; rel=&quot;nofollow&quot;&gt;Wikipedia guidelines&lt;/a&gt; for reusing contents made available under CC BY-SA says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;To re-distribute a text page in any form, provide credit to the authors either by including a) a hyperlink (where possible) or URL to the page or pages you are re-using, b) a hyperlink (where possible) or URL to an alternative, stable online copy which is freely accessible, which conforms with the license, and which provides credit to the authors in a manner equivalent to the credit given on this website, or c) a list of all authors. (Any list of authors may be filtered to exclude very small or irrelevant contributions.)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So three alternate methods of attribution is suggested, and two of them involves using a hyperlink, not a long list of authors.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The Wikipedia &lt;strong&gt;Example [attribution] notice&lt;/strong&gt; (reproduced below) also contains no list of co-authors, just a link to the article.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;This article uses material from the Wikipedia article&#xA;&amp;lt;a href=&quot;http://en.wikipedia.org/wiki/Metasyntactic_variable&quot;&amp;gt;&quot;Metasyntactic_variable&quot;&amp;lt;/a&amp;gt;,&#xA;which is released under the&#xA;&amp;lt;a href=&quot;http://creativecommons.org/licenses/by-sa/3.0/&quot;&amp;gt;Creative Commons&#xA;Attribution-Share-Alike License 3.0&amp;lt;/a&amp;gt;.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;In the cases where the license is not a CC-license, or when the Licensor does not provide any guidance about how to attribute, you may need to review the specific license the material is made available under, and your use case for reusing the materials, in order to decide how to best fulfil the attribution requirements.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-07-31T08:47:45.760" LastActivityDate="2015-07-31T08:47:45.760" CommentCount="0" />
  <row Id="1403" PostTypeId="2" ParentId="1399" CreationDate="2015-07-31T08:47:56.193" Score="9" Body="&lt;p&gt;These licenses are very suitable for use in a corporate environment. The licenses used by GNU are the Free Software Foundation family of licenses: GPL, LGPL and AGPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;These licenses have the restriction that you are obliged to include the source code and release your software under the same license &lt;em&gt;if you distribute the softeware&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you don't distribute the software, you don't have any further obligations. You do receive some freedoms though.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;You are guaranteed to receive the source code, and you are free to modify it to suit your particular need.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;You are free to use the software for any purpose.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;If the license is the GPLv3 you receive a patent grant for any patents the publisher of the software has.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Examples of software commonly used under the GPL are the Linux kernel and the rest of the GNU/Linux operating system, including the GCC compiler, Git, FileZilla and WordPress, just to name a few. The FireFox browser uses a similar copyleft license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Almost all corporate environments make use of GPL licensed software. &lt;a href=&quot;http://fortune.com/2013/05/06/how-linux-conquered-the-fortune-500/&quot; rel=&quot;nofollow&quot;&gt;90% of fortune 500 companies use Linux in some way&lt;/a&gt;, and there is a lot more GPL software than just Linux. &lt;/p&gt;&#xA;" OwnerUserId="97" LastEditorUserId="97" LastEditDate="2015-08-03T14:52:56.277" LastActivityDate="2015-08-03T14:52:56.277" CommentCount="1" />
  <row Id="1404" PostTypeId="5" CreationDate="2015-07-31T12:11:22.543" Score="0" Body="" OwnerUserId="-1" LastEditorUserId="-1" LastEditDate="2015-07-31T12:11:22.543" LastActivityDate="2015-07-31T12:11:22.543" CommentCount="0" />
  <row Id="1405" PostTypeId="4" CreationDate="2015-07-31T12:11:22.543" Score="0" Body="Use this tag for questions about the GPL/GNU family of licenses: the various versions of the GPL, LGPL and AGPL." OwnerUserId="97" LastEditorUserId="97" LastEditDate="2015-07-31T12:43:55.567" LastActivityDate="2015-07-31T12:43:55.567" CommentCount="0" />
  <row Id="1406" PostTypeId="2" ParentId="1399" CreationDate="2015-07-31T18:22:30.470" Score="16" Body="&lt;p&gt;The Open Source Initiative considers the GNU &lt;a href=&quot;http://opensource.org/licenses/gpl-license&quot;&gt;GPL&lt;/a&gt; and &lt;a href=&quot;http://opensource.org/licenses/lgpl-license&quot;&gt;LGPL&lt;/a&gt; to be approved licenses, which means that they meet their &lt;a href=&quot;http://opensource.org/osd&quot;&gt;Open Source Definition&lt;/a&gt;.  Criteria for qualifying as Open Source licenses include &quot;No Discrimination Against Persons or Groups&quot; and &quot;No Discrimination Against Fields of Endeavor&quot;.  From a legal point of view, software covered by any of the &lt;a href=&quot;http://opensource.org/licenses/category&quot;&gt;many Open Source licenses&lt;/a&gt; would be allowable for use in a corporate/commercial environment.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You are not even required to accept the GNU license before running the software, and even if you did, the license states that you are free to run it for any purpose.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;The GNU General Public License and Lesser General Public License only address copying (or &quot;conveying&quot;, in GPLv3 terminology), not use.  In fact, you can use the software for any purpose you want, because &lt;em&gt;you aren't even required to accept the license&lt;/em&gt;.  From &lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0.en.html#section9&quot;&gt;GPLv3&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;h2&gt;9. Acceptance Not Required for Having Copies.&lt;/h2&gt;&#xA;  &#xA;  &lt;p&gt;You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;A similar clause exists, for example, in &lt;a href=&quot;https://www.gnu.org/licenses/old-licenses/gpl-2.0.html&quot;&gt;GPLv2&lt;/a&gt; (paragraph 5) and &lt;a href=&quot;https://www.gnu.org/licenses/old-licenses/lgpl-2.0.html&quot;&gt;LGPLv2&lt;/a&gt; (paragraph 9):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Library or its derivative works. […]&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Be careful, however, about sharing modified copies within the company.  If, for example, your company has international subsidiaries, a case could be made that a customization made by Acme LLC in the US that is used by Acme Ltd. in the UK is a conveyance that is covered by the GPL.  In that case, Acme LLC would be bound by the license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Nevertheless, each party is explicitly granted permission to run the code by GPLv3:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;h2&gt;2. Basic Permissions.&lt;/h2&gt;&#xA;  &#xA;  &lt;p&gt;[…]&#xA;  This License explicitly affirms your unlimited permission to run the unmodified Program. […]&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;And GPLv2 says this in paragraph 0 (emphasis added):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. &lt;strong&gt;The act of running the Program is not restricted,&lt;/strong&gt; and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="655" LastEditorUserId="655" LastEditDate="2015-07-31T19:24:08.890" LastActivityDate="2015-07-31T19:24:08.890" CommentCount="0" />
  <row Id="1407" PostTypeId="2" ParentId="1399" CreationDate="2015-07-31T19:21:50.113" Score="11" Body="&lt;p&gt;As has been said by everyone, there is no issue with a business using GPL licensed software within its organization. It happens all the time.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I have noticed that many of the answers and comments have raised a concern over distributing the software within the corporation, and its subsidiaries, etc. For example, in &lt;a href=&quot;http://opensource.stackexchange.com/a/1400/29&quot;&gt;http://opensource.stackexchange.com/a/1400/29&lt;/a&gt;, Tomasz states&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;However be aware that if you (or the company) ever make changes to the software and want to distribute it, it must be distributed with full source code, on the same license terms as the original software.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;And this is completely correct. But it can give the impression that you might be required to make the source available to &lt;em&gt;everyone&lt;/em&gt;, which is what scares people.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In fact, the GPL requires you to make the source available to the people &lt;strong&gt;receiving the distribution&lt;/strong&gt;. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Thus, even if you were distributing it to a subsidiary in another country, as long as you provide them with the source you have met the license obligation. Such a distribution should also come with instructions not to release the software outside of the organization.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;With that in mind, it is perfectly possible to take an GPL licensed product, customize it heavily for internal use, and then distribute and use it widely through your organization.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is explicitly covered in the &lt;a href=&quot;https://www.gnu.org/licenses/gpl-faq.html#GPLRequireSourcePostedPublic&quot;&gt;FSF FAQ&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Does the GPL require that source code of modified versions be posted&#xA;  to the public?&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The GPL does not require you to release your modified version, or any&#xA;  part of it. You are free to make modifications and use them privately,&#xA;  without ever releasing them. This applies to organizations (including&#xA;  companies), too; an organization can make a modified version and use&#xA;  it internally without ever releasing it outside the organization.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Of course, this now means you have all the hassles of maintaining a private fork.&lt;/p&gt;&#xA;" OwnerUserId="29" LastActivityDate="2015-07-31T19:21:50.113" CommentCount="0" />
  <row Id="1408" PostTypeId="2" ParentId="1223" CreationDate="2015-07-31T22:17:24.430" Score="-1" Body="&lt;p&gt;If Stack Exchange is an example of proprietary software, then here are a few examples of open source projects that they use. Before I list the points though, I do want to highlight that although the question asked for software, Stack Exchange is more of a system, with many operations that they need to take. I've posted this answer namely as a way to help others to find further examples of such dependencies. Namely, Stack Exchange is well known across this community, so it may be more clear to everyone that visits this post.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://blog.stackexchange.com&quot;&gt;The Blog&lt;/a&gt;: (necessary for public communications, media relations)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The Stack Exchange blog is based on &lt;a href=&quot;http://jekyllrb.com/&quot; rel=&quot;nofollow&quot;&gt;Jekyll&lt;/a&gt;, an open source project for powering blogs. Before, they used Wordpress. The blog looks amazing now, and I suggest that you check it out!&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://blog.stackexchange.com/2014/11/announcing-bosun-our-new-open-source-monitoring-alerting-system/&quot;&gt;Bosun&lt;/a&gt;: (necessary for reliable operations, problem diagnosis, systems monitoring)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is the monitoring system that Stack Exchange uses to make sure that their systems run smoothly without failure. It's able to forecast and predict failures, as well as maintenance on existing systems. You can check it out more on their blogpost.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;These are just examples that Stack Exchange uses in their everyday operations. I've posted this answer namely to help illustrate some examples that are indirectly seen by the active community on this site.&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-08-01T18:34:31.007" LastActivityDate="2015-08-01T18:34:31.007" CommentCount="8" />
  <row Id="1409" PostTypeId="1" CreationDate="2015-07-31T23:18:20.100" Score="2" ViewCount="63" Body="&lt;p&gt;A open software license generally outlines what conditions that a fellow software developer must follow in respect to the original project, be it someone who is plain out of the blue looking at it, and debating whether to do something to it, or whether it is a full-out fork or derivative. Basically, they just dictate what you can do. For example, &lt;a href=&quot;http://www.wtfpl.net/about/&quot; rel=&quot;nofollow&quot;&gt;the WTFPL makes absolutely clear it's single clause:&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;code&gt;0.&lt;/code&gt; You just DO WHAT THE FUCK YOU WANT TO.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;However, many projects that are distributed to the general public are normally accompanied with the End User License Agreement, or EULA. According to &lt;a href=&quot;http://www.avangate.com/avangate-resources/article/eula-software.htm&quot; rel=&quot;nofollow&quot;&gt;Avangate&lt;/a&gt;: (emphasis mine)&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The EULA (End User License Agreement) is, as its name shows it, a contract between the software developer and a potential user. By means of this contract it is established that the developer of the software is its de facto owner, and that a copy of the respective software bought from a vendor (or downloaded from the Internet) only licenses it to a user...&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The end user is only allowed to use it as long as certain terms are respected, and is also prohibited from any alterations or uses of the software without the specific consent of its rightful owner, the software company/developer.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Does another developer count as a potential user? To me, it looks like yes: They are using the software, just in a different way from someone within the general public: they are using the code, but not necessarily the intended functionality, but they are still &quot;using&quot; it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Aside from what a &quot;potential user&quot; is really defined as, it sounds like an End User License Agreement is a license. If the developers behind a fork/derivative are &quot;users&quot; of the original project, could they be subject to the terms and conditions of the End User License Agreement? Is an EULA the same thing as a license? Where is it ever appropriate to use an EULA in a project?&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="98" LastEditDate="2015-08-04T10:07:43.290" LastActivityDate="2015-08-04T10:07:43.290" Title="What is the difference between a license, and an EULA when forking a project?" Tags="&lt;development&gt;&lt;distribution&gt;&lt;derivative-works&gt;&lt;license-notice&gt;&lt;end-user-agreements&gt;" AnswerCount="1" CommentCount="1" />
  <row Id="1410" PostTypeId="1" CreationDate="2015-08-01T00:06:13.333" Score="2" ViewCount="32" Body="&lt;p&gt;Java and a few java libraries provide a &quot;classpath&quot; exception. To me, this seems similar to the LGPL's linking exceptions. What is the difference between the GPL with a classpath exception and the LGPL?&lt;/p&gt;&#xA;" OwnerUserId="1060" LastEditorUserId="69" LastEditDate="2015-08-01T09:49:10.860" LastActivityDate="2015-08-01T09:49:10.860" Title="What is the difference between GPL + Classpath exception vs LGPL" Tags="&lt;gpl&gt;&lt;lgpl&gt;&lt;exceptions&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="1411" PostTypeId="1" CreationDate="2015-08-01T02:43:11.603" Score="0" ViewCount="51" Body="&lt;p&gt;Chromium development is still very much active on &lt;a href=&quot;https://code.google.com/p/chromium/issues/list&quot; rel=&quot;nofollow&quot;&gt;Google Code&lt;/a&gt;, which will turn read-only on August 25th 2015.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://i.stack.imgur.com/BWfHh.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;http://i.stack.imgur.com/BWfHh.png&quot; alt=&quot;Chromium on Google Code&quot;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What are the plans to move Chromium development?&lt;/p&gt;&#xA;" OwnerUserId="447" LastEditorUserId="69" LastEditDate="2015-08-01T09:50:55.883" LastActivityDate="2015-08-01T09:50:55.883" Title="Chromium move once Google Code becomes read-only" Tags="&lt;google-code&gt;" AnswerCount="1" CommentCount="8" FavoriteCount="1" ClosedDate="2015-08-02T07:13:11.123" />
  <row Id="1412" PostTypeId="2" ParentId="1411" CreationDate="2015-08-01T04:04:13.247" Score="3" Body="&lt;p&gt;If you click on the link &quot;this post&quot;, you will see &lt;a href=&quot;https://code.google.com/p/support/wiki/ReadOnlyTransition&quot; rel=&quot;nofollow&quot;&gt;this page&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It contains more information about the process, including this  text:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;As &lt;a href=&quot;http://google-opensource.blogspot.com/2015/03/farewell-to-google-code.html&quot; rel=&quot;nofollow&quot;&gt;previously announced&lt;/a&gt;, &lt;strong&gt;most of&lt;/strong&gt; Google Code will become read-only on August 25th, 2015.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;We are still working with Google-affiliated projects (e.g., &lt;a href=&quot;https://code.google.com/p/chromium/&quot; rel=&quot;nofollow&quot;&gt;/p/chromium&lt;/a&gt; and &lt;a href=&quot;https://code.google.com/p/android/&quot; rel=&quot;nofollow&quot;&gt;/p/android&lt;/a&gt;) to get them migrated to other tools and make their projects read-only by the end of the year. &lt;strong&gt;These projects will remain read-write until we can transition all their data off of Google Code&lt;/strong&gt;. (my emphasis)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So it says that you will be able to work on &lt;em&gt;Chromium&lt;/em&gt; (and &lt;em&gt;Android&lt;/em&gt;) in read-write mode &lt;em&gt;until&lt;/em&gt; Google decides where to migrate them to some other tool chosen by Google (e.g. GitHub).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;When&lt;/em&gt; a decision to migrate is made, it will probably be announced on that same page.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-01T04:11:02.377" LastActivityDate="2015-08-01T04:11:02.377" CommentCount="0" />
  <row Id="1413" PostTypeId="2" ParentId="1410" CreationDate="2015-08-01T04:43:08.490" Score="2" Body="&lt;p&gt;The LGPL and GPL + the Classpath exception share the property that if you link code under these terms into your  program, the resulting derivative work does not have to be made available as free software. Instead you can copy and distribute the resulting binary executable under terms of your choice.  This means that the source code does not have to be provided to downstream recipients.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, the &lt;a href=&quot;http://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html&quot; rel=&quot;nofollow&quot;&gt;LGPL 2.1&lt;/a&gt; says (sec. 6):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;As an exception to the Sections above, you may also combine or link a &quot;work that uses the Library&quot; with the Library to produce a work containing portions of the Library, and distribute that work under terms of your choice, provided that the terms permit modification of the work for the customer's own use and reverse engineering for debugging such modifications.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;While &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.en.html&quot; rel=&quot;nofollow&quot;&gt;LGPL 3&lt;/a&gt; says (sec. 4):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You may convey a Combined Work under terms of your choice that, taken together, effectively do not restrict modification of the portions of the Library contained in the Combined Work and reverse engineering for debugging such modifications, if you also do each of the following: [...]&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I.e.: the LGPL permit &lt;em&gt;modifications&lt;/em&gt; of the combined work and &lt;em&gt;reverse engineering&lt;/em&gt; for debugging such modifications.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That is not much freedom, but apparently some people did not like the explicit permission to do modify the work and to make use of reverse engineering, so  GPL + the &lt;a href=&quot;http://www.gnu.org/software/classpath/license.html&quot; rel=&quot;nofollow&quot;&gt;Classpath exception&lt;/a&gt; does not contain such a permission.&lt;/p&gt;&#xA;" OwnerUserId="606" LastActivityDate="2015-08-01T04:43:08.490" CommentCount="5" />
  <row Id="1414" PostTypeId="2" ParentId="175" CreationDate="2015-08-01T05:06:08.223" Score="1" Body="&lt;p&gt;I am going to answer this by dipping down in the actual &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode&quot; rel=&quot;nofollow&quot;&gt;license&lt;/a&gt;, and some of the work that led to it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Early on in the process to create CC version 4.0, it was objected that a too strict ban on &quot;Technological Protection Measures - TPM&quot; (lawyer-speak for DRM) that had been used in previous version would disallow use of CC licensed materials on too many platforms, e.g.:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;Several popular game and media distribution platforms, such as the PlayStation and most modern digital TVs (via HDMI/HDCP), require TPMs.&lt;/li&gt;&#xA;  &lt;li&gt;Apple's iOS App Store app distribution platform uses the combination of FairPlay TPM (and perhaps other measures) to control use of iOS apps.&lt;/li&gt;&#xA;  &lt;li&gt;All Japanese terrestrial broadcasting is protected by a TPM. [...] When the image is CC-BY-ND, it is impossible to comply with the current language and broadcast CC materials over terrestrial TV in Japan. (&lt;a href=&quot;https://wiki.creativecommons.org/wiki/4.0/Technical_protection_measures&quot; rel=&quot;nofollow&quot;&gt;Source&lt;/a&gt;.)&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The concern that locking-out CC materials from these platforms would make people decide to &lt;em&gt;not&lt;/em&gt; use the CC license, as they wanted their materials distributed through these channels, even if that gave their audience/users less freedom.  If people opt to not use CC, CC loses.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, after a very long discussion, the CC-community decided to &lt;em&gt;keep&lt;/em&gt; the strong anti-DRM clauses of the previous versions, so also in CC ver. 4.0, there is an &lt;em&gt;explicit&lt;/em&gt; anti-DRM-clause (sec 2(a)(4)) in ver. 4.0:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You may not [...] apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;It uses the phrase &quot;Effective Technological Measures&quot;. This is also lawyer-speak for DRM.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, the license actually ban you from distributing any CC-licensed materials through re-distributions channels that use DRM, such as &lt;em&gt;iOS App Store&lt;/em&gt; and &lt;em&gt;Steam&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, if you do this anyway, it is unlikely that CC is going to go after you for &quot;inappropriate use of a CC license&quot; &lt;code&gt;:-)&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Instead, Creative Commons has &lt;em&gt;anticipated&lt;/em&gt; that this will probably happen from time to time. Many creators distributing on these platforms may not even be &lt;em&gt;aware&lt;/em&gt; of the use of DRM. In order to mitigate this, the CC version 4.0 licenses explicitly allows circumvention of the DRM.  In the license text, you'll find this text (sec. 2(a)(4)):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The reason this waiver is made by the Licensor is because anti-circumvention laws are supposed to protect the owner of the copyright to the materials (i.e. the Licensor) from illegal use.  &quot;Effective Technological Measures&quot; is &lt;em&gt;not&lt;/em&gt; supposed to be used for &lt;em&gt;other&lt;/em&gt; purposes, such has helping the re-distributor in locking-in customers. So only the copyright-owner can authorize DRM, and only copyright-owner can authorize circumvention of DRM.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I personally wish they had left out the &lt;em&gt;explicit&lt;/em&gt; anti-DRM-clause and just allowed circumvention, but the anti-DRM stance is very strong in the CC community, so the &lt;em&gt;explicit&lt;/em&gt; anti-DRM-clause is still there in CC ver. 4.0.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It should also be noted that the permit circumvention clause in CC 4.0 is the &lt;em&gt;same&lt;/em&gt; as the one in GPLv3, and was indeed inspired by it.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-01T15:45:14.760" LastActivityDate="2015-08-01T15:45:14.760" CommentCount="2" />
  <row Id="1415" PostTypeId="2" ParentId="1409" CreationDate="2015-08-01T05:49:11.537" Score="4" Body="&lt;p&gt;You say that &quot;many projects that are distributed to the general public are normally accompanied with the End User License Agreement, or EULA&quot;.  However, but AFAIK, &lt;em&gt;none&lt;/em&gt; of these are &lt;em&gt;free software&lt;/em&gt; projects, so such projects are not on-topic on this site.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But if you did add an EULA to a project that already had a free software license, this would simply be dual-licensing.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Dual-licensing means that users can &lt;em&gt;choose&lt;/em&gt; which license they want. If the EULA imposes &lt;em&gt;less freedom&lt;/em&gt; than the free software license, users would just choose the free software license and ignore the EULA.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So if the free software license is a &lt;em&gt;real&lt;/em&gt; free software license, written by lawyers so make &lt;em&gt;sure&lt;/em&gt; that additional notices that project owners may add can not take away from the user the &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.en.html&quot; rel=&quot;nofollow&quot;&gt;four essential freedoms&lt;/a&gt;, dual-licensing with an EULA is both harmless and meaningless. Users can simply choose to ignore the EULA.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Does another developer count as a potential user?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Strike out &quot;potential&quot;.  A developer is a user.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If the developers behind a fork/derivative are &quot;users&quot; of the original project, could they be subject to the terms and conditions of the End User License Agreement?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;No.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Let me qualify that a bit:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;If the original project came with a &lt;em&gt;real&lt;/em&gt; free software license such as GPL (any version), the developers behind a fork could choose GPL, and then delete the &quot;EULA&quot; from their fork and ignore whatever it said.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;If the original project came with a &quot;crayon&quot; license (such as the WTFL), the legal consequences of also having an EULA in the project would be &lt;em&gt;legal hazard&lt;/em&gt; if you created a fork.  If somebody decided to sue for violating the EULA, you &lt;em&gt;may&lt;/em&gt; lose.  Despite claims about being &quot;absolutely clear&quot;, it is obvious that this particular license is written by bozos, not lawyers. For instance, it doesn't say how to interpret any &lt;em&gt;additional&lt;/em&gt; licenses that comes with the project. And since there is no real guidance about what takes &lt;em&gt;precedence&lt;/em&gt; if the terms of the WTFL and the EULA is inconsistent, the legal outcome of a dispute about would uncertain.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Is an EULA the same thing as a license?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;It is &quot;End User &lt;strong&gt;License&lt;/strong&gt; Agreement&quot;, so the answer is clearly &quot;yes&quot;. &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Where is it ever appropriate to use an EULA in a project?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;If your goal is to to appear as a clueless moron that know nothing about free software licensing, then adding an EULA to a free software project is a good start.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you also want to make sure your users are confused about what your licensing terms really means, then using WTFL + EULA dual-licensing would be appropriate.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-01T06:04:29.660" LastActivityDate="2015-08-01T06:04:29.660" CommentCount="0" />
  <row Id="1416" PostTypeId="2" ParentId="434" CreationDate="2015-08-01T10:29:41.903" Score="-1" Body="&lt;p&gt;The Creative Commons suite of licenses is built from &lt;em&gt;four&lt;/em&gt; basic components that also appear in the name of the license.  These components are:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Attribution (BY)&lt;/li&gt;&#xA;&lt;li&gt;ShareAlike (SA)&lt;/li&gt;&#xA;&lt;li&gt;NonCommercial (NC) - &lt;strong&gt;Non-Free&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;NoDerivs (ND) - &lt;strong&gt;Non-Free&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;The latter two are considered &lt;strong&gt;Non-Free&lt;/strong&gt; by Creative Commons, so if at least one of those components are included in a CC license, the license is not considered to be, a &quot;Free Culture License&quot;, and it's not advertised as such.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This means that of the six CC licenses, only CC BY and CC BY-SA are a Free Culture Licenses. In addition, Creative Commons say the CC0 legal tool (it is not a license) can be used for Free Cultural Works. This means that the following are considered by the Creative Commons organization as &quot;free&quot; tools and licenses:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CC BY&lt;/li&gt;&#xA;&lt;li&gt;CC BY-SA&lt;/li&gt;&#xA;&lt;li&gt;CC0&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;While the following four CC-licenses are not free:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CC BY-ND&lt;/li&gt;&#xA;&lt;li&gt;CC BY-NC&lt;/li&gt;&#xA;&lt;li&gt;CC BY-ND-NC&lt;/li&gt;&#xA;&lt;li&gt;CC BY-NC-SA&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;The terminology for &quot;Free Culture&quot; used by the Creative Commons corresponds to the criteria for the &lt;a href=&quot;http://freedomdefined.org/Definition&quot; rel=&quot;nofollow&quot;&gt;Free Cultural Works definition&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="97" LastEditDate="2015-08-06T17:11:46.203" LastActivityDate="2015-08-06T17:11:46.203" CommentCount="0" />
  <row Id="1417" PostTypeId="2" ParentId="1394" CreationDate="2015-08-01T11:31:50.950" Score="3" Body="&lt;p&gt;Thank you for clarifying the question, which is:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Can I [force] charge any royalties for derivatives of my open source project that are being used commercially?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;No.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;At least not if you use a real free software license) that goes to some lengths to guarantee the user the &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.en.html&quot; rel=&quot;nofollow&quot;&gt;four essential freedoms&lt;/a&gt;, as charging royalties would conflict with the freedom to use (run) and freedom to distribute:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The freedom to run the program as you wish, for any purpose (freedom 0).&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Freedom to distribute (freedoms 2 and 3) means you are free to redistribute copies, either with or without modifications, either gratis or charging a fee for distribution, to anyone anywhere.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Saying that whoever distributes or otherwise uses your program cannot do so &lt;em&gt;unless&lt;/em&gt; they pay you royalties would violate those essential freedoms.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;You say you are not interested in patents or trademarks, but as a bonus &lt;code&gt;:-)&lt;/code&gt;, you'll get those answered as well.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Trademarks are irrelevant. You're not allowed to use a trademark without permission, no matter what type of license is used, so just modify the software to not show it. There is no way to force anyone to pay for your free software even if you've trademarked it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As for collecting royalties on patents: If your license is GPLv2, GPLv3 and AGPL, please note that all of these have &lt;em&gt;explicit&lt;/em&gt; anti-patent clauses that would also prevent you from collecting patent royalties.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As for licenses that don't mention patents up front, such as the MIT license, it says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Permission is hereby granted, &lt;strong&gt;free of charge&lt;/strong&gt;, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software &lt;strong&gt;without restriction&lt;/strong&gt;, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: [...] (my emphasis)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;While not as iron-clad as the anti-patent clauses of the GPL-licenses, the general language promising &lt;em&gt;unrestricted&lt;/em&gt; rights to use and the rights to distribution &lt;em&gt;free of charge&lt;/em&gt; will make it &lt;em&gt;very difficult&lt;/em&gt; for a licensor to collect &lt;em&gt;any money&lt;/em&gt;, for whatever reason, if the software is offered under the MIT license. It is very likely that if you hold a patent, and try to collect, the court will rule that by using those exact words, you've waived your right to collect &lt;em&gt;any&lt;/em&gt; royalties - including patent royalties - on use and distribution of the licensed software.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-01T14:23:55.667" LastActivityDate="2015-08-01T14:23:55.667" CommentCount="2" />
  <row Id="1418" PostTypeId="2" ParentId="1398" CreationDate="2015-08-01T13:55:26.833" Score="1" Body="&lt;p&gt;If a license does not mention patents, it does not grant a license to patents.&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;You hold a patent&lt;/li&gt;&#xA;&lt;li&gt;You implement some software which uses the methods covered by the patent.&lt;/li&gt;&#xA;&lt;li&gt;You publish that software and attach an MIT license, or some other license that never says the word 'patent.'&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;You have not granted any patent rights. On the other hand, you also have not advertised the existence of the patent. Note the usual fine print on physical objects that lists the patents involved. According to &lt;a href=&quot;http://www.webblaw.com/resources/faq/patents.htm&quot; rel=&quot;nofollow&quot;&gt;http://www.webblaw.com/resources/faq/patents.htm&lt;/a&gt;, you can't claim damages from someone who infringes your patent unless you disclose in this fashion. It might also be considered &lt;em&gt;polite&lt;/em&gt; to warn people that the use of your software puts them in a position where they need a patent license from you if they realize economic gain.&lt;/p&gt;&#xA;" OwnerUserId="554" LastActivityDate="2015-08-01T13:55:26.833" CommentCount="0" />
  <row Id="1419" PostTypeId="2" ParentId="1399" CreationDate="2015-08-01T15:53:40.267" Score="3" Body="&lt;p&gt;The simplest way to think about the GPL is that it means you have to distribute software in the form of source code. You can distribute pre-compiled binaries as well, if you like, but the primary form of software is source and that's what you get and give.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;More pithily: binaries are optional, source is not.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Obviously, this has very little impact on whether a person or company can use the source code they have obtained obtain, if any.&lt;/p&gt;&#xA;" OwnerUserId="1068" LastActivityDate="2015-08-01T15:53:40.267" CommentCount="3" />
  <row Id="1420" PostTypeId="2" ParentId="1394" CreationDate="2015-08-01T16:11:16.470" Score="0" Body="&lt;p&gt;The answer depends a lot on what you are referring to when you say &quot;derivative&quot;, who is making said derivative, and what kind of &quot;royalty&quot; you'd like to force, and what you mean by &quot;commercial&quot;. One might infer from your question as worded that you are referring to a fork of an open source project that is making money off the software somehow and you'd like to collect money for each user they have. If that's the case the answer is simply no. However there are many other possible ways you could mean derived, and other ways to collect fee's. Dual licensing, Charging for source, binaries, and other distributions, charging for plugins, or more feature rich versions, and requiring your competitor to rebrand come to mind.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, if you license the original work as GPLv3, as the copyright holder (presuming you're the sole or otherwise have a contributor license agreement that prevents them from being copyright holders). You can still license a derived work as proprietary under the same kind of dual licensing that &lt;a href=&quot;http://www.qt.io/licensing/&quot; rel=&quot;nofollow&quot;&gt;Qt&lt;/a&gt;, and  &lt;a href=&quot;https://www.mysql.com/about/legal/licensing/oem/&quot; rel=&quot;nofollow&quot;&gt;MySQL&lt;/a&gt; use to release proprietary plugins, and other commercial derivatives. Basically as a copyright holder, you can relicense at will.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;a href=&quot;https://www.gnu.org/licenses/gpl-faq.html#DeveloperViolate&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Is the developer of a GPL-covered program bound by the GPL? Could the developer's actions ever be a violation of the GPL?&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Strictly speaking, the GPL is a license from the developer for others to use, distribute and change the program. The developer itself is not bound by it, so no matter what the developer does, this is not a “violation” of the GPL.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;However, if the developer does something that would violate the GPL if done by someone else, the developer will surely lose moral standing in the community.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;GPL explicitly allows you to charge redistribution, built binaries, documentation, and support. However, it  require that people building binaries, or that have paid for your source, &lt;em&gt;not&lt;/em&gt; be required to charge for redistributing those. Basically once someone else has the source they can do all of those things too.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here are some relevant sections of the GPL FAQ pertaining to my statements.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;a href=&quot;https://www.gnu.org/licenses/gpl-faq.html#DoesTheGPLAllowRequireFee&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Does the GPL allow me to require that anyone who receives the software must pay me a fee and/or notify me?&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;No. In fact, a requirement like that would make the program non-free. If people have to pay when they get a copy of a program, or if they have to notify anyone in particular, then the program is not free. See the definition of free software.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The GPL is a free software license, and therefore it permits people to use and even redistribute the software without being required to pay anyone a fee for doing so.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;You can charge people a fee to get a copy from you. You can't require people to pay you when they get a copy from someone else.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&lt;a href=&quot;https://www.gnu.org/licenses/gpl-faq.html#DoesTheGPLRequireAvailabilityToPublic&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;If I distribute GPL'd software for a fee, am I required to also make it available to the public without a charge?&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;No. However, if someone pays your fee and gets a copy, the GPL gives them the freedom to release it to the public, with or without a fee. For example, someone could pay your fee, and then put her copy on a web site for the general public.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;You can also pull a Mozilla and require that your trademark, e.g FireFox, only be applied to binaries build by you, Mozilla. If someone else builds the binaries they must use a different name.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You may distribute unchanged official binaries (i.e., the installer file available for download for each platform (code + config) and not the program executable) downloaded from www.mozilla.com or www.mozilla.org to anyone in any way, subject to governing law, without receiving any further permission from Mozilla. If you want to distribute the unchanged official binaries using the Mozilla Marks, you may do so, without receiving any further permission from Mozilla, as long as you comply with this Trademark Policy and you distribute them without charge. However, you must not remove or change any part of the official binary, including the Mozilla Marks. On your website or in other materials, you may truthfully state that the software you are providing is an unmodified version of a Mozilla application, keeping in mind the overall guidelines for the use of Mozilla Marks in printed materials, detailed above. We suggest that, if you choose to provide visitors to your website the opportunity to download Mozilla product, you do so by means of a link to our site, to help ensure faster, more reliable downloads.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/foundation/trademarks/policy/&quot; rel=&quot;nofollow&quot;&gt;Mozilla Trademark Policy&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One trick, that you might do is AGPLv3 the source, which means if anyone outside of the copyright holder is using it (including over the network) and modified it, they must distribute their source changes. You could then prevent, using that trademark policy the use of your trademark, and allow relicensing under less restrictive terms if they were to pay you. I am not a lawyer, I would ensure that AGPL allows the craziness of the Trademark Policy.&lt;/p&gt;&#xA;" OwnerUserId="1060" LastEditorUserId="1060" LastEditDate="2015-08-01T19:08:18.313" LastActivityDate="2015-08-01T19:08:18.313" CommentCount="4" />
  <row Id="1421" PostTypeId="1" AcceptedAnswerId="1422" CreationDate="2015-08-01T20:00:04.463" Score="10" ViewCount="430" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;There is a case between Google and Oracle over the use of Java and it's standard library on the Google Android operating system. From [this article]:&lt;/p&gt;&#xA;  &#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;To recap: Oracle accused Google of copying some of its Java computer code when it wrote Android. Android itself wasn't the issue. Android is different than Java. But Google wanted developers who work with Java, a popular language for web apps, to jump to Android. So it incorporated Java's application programming interfaces (APIs) into Android. This allowed them to quickly convert their apps to Android and it meant that the millions of programmers trained on Java would be familiar with Android, too. &lt;/p&gt;&#xA;    &#xA;    &lt;p&gt;Oracle sued claiming that the APIs were copyrighted. But the judge ruled that APIs are not subject to copyright laws&lt;/p&gt;&#xA;    &#xA;    &lt;p&gt;On Friday, an appellate court just overturned that loss, and said APIs are subject to copyright.&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;  &#xA;  &lt;p&gt;&lt;a href=&quot;http://opensource.stackexchange.com/q/762/1060&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;My question is, Java is Open Source, and was at the time Google forked ( used loosely to mean copied some pieces of code), AFAIK. I'm not interested in whether APIs are copyright-able, let's assume they are (since that's where the case left off). How is what Google did not permissible under the Open Source license that it's distributed under (AFAIK GPLv2 (or 3?) with Classpath exception)?&lt;/p&gt;&#xA;" OwnerUserId="1060" LastEditorUserId="606" LastEditDate="2015-08-03T08:43:21.583" LastActivityDate="2015-08-03T08:43:21.583" Title="How is Oracle suing Google for copyright infringement when Java is Open Source?" Tags="&lt;gpl&gt;&lt;law&gt;&lt;exceptions&gt;&lt;java&gt;" AnswerCount="1" CommentCount="0" FavoriteCount="3" />
  <row Id="1422" PostTypeId="2" ParentId="1421" CreationDate="2015-08-01T20:38:22.070" Score="7" Body="&lt;p&gt;First Google never &quot;forked Java&quot; for Android. Google implemented its own Java for Android, but when doing so copied the API of &lt;em&gt;Oracle JDK&lt;/em&gt;.&#xA;(and also copied a method named &lt;code&gt;rangeCheck&lt;/code&gt; of 9 lines of utterly trivial code).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You must to be careful when you say &quot;Java&quot;. Oracle has &lt;a href=&quot;http://www.oracle.com/us/technologies/open-source/overview/index.html&quot; rel=&quot;nofollow&quot;&gt;licensed &lt;em&gt;OpenJDK&lt;/em&gt; under GPLv2 with the classpath extension&lt;/a&gt;. This is an open source project consisting of legacy code from the Sun Java project (taken over by Oracle). Oracle has never objected to the API or code from &lt;em&gt;OpenJDK&lt;/em&gt; to be used in open source projects.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is also a closed source &lt;em&gt;Oracle JDK&lt;/em&gt;. This includes Oracle’s implementation of Java Plugin and Java WebStart, Oracle JDK Flight Recorder, as well as third party  components like a graphics rasterizer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Software like Android Studio expects &lt;em&gt;Oracle JDK&lt;/em&gt; API to be used, not the &lt;em&gt;OpenJDK&lt;/em&gt; API.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Oracle's infringement suit against Google is about the API to the &lt;em&gt;Oracle JDK&lt;/em&gt;, not the &lt;em&gt;OpenJDK&lt;/em&gt;.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="97" LastEditDate="2015-08-02T07:41:00.860" LastActivityDate="2015-08-02T07:41:00.860" CommentCount="6" />
  <row Id="1424" PostTypeId="1" AcceptedAnswerId="1425" CreationDate="2015-08-02T02:54:57.537" Score="4" ViewCount="104" Body="&lt;p&gt;As &lt;a href=&quot;http://www.v-front.de/2013/08/a-myth-busted-and-faq-esxi-is-not-based.html&quot; rel=&quot;nofollow&quot;&gt;this&lt;/a&gt; blog entry says, although the command line interface of the ESXi server (the virtualization host platform of the VMWare vSphere) isn't derived from Linux, but it is an independently developed, proprietary product.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is a common misconception, that ESXi is a Linux, because its command line interface is very similar. It is true, but in the deeps there is a kernel which is completely different from the Linux.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But, this kernel, the VMKernel, uses a lot of different Linux drivers ported into it. Of course, its developers doesn't bored to develop independent drivers, they have simply imported them from the already available Linux kernel sources.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Thus, the &lt;em&gt;driver&lt;/em&gt; &lt;em&gt;modules&lt;/em&gt; of the VMKernel are Linux-derived products, thus they must be released on GPLv2. And, as I know, on the GPLv2 is it possible to sell software, but the owner must also release its source code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Having the source code of the VMKernel-ported drivers would make also possible to develop VMKernel drivers independently.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But, as I know, no part of the VMKernel was released in source form until now.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;How is it possible? Or I know something badly?&lt;/p&gt;&#xA;" OwnerUserId="106" LastEditorUserId="106" LastEditDate="2015-08-02T05:03:07.233" LastActivityDate="2015-08-02T05:18:22.040" Title="Should the source code of the Linux drivers ported to the VMKernel be released?" Tags="&lt;licensing&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="1425" PostTypeId="2" ParentId="1424" CreationDate="2015-08-02T05:01:46.563" Score="6" Body="&lt;p&gt;I do not think it is possible to answer this question with a &quot;yes&quot; or &quot;no&quot; at the present time.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;On March 5th 2015, &lt;a href=&quot;http://www.theregister.co.uk/2015/03/05/vmware_sued_for_gpl_violation_by_linux_kernel_developer/&quot;&gt;VMware was sued for gpl violation&lt;/a&gt; and the main basis for this lawsuit was the integration of Linux device drivers in the proprietary VMKernel. The &lt;a href=&quot;https://sfconservancy.org/&quot;&gt;Software Freedom Conservatory&lt;/a&gt; is helping funding the lawsuit.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;At present, the &lt;a href=&quot;https://sfconservancy.org/linux-compliance/vmware-lawsuit-faq.html&quot;&gt;SFC's FAQ argues&lt;/a&gt; that the GPL is violated by the WMKernel, and &lt;a href=&quot;https://www.vmware.com/company/news/vmware-update-to-mr-hellwigs-legal-proceedings&quot;&gt;WMware argues&lt;/a&gt; that it is not.  Neither statement contains enough information to make it clear who is right.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Until we have the final words from the courts about this, the only answer that can be given is that we do not know.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-02T05:18:22.040" LastActivityDate="2015-08-02T05:18:22.040" CommentCount="1" />
  <row Id="1426" PostTypeId="1" CreationDate="2015-08-02T05:44:48.503" Score="2" ViewCount="259" Body="&lt;p&gt;There was a lawsuit between Mattell regarding CPHack. As I remember, Mattell bought a company who made a product under the GPL, rescinded the license and sued all those who redistributed original or modified code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The court upheld Mattell, saying that since no one payed money to them, there was no true license and as Mattell is the owner of the code, they can &quot;unlicense&quot; it. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is this a danger to GPL or BSD software?&lt;/p&gt;&#xA;" OwnerUserId="1079" LastEditorUserId="69" LastEditDate="2015-08-04T09:07:59.677" LastActivityDate="2015-08-04T09:07:59.677" Title="Have open source licenses been shut down in court?" Tags="&lt;licensing&gt;&lt;law&gt;&lt;enforcement&gt;" AnswerCount="1" CommentCount="1" FavoriteCount="1" />
  <row Id="1427" PostTypeId="1" CreationDate="2015-08-02T05:57:39.750" Score="2" ViewCount="81" Body="&lt;p&gt;If I made a somewhat complicated website, and I want it (the layout/Javascript) to be under a copyleft license (but not the text), which license should I use?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I want to pull others forks so I have to obey my own license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Would GPL require that all the content also be licensed under the GPL?&lt;/p&gt;&#xA;" OwnerUserId="1080" LastEditorUserId="175" LastEditDate="2015-08-03T01:22:01.137" LastActivityDate="2015-08-03T04:02:46.107" Title="What copyleft license should I use for HTML?" Tags="&lt;gpl&gt;&lt;copyleft&gt;&lt;license-recommendation&gt;" AnswerCount="1" CommentCount="3" />
  <row Id="1428" PostTypeId="2" ParentId="1426" CreationDate="2015-08-02T07:13:53.713" Score="13" Body="&lt;p&gt;Just for the record: &lt;a href=&quot;http://tbtf.com/resource/cphack-history.html&quot; rel=&quot;nofollow&quot;&gt;Mattel didn't &lt;em&gt;buy&lt;/em&gt; CPHack&lt;/a&gt;, &lt;em&gt;CPHack&lt;/em&gt; was not released under GPL (but under an home-made variation based upon the GPL - a so-called &quot;crayon&quot; license), and no attempt to &quot;unlicense&quot; the code was ever made.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here is a brief rundown of what happened: Mattel claimed &lt;em&gt;CPHack&lt;/em&gt; infringed on the copyright of &lt;em&gt;Cyber Patrol 4&lt;/em&gt;, and threatened to sue. The programmers behind &lt;em&gt;CPHack&lt;/em&gt; decided not to risk it in court, but &lt;em&gt;voluntarily&lt;/em&gt; assigned the copyright of &lt;em&gt;CPHack&lt;/em&gt; to Mattel on March 28th 2000, in return for not being sued for copyright violation and damages.  It should be noted that Mattel's copyright infringement claim was never tried in court.  If this claim had been put in front of a judge, I doubt that it would have prevailed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;After being assigned the copyright of &lt;em&gt;CPHack&lt;/em&gt;, Mattel's lawyers started sending out legal threats (dubbed &quot;spampoenas&quot;) to sites that mirrored &lt;em&gt;CPHack&lt;/em&gt;.  These did &lt;em&gt;not&lt;/em&gt; say that the mirror sites infringed the &lt;em&gt;CPHack&lt;/em&gt; copyright (now held by Mattel), but instead accused the mirror sites of acting &quot;in concert with&quot; the program's original authors.  On September 27th 2000, the First Circuit Court of Appeals ruled that these legal threats could safely be ignored.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It should be noted that the license in question was a &quot;crayon&quot; license, not GPL, that there is no evidence that Mattel believed that holding the copyright of the code would permit it to be &quot;unlicensed&quot;, and that nothing (except the bogus legal threats Mattel sent out to re-distributors) was ever tested in court. All this means is that the &lt;em&gt;CPHack&lt;/em&gt; incident is not really a good example to to refer to if you want an answer to the question:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Can anyone acquiring the rights to a free program &quot;unlicense&quot; it?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;If we dismiss the &lt;em&gt;CPHack&lt;/em&gt; incident as irrelevant, and try to answer this directly, I believe the answer is: No.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is supported by the fact that such &quot;unlicensing&quot; has (AFAIK) &lt;em&gt;never&lt;/em&gt; happened, and that Mattel's lawyers, in the &lt;em&gt;CPHack&lt;/em&gt; case, did not try to &quot;unlicense&quot; the program. They did not even have this as &lt;em&gt;plan B&lt;/em&gt;, when &lt;em&gt;plan A&lt;/em&gt; (to prevent re-distribution of by alleging to re-distributors was &quot;acting in concert&quot; with the original developers), failed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Someone that acquires the copyright of a free program can of course &lt;em&gt;stop&lt;/em&gt; distributing the free version, and if they hold the sole copyright they can go on to create a non-free fork and distribute that as binary-only.  But they can't &quot;unlicense&quot; the pre-fork copies that already exist. People will always be able to improve on, and continue to distribute, the free version.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I can only think of &lt;em&gt;one thing&lt;/em&gt; that will make a court invalidate a free software license - and that is if the free software license is found to have  never been valid.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A typical case would be that somebody got hold of the source code of a  proprietary program (say the leaked source code of MS Word), and started to distribute a derivative work of this (perhaps somewhat disguised) as free software under GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In such a case, the GPL is void. To distribute and license a derivative work you need to have permission from the original owner. If you don't have this permission, you can't distribute the derivative at all, nor are you allowed to stick your own license on it.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-04T03:34:45.640" LastActivityDate="2015-08-04T03:34:45.640" CommentCount="1" />
  <row Id="1429" PostTypeId="2" ParentId="1427" CreationDate="2015-08-02T08:23:39.987" Score="3" Body="&lt;p&gt;First, let's look at your content concerns:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Would GPL require that all the content also be licensed under the GPL?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;No, all variations of the GPL has some clause that ensures that any content is &lt;em&gt;excluded&lt;/em&gt; from the license. Here is the text used in AGPLv3:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;A compilation of a covered work with other separate and independent works, which are not by their &lt;em&gt;nature extensions of the covered work&lt;/em&gt;, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an &quot;aggregate&quot; if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate &lt;em&gt;does not cause this License to apply to the other parts&lt;/em&gt; of the aggregate. (my emphasis)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;While the legalize may seem hard to parse, it is just a reminder that copyright law does not regard the &lt;em&gt;content&lt;/em&gt; as a &lt;em&gt;derivative work&lt;/em&gt; of any program code or markup used to create the layout and functionality for that content. Instead, such a combination is a said to be a mere &lt;em&gt;aggregate&lt;/em&gt; and that the copyleft clause of the license does not apply to &lt;em&gt;other&lt;/em&gt; parts (i.e. the non-code) of that aggregate.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The cited clause in the AGPL is not really required, as it is just a reminder stating that this separation between &lt;em&gt;content&lt;/em&gt; and &lt;em&gt;code&lt;/em&gt; is a part of copyright law, but it is helpful to have such a reminder.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It should be noted that such a clause is absent from CC BY-SA.  This is because the CC-licenses are created &lt;em&gt;specifically&lt;/em&gt; for content. However, you can still refer to copyright law and just state that your content is a mere aggregate and shall not be licensed under any CC-license. However, Creative Commons do not recommend that you use CC-licenses for software, and I agree.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;While there is need to worry about &lt;em&gt;the license&lt;/em&gt; being applied to your content, if you intend that &lt;em&gt;others&lt;/em&gt; should use your HTML and Javascript &lt;em&gt;good design practice&lt;/em&gt; would be to separate the two.  This means that instead of making your entire website (including its content) available for sharing (by putting it on GitHub or similar site), you should create a proper &lt;em&gt;template&lt;/em&gt; consisting of only the components (HTML, CSS, Javascript) you &lt;em&gt;want to share&lt;/em&gt; + some &lt;a href=&quot;http://www.lipsum.com/&quot; rel=&quot;nofollow&quot;&gt;dummy content&lt;/a&gt; where necessary.  Finding your &lt;em&gt;entire site&lt;/em&gt; (code + real content) on GitHub may &lt;a href=&quot;http://opensource.stackexchange.com/questions/1209/can-i-adapt-a-cc-by-sa-licensed-webpage-to-host-rights-reserved-copyrighted-cont&quot;&gt;confuse&lt;/a&gt; some people, and will also make it harder for them to use your template.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You also want a &lt;em&gt;copyleft&lt;/em&gt; license, which means we're left with: GPLv2, GPLv3, and AGPLv3.   (CC BY-SA is also copyleft, but it is already deemed unsuitable.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Since this is for a website, forks may not be distributed, but instead used for alternative web-sites.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As the copyleft clauses in GPLv2 and GPLv3 (and CC BY-SA) &lt;em&gt;only&lt;/em&gt; applies in case of re-distribution, they may not be effective making sure a modified website-design being made publicly available.  This means that all these licenses are less suitable for a website-design if you care about copyleft.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That leaves the &lt;a href=&quot;http://www.gnu.org/licenses/agpl-3.0.en.html&quot; rel=&quot;nofollow&quot;&gt;AGPLv3&lt;/a&gt;.  This is a variant of GPLv3. The difference (compared to GPLv3) is that AGPLv3 requires anyone who creates a derivative work, based upon your HTML and JavaScript, and makes the result available on the world wide web, to provide some means to download their modifications.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-03T04:02:46.107" LastActivityDate="2015-08-03T04:02:46.107" CommentCount="0" />
  <row Id="1430" PostTypeId="2" ParentId="1399" CreationDate="2015-08-02T11:52:32.730" Score="3" Body="&lt;p&gt;Yes&lt;/p&gt;&#xA;&#xA;&lt;p&gt;“Free software” means software that respects users' freedom and community. Roughly, it means that the users have the freedom to run, copy, distribute, study, change and improve the software. Thus, “free software” is a matter of liberty, not price. To understand the concept, you should think of “free” as in “free speech,” not as in “free beer”. We sometimes call it “libre software” to show we do not mean it is gratis&lt;/p&gt;&#xA;&#xA;&lt;p&gt;you have:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The freedom to run the program as you wish, for &lt;strong&gt;any&lt;/strong&gt; purpose (freedom 0).&lt;/li&gt;&#xA;&lt;li&gt;The freedom to study how the program works, and change it so it does your computing as you wish (freedom 1). Access to the source code is a precondition for this.&lt;/li&gt;&#xA;&lt;li&gt;The freedom to redistribute copies so you can help your neighbor (freedom 2).&lt;/li&gt;&#xA;&lt;li&gt;The freedom to distribute copies of your modified versions to others (freedom 3). By doing this you can give the whole community a chance to benefit from your changes. Access to the source code is a precondition for this.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;See &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.en.html&quot; rel=&quot;nofollow&quot;&gt;this&lt;/a&gt; page for more information, it is written by same people that wrote GPL. &lt;/p&gt;&#xA;" OwnerUserId="1084" LastActivityDate="2015-08-02T11:52:32.730" CommentCount="0" />
  <row Id="1431" PostTypeId="1" CreationDate="2015-08-02T12:05:14.543" Score="5" ViewCount="108" Body="&lt;p&gt;This question is a follow-up on: &lt;a href=&quot;http://opensource.stackexchange.com/questions/1223/are-there-examples-of-proprietary-software-that-functionally-depends-on-free-sof&quot;&gt;Are there examples of proprietary software that functionally depends on free software?&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Please note that this is not a duplicate, as &quot;copylefted&quot; (and some more, see full list below) are added as criteria.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I can no longer add those criteria to the previous question, because it has already got a good answer. Adding new criteria would invalidate the accepted answer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Here is the &lt;em&gt;new&lt;/em&gt; question:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Are there examples of composite programs that involve both proprietary software and free software &lt;em&gt;and&lt;/em&gt; that also meet the following six criteria:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The free software component that is part of the composite is &lt;em&gt;only&lt;/em&gt; available under a strong copyleft license (no permissive license, no dual-license).&lt;/li&gt;&#xA;&lt;li&gt;The free software component does &lt;em&gt;not&lt;/em&gt; allow some exception to strong copyleft (i.e. no LGPL, no linking exception, classpath exception, system library exception, kernel exception, font exception, etc.)&lt;/li&gt;&#xA;&lt;li&gt;The link that exists between the two programs is &lt;em&gt;not&lt;/em&gt; that &lt;a href=&quot;https://www.gnu.org/licenses/gpl-faq.html#IfInterpreterIsGPL&quot; rel=&quot;nofollow&quot;&gt;one program interprets the other's data&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;The composite is &lt;em&gt;not&lt;/em&gt; a mere aggregate, where the free program just happens to be on the same file system or same media as the proprietary software, with no functional linking between the two.&lt;/li&gt;&#xA;&lt;li&gt;The composite work is &lt;em&gt;distributed&lt;/em&gt; under non-free terms (not only used privatly).&lt;/li&gt;&#xA;&lt;li&gt;A court of law has declared the distribution lawful, &lt;em&gt;or&lt;/em&gt; the distribution has &lt;em&gt;never been challenged&lt;/em&gt; in a court of law.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;The last requirement would exclude &lt;a href=&quot;http://opensource.stackexchange.com/questions/1424/should-the-source-code-of-the-linux-drivers-ported-to-the-vmkernel-be-released&quot;&gt;WMkernel&lt;/a&gt; from being used as example, as this has been challenged in a court of law (the decision is currently pending).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is well known that opinions differs between FSF, OSI and TLF about what type of linkage that triggers the copyleft clause.  My goal here is &lt;em&gt;not&lt;/em&gt; to settle that dispute, or even to come up the the definitive answer about this (I don't even think that is possible).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Why I want to do, is to locate &lt;em&gt;examples&lt;/em&gt; meeting the six criteria listed above.  Yes, such examples &lt;em&gt;may&lt;/em&gt; be  &quot;a legal disaster waiting to happen&quot; (to quote a critic of the original question), but that is not the point. By identifying such examples and study them, we may learn something about what types of composites exist and that (so far) has not been challenged (or has prevailed) about copyleft.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In particular, I am looking for answers that clearly identify the components of the composite program, their functional interdependency, and how they communicate or are linked.  The answer may also contain references to legal theory about this topic, but please note I am not looking for &quot;mere theory&quot;, as I already is familiar with the theoretical positions of FSF, OSI and TLF. Any theory need to be connected to real examples, and its relevance to the example (if not obvious), should be pointed out in the answer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Caveat:&lt;/strong&gt;  Do not even &lt;em&gt;think&lt;/em&gt; about acting on any of the examples or analysis that appear in answers as being authoritative.  This area is legally tangled and if you are going to create such a composite, you must either hire a lawyer to advice you, or you must secure explicit up-front permission to combine works from the copyright holder.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-02T12:15:16.217" LastActivityDate="2015-08-07T15:32:02.160" Title="Are there examples of proprietary software that functionally depends on copylefted software?" Tags="&lt;copyleft&gt;&lt;distribution&gt;&lt;derivative-works&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="3" />
  <row Id="1432" PostTypeId="1" AcceptedAnswerId="1434" CreationDate="2015-08-02T14:53:37.857" Score="6" ViewCount="200" Body="&lt;p&gt;As manager of several free software projects, I am familiar with feature requests that users of my project submit to its public issue queue.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Many of the suggestions are good, but having limited resources available, there is often no way I can assign a feature request to a member of our core development team.  Core team members are on a salary, and in order to  pay them, they have to do paid work (including working on feature-requests somebody will &lt;em&gt;pay for&lt;/em&gt; having implemented). Our contract with paying clients makes sure that the result of this for-pay work always makes it way back into the free software distribution we make available for everyone, but there is little overlap between what paying clients request, and what is requested by members of the public. As a result there is always a huge backlog of feature requests coming from users that are &lt;em&gt;not&lt;/em&gt; paying clients of our company and that are &lt;em&gt;not&lt;/em&gt; willing to sponsor development. I.e. they want it  for free. I've nothing against users that prefer to get their pet feature added for free instead of paying us to add it, I've just not yet found a sensible way to oblige.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;We already have in place a pretty good system for managing and reviewing user's pull-requests, as well as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Contributor_License_Agreement&quot;&gt;CLA&lt;/a&gt; that makes sure that user contributions can safely be merged into our project without creating future problems for our company or for  downstream recipents of our software. We're just not getting as many as we would like of these pull-requests.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I first thought that we could provide additional support and some hand-holding to get the person requesting the feature to implement it. But after trying this out, we discovered that these users are not developers - they are literally &lt;em&gt;just using&lt;/em&gt; our software. So the person requesting the feature is simply not &lt;em&gt;capable&lt;/em&gt; of implementing the feature and submit a pull-request for review. To keep this question simple, just assume that &lt;em&gt;all&lt;/em&gt; these feature requests comes from non-developers unwilling or unable to sponsor development.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, given that the core development team can't provide this service without pay - how can I encourage &lt;em&gt;users&lt;/em&gt; to implement features requested by &lt;em&gt;other&lt;/em&gt; users.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What are the &lt;em&gt;best practices&lt;/em&gt; when dealing with feature requests from the community, given that I want to minimize the cost of doing this for the company, while at the same time encouraging capable users to contribute pull-requests that implements (some of) the requested features?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To avoid this being closed as &quot;too broad&quot; or &quot;opinion based&quot;, I am looking for specific strategies, backed up with references to real free software projects that has successfully encouraged and mobilized users to contribute in this way.  The strategies can either be taken for relevant literature, or from personal experience.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-02T14:59:35.767" LastActivityDate="2015-08-03T07:24:58.327" Title="How can I encourage users to work on other user's feature requests?" Tags="&lt;community&gt;&lt;contributor-agreements&gt;&lt;feature-requests&gt;" AnswerCount="3" CommentCount="0" FavoriteCount="1" />
  <row Id="1433" PostTypeId="2" ParentId="1432" CreationDate="2015-08-02T15:10:54.577" Score="3" Body="&lt;p&gt;This is a matter of community building. I've seen several variations on this theme in the Apache communities I've worked on.  I offer them for what they are worth, which might be nothing to you.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;No such luck: open source communities are composed of people with itches. You can't make someone scratch someone else's itch. When people submit feature requests, ask them to submit a patch that implements it. Obviously, this is not helpful for end-users.&lt;/li&gt;&#xA;&lt;li&gt;Mild Blackmail: ask new would-be committers to work on the backlog of feature requests and bugs as a prerequisite to being given permission to commit -- always assuming that you &lt;em&gt;grant&lt;/em&gt; permission to commit.&lt;/li&gt;&#xA;&lt;li&gt;Esprit de corps: Some communities develop a real feeling of collective pride and responsibility for the 'product', and this results in volunteers working on things just for the good of the product. &lt;em&gt;However&lt;/em&gt;, in my experience, the more obvious it is that some people are being paid and managed to work on it, the less likely it is for volunteers to fill in, except when those volunteers are scratching their own, personal, itches. Esprit-de-corp is unlikely to develop, in my view, in an environment where only employees of a company have commit rights.&lt;/li&gt;&#xA;&lt;li&gt;Allow voting on feature requests. This creates some social pull in the direction of implementing popular feature requests.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Since you work for a commercial enterprise, your commercial enterprise's marketing department can help with the third item. You can't pay these people, but you can offer recognition and swag. Apache is very diffident about this, due to our concern to avoid commercial domination of projects, but you don't have that problem. Heck, you could even consider game-ification along the lines of Stack Exchange.&lt;/p&gt;&#xA;" OwnerUserId="554" LastActivityDate="2015-08-02T15:10:54.577" CommentCount="0" />
  <row Id="1434" PostTypeId="2" ParentId="1432" CreationDate="2015-08-02T15:58:46.783" Score="4" Body="&lt;p&gt;Atlassian (the publisher of tools like Confluence and JIRA) has published a &lt;a href=&quot;https://confluence.atlassian.com/display/DEV/Implementation+of+New+Features+Policy&quot; rel=&quot;nofollow&quot;&gt;Feature Implementation Policy&lt;/a&gt;, which may be of some use. While not &lt;em&gt;quite&lt;/em&gt; what you're looking for in that Atlassian still implement the features themselves, it does detail how they deal with scheduling feature requests.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In general, to get people to do something they're not &lt;em&gt;obliged&lt;/em&gt; to do, you need to provide an incentive. This is the most important consideration. When someone submits a feature to you, recognise that they've put a lot of work into it and reward them somehow. This could be:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;monetary: a small (£10 maybe) reward - the official staff need &lt;em&gt;salaries&lt;/em&gt;, but &lt;em&gt;rewards&lt;/em&gt; have no minimum value&lt;/li&gt;&#xA;&lt;li&gt;cosmetic: if your app has networking features, give them publically displayed status&lt;/li&gt;&#xA;&lt;li&gt;swag: something tangible, a mug, a t-shirt&lt;/li&gt;&#xA;&lt;li&gt;privilege: let them do things they wouldn't otherwise be able to&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;You also need to make it as easy as possible to contribute to your software. Even for developers, it can sometimes be hard to read through a codebase and understand it, which is a prerequisite for adding features. Provide &lt;strong&gt;good&lt;/strong&gt; documentation and support: perhaps set up a specific email inbox and someone to monitor it, and use it to support those with &lt;em&gt;specific&lt;/em&gt; problems trying to work with your codebase.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-08-03T07:24:58.327" LastActivityDate="2015-08-03T07:24:58.327" CommentCount="0" />
  <row Id="1435" PostTypeId="2" ParentId="1432" CreationDate="2015-08-02T19:51:53.027" Score="4" Body="&lt;p&gt;You could charge the paying customers a small extra fee of a few percent for open source development. You can argument that without the community and their contributions the software would not exist in the current state and you want to pay back all the effort being put in.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And while one user maybe can't afford to spend thousand dollars to get a feature implemented, hundered users could afford to spend ten dollars each to get it done. You can offer mini-fundraising for features where the people donate and as soon as a feature is paid for, it gets implemented.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Make sure you have an automated system for the donations and tax excemptions and so on, or you will spend lots of time on writing the documents. Also check your local law, what information from users you will need to have.&lt;/p&gt;&#xA;" OwnerUserId="1090" LastActivityDate="2015-08-02T19:51:53.027" CommentCount="0" />
  <row Id="1436" PostTypeId="2" ParentId="826" CreationDate="2015-08-02T23:26:31.043" Score="0" Body="&lt;p&gt;A typical policy is to require a contribution to come with comprehensive automated tests. If it fixes a bug, the contributor should start by creating a test that repros the problem, and then passes once the problem is fixed. If it's a feature, it must test the feature.&lt;/p&gt;&#xA;" OwnerUserId="554" LastActivityDate="2015-08-02T23:26:31.043" CommentCount="0" />
  <row Id="1437" PostTypeId="1" CreationDate="2015-08-03T04:55:33.487" Score="-2" ViewCount="41" Body="&lt;p&gt;I found a piece of software I would like to use but I am unsure if I can use it in a an app which generates money for me.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is the app's legal terms but I am used to basic licences like apache or MIT: &lt;a href=&quot;https://aviary.com/legal&quot; rel=&quot;nofollow&quot;&gt;https://aviary.com/legal&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Can I use this in my commercial app?&lt;/p&gt;&#xA;" OwnerUserId="1094" LastEditorUserId="98" LastEditDate="2015-08-03T07:30:26.510" LastActivityDate="2015-08-03T07:30:26.510" Title="Is aviary free for commercial use?" Tags="&lt;licensing&gt;" AnswerCount="1" CommentCount="4" ClosedDate="2015-08-03T21:28:57.693" />
  <row Id="1438" PostTypeId="2" ParentId="1437" CreationDate="2015-08-03T06:26:42.810" Score="4" Body="&lt;p&gt;First, understand that this document is &lt;em&gt;not&lt;/em&gt; anything like a free software license.  Just forget about all the freedoms to study, change, modify, improve and use the software that follows from free software licenses such as GPL, MIT and Apache.  This is not a software license, it is a developer contract that requires you to pay fees and also to pay Adobe/Aviary 70 % share of your &quot;Adjusted Gross Revenue &quot; from said app.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So it is certainly not &quot;free&quot; for commercial use. Not free as in &quot;free beer&quot;, nor free as in &quot;free speech&quot;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, you also ask this specific question:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Can I use this is my commercial app?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I take this to mean:  Can I embed this software in my app, and then sell the app for money?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And yes - of course you can.  This is the basic idea behind this document: You embed the Aviary Photo Editor in your app, sell it (e.g. through Apple's, Google's and Microsoft's app stores) and give 70 % of your profit (after Apple et al has taken &lt;em&gt;their&lt;/em&gt; cut) to Adobe/Aviary.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In addition to having to pay fees and share revenue, entering into this contractual relationship with Adobe/Aviary binds you to plenty of &lt;em&gt;other&lt;/em&gt; restrictions. Everything that is not &lt;em&gt;explicitly&lt;/em&gt; forbidden (such as reverse engineering) seems to require explicit approval by Adobe/Aviary.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-03T06:45:28.717" LastActivityDate="2015-08-03T06:45:28.717" CommentCount="0" />
  <row Id="1439" PostTypeId="1" CreationDate="2015-08-03T12:44:15.347" Score="5" ViewCount="131" Body="&lt;p&gt;Suppose I ship binaries of a closed source product and it just so happens that there's a piece of GPL source code inside my giant codebase that I'm unaware of. At some point I find this GPL code and replace it with my own equivalent and only ship the product binaries with my code after that moment.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So effectively I was shipping with unintentional GPL violation for some time and then removed the violating source code and only ship binaries made from my proprietary code afterwards.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Can I be forced to publish my proprietary code? What typically happens in such scenarios?&lt;/p&gt;&#xA;" OwnerUserId="1096" LastActivityDate="2015-08-03T16:03:43.807" Title="What's the typical practice for cases when OSS license violation is found and fixed?" Tags="&lt;gpl&gt;&lt;copyleft&gt;&lt;enforcement&gt;" AnswerCount="1" CommentCount="1" />
  <row Id="1440" PostTypeId="2" ParentId="1399" CreationDate="2015-08-03T13:09:13.267" Score="1" Body="&lt;p&gt;&lt;strong&gt;GPL software can be &lt;em&gt;used&lt;/em&gt; anywhere, without restrictions&lt;/strong&gt;. In fact, the FSF (maintainers of the GPL) have harsh words for licenses that try to restrict use of the software in any way.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;GPL software can also be modified without restrictions, &lt;em&gt;as long as the modified software is kept private&lt;/em&gt;&lt;/strong&gt;. If you intend to use the GPL'd software strictly within the company, you can make whatever changes you want.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;What the GPL controls is &lt;em&gt;distribution&lt;/em&gt; of modified software&lt;/strong&gt;. If you want to turn your modified software into a product, &lt;em&gt;then&lt;/em&gt; you have to release the source. There are no other restrictions: you can even charge for the software, as long as the source is available at no &lt;em&gt;additional&lt;/em&gt; charge to anyone who has bought a license. It does not have to be made available to anyone who hasn't bought a license.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;They believe that once the software is used in a commercial environment, it is no longer considered free and falls under a difference licence (they didn't actually specify a difference licence, but was rather what would they believe would occur).&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;It &lt;em&gt;is&lt;/em&gt; possible to do something like this, by releasing the software under two different licenses, but QGIS doesn't do that&lt;/strong&gt;. This is called &quot;dual licensing&quot;. Usually when a project does this, it releases the software under the GPL (or something very like it) for free, but people can pay to get an alternate license with different terms. Again, however, QGIS doesn't do this; there's only the GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;QGIS &lt;em&gt;does&lt;/em&gt; seem to offer a &quot;sponsorship program&quot;, as well as sales for commercial support, but these aren't alternate licenses, and they are never compulsory&lt;/strong&gt;. You don't have to become a sponsor or buy commercial support to use the software, even if you are a corporation. Being a sponsor doesn't give you any additional rights, nor does it impose any additional restrictions; the same goes for buying commercial support.&lt;/p&gt;&#xA;" OwnerUserId="962" LastActivityDate="2015-08-03T13:09:13.267" CommentCount="0" />
  <row Id="1441" PostTypeId="2" ParentId="1439" CreationDate="2015-08-03T13:56:52.043" Score="4" Body="&lt;p&gt;I'm assuming the GPL version 3 for the purposes of this answer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;From section 8 of the GPL:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The existence of the GPL code in your closed-source program is a violation of the GPL, and terminates your license to use the GPL code. However, if you find it and remove it, you're no longer violating the license and can use it once again.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As to your work, the GPL license doesn't cover it, and has no legal bearing on it if there is no interaction between the GPL code and your program. If the GPL code is included, then the rest of your work must also be distributed under the GPL. If the GPL code is then removed, you can distribute your work how you like.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, you &lt;em&gt;should&lt;/em&gt; note that if the copyright owner pushes a court case, you may end up having to publish your source code. &lt;a href=&quot;http://opensource.stackexchange.com/a/1444/98&quot;&gt;Free Radical's answer here&lt;/a&gt; goes into more detail about the possible legal proceedings.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-08-03T16:03:43.807" LastActivityDate="2015-08-03T16:03:43.807" CommentCount="0" />
  <row Id="1443" PostTypeId="1" CreationDate="2015-08-03T15:37:23.013" Score="16" ViewCount="1342" Body="&lt;p&gt;What is the &lt;em&gt;typical&lt;/em&gt; situation when some company is found to violate the some copyleft free software license and refuses to fix it?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Can the company then be forced to disclose any proprietary code that is linked with copylefted code?&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="98" LastEditDate="2015-08-03T16:07:23.590" LastActivityDate="2015-08-04T05:42:05.100" Title="Must a company disclose proprietary source code if it violates a copyleft license?" Tags="&lt;copyleft&gt;&lt;enforcement&gt;" AnswerCount="1" CommentCount="0" FavoriteCount="1" />
  <row Id="1444" PostTypeId="2" ParentId="1443" CreationDate="2015-08-03T15:53:43.093" Score="16" Body="&lt;p&gt;First, this is not legal advice and there is no definitive answer. But yes, such a company &lt;em&gt;may&lt;/em&gt; indeed be forced to publish its proprietary code in order to comply with the license (or it may not, read on).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As noted in by &lt;a href=&quot;http://opensource.stackexchange.com/a/1441/606&quot;&gt;&lt;em&gt;ArtOfCode&lt;/em&gt; in an answer to a slightly different question&lt;/a&gt; section 8 of the GPLv3 provides you with some grace time that allows you fix the problem yourself and escape litigation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, if the copyleft license is not GPLv3, or such a company fails to comply with the license within the grace period, or just refuse to comply — what will happen then?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And the answer is: It depends.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For instance, if the propietary program was distributed only to a few people and the infringed code was insignificant &lt;a href=&quot;https://en.wikipedia.org/wiki/De_minimis&quot; rel=&quot;nofollow&quot;&gt;de minimis&lt;/a&gt; may apply, and any claim made against can not be enforced through the courts.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As pointed out by &lt;a href=&quot;http://opensource.stackexchange.com/users/431/cpast&quot;&gt;cpast&lt;/a&gt; in a comment, the outcome may also depend on local law.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There may also be some quirk that prevents the license from being enforced. E.g.: the copyleft license in question is some home-made license, the linked software may have be linked in a manner that is not deemed to infringe copyright in the jurisdiction the litigation takes place, or the circumstances that brought the free software into the proprietary program may have been special.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Such quirks may prevent litigation, or they may influence the outcome of the litigation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;If the court finds that the company has breached &lt;em&gt;copyright&lt;/em&gt;, it will be ordered to provide &quot;injunctive relief&quot; (injunctive relief will in this case mean that it must fulfill its obligations and must make its source code publicly available).&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;If the court finds that it has just breached a &lt;em&gt;contract&lt;/em&gt;, then injunctive relief is not available as a remedy, and instead, the court will probably order the company to pay monetary damages and stop distributing the infringed software (if it has not done so already).&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;However, please note that FSF feel &lt;a href=&quot;http://www.fsf.org/licensing/compliance&quot; rel=&quot;nofollow&quot;&gt;strongly&lt;/a&gt; about enforcing their license. They write:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Many copyright holders seek monetary damages when their license is violated. We do not — we only want violators to come back into compliance, and help repair any harm done to the free software community by their past actions. &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;All versions of GPL have been carefully designed to get &lt;em&gt;any&lt;/em&gt; violation designated as &quot;breach of copyright&quot; (rather than breach of contract) in order to &lt;em&gt;enable&lt;/em&gt; the copyright holder to seek injunctive relief. Some other copyleft licenses may not have this property.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If the FSF finds that a GPL violation is serious enough to be tried in the courts, it will go to some lengths to 1) persuade the copyright owner to demand injunctive relief; and 2) find somebody willing to provide pro bono (free) legal counsel or to find someone to pay for legal counsel.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is not much case law available. Gatto (2007) &lt;a href=&quot;http://www.pillsburylaw.com/siteFiles/Publications/A9A22185D029BBE6EAA4332F1A7249E2.pdf&quot; rel=&quot;nofollow&quot;&gt;Doubts Wane Over GPLs Enforcability&lt;/a&gt; writes:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The vast majority of the GPL enforcements have been private enforcements. That is to say, when the FSF (or copyright owner) becomes aware of a GPL violation, it sends a private letter to the violator and demands that the licensee either come into compliance with all of the GPL terms or cease copying, modifying or distributing the GPL software. These private enforcements have been largely successful. Many GPL violations have been inadvertent. Once notified, these innocent violators typically come into compliance.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I know of no case where the company has responded in a timely manner to a letter about infringement by simply &lt;em&gt;removing&lt;/em&gt; the free software (i.e. stopped copying, modifying or distributing the software) that has resulted in litigation, no matter what type of copyleft license is used - so if a company does this, the precedence is that it will not have to publish its source code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, there is &lt;em&gt;some&lt;/em&gt; case law on &lt;a href=&quot;http://www.gpl-violations.org/&quot; rel=&quot;nofollow&quot;&gt;gpl-violations.org&lt;/a&gt; and on &lt;a href=&quot;https://wiki.fsfe.org/GPL%20Enforcement%20Cases&quot; rel=&quot;nofollow&quot;&gt;fsfe.org&lt;/a&gt;. The &quot;classic&quot; case in this area of controversy is a &lt;em&gt;Welte v. Sitecom Deutschland GmbH&lt;/em&gt; (No 21 0 6123/04 (LG München 1) May 19 2004).  &lt;em&gt;Sitecom Deutschland GmbH&lt;/em&gt; used code under GPL derived from &lt;code&gt;netfilter/iptables&lt;/code&gt; (authored by Harald Welte) in its  routers, and simply &lt;em&gt;refused&lt;/em&gt; to comply with GPL. A German court determined that the GPL provisions requiring source code distribution are valid and ordered injunctive relief.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Finally, it depends on the copyright holder. It is the copyright holder, not the FSF (or other advocacy group), who is entitled to &lt;em&gt;decide&lt;/em&gt; what to do about a license violation. And some holders of copyright to free software may choose to receive money through some settlement, instead of going to court over the principle of copyleft.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-04T05:42:05.100" LastActivityDate="2015-08-04T05:42:05.100" CommentCount="3" />
  <row Id="1445" PostTypeId="1" AcceptedAnswerId="1451" CreationDate="2015-08-03T16:21:38.930" Score="21" ViewCount="1114" Body="&lt;p&gt;Bruce Perens (co-founder of OSI) has coined the term &quot;&lt;a href=&quot;http://comments.gmane.org/gmane.comp.licenses.open-source.general/11857&quot;&gt;crayon license&lt;/a&gt;&quot;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;I've been calling these &quot;crayon licenses&quot;, taking a line from an old Monty Python sketch about a dog license with the word &quot;dog&quot; crossed out and &quot;cat&quot; written in, in crayon.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The licenses referenced are typical well-intended free software licenses that have been written by programmers in simple, easy-to-understand, non-legalese language.  Some typical examples are the &lt;a href=&quot;http://www.wtfpl.net&quot;&gt;WTFPL&lt;/a&gt; and the somewhat more elaborate &lt;a href=&quot;http://opensource.org/licenses/artistic-license-1.0&quot;&gt;Artistic License 1.0&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Perens seems to imply that such licenses may pose a problem for developers using them, or for the open source community.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;How can these licenses be a problem?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Or is Perens wrong about them being a problem?&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="98" LastEditDate="2015-08-03T17:12:21.530" LastActivityDate="2015-08-12T16:19:14.793" Title="How can a &quot;crayon&quot; license be a problem?" Tags="&lt;licensing&gt;&lt;law&gt;&lt;crayon-licenses&gt;" AnswerCount="3" CommentCount="0" FavoriteCount="4" />
  <row Id="1446" PostTypeId="1" AcceptedAnswerId="1452" CreationDate="2015-08-03T16:38:30.663" Score="17" ViewCount="3500" Body="&lt;p&gt;Suppose Alice makes some proprietary software.  The source is available, but under a proprietary license which prohibits derivative works and sublicensing.  Bob writes some GPLv3 code.  Carol prepares a derivative work which incorporates both Alice and Bob's software and purports to release it under the GPLv3, in violation of Alice's copyright.  Carol provides source code and otherwise complies with standard GPL formalities.  Alice decides not to sue Carol, but threatens to sue anyone who makes derivative works of Carol's software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Has Carol violated the GPL, and if so, how?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If Carol has not violated the GPL, why don't companies do things like this all the time to subvert the GPL?&lt;/p&gt;&#xA;" OwnerUserId="532" LastActivityDate="2015-08-03T19:28:44.603" Title="Why doesn't this GPL loophole work?" Tags="&lt;gpl&gt;&lt;law&gt;&lt;proprietary-code&gt;" AnswerCount="2" CommentCount="3" FavoriteCount="5" />
  <row Id="1447" PostTypeId="2" ParentId="762" CreationDate="2015-08-03T16:48:51.107" Score="-1" Body="&lt;p&gt;APIs under copyright would be similar to software under copyright: you just can't use them as freely.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In software, if you have a piece of proprietary software, you're not allowed to redistribute, reverse engineer, modify, develop from, etc etc. If this applied to APIs, you simply wouldn't be able to use the API to do anything.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It also sort of depends what kind of API you're talking about. If you have an API in the Stack Exchange API sense - a set of URLs you can request data from - you may still be able to use these. Putting a website on the internet implies a right to view it; making data available at a URL implies a right to see that data. You probably wouldn't be able to make use of it in a product though.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you're talking about an API as in the Java development API, then it suddenly becomes very hard for Java developers to write software, because they can't use the API without express permission from the copyright holder (Oracle).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Essentially, the implication of the case is that &lt;em&gt;if companies want to&lt;/em&gt;, they &lt;em&gt;can&lt;/em&gt; prevent people copying/using their APIs by applying copyright.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-08-03T16:48:51.107" CommentCount="4" />
  <row Id="1448" PostTypeId="2" ParentId="1446" CreationDate="2015-08-03T16:58:31.177" Score="9" Body="&lt;p&gt;Carol hasn't violated the GPL, she's violated Alice's copyright and in doing so &lt;em&gt;invalidated&lt;/em&gt; her use of the GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In simple terms, because Alice's code wasn't Carol's to release, she can't apply the GPL to it. There is no violation of the GPL, because it never applied to Alice's code in the first place.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As to why companies don't do this, it's because it's still copyright violation, which is worse. The GPL gives you a chance to rectify your mistake if you violate it, and keep your money, time, and rights to use the GPL-licensed software. If you violate a copyright, it's &lt;em&gt;entirely&lt;/em&gt; up to the copyright holder what they do: they could sue you for copyright infringement and bring you to court. There's no guaranteed chance to rectify.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;However,&lt;/strong&gt; in deciding not to sue Carol, Alice has created a legally messy situation. Alice has, in effect, given Carol permission to license her software under the GPL, which &lt;em&gt;allows&lt;/em&gt; derivatives. When she then threatens to sue them, Alice forbids derivatives. It can now be argued from either side: either Alice gave up her right to sue derivative-makers when she didn't sue Carol, or because it's originally Alice's work and still copyrighted, she can sue who she wants.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This one would come down to lawyers slugging it out in court, and a very long and messy court case.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-08-03T16:58:31.177" CommentCount="14" />
  <row Id="1449" PostTypeId="5" CreationDate="2015-08-03T17:16:30.910" Score="0" Body="&lt;p&gt;A &quot;crayon license&quot; is a free software license written by a programmer or someone else closely involved with software development for the purpose of being easy to understand, or humourous. They are typically written in English, not legalese. A good example of a crayon license is the &lt;a href=&quot;http://www.wtfpl.net/&quot; rel=&quot;nofollow&quot;&gt;WTFPL&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Use this tag for questions about these crayon licenses.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-08-03T19:07:43.367" LastActivityDate="2015-08-03T19:07:43.367" CommentCount="0" />
  <row Id="1450" PostTypeId="4" CreationDate="2015-08-03T17:16:30.910" Score="0" Body="For questions about non-legalese licenses written by programmers either jokingly or to be understandable." OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-08-03T19:07:47.493" LastActivityDate="2015-08-03T19:07:47.493" CommentCount="0" />
  <row Id="1451" PostTypeId="2" ParentId="1445" CreationDate="2015-08-03T18:25:35.803" Score="18" Body="&lt;p&gt;There are several issues:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;License proliferation&lt;/strong&gt; - The more licenses we have floating around, the more work everyone has to do to understand them.  Case law for one license will not necessarily apply to a differently-worded license, even if they're both intended to achieve the same effect.  And if everyone starts writing their own licenses, this becomes significantly worse.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Legal uncertainty&lt;/strong&gt; - If a license is vaguely worded, it may not behave as we would like in a court of law.  When you write a vague computer program, the compiler will (normally) refuse to compile it; the grammar of the programming language disallows ambiguity at the syntactic level.  This is not the case when you write legal code.  If it's vague, the court will have to guess, and they may guess wrong.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;em&gt;Contra proferentem&lt;/em&gt;&lt;/strong&gt; - Ambiguity in a contract is normally interpreted &lt;a href=&quot;https://en.wikipedia.org/wiki/Contra_proferentem&quot; rel=&quot;nofollow&quot;&gt;in favor of the &lt;em&gt;non&lt;/em&gt;-drafting party&lt;/a&gt; (with the rationale that it's the drafting party's fault for creating the ambiguity in the first place).  It's not immediately obvious to me that this necessarily applies to an open source license, but if it does, it would greatly exacerbate the previous point.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;You might accidentally make a non-free license&lt;/strong&gt; - One crayon license actually in use is basically MIT/X11 + &quot;The Software shall be used for Good, not Evil.&quot;  &lt;a href=&quot;http://programmers.stackexchange.com/questions/47028/how-could-we-rewrite-the-no-evil-license-to-make-it-free&quot;&gt;This is considered a non-free license&lt;/a&gt; (don't take our word for it, &lt;a href=&quot;http://www.gnu.org/licenses/license-list.en.html#JSON&quot; rel=&quot;nofollow&quot;&gt;the FSF agrees&lt;/a&gt;), and resulted in &lt;a href=&quot;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=692614&quot; rel=&quot;nofollow&quot;&gt;at least one bug report&lt;/a&gt; asking for &lt;em&gt;downstream&lt;/em&gt; software to be removed from Debian.  This caused actual person-hours to be diverted from software development to deal with silly licensing issues that never should have arisen in the first place.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="532" LastEditorUserId="532" LastEditDate="2015-08-08T16:16:44.383" LastActivityDate="2015-08-08T16:16:44.383" CommentCount="2" />
  <row Id="1452" PostTypeId="2" ParentId="1446" CreationDate="2015-08-03T19:28:44.603" Score="27" Body="&lt;p&gt;ArtOfCode's answer correctly describes Carol's situation relative to &lt;em&gt;Alice's&lt;/em&gt; code: violation of Alice's original license (which is not the GPL) and therefore infringement of Alice's copyright.  The terms of the GPL are not relevant except in that they are incompatible with Alice's license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, &lt;em&gt;Bob's&lt;/em&gt; code is originally licensed under the GPL, and the GPL contains a clause anticipating exactly this sort of situation.  In version 3, it's section 12.  v2 had slightly different but (I think) legally equivalent wording.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. &lt;strong&gt;If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all.&lt;/strong&gt; For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;(Emphasis mine.)  In this case, the &quot;other pertinent obligations&quot; are Alice's original license, which is incompatible with the GPL.  Therefore, Carol's violation of Alice's license &lt;em&gt;causes&lt;/em&gt; a violation of the GPL as applied to &lt;em&gt;Bob's&lt;/em&gt; code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The obvious legal consequence of this is that Bob also has a copyright infringement case against Carol.  I don't know how Alice's having declined to sue Carol would affect the decision.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This &quot;poison pill&quot; clause in the GPL is why Linux distribution maintainers tend to be cautious about combining GPL with works whose license &lt;em&gt;might&lt;/em&gt; not be compatible.  For instance, this is why they hesitate to link GPLv2-licensed programs against OpenSSL.  (If I remember correctly, GPLv3's &quot;additional terms&quot; section renders that particular problem moot.)&lt;/p&gt;&#xA;" OwnerUserId="1108" LastActivityDate="2015-08-03T19:28:44.603" CommentCount="6" />
  <row Id="1453" PostTypeId="1" AcceptedAnswerId="1455" CreationDate="2015-08-03T20:39:01.263" Score="9" ViewCount="108" Body="&lt;p&gt;I'm interested in the &lt;a href=&quot;http://copyfree.org/content/standard/licenses/coil/license.txt&quot; rel=&quot;nofollow&quot;&gt;Copyfree Open Innovation License&lt;/a&gt; as a simpler alternative to Apache 2.0 (it is a permissive license with an explicit patent grant).  But because it's not so popular, not much information is available about it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In particular, where does it fit into this graph?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://i.stack.imgur.com/4bemj.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;http://i.stack.imgur.com/4bemj.png&quot; alt=&quot;License compatibility graph, groups licenses into the categories &amp;#39;Permissive&amp;#39;, &amp;#39;Weakly Protective&amp;#39;, &amp;#39;Strongly Protective&amp;#39; and &amp;#39;Network Protective&amp;#39;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is it GPL-compatible?  With which versions?  And where does it fit in with the permissive licenses?&lt;/p&gt;&#xA;" OwnerUserId="536" LastEditorUserId="98" LastEditDate="2015-08-03T22:15:48.357" LastActivityDate="2015-08-06T15:51:44.480" Title="Copyfree Open Innovation License compatibility" Tags="&lt;license-compatibility&gt;" AnswerCount="2" CommentCount="0" />
  <row Id="1454" PostTypeId="2" ParentId="762" CreationDate="2015-08-04T09:33:55.773" Score="-1" Body="&lt;p&gt;Just to make it clear, the Appeals court's May 9th, 2014 decision in Oracle vs Google apply made it clear that the &lt;a href=&quot;https://en.wikipedia.org/wiki/Structure,_sequence_and_organization&quot; rel=&quot;nofollow&quot;&gt;&lt;em&gt;structure, sequence and organization&lt;/em&gt;&lt;/a&gt; (SSO) of the 37 API interfaces Google had copied (in order to make existing software that was based on the copyrighted &lt;em&gt;Oracle JDK&lt;/em&gt; work with Android) was subject to copyright.  This is not &lt;em&gt;new&lt;/em&gt; case law, but follows from &lt;a href=&quot;https://en.wikipedia.org/wiki/Whelan_v._Jaslow&quot; rel=&quot;nofollow&quot;&gt;Whelan v. Jaslow&lt;/a&gt; (1986).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Google &lt;em&gt;could&lt;/em&gt; have adopted the API of the open source &lt;em&gt;OpenJDK&lt;/em&gt; for Android, but choose not to do so, probably because most of the software that exists for mobile units assumes that &lt;em&gt;Oracle JDK&lt;/em&gt; is available.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It should also be noted that this case has &lt;em&gt;not&lt;/em&gt; been finally decided (what has been finally decided is that an API is &lt;em&gt;still&lt;/em&gt; protected by copyright).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If we look at the &lt;a href=&quot;https://scholar.google.com/scholar_case?case=15197092051369647665&amp;amp;hl=en&amp;amp;as_sdt=6&amp;amp;as_vis=1&amp;amp;oi=scholarr&quot; rel=&quot;nofollow&quot;&gt;actual decision that Oracle America, Inc. v. Google Inc., 750 F. 3d 1339 - Court of Appeals, Federal Circuit 2014&lt;/a&gt;, we see that the jury could not agree on Google's fair use defence:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Because the jury deadlocked on fair use, we remand for further consideration of Google's fair use defense in light of this decision.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The &quot;fair use&quot; decision was passed on for the Supreme Court to decide, and the Supreme Court decided to return this decision to the Federal Circuit Court in San Francisco, where Google will get a new chance to argue that its use of the API will be allowed as fair use.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If I were a betting man, I would put my money on &lt;em&gt;Oracle&lt;/em&gt; in this upcoming trial. While I think &quot;fair use&quot; will apply in &lt;em&gt;most&lt;/em&gt; uses of a protected API by free software, Google choose to incoroporate the copyrighted API of the &lt;em&gt;Oracle JDK&lt;/em&gt; in a &lt;em&gt;commercial product&lt;/em&gt;.  Commercial use is seldom considered fair use. Google's decision to use &lt;em&gt;Oracle JDK&lt;/em&gt; also made Android interoperabile with the proprietary &lt;em&gt;Oracle JDK&lt;/em&gt; instead of the open source &lt;em&gt;OpenJDK&lt;/em&gt;. While use to create interoperability is &lt;em&gt;often&lt;/em&gt; considered fair use, Google choose to create interoperability with a proprietary product in a situation when a free alternative existed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So much for background about this ongoing litigation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Going back to the actual question, which seems to be about whether  the Appeals court's May 9th, 2014 decision about API's being protected by copyright is going to cause adverse effects for innovation and interoperability for free software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Personally, I think these fears are unwarranted. As already &lt;a href=&quot;http://opensource.stackexchange.com/a/988/606&quot;&gt;pointed out by bmargulies&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Many common APIs are explicitly licensed permissively. &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The Oracle API, however, was &lt;em&gt;not&lt;/em&gt; licensed permissively, and Google &lt;em&gt;choose&lt;/em&gt; to not comply with the licensing terms.  That is rare situation and will probably not impact much of free software development.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The obvious impact of Oracle v. Google is that developers (including open source developers) need to consider the licensing of APIs, and either accept the &lt;em&gt;legal hazard&lt;/em&gt; that follows from using a proprietary APIs without permission, or to make sure they have permission (either through the API license, or by asking the owner for an explicit permission to use the API).&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-04T09:51:06.093" LastActivityDate="2015-08-04T09:51:06.093" CommentCount="0" />
  <row Id="1455" PostTypeId="2" ParentId="1453" CreationDate="2015-08-04T15:47:04.140" Score="4" Body="&lt;p&gt;The Copyfree Open Innovation License License (CFOIL) is significantly shorter than the Apache 2.0 license. CFOIL grants:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;the right reproduce, modify, distribute, publish, sell, sublicense, use and/or otherwise deal in the licensed material without restriction; and&lt;/li&gt;&#xA;&lt;li&gt;a perpetual, worldwide, non-exclusive, royalty-free, irrevocable patent license to reproduce, modify, distribute, publish, sell, use, and/or otherwise deal in the licensed material without restriction; for any and all patents held by the licensor and any contributor that may be infringed by the work;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;provided that:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;the user retains applicable copyright or other legal privilege notices, these conditions, and the following license terms and disclaimer. &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Unlike Apache 2.0, CFOIL lacks the additional supporting elements for &lt;em&gt;license&lt;/em&gt; enforcement that are present in Apache License 2.0. Specifically, it lacks language throughout the license that indicates that the license grants has the terms and conditions of the license is a &lt;em&gt;precondition&lt;/em&gt; for the license grant.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Apache 2.0, by constrast, is quite &lt;em&gt;explicit&lt;/em&gt; about this:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Subject to the terms and conditions of this License, each Contributor hereby grants ...&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Unlike&lt;/em&gt; Apache 2.0, CFOIL fails to make explicit that the &lt;em&gt;specific intent&lt;/em&gt; of the drafters is to provide the license grant to &lt;em&gt;only to&lt;/em&gt; those individuals or entities that abide by the terms and conditions contained in the license. Such an additional provision in the Apache 2.0 License strengthen the conclusion that the conditions in the license is, legally speaking a &quot;precondition&quot; rather than a &quot;covenant&quot;.  It also lacks the Apache 2.0 patent termination clause:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;which makes its embedded patent-license weaker than the one in Apache 2.0.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In fact, its patent terms seems incompatible with &lt;em&gt;any copyleft license&lt;/em&gt;. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;In practice, these flaws in this license will limit your options (compared to Apache 2.0) if you want to seek legal remedy for license violations.  If all you want to have a really permissive license with a (sort of) patent license embedded, and do you will not even &lt;em&gt;think&lt;/em&gt; about pursuing license violations, and do not fear patent suits filed from contributors will pose a problem, and you don't care about license compatibility, then it may be OK.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But if your alternatives are this license and Apache 2.0, you should be aware of the differences.  Apache 2.0 is IMHO superior.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As far as license compatibility goes, I don't think it is compatible with any version of the GPL or &lt;em&gt;any other copyleft license&lt;/em&gt;.  It &lt;em&gt;looks&lt;/em&gt; like a permissive license but its messed up patent license clause rules out GPL comptability and compatibility with Apache 2.0&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So I can understand why this one is not much used, as it:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;creates legal uncertanity (&lt;a href=&quot;https://en.wikipedia.org/wiki/Contra_proferentem&quot; rel=&quot;nofollow&quot;&gt;contra proferentem&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;creates license proliferation for no good reason;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;So to conclude: I don't think it fits &lt;em&gt;anywhere&lt;/em&gt; on the license map reproduced in the question.&lt;/p&gt;&#xA;" OwnerUserId="606" LastActivityDate="2015-08-04T15:47:04.140" CommentCount="1" />
  <row Id="1457" PostTypeId="2" ParentId="435" CreationDate="2015-08-04T20:08:03.490" Score="3" Body="&lt;p&gt;There is legally no such thing as &quot;industrial secret&quot;, but there are trade secrets. If Han Solo publishes code that contains trade secrets, then he is likely going to jail. Publishing trade secrets when you have no right to do so is criminal. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, most if the time the copying of source code is just plain old copyright violation, whether there are any secrets in the code or not. Depending on exactly what Han Solo is doing, it can be criminal or not. Even it's not criminal he can be sued for damages. By slapping on for example a GPL license and making everyone believe that they have the right to copy (so totally honest people will copy the code, not just copyright infringing lowlives) he maximises the damage and therefore the amount of money that he would have to pay. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;For people copying the code in the belief that it is for example GPL licensed, Han Solo's action creates a legal nightmare. First, they are liable for copyright infringement even though they don't know they have done anything wrong. Second, the copyright holder can order them to remove the source code, which will cause them all kinds of problem. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Summary: If you really want &lt;em&gt;everyone&lt;/em&gt; to hate you, then distributing proprietary code illegally under GPL is an excellent way of achieving your goal.  &lt;/p&gt;&#xA;" OwnerUserId="454" LastActivityDate="2015-08-04T20:08:03.490" CommentCount="0" />
  <row Id="1458" PostTypeId="2" ParentId="726" CreationDate="2015-08-05T01:06:58.080" Score="1" Body="&lt;p&gt;No, you can't. If you want to have some rights on derivative works, you should use a different license:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;CC-BY-SA&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This won't give you &quot;full rights&quot; (as stated in your question), but more than enough for all practical needs.&lt;/p&gt;&#xA;" OwnerUserId="1138" LastEditorUserId="1138" LastEditDate="2015-08-05T15:06:02.277" LastActivityDate="2015-08-05T15:06:02.277" CommentCount="0" />
  <row Id="1459" PostTypeId="1" AcceptedAnswerId="1461" CreationDate="2015-08-05T08:57:07.660" Score="3" ViewCount="460" Body="&lt;p&gt;This question is bases on:&#xA;&lt;a href=&quot;http://opensource.stackexchange.com/questions/1446/why-doesnt-this-gpl-loophole-work?newreg=b29b58436f7543248dbd2e163275f032&quot;&gt;Why doesn&amp;#39;t this GPL loophole work?&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If a program uses a GPL derived component, does said program also have to be GPL?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example:&#xA;If a game uses a music player that was derived from GPL licenced music player. Does the game also have to comply with GPL? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the linked question the end package is derived from both sources but in second version the GPL part is only used for its functionality.&lt;/p&gt;&#xA;" OwnerUserId="1144" LastEditorUserId="97" LastEditDate="2015-08-05T09:46:05.073" LastActivityDate="2015-08-06T23:20:50.400" Title="Proprietary software using GPL modules" Tags="&lt;gpl&gt;" AnswerCount="3" CommentCount="3" />
  <row Id="1460" PostTypeId="2" ParentId="1459" CreationDate="2015-08-05T09:16:28.237" Score="5" Body="&lt;p&gt;tl;dr yes, if and only if you &lt;em&gt;distribute&lt;/em&gt; the software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If a component of a work you created is licensed to you under the GPL, you must license the entire work under the GPL &lt;em&gt;if you choose to distribute it&lt;/em&gt;. If you want to make something for your own use, this isn't distributing the software, and you are perfectly free to do so.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Works that combine GPL licensed software with software that is incompatible with the GPL are effectively undistributable. Some licenses compatible with the GPL are&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;LGPL&lt;/li&gt;&#xA;&lt;li&gt;Apache 2 license for GPLv3 or higher&lt;/li&gt;&#xA;&lt;li&gt;MIT/Expat license&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;The LGPL doesn't have this restriction; you are free to link against an LGPL library and distribute the combined work under a different license, as long as you honor the LGPL for that specific library&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The AGPL considers allowing users to use the program over a network (for example an interactive website) to be distributing the work. The &quot;regular&quot; GPL doesn't.&lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-08-05T09:16:28.237" CommentCount="5" />
  <row Id="1461" PostTypeId="2" ParentId="1459" CreationDate="2015-08-05T10:56:23.470" Score="6" Body="&lt;p&gt;According to the &lt;a href=&quot;https://www.gnu.org/licenses/gpl-faq.en.html#MereAggregation&quot; rel=&quot;nofollow&quot;&gt;GPL FAQ&lt;/a&gt;, it depends on how tightly the programs are coupled.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Tight coupling:&lt;/strong&gt; This is what happens in the case of your game, as you almost certainly included the GPL music player within your binary or as a dynamically linked library. In those cases your software must be GPL, too.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Loose coupling:&lt;/strong&gt; If you have a generic program that happens to execute the music player as a separate program, there's no tight coupling going on. The GPL doesn't affect your code. You can choose any license you want, including a proprietary license. &lt;strong&gt;However,&lt;/strong&gt; in that case you might want to add support for different music players, just to be sure. And you should refrain from shipping your application with the music player as a combined package, as that may give a wrong impression. On the other hand, a mere &lt;strong&gt;aggregation&lt;/strong&gt; of multiple packages (as in software distributions) is fine.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Note that &lt;strong&gt;nobody forces you to distribute your application&lt;/strong&gt;. If you don't distribute your application at all, not even in binary form, the license question disappears: There is nobody you could license your application to. The GPL and all other FLOSS licenses grant you the right of private modifications. The virality of copyleft licenses only kicks in as soon as you distribute your code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also note that tight/loose coupling is mostly a &lt;strong&gt;social term&lt;/strong&gt; and not so much a technical term. Usually, linking to a GPL library counts as tight coupling, while executing a separate GPL programm counts as loose coupling. However, this is not an absolute. The line blurs as soon as you start playing nasty games, and people will recognize that.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, you could write a command-line wrapper around a GPL library, make only that wrapper GPL, and communicate with that wrapper using an application-specific RPC protocol. Even though your application starts the GPL code as a separate program, you would have a hard time explaining to FSF or a judge in a court that this is loose coupling. It would still count as tight coupling.&lt;/p&gt;&#xA;" OwnerUserId="1138" LastEditorUserId="1138" LastEditDate="2015-08-06T16:38:34.737" LastActivityDate="2015-08-06T16:38:34.737" CommentCount="4" />
  <row Id="1462" PostTypeId="2" ParentId="1285" CreationDate="2015-08-05T11:39:17.977" Score="2" Body="&lt;p&gt;Yes, &lt;strong&gt;anyone can contribute&lt;/strong&gt;, but not in the way you describe.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Nobody&lt;/strong&gt; can force you to include their code in your project. You are free do publish only code that you are satisfied with. You can even decide not to include any contributions, ever.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Everybody&lt;/strong&gt; can create their own version of your code. This is called a &lt;strong&gt;fork&lt;/strong&gt;. They can keep the fork private or they can publish the fork. If they publish it and it is very good, people may start using the fork instead of your version. As always with Free Software, it is ultimately the users who decide.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Note that forks happen comparatively seldom, because they incur the risk of duplicate efforts in the long term. So they usually happen only if the original project is either dead or badly maintained. In those cases, the fork takes over, no work is duplicated. However, it is also possible that the original and the fork co-exist side by side. The most famous examples are ffmpeg / avconv and ImageMagick / GraphicsMagick. Those projects have to deal with issues like duplicate efforts and a split of the developer community.&lt;/p&gt;&#xA;" OwnerUserId="1138" LastEditorUserId="1138" LastEditDate="2015-08-05T13:33:12.187" LastActivityDate="2015-08-05T13:33:12.187" CommentCount="0" />
  <row Id="1463" PostTypeId="2" ParentId="1445" CreationDate="2015-08-05T12:09:32.570" Score="3" Body="&lt;p&gt;In addition to the &lt;em&gt;excellent&lt;/em&gt; (and accepted) answer posted by Kevin, I want to point out the following:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is sometimes argued that having license behaving predictable in a court of law only matters if you want to &lt;em&gt;restrict&lt;/em&gt; somebody.  With the possible exception of a disclaimer of warranty (which may or may not be legal, depending on jurisdiction),  there is no &lt;em&gt;need&lt;/em&gt; to be too fussy about loose, permissive licenses such as &lt;a href=&quot;http://www.wtfpl.net/&quot; rel=&quot;nofollow&quot;&gt;WTFPL&lt;/a&gt; or the &lt;a href=&quot;http://unlicense.org/&quot; rel=&quot;nofollow&quot;&gt;Unlicense&lt;/a&gt;.  If you just want to &lt;em&gt;be nice&lt;/em&gt; and impose no restrictions on your users, &lt;em&gt;then&lt;/em&gt; the choice of license does not matter.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But it does:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;Some managers of free software projects take licensing issues seriously.  Something that to non-professionals &lt;a href=&quot;http://copyfree.org/content/standard/licenses/coil/license.txt&quot; rel=&quot;nofollow&quot;&gt;looks like a lax and permissive license&lt;/a&gt;, may not &lt;a href=&quot;http://opensource.stackexchange.com/a/1455/606&quot;&gt;be what it appears&lt;/a&gt;.  Such managers may refuse to accept any contribution or pull request unless the code is licensed under terms that are recognized as &lt;em&gt;compatible&lt;/em&gt; with project's  main license.  Most &quot;crayon&quot; licenses fail that test.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;The public domain may be great for cultural works (at least in jurisdictions that recognize the public domain).  IMHO, the public domain (or something trying to mimic it) is not a good idea for &lt;em&gt;software&lt;/em&gt; (or for anything that is &lt;em&gt;functional&lt;/em&gt;, rather than &lt;em&gt;aesthetical&lt;/em&gt;).  One reason the PD is dangerous for software is a nasty thing called &quot;software patents&quot;.  If you put your software in the public domain, somebody else may just go ahead and patent some method it implements, and then accuse &lt;em&gt;your software&lt;/em&gt; of infringing &lt;em&gt;their&lt;/em&gt; patent.  Too far fetched?  Well, this is what happened to a programmer named Bob Jacobsen&lt;sup&gt;1&lt;/sup&gt;, so it certainly cannot be ruled out.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;1) Kamind Associates, Inc. (a commercial company) sold a product named &quot;Decoder Commander&quot; that would &quot;normalize&quot; the interfaces for various types of model railway systems as part of a larger framework to let a personal computer control such a system. Katzer, the owner of that company, held various patents related to this software. At one point, Katzer sued a programmer named Bob Jacobsen for infringing those patents. The allegedly infringing software was a set of files know as &quot;DecoderPro&quot;, that Jacobsen had made publicly available under a very permissive license (Artistic License 1.0). As it turned out, Katzer had &lt;em&gt;copied&lt;/em&gt; those files from &quot;DecoderPro&quot;, and modified them slightly to create &quot;Decoder Commander&quot;.&lt;/sup&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;In the end, Jacobsen prevailed in court, and the court decided that &lt;em&gt;Katzer&lt;/em&gt; had infringed on Jacobsen's &lt;em&gt;copyright&lt;/em&gt;.  But Jacobsen's poor choice of license (Artistic License 1.0) caused him a great deal of grief.&lt;/sup&gt;&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-05T13:08:36.183" LastActivityDate="2015-08-05T13:08:36.183" CommentCount="2" />
  <row Id="1464" PostTypeId="1" CreationDate="2015-08-06T01:17:02.670" Score="8" ViewCount="404" Body="&lt;p&gt;I see this one quite a lot: an author releases something under a standard free/open license (i.e. &lt;em&gt;not&lt;/em&gt; a &lt;a href=&quot;http://opensource.stackexchange.com/q/1445/175&quot;&gt;crayon license&lt;/a&gt;), but on the same release page adds a clause that conflicts with the license. I.e.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Free Frobnicator&lt;/strong&gt; is a handy utility that frobs widgets, by Jane Doe&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Released under &amp;lt;license&amp;gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;By the way, &amp;lt;additional clause that conflicts with license&amp;gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;These additional clauses could be from misunderstanding the license, or carelessness. I've seen these:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&quot;Let me know if you use this in your project!&quot;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As far as I'm aware, no free/open license requires contacting the author if you use it.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&quot;Contact me if you want to use this commercially.&quot;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Implying that the license doesn't already allow commercial use, which free/open licenses do.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&quot;You are free to use however you want, except in pornography.&quot;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Free/open licenses can't discriminate on usage.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Do these extra conflicting clauses make the license invalid, or is the license unaffected?&lt;/strong&gt; Does it depend on the license used? Or is this legally ambiguous?&lt;/p&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-08-08T19:21:45.750" Title="Are licenses affected if the author adds conflicting clauses alongside?" Tags="&lt;license-compatibility&gt;" AnswerCount="4" CommentCount="6" FavoriteCount="2" />
  <row Id="1465" PostTypeId="2" ParentId="1464" CreationDate="2015-08-06T01:35:23.483" Score="7" Body="&lt;p&gt;You are asking three questions, I think:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;are they enforceable?&lt;/li&gt;&#xA;&lt;li&gt;do they tamper with the enforceability of the main license?&lt;/li&gt;&#xA;&lt;li&gt;do they pollute the open/free status of the overall license?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;The answer to the third question is 'yes'. If someone adds a clause that is incompatible with, for example, OSI, then it's not an OSI-licence. This has no legal implication at all. It's just a fact.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The first two questions are for lawyers, but, in general, crayons are contagious. If you scribble on a license with a crayon, the results can very possibly be crayon-ish, since by ignorance the extra provisions can conflict with or change the interpretation of the base license.&lt;/p&gt;&#xA;" OwnerUserId="554" LastEditorUserId="554" LastEditDate="2015-08-08T19:21:45.750" LastActivityDate="2015-08-08T19:21:45.750" CommentCount="0" />
  <row Id="1466" PostTypeId="2" ParentId="1464" CreationDate="2015-08-06T06:28:06.573" Score="3" Body="&lt;p&gt;You say that you add this stuff on the project's &quot;release page&quot; (presumably the same place where people can download a release).  This is not in &lt;em&gt;any way&lt;/em&gt; enforceable.  When you make free software publicly available, people can share it with anybody &lt;em&gt;without&lt;/em&gt; ever seeing your release page, so users may not been made aware of your terms. No court is going to let you enforce any such terms.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In all jurisdictions I am aware of, including the EU and the USA, when you have a specific &lt;em&gt;legal&lt;/em&gt; document such as a license or a contract, a court will &lt;em&gt;refuse&lt;/em&gt; to look at anything except the specific license or a contract and any additional document &lt;em&gt;specifically&lt;/em&gt; mentioned in the license or contract, to settle any dispute between two parties.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This means that if you put &lt;em&gt;anything&lt;/em&gt; on the project page that conflicts with the main license, it will be considered null and void. I.e.:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;This is not enforceable.&lt;/li&gt;&#xA;&lt;li&gt;It will not tamper with the enforceability of the main license.&lt;/li&gt;&#xA;&lt;li&gt;It will not even  pollute the open/free status of the main license.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;The same goes for a &lt;a href=&quot;http://blog.stackoverflow.com/2009/06/attribution-required/&quot;&gt;blog post&lt;/a&gt; written by the project head and linked from every project page. Sharing your thoughts about what you think &lt;em&gt;should&lt;/em&gt; be &quot;fair attribution&quot; is fine, but it only counts as a &lt;em&gt;suggestion&lt;/em&gt;. When staffers sometimes &lt;a href=&quot;http://meta.stackexchange.com/a/258032/256282&quot;&gt;pretend&lt;/a&gt; that is more than that, such pretense does not change its legal status to being a &lt;em&gt;requirement&lt;/em&gt; that can be enforced by &lt;em&gt;legal means&lt;/em&gt;. I.e. such additional notes, in the shape of blog posts or otherwise, can &lt;em&gt;not&lt;/em&gt; be enforced through courts, and will not tamper with, or pollute the main license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I.e.: Doing this will &lt;em&gt;not have any&lt;/em&gt; effect at all on the project's licensing situation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However. it may identify the project head as a bozo and potentially quarrelsome (NB: I am not saying that this makes the project head a bozo, etc., only that it may make some people may &lt;em&gt;think&lt;/em&gt; so).  This may make some people stay away from using code from the project.  As for the SE, the (then) project head's &lt;a href=&quot;http://blog.stackoverflow.com/2009/06/attribution-required/&quot;&gt;blog post&lt;/a&gt; goes on to &lt;em&gt;name and shame&lt;/em&gt; two specific websites that does not live up his attribution expectations.  This sort of enforcement technique is IMHO not an &lt;em&gt;ethical&lt;/em&gt; way to enforce your additions to a license, but if you don't want this to happen to you, you may need to &lt;em&gt;follow&lt;/em&gt; the SE recommendation if you reuse materials from SE, even if lacks any &lt;em&gt;legal&lt;/em&gt; foundation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, &lt;em&gt;some&lt;/em&gt; licenses such as the GPL &lt;em&gt;allows&lt;/em&gt; additional terms. Read below the line for a more specific analysis of various ways of adding additional notices and how this applies to specific licenses.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Disclaimer: &lt;a href=&quot;https://en.wikipedia.org/wiki/IANAL&quot; rel=&quot;nofollow&quot;&gt;IANAL&lt;/a&gt; and all that.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;The text &lt;em&gt;above&lt;/em&gt; the line is my answer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, looking beyond the &quot;project page&quot; it may also be interesting to look at attempts to add additional terms to the projects distribution archive.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For instance, let us assume that you add your additional terms &lt;em&gt;below&lt;/em&gt; the license text is the license file (e.g. &lt;code&gt;LICENSE.txt&lt;/code&gt;) included in the distro.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you try to add or remove &lt;em&gt;anything&lt;/em&gt; to or from license &lt;em&gt;itself&lt;/em&gt;, the license is no longer a recognized free software license. Doing so will &lt;em&gt;make&lt;/em&gt; your license a crayon license (this is more or less how crayon licenses are defined), with all the &lt;a href=&quot;http://opensource.stackexchange.com/questions/1445/how-can-a-crayon-license-be-a-problem&quot;&gt;problems&lt;/a&gt; that follows from the use of crayon licenses.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But what if you put your additional terms is a separate document? E.g. you but your terms in a file named &lt;code&gt;EULA.txt&lt;/code&gt;, &lt;code&gt;NOTICE.txt&lt;/code&gt;, &lt;code&gt;README.txt&lt;/code&gt;, or some other conspicuous name) that lives in the distribution archive &lt;em&gt;along&lt;/em&gt; with &lt;code&gt;LICENSE.txt&lt;/code&gt; when people download the project directly from you.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Then you need to read the license text to find out whether this is permitted and if it will be enforceable. By means of example, I shall look at two popular free software licenses, GPLv3 and MIT:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.en.html&quot; rel=&quot;nofollow&quot;&gt;GPLv3&lt;/a&gt; very explicitly &lt;em&gt;allows&lt;/em&gt; additional terms (see sec. 7. Additional Terms). but &lt;em&gt;only&lt;/em&gt; if they provide additional &lt;em&gt;permissions&lt;/em&gt; to the user, or &quot;supplement the terms of this License with terms&quot; [followed by a bullet list of six permitted types of additional terms]. Any &lt;em&gt;other&lt;/em&gt; additional terms are not allowed, and permission to delete them is &lt;em&gt;explicitly&lt;/em&gt; granted downstream recipients:  &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;All other non-permissive additional terms are considered “further restrictions” [...].  If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://opensource.org/licenses/MIT&quot; rel=&quot;nofollow&quot;&gt;MIT/Expat&lt;/a&gt; grants a series of permission &quot;without restriction&quot;.  If you add terms somewhere in the distribution that &lt;em&gt;contradict&lt;/em&gt; the license grant by imposing some restrictions, these would not be enforceable if the language used do not make it clear that the intent of the drafter was to provide a precondition or a covenant for use. If this additional document is &lt;em&gt;not&lt;/em&gt; a license, then it will be ignored by courts (see my introduction).  If it is an additional license, then, as explained in &lt;a href=&quot;http://opensource.stackexchange.com/a/1415/606&quot;&gt;this answer&lt;/a&gt; it would amount to dual licensing and users would be free to pick the permissive license (MIT) that is provided over the more restrictive (the EULA).&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;There is no room here to run through &lt;em&gt;all&lt;/em&gt; recognized free software licenses, but my general impression is that they do not give you much opportunity to impose restrictions on your users.  I cannot completely rule out that there exists a free software license that cuts more slack than GPLv3 or MIT/Expat - but I doubt it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, for all free software licenses, provided you hold the sole copyright, &lt;em&gt;or&lt;/em&gt; have permission from all contributors (e.g. through a &lt;a href=&quot;https://en.wikipedia.org/wiki/Contributor_License_Agreement&quot; rel=&quot;nofollow&quot;&gt;Contributor License Agreement&lt;/a&gt;), adding terms that gives &lt;em&gt;further permissions&lt;/em&gt; are generally allowed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For instance you add a file with the following notice to a the distribution of a project licensed under MIT/Expat:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;To the extent allowed by applicable law, I waive the right of attribution, and the requirement that a copyright notice and a permission notice shall be included in the program.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Such a waiver would allow people to reuse your code without having to comply with the attribution, etc. requirements of the license.  If you add the following &lt;em&gt;restriction&lt;/em&gt; to the waiver:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Removing this waiver is not allowed.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Then, that would not be enforceable, as it contradicts the main license grant.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-06T09:08:37.567" LastActivityDate="2015-08-06T09:08:37.567" CommentCount="0" />
  <row Id="1467" PostTypeId="2" ParentId="365" CreationDate="2015-08-06T07:28:36.973" Score="2" Body="&lt;p&gt;In general, you need a license note somewhere in that blog post, usually at the end.  If you want to license all your blog posts a certain way, a good way to do that is to put that license note in the footer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The details depend a bit on the license:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The GNU FDL requires you to post the whole license on your page (see &lt;a href=&quot;http://www.gnu.org/licenses/fdl-1.3.en.html&quot; rel=&quot;nofollow&quot;&gt;addendum&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;The &lt;a href=&quot;http://creativecommons.org/choose/&quot; rel=&quot;nofollow&quot;&gt;CC license chooser&lt;/a&gt; gives you HTML to put on your blog post.&lt;/li&gt;&#xA;&lt;li&gt;You can combine multiple licenses by saying what you want.  For example like this:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Copyright © 2015 XXXX.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Verbatim copying and distribution of entire articles is permitted in&#xA;  any medium, provided this notice is preserved.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Alternatively, you may, at your choice, copy, distribute and/or modify&#xA;  this document under the terms of the GNU Free Documentation License,&#xA;  Version 1.3 or any later version published by the Free Software&#xA;  Foundation; with no Invariant Sections, no Front-Cover Texts, and no&#xA;  Back-Cover Texts. A copy of the license is included in the section&#xA;  entitled &quot;GNU Free Documentation License&quot;.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;As a third option, this work by XXXX is licensed under a Creative&#xA;  Commons Attribution-ShareAlike 4.0 International License.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So the short version is this:  All you need is a sentence saying that your text is under license X (maybe with a link to the license so people can find it) unless a license requires you to take specific other steps.&lt;/p&gt;&#xA;" OwnerUserId="1165" LastActivityDate="2015-08-06T07:28:36.973" CommentCount="0" />
  <row Id="1468" PostTypeId="2" ParentId="1464" CreationDate="2015-08-06T08:07:43.190" Score="5" Body="&lt;p&gt;The concise, well-written &lt;a href=&quot;http://opensource.stackexchange.com/a/1465/997&quot;&gt;answer by bmargulies&lt;/a&gt; does miss &lt;em&gt;one&lt;/em&gt; thing in your question:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Does it depend on the license used?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Yes,&lt;/strong&gt; it does. The GNU GPL, for instance, specifically says that conflicting provisions are void if they add restrictions. This is from section 7 of v.3; v.2 had the corresponding text in its section 6.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;All other non-permissive additional terms are considered “further restrictions” within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Other licences that do not have such a clause &lt;em&gt;may or may not&lt;/em&gt; be affected; I'm not a lawyer. (But it seems to me that a comment &quot;alongside&quot; the licence is probably meant to be &lt;em&gt;part of&lt;/em&gt; the licencing terms, so yes, I think it'd be affected.)&lt;/p&gt;&#xA;" OwnerUserId="997" LastActivityDate="2015-08-06T08:07:43.190" CommentCount="12" />
  <row Id="1469" PostTypeId="2" ParentId="1459" CreationDate="2015-08-06T08:16:35.840" Score="1" Body="&lt;p&gt;If a program uses a GPL component, it has to be distributed also on GPL terms.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;However&lt;/strong&gt; this doesn't exclude using GPL in proprietary software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can always release for example:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;a functional part of the whole proprietary software as open source, eg. open source music player daemon, that uses GPL sound drivers etc., which uses open but complicated to use network communication protocol&lt;/li&gt;&#xA;&lt;li&gt;closed source game that communicates with the open source daemon through your protocol&lt;/li&gt;&#xA;&lt;li&gt;a simple open source client that also communicates with the daemon and eg. plays a single mp3 file (just to avoid accusations that you deliberately bypassed GPL license)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;This way you even avoid tight/loose coupling discussion, since you use network protocol to separate open and closed parts of your software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As for example, legally successful implementations of such bypass, you can look at firmware of most low-cost, low-end home routers, that use GPL components and still have closed source software parts. Note that there are many &quot;contact points&quot; between open and closed parts in such devices, and some of them were reported as GPL violations, while some others not. Most reported violations however concerned directly Linux kernel, while most types of closed-&gt;open wrappers and network bridges are recognized as clear from legal point of view.&lt;/p&gt;&#xA;" OwnerUserId="691" LastEditorUserId="691" LastEditDate="2015-08-06T23:20:50.400" LastActivityDate="2015-08-06T23:20:50.400" CommentCount="1" />
  <row Id="1470" PostTypeId="1" CreationDate="2015-08-06T09:42:08.397" Score="-1" ViewCount="43" Body="&lt;p&gt;Are there any providers of mailing lists for open source projects?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I know of the following so far:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Savannah&lt;/li&gt;&#xA;&lt;li&gt;Sourceforge&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Savannah requires a GPL project (and that is ok), but the process of getting accepted takes forever.&#xA;SourceForge is getting worse and worse. Never liked it in the first place.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Anything else? Anything better?&lt;/p&gt;&#xA;" OwnerUserId="374" LastActivityDate="2015-08-06T10:35:26.703" Title="Free mailing list provider for open source projects?" Tags="&lt;communication&gt;" AnswerCount="1" CommentCount="8" ClosedDate="2015-08-06T15:24:15.260" />
  <row Id="1471" PostTypeId="2" ParentId="1140" CreationDate="2015-08-06T09:58:21.163" Score="1" Body="&lt;p&gt;There are a couple of options to give credit or &quot;shoutouts&quot;, depending on the owner of the copyright, and the license you use.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If &lt;em&gt;you&lt;/em&gt; hold the copyright:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Hosting. Hosting on your employers GitHub page already establishes a strong link to your employer. Hostile forking &lt;em&gt;could&lt;/em&gt; reduce the effectiveness of this measure, but is uncommon.&lt;/li&gt;&#xA;&lt;li&gt;Hosting 2: Distributing binaries somewhere from your corporate website, including a nice project description, and hosted documentation cementing it as the official or original distribution. &lt;/li&gt;&#xA;&lt;li&gt;Depending on the language: namespacing. If the code is namespaced in com.thecompany.yourproject it implicitly links your company to everyone using the code&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;If &lt;em&gt;your company&lt;/em&gt; holds the copyright, in addition to the above:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A copyright-holder notice (your company) in addition to an author (you) in file headers and/or license file. Depending on the license, this could be forked out, but that's widely regarded a bad idea and/or a dick move, and is not common.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;In addition, it is always a bad idea to edit the license. This may be illegal (for example (A/L)GPL, which are copyright protected), or may just be a bad idea, as editing well-understood legal documents as licenses by a layperson might inadvertedly introduce legal hazards&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note: In various comments you state that you believe that you hold the copyright. You state you live in MA, USA and there are no specific copyright ownership clauses in your contract. That leads me to believe this work is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Work_for_hire&quot; rel=&quot;nofollow&quot; title=&quot;Wikipedia: Work for hire&quot;&gt;Work for hire&lt;/a&gt;: &lt;em&gt;&quot;(1) a work prepared by an employee within the scope of his or her employment; (2)(...)&quot;&lt;/em&gt;, and your employer holds the copyright. If you want to know the fine details, law.stackexchange.com would be a good place to ask.&lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-08-06T09:58:21.163" CommentCount="0" />
  <row Id="1472" PostTypeId="2" ParentId="984" CreationDate="2015-08-06T10:24:23.200" Score="4" Body="&lt;p&gt;A legal requirements to preserve the &lt;em&gt;integrity of authorship&lt;/em&gt; and copyright information follows from article 6bis of the Berne Convention (about moral rights). In the USA, U.S. Code § 1202: &quot;Integrity of copyright management information&quot;, is quite explicit about this - &lt;a href=&quot;https://www.law.cornell.edu/uscode/text/17/1202&quot; rel=&quot;nofollow&quot;&gt;https://www.law.cornell.edu/uscode/text/17/1202&lt;/a&gt; - but similar provisions exists in the local laws for most Berne signatories. Since preservation of attribution, etc. is a &lt;em&gt;legal&lt;/em&gt; requirement, it cannot be removed by a license or a FAQ (and for the record: CC BY does &lt;em&gt;not&lt;/em&gt; remove this legal requirement). It applies universially (i.e. does not depend on the license used).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This means that if Bob adapts Alice's work and Carol adapts Bob's work, Carol has to attribute both, &lt;em&gt;unless&lt;/em&gt; one or both request to be dis-associated with Carol's work by having their respective bylines removed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When only &lt;em&gt;three&lt;/em&gt; people are involved, the &lt;em&gt;reasonable&lt;/em&gt; way to attribute is to list all three of them. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, when the list of contributors become much longer than this (e.g. you build on a wikipedia article with hundreds of individual contributors where the contributions over time have been entangled), you may find an alternative &lt;em&gt;reasonable manner&lt;/em&gt; to provide lawful attribution. For example, you may credit &quot;Wikipedia contributors&quot; with a link to the article's  history page where the byline of each individual contributor is listed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is a page about &lt;a href=&quot;https://wiki.creativecommons.org/wiki/Best_practices_for_attribution#This_is_a_good_attribution_for_material_from_which_you_created_a_derivative_work&quot; rel=&quot;nofollow&quot;&gt;attribution best practices&lt;/a&gt; on the CC wiki that provides some helpful examples about how to attribute in a reasonable manner.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-06T10:56:23.207" LastActivityDate="2015-08-06T10:56:23.207" CommentCount="0" />
  <row Id="1473" PostTypeId="2" ParentId="1470" CreationDate="2015-08-06T10:35:26.703" Score="2" Body="&lt;p&gt;If all you want is a mailing list, you could use &lt;a href=&quot;http://www.freelists.org/&quot; rel=&quot;nofollow&quot;&gt;FreeLists&lt;/a&gt; which specifically states that it is not just free as in beer.  They use &lt;a href=&quot;http://www.ecartis.net/&quot; rel=&quot;nofollow&quot;&gt;ecartis&lt;/a&gt; as a mailing list manager and not Mailman which you might be familiar with, but they are both free as in freedom.&lt;/p&gt;&#xA;" OwnerUserId="1165" LastActivityDate="2015-08-06T10:35:26.703" CommentCount="0" />
  <row Id="1474" PostTypeId="2" ParentId="1464" CreationDate="2015-08-06T13:09:30.753" Score="1" Body="&lt;p&gt;In addition to the good answers of &lt;a href=&quot;http://opensource.stackexchange.com/a/1465/55&quot;&gt;bmargulies&lt;/a&gt; and &lt;a href=&quot;http://opensource.stackexchange.com/a/1466/55&quot;&gt;Free Radical&lt;/a&gt; there is a perspective beyond the legal stuff.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you release something under an open source license, your express intent is to give others some rights, including the right to redistribute, use it without restriction and to modify and release the modified work. If you do not intent to grant these rights, you don't need to add a license at all.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But the contradicting clauses cause confusion. Especially people not experienced with the legal stuff, might be shying away from using their rights on your work. So you lose possible applications of your work against your intent. Even if you legally clearly know what you do is legally working, such confusion might lead to you losing possible users.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;An example that shows how legal uncertainty lead to problems, although the reason of the legal uncertainties isn't an additional clause. The german programmer &lt;a href=&quot;https://en.wikipedia.org/wiki/J%C3%B6rg_Schilling&quot; rel=&quot;nofollow&quot;&gt;Jörg Schilling&lt;/a&gt; is well known as the programmer of cdrtools. At some point he decided to &lt;a href=&quot;https://en.wikipedia.org/wiki/Cdrtools#License_compatibility_controversy&quot; rel=&quot;nofollow&quot;&gt;change the license&lt;/a&gt; on most of his work, while still incorporating some GPL-work. Jörg Schilling is sure, he isn't violating the GPL in this case as he expressed, and at no point any legal action happened (as far as I'm aware), this controversy didn't go to court. Still most binary Linux-distributions (source distribution is unaffected) removed cdrtools and use a fork named cdrkit. So, however the real legal situation is, the uncertainty alone lead to a lot of lost users.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So it is generally  advisable to avoid confusion as much as possible.&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-08-06T13:09:30.753" CommentCount="0" />
  <row Id="1475" PostTypeId="1" AcceptedAnswerId="1476" CreationDate="2015-08-06T13:20:16.470" Score="1" ViewCount="23" Body="&lt;p&gt;Lets say there is some software hosted in a public github git repository under some license A. The owner and copyright-holder now decides to relicense the source-code to another license B. If i would now - after the copyright-holder already commited and pushed this commit with the new license B to github - clone the repository and checkout an older commit where the software was still under license A and &lt;em&gt;only&lt;/em&gt; use the source-code from this commit and older, which license would apply?&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Since i learned (Thanks @Mnementh♦) that i am allowed to use the Software under License A there is another small question:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Am i correct, that i can infact &lt;strong&gt;choose&lt;/strong&gt; which license i want to use, since the holder relicensed the source-code under a new license but even though he can't revoke the old license, the new license still applies to the source-code as a whole, which also includes the complete older source-code from commit X?&lt;/p&gt;&#xA;" OwnerUserId="1030" LastEditorUserId="1030" LastEditDate="2015-08-06T13:27:14.763" LastActivityDate="2015-08-06T13:31:17.177" Title="Is a license bound to a commit?" Tags="&lt;relicensing&gt;&lt;github&gt;" AnswerCount="1" CommentCount="9" />
  <row Id="1476" PostTypeId="2" ParentId="1475" CreationDate="2015-08-06T13:22:56.917" Score="6" Body="&lt;p&gt;You can use older versions of the software before the license change still under license A, as open source license are irrevocable. The only reason you couldn't do that would be, if license A was illegal for the work in the first place (maybe some license compatibility issue).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The new version is only usable with license B (well, the same issue with possible illegal use may apply).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The difficult question is, if also can use the old version using license B. That depends. The copyright-holder can change license for his as he sees fit, also for the older version(s). But he must do it explicitly. Without this expression, you have to assume it is still only licensed under license A and B isn't applicable. Even if the copyright-holder expresses, that also the older version can now be used under the terms B too, you have a problem. In the committed code only license A is mentioned and only the text of license A is part of the code. You would have difficulties to prove you can also use this code with license B.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The safe way therefore is: Use the old code only with license A and the new code only with license B.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-08-06T13:31:17.177" LastActivityDate="2015-08-06T13:31:17.177" CommentCount="1" />
  <row Id="1477" PostTypeId="1" AcceptedAnswerId="1478" CreationDate="2015-08-06T13:37:31.533" Score="3" ViewCount="66" Body="&lt;p&gt;A 3rd-party Hardware manufacturing company is willing to sell me a Linux Driver for one of their products. The third-party company claims that the Linux Driver is derivative work of the driver they previously developed for OSX, so they say GPL does not apply here.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If I want to sell systems which include this linux driver, do I have to disclose the source code of this third-party driver if any of my customers asks for it?&lt;/p&gt;&#xA;" OwnerUserId="1169" LastEditorUserId="1169" LastEditDate="2015-08-07T08:50:59.737" LastActivityDate="2015-08-07T13:05:59.487" Title="Do I have to disclose the source code of a Linux Driver I have not developed?" Tags="&lt;licensing&gt;&lt;gpl&gt;&lt;linux-kernel&gt;&lt;source-code&gt;" AnswerCount="2" CommentCount="1" />
  <row Id="1478" PostTypeId="2" ParentId="1477" CreationDate="2015-08-06T13:49:18.970" Score="2" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;The third-party company claims that the Linux Driver is derivative&#xA;  work of the driver they previously developed for OSX, so they say GPL&#xA;  does not apply here.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;If they link to the Linux-kernel, they link against GPL-software, so they are obliged to respect the terms of the GPL. It doesn't matter if the software was previously developed for OSX. In the worst case the licenses conflict and the Linux version is therefore illegal to distribute. Generally, all licenses of products combined here are to respect. If they aren't compatible, you cannot distribute this derivate.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But, if the driver doesn't directly link to the kernel, that may not apply. I remember in the past some graphics drivers (I think NVidia, but aren't sure) had two parts. One GPL-part included in the kernel and offering an interface for the second part, that was proprietary. I don't know how legally stable this construct is, but it may work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As I don't know in which way the driver you talk about works, I cannot say which applies here.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But even if case 1 applies, you cannot release the source code of others without their consent. If case 1 applies, you simply cannot distribute this solution.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As a side-note: the GPL always allows you to use such software internally without releasing the source, but as you talk about customers it isn't limited to internal use.&lt;/p&gt;&#xA;" OwnerUserId="55" LastEditorUserId="55" LastEditDate="2015-08-06T13:58:56.843" LastActivityDate="2015-08-06T13:58:56.843" CommentCount="3" />
  <row Id="1479" PostTypeId="1" CreationDate="2015-08-06T14:03:26.103" Score="3" ViewCount="349" Body="&lt;p&gt;I use closed-source scientific software for my work.  I also use GPL licensed tools and libraries.  It would save me a lot of time to be able to call a GPL library directly from the closed-source software.  The closed-source program can be extended with &quot;plugins&quot; that are written in C, run as a separate process, but need to link against a closed-source &lt;a href=&quot;https://en.wikipedia.org/wiki/Inter-process_communication&quot; rel=&quot;nofollow&quot;&gt;IPC&lt;/a&gt; library.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Questions:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;Can I write a plugin to interface the closed-source software with the GPL library, for my private use?&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Can I distribute the plugin as a compiled executable?&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Can I distribute the source code of the plugin so others can compile it on their own computer?&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;I intend to release the plugin code under the most permissive open source license possible while still complying with the GPL.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Let me clarify why the answers to the linked duplicate don't answer my question:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;That question refers to a GPL host application with closed-source plugins.  My question is about a closed-source host with a plugin that uses GPL libraries.  It's not clear to me if that makes a difference.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;My understanding is that the way the plugin attaches to the host application is very relevant to the GPL's restrictions.  If the plugin is a separate executable that the host launches and pipes textual input to, the restrictions don't apply.  The &quot;attachment&quot; method I described above is somewhat atypical: the plugin is a separate process and communicates with the host through a proprietary interprocess communication method.  To achieve this, the plugin executable needs to statically or dynamically link to a closed-source IPC library.  Possibly at this point it won't even matter anymore that this executable is a plugin and distributing it is clearly forbidden by the GPL?&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="1171" LastEditorUserId="1171" LastEditDate="2015-08-06T15:12:34.877" LastActivityDate="2015-08-06T18:14:22.237" Title="Can plugins for closed source software use GPL'd libraries?" Tags="&lt;gpl&gt;" AnswerCount="2" CommentCount="10" FavoriteCount="1" />
  <row Id="1480" PostTypeId="2" ParentId="1479" CreationDate="2015-08-06T14:40:39.953" Score="4" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;Can I write a plugin to interface the closed-source software with the GPL library, for my private use?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Yes, the GPL does not affect private use. This is both due to private use exception in copyright law, &lt;em&gt;and&lt;/em&gt; because the GPL explicitly says that it only applies to distributions of &quot;something&quot; containing GPL code.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Can I distribute the plugin as a compiled executable?&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The &quot;attachment&quot; method I described above is somewhat atypical: the plugin is a separate process and communicates with the host through a proprietary interprocess communication method. To achieve this, the plugin executable needs to statically or dynamically link to a closed-source IPC library. &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;First: GPL requires you to provide source code when you distribute your program in combination with GPL-code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If I understand correctly, you link your plugin to a closed-source IPC library, creating a binary executable, and then the question is:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Can I distribute the executable and &lt;em&gt;just&lt;/em&gt; provide the source code to my plugin?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The answer to this is: no.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This triggers the &quot;liberty or death&quot; clause in the GPL (sec. 12 in GPLv3, but similar language is in all versions): &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Since you cannot provide source code for the closed-source IPC library, you cannot distribute this executable, &lt;em&gt;even&lt;/em&gt; if you provide all the source code to your own work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If the IPC library were open source too then you could distribute the plugin executable, but you would be obliged to provide source to &lt;em&gt;all&lt;/em&gt; its components to downstream recipients.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Can I distribute the source code of the plugin so others can compile it on their own computer?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Yes. The source code to plugin is yours, it does not come under GPL just by having the potential to be linked with GPL. You can do with as you please.  If you want to distribute it to others, so that they too may enjoy its use under the law's  private use exception, that does not violate the GPL license.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-06T15:31:08.967" LastActivityDate="2015-08-06T15:31:08.967" CommentCount="4" />
  <row Id="1481" PostTypeId="2" ParentId="1479" CreationDate="2015-08-06T14:56:53.963" Score="4" Body="&lt;p&gt;Since you explicitly say the plugin &lt;strong&gt;runs as a separate process&lt;/strong&gt; from the closed-source program, the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-faq.en.html#GPLPluginsInNF&quot; rel=&quot;nofollow&quot;&gt;FSF presents the legal opinion that a plugin would probably be a separate work from the original&lt;/a&gt; (emphasis mine):&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Can I apply the GPL when writing a plug-in for a non-free program?&lt;/strong&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&lt;strong&gt;If the program uses fork and exec to invoke plug-ins&lt;/strong&gt;, then the plug-ins are separate programs, so the license for the main program makes no requirements for them. So you can use the GPL for a plug-in, and there are no special requirements.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Note that it is very difficult to determine whether two programs are actually separate works, and separate-processes factor appears to be a strong indicator of independence, but is probably not 100% dispositive.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Let us first examine the case where your plugin doesn't link to a proprietary library, but still links to a GPL library:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://i.stack.imgur.com/c11v0.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;http://i.stack.imgur.com/c11v0.png&quot; alt=&quot;GPL applies to the plugin, but not to the main application&quot;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The copyleft of the GPL library causes your plugin to be covered by the GPL, but not the main application, which is probably a separate work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now let's add in your proprietary IPC library:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://i.stack.imgur.com/w3ues.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;http://i.stack.imgur.com/w3ues.png&quot; alt=&quot;the GPL applies to both libraries and the plugin, but not the main application&quot;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Distributing software in this configuration is a &lt;strong&gt;GPL violation&lt;/strong&gt;, since you cannot satisfy the GPL terms for the proprietary library. As above, the GPL does not apply to the main application, but it &lt;em&gt;does&lt;/em&gt; apply to the proprietary library linked by the plugin, which causes a distribution-time violation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The first question is very easy:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Yes. If you do not distribute any software, the GPL never imposes any requirements on you. You may do anything you like with GPL-licensed software without fear of violating the GPL if you are the only person ever involved in those operations.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;The next two are slightly more complicated:&lt;/p&gt;&#xA;&#xA;&lt;ol start=&quot;2&quot;&gt;&#xA;&lt;li&gt;&lt;p&gt;Your whole plugin is covered by the GPL, since it links to a GPL library. Therefore, when you distribute your compiled binary, it must be accompanied by the source code per the requirements of the GPL. You cannot provide source code for the proprietary library, so you cannot distribute the plugin without violating the GPL.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;You can distribute the source code. I anticipate that your program's reliance on the GPL library would not cause the GPL to apply to the &lt;em&gt;source code in isolation&lt;/em&gt;, so you can &lt;em&gt;probably&lt;/em&gt; distribute your isolated source code under any terms you like (but you may wish to verify this with a legal professional first).&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="50" LastEditorUserId="50" LastEditDate="2015-08-06T18:14:22.237" LastActivityDate="2015-08-06T18:14:22.237" CommentCount="1" />
  <row Id="1482" PostTypeId="1" CreationDate="2015-08-06T15:40:40.427" Score="2" ViewCount="168" Body="&lt;p&gt;Given that we &lt;em&gt;should&lt;/em&gt; already check the patches which we distribute, does hosting the source tree of an OSS component obligate us to check it for copyright infringement, license compliance and/or security issues?&lt;/p&gt;&#xA;" OwnerUserId="243" LastEditorUserId="98" LastEditDate="2015-08-06T19:22:01.373" LastActivityDate="2015-08-06T20:05:46.823" Title="Are we obligated to scan the entire code base, or just patches?" Tags="&lt;distribution&gt;&lt;security&gt;" AnswerCount="2" CommentCount="2" ClosedDate="2015-08-11T16:58:00.400" />
  <row Id="1483" PostTypeId="2" ParentId="1453" CreationDate="2015-08-06T15:51:44.480" Score="2" Body="&lt;p&gt;Not a lawyer, but I disagree with Free Radical's interpretation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;COIL (it's not CFOIL) includes &quot;Permission to reproduce, modify, distribute, publish, sell, sublicense, use, and/or otherwise deal in the licensed material without restriction.&quot;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That means one can completely sublicense, i.e. use the work in a derivative released on GPL or &lt;em&gt;any&lt;/em&gt; other license, period.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The misinterpretation comes from thinking that the patent clause must be strong. In fact, the patent clause is weak for the reasons Free Radical points out. If I want to bypass the patent clause, all I need to do is sublicense under MIT-style license, and the patent clause is gone.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Effectively, COIL is a &lt;em&gt;copyfree&lt;/em&gt; (as in the name) license with a patent clause. Being that permissive, it is not strong. It &lt;em&gt;does&lt;/em&gt; explicitly state in your use of the license that you are including a patent license, so if you then turned around and sued someone over a patent, they would have some defense. But it &lt;em&gt;fails&lt;/em&gt; to ensure that the patent grant remains permanently for further distribution. The patent clause stays only as long as people continue to choose COIL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Indeed, it would give you no legal recourse if someone else stripped out the patent clause for their derivative. Think of COIL as the lightest-weight version of a patent-sensitive license stating that you will never sue anyone over a patent you hold related to this work. It's unilateral patent disarmament.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The copyfree concept basically rejects the whole nature of copyright law. It's not useful for those who intend to sue others over copyright violation. The only use of a copyfree license is to assure others that they &lt;em&gt;can&lt;/em&gt; use the work and that they &lt;em&gt;won't&lt;/em&gt; be sued. In that regard, COIL assures them that you won't even sue over a patent either.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In short: Apache v2 and GPLv3 both provide stronger and more persistent patent protection. COIL allows you to have a weak license similar to MIT-style while still addressing the patent issue as long as people choose to keep the reference.&lt;/p&gt;&#xA;" OwnerUserId="1176" LastActivityDate="2015-08-06T15:51:44.480" CommentCount="0" />
  <row Id="1484" PostTypeId="2" ParentId="1431" CreationDate="2015-08-06T16:00:23.217" Score="1" Body="&lt;p&gt;Your critieria does not seem to exclude this simple answer: &quot;All proprietary software that runs only on Linux&quot;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you write software that requires Linux to run but your software is proprietary, you have a case of proprietary software that relies on copyleft software and the copyleft software has no special exception etc. There's no extra clauses added to the kernel's GPLv2. And there's no reason to think this is legally problematic.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you're not satisfied with this answer, I think the clarification has to do with how reliant software can be / how connected etc.&lt;/p&gt;&#xA;" OwnerUserId="1176" LastActivityDate="2015-08-06T16:00:23.217" CommentCount="2" />
  <row Id="1485" PostTypeId="1" CreationDate="2015-08-06T16:25:24.477" Score="1" ViewCount="30" Body="&lt;p&gt;I wrote a library that I want to release under the GPL to prevent it from being incorporated in closed source software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I do not want people to use this library in their closed source commercial project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;At the same time I do not want to prevent people from using this library in any plugins they might create for closed-source software, for as long as the plugin itself is released as open source.  Essentially I want plugins to be treated as separate units, for as long as they are not distributed together with the host application.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is this achievable by using the GPL and adding an exception?  More importantly, are there existing projects licensed like this?  Is it at all feasible to define the plugin-host separation in a defendable way?&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Example situation: The library is for scientific use.  I don't want companies who are in the same business to integrate it into their product that they sell to research labs.  But at the same time I do not want to make it more difficult for other researchers to use this library in conjunction with proprietary scientific software such as MATLAB or Mathematica.&lt;/p&gt;&#xA;" OwnerUserId="1171" LastActivityDate="2015-08-07T09:04:31.520" Title="Copyleft license that allows usage in plugins of closed-source host applications" Tags="&lt;gpl&gt;&lt;plugins&gt;" AnswerCount="2" CommentCount="1" />
  <row Id="1486" PostTypeId="2" ParentId="434" CreationDate="2015-08-06T16:31:41.150" Score="1" Body="&lt;p&gt;The CC &lt;a href=&quot;https://creativecommons.org/choose/&quot; rel=&quot;nofollow&quot;&gt;license chooser&lt;/a&gt; has a link to &lt;a href=&quot;https://creativecommons.org/freeworks&quot; rel=&quot;nofollow&quot;&gt;an article&lt;/a&gt; when referencing this where it is explained well.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&quot;Free&quot; means not overly encumbered, actually able to be used in all sorts of ways, no terms that specifically &lt;em&gt;block&lt;/em&gt; usage of the work. &lt;strong&gt;tl;dr: the non-free licenses are those that say &quot;NO&quot; (that's the ND and NC clauses)&lt;/strong&gt;. If a license says &quot;no&quot; (as in no derivatives or no commercial use), it's not able to be used freely, it isn't actually part of the real creative commons.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The reason the &quot;no&quot; licenses exist at all is because CC originally set out just to provide tools for anyone looking to be more permissive than &quot;all rights reserved&quot;. This divide within CC is quite unfortunate, and there are many who wanted CC to only be the truly free licenses, just like all FSF or OSI approved licenses (which is another point: the non-free CC licenses violate FSF and OSI definitions as well, while the free licenses are more aligned).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A software license that said &quot;no commercial use&quot; or &quot;no derivatives&quot; would be absolutely non-free, non-open-source. The same is true for other types of works.&lt;/p&gt;&#xA;" OwnerUserId="1176" LastActivityDate="2015-08-06T16:31:41.150" CommentCount="0" />
  <row Id="1487" PostTypeId="1" CreationDate="2015-08-06T16:55:05.313" Score="0" ViewCount="55" Body="&lt;p&gt;&lt;strong&gt;General description:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Can I create Python software that will dynamically link against a closed-source library that has a C API (the Python interpreter is not copyleft) and will also utilize a GPL licensed Python library?  It's not clear to me how exactly the GPL applies here given that calling a GPL'd Python library is not quite the same thing as dynamically linking to GPL'd software written in a compiled language.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Context:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I want to enable communication between a GPL'd system written in Python and a closed-source system written in a compiled language.  The closed-source system provides a proprietary interprocess communication (IPC) library for extensibility.  I plan to create a Python interface for this IPC library with the aim to 1. allow the GPL'd Python system to be called from the closed-source one 2. allow the closed-source system to be called from the GPL'd Python one.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I understand that the GPL restrictions refer to distribution.  For all the &quot;can I...&quot; questions in this post, assume that I want to distribute ready-to-use (i.e. compiled when applicable) software.&lt;/p&gt;&#xA;" OwnerUserId="1171" LastEditorUserId="1171" LastEditDate="2015-08-07T12:05:35.140" LastActivityDate="2015-08-07T12:05:35.140" Title="How does the GPL's linking restriction apply when using a proprietary library with GPL'd interpreted code?" Tags="&lt;gpl&gt;&lt;copyleft&gt;" AnswerCount="1" CommentCount="1" />
  <row Id="1488" PostTypeId="1" CreationDate="2015-08-06T17:13:18.740" Score="5" ViewCount="53" Body="&lt;p&gt;I know that when I use MIT projects, I have to include the license text of that author.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But when I use that stuff on the server-side should I render/send it to the client of the server?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Should I put the license into my source code as comments, also for things that are not directly seen/used by the client?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, I use grunt.js for putting all the files together or I also use some sort of png captcha code.&lt;/p&gt;&#xA;" OwnerUserId="1178" LastEditorUserId="69" LastEditDate="2015-08-06T23:32:59.283" LastActivityDate="2015-08-06T23:32:59.283" Title="Should I send attribution/copyright notes to a client over a server?" Tags="&lt;licensing&gt;&lt;mit&gt;" AnswerCount="1" CommentCount="6" />
  <row Id="1489" PostTypeId="2" ParentId="1488" CreationDate="2015-08-06T18:52:28.313" Score="3" Body="&lt;p&gt;No, you don't.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As far as I know, the only license that requires that you make its source available if it's a &quot;network&quot; program is the AGPL, the MIT license has no such requirement.&lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-08-06T18:52:28.313" CommentCount="1" />
  <row Id="1490" PostTypeId="2" ParentId="1482" CreationDate="2015-08-06T19:10:49.380" Score="4" Body="&lt;p&gt;As with anything you host publicly, you are responsible for any problem with that content.  There is not much of a difference between software and other content in this case.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Depending on the country you live in, you may only be liable for violations in your hosted content once you are made aware of the issue.  Also, if you host code that you received under a free license, you may be able to claim &lt;a href=&quot;https://en.wikipedia.org/wiki/Good_faith_%28law%29&quot; rel=&quot;nofollow&quot;&gt;good faith&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="1165" LastActivityDate="2015-08-06T19:10:49.380" CommentCount="0" />
  <row Id="1491" PostTypeId="2" ParentId="51" CreationDate="2015-08-06T19:33:09.013" Score="1" Body="&lt;p&gt;I understand that SF isn't popular anymore, but they are sitting on a valuable pile of historic data.  For example: &lt;a href=&quot;http://sourceforge.net/top&quot; rel=&quot;nofollow&quot;&gt;http://sourceforge.net/top&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="1181" LastActivityDate="2015-08-06T19:33:09.013" CommentCount="0" />
  <row Id="1493" PostTypeId="2" ParentId="1482" CreationDate="2015-08-06T20:05:46.823" Score="3" Body="&lt;p&gt;Yes and no.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Everything under your control you can, in theory, be held responsible for. If you host code with a virus in, you are responsible for it; if it's copyright violation the same - and you can be asked to take it down.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You should &lt;em&gt;always&lt;/em&gt; check your own code. Checking the codebase is extra work that's not &lt;em&gt;strictly&lt;/em&gt; necessary, but if you have concerns about it then it could be worth it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In general, the more popular the project, the better your assurance that it's problem-free.&lt;/p&gt;&#xA;" OwnerUserId="1180" LastActivityDate="2015-08-06T20:05:46.823" CommentCount="0" />
  <row Id="1495" PostTypeId="2" ParentId="1485" CreationDate="2015-08-06T20:18:25.480" Score="1" Body="&lt;p&gt;As I understand the GPL, it would be more restrictive than you desire. The situation of 'closed-source linksTo openSourcePlugin linksTo yourLibrary' would, I believe, look like 'linkage' in the eyes of the GPL. If you use LGPL, then you have the opposite problem.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Of course, since you own the copyright, you can choose to selectively enforce your rights -- though different opinions have been expressed on this site as to the wisdom of that idea. And if you publish your intention to do so, you may be opening yet another can of worms.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you really want a legally sound license that applies this set of terms, you'll need to find legal assistance to draft it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Keep in mind that, as I understand it, the FSF's goal is not to help people prevent commercial use, but to encourage the production of ever more free software. So I wouldn't, in particular, look for any assistance from that quarter.&lt;/p&gt;&#xA;" OwnerUserId="554" LastActivityDate="2015-08-06T20:18:25.480" CommentCount="5" />
  <row Id="1496" PostTypeId="2" ParentId="1302" CreationDate="2015-08-07T00:04:52.483" Score="4" Body="&lt;p&gt;How about some tools that &lt;em&gt;integrate&lt;/em&gt; with GitHub? Do you unit test your code? (Hint: You &lt;em&gt;should&lt;/em&gt; be.) Set yourself up with a build server to automatically run the tests when a pull request is received. The tool you use will likely be dependent on the language you're writing in, but AppVeyor and TravisCI are both popular solutions that integrate &lt;em&gt;extremely well&lt;/em&gt; into GitHub. Both of them will seamlessly display a pass/fail indication right on the GutHub PR. This makes it easy to tell if the PR broke anything. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Since we're talking about tests, look into Code Coverage tools that integrate with GitHub too. While CI servers can help you tell if anything existing was broken, these tools help you determine if the submitter bothered to include tests for new features. Coveralls is one such popular tool. &lt;/p&gt;&#xA;" OwnerUserId="775" LastActivityDate="2015-08-07T00:04:52.483" CommentCount="0" />
  <row Id="1497" PostTypeId="1" AcceptedAnswerId="1500" CreationDate="2015-08-07T01:19:37.460" Score="2" ViewCount="278" Body="&lt;p&gt;In corporate software development, all developers are, typically, using the same IDE running on the same version of the same operating system. In OSS, the team is distributed and providing their own development environment. This can lead to some difficult situations where one contributor checking in code breaks the build for another. I've personally struggled with this exact situation. Every pull from the main branch breaks my build configuration. I fix it, do some work, push back, and then my partner does the same, fixing his build configuration before he can get any actual work done. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;What techniques/tools can be used to compensate for different development environments? Are there specific things that should (or shouldn't) be checked into the repository to help alleviate this?&lt;/p&gt;&#xA;" OwnerUserId="775" LastEditorUserId="775" LastEditDate="2015-08-07T11:14:11.187" LastActivityDate="2015-08-07T11:14:11.187" Title="Dealing with different development environments" Tags="&lt;development&gt;&lt;collaboration&gt;&lt;version-control-systems&gt;" AnswerCount="3" CommentCount="2" />
  <row Id="1498" PostTypeId="2" ParentId="1497" CreationDate="2015-08-07T03:30:06.890" Score="8" Body="&lt;p&gt;This is a really broad subject so I'll answer at a very high level and not touch specifics unless they are relevant for OSS.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;&quot;Works for me&quot;&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is really the crux of the problem; you have build environments that are different in a way that affects software behaviour. The industry at large has been tackling this for decades, and a number of best practices have emerged, such as making sure that development and production environments are exactly the same, or that all developers must set up their environments in the same way. Obviously some approaches work if you're paying someone full time to do whatever you want, but don't work if they are volunteers with their own devices.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Capture all configuration&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Anything&lt;sup&gt;1&lt;/sup&gt; that can affect your build - configuration files, environment variables, compiler flags, dependencies and versions - this all needs to be documented. &lt;a href=&quot;http://twoscoopspress.org/collections/everything/products/two-scoops-of-django-1-8&quot;&gt;Some&lt;/a&gt; go as far as recommending that these be &lt;em&gt;version controlled&lt;/em&gt;, so environments can be replicated easily by checking out the relevant files.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;sub&gt;except for secret keys and passwords.&lt;/sub&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Continuous Integration&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Write tests, run them with a CI service, for every build and every pull request. This should be your first line of defence - if it doesn't pass CI, don't check in.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are many CI services available, many free for OSS.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Make sure everyone uses the same environment... but the onus is on &lt;em&gt;you&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can have the most complete walk-through on how to set up an  environment but if it's going to take a day to complete, forget about volunteer contributions. Having a project be &lt;a href=&quot;http://blog.codinghorror.com/the-f5-key-is-not-a-build-process/&quot;&gt;as easy to set up as possible&lt;/a&gt; is great, but almost a requirement for OSS. This might mean writing scripts that automatically installs dependencies, or sets up a testing environment, or having a suite of samples and templates.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;GNU's projects are a good example of this in action; all their projects can be built by running &lt;a href=&quot;https://robots.thoughtbot.com/the-magic-behind-configure-make-make-install&quot;&gt;&lt;code&gt;./configure; make&lt;/code&gt;&lt;/a&gt;. If you've ever had the misfortune of working with &lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_build_system&quot;&gt;autotools&lt;/a&gt;, you'll really appreciate how much wizardry and blood/sweat/tears goes into making a project easily build and run on almost any developer machine.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Fortunately things are much easier these days; modern build systems, languages or frameworks do a lot of this work for you. But the onus is still on you to make sure new developers can easily get started.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Support as widely as possible&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Which also means you often need to bend over backwards to support as many weird environments as possible, to minimise the barriers to entry. That is, instead of mandating The One True IDE, support all IDEs and editors. Don't use compiler-specific or bleeding-edge language features, stick to standard, widely-used ones. That also means keeping up to date with the latest developments, avoid using deprecated features, so your software doesn't break when built with the latest versions of its dependencies.&lt;/p&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-08-07T03:30:06.890" CommentCount="2" />
  <row Id="1499" PostTypeId="2" ParentId="1497" CreationDate="2015-08-07T04:43:32.500" Score="2" Body="&lt;p&gt;You don't say anything about what type of revision control system (RCS) you use. However, the type of problem you describe is exactly the type of problem Git, being a &lt;em&gt;distributed&lt;/em&gt; RCS, was created to fix.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If &lt;em&gt;everybody&lt;/em&gt; works on the master branch, or if everybody tries to consolidate every commit made by another team to their branch instantly, GIT will not help you.  But Git will let you divide the project up in subtasks localized to specific areas of the code, and let a team create its own branch to work on its designated sub-task and not interfere with &lt;em&gt;other&lt;/em&gt; areas of code.  You then postpone merging a team's branch into the master branch until its sub-task is completed.  This basically means that commits made by others will &lt;em&gt;not&lt;/em&gt; affect you  until you merge.  When you merge, you consolidate everybody's work, and then everybody (for a moment) shares the code of the master branch, before continuing on their own branch.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Teams may also help each other between merges, but the general rule when you use GIT to coordinate work between distributed teams is that if somebody does some work on a subtask or code area assigned another team, they &lt;em&gt;don't&lt;/em&gt; commit, but submit a pull request.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;IMHO, if Git is used right it does a very good job of solving coordination problems.  Git let each team work for a long time on a separate branch and check in their code in a shared repo &lt;em&gt;without&lt;/em&gt; affecting the build of any other team.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When subtasks are complete, its branch need to be merged into the master branch. If the project is well managed and the teams disciplined, merging is painless.  If they are not disciplined, Git will report conflicts which has to be solved manually. This may sometimes require some work, but is always doable.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is no explicit mention of what RCS you use in the question.  But since you talk about &quot;pull&quot; and &quot;main branch&quot; I assume you do, and maybe the one you use is GIT.  If you do, and still have the problems described in the question, you need to look into &lt;em&gt;how&lt;/em&gt; you use Git, and how you manage your distributed teams.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="98" LastEditDate="2015-08-07T09:00:30.260" LastActivityDate="2015-08-07T09:00:30.260" CommentCount="0" />
  <row Id="1500" PostTypeId="2" ParentId="1497" CreationDate="2015-08-07T08:59:16.997" Score="8" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;In corporate software development, all developers are, typically, using the same IDE running on the same version of the same operating system&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This is a misconception. Example:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I run Eclipse Luna with openjdk-1.7 on Ubuntu 15.04, my colleague runs Eclipse Kepler with oracle jdk 1.7 (previously 1.6) on Windows.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Still we got our builds working.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The goal is to capture the bare minimum configuration for things to work &quot;out of the box&quot;, and discard everything else. There's simple tools for that in many many languages, the usual suspects are:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Dependency Management:&lt;/strong&gt;&lt;br&gt;&#xA;This is the tool of choice to manage what you need for development, building and execution. It grabs all the things you need from a repository somewhere on the internet and makes them available to your IDE and the build-manager.&#xA;e.g. Ivy, NuGet, npm, Gradle, pip, ...&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Build Management:&lt;/strong&gt;&#xA;e.g Maven, Gradle, Ant (sorry I don't do much aside from java)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;They provide often rather simple configuration files based on a declarative syntax (XML, YML, JSON) that set up your dependencies.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It's important to note that this does &lt;strong&gt;not&lt;/strong&gt; include IDE settings!&lt;br&gt;&#xA;IDE Settings are one of the things I'd never check in to source control. Nobody should have to care where the project is checked out. Nobody should have to deal with suddenly different syntax-highlighting and IDE extensions. The only viable IDE setting to version is Formatting preferences! Everything else should (and in 99.9% of cases can) be left to each developer themselves &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another important factor is making code not rely on platform features:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Avoid hardcoded paths like the plague&lt;/li&gt;&#xA;&lt;li&gt;Prefer configuration over code&lt;/li&gt;&#xA;&lt;li&gt;Use Environment Variables where necessary&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h2&gt;In short:&lt;/h2&gt;&#xA;&#xA;&lt;h3&gt;Things to leave out of VC:&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;IDE settings (.project, .sln, .idea, ...)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h3&gt;Things to get into VC:&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Dependency Configuration&lt;/li&gt;&#xA;&lt;li&gt;Build Configuration (based on env variables / relative paths)&lt;/li&gt;&#xA;&lt;li&gt;Formatting preferences (&lt;em&gt;optional&lt;/em&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="1189" LastActivityDate="2015-08-07T08:59:16.997" CommentCount="1" />
  <row Id="1501" PostTypeId="2" ParentId="1485" CreationDate="2015-08-07T09:04:31.520" Score="1" Body="&lt;p&gt;Yes, you can achieve your goal with the GNU GPL, except for prohibiting commercial use.  Section 7 of the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.en.html&quot; rel=&quot;nofollow&quot;&gt;GNU GPL&lt;/a&gt; states that you may add &quot;additional terms&quot; as long as they do not restrict the rights granted by the GNU GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In your case, you want to grant an additional exception from the conditions in the GNU GPL or at least clarify your point of view.  So instead of just saying&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;This program is free software: you can redistribute it and/or modify&#xA;  it under the terms of the GNU General Public License as published by&#xA;  the Free Software Foundation, either version 3 of the License, or (at&#xA;  your option) any later version.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;you would add something like this right after this statement:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;As a further permission, you may use this program in a plugin for a&#xA;  program covered by an incompatible license as long as the plugin&#xA;  itself is released as free software covered by one of the free&#xA;  software licenses listed here&#xA;  &lt;a href=&quot;http://www.gnu.org/licenses/license-list.html&quot; rel=&quot;nofollow&quot;&gt;http://www.gnu.org/licenses/license-list.html&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;It is best to differentiate the software you want to allow combinations with by license instead of referring to it directly as free.  That way, you have a specific list of licenses that you want to allow which makes it easier for anyone receiving your software and also is clearer in a legal sense because you do not need a possibly lengthy definition of free vs. non-free.  As an alternative, you could say something along the lines of&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;as long as the plugin itself is released as free software as defined&#xA;  by the Free Software Foundation.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;But I think this may be tricky legally.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you use the exception the way I described it, someone could use your code in a program covered by the &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; rel=&quot;nofollow&quot;&gt;Apache License 2.0&lt;/a&gt;.  This combined work could not be made non-free because only your exception to the conditions of the GNU GPL allow your code to be used in a combined work covered by a more permissive license.  If you do not want to allow use in any free program, you need to restrict the list of allowed licenses.  For example, you could say&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;As a further permission, you may use this program in a plugin for a&#xA;  program covered by an incompatible license as long as the plugin&#xA;  itself is covered by a compatible license.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;If you want to disallow distribution of the plugin together with a non-free host application, you need to add another statement:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;This additional permission does not apply to distributing this program&#xA;  together with a program covered by an incompatible license.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;However, this last statement may be not enforceable depending on how the distribution works.  If the plugin and the host program are in the same package, but the user has to load it into the host application, your exception may still apply.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Any of the additional permissions may be removed by anyone distributing your software, though (also section 7 of the GNU GPL).  In that case, the program could only be used under the pure GNU GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;There is no way to restrict commercial use with any Free Software license.&lt;/strong&gt;  Commercial use is part of the &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.en.html&quot; rel=&quot;nofollow&quot;&gt;four freedoms&lt;/a&gt;, so as soon as you prohibit commercial use, your software becomes non-free.  Furthermore, the GNU GPL does not allow such further restrictions; those further restrictions are considered void.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The FSF also has a FAQ entry about when exactly &lt;a href=&quot;http://www.gnu.org/licenses/gpl-faq.en.html#GPLAndPlugins&quot; rel=&quot;nofollow&quot;&gt;using a plugin constitutes a combined work&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;By the way, these statements also apply to the &lt;a href=&quot;http://www.gnu.org/licenses/agpl-3.0.en.html&quot; rel=&quot;nofollow&quot;&gt;GNU AGPL&lt;/a&gt; which may be a good pick if you think your software may be run as a service over a network.&lt;/p&gt;&#xA;" OwnerUserId="1165" LastActivityDate="2015-08-07T09:04:31.520" CommentCount="0" />
  <row Id="1502" PostTypeId="2" ParentId="1487" CreationDate="2015-08-07T09:11:40.160" Score="1" Body="&lt;p&gt;Let's break the question into two steps.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ol&gt;&#xA;  &lt;li&gt;Can I create [and distribute] Python software that will dynamically link against a closed-source library that has a C API (the Python interpreter is &lt;a href=&quot;https://wiki.python.org/moin/PythonSoftwareFoundationLicenseFaq#Can_I_bundle_Python_with_my_non-open-source_application.3F&quot; rel=&quot;nofollow&quot;&gt;not copyleft&lt;/a&gt;).&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This should cause no problem.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The fact that the software is &lt;em&gt;designed&lt;/em&gt; to be linked to some closed-source library, imposes no constraint on it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Your software is &lt;em&gt;your&lt;/em&gt; software.  You may give it any license you like, and&#xA;distribute it as you want.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ol start=&quot;2&quot;&gt;&#xA;  &lt;li&gt;and will also utilize a GPL licensed Python library? &lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This step is slightly more complex.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Using this library means that the &lt;em&gt;combination&lt;/em&gt; of your software, closed-source library, and the GPL licensed Python library, means that the composite of all three must, &lt;em&gt;if distributed&lt;/em&gt;, be licensed under GPL (some may &lt;a href=&quot;http://opensource.stackexchange.com/questions/1181/does-a-host-applications-license-apply-to-plug-ins-written-for-it/1183#1183&quot;&gt;disagree&lt;/a&gt;, but let's for the sake of argument assume that this is effect of the GNU GPL).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This clearly rules out &lt;em&gt;distributing&lt;/em&gt; a project where all three components are included, as the license of GNU GPL library is &lt;em&gt;incompatible&lt;/em&gt; with including a closed source library.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, the fact that your software is written for the specific purpose of making all these (license-wise incompatible) components interoperate cannot impose any restrictions on how you choose to use your creative powers.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I.e. the mere &lt;em&gt;existence&lt;/em&gt; of a legal tool know as the &quot;GNU GPL&quot; cannot in any way constrain what you create.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The GNU GPL &lt;em&gt;can&lt;/em&gt; impose terms on what you &lt;em&gt;distribute&lt;/em&gt;.  If what you distribute &lt;em&gt;includes&lt;/em&gt; a component licensed under the GNU GPL, then you're bound by the terms of the license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This also means that if you don't distribute any component licensed under the GNU GPL, then you're &lt;em&gt;not&lt;/em&gt; bound by the terms of the license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So: Provided &lt;em&gt;you&lt;/em&gt; don't distribute &lt;em&gt;anything else&lt;/em&gt; along with your Python software, but just provide &lt;em&gt;instructions&lt;/em&gt; to your downstream users about how to find (buy?) the closed-source library, and the GPL licensed Python library, and the steps they need to go through to assemble the these components into a working composite, then you don't have to care about the GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now, what about your users?  Given the scenario described above, they will now be able to take your software, separately acquire the closed-source library, and the GPL licensed Python library, and take the steps required to assemble the complete project into a functional piece of software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Are &lt;em&gt;the users&lt;/em&gt; breaking the GPL?  No, not as long as they don't &lt;em&gt;distribute&lt;/em&gt; the completed project.  The private use exception of the GNU GPL (and copyright law) makes the user's use of all the components  legal.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Are you subverting the GNU GPL by doing it this way?  IMHO, no.  The GNU GPL is essentially about &lt;em&gt;freedom&lt;/em&gt;.  The GNU GPL was not written to &lt;em&gt;restrict&lt;/em&gt; people from using closed source software in their projects.  &lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-07T09:17:35.270" LastActivityDate="2015-08-07T09:17:35.270" CommentCount="0" />
  <row Id="1503" PostTypeId="1" AcceptedAnswerId="1504" CreationDate="2015-08-07T09:44:30.200" Score="17" ViewCount="1005" Body="&lt;p&gt;I run a project with a decently-sized userbase - a couple of hundred people, perhaps. It's regularly used by all users, and I've made it clear who developed it, where it can be found, and that it's free software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, I'm currently the only developer and contributor. With the exception of some small amounts of documentation, nobody has made any pull requests to the project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I've got other things to do as well, and I can't spend all my time working on this one project. I need other people to pitch in.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Given a sizeable, active userbase, how can I encourage users to contribute to my project?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is not the same as the suggested duplicate, because it's about converting &lt;em&gt;existing users&lt;/em&gt; to contributors, rather than attracting completely new users and developers.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-08-09T19:00:19.927" LastActivityDate="2015-08-12T21:27:41.400" Title="How can I convert users to contributors?" Tags="&lt;contributor&gt;&lt;project-management&gt;" AnswerCount="5" CommentCount="6" FavoriteCount="3" />
  <row Id="1504" PostTypeId="2" ParentId="1503" CreationDate="2015-08-07T10:17:05.017" Score="17" Body="&lt;ol&gt;&#xA;&lt;li&gt;Make it clear that you want contributions. &lt;/li&gt;&#xA;&lt;li&gt;Make it &lt;em&gt;easy&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;I would start by putting a friendly note in your project's ReadMe file. &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;This project is looking for contributors. If you have a feature you'd like to see implemented or a bug you'd liked fixed, the best and fastest way to make that happen is to implement it and submit it back upstream for consideration. All contributions will be given thorough consideration. &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Or something like that. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Next, reach out to your users on your mailing list, forum, and social media letting them know that the project needs more developers. Seriously, I can't tell you how far a Twitter account and a few well placed hashtags can go into generating interest. Also, blog about your development on the project if possible. Anything you can do to get your project in front of even more users is a good thing, particularly if those users are also developers. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, even if you get some interest that way, it won't matter unless you make it &lt;em&gt;easy&lt;/em&gt; as pie to help out. &lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Write clean and understandable code. If people can't understand your code, they can't change or add to it. &lt;/li&gt;&#xA;&lt;li&gt;Document the build process thoroughly. &lt;/li&gt;&#xA;&lt;li&gt;Make sure that the project builds &quot;out of the box&quot; when cloned onto a clean machine. If people struggle with getting it to build, they'll quickly move on and just write off trying to help out. &lt;/li&gt;&#xA;&lt;li&gt;Add a &lt;code&gt;Contributing&lt;/code&gt; file to the repo detailing the project standards and workflow. This goes a long way to reducing the frustrating back and forth that can happen during a pull request. &lt;/li&gt;&#xA;&lt;li&gt;If you're able, add [up-for-grabs] and [easy-fix] labels to issues that someone new could easily tackle. This gives people a place to start. &lt;/li&gt;&#xA;&lt;li&gt;Be available for real time chat to help new contributors get started. There are often a lot of questions when new contributors get started. Real time chat is the best way to help them get on their feet. &lt;/li&gt;&#xA;&lt;li&gt;Reduce your standards. Don't &lt;em&gt;really&lt;/em&gt; reduce your standards, but go ahead and accept that patch that isn't quite up to par. You can always go ahead and take a few minutes to clean it up after the fact. &lt;/li&gt;&#xA;&lt;li&gt;Write unit tests. It can be hard to tell if you broke anything while making a change to someone else's code. Provide the tests to make it easy to make sure everything is still working correctly post change. &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="775" LastEditorUserId="775" LastEditDate="2015-08-09T11:46:11.293" LastActivityDate="2015-08-09T11:46:11.293" CommentCount="2" />
  <row Id="1505" PostTypeId="2" ParentId="1503" CreationDate="2015-08-07T10:24:22.213" Score="6" Body="&lt;p&gt;Generally speaking, finding contributors is very difficult.  &lt;a href=&quot;http://media.libreplanet.org/u/libby/m/mako/&quot;&gt;Benjamin Mako Hill described in a talk at Libreplanet&lt;/a&gt; that the median number of contributors to Free Software projects is 1.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That being said, it is a good idea to ease people into the process.  Make it easy for users to file good bug reports, maybe by adding a reporting tool to your software.  Then give them feedback on those bugs.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Let them make feature requests and have them participate in the community that way.  Also make sure there is a good and easy to use way to exchange ideas.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Sometimes, newcomers who want to help find it easier to help write or update documentation or translate documentation and parts of your program.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Once you have people involved, translators who know a bit of code may be familiar enough with it that they start fixing small issues.  From there, they may go even further and take on bigger responsibilities.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The key is with any of this is to keep the threshold as low as possible.&lt;/p&gt;&#xA;" OwnerUserId="1165" LastActivityDate="2015-08-07T10:24:22.213" CommentCount="0" />
  <row Id="1506" PostTypeId="1" AcceptedAnswerId="1507" CreationDate="2015-08-07T11:05:23.660" Score="6" ViewCount="406" Body="&lt;p&gt;I have a 3d printer that I use to print some models. There is a model I like that is licensed in Creative Commons under &lt;a href=&quot;http://creativecommons.org/licenses/by-nc-sa/3.0/&quot;&gt;the Attribution - Non-Commercial - Share Alike&lt;/a&gt; license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am not sure what &quot;Commercial purposes&quot; are.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;My questions are:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Can I sell it? (I guess the answer is no)&lt;/li&gt;&#xA;&lt;li&gt;If someone wants me to print a  model for them, can I charge the expenses I have (material, post charges)?&lt;/li&gt;&#xA;&lt;li&gt;Can I contact the owner to agree a deal to sell it? Will he be able to grant me permission to sell or he has lost the control?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="1192" LastEditorUserId="138" LastEditDate="2015-08-07T11:52:58.517" LastActivityDate="2015-08-08T14:15:34.750" Title="Can I charge expenses for a work under CC BY-NC-SA?" Tags="&lt;licensing&gt;&lt;creative-commons&gt;&lt;monetization&gt;&lt;commercial&gt;&lt;cc-by-nc-sa&gt;" AnswerCount="3" CommentCount="4" FavoriteCount="1" />
  <row Id="1507" PostTypeId="2" ParentId="1506" CreationDate="2015-08-07T11:26:41.213" Score="5" Body="&lt;p&gt;The CC NC clause is really hard to get a grasp on, and Creative Commons do not provide much guidance about it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There certainly exists a lot of examples where it is not possible to give a straightforward about exactly &lt;em&gt;what&lt;/em&gt; is commercial use.  For an example of such a situation, see my answer to this question: &lt;a href=&quot;http://opensource.stackexchange.com/questions/1244/using-cc-nc-material-inside-a-freemium-app&quot;&gt;Using CC-NC material inside a freemium app&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That being said, I don't see why there is a need to cop out of &lt;em&gt;every&lt;/em&gt; question about the NC clause by simply saying that it isn't clear.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Sometimes it &lt;em&gt;possible&lt;/em&gt; to give a straightforward answer. Then we should.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;AFAIK, there is almost no case law about the NC clause.  This means that it isn't often contested. In most cases, people are able to figure out if it applies or not, and do the right thing.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This question is one where I think it is reasonable to provide a straight answer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The legal code defines &quot;Non-Commercial&quot; as:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;not primarily intended for or directed towards commercial advantage or monetary compensation&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;That means that you cannot sell it for an amount of money that will make you a profit.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As for &lt;em&gt;someone&lt;/em&gt; asking you to print a model, you can obviously get compensated for your direct outlay in materials, but if you make a profit by providing this service, you're breaking the license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Until October 2008, the CC FAQ provided a much more &lt;em&gt;detailed&lt;/em&gt; guidance on how to understand the &quot;NC&quot; clause than the present, deliberately vague FAQ, does.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The old FAQ discussed a scenario where a commercial print copy shop were charging the &lt;em&gt;commercial rate&lt;/em&gt; for the service of making copies of some materials licensed under CC BY-NC, and concluded that this was not allowed. However, if a commercial print shop agreed to just charging its own costs for the same operation, then it would be OK.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;While this specific example has since been removed from the CC FAQ, I think it still applies.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As for the owner &lt;em&gt;allowing&lt;/em&gt; you to sell it: Yes. CC is not an exclusive license.  As with all CC licenses, can always ask copyright owners for an alternative licensing arrangement.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-07T15:15:09.603" LastActivityDate="2015-08-07T15:15:09.603" CommentCount="2" />
  <row Id="1508" PostTypeId="2" ParentId="1477" CreationDate="2015-08-07T12:59:24.107" Score="4" Body="&lt;p&gt;Provided it is a real clean room Linux Driver (i.e. it is not &lt;em&gt;adapted from&lt;/em&gt; a GPL-licensed Linux Driver), then the company that owns its copyright does not have to respect the GPL.  Having the &lt;em&gt;potential&lt;/em&gt; to be linked to the Linux-kernel, or to Linux system libraries, or using some  Linux API in the manner it is supposed to be used, does not trigger the GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So the company can sell you and everybody else this Linux Driver as a binary component. They're not distributing anything derived from anything under GPL, so they can do as they please.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now, if you buy this binary, integrate it with your system, and want to distribute the result, then this may or may not allowed.&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;If the Linux Driver is designed to meet the requirements of the &lt;a href=&quot;https://www.kernel.org/pub/linux/kernel/COPYING&quot; rel=&quot;nofollow&quot;&gt;Linux Kernel exception&lt;/a&gt; or the GNU GPL &lt;a href=&quot;http://www.gnu.org/licenses/gpl-faq.en.html#SystemLibraryException&quot; rel=&quot;nofollow&quot;&gt;system library exception&lt;/a&gt;, then it is &lt;em&gt;excepted&lt;/em&gt; from the GPL, and can you go ahead and distribute your Linux-based hardware &lt;em&gt;without&lt;/em&gt; providing the source code for this component.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;If the Linux Driver does &lt;em&gt;not&lt;/em&gt; meet the criteria for being excepted from GPL when integrated in your system, then GPL requires you to deliver its source code when you &lt;em&gt;distribute&lt;/em&gt; your Linux-based hardware. If you're unable to meet this requirement, then you're not allowed to distrubute your hardware at all.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-07T13:05:59.487" LastActivityDate="2015-08-07T13:05:59.487" CommentCount="2" />
  <row Id="1509" PostTypeId="2" ParentId="1503" CreationDate="2015-08-07T13:12:23.957" Score="11" Body="&lt;p&gt;To me, this question is very similar to &lt;em&gt;how do I attract customers to my business?&lt;/em&gt; except instead of cash, you want contributions. Successful salespeople deeply understand their customers' needs and tailor their services to address those needs. It's a very powerful method: &lt;strong&gt;put yourself in your potential contributors' shoes&lt;/strong&gt;, and ask what's stopping you. Many things will become obvious in this light.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Keep the lights on&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I find the most common reason people don't contribute is simple: no one's home (or it seems so). How can contributions happen if there's no one at the other end receiving it?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Show activity if you have any.&lt;/strong&gt; For projects I care about, I love reading developer logs and other related blog posts. It shows that there are people also passionate about the project, that I can talk to. &lt;strong&gt;Talk about what you're working on &lt;em&gt;now&lt;/em&gt;&lt;/strong&gt;, not what you've shipped a month ago. This is important for potential contributors, and is an unnatural skill for most developers, since they may have been burned by over-promising in the past. One of the biggest obstacles for new contributors is not knowing where to start. Well, here's one way you can not only give people a glimpse of the inner workings of the project, but also where they can contribute.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;How you show off your activity will depend on your target audience and what you can bother with. The most obvious is having a &lt;a href=&quot;http://producingoss.com/en/web-site.html&quot;&gt;website&lt;/a&gt;. GitHub for example provides free light-weight web hosting and blogging, but &lt;a href=&quot;http://producingoss.com/en/web-site.html#canned-hosting&quot;&gt;there are many others&lt;/a&gt;. You could also use social media like &lt;a href=&quot;http://producingoss.com/en/social-networking.html&quot;&gt;Facebook, Twitter&lt;/a&gt;, &lt;a href=&quot;http://producingoss.com/en/irc.html&quot;&gt;IRC&lt;/a&gt;, &lt;a href=&quot;http://producingoss.com/en/message-forums.html&quot;&gt;mailing lists, web forums&lt;/a&gt;...&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But if you're not actively working on the project, it's not all bad. &lt;strong&gt;Provide easy ways for people to get in touch.&lt;/strong&gt; If I find no one home but I still want to contribute, I'm going to touch base first instead of spending a week preparing a pull request. Have a public &lt;a href=&quot;http://producingoss.com/en/bug-tracker.html&quot;&gt;issue tracker&lt;/a&gt;. List an email address, or social media handles. Provide a comment section. Maybe forums or IRC where you hang out. Whatever it is, list it clearly &lt;strong&gt;and respond promptly.&lt;/strong&gt; Few things put off potential contributors more than seeing unanswered bug reports from months ago!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One point worth making is that you should &lt;a href=&quot;http://producingoss.com/en/setting-tone.html#avoid-private-discussions&quot;&gt;&lt;strong&gt;prefer open channels for communication.&lt;/strong&gt;&lt;/a&gt; E.g. if appropriate, put it in the public issue tracker rather than private emails. This has many advantages: it shows activity (hey look, there are other people contributing), and it discourages cliquish behaviour once more contributors join (although that's a problem you wish you had). On occasion I've reposted IRC chats or emails on the issue tracker for these reasons.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Why do people work on free software projects?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is not a trick question. Most people intuitively think the answer is &quot;resume-padding&quot;, or to &quot;write good code&quot;, and they are wrong. Instead:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;We find in contrast, that enjoyment-based intrinsic motivation, namely how &lt;strong&gt;creative&lt;/strong&gt; a person feels when working on the project, is the strongest and most pervasive driver. We also find that &lt;strong&gt;user need&lt;/strong&gt;, &lt;strong&gt;intellectual stimulation&lt;/strong&gt; derived from writing code, and &lt;strong&gt;improving programming skills&lt;/strong&gt; are top motivators for project participation.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;-- &lt;a href=&quot;http://flosshub.org/node/53&quot;&gt;&lt;em&gt;Why hackers do what they do: Understanding motivation and effort in free/open source software projects, Lakhani, Karim R., and Wolf R.&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;For me to willingly contribute to someone else's project, I'd want to be able to work &lt;em&gt;creatively&lt;/em&gt; on a problem &lt;em&gt;I&lt;/em&gt; find interesting, challenging, or that addresses one of &lt;em&gt;my&lt;/em&gt; needs (or my itch). The last thing I'd want to work on is an uninteresting, strictly-to-spec task to be judged by an opinionated or rude maintainer. After all, most people who do that get paid, in day-jobs!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When you're hungry for contributors, you need to put in extra effort to appear approachable, and once in contact make them feel welcome.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One of the best and often overlooked ways to do this is to &lt;strong&gt;show appreciation.&lt;/strong&gt; Say thanks! It's the bare minimum you should do, for anyone who reaches out. &quot;Thanks for your interest!&quot; &lt;a href=&quot;http://producingoss.com/en/managing-participants.html#users-to-participants&quot;&gt;Treating users as potential contributors&lt;/a&gt; is a good attitude and start. If someone contributes a killer feature, the additional success of the project is reward enough, but that rarely happens. I don't want my contribution to simply wither away in the commit logs. Yes, non-trivial code changes mean you have to add contributors' names in the copyright notices, but that's out-of-sight. Does your project have a &quot;&lt;a href=&quot;http://producingoss.com/en/credit.html&quot;&gt;credits&lt;/a&gt;&quot; or &quot;acknowledgements&quot; section? What about other communication channels? One of the best acknowledgements I've received for contributing features was being mentioned by name in a blog post, as an example. What this also does is it &lt;strong&gt;shows future contributors that they will be acknowledged.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;But external motivation may work too.&lt;/strong&gt; Not all projects have interesting and easy tasks to do, and you probably want to work on such tasks yourself, which is fair enough since the project is yours. But it does leave a backlog of interesting-but-hard, or simple-but-tedious tasks that no one wants to do, especially new contributors. I've wondered whether a &lt;a href=&quot;https://en.wikipedia.org/wiki/Open-source_bounty&quot;&gt;bounty&lt;/a&gt; for such tasks can attract new contributors to an obscure project, and I'm happy to report that it does, at least in the &lt;a href=&quot;http://cxong.github.io/2015/03/bounties-for-your-game/&quot;&gt;one time I've tried it&lt;/a&gt;. It did take one month after the bounty post for anything to happen though, which leads to my final point...&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Be patient&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When a project is run by volunteers, things happen at an unpredictable pace. Motivation comes and goes, real life happens. Sometimes you'll be actively updating a project for months with no acknowledgement from the outside world, others you'll get a flurry of contributions on a project you've abandoned years ago - I've been there, on both ends. Be aware it's the nature of the beast, and most things just take time.&lt;/p&gt;&#xA;" OwnerUserId="175" LastActivityDate="2015-08-07T13:12:23.957" CommentCount="0" />
  <row Id="1510" PostTypeId="2" ParentId="1506" CreationDate="2015-08-07T13:22:02.040" Score="7" Body="&lt;p&gt;One of the problems with CC NC is that when you say &quot;I am not sure what &quot;Commercial purposes&quot; are&quot;, you are not alone in that.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The relevant clause in CC BY-NC 3.0 reads&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You may not exercise any of the rights granted to You in Section 3 above in any manner that is primarily intended for or directed toward commercial advantage or private monetary compensation.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The definition of NonCommercial in CC BY-NC 4.0 is&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;NonCommercial means not primarily intended for or directed towards commercial advantage or monetary compensation&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;What that means exactly is not very clear, and opinions differ on whether something is commercial use or not - and a whole lot of discussion about it has not produced much, if any, clarification on the matter.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Creative Commons commissioned a study to what exactly the NC clause in their license means in 2008, see &lt;a href=&quot;https://wiki.creativecommons.org/wiki/Defining_Noncommercial&quot; rel=&quot;nofollow&quot;&gt;https://wiki.creativecommons.org/wiki/Defining_Noncommercial&lt;/a&gt; and &lt;a href=&quot;http://creativecommons.org/weblog/entry/17127&quot; rel=&quot;nofollow&quot;&gt;http://creativecommons.org/weblog/entry/17127&lt;/a&gt; which found that opinions on what exactly is commercial use differ significantly. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, it is generally thought that use of CC NC materials is not allowed on websites that are supported by advertisements, even if those advertisements are only intended to cover the running cost of the website. The study cited above found that&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;On a scale of 1-100 where 1 is “definitely noncommercial” and 100 is “definitely commercial” creators and users (84.6 and 82.6, respectively) both rate uses in connection with online advertising generally as “commercial.” However, more specific use cases revealed that many interpretations are fact-specific. For example, creators and users gave the specific use case “not-for-profit organization uses work on its site, organization makes enough money from ads to cover hosting costs” ratings of 59.2 and 71.7, respectively.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;When you want to sell it, or receive a compensation for the materials (and power) used, one of the findings of the report is that&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;virtually all creators agree that a noncommercial use is one in which&#xA;  “no money changes hands.”&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;When looking at the question where &quot;money would be made from the work, but only enough to cover the costs&quot;, which seems to be your scenario, roughly 60% of users considers this &quot;definitely commercial&quot; (about 10% &quot;definitely noncommercial, and the rest &quot;can't say&quot;), and about 45% of creators considers it &quot;definitely commercial&quot; (vs ~20% definitely non-commercial and the rest &quot;can't say&quot;)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If the copyright holder believes your use is commercial, it's up to the court to decide whether it is or not, creating a legal hazard.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can &lt;em&gt;always&lt;/em&gt; contact the owner to make a separate deal that is not covered by the license, or discuss (and put in writing) whether they consider your use commercial purposes.&lt;/p&gt;&#xA;" OwnerUserId="97" LastEditorUserId="97" LastEditDate="2015-08-08T14:15:34.750" LastActivityDate="2015-08-08T14:15:34.750" CommentCount="4" />
  <row Id="1511" PostTypeId="1" CreationDate="2015-08-07T14:36:02.723" Score="-2" ViewCount="32" Body="&lt;p&gt;My company currently has &lt;a href=&quot;http://cos.io/integrationgrants/&quot; rel=&quot;nofollow&quot;&gt;small grants available for integration&lt;/a&gt; of science tools with our free, open source platform, the &lt;a href=&quot;http://osf.io&quot; rel=&quot;nofollow&quot;&gt;Open Science Framework&lt;/a&gt;.  I'm interested in hearing which integrations open source developers on this forum feel are most important AND most feasible to do. Not just those listed as examples on our list, but any tools out there and used in science.  We're of course also evaluating options, but other assessments would be appreciated.&lt;/p&gt;&#xA;" OwnerUserId="1198" LastActivityDate="2015-08-07T14:36:02.723" Title="Which open source integrations are most important and feasible to do?" Tags="&lt;development&gt;&lt;collaboration&gt;" AnswerCount="0" CommentCount="3" ClosedDate="2015-08-07T14:40:53.837" />
  <row Id="1512" PostTypeId="2" ParentId="1431" CreationDate="2015-08-07T15:32:02.160" Score="0" Body="&lt;p&gt;Take a look at firmwares of most low-cost, low-end home routers.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;They use tons of GPL (and other) components, while being closed source as a whole. If there are source codes of such devices provided, then only for:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;kernel (including drivers for custom chips used in router)&lt;/li&gt;&#xA;&lt;li&gt;used software in original versions&lt;/li&gt;&#xA;&lt;li&gt;other source code, but only if this is convenient for some reason for the manufacturer&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;In such devices there exist multiple contact points between open and closed parts, and while some of them were reported as GPL violations, most of them weren't.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;(Of course most of them were done intentionally, to lower manufacturing costs using GPL software and bypassing the license terms.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also, most reported violations concerned directly Linux kernel and custom drivers, while most types of closed-to-open-source wrappers (for example to routing protocol daemons), network bridges etc. are recognized as clear from legal point of view.&lt;/p&gt;&#xA;" OwnerUserId="691" LastActivityDate="2015-08-07T15:32:02.160" CommentCount="2" />
  <row Id="1513" PostTypeId="2" ParentId="1506" CreationDate="2015-08-07T15:59:16.147" Score="1" Body="&lt;p&gt;Transforming medium (CD→MP3, PDF→paper, 3D-file→physical, etc) doesn't change the copyright state so that does affect you directly if you want to sell the printings of the model directly.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'd suggest staying well away from the non-commercial definition nonsense. There madness lies. &lt;strong&gt;Be a service provider.&lt;/strong&gt; What most people in this space do is &lt;em&gt;lease&lt;/em&gt; their printers. Charge for the time, materials, finishing, postage, etc and the client takes responsibility for licensing. And you can be as unreasonable as you like. You can profit from your resources.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now, there's clearly overlap there. If you can freely give somebody the model file and they can legally hire you out, why can't you &lt;em&gt;pretend&lt;/em&gt; they give you the model and just sell the model? It might seem ridiculous but if you're doing this as a business, I'd work very carefully to make sure your business model remains that of a service provider; that you're letting them use your printer to print their files.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can throw technology at this as a workaround. Provide your users a free 3D model storage service, a model library that where they can download to their storage, and then a printer hire service where they can print things from their storage. Convoluted, painful... But probably legal. At the very least, open to argument.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And a copyright owner can transfer copyright assignment, but simply providing something under one license doesn't mean you can't also license it out under other licenses. For something like this, the original owner almost certainly has the ability to give you a commercial license.&lt;/p&gt;&#xA;" OwnerUserId="1201" LastEditorUserId="1201" LastEditDate="2015-08-07T16:49:11.423" LastActivityDate="2015-08-07T16:49:11.423" CommentCount="5" />
  <row Id="1514" PostTypeId="1" CreationDate="2015-08-07T17:23:35.810" Score="6" ViewCount="33" Body="&lt;p&gt;A common statement about the value of Free/Libre/Open programs: non-developers can hire developers to update the software (and not be reliant on a single monopoly control over this service).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Does this really happen much? Are there businesses or freelancers who do this? Or is it mostly hypothetical?&lt;/p&gt;&#xA;" OwnerUserId="1176" LastActivityDate="2015-08-07T18:58:59.393" Title="Are there actual service businesses or freelance orgs for non-programmers to hire devs to update FLO software?" Tags="&lt;community&gt;&lt;history&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="1515" PostTypeId="2" ParentId="1514" CreationDate="2015-08-07T18:53:23.093" Score="7" Body="&lt;p&gt;This of course varies from project to project, but yes: there are both businesses and freelancers who do this.  But more so for large free software projects, than for small ones.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As an example, look at a Drupal. Drupal is a FLOSS project (requiring &lt;em&gt;all&lt;/em&gt; distributed components to be licensed under GPLv2+) that also sustains a large community of individual developers and companies that can help you with adapting and updating any Drupal project.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Individual developers: &lt;a href=&quot;https://www.drupal.org/paid-services&quot;&gt;https://www.drupal.org/paid-services&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Companies: &lt;a href=&quot;https://jobs.drupal.org/&quot;&gt;https://jobs.drupal.org/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;When I am approached by clients about paid work for Drupal, the client is almost always aware of this, and tell me up front that my company is just one of the service providers they consider. They expect my offer to be competitive compared to other companies that offer Drupal-related services.  And if they know what they're doing (not all companies understand this), they require us to &lt;em&gt;distribute&lt;/em&gt; what we deliver to them under GPLv2+ - which means that they can kick us out and hire somebody else to work on the software &lt;em&gt;we&lt;/em&gt; create for them if they're are dissatisfied with our services.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I also believe that this is the case for &lt;em&gt;very many&lt;/em&gt; other free software projects, but my first hand experience is with the Drupal ecosystem.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-07T18:58:59.393" LastActivityDate="2015-08-07T18:58:59.393" CommentCount="3" />
  <row Id="1517" PostTypeId="1" AcceptedAnswerId="1518" CreationDate="2015-08-08T07:39:37.490" Score="5" ViewCount="133" Body="&lt;p&gt;If &lt;a href=&quot;http://opensource.stackexchange.com/questions/657/what-am-i-supposed-to-do-if-someone-is-breaking-the-terms-of-my-licensed-softwar&quot;&gt;this question&lt;/a&gt; is about what we are supposed to do if someone is breaking the terms of a software license, I would like to know how I can know if some is doing so. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Suppose that I'm writing a software with a GPL license. It is a copyleft license. It is not allowed to use the code in a non-free licence. But, in practice, if someone uses this code in a non-open source software, how can I detect that?&lt;/p&gt;&#xA;" OwnerUserId="1209" LastEditorUserId="98" LastEditDate="2015-08-08T19:51:25.913" LastActivityDate="2015-08-12T19:24:59.707" Title="How can I detect if someone is breaking my license terms?" Tags="&lt;copyleft&gt;&lt;software&gt;&lt;enforcement&gt;" AnswerCount="3" CommentCount="0" />
  <row Id="1518" PostTypeId="2" ParentId="1517" CreationDate="2015-08-08T09:37:10.540" Score="7" Body="&lt;p&gt;There may be a number of ways, but there is no guarantee.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you have enough certainty, you could start a legal case and ask for sources to be disclosed. This in fact happened in the SCO case.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you can reverse-engineer the code, and show that it has non-trivial code that is exactly like yours, that would help. Whether it would convince a judge and a jury is another matter. Note that reverse engineering someone else's code may be illegal.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You could also have inside information from the people who were involved in using your code in a non-open environment - whistleblowers or snitches, depending on where you stand on the issue.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And you could look for behaviours that are characteristic for your code, although this is unlikely to be successful. As a wild example, you could put an Easter egg in your code and see if it shows up with the code from the license-breaker as well. This is tricky, however, as the nature of open source is that easter eggs are easier to find and remove.&lt;/p&gt;&#xA;" OwnerUserId="75" LastActivityDate="2015-08-08T09:37:10.540" CommentCount="5" />
  <row Id="1519" PostTypeId="2" ParentId="1503" CreationDate="2015-08-08T11:09:14.593" Score="3" Body="&lt;p&gt;You could register your project at &lt;a href=&quot;http://up-for-grabs.net/#/&quot; rel=&quot;nofollow&quot;&gt;http://up-for-grabs.net/#/&lt;/a&gt; as was &lt;a href=&quot;http://www.hanselman.com/blog/BringKindnessBackToOpenSource.aspx&quot; rel=&quot;nofollow&quot;&gt;suggested on Scott Hanselman's blog&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;From their homepage:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;We're looking for projects who can take the time out to help mentor developers as they get started with open source.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;What sort of tasks are a good fit?&lt;/p&gt;&#xA;  &#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;Tasks should take no longer than a few nights' worth of work&lt;/li&gt;&#xA;  &lt;li&gt;Tasks should stand alone - avoid core functionality on which other tasks depend&lt;/li&gt;&#xA;  &lt;li&gt;Tasks should be well described with pointers to help the implementer&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;  &#xA;  &lt;p&gt;We suggest the tag &lt;code&gt;up-for-grabs&lt;/code&gt; but using a different name is also acceptable.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="1214" LastActivityDate="2015-08-08T11:09:14.593" CommentCount="0" />
  <row Id="1520" PostTypeId="2" ParentId="1517" CreationDate="2015-08-08T12:07:31.047" Score="5" Body="&lt;p&gt;Practically speaking, in general, you can't. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;By 'in general', I mean, 'you are part of the 99.99% of people who post up something with a FLOSS license.' You will have some users scattered all over creation. You will have no visibility into what they do. You may well have someone who uses your code in violation of the license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you are in the unusual .01% (numbers invented) you have created something with tremendous impact on the marketplace, like MySQL or Linux or the like. In which case, you might end up noticing some inappropriate use. See, for example, &lt;a href=&quot;https://en.wikipedia.org/wiki/BusyBox&quot;&gt;BusyBox&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The detection mechanism here is not technical. How could it be? Starting from the source, a bad actor can remove anything you leave in place to try to detect usage. Rather, it depends on (a) wide usage, and (b) conspicuousness, such as, well, a shell. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you post some clever image analysis algorithm, and someone adapts it and incorporates it inappropriately, you have very limited means of noticing.&lt;/p&gt;&#xA;" OwnerUserId="554" LastActivityDate="2015-08-08T12:07:31.047" CommentCount="5" />
  <row Id="1522" PostTypeId="1" AcceptedAnswerId="1523" CreationDate="2015-08-08T21:35:14.103" Score="5" ViewCount="53" Body="&lt;p&gt;I am creating an open source project and I want to use an MIT license for that. I have found this page: &lt;a href=&quot;http://choosealicense.com/licenses/mit/&quot; rel=&quot;nofollow&quot;&gt;http://choosealicense.com/licenses/mit/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What should I write under &quot;full name&quot;? Should the group of people, that I am working with be registered as a company? If I am the head developer, and other people are freelancers that I have hired, can I (or should I) just write my own name instead of the company's name?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Under the &quot;year&quot; should I write basically the current year, the years when this project is available as open source or the year this product was released?&lt;/p&gt;&#xA;" OwnerUserId="2218" LastEditorUserId="69" LastEditDate="2015-08-09T13:04:07.000" LastActivityDate="2015-08-09T13:04:07.000" Title="What should be written in MIT license (year, full name)?" Tags="&lt;licensing&gt;&lt;mit&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="1523" PostTypeId="2" ParentId="1522" CreationDate="2015-08-08T21:43:03.840" Score="2" Body="&lt;p&gt;All these details are part of the copyright statement, i.e.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;pre&gt;&lt;code&gt;Copyright (c) [year] [fullname]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;As such, they should be filled in with the details of the copyright that applies to the licensed work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;code&gt;[year]&lt;/code&gt; is the &lt;strong&gt;year copyright was applied&lt;/strong&gt;. If you apply the copyright (which happens automatically when you write the work) in 2015, put in 2015. Some people like to put in a range of years (i.e. 2015-2020) - this isn't necessary.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;code&gt;[fullname]&lt;/code&gt; is the &lt;strong&gt;full name of the entity that owns the copyright&lt;/strong&gt;. If the owning entity is a private individual, put their name in:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;Copyright (c) 2015, jackson&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;If it's a company (and although you may write the code, if you write it for a company, your employment contract probably contains a copyright assignment clause), put in the name of the company:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;Copyright (c) 2015, Stack Exchange, Inc.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Additionally, if you're using &lt;a href=&quot;http://choosealicense.com&quot; rel=&quot;nofollow&quot;&gt;choosealicense&lt;/a&gt;, each license page has a section called &lt;strong&gt;How to apply this license&lt;/strong&gt;. You can find it on the top of the right-hand column of the page.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-08-08T21:43:03.840" CommentCount="11" />
  <row Id="1524" PostTypeId="1" AcceptedAnswerId="1529" CreationDate="2015-08-05T22:38:47.900" Score="5" ViewCount="33" Body="&lt;p&gt;I want to use &lt;a href=&quot;http://oficinavirtual.mityc.es/componentes/first-steps.html&quot; rel=&quot;nofollow&quot;&gt;this library&lt;/a&gt; in my project. Author says it is under the LGPL license, but &lt;a href=&quot;http://oficinavirtual.mityc.es/componentes/mityclibxades/license.html&quot; rel=&quot;nofollow&quot;&gt;one of its dependencies&lt;/a&gt; is under the &lt;a href=&quot;https://en.wikipedia.org/wiki/European_Union_Public_Licence&quot; rel=&quot;nofollow&quot;&gt;EUPL license&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;EUPL license isn't clear about if a closed-source application that uses the libraries inherits the EUPL license. What I understood so far is the following:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;LGPL licence is compatible with EUPL license, so a library under LGPL license that uses another library under EUPL can be used for a closed-source commercial product.&lt;/li&gt;&#xA;&lt;li&gt;It is not mandatory to put a derived product under the EUPL license if it uses a library under the EUPL license (despite it mentions that Copyleft stuff).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;References I read:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.ifosslr.org/ifosslr/article/view/91/165&quot; rel=&quot;nofollow&quot;&gt;http://www.ifosslr.org/ifosslr/article/view/91/165&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Comparison_of_free_and_open-source_software_licenses&quot; rel=&quot;nofollow&quot;&gt;https://en.wikipedia.org/wiki/Comparison_of_free_and_open-source_software_licenses&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;In short: Can I use a library under the EUPL license for my closed-source commercial product?&lt;/p&gt;&#xA;" OwnerUserId="2238" OwnerDisplayName="Broken_Window" LastEditorUserId="138" LastEditDate="2015-08-09T11:34:47.073" LastActivityDate="2015-08-09T14:25:31.973" Title="Is it possible to use a library under the EUPL license for a commercial closed-source project?" Tags="&lt;proprietary-code&gt;&lt;lgpl&gt;&lt;eupl&gt;" AnswerCount="1" CommentCount="5" />
  <row Id="1525" PostTypeId="1" CreationDate="2015-08-09T05:06:12.030" Score="8" ViewCount="98" Body="&lt;p&gt;There are systems consisting of wholly free software, and in some cases the hardware is also driven by free software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What about mice? Do mice have software on them which would make them &quot;nonfree&quot;? I've plugged &lt;a href=&quot;http://support.logitech.com/product/mini-optical-mouse-plus&quot;&gt;this mouse&lt;/a&gt; into Ubuntu, Debian and Trisquel Linux distributions and was never prompted to install any nonfree software, which leads me to assume that mice are generic and just send keycodes to the computer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Computer Mice seem like trivial devices. But I do own &lt;a href=&quot;http://support.logitech.com/product/gaming-mouse-g500&quot;&gt;a more sophisticated mouse&lt;/a&gt; which can be loaded up with macros, so it doesn't seem like mice are necessarily so trivial, and the software driving those macros is probably nonfree. Would using either of these mice exempt me from running a &quot;wholly free system&quot;? (Or would the supposed triviality of such software--perhaps it is unable to make network requests, for instance--make it a non-issue?)&lt;/p&gt;&#xA;" OwnerUserId="2219" LastEditorUserId="69" LastEditDate="2015-08-09T20:32:33.650" LastActivityDate="2015-08-10T14:22:37.993" Title="Can a mouse be &quot;free software&quot;?" Tags="&lt;hardware&gt;" AnswerCount="4" CommentCount="0" />
  <row Id="1526" PostTypeId="2" ParentId="1525" CreationDate="2015-08-09T07:29:00.047" Score="1" Body="&lt;p&gt;First, the mouse is hardware, and the underlying technology is old. AFAIK there are no patents covering the technology that are still valid.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Mice have been around for a long time, so it's logical that the Open Source operating systems support them. Note that sometimes, Open Source coders reverse engineer a protocol to make their own implementation, as in the case of &lt;a href=&quot;https://en.wikipedia.org/wiki/Samba_%28software%29&quot; rel=&quot;nofollow&quot;&gt;Samba&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Your more sophisticated mouse may require additional, proprietary code - whether in the mouse itself or in the drivers. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, an Open Source system with a regular mouse should still be &quot;wholly free&quot;. A mouse with more advanced features may not be, depending on what the producer decided to do.&lt;/p&gt;&#xA;" OwnerUserId="75" LastActivityDate="2015-08-09T07:29:00.047" CommentCount="2" />
  <row Id="1527" PostTypeId="1" CreationDate="2015-08-09T07:49:23.160" Score="4" ViewCount="34" Body="&lt;p&gt;I want to modify and merge some software that is available under the two clause BSD license into a project that is available under the GNU GPL version 2.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I want to distribute the result under the GNU GPL version 2.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is this allowed without getting permission from the owner of the copyright to the BSDed code? (I've tried to contact them, but there has been no reply.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If it is allowed, are there steps I need to take?&lt;/p&gt;&#xA;" OwnerUserId="924" LastEditorUserId="924" LastEditDate="2015-08-09T10:00:25.890" LastActivityDate="2015-08-09T10:00:25.890" Title="Can I relicense software under the modified BSD licence?" Tags="&lt;gpl&gt;&lt;relicensing&gt;&lt;bsd&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="1528" PostTypeId="2" ParentId="1527" CreationDate="2015-08-09T09:03:09.917" Score="2" Body="&lt;p&gt;Yes, you are allowed to do this, if the software is licensed under any BSD license other than the original 4 clause license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are a couple of different The BSD licenses. The Original BSD license or 4 clause BSD license is incompatible. The others (3 clause BSD license or revised BSD license, 2 clause BSD license or simplified BSD license and ISC license or OpenBSD license) are compatible.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The original four clause license has become fairly rare. Its incompatibility stems from its clause 3:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;All advertising materials mentioning features or use of this software must display the following acknowledgement: This product includes software developed by the (organization).&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The FSF maintains a &lt;a href=&quot;http://www.gnu.org/licenses/license-list.en.html&quot; rel=&quot;nofollow&quot; title=&quot;FSF - Various Licenses and Comments about Them&quot;&gt;list of licenses&lt;/a&gt; which (among other things) indicate whether a license is compatible with the GPLv2 and/or GPLv3&lt;/p&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-08-09T09:03:09.917" CommentCount="6" />
  <row Id="1529" PostTypeId="2" ParentId="1524" CreationDate="2015-08-09T13:03:58.857" Score="2" Body="&lt;p&gt;The answer to your question turns on that hardy perennial favorite dilemma: aggregation versus derivation. The 'intermediate-ness' of the intermediate library doesn't matter. The reason it doesn't matter is that the question is asked about the work, as a whole. I do not believe that anyone thinks that the precise order and arrangement of the call graph is important; what matters is what people think about dynamic linking. From the standpoint of, well, &lt;code&gt;ldd&lt;/code&gt;, the EUPL library is linked into your work. Either that triggers obligations or it doesn't.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Thus, what matter is what (a) the copyright holder, and (b) a court, thinks of this. The FSF, authors of the GPL, see all dynamic linking as resulting in a derived work and thus source distribution obligations. What do the authors of the EUPL think?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you believe Wikipedia, the dynamic linking situation of the EUPL is completely up in the air, subject to the legal breezes of each individual jurisdiction. So we have even less 'principle' to apply to predicting the legal view of dynamic linkage with an EUPL license than we do with the GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Really, your best best is to &lt;em&gt;ask the copyright holder&lt;/em&gt; of the library for her or his view of dynamic linkage. If the copyright holder gives you permission, you're good. If not, whatever anyone else thinks of the EUPL and dynamic linkage, you might be on the wrong end of a legal action.&lt;/p&gt;&#xA;" OwnerUserId="554" LastEditorUserId="554" LastEditDate="2015-08-09T14:25:31.973" LastActivityDate="2015-08-09T14:25:31.973" CommentCount="1" />
  <row Id="1530" PostTypeId="1" CreationDate="2015-08-09T14:43:36.217" Score="12" ViewCount="1991" Body="&lt;p&gt;A while ago, I encountered an edit suggestion on &lt;a href=&quot;https://stackoverflow.com&quot;&gt;Stack Overflow&lt;/a&gt;. The OP had posted a snippet that was under the GPL, and included the GPL in the snippet. The editor tried to remove the GPL as it was not relevant to the question.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;From an SE point of view, this makes sense - as an SO user, I don't want to see licenses, just the code that the question is about.  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is it legal to remove the license this way, assuming the snippet is a non-trivial piece of code? &lt;/p&gt;&#xA;" OwnerUserId="75" LastEditorUserId="69" LastEditDate="2015-08-09T15:47:12.660" LastActivityDate="2015-08-09T18:34:21.680" Title="Is it OK to remove the license terms for a code snippet?" Tags="&lt;licensing&gt;&lt;law&gt;&lt;code-snippets&gt;" AnswerCount="3" CommentCount="3" FavoriteCount="4" />
  <row Id="1531" PostTypeId="2" ParentId="1530" CreationDate="2015-08-09T15:40:09.420" Score="7" Body="&lt;p&gt;This was contrary to the T&amp;amp;C of stackoverflow. &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;You agree that all Subscriber Content that You contribute to the&#xA;  Network is perpetually and irrevocably licensed to Stack Exchange&#xA;  under the Creative Commons Attribution Share Alike license.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The author granted a CC license whether or not they posted a GPL notice. If the author lacked rights to grant that license, the whole post is invalid. So either the GPL goes, or the post goes. So, it's legal insofar as, under the T&amp;amp;Cs of the site, posting the code granted the CC license, and so the GPL notice was misleading noise.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If the author not only added the GPL notice, but &lt;em&gt;clearly stated&lt;/em&gt; that his or her intent was to dual-license both GPL and CC, then it would be reasonable, if kind of pretentious and noisy. But if the impression is that the OP is trying to avoid the CC license in favor of the GPL, it's no go.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Meanwhile, some legal experts apply &lt;a href=&quot;http://blog.davismcgrath.com/2013/02/14/the-de-minimis-doctrine-plays-an-important-role-in-copyright-law/&quot;&gt;de minimus&lt;/a&gt; to small software snippets. On the other hand, if the author is specifically claiming the snippet as a copyrighted work, it's probably not a good idea to pick a fight.&lt;/p&gt;&#xA;" OwnerUserId="554" LastEditorUserId="554" LastEditDate="2015-08-09T17:08:12.680" LastActivityDate="2015-08-09T17:08:12.680" CommentCount="1" />
  <row Id="1532" PostTypeId="5" CreationDate="2015-08-09T15:51:05.553" Score="0" Body="&lt;p&gt;Code snippets are small, self-contained pieces of code. They are not complete programs and usually need some boilerplate code before they can be compiled, but they are sufficient to illustrate a point to someone proficient in the programming language in which they are written.&lt;/p&gt;&#xA;" OwnerUserId="75" LastEditorUserId="75" LastEditDate="2015-08-09T15:53:38.800" LastActivityDate="2015-08-09T15:53:38.800" CommentCount="0" />
  <row Id="1533" PostTypeId="4" CreationDate="2015-08-09T15:51:05.553" Score="0" Body="For questions about small, self-contained pieces of code within the context of open projects." OwnerUserId="75" LastEditorUserId="98" LastEditDate="2015-08-15T21:52:14.817" LastActivityDate="2015-08-15T21:52:14.817" CommentCount="0" />
  <row Id="1534" PostTypeId="2" ParentId="1530" CreationDate="2015-08-09T16:39:46.637" Score="13" Body="&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;If the code snippet is is authored by user, then adding the GPL just means that it is dual licensed under the GNU GPL as well as CC BY-SA (the default licence applied to all content posted on SE). This was mighty helpful of the user, as it would otherwise not be possible to reuse that snippet in any program not licensed under CC BY-SA without finding it elsewhere under GPL. &lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;If the code snippet was &lt;em&gt;not&lt;/em&gt; authored by SE user, and the code was was not too trivial to be uncopyrightable,  and its &lt;em&gt;original&lt;/em&gt; licence was GPL, then posting it on SE would put it under CC BY-SA. However, only the original author can do this, so such an action without permission from the copyright owner would be unlawful.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="924" LastActivityDate="2015-08-09T16:39:46.637" CommentCount="1" />
  <row Id="1535" PostTypeId="2" ParentId="1530" CreationDate="2015-08-09T18:34:21.680" Score="8" Body="&lt;p&gt;If the code snippet was actually just a snippet, then you could see it as a citation of the original source code and as long as the citation was necessary to enable people to comment properly, it may fall under &lt;a href=&quot;https://en.wikipedia.org/wiki/Fair_use&quot;&gt;Fair Use&lt;/a&gt;.  Since Fair Use is an exception to copyright coverage, the license would not matter much in this case as long as the source it publicly available.  Countries that do not have the concept of Fair Use in their copyright legislation sometimes have specific exceptions for citations.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is hard to judge if it was clearly just a citation without seeing the actual post.&lt;/p&gt;&#xA;" OwnerUserId="1165" LastActivityDate="2015-08-09T18:34:21.680" CommentCount="2" />
  <row Id="1536" PostTypeId="2" ParentId="1525" CreationDate="2015-08-09T20:13:09.367" Score="3" Body="&lt;p&gt;A mouse's design can be free or not free. Software inside of a mouse can be free or not free. This is not related to your ability to use it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are standard protocols for USB 'human interface' devices. So, I can build a mouse around a microcontroller, and I can load that microcontroller with 100% &lt;em&gt;not free&lt;/em&gt; microcode, and I can sell it and it will work perfectly well on every operating system in creation with no special drivers, free-, open-, or proprietary.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So the software of this mouse, and perhaps many other similar murines, is not free. Further, the mouse is a piece of hardware, it has a design. That design is copyrighted, and the author may not have chosen to license that design under a free license. So the hardware design of the mouse is very likely &lt;em&gt;not free&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, I could also publish the design of a mouse under a free license, and publish the microcode under a free license, if a free-range mouse was what I wanted to make.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is no connection between the contents or design of the mouse and the ability of a FLOSSy operating system to communicate with it.&lt;/p&gt;&#xA;" OwnerUserId="554" LastActivityDate="2015-08-09T20:13:09.367" CommentCount="0" />
  <row Id="1537" PostTypeId="2" ParentId="1525" CreationDate="2015-08-09T20:41:14.063" Score="2" Body="&lt;p&gt;Trivially, a mouse can't be free software, because a mouse is not software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So what other questions could this be?&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Can a mouse's drivers be free and or open source software?&lt;/li&gt;&#xA;&lt;li&gt;Can a mouse's design be free/open?&lt;/li&gt;&#xA;&lt;li&gt;Can a mouse's firmware be free/open?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;To all questions, the answer is, obviously, yes, it can be. If there exist &quot;advanced&quot; mice with non-free firmware (the coding on the chips in the mouse), I don't know, but from a gut feeling* I assume it won't be all that many. The same goes for the design. I doubt many high-end manufacturers would go for an open design, as one of their main selling point often is their design.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As for the drivers, there usually exist free drivers all consumer peripherals.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;*warning: answer contains a gut feeling. There are hardware manufacturers that embraced open technology, but it's not much, and &quot;gaming&quot; mice, the kind that usually have macros, are not generally closesly affiliated with the open source or free software movements. &lt;/p&gt;&#xA;" OwnerUserId="97" LastEditorUserId="97" LastEditDate="2015-08-09T20:56:31.967" LastActivityDate="2015-08-09T20:56:31.967" CommentCount="0" />
  <row Id="1538" PostTypeId="7" CreationDate="2015-08-09T21:06:46.383" Score="0" Body="&lt;ul&gt;&#xA;    &lt;li&gt;real problems or questions that you’ve encountered&lt;/li&gt;&#xA;&lt;li&gt;the history and philosophies of the Free Software Foundation, Open Source Initiative and Creative Commons&lt;/li&gt;&#xA;&lt;li&gt;understanding, applying, and complying with Free &amp; Open licenses&lt;/li&gt;&#xA;&lt;li&gt;issues related to project management, such as collaboration, monetization, marketing, distribution, hosting, and community communication&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="-1" LastEditorUserId="69" LastEditDate="2015-08-11T00:01:19.000" LastActivityDate="2015-08-11T00:01:19.000" CommentCount="0" />
  <row Id="1539" PostTypeId="7" CreationDate="2015-08-09T21:08:53.783" Score="0" Body="&lt;ul&gt;&#xA;    &lt;li&gt;Questions that are primarily opinion-based&lt;/li&gt;&#xA;    &lt;li&gt;Questions with too many possible answers or that would require an extremely long answer&lt;/li&gt;&#xA;    &lt;li&gt;if you want to know how to use Free &amp; Open projects&lt;/li&gt;&#xA;    &lt;li&gt;if you would like recommendations for Free &amp; Open media&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="-1" LastEditorUserId="98" LastEditDate="2015-08-10T10:48:41.823" LastActivityDate="2015-08-10T10:48:41.823" CommentCount="0" />
  <row Id="1540" PostTypeId="2" ParentId="1525" CreationDate="2015-08-10T09:52:15.277" Score="3" Body="&lt;p&gt;You're thinking along the right lines but I think you're minifying the scope of your actual problem toward running a &quot;wholly free system&quot;:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;GPUs have proprietary firmwares (many required even for free drivers to work)&lt;/li&gt;&#xA;&lt;li&gt;CPUs ship with firmware &quot;microcode&quot; (which can be updated) which are often closed source.&lt;/li&gt;&#xA;&lt;li&gt;Common BIOSes are rubbish for being free (though there are free alternatives) and systems without BIOS at all.&lt;/li&gt;&#xA;&lt;li&gt;All those other chips inside your computer (audio, disk controllers, on-SSD controllers, USB, firewire, etc, etc, etc) all have firmware, all have source... Very few are open source though.&lt;/li&gt;&#xA;&lt;li&gt;Many displays are programmable and can be updated.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;But just on mice, while many features can operate on standard USB HID drivers (evdev et al), mice &lt;em&gt;can&lt;/em&gt; contain software to handle advanced features. &lt;strong&gt;Unless you can get the firmware source and upload your modifications, that's a nonfree mouse.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One important thing to note is that just because it includes driver software, doesn't &lt;em&gt;mean&lt;/em&gt; it's running a proprietary firmware. It might be listening to &quot;standard&quot; button combinations and just doing something in software on the OS. The bundled software might also be proprietary, but in a lot of cases, there are ways of handling extra keys in pure open source too.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So you need to find out whether your mouse has a firmware. I honestly don't know of any advanced mice without a firmware, so you might need to explicitly look for free mice, or ask Logitech for the source...&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But remember that it's not just your mouse you need to check if you want to be 100% free.&lt;/p&gt;&#xA;" OwnerUserId="1201" LastEditorUserId="1201" LastEditDate="2015-08-10T14:22:37.993" LastActivityDate="2015-08-10T14:22:37.993" CommentCount="4" />
  <row Id="1542" PostTypeId="1" AcceptedAnswerId="1543" CreationDate="2015-08-10T13:43:21.373" Score="6" ViewCount="98" Body="&lt;p&gt;I am a contributor to a very old project presently in violation of the GPL. Our project is a plugin for a closed-source program, but the GPL does not permit this kind of linking. The project should have been licensed under the LGPL instead, but the original authors were not aware of this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are only about 30 contributors to the project, but it's almost ten years old at this point; Many of these people have moved on and I'm not sure I can find them all.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;How should I proceed with relicensing the project if I can't contact everyone?&lt;/p&gt;&#xA;" OwnerUserId="2237" LastEditorUserId="69" LastEditDate="2015-08-10T13:46:33.027" LastActivityDate="2015-08-11T11:56:24.893" Title="Relicensing from GPL v2 to LGPL v2 - What if I can't contact all contributors?" Tags="&lt;gpl&gt;&lt;relicensing&gt;&lt;collaboration&gt;&lt;communication&gt;" AnswerCount="2" CommentCount="2" />
  <row Id="1543" PostTypeId="2" ParentId="1542" CreationDate="2015-08-10T14:32:55.110" Score="5" Body="&lt;p&gt;You are attempting to give additional rights (redistribution without source) for software than the GPL permits, using a license that isn't explicitly compatible with the terms of the GPL. &lt;strong&gt;You need the copyright owners' consent.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you can't get that, you have to &lt;strong&gt;replace their work&lt;/strong&gt;. This could be quite simple (if they all did whole blocks that could be replaced from fresh without needing to look at them, ie a clean-room implementation), but equally, it can mean awfully painful bisects that make the process more legally dubious.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That said, this is civil law and you only have to answer to these people. A best effort to contact them, followed by a best-effort to remove their code will be seen by most as a honourable attempt to do the right thing.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;On the larger issue of what you're doing, the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-faq.en.html#GPLPluginsInNF&quot;&gt;FSF isn't quite as adament you need to move to LGPL&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If the program uses fork and exec to invoke plug-ins [...] there are no special requirements.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;If the program dynamically links plug-ins, [...] that combination [...] would violate the GPL. &lt;strong&gt;However, you can resolve that legal problem by adding an exception to your plug-in's license, giving permission to link it with the non-free main program&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;It's still a licensing issue. You still need all the copyright owners on board. But you just have to customise your license slightly to allow this closed source application explicit linking permission outside of the GPL.&lt;/p&gt;&#xA;" OwnerUserId="1201" LastEditorUserId="1201" LastEditDate="2015-08-10T14:40:18.847" LastActivityDate="2015-08-10T14:40:18.847" CommentCount="4" />
  <row Id="1544" PostTypeId="1" AcceptedAnswerId="1545" CreationDate="2015-08-10T16:16:05.323" Score="4" ViewCount="282" Body="&lt;p&gt;I am a contributor to a very old project presently in violation of the GPL. Our project is a plugin for a closed-source program, but the GPL does not permit this kind of linking. The project should have been licensed under the LGPL instead, but the original authors were not aware of this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Relicensing is already covered in another question, so we will ignore that here.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are only about 30 contributors to the project, but it's almost ten years old at this point. Many have moved on to other projects.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The contributors clearly intended for their work to be used with the closed-source program in question. They did not know the GPL forbade it. It is exceedingly unlikely that one of them will take legal action against the project.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If the project continues despite the GPL violation, what is our legal exposure to third parties? Can the FSF or any other group sue us?&lt;/p&gt;&#xA;" OwnerUserId="2237" LastEditorUserId="69" LastEditDate="2015-08-10T16:17:41.867" LastActivityDate="2015-08-10T19:09:37.890" Title="GPL Violation - What is our legal exposure to third parties (not our contributors)?" Tags="&lt;gpl&gt;&lt;law&gt;&lt;collaboration&gt;&lt;enforcement&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="1545" PostTypeId="2" ParentId="1544" CreationDate="2015-08-10T19:09:37.890" Score="8" Body="&lt;p&gt;If the project does not create and distribute a combined work of the plugin and the closed source host, then I see no realistic liability. This is because you aren't violating the GPL. A violation occurs when someone combines the GPL library with the closed source component and then distributes the result. You haven't done that, so &lt;em&gt;you&lt;/em&gt; haven't violated anything. Someone who uses your plugin in the privacy of their home or business, but doesn't redistribute it, doesn't violate the GPL, either.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Only the copyright holders of your project have a course of action if someone does combine the works and distribute them. So if all of you agree that it was your intent to permit this use, then none of you will bother users. If none of you bother users, including anyone who creates and distributes a combination, there is no one to sue anyone else.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A very faint liability might come into play if, in fact, some copyright holder did sue some third party for violating the license, and the third-party tried to come up with a counter-suite that you all somehow led him or her astray. I don't believe it; at worse, the fact that you all published this component looks to me like estoppel against any attempt by any of you to enforce the license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Remember, the GPL is a license that you, the copyright holder, grant. You own the rights. You are the only people who can bother anyone else for violating the terms of the license. If you choose (like Linux) to take a different view of plugins and linkage, you can do that.&lt;/p&gt;&#xA;" OwnerUserId="554" LastActivityDate="2015-08-10T19:09:37.890" CommentCount="2" />
  <row Id="1546" PostTypeId="1" AcceptedAnswerId="1547" CreationDate="2015-08-10T19:55:24.003" Score="7" ViewCount="62" Body="&lt;p&gt;I am a contributor to a very old project presently licensed under the GPL. Our project is a plugin for a closed-source program, but the GPL does not permit this kind of linking. The GPL FAQ states:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&quot;If the program dynamically links plug-ins, and they make function calls to each other and share data structures, we believe they form a single program, which must be treated as an extension of both the main program and the plug-ins. This means that combination of the GPL-covered plug-in with the non-free main program would violate the GPL. However, you can resolve that legal problem by adding an exception to your plug-in's license, giving permission to link it with the non-free main program.&quot;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;This was interpreted to mean that WE were in violation of the GPL on our own code because the GPL does not permit dynamic linking between Free and non-Free code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;bmargulies pointed out we that aren't violating the GPL, since a violation occurs when someone combines the GPL library with the closed source component and then distributes the result. Therefore it's OK for us to consider linking to the closed-source host as OK and not pursue it, and no third party can feasibly take legal action against us for this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is great, but what if our project included in its source code GPLed source code from someone else's project? Can that project's owners decide that our interpretation of linking doesn't fly with them and take action against us?&lt;/p&gt;&#xA;" OwnerUserId="2237" LastEditorUserId="69" LastEditDate="2015-08-10T20:03:25.027" LastActivityDate="2015-08-10T22:12:23.067" Title="GPL interpretation - What is our legal exposure if we include another project's code?" Tags="&lt;gpl&gt;&lt;law&gt;&lt;collaboration&gt;&lt;enforcement&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="1547" PostTypeId="2" ParentId="1546" CreationDate="2015-08-10T21:12:35.113" Score="3" Body="&lt;p&gt;So, now we must note that the copyright holders of the included code are in a position to complain if someone distributes in violation of the GPL. However, by the same logic as my previous answer, I do not see how you and your fellows have distributed in violation. The hypothetical violators would be others who distributed the combination of your plugin (and thus these others' work) with the closed source program.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The authors of the included code would certainly have a legal course of action against someone who did that. On the other hand, since the host program is closed-source, who has rights to create a combined work that includes it and your plugin? I would guess that the owner of the closed-source program does not grant that right to anyone. So, if the owner doesn't bundle you in a release, who is left to violate? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;It would certainly be &lt;em&gt;polite&lt;/em&gt; for you to post a notice explaining this situation and warning potential distributors that there is no way to distribute the combination of your plugin and the host program without legal liability. However, again, it takes a long stretch of the imagination to see how any of this leads to liability for you and your fellow creators. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Of course, I'm not a lawyer, and I'm especially not your lawyer. But I have been helping to run a software company that produces and consumes FLOSS software for quite a while, and it's part of my job to know the basic working parameters of this stuff.&lt;/p&gt;&#xA;" OwnerUserId="554" LastEditorUserId="554" LastEditDate="2015-08-10T22:12:23.067" LastActivityDate="2015-08-10T22:12:23.067" CommentCount="4" />
  <row Id="1548" PostTypeId="2" ParentId="533" CreationDate="2015-08-10T22:10:37.513" Score="3" Body="&lt;p&gt;Sometimes it is made clear in contributor agreements.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When there is no contributor agreement, the author(s) of each part of the code own the intellectual property for the part they wrote. &lt;/p&gt;&#xA;" OwnerUserId="462" LastActivityDate="2015-08-10T22:10:37.513" CommentCount="0" />
  <row Id="1549" PostTypeId="1" CreationDate="2015-08-11T08:06:41.727" Score="7" ViewCount="580" Body="&lt;p&gt;I am a library developer. I want to open source it soon, but I'm not sure what license will work best for me.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;My main concerns are:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;I want to provide a commercial license for somebody who is willing to pay on top of open source one (LGPL allows it, right?)&lt;/li&gt;&#xA;&lt;li&gt;I want to allow the usage in commercial projects (not sure what to do here, because LGPL has dynamic linking exception, but iOS is one of the platforms I'm targeting and on iOS static linking is still most popular option)&lt;/li&gt;&#xA;&lt;li&gt;I want to be capable to merge any derivatives back without any permission from somebody who made modifications without preserving any of the credits of modifier. As well I want to have my copyrights on all the code, does not matter where from it comes, merged back from a fork or written in-house. Basically I need a license, that states that modifier waives any claims or demands to the modifications he made.&lt;/li&gt;&#xA;&lt;li&gt;I want to forbid any third party to re-license the code and/or change copyright and credits.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;I'm not sure if this is trivial or not, but I will greatly appreciate any suggestions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The problem is that I want to monetise the software. I want to make it available free for open-source community, but I don't want any claims from any contributor (this does not mean that there will be no contributor list, though). I just want to preserve the right to merge anything back without any permission, so I want a license, that explicitly states, that modifier waives any claims and understands, that even his credit might not be preserved.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Some interesting stuff discovered during my research. This thing I'm looking for does seem to be possible. Here is an example of FSF recognised license: &lt;a href=&quot;http://directory.fsf.org/wiki/License:QPLv1.0&quot; rel=&quot;nofollow&quot;&gt;http://directory.fsf.org/wiki/License:QPLv1.0&lt;/a&gt; Take a look at section 3b.&lt;/p&gt;&#xA;" OwnerUserId="2254" LastEditorUserId="98" LastEditDate="2015-08-11T16:29:28.117" LastActivityDate="2015-08-11T16:44:54.177" Title="Appropriate licence for later merging back" Tags="&lt;copyleft&gt;&lt;derivative-works&gt;&lt;license-recommendation&gt;&lt;lgpl&gt;" AnswerCount="5" CommentCount="11" FavoriteCount="3" />
  <row Id="1550" PostTypeId="2" ParentId="1549" CreationDate="2015-08-11T09:23:01.830" Score="9" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;I want to provide a commercial license for somebody who is willing to pay on top of open source one (LGPL allows it, right?)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;As a copyright holder you always have the option to dual license your works under any licenses you choose, including proprietary/commercial licenses. If you want to do so with others' contributions then you would be wise to get them to sign a Contributor License Agreement first.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;I want to allow the usage in commercial projects (not sure what to do here, because LGPL has dynamic linking exception, but iOS is one of the platforms I'm targeting and on iOS static linking is still most popular option)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I believe LGPL should allow this. You can also specify additional exceptions just to make sure that it will be okay.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;I want to be capable to merge any derivatives back without any permission from somebody who made modifications &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I don't believe any FLOSS license requires you to publish all changes (i.e., forbidding private derivatives), if that's what you mean. If you're talking about published derivatives, then any copyleft license would require those derivatives to be published under a license that would allow you to merge them back in. But note that they retain copyright for their own changes.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;without preserving any of the credits of modifier.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I don't think you'll find any FLOSS license which allows this - it is against the general principles of the movement, and possibly &lt;a href=&quot;https://en.wikipedia.org/wiki/Authors%27_rights&quot;&gt;against the law&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;As well I want to have my copyrights on all the code, does not matter where from it comes, merged back from a fork or written in-house. Basically I need a license, that states that modifier waives any claims or demands to the modifications he made.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;If you want a FLOSS license this will not be possible - either you don't allow any derivative works, or you allow derivative works by allowing forkers to copyright their own changes. But again, you can use a CLA to get anyone contributing their code directly to you to transfer their copyright to you (but this may deter contributions.)&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;I want to forbid any third party to re-license the code and/or change copyright and credits.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Most copyleft licenses do not allow you to re-license the code, except perhaps to a later version of the same. If you do not want that, you can usually specify so. No license will allow someone to change the copyright and credits.&lt;/p&gt;&#xA;" OwnerUserId="190" LastActivityDate="2015-08-11T09:23:01.830" CommentCount="13" />
  <row Id="1551" PostTypeId="2" ParentId="1549" CreationDate="2015-08-11T09:44:52.777" Score="6" Body="&lt;p&gt;The combination of conditions you set don't meet the Open Source Definition as set by the OSI.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;From the &lt;a href=&quot;http://opensource.org/osd-annotated&quot;&gt;Annotated Open Source Definition&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;ol start=&quot;3&quot;&gt;&#xA;  &lt;li&gt;Derived Works&#xA;  The license must allow modifications and derived works, and must allow them to be distributed under the same terms as the license of the original software.&#xA;  Rationale: The mere ability to read source isn't enough to support independent peer review and rapid evolutionary selection. For rapid evolution to happen, people need to be able to experiment with and redistribute modifications.&lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;You don't want to allow people to make derivatives of your work and hold copyright to it. That makes it fail the open source definition.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So what can you do?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Well, you could write up and find some non open source license, and call it open source because it meets your personal definition of open source, even if it's not a widely recognized definition. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, I think we can do better than that.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If, for now, we drop the requirement that all those creating derivative works signing over the copyright to their code to you, what can we do?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The rest of your requirements seem to be met with the &lt;a href=&quot;https://www.mozilla.org/MPL/2.0/&quot;&gt;Mozilla Public License&lt;/a&gt;. This license is a per-file license that allows for any kind of linking.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some have created, what are essentially the LGPL + static linking exception. This is the route taken by, for example, 0MQ. There are concerns with this approach though, as this creates a crayon license, and 0MQ is moving towards the MPL itself.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If we take the MPLv2, let's take a look at your conditions:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&quot;I want to provide a commercial license for somebody who is willing to pay on top of open source one&quot;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;If you own the copyright to everything you want to license commercially, then yes.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&quot;I want to allow the usage in commercial projects&quot;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;From your comment after it, it seems you want to allow linking against your library, and allow the entity that does this to distribute the combined work under a non-free license. This is allowed in the MPL.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I want to forbid any third party to re-license the code and/or change copyright and credits.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;This is the standard. Note that you do want to allow a &quot;third party&quot; (I'm sort of losing track of parties here. If you're the first party, then who is the second party? And who is the third?) to create works under a different license, owning the copyright themselves, if they merely link to your library.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So what can we do with your third point?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;An often taken route is to let contributors sign a CLA - (individual) contributors license agreement, CAA - Contributors Copyright Assignment. In a CLA, a contributor to your library agrees to grant you a license that allows you use and to re-license their work. In a CAA, they agree to assign the copyright to their patches to you.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note that both work by the agreement that you only allow patches from contributors who have signed the CLA or CAA. This doesn't restrict forks in any way.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This allow you to take contributions from the community offered to you under the CLA/CAA, and incorporate it in your non-open fork.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is the closest you can approach your requirements, and still be open source as it is commonly understood.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Harmonyagreements has &lt;a href=&quot;http://selector.harmonyagreements.org/&quot;&gt;a tool&lt;/a&gt; that can help you set up a CLA/CAA&lt;/p&gt;&#xA;" OwnerUserId="97" LastEditorUserId="97" LastEditDate="2015-08-11T09:56:34.783" LastActivityDate="2015-08-11T09:56:34.783" CommentCount="6" />
  <row Id="1552" PostTypeId="2" ParentId="1542" CreationDate="2015-08-11T11:56:24.893" Score="1" Body="&lt;p&gt;Step 1: document the situation. Put up a notice that explains the problem; but be clear, not alarmist. As discussed on other questions, there's no problem for &lt;em&gt;users&lt;/em&gt; of your plugin, only for people who would want to distribute a combined work of your plugin and the host. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Step 2: Survey the contributions of the unreachable individuals. Perhaps they are very small? This might either make them easily replaceable, or not big enough to copyright.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Step 3: Survey the mailing list archives. If there's a clear intention to allow this usage, then you might conclude that it's safe to change the license (by adding a permissive term or by switching to LGPL) on the grounds that you have evidence that all the copyright holders intended this in the first place.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;HOWEVER: You've noted in other questions that you incorporated code from other GPL sources. You can't relicense that without permission from its copyright holders, so there's really no point to changing your license unless you can replace &lt;em&gt;that&lt;/em&gt; code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To repeat what I have written elsewhere: You and your fellow contributors have not violated anything. You have, however, created an opportunity for a very small group of people to violate the license of the GPL code you incorporated. If there is no realistic situation in which anyone would want to distribute a combined work, then this is more humorous than disastrous. Your notice would consist, more or less, of:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Hey, we used the GPL and we forgot to add a dynamic linking exemption, and we &#xA;  incorporated some other GPL code that has no dynamic linking exception.&#xA;  If you are an end user, this makes &lt;em&gt;no difference&lt;/em&gt; to you. The GPL&#xA;  gives you all the rights you need. Our mistake only matters if you&#xA;  want to create a derived work by combining our plugin with &amp;lt;INSERT&#xA;  APPLICATION NAME HERE&amp;gt; and distribute that combined work. In that case, we're really&#xA;  sorry, but we can't guarantee that some copyright holder won't call&#xA;  you out for a violation, so we have to tell you that this would be a&#xA;  very bad idea.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="554" LastActivityDate="2015-08-11T11:56:24.893" CommentCount="0" />
  <row Id="1553" PostTypeId="2" ParentId="1549" CreationDate="2015-08-11T12:19:30.510" Score="2" Body="&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/OpenOffice.org&quot; rel=&quot;nofollow&quot;&gt;Open Office&lt;/a&gt; under Sun used this model. The code was LGPL, but all contributors had to sign over their copyright to Sun, who sold a version of OOo as the non-free &lt;a href=&quot;https://en.wikipedia.org/wiki/StarOffice&quot; rel=&quot;nofollow&quot;&gt;Star Office&lt;/a&gt;. This was part of the impetus to create &lt;a href=&quot;https://en.wikipedia.org/wiki/Go-oo&quot; rel=&quot;nofollow&quot;&gt;Go-Open Office&lt;/a&gt;, and later &lt;a href=&quot;https://en.wikipedia.org/wiki/LibreOffice&quot; rel=&quot;nofollow&quot;&gt;LibreOffice&lt;/a&gt;. you can find more information &lt;a href=&quot;http://slashdot.org/story/07/10/03/1212234/sun-refuses-lgpl-for-openoffice-novell-forks&quot; rel=&quot;nofollow&quot;&gt;on slashdot&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You could implement this model with by requiring any contributor to sign or otherwise express agreement with a document similar to the following before accepting a Git merge request:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;I hereby relinquish all copyright claims against ... code, patch, files, ... to Daniel Tabasco and any agents of Daniel Tabasco ... I understand that the code may be used for commercial purposes ...&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;If the OP wants to prevent forks of his project, he may want to consider the &lt;a href=&quot;https://en.wikipedia.org/wiki/Mozilla_Public_License&quot; rel=&quot;nofollow&quot;&gt;Mozilla Public License&lt;/a&gt;. I'm not sure of the details, but somehow &lt;a href=&quot;https://www.postbox-inc.com/&quot; rel=&quot;nofollow&quot;&gt;PostBox&lt;/a&gt; made a Thunderbird derivative which does not provide the source code for their client. I've contacted a PostBox rep and he insists that the application is in compliance with the Mozilla Public License.&lt;/p&gt;&#xA;" OwnerUserId="946" LastEditorUserId="946" LastEditDate="2015-08-11T13:04:40.230" LastActivityDate="2015-08-11T13:04:40.230" CommentCount="4" />
  <row Id="1554" PostTypeId="2" ParentId="1549" CreationDate="2015-08-11T13:06:27.077" Score="5" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;I want to provide a commercial license for somebody who is willing to pay on top of open source one (LGPL allows it, right?)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;None&lt;/em&gt; of the FLOSS licenses are &lt;em&gt;exclusive&lt;/em&gt; licenses.  This means that as long as you're the sole owner of the project's copyright, you're free to dual-license it under some FLOSS license (including LGPL), and a commercial license.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;I want to allow the usage in commercial projects (not sure what to do here, because LGPL has dynamic linking exception, but iOS is one of the platforms I'm targeting and on iOS static linking is still most popular option)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;LGPL has a very broad &lt;em&gt;linking exception&lt;/em&gt; (it covers all types of linking) that allows linking of code under LGPL to a commercial project &lt;em&gt;without&lt;/em&gt; buying a commercial license.  Your dual-licensing business model will not work with LGPL.  Nor will the dual-licensing work with &lt;em&gt;any&lt;/em&gt; permissive license.  Dual-licensing &lt;em&gt;only&lt;/em&gt; works with &lt;em&gt;strong copyleft&lt;/em&gt;, such the GNU GPL (because some commercial clients may be willing to pay for a commercial license to escape the copyleft obligations).&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;I want to be capable to merge any derivatives back without any permission from somebody who made modifications without preserving any of the credits of modifier. As well I want to have my copyrights on all the code, does not matter where from it comes, merged back from a fork or written in-house.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;There is no way you can do this under &lt;em&gt;any&lt;/em&gt; real free software license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can &lt;em&gt;ask&lt;/em&gt; people to turn over their copyright to you by having them sign a legal document called a &lt;a href=&quot;https://en.wikipedia.org/wiki/Contributor_License_Agreement&quot; rel=&quot;nofollow&quot;&gt;Contributor License Agreement&lt;/a&gt; (CLA). But if they don't want to sign your CLA, they don't have to. &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Basically I need a license, that states that modifier waives any claims or demands to the modifications he made.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;There is no &lt;em&gt;license&lt;/em&gt; (free or not) that does this.  What you're looking for is a &lt;em&gt;contract of employment&lt;/em&gt;.  People sometimes sign these, but not without a reasonable expectation of being paid.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;I want to forbid any third party to re-license the code&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;A copyleft license, such GNU GPL, don't allow sub-licensing, so that should be OK.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;and/or change copyright and credits.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;They can't remove &lt;em&gt;your&lt;/em&gt; copyright or credit (but if it is under a FLOSS license, they can use it and fork it).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, you can't stop anybody for copyrighting &lt;em&gt;their own&lt;/em&gt; improvements/modifications and then refuse to sign the copyright of those over to you.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And if you introduce a CLA that suggests they sign their copyright over to you, &lt;em&gt;expect&lt;/em&gt; that somebody takes your code and fork your project as a free/libre project that people can contribute to without signing any CLA.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Is it possible (legal?) to add CLA/CAA inside the LICENSE of the project?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;It is a free country, so it is possible and even legal to destroy a good license with nonsense (this is called a &quot;&lt;a href=&quot;http://opensource.stackexchange.com/questions/1445/how-can-a-crayon-license-be-a-problem&quot;&gt;crayon license&lt;/a&gt;&quot;), but it won't do what you want.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;How enforceable is it in case of a breach?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Not at all.  Simply, by doing this, you've created a crayon license with &lt;em&gt;conflicting&lt;/em&gt; terms.  Such things are generally not enforceable through courts at all.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you want to enforce such strange terms, you need to have the other party &lt;em&gt;sign&lt;/em&gt; something that is &lt;em&gt;separate&lt;/em&gt; from the software license (e.g. a CLA, a CAA, or a contract of employment) - not just &quot;violate&quot; some arbitrary restriction that you want to impose on others.  &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The main idea is to allow all the forks and everything, but make every one who modifies the software to &quot;sign&quot; the CLA/CAA, not just the ones who want to merge back. So, if I would merge (find merged) LGPL and CLA/CAA into one combined license, would it be legal&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;It would be legal in the sense that there is no law against creating a license that does not make sense.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;and enforceable in a case of breach?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Not enforceable.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The problem is that I want to monetise the software.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;No, the problem is that you want to monitize &lt;em&gt;somebody else's&lt;/em&gt; software.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is absolutely no problem with you selling &lt;em&gt;your own software&lt;/em&gt; under a commercial license.  The problem starts when you want to take the work of &lt;em&gt;others&lt;/em&gt; and re-license it under a &lt;em&gt;different&lt;/em&gt; license than the license they offer their work under.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;According to copyright law, you cannot do this without permission from the person who created the work.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;I want to make it available free for open-source community, but I don't want any claims from any contributor (this does not mean that there will be no contributor list, though). I just want to preserve the right to merge anything back without any permission, so I want a license, that explicitly states, that modifier waives any claims and understands, that even his credit might not be preserved.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;The license you ask for does not make sense.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For obvious reasons, &lt;em&gt;no&lt;/em&gt; such license exists.  And even if you did create one such a &quot;license&quot; yourself, it would not be enforceable &lt;em&gt;unless&lt;/em&gt; you can get people to sign a physical paper copy of it and give that signed copy to you.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-11T14:02:57.250" LastActivityDate="2015-08-11T14:02:57.250" CommentCount="3" />
  <row Id="1555" PostTypeId="2" ParentId="1549" CreationDate="2015-08-11T16:44:54.177" Score="4" Body="&lt;p&gt;This answer is an experiment; you and others may not like it, but we'll see.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You write that you wish to make money with code you plan to publish with a (more or less) open source license. You might want to carefully consider your goals here.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The FSF did not write the GPL to help you do this. In the FSF's picture of the world, all software (at least) would be free (in their sense), and so no one would ever need to pay for a commercial license to circumvent the GPL. You, I, and everyone else would be paid for our labor as consultants, developers, teachers -- but not for licenses for our IP. Many people have attempted to arbitrage industry distaste for the GPL by offering a GPL + commercial license. However, unless your library is a true killer application, you are not likely to make a living this way. The first question people will ask themselves is, 'Can I find a non-virally-licensed alternative?' The second question is, 'Can I build it myself for about the same cost?' The third question is, 'Do I want to depend on this person actually having clear rights to sell me a license at all?' &lt;/p&gt;&#xA;&#xA;&lt;p&gt;And, of course, if they are building an in-house application and not redistributing, they can do that under the GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you make your own crayon license, you will cast the third question into high relief, and the people with the most money to spend will become chary of doing business with you. The same applies to the less popular non-crayon licenses. It's the business equivalent of a 'code smell.'&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, to return to the original goal: you wish to monetize your labor. What are your choices? (1) no FLOSS or free-as-in-beer license at all. You do sales and marketing like all the rest of us working stiffs. If you've built a better mousetrap, the mice will come. (2) You accept the framework of the free software movement entirely, and look to make money as a consultant and feature developer of your own code. (3) You do the usual dual-license thing, and accept that others are free to make derived works and do other things that you don't like. If your version is superior, people will pay you for it. If someone else makes it into a better mousetrap, well, they will take market share.&lt;/p&gt;&#xA;" OwnerUserId="554" LastActivityDate="2015-08-11T16:44:54.177" CommentCount="1" />
  <row Id="1556" PostTypeId="1" CreationDate="2015-08-12T08:32:24.840" Score="26" ViewCount="2851" Body="&lt;p&gt;Time and again, it is noted how frustrating it seems to contributors when their contributions are rejected (e.g. &lt;a href=&quot;https://news.ycombinator.com/item?id=2510964&quot;&gt;here&lt;/a&gt;, &lt;a href=&quot;http://www.learn-cocos2d.com/2013/08/contributing-open-source-projects/&quot;&gt;here&lt;/a&gt;, or &lt;a href=&quot;http://denise.dreamwidth.org/23600.html?thread=471856&quot;&gt;here&lt;/a&gt;). That is why I am somewhat undecided about how to handle a situation where someone has provided a rather not so helpful patch to one of my projects (let's call it &lt;em&gt;X&lt;/em&gt; for now) without burning any bridges.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The issue I am seeing is composed as follows:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I am not talking about a large, well-known project, but about one of the zillions of largely unnoticed projects, which has accumulated a few hundred downloads in the course of several years and never before received a contribution from someone else.&lt;/li&gt;&#xA;&lt;li&gt;The patch in question is not &quot;wrong&quot; per se, I simply see it as unnecessary. So far, the build process invokes a tool &lt;em&gt;A&lt;/em&gt; (one of the wide-spread tools for its task for the technology in question) for the project, and hence some config files come in the format compatible with tool &lt;em&gt;A&lt;/em&gt;&lt;sup&gt;1&lt;/sup&gt;. The patcher decided to replace these config files with config files compatible with a different tool &lt;em&gt;B&lt;/em&gt;, which is equally wide-spread in the community (but which I do not use).&lt;/li&gt;&#xA;&lt;li&gt;With no previous contributions from the outside, I fear rejecting this contribution will convey the impression to the contributor that project &lt;em&gt;X&lt;/em&gt; is among those pseudo-open projects that reject all patches with some kind of a better-than-thou attitude. While the concrete effect on my project(s) would be negligible (and I am aware it is impossible to always acommodate everyone in life, so alienating the contributor in question may be unavoidable), I would hate if the one lasting effect to the realm of open source software caused by my projects is that I have provided yet another example of projects that do not accept any input from the outside.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Hence, my question is: &lt;strong&gt;How can unnecessary (even though not explicitly incorrect) patches be rejected in a diplomatic way, especially by small projects with little to no other contribution activity?&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;EDIT: &lt;sup&gt;1&lt;/sup&gt;As there seems to be some kind of confusion about why tool-specific configuration files can be necessary, I am going to add a short explanation:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;With various modern programming languages, the source code of a program is not merely a bunch of uniform source code files, but a heterogenous collection of files that need to be treated in different ways. Moreover, unlike it was the case with languages like C, these files are not necessarily integrated into one another by a preprocessor; rather than that, project files define what files to integrate into which compiled artifact. These project files are not necessarily a part of the language standard; instead, there are various tools that consume such project files, with different expectations to the exact format and contents project files.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In my open source projects, I generally follow the philosophy that whoever pulls the contents from a VCS repository should immediately be able to build the same artifact that I can build myself, and deploy it the same way. The more automated this works, the better. &lt;em&gt;(The &quot;immediately&quot; comes with the sole restriction that sometimes, access credentials have to be configured, and a few tools expected by the build/deployment process may need to be placed on the search path. To reduce the obstacles to this as far as possible, I choose these tools based on how wide-spread and freely available they are.)&lt;/em&gt; Hence, I need to supply the project files along with the plain sources, for otherwise, a considerable amount of work would be required to first assemble the source files in the expected way before any artifacts can be compiled.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The practice to integrate such tool-specific files in the VCS when they are essential to building etc. seems to be common practice, as implied by &lt;a href=&quot;http://stackoverflow.com/questions/347142/project-files-in-repository&quot;&gt;another question&lt;/a&gt; (thanks to &lt;a href=&quot;http://opensource.stackexchange.com/users/97/martijn&quot;&gt;Martijn&lt;/a&gt; for digging up that question).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;EDIT2: To those confused by the discussions - while the discussions have become a bit technical, this question is still entirely focused on the communication between two humans, project leader and contributor. (If there were an &lt;em&gt;interpersonal-issues&lt;/em&gt; tag in this Stack Exchange, I would have used it.)&lt;/p&gt;&#xA;" OwnerUserId="765" LastEditorUserId="765" LastEditDate="2015-08-12T13:59:52.090" LastActivityDate="2015-08-13T14:10:15.657" Title="How to react to unhelpful contributions to otherwise unnoticed projects" Tags="&lt;collaboration&gt;&lt;project-management&gt;" AnswerCount="6" CommentCount="12" FavoriteCount="0" />
  <row Id="1557" PostTypeId="1" AcceptedAnswerId="1560" CreationDate="2015-08-12T09:52:09.867" Score="4" ViewCount="57" Body="&lt;p&gt;In trying to deal with a codebase that was originally proprietary and then open sourced, new contributors are coming along.  Each file has names on it (though usually the main author's).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;At this point, the codebase is drifting considerably.  Maintaining a list of names in each file seems to clutter it, and introduces an unnecessary awkwardness of &quot;when a change is significant enough to be on the list&quot;.  There's also an issue of accuracy, because the name is generally not the person to try and contact about issues.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I was thinking that it would be best to just strike the names entirely, rely on the git blame log, and switch to a CONTRIBUTORS file.  &lt;em&gt;(This is along with a general push to take stuff repeated in each file and move it out to coding guidelines documents, etc.)&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This project is on GitHub and is:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;mostly C code&lt;/li&gt;&#xA;&lt;li&gt;has a &lt;code&gt;README.md&lt;/code&gt; as its entry point for describing the project (80-column limited)&lt;/li&gt;&#xA;&lt;li&gt;has a &lt;code&gt;LICENSE&lt;/code&gt; in text file format (Apache2)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;So what sort of model might one use for a contributors file?  An all-caps CONTRIBUTORS seems like a long name.  Wondering what people call it and what would go in it.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;It hit me right after asking that CREDITS.md would be a good short name &lt;em&gt;(somewhat obvious, and I've even used it in the past I believe)&lt;/em&gt;.  But I wasn't acknowledging individual contributors to the code when I did this before, I was acknowledging the sources drawn from (libraries, tools, etc.) to build it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So it still strikes me that these might be different files.  But maybe they could both go in one?  Then CONTRIBUTORS would be a section heading in the CREDITS.md file.&lt;/p&gt;&#xA;" OwnerUserId="2268" LastEditorUserId="2268" LastEditDate="2015-08-12T10:14:00.737" LastActivityDate="2015-08-12T14:03:24.540" Title="Standard for &quot;CONTRIBUTORS&quot;-style file (format, name, etc?)" Tags="&lt;contributor&gt;&lt;documentation&gt;" AnswerCount="2" CommentCount="5" FavoriteCount="0" />
  <row Id="1558" PostTypeId="2" ParentId="1556" CreationDate="2015-08-12T10:08:03.743" Score="10" Body="&lt;p&gt;Some guidelines that may be of use:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;Always thank the submitter for their patch (unless you &lt;em&gt;really&lt;/em&gt; don't want them to submit any patches anymore, which could be possible)&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Establish guidelines for patches, and make sure contributors can easily find them. If you don't want IDE config changes, put it in your &lt;code&gt;contributing.md&lt;/code&gt; (or equivalent).&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Let submitters know what is wrong with the patch, and point to the guidelines. If it can be fixed, it leaves the submitter open to fixing it (tell them that it would be appreciated!) If it's a config only change, reject it. You could open a ticket in your tracker with the issue of how to deal with different IDE configs, or how to share them. A main repo might not be the best thing, but, if the config is really complicated, separate config repos could be useful. Or you could distribute static config files (that are not part of the repo).&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;If it's all the same to you, you could consider &lt;em&gt;accepting&lt;/em&gt; the patch, even if you don't really like it. If there is truely no harm (there might be, and there might be hidden costs and maintenance problems), why not accept it, even if you don't really like it?&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="97" LastActivityDate="2015-08-12T10:08:03.743" CommentCount="2" />
  <row Id="1559" PostTypeId="2" ParentId="1556" CreationDate="2015-08-12T10:10:43.443" Score="11" Body="&lt;p&gt;Reject it with a message.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Don't&lt;/strong&gt; accept it; accepting it sends the signal that this is a good contribution and you want more of them. If that's not what you want, don't accept it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What you should do is reject it with a note explaining why, for example:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Thanks for your contribution. Your patch was rejected because it simply replaced config files. Since I use config files of the original format, it would have made extra work for me, which isn't ideal as I'm sure you understand.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Be nice to them about it and they'll understand. Any reasonable person gets the fact that you don't &lt;em&gt;want&lt;/em&gt; extra work if it's not necessary.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As a side note, it's a good idea to exclude IDE config files from your repository. If you're using Git as a version control system, you can use .gitignore to do this.&lt;/p&gt;&#xA;" OwnerUserId="98" LastActivityDate="2015-08-12T10:10:43.443" CommentCount="5" />
  <row Id="1560" PostTypeId="2" ParentId="1557" CreationDate="2015-08-12T12:55:01.393" Score="5" Body="&lt;p&gt;Since you are using &lt;code&gt;.md&lt;/code&gt; file, I take it that people won't be looking at the raw stuff with all the stars and what not. People will look mostly at the way that the file is &quot;marked down&quot;. This means that you can use headers, and emphasis just like you note.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There isn't really a &quot;standard&quot; of doing this: Most projects create their own policies and standards to deal with varying situations in all aspects of project management, including contributions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you do create a &lt;code&gt;Credits.md&lt;/code&gt; file, it would make perfect sense to include your contributors, as well as your sources. The markdown format will allow easier readability, and hence organizations between sources and contributors.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Separate files don't tend to be an issue either: If you feel that one file becomes too large and thus virtually overshadows other critical sections of files, then it becomes easier also to split them up.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you have an avid list of contributors, and you are recording each contribution they make to various files, then it would make perfect sense to keep them in separate files, just like I mentioned above.&lt;/p&gt;&#xA;" OwnerUserId="69" LastActivityDate="2015-08-12T12:55:01.393" CommentCount="1" />
  <row Id="1561" PostTypeId="2" ParentId="1517" CreationDate="2015-08-12T13:35:24.750" Score="2" Body="&lt;p&gt;You generally cannot practically detect (most) license violations -since detecting such violations is labor intensive-, in particular if you are a small entity (or a single person); e.g. you won't be able to detect that some obscure Chinese hardware manufacturer is modifying your GPL code and putting it (without publishing the modification) in some firmware.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you did detect a license violation, you might have hard time to stop it (e.g. you might need to go to a trial and give a proof -or at least a legitimate &amp;amp; persuasive explanation- of that violation).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;On the other hand, a big corporation probably won't risk such violation. Some former disgruntled employee might denounce that, and the bad publicity would be very harmful.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some organizations are motivated and powerful enough to detect such violations (e.g. &lt;a href=&quot;http://gpl-violations.org/&quot; rel=&quot;nofollow&quot;&gt;http://gpl-violations.org/&lt;/a&gt; which is currently nonreachable, or perhaps the FSF). There is even some French startup (I forgot its name, the founders are from INRIA) which has developed some (proprietary) tools to scan executables -e.g. searching message strings &amp;amp; symbol names in them and matching them against a database- to find such violations (and license incompatibilities).&lt;/p&gt;&#xA;" OwnerUserId="910" LastEditorUserId="910" LastEditDate="2015-08-12T19:24:59.707" LastActivityDate="2015-08-12T19:24:59.707" CommentCount="3" />
  <row Id="1562" PostTypeId="2" ParentId="1557" CreationDate="2015-08-12T14:03:24.540" Score="4" Body="&lt;p&gt;There is no &lt;em&gt;standard&lt;/em&gt; way of listing contributors, but there are some &lt;em&gt;conventions&lt;/em&gt; and habits.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &lt;a href=&quot;http://gcc.gnu.org/&quot; rel=&quot;nofollow&quot;&gt;GCC&lt;/a&gt; compiler has a &lt;a href=&quot;https://gcc.gnu.org/viewcvs/gcc/trunk/MAINTAINERS&quot; rel=&quot;nofollow&quot;&gt;MAINTAINERS&lt;/a&gt; file which could inspire you&lt;/p&gt;&#xA;" OwnerUserId="910" LastActivityDate="2015-08-12T14:03:24.540" CommentCount="1" />
  <row Id="1563" PostTypeId="2" ParentId="1556" CreationDate="2015-08-12T15:37:10.823" Score="3" Body="&lt;p&gt;Reject the patch if it doesn't have a tangible benefit - does it help compilation on other platforms, etc? If not, if you have no reason to accept it, you have no reason to accept it. If it's some compilation helper that could work alongside your method then that adds value, otherwise it doesn't move things forward (and using it could hold you up, at least in the short term, as you have to learn how to use and manipulate their system now; and even if it could live beside your method, you have to keep their method in sync with yours...).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Thank the submitter, but explain that you don't feel that this patch benefits the project (with your explanation as given). If you have a features roadmap on your project, even if its just an informal wishlist, that would help. You could direct the submitter to that (or a bug tracker) and say that these are the areas that you are currently working on.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I wouldn't dwell on it too much, the submitter possibly has integrated your project into some system of their own and thought it would be nice to share their changes.&lt;/p&gt;&#xA;" OwnerUserId="2277" LastActivityDate="2015-08-12T15:37:10.823" CommentCount="0" />
  <row Id="1564" PostTypeId="2" ParentId="1556" CreationDate="2015-08-12T15:47:02.013" Score="15" Body="&lt;p&gt;Note that when you say it's &quot;unnecessary&quot;, you mean unnecessary for you. That's not the right way to collaborate: if you want others to contribute then they should have the same conveniences as you (build files in the repo for their preferred build tools).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I think you can politely reject the patch, with a remark that you would accept a patch that contained config files for B provided it did not remove the config files for A. If it's an oversight on the patcher's part then they'll understand the need to support A. If they are actively hoping to remove support for A from the project then they can forget about it, obviously you aren't going to accept a patch that prevents you working on the project in future.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is this the kind of thing where every tool added to the project needs to be added to the config file(s)? If so then you have a potential reason not to accept it (you can't test the file yourself), but also a basis for this contributor to remain active (to maintain the tool B config). You could in that case say that you will accept the file for as long as &quot;someone&quot; is responsible for testing it, and that you will remove it if at any point in the future it becomes apparent that nobody is doing this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I suppose ultimately it depends on your attitude to &quot;use at your own risk&quot; files in your repo. Ideally someone should actively maintain it, but if it's just a &quot;nice to have&quot;, you could take the attitude that you'll include it as a minor courtesy to users of B, but that if it doesn't work you unfortunately can't fix it and will have to rely on a patch from a user of B.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Finally, you (rightly IMO) don't want the discussion here to be about A vs B. But the discussion with your contributor potentially &lt;em&gt;might&lt;/em&gt; be about A vs B, in which case you should have that discussion. In particular supposing that B were a free tool and A is not, then this contributor might have a very good point about the direction your project(s) &lt;em&gt;should&lt;/em&gt; take in this respect, to avoid the error of being &quot;pseudo-open&quot; as you fear! Or supposing that A is free and B is not, then you would have a very good reason for privileging A as the &lt;em&gt;assumed&lt;/em&gt; build tool for the project, with B as a marginal case that you support only if it's &quot;easy&quot;.&lt;/p&gt;&#xA;" OwnerUserId="736" LastEditorUserId="736" LastEditDate="2015-08-13T10:04:58.540" LastActivityDate="2015-08-13T10:04:58.540" CommentCount="4" />
  <row Id="1565" PostTypeId="2" ParentId="1445" CreationDate="2015-08-12T16:19:14.793" Score="2" Body="&lt;p&gt;Developers inside big corporations (and perhaps even smaller ones) have lawyers and managers dictating them conditions for using (professionally) external free software. A &quot;crayon license&quot; is very likely to be forbidden in such contexts (probably such developers have a list of acceptable licenses).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So if you want your code to be widely used, I suggest to use an established &lt;a href=&quot;http://opensource.org/&quot; rel=&quot;nofollow&quot;&gt;OSI&lt;/a&gt; labelled open-source &lt;a href=&quot;http://opensource.org/licenses&quot; rel=&quot;nofollow&quot;&gt;license&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="910" LastActivityDate="2015-08-12T16:19:14.793" CommentCount="0" />
  <row Id="1566" PostTypeId="2" ParentId="1503" CreationDate="2015-08-12T21:27:41.400" Score="1" Body="&lt;p&gt;Talk to them.  Learn about their workflow, use cases, needs.  Ask them to write up what improvements would benefit them most.  Ask them to enter them as feature requests.  Ask them to compare various features requests and prioritize for you.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Engage everyone you can - ask for feedback, discuss the project, show enthusiasm, it's infectious.&lt;/p&gt;&#xA;" OwnerUserId="197" LastActivityDate="2015-08-12T21:27:41.400" CommentCount="0" />
  <row Id="1567" PostTypeId="1" AcceptedAnswerId="1569" CreationDate="2015-08-12T22:56:18.023" Score="3" ViewCount="77" Body="&lt;h2&gt;Background&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;I'm working on a talk, complete with an accompanying resource pack and website.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I've never released anything I believe to be of some actual significant monetary value to anyone else before so I'm a little bit stumped.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here's how I want to license all / any of the content.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Treat this content as if it's an unlimited, never-ending supply of free beer delivered as often as you like in a bottle with a label on. Provided all the &quot;free beer&quot; remains free you can do what you like with, drink it, give it to a friend, remix it, relabel it, share it with your friends. The only requirement is that you say where the &quot;free beer&quot; came from.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;If you however you wish to distribute the beer for money, as is or with modifications or as part of a larger pack of other similarly licensed free beers, via any distribution network that generates you revenue, you are required to purchase an additional license from the original provider of the beer.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h2&gt;Question&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Which creative commons license can I use?&lt;/p&gt;&#xA;" OwnerUserId="2283" LastEditorUserId="2283" LastEditDate="2015-08-13T13:55:54.190" LastActivityDate="2015-08-13T14:12:44.550" Title="Do anything with this free beer except generate revenue, for that you'll need to purchase an additional beer license?" Tags="&lt;license-recommendation&gt;&lt;multi-licensing&gt;" AnswerCount="2" CommentCount="8" />
  <row Id="1568" PostTypeId="2" ParentId="1567" CreationDate="2015-08-13T03:40:05.573" Score="5" Body="&lt;p&gt;&lt;strong&gt;Edit&lt;/strong&gt;: The &lt;em&gt;original&lt;/em&gt; question requiring that any sharing of the materials should be restricted to the materials &quot;&lt;strong&gt;exactly in its current form&lt;/strong&gt;&quot;.  This restriction was lifted and instead permission to &lt;strong&gt;remix&lt;/strong&gt; was added (to match another answer).  I've therefore edited my answer to match the &lt;em&gt;changed&lt;/em&gt; question.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The license model you're pursuing is sometimes referred to as &quot;Commercial Rights Reserved&quot;, where you offer your materials gratis for non-commercial uses, but do not allow commercial reuse.  Having this restriction in place means that someone who want to distribute the same materials for money, need to purchase a separate commercial license to be allowed to redistribute.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In addition, you want to allow non-commercial users &quot;remix&quot; (i.e. to create any derivatives of the materials), provided they share under the &lt;em&gt;same&lt;/em&gt; license as the original license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The Creative Commons &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/4.0/&quot; rel=&quot;nofollow&quot;&gt;Attribution-NonCommercial-ShareAlike&lt;/a&gt; (CC BY-NC-SA) is a non-free (as in &quot;freedom&quot;) public license that will allow gratis reuse (including remixing) of the materials, but reserve commercial rights (which then can be licensed separately by means of a commercial license in a dual-license arrangement).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As for the commercial license, these are usually custom made for each customer, and you need to hire a lawyer to help you with that.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is no details about what is included in the &quot;resources pack&quot; you plan to distribute along with your talk, but please note that CC BY-NC-SA is &lt;em&gt;not&lt;/em&gt; a software license and Creative Commons &lt;a href=&quot;https://wiki.creativecommons.org/wiki/Frequently_Asked_Questions#Can_I_apply_a_Creative_Commons_license_to_software.3F&quot; rel=&quot;nofollow&quot;&gt;recommends against using Creative Commons licenses for software&lt;/a&gt;.  However, CC BY-NC-ND is AFAIK the &lt;em&gt;only&lt;/em&gt; existing ready-to-use public license that imposes the &lt;em&gt;restrictions&lt;/em&gt; you are looking for and still allows some use of materials for non-paying users.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-13T14:12:44.550" LastActivityDate="2015-08-13T14:12:44.550" CommentCount="0" />
  <row Id="1569" PostTypeId="2" ParentId="1567" CreationDate="2015-08-13T12:29:04.953" Score="5" Body="&lt;p&gt;Let's take a look:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The nature of what you would like to license sounds like a creative one: It looks like you've got a talk, resource packages (which look like it is writing) and you've got a website. Already, we can narrow down to Creative Commons licenses.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Provided all the &quot;free beer&quot; remains exactly in its current form you can do what you like with, drink it, give it to a friend, share it with your friends.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Alright, if you would like people to be able to share their work, but not make anything out of it, then you need to remove the &quot;derivatives&quot; clause. In order to make sure that other people don't take the &quot;derivatives&quot; from your friends, and start selling them, you're going to need a ShareAlike clause, to make sure that any changes will have to follow the same rules as what you originally gave to others. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Therefore, your license of choice should be the &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/4.0/&quot; rel=&quot;nofollow&quot;&gt;Creative Commons Attribution-NonCommercial-ShareAlike&lt;/a&gt;. This one should do what you would like it to.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;As for your second license, the site is not really in a position to help you. We don't deal with proprietary licensing, and proprietary licensing doesn't fall within the scope of the site. You'd probably be better to just slap it &quot;All Rights Reserved&quot; and then let people contact you: thus negotiating things.&lt;/p&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2015-08-13T13:48:10.413" LastActivityDate="2015-08-13T13:48:10.413" CommentCount="6" />
  <row Id="1571" PostTypeId="2" ParentId="1556" CreationDate="2015-08-13T13:20:59.800" Score="4" Body="&lt;p&gt;Having been on both sides of this situation I'm going recommend that you accept it(with some caveats).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When a project is opensource the goal is to have community collaboration and ultimately a tool that will be useful to a large portion of the community. There are two, relatively, equally used tools in your community for accomplishing a similar goal. This contributor has submitted a pull request because they want to use your project but found they had to make modifications(to use a different toolset) to do so. Modifications that a good portion of the community also using that tool would have to do.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If this really is as simple as providing additional configs to do so - what do you lose by including these configs? If half the community(to pull some SWAG here) uses tool B and you provide direct examples using tool A... providing the configurations required for tool B just doubled your potential audience, increased the number of people who can use the tool out of the box and encouraged someone who obviously cares enough about your project to make contributions that expand the influence and reach of the project. It's win win win as far as being open source and the relationship of contributor and owner goes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The caveat, however, is that this should be done in a way that doesn't replace the configurations that are provided but extends them. Perhaps they should go somewhere else(an 'example' directory is pretty common in a lot of opensource projects). Perhaps this should be added as a sort of plugin to the project or a new option in the project(depending on the kinds and amounts of changes required.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I get that it's inconvenient for you if this changes because you have a very specific pipeline(which is a conversation fraught with opinions for an entirely different venue). I also get that you &lt;em&gt;want&lt;/em&gt; to decline this PR. But I think your two goals of &quot;Please contribute&quot; and &quot;Only contribute the things I want&quot; are at odds with one another. Further more I think &quot;Only contribute the things I want&quot; when combined with a small project owned by a single person is a sign that this project probably isn't all that opensource. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Yes, you can decline this PR. It's entirely within your rights. I don't think you can decline this PR with the state of your project as it is without discouraging this user from contributing in the future(and potentially other contributors) . &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The reasonable solution would be to decline to merge the PR as it is with suggestions on what would need to be done to support both the current configuration and the proposed additional configuration. The onus is then on the contributor to make those changes or abandon them. &lt;/p&gt;&#xA;" OwnerUserId="2291" LastActivityDate="2015-08-13T13:20:59.800" CommentCount="0" />
  <row Id="1572" PostTypeId="2" ParentId="1556" CreationDate="2015-08-13T14:10:15.657" Score="2" Body="&lt;h1&gt;Reject the change and add some contribution guidelines&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;You should explain that the contribution whilst not without its own technical merit isn't strictly a contribution that adds anything to the project goals. Explain that this is what forks are great for and encourage the contributor to maintain their own fork. Thank them for their time and add some contribution guidelines so next time (whenever that may be) you can refer the contributor to the guidelines.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If someone submits a contribution that doesn't match the guidelines, it's a less personal rejection as they haven't met some known criteria they were already aware of before investing their time in something.&lt;/p&gt;&#xA;" OwnerUserId="2283" LastActivityDate="2015-08-13T14:10:15.657" CommentCount="0" />
  <row Id="1573" PostTypeId="1" CreationDate="2015-08-13T15:18:51.617" Score="2" ViewCount="38" Body="&lt;p&gt;I'm developing an application using &lt;a href=&quot;http://itextpdf.com&quot; rel=&quot;nofollow&quot;&gt;iText&lt;/a&gt;. iText, unless a commercial license is purchased, forces you to abide by the AGPL. My plan is to sell commercial pre-compiled copies of my software at a small cost, while leaving the source code on github for those technically adept to compile it themselves. Is this legal? Also, am I permitted to distribute iText binaries?&lt;/p&gt;&#xA;" OwnerUserId="2293" LastEditorUserId="190" LastEditDate="2015-08-14T06:46:11.887" LastActivityDate="2015-08-14T12:00:03.533" Title="Commercial AGPL application" Tags="&lt;multi-licensing&gt;&lt;agpl-3.0&gt;" AnswerCount="2" CommentCount="2" />
  <row Id="1574" PostTypeId="1" AcceptedAnswerId="1581" CreationDate="2015-08-13T17:28:03.717" Score="7" ViewCount="52" Body="&lt;p&gt;I have built a program using several open source libraries. Most of them fall under MIT, BSD, Appache and  LGPL license. To my understanding some of them require the source code to be shared. I was hoping to build a website that would provide the source for download. My problem has to do with providing the correct version of the source. Is this mandatory?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example say I am using package X version 1.2 and my site allows users to download package X from the creators of X's git repo. Time passes and package X is upgraded to version 3.1. Thus my website is now pointing at the new version of the source even through my program was distributed using version 1.2. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Does this still meet the requirement to allow users to download the source? &lt;/p&gt;&#xA;" OwnerUserId="2305" LastEditorUserId="69" LastEditDate="2015-08-14T00:52:00.780" LastActivityDate="2015-08-15T12:12:07.377" Title="The download for source is a newer version than the version shipped" Tags="&lt;attribution&gt;&lt;version-control-systems&gt;" AnswerCount="3" CommentCount="2" />
  <row Id="1576" PostTypeId="1" CreationDate="2015-08-13T19:26:42.413" Score="0" ViewCount="24" Body="&lt;p&gt;Are there any open source alternatives to Microsoft's Active Directory Certificate Services? I have already migrated Active Directory from Windows Server to SAMBA4 but have yet to find a good alternative to AD CS, the main features I miss are AD integration and web enrollment (with AD integrated authentication)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Thank you for your time and help!&lt;/p&gt;&#xA;" OwnerUserId="2297" LastActivityDate="2015-08-13T19:26:42.413" Title="Open source alternative to Microsoft's AD CS" Tags="&lt;software&gt;" AnswerCount="0" CommentCount="2" ClosedDate="2015-08-13T19:41:13.293" />
  <row Id="1577" PostTypeId="2" ParentId="1574" CreationDate="2015-08-14T00:44:22.167" Score="3" Body="&lt;p&gt;What most people do is to make an archive &lt;em&gt;of the release&lt;/em&gt; available for download. Access to newer source is nice, but the terms of the licenses are best met by providing the actual source. As we say at Apache, 'Apache Releases are Source Release, the binaries are just for convenience.' So, the important thing, from a licensing standpoint, is the source.&lt;/p&gt;&#xA;" OwnerUserId="554" LastActivityDate="2015-08-14T00:44:22.167" CommentCount="0" />
  <row Id="1578" PostTypeId="2" ParentId="1573" CreationDate="2015-08-14T06:31:43.537" Score="2" Body="&lt;p&gt;If you are the sole developer or if you hold the copyright on all the code for other reasons, you can do with it as you please.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The model you mentioned is using a strong copy-left license and &lt;a href=&quot;https://www.fsf.org/blogs/rms/selling-exceptions&quot; rel=&quot;nofollow&quot;&gt;selling exceptions&lt;/a&gt; to it.  People who want to use your code in non-free software have to pay for this exception and they then get your code under a different license.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you accept contributions from others, this becomes more difficult because they may contribute under the AGPL.  In this case, you would also have to comply with the AGPL unless you ask for a copyright assigment or something similar.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In any case, you are free to not distribute binaries to the general public.  The requirement of the AGPL is to give the source code to people who have a binary copy (or use one over a network), but not the other way around.  The reason is that the source code enables you to exercise the &lt;a href=&quot;https://www.gnu.org/philosophy/free-sw.html&quot; rel=&quot;nofollow&quot;&gt;four freedoms&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Everyone else is free to use your source code and compile it, though.  They may even decide to then distribute those binaries and that would also be legal as long as the comply with the AGPL.&lt;/p&gt;&#xA;" OwnerUserId="1165" LastActivityDate="2015-08-14T06:31:43.537" CommentCount="0" />
  <row Id="1579" PostTypeId="1" CreationDate="2015-08-14T06:53:14.047" Score="5" ViewCount="55" Body="&lt;p&gt;With compiled languages, I understand when a work is considered derivative of another and thus, a license such as the GNU GPL covers the whole work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, with interpreted languages such as PHP or Python, I am not so sure.  If I find a library online that is covered under the GNU GPL v2 or later and I use this library in my PHP/Python/Ruby/... project, does the GNU GPL cover the whole work?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What about if I subclass classes from that library?  Are those subclasses covered by the GNU GPL?  Is the code that then uses those subclasses also covered by the GPL?&lt;/p&gt;&#xA;" OwnerUserId="1165" LastEditorUserId="69" LastEditDate="2015-08-15T21:24:48.347" LastActivityDate="2015-08-15T21:24:48.347" Title="When is my project a derivative work in an interpreted language?" Tags="&lt;gpl&gt;&lt;derivative-works&gt;&lt;linked-libraries&gt;" AnswerCount="2" CommentCount="0" />
  <row Id="1580" PostTypeId="2" ParentId="1579" CreationDate="2015-08-14T07:21:29.057" Score="3" Body="&lt;p&gt;A derivative work is a work &lt;em&gt;based on&lt;/em&gt; or &lt;em&gt;derived from&lt;/em&gt; one or more already existing works.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the arts, common derivative works include translations, musical arrangements, motion picture versions of literary material or plays, art reproductions, abridgments, and condensations of preexisting works.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In programming, as well as in the arts, a derivative work is a “new edition” of a preexisting work in which the editorial revisions, improvements, elaborations, or other modifications that is present in &lt;em&gt;the whole work&lt;/em&gt; (i.e. the end result of combining all the different parts together to create a public facing work).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Given the above definition, it should not make any difference if the programming is compiled or interpreted.    If you find a library online that is covered under the GNU GPL and you use that library in your PHP/Python/Ruby/... project in such a way that a (non trivial) part of the  &lt;em&gt;functionality&lt;/em&gt; your project depends on said library, then the project is a derived work of that library, and the whole work must be licensed under the GNU GPL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The idea that the &lt;em&gt;software architecture&lt;/em&gt; (dynamic vs. static linking, late binding (&quot;plugin&quot;) vs. compiled, subclassing, etc.) are analytically unhelpful and misleading in answering the derivative work question.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The following quote from Eben Moglen and Mishi Choudhary: &lt;a href=&quot;http://www.softwarefreedom.org/resources/2014/SFLC-Guide_to_GPL_Compliance_2d_ed.html&quot; rel=&quot;nofollow&quot;&gt;Software Freedom Law Center Guide to GPL Compliance 2nd Edition&lt;/a&gt; addresses this concern:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The GPL licenses, then, are explicit about limiting the scope of copyleft to the scope of copyright. They do not, however, as is sometimes suggested, do so in a way that distinguishes “dynamic” from “static” linking of program code in “early-binding” programming languages. It is occasionally suggested that a subroutine “dynamically” linked to GPL’d code is, by virtue of the linking alone, inherently outside the scope of copyleft on the main work. This is a misunderstanding. When two software components are joined together to make one work (whether a main and some library subroutines, two objects with their respective methods, or a program and a “plugin”) the combination infringes the copyright on the components if the combination required copyright permission from the component copyright holders, and such permission was either not available or was available on terms that were not observed.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;So to answer the derivative work question, we need to examine whether combining two works together would infringe copyright (&lt;em&gt;unless&lt;/em&gt; permission to create the combined work was granted by the GPL).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The answer to this question cannot be found by examining the software architecture of the composite work.  Instead, we need to look at the actual components, and to what degree one components &lt;em&gt;depends&lt;/em&gt; on the other to create a functional, whole work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The question asks specifically about class hierarchies: If a subclass builds on a very generic class (e.g. Java's top level &quot;Object class) and that subclass adds substantial functionality to the work that is not present in the generic class, it is &lt;em&gt;unlikely&lt;/em&gt; that the subclass will infringe the copyright of the generic class, because such a generic class is not copyrightable.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In other cases, a class may be considered copyrightable, but the courts may decide that linking should be considered fair use.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And yet in other cases, if one were to subclass a very rich and functional class, for instance a class that provides checkout and payment in e-commerce context, it is very likely that such use would require permission from the copyright holder, and as a result, a subclass of this as part of an e-commerce application or website would in this particular situation, be considered a derivative work.&lt;/p&gt;&#xA;" OwnerUserId="606" LastEditorUserId="606" LastEditDate="2015-08-14T14:49:10.983" LastActivityDate="2015-08-14T14:49:10.983" CommentCount="1" />
  <row Id="1581" PostTypeId="2" ParentId="1574" CreationDate="2015-08-14T07:57:56.067" Score="4" Body="&lt;p&gt;The &lt;a href=&quot;https://gnu.org/licenses/&quot; rel=&quot;nofollow&quot;&gt;GNU Project licenses&lt;/a&gt; are specific about what counts as source for a work: redistribution requires that one must also make available to every recipient the “&lt;strong&gt;complete corresponding source&lt;/strong&gt;” for that very same work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This ensures the recipient has effective freedom to modify and redistribute the same work themselves.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, for a work licensed with that wording, it is a violation to fail to offer the source for &lt;em&gt;the same&lt;/em&gt; work as was distributed to the recipient. In other words, source for some other version does not satisfy that clause.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Complete corresponding source for the work is a pre-requisite for the recipient's effective freedom to modify and/or redistribute the work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For non-copyleft licenses, the redistributor is not required to distribute source at all. So they do not ensure the recipient's freedom.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So if you want to ensure recipients can get the complete corresponding source for the same work they received, license that work with terms of a &lt;a href=&quot;https://gnu.org/copyleft/copyleft.html&quot; rel=&quot;nofollow&quot;&gt;copyleft from the FSF&lt;/a&gt;, such as &lt;a href=&quot;https://gnu.org/licenses/gpl.html&quot; rel=&quot;nofollow&quot;&gt;GNU GPL v3 or later&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="2307" LastActivityDate="2015-08-14T07:57:56.067" CommentCount="0" />
  <row Id="1582" PostTypeId="1" CreationDate="2015-08-14T11:59:04.477" Score="2" ViewCount="61" Body="&lt;p&gt;If I release a program specification (documentation, no code or limited code) under the AGPL, and the program itself under the AGPL, the two are obviously compatible. But, the documentation would not be compatible with BY-SA works (say, Wikipedia or Stack Exchange).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If I release the specification under BY-SA instead, am I &quot;losing&quot; any of the copyleft strength of the AGPL. i.e. enabling someone to create a non-copyleft work where they couldn't before?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;(This obviously rest on the judgment of to what extent the code is  a derivative work of the specification. I will obviously accept an answer of &quot;it depends&quot;, &quot;undecided&quot;, etc, if those are accurate answers :D )&lt;/p&gt;&#xA;" OwnerUserId="1082" LastActivityDate="2015-08-14T16:13:42.493" Title="Does a CC BY-SA 4.0 specification lose any AGPL3+ benefits?" Tags="&lt;copyleft&gt;&lt;license-compatibility&gt;&lt;cc-by-sa&gt;&lt;agpl-3.0&gt;" AnswerCount="2" CommentCount="1" />
  <row Id="1583" PostTypeId="2" ParentId="1573" CreationDate="2015-08-14T12:00:03.533" Score="1" Body="&lt;p&gt;&lt;em&gt;&quot;My plan is to sell commercial pre-compiled copies of my software at a small cost, while leaving the source code on github for those technically adept to compile it themselves.&quot;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When your application includes iText, and you licensed it under the AGPL, you need to abide by the license conditions, especially section 6 of the AGPL (Conveying Non-Source Forms). The form 6d is essentially what you suggest:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;&quot;Am I permitted to distribute iText binaries?&quot;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When you received iText under the AGPL, you can distribute binaries when you also include the sourcecode or a written offer to provide the sourcecode if asked to do so.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When you bought a commercial license, the conditions are explained in the proprietary license agreement.&lt;/p&gt;&#xA;" OwnerUserId="14" LastActivityDate="2015-08-14T12:00:03.533" CommentCount="0" />
  <row Id="1584" PostTypeId="2" ParentId="1582" CreationDate="2015-08-14T12:06:55.017" Score="3" Body="&lt;p&gt;The AGPL is a software license. It doesn't work well for creative content like documentation. Even the FSF does not recommend to use the GPL-family licenses for documentation. The AGPL is even worse than the GPL, because its addition to the GPL, clauses for using the software over a computer network, is even more nonsensical when it comes to documentation. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The FSF recommends the &lt;a href=&quot;http://www.gnu.org/licenses/fdl-1.3.html&quot; rel=&quot;nofollow&quot;&gt;GNU Free Documentation License&lt;/a&gt; for documentation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am not a lawyer, but by offering the documentation under other conditions than the software itself you will likely not weaken your rights on the software, because documentation and software are independent creative works.&lt;/p&gt;&#xA;" OwnerUserId="14" LastActivityDate="2015-08-14T12:06:55.017" CommentCount="0" />
  <row Id="1585" PostTypeId="2" ParentId="1579" CreationDate="2015-08-14T15:52:36.557" Score="1" Body="&lt;p&gt;This answer is offered as a supplement to FreeRadical's fine exposition, and is focussed on subclasses.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am not sure that it is helpful to focus on individual classes. Copyright law looks at a 'work'. If a class is intrinsically part of a work, and you build code that depends on that class, I think that there's a fair chance that you're making a derived work, regardless of the triviality of the class. I believe that &lt;a href=&quot;http://www.gnu.org/software/classpath/license.html&quot; rel=&quot;nofollow&quot;&gt;The GNU classpath license&lt;/a&gt; was created for this reason, to 'disconnect' all Java classes that use or derive from the JRE's boot classpath from the JRE.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, by this logic, if some interpreter is object-oriented, and the license does not specifically exempt works that use the standard library, you might be deriving from the standard library and be subject to its license. Since PHP and Python are 'permissively' licensed, they don't cause this problem; but other things (oh, here I go mentioning Drupal after suggesting that FreeRadical should not) like Drupal explicitly go here. (So maybe I was wrong to suggest that he edit that reference out.) Drupal isn't an interpreter, it's a library. Imagine that there was some GPL-licensed class library that had a trivial 'Object' class at the bottom of the class hierarchy, I am suspecting here that deriving from the class counts as 'using' the library.&lt;/p&gt;&#xA;" OwnerUserId="554" LastEditorUserId="554" LastEditDate="2015-08-14T16:05:10.093" LastActivityDate="2015-08-14T16:05:10.093" CommentCount="1" />
  <row Id="1586" PostTypeId="2" ParentId="1582" CreationDate="2015-08-14T16:13:42.493" Score="3" Body="&lt;p&gt;A specification is a document describing some programs, in many cases interfaces. Regarding the implication of the licenses it is relevant, what implementing a specification does. I don't know about any law-suits indicating that the the implementation of a specification is forming a derivate or even violating the copyright of the author of the specification. That might be the case though, because most authors of specifications intend it to be implemented multiple times.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So if we assume that implementations of the specification can be done without being influenced by the license of the specification, then we can conclude the following:&#xA;If the implementation is based on your implementation (licensed AGPL) it must be licensed AGPL. If the implementation is independent, it can have any license it's author chooses. The difference how you license the specification so only affects direct derivates of this specification (for instance extensions to the specification). As both AGPL and CC-BY-SA are copyleft-licenses the differences are small. Relevant here is, that AGPL is a license for software, many clauses doesn't make sense for a document. So I would recommend to license it as CC-BY-SA.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Having software under one license and documentation for it under another doesn't implicate any compatibility-problems (you said that having both under AGPL is compatible).&lt;/p&gt;&#xA;" OwnerUserId="55" LastActivityDate="2015-08-14T16:13:42.493" CommentCount="0" />
  <row Id="1587" PostTypeId="2" ParentId="1574" CreationDate="2015-08-15T12:12:07.377" Score="0" Body="&lt;p&gt;When you say that it points to the creator's git repo, I assume you mean their central repository on GitHub. By default, links on GitHub point to the latest version of the code, but it is possible to get a link to a specific version of the code. &lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Navigate to the &quot;Commits&quot; page. &lt;/li&gt;&#xA;&lt;li&gt;Find the commit that corresponds to the release you're using. &lt;/li&gt;&#xA;&lt;li&gt;Navigate to it and select &quot;Browse Files&quot;&lt;/li&gt;&#xA;&lt;li&gt;Copy the url. This link points to the repository as it was at that commit. &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;Alternatively, many repositories use Tags for release versions. You may be able to use a tag to find the proper version. It's also worth noting that a link to the source may not be enough to full-fill the obligations of the license. You may be responsible for hosting the files yourself. It's a bit unclear to me if using a third party (GitHub) to host the source files fulfills the obligation in regards to the LGPL. Particularly if it's not your repository that you're pointing to. I would take a look at the following link for questions about GPL compliance. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://softwarefreedom.org/resources/2008/compliance-guide.html&quot; rel=&quot;nofollow&quot;&gt;https://softwarefreedom.org/resources/2008/compliance-guide.html&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If the creator used GitHub releases, just browse to the release page, find the proper version and download the zipped source files so that you can host it yourself. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;If I'm wrong and it's not a GitHub repository, you may still accomplish this by finding the proper tag and commit. It will just be a little more work. &lt;/p&gt;&#xA;" OwnerUserId="775" LastActivityDate="2015-08-15T12:12:07.377" CommentCount="0" />
  <row Id="1588" PostTypeId="5" CreationDate="2015-08-15T21:56:44.193" Score="0" Body="&lt;p&gt;A derivative, or derived, work is one that derives (hence the name) the core of itself (for example core code, code for extra functionality, or perhaps part of a creative work) from another open work. This is made possible by the various licenses we see, such as the MIT and GPL licenses, and the Creative Commons family of licenses for creative works. In many cases, a derivative work can be made very simply by copying the part of the work you're interested in, incorporating it into your project, and crediting the original author.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Use this tag for questions about these works, including about their legal status and creation.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-08-15T21:56:44.193" LastActivityDate="2015-08-15T21:56:44.193" CommentCount="0" />
  <row Id="1589" PostTypeId="4" CreationDate="2015-08-15T21:56:44.193" Score="0" Body="For questions about works that derive their core from another open work." OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-08-15T21:56:44.193" LastActivityDate="2015-08-15T21:56:44.193" CommentCount="0" />
  <row Id="1590" PostTypeId="5" CreationDate="2015-08-15T22:03:22.703" Score="0" Body="&lt;p&gt;A linked library, in programming, refers to a set of code that is stored in a special file outside of the main codebase, and referred to internally by the codebase. Examples of these are the Windows .dll files, and Java's compiled .jar files can also be linked as libraries.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;These libraries have special legal status in a number of licenses, notably the LGPL, which allows the use of dynamically linked libraries without requiring them to be licensed under the GPL (as the regular GPL would do).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Use this tag on questions regarding the use of linked libraries in open projects.&lt;/p&gt;&#xA;" OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-08-15T22:03:22.703" LastActivityDate="2015-08-15T22:03:22.703" CommentCount="0" />
  <row Id="1591" PostTypeId="4" CreationDate="2015-08-15T22:03:22.703" Score="0" Body="For questions concerning the use of linked libraries such as DLLs and linked JARs." OwnerUserId="98" LastEditorUserId="98" LastEditDate="2015-08-15T22:03:22.703" LastActivityDate="2015-08-15T22:03:22.703" CommentCount="0" />
</posts>